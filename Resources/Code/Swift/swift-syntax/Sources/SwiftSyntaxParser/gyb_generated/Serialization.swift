//// Automatically Generated From Serialization.swift.gyb.
//// Do Not Edit Directly!
//===----------------- Serialization.swift --------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2022 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

@_spi(RawSyntax) import SwiftSyntax

extension SyntaxKind {
  init(serializationCode: CSyntaxKind) {
    switch serializationCode {
    case 0: self = .token
    case 1: self = .unknown
    case 2: self = .unknownDecl
    case 24: self = .unknownExpr
    case 71: self = .unknownStmt
    case 211: self = .unknownType
    case 201: self = .unknownPattern
    case 260: self = .missing
    case 261: self = .missingDecl
    case 262: self = .missingExpr
    case 263: self = .missingStmt
    case 264: self = .missingType
    case 265: self = .missingPattern
    case 92: self = .codeBlockItem
    case 163: self = .codeBlockItemList
    case 93: self = .codeBlock
    case 266: self = .unexpectedNodes
    case 25: self = .inOutExpr
    case 26: self = .poundColumnExpr
    case 165: self = .tupleExprElementList
    case 166: self = .arrayElementList
    case 167: self = .dictionaryElementList
    case 168: self = .stringLiteralSegments
    case 27: self = .tryExpr
    case 249: self = .awaitExpr
    case 269: self = .moveExpr
    case 94: self = .declNameArgument
    case 169: self = .declNameArgumentList
    case 95: self = .declNameArguments
    case 28: self = .identifierExpr
    case 29: self = .superRefExpr
    case 30: self = .nilLiteralExpr
    case 31: self = .discardAssignmentExpr
    case 32: self = .assignmentExpr
    case 33: self = .sequenceExpr
    case 170: self = .exprList
    case 34: self = .poundLineExpr
    case 35: self = .poundFileExpr
    case 247: self = .poundFileIDExpr
    case 240: self = .poundFilePathExpr
    case 36: self = .poundFunctionExpr
    case 37: self = .poundDsohandleExpr
    case 38: self = .symbolicReferenceExpr
    case 39: self = .prefixOperatorExpr
    case 40: self = .binaryOperatorExpr
    case 41: self = .arrowExpr
    case 268: self = .infixOperatorExpr
    case 42: self = .floatLiteralExpr
    case 43: self = .tupleExpr
    case 44: self = .arrayExpr
    case 45: self = .dictionaryExpr
    case 97: self = .tupleExprElement
    case 98: self = .arrayElement
    case 99: self = .dictionaryElement
    case 47: self = .integerLiteralExpr
    case 49: self = .booleanLiteralExpr
    case 270: self = .unresolvedTernaryExpr
    case 50: self = .ternaryExpr
    case 51: self = .memberAccessExpr
    case 271: self = .unresolvedIsExpr
    case 53: self = .isExpr
    case 272: self = .unresolvedAsExpr
    case 54: self = .asExpr
    case 55: self = .typeExpr
    case 100: self = .closureCaptureItem
    case 171: self = .closureCaptureItemList
    case 101: self = .closureCaptureSignature
    case 102: self = .closureParam
    case 172: self = .closureParamList
    case 103: self = .closureSignature
    case 56: self = .closureExpr
    case 57: self = .unresolvedPatternExpr
    case 246: self = .multipleTrailingClosureElement
    case 245: self = .multipleTrailingClosureElementList
    case 58: self = .functionCallExpr
    case 59: self = .subscriptExpr
    case 60: self = .optionalChainingExpr
    case 61: self = .forcedValueExpr
    case 62: self = .postfixUnaryExpr
    case 63: self = .specializeExpr
    case 104: self = .stringSegment
    case 105: self = .expressionSegment
    case 48: self = .stringLiteralExpr
    case 253: self = .regexLiteralExpr
    case 65: self = .keyPathExpr
    case 285: self = .keyPathComponentList
    case 286: self = .keyPathComponent
    case 282: self = .keyPathPropertyComponent
    case 283: self = .keyPathSubscriptComponent
    case 284: self = .keyPathOptionalComponent
    case 287: self = .oldKeyPathExpr
    case 66: self = .keyPathBaseExpr
    case 106: self = .objcNamePiece
    case 173: self = .objcName
    case 67: self = .objcKeyPathExpr
    case 68: self = .objcSelectorExpr
    case 250: self = .postfixIfConfigExpr
    case 69: self = .editorPlaceholderExpr
    case 70: self = .objectLiteralExpr
    case 280: self = .yieldExprList
    case 281: self = .yieldExprListElement
    case 107: self = .typeInitializerClause
    case 3: self = .typealiasDecl
    case 4: self = .associatedtypeDecl
    case 174: self = .functionParameterList
    case 108: self = .parameterClause
    case 109: self = .returnClause
    case 110: self = .functionSignature
    case 111: self = .ifConfigClause
    case 175: self = .ifConfigClauseList
    case 5: self = .ifConfigDecl
    case 6: self = .poundErrorDecl
    case 7: self = .poundWarningDecl
    case 8: self = .poundSourceLocation
    case 112: self = .poundSourceLocationArgs
    case 238: self = .declModifierDetail
    case 113: self = .declModifier
    case 114: self = .inheritedType
    case 176: self = .inheritedTypeList
    case 115: self = .typeInheritanceClause
    case 9: self = .classDecl
    case 96: self = .actorDecl
    case 10: self = .structDecl
    case 11: self = .protocolDecl
    case 12: self = .extensionDecl
    case 116: self = .memberDeclBlock
    case 177: self = .memberDeclList
    case 117: self = .memberDeclListItem
    case 118: self = .sourceFile
    case 119: self = .initializerClause
    case 120: self = .functionParameter
    case 178: self = .modifierList
    case 13: self = .functionDecl
    case 14: self = .initializerDecl
    case 15: self = .deinitializerDecl
    case 16: self = .subscriptDecl
    case 121: self = .accessLevelModifier
    case 122: self = .accessPathComponent
    case 179: self = .accessPath
    case 17: self = .importDecl
    case 123: self = .accessorParameter
    case 18: self = .accessorDecl
    case 180: self = .accessorList
    case 124: self = .accessorBlock
    case 125: self = .patternBinding
    case 181: self = .patternBindingList
    case 19: self = .variableDecl
    case 126: self = .enumCaseElement
    case 182: self = .enumCaseElementList
    case 20: self = .enumCaseDecl
    case 21: self = .enumDecl
    case 22: self = .operatorDecl
    case 226: self = .designatedTypeList
    case 278: self = .designatedTypeElement
    case 127: self = .operatorPrecedenceAndTypes
    case 23: self = .precedenceGroupDecl
    case 183: self = .precedenceGroupAttributeList
    case 128: self = .precedenceGroupRelation
    case 184: self = .precedenceGroupNameList
    case 129: self = .precedenceGroupNameElement
    case 130: self = .precedenceGroupAssignment
    case 131: self = .precedenceGroupAssociativity
    case 185: self = .tokenList
    case 186: self = .nonEmptyTokenList
    case 231: self = .customAttribute
    case 132: self = .attribute
    case 187: self = .attributeList
    case 188: self = .specializeAttributeSpecList
    case 252: self = .availabilityEntry
    case 133: self = .labeledSpecializeEntry
    case 248: self = .targetFunctionEntry
    case 227: self = .namedAttributeStringArgument
    case 228: self = .declName
    case 134: self = .implementsAttributeArguments
    case 135: self = .objCSelectorPiece
    case 189: self = .objCSelector
    case 233: self = .differentiableAttributeArguments
    case 234: self = .differentiabilityParamsClause
    case 235: self = .differentiabilityParams
    case 236: self = .differentiabilityParamList
    case 237: self = .differentiabilityParam
    case 241: self = .derivativeRegistrationAttributeArguments
    case 242: self = .qualifiedDeclName
    case 239: self = .functionDeclName
    case 257: self = .backDeployAttributeSpecList
    case 258: self = .backDeployVersionList
    case 259: self = .backDeployVersionArgument
    case 274: self = .opaqueReturnTypeOfAttributeArguments
    case 276: self = .conventionAttributeArguments
    case 277: self = .conventionWitnessMethodAttributeArguments
    case 267: self = .labeledStmt
    case 72: self = .continueStmt
    case 73: self = .whileStmt
    case 74: self = .deferStmt
    case 75: self = .expressionStmt
    case 190: self = .switchCaseList
    case 76: self = .repeatWhileStmt
    case 77: self = .guardStmt
    case 136: self = .whereClause
    case 78: self = .forInStmt
    case 79: self = .switchStmt
    case 191: self = .catchClauseList
    case 80: self = .doStmt
    case 81: self = .returnStmt
    case 224: self = .yieldStmt
    case 225: self = .yieldList
    case 82: self = .fallthroughStmt
    case 83: self = .breakStmt
    case 192: self = .caseItemList
    case 244: self = .catchItemList
    case 137: self = .conditionElement
    case 138: self = .availabilityCondition
    case 139: self = .matchingPatternCondition
    case 140: self = .optionalBindingCondition
    case 251: self = .unavailabilityCondition
    case 275: self = .hasSymbolCondition
    case 193: self = .conditionElementList
    case 84: self = .declarationStmt
    case 85: self = .throwStmt
    case 86: self = .ifStmt
    case 141: self = .elseIfContinuation
    case 142: self = .elseBlock
    case 143: self = .switchCase
    case 144: self = .switchDefaultLabel
    case 145: self = .caseItem
    case 243: self = .catchItem
    case 146: self = .switchCaseLabel
    case 147: self = .catchClause
    case 229: self = .poundAssertStmt
    case 148: self = .genericWhereClause
    case 194: self = .genericRequirementList
    case 232: self = .genericRequirement
    case 149: self = .sameTypeRequirement
    case 164: self = .layoutRequirement
    case 195: self = .genericParameterList
    case 150: self = .genericParameter
    case 254: self = .primaryAssociatedTypeList
    case 255: self = .primaryAssociatedType
    case 151: self = .genericParameterClause
    case 152: self = .conformanceRequirement
    case 256: self = .primaryAssociatedTypeClause
    case 212: self = .simpleTypeIdentifier
    case 213: self = .memberTypeIdentifier
    case 214: self = .classRestrictionType
    case 215: self = .arrayType
    case 216: self = .dictionaryType
    case 217: self = .metatypeType
    case 218: self = .optionalType
    case 230: self = .constrainedSugarType
    case 219: self = .implicitlyUnwrappedOptionalType
    case 153: self = .compositionTypeElement
    case 196: self = .compositionTypeElementList
    case 220: self = .compositionType
    case 273: self = .packExpansionType
    case 154: self = .tupleTypeElement
    case 197: self = .tupleTypeElementList
    case 221: self = .tupleType
    case 222: self = .functionType
    case 223: self = .attributedType
    case 198: self = .genericArgumentList
    case 155: self = .genericArgument
    case 156: self = .genericArgumentClause
    case 279: self = .namedOpaqueReturnType
    case 157: self = .typeAnnotation
    case 202: self = .enumCasePattern
    case 203: self = .isTypePattern
    case 204: self = .optionalPattern
    case 205: self = .identifierPattern
    case 206: self = .asTypePattern
    case 207: self = .tuplePattern
    case 208: self = .wildcardPattern
    case 158: self = .tuplePatternElement
    case 209: self = .expressionPattern
    case 199: self = .tuplePatternElementList
    case 210: self = .valueBindingPattern
    case 200: self = .availabilitySpecList
    case 159: self = .availabilityArgument
    case 160: self = .availabilityLabeledArgument
    case 161: self = .availabilityVersionRestriction
    case 162: self = .versionTuple
    default:
      fatalError("unknown SyntaxKind serializationCode \(serializationCode)")
    }
  }
}

extension RawTokenKind {
  init(serializationCode: CTokenKind) {
    switch serializationCode {
    case 0: self = .eof
    case 1: self = .associatedtypeKeyword
    case 2: self = .classKeyword
    case 3: self = .deinitKeyword
    case 4: self = .enumKeyword
    case 5: self = .extensionKeyword
    case 6: self = .funcKeyword
    case 7: self = .importKeyword
    case 8: self = .initKeyword
    case 9: self = .inoutKeyword
    case 10: self = .letKeyword
    case 11: self = .operatorKeyword
    case 12: self = .precedencegroupKeyword
    case 13: self = .protocolKeyword
    case 14: self = .structKeyword
    case 15: self = .subscriptKeyword
    case 16: self = .typealiasKeyword
    case 17: self = .varKeyword
    case 18: self = .fileprivateKeyword
    case 19: self = .internalKeyword
    case 20: self = .privateKeyword
    case 21: self = .publicKeyword
    case 22: self = .staticKeyword
    case 23: self = .deferKeyword
    case 24: self = .ifKeyword
    case 25: self = .guardKeyword
    case 26: self = .doKeyword
    case 27: self = .repeatKeyword
    case 28: self = .elseKeyword
    case 29: self = .forKeyword
    case 30: self = .inKeyword
    case 31: self = .whileKeyword
    case 32: self = .returnKeyword
    case 33: self = .breakKeyword
    case 34: self = .continueKeyword
    case 35: self = .fallthroughKeyword
    case 36: self = .switchKeyword
    case 37: self = .caseKeyword
    case 38: self = .defaultKeyword
    case 39: self = .whereKeyword
    case 40: self = .catchKeyword
    case 50: self = .throwKeyword
    case 41: self = .asKeyword
    case 42: self = .anyKeyword
    case 43: self = .falseKeyword
    case 44: self = .isKeyword
    case 45: self = .nilKeyword
    case 46: self = .rethrowsKeyword
    case 47: self = .superKeyword
    case 48: self = .selfKeyword
    case 49: self = .capitalSelfKeyword
    case 51: self = .trueKeyword
    case 52: self = .tryKeyword
    case 53: self = .throwsKeyword
    case 54: self = .__file__Keyword
    case 55: self = .__line__Keyword
    case 56: self = .__column__Keyword
    case 57: self = .__function__Keyword
    case 58: self = .__dso_handle__Keyword
    case 59: self = .wildcardKeyword
    case 88: self = .leftParen
    case 89: self = .rightParen
    case 90: self = .leftBrace
    case 91: self = .rightBrace
    case 92: self = .leftSquareBracket
    case 93: self = .rightSquareBracket
    case 94: self = .leftAngle
    case 95: self = .rightAngle
    case 85: self = .period
    case 87: self = .prefixPeriod
    case 84: self = .comma
    case 118: self = .ellipsis
    case 82: self = .colon
    case 83: self = .semicolon
    case 86: self = .equal
    case 80: self = .atSign
    case 81: self = .pound
    case 96: self = .prefixAmpersand
    case 78: self = .arrow
    case 79: self = .backtick
    case 100: self = .backslash
    case 99: self = .exclamationMark
    case 97: self = .postfixQuestionMark
    case 98: self = .infixQuestionMark
    case 102: self = .stringQuote
    case 120: self = .singleQuote
    case 103: self = .multilineStringQuote
    case 74: self = .poundKeyPathKeyword
    case 69: self = .poundLineKeyword
    case 73: self = .poundSelectorKeyword
    case 68: self = .poundFileKeyword
    case 122: self = .poundFileIDKeyword
    case 121: self = .poundFilePathKeyword
    case 70: self = .poundColumnKeyword
    case 72: self = .poundFunctionKeyword
    case 71: self = .poundDsohandleKeyword
    case 117: self = .poundAssertKeyword
    case 65: self = .poundSourceLocationKeyword
    case 66: self = .poundWarningKeyword
    case 67: self = .poundErrorKeyword
    case 64: self = .poundIfKeyword
    case 62: self = .poundElseKeyword
    case 63: self = .poundElseifKeyword
    case 61: self = .poundEndifKeyword
    case 60: self = .poundAvailableKeyword
    case 123: self = .poundUnavailableKeyword
    case 76: self = .poundFileLiteralKeyword
    case 77: self = .poundImageLiteralKeyword
    case 75: self = .poundColorLiteralKeyword
    case 125: self = .poundHasSymbolKeyword
    case 111: self = .integerLiteral
    case 112: self = .floatingLiteral
    case 113: self = .stringLiteral
    case 124: self = .regexLiteral
    case 115: self = .unknown
    case 105: self = .identifier
    case 107: self = .unspacedBinaryOperator
    case 108: self = .spacedBinaryOperator
    case 110: self = .postfixOperator
    case 109: self = .prefixOperator
    case 106: self = .dollarIdentifier
    case 114: self = .contextualKeyword
    case 119: self = .rawStringDelimiter
    case 104: self = .stringSegment
    case 101: self = .stringInterpolationAnchor
    case 116: self = .yield
    default:
      fatalError("unknown RawTokenKind serializationCode \(serializationCode)")
    }
  }
}

extension RawTriviaPiece {
  init(serializationCode: CTriviaKind, text: SyntaxText) {
    switch serializationCode {
    case 0: self = .spaces(text.count)
    case 1: self = .tabs(text.count)
    case 2: self = .verticalTabs(text.count)
    case 3: self = .formfeeds(text.count)
    case 4: self = .newlines(text.count)
    case 5: self = .carriageReturns(text.count)
    case 6: self = .carriageReturnLineFeeds(text.count / 2)
    case 8: self = .lineComment(text)
    case 9: self = .blockComment(text)
    case 10: self = .docLineComment(text)
    case 11: self = .docBlockComment(text)
    case 12: self = .unexpectedText(text)
    case 13: self = .shebang(text)
    default:
      fatalError("unknown RawTriviaPiece serializationCode \(serializationCode)")
    }
  }
}
