
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class java.lang.Void ///

open class Void: java_swift.JavaObject {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var VoidJNIClass: jclass?

    /// public static final java.lang.Class java.lang.Void.TYPE

    private static var TYPE_FieldID: jfieldID?

    public static var TYPE: java_swift.JavaClass! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "TYPE", fieldType: "Ljava/lang/Class;", fieldCache: &TYPE_FieldID, className: "java/lang/Void", classCache: &VoidJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? java_swift.JavaClass( javaObject: __value ) : nil
        }
    }

    /// private java.lang.Void()

}

