
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface java.lang.reflect.WildcardType ///

public protocol WildcardType: Type {

    /// public abstract java.lang.reflect.Type[] java.lang.reflect.WildcardType.getLowerBounds()

    func getLowerBounds() -> [Type]!

    /// public abstract java.lang.reflect.Type[] java.lang.reflect.WildcardType.getUpperBounds()

    func getUpperBounds() -> [Type]!

}


open class WildcardTypeForward: TypeForward, WildcardType {

    private static var WildcardTypeJNIClass: jclass?

    /// public abstract java.lang.reflect.Type[] java.lang.reflect.WildcardType.getLowerBounds()

    private static var getLowerBounds_MethodID_3: jmethodID?

    open func getLowerBounds() -> [Type]! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getLowerBounds", methodSig: "()[Ljava/lang/reflect/Type;", methodCache: &WildcardTypeForward.getLowerBounds_MethodID_3, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: [TypeForward].self, from: __return )
    }


    /// public default java.lang.String java.lang.reflect.Type.getTypeName()

    private static var getTypeName_MethodID_4: jmethodID?

    override open func getTypeName() -> String! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getTypeName", methodSig: "()Ljava/lang/String;", methodCache: &WildcardTypeForward.getTypeName_MethodID_4, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? String( javaObject: __return ) : nil
    }


    /// public abstract java.lang.reflect.Type[] java.lang.reflect.WildcardType.getUpperBounds()

    private static var getUpperBounds_MethodID_5: jmethodID?

    open func getUpperBounds() -> [Type]! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getUpperBounds", methodSig: "()[Ljava/lang/reflect/Type;", methodCache: &WildcardTypeForward.getUpperBounds_MethodID_5, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: [TypeForward].self, from: __return )
    }


}

