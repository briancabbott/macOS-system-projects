
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface java.util.function.BooleanSupplier ///

public protocol BooleanSupplier: JavaProtocol {

    /// public abstract boolean java.util.function.BooleanSupplier.getAsBoolean()

    func getAsBoolean() -> Bool

}


open class BooleanSupplierForward: JNIObjectForward, BooleanSupplier {

    private static var BooleanSupplierJNIClass: jclass?

    /// public abstract boolean java.util.function.BooleanSupplier.getAsBoolean()

    private static var getAsBoolean_MethodID_2: jmethodID?

    open func getAsBoolean() -> Bool {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "getAsBoolean", methodSig: "()Z", methodCache: &BooleanSupplierForward.getAsBoolean_MethodID_2, args: &__args, locals: &__locals )
        return __return != jboolean(JNI_FALSE)
    }


}

