
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface java.util.Enumeration ///

public protocol Enumeration: JavaProtocol {

    /// public abstract boolean java.util.Enumeration.hasMoreElements()

    func hasMoreElements() -> Bool

    /// public abstract java.lang.Object java.util.Enumeration.nextElement()

    func nextElement() -> java_swift.JavaObject!

}


open class EnumerationForward: JNIObjectForward, Enumeration {

    private static var EnumerationJNIClass: jclass?

    /// public abstract boolean java.util.Enumeration.hasMoreElements()

    private static var hasMoreElements_MethodID_3: jmethodID?

    open func hasMoreElements() -> Bool {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "hasMoreElements", methodSig: "()Z", methodCache: &EnumerationForward.hasMoreElements_MethodID_3, args: &__args, locals: &__locals )
        return __return != jboolean(JNI_FALSE)
    }


    /// public abstract java.lang.Object java.util.Enumeration.nextElement()

    private static var nextElement_MethodID_4: jmethodID?

    open func nextElement() -> java_swift.JavaObject! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "nextElement", methodSig: "()Ljava/lang/Object;", methodCache: &EnumerationForward.nextElement_MethodID_4, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_swift.JavaObject( javaObject: __return ) : nil
    }


}

