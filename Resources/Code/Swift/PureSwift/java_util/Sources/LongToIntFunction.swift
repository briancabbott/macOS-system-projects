
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface java.util.function.LongToIntFunction ///

public protocol LongToIntFunction: JavaProtocol {

    /// public abstract int java.util.function.LongToIntFunction.applyAsInt(long)

    func applyAsInt( value: Int64 ) -> Int

}


open class LongToIntFunctionForward: JNIObjectForward, LongToIntFunction {

    private static var LongToIntFunctionJNIClass: jclass?

    /// public abstract int java.util.function.LongToIntFunction.applyAsInt(long)

    private static var applyAsInt_MethodID_2: jmethodID?

    open func applyAsInt( value: Int64 ) -> Int {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        __args[0] = jvalue( j: value )
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "applyAsInt", methodSig: "(J)I", methodCache: &LongToIntFunctionForward.applyAsInt_MethodID_2, args: &__args, locals: &__locals )
        return Int(__return)
    }

    open func applyAsInt( _ _value: Int64 ) -> Int {
        return applyAsInt( value: _value )
    }

}

