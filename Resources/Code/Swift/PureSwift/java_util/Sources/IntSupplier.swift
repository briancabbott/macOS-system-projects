
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface java.util.function.IntSupplier ///

public protocol IntSupplier: JavaProtocol {

    /// public abstract int java.util.function.IntSupplier.getAsInt()

    func getAsInt() -> Int

}


open class IntSupplierForward: JNIObjectForward, IntSupplier {

    private static var IntSupplierJNIClass: jclass?

    /// public abstract int java.util.function.IntSupplier.getAsInt()

    private static var getAsInt_MethodID_2: jmethodID?

    open func getAsInt() -> Int {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getAsInt", methodSig: "()I", methodCache: &IntSupplierForward.getAsInt_MethodID_2, args: &__args, locals: &__locals )
        return Int(__return)
    }


}

