name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  swiftwasm_bundle_5_4:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: swiftwasm/swiftwasm-action@v5.4
        with:
          shell-action: carton bundle --product TokamakDemo

  swiftwasm_test_5_4:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: swiftwasm/swiftwasm-action@v5.4
        with:
          shell-action: carton test

  swiftwasm_bundle_5_5:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: swiftwasm/swiftwasm-action@v5.5
        with:
          shell-action: carton bundle --product TokamakDemo

  swiftwasm_test_5_5:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: swiftwasm/swiftwasm-action@v5.5
        with:
          shell-action: carton test

  core_macos_build:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2
      - name: Run the test suite on macOS, build the demo project for iOS
        shell: bash
        run: |
          set -ex
          sudo xcode-select --switch /Applications/Xcode_13.0.app/Contents/Developer/
          # avoid building unrelated products for testing by specifying the test product explicitly
          swift build --product TokamakPackageTests
          `xcrun --find xctest` .build/debug/TokamakPackageTests.xctest ||
            (cp -r /var/folders/*/*/*/*Tests . ; exit 1)

          rm -rf Sources/TokamakGTKCHelpers/*.c

          xcodebuild -version

          # Make sure Tokamak can be built on macOS so that Xcode autocomplete works.
          # Disable macOS builds until Monterey is available on GHA.
          # xcodebuild -scheme TokamakDemo -destination 'generic/platform=macOS' \
          #   CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO | \
          #   xcpretty --color

          cd "NativeDemo"
          xcodebuild -scheme iOS -destination 'generic/platform=iOS' \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO | \
            xcpretty --color
          cd ..

          ./benchmark.sh

      - name: Upload failed snapshots
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: Failed snapshots
          path: '*Tests'

  gtk_macos_build:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2
      - name: Build the GTK renderer on macOS
        shell: bash
        run: |
          set -ex
          sudo xcode-select --switch /Applications/Xcode_13.0.app/Contents/Developer/

          brew install gtk+3

          make build

  gtk_ubuntu_18_04_build:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Build the GTK renderer on Ubuntu 18.04
        shell: bash
        run: |
          set -ex
          sudo apt-get update
          sudo apt-get install libgtk+-3.0 gtk+-3.0

          make build

  gtk_ubuntu_20_04_build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Build the GTK renderer on Ubuntu 20.04
        shell: bash
        run: |
          set -ex
          sudo apt-get update
          sudo apt-get install libgtk+-3.0 gtk+-3.0

          make build
