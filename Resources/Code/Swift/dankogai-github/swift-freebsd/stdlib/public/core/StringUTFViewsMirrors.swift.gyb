//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2015 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See http://swift.org/LICENSE.txt for license information
// See http://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

%import gyb
%TMirrorDecl = gyb.parseTemplate("../common/MirrorDecl.gyb")
%TMirrorConformance = gyb.parseTemplate("../common/MirrorConformance.gyb")
%TMirrorBoilerplate = gyb.parseTemplate("../common/MirrorBoilerplate.gyb")

% for Self in ['UTF8View', 'UTF16View', 'UnicodeScalarView']:
%   MirrorDecl = gyb.executeTemplate(TMirrorDecl,introspecteeType=Self)
%   MirrorConformance = gyb.executeTemplate(TMirrorConformance,introspecteeType=Self)
%   MirrorBoilerplate = gyb.executeTemplate(TMirrorBoilerplate,introspecteeType=Self)

extension String {
  ${MirrorDecl} {
    ${MirrorBoilerplate}

      var count: Int { return _value.startIndex.distanceTo(_value.endIndex) }

      subscript(i: Int) -> (String, _MirrorType) {
        _precondition(i >= 0 && i < count, "_MirrorType access out of bounds")
        // FIXME(performance): optimize for sequential access.
        return ("[\(i)]", _reflect(_value[_value.startIndex.advancedBy(i)]))
      }

      var summary: String { return _value.description }

      var quickLookObject: PlaygroundQuickLook? { return .Some(.Text(summary)) }
  }
}
