#!/bin/sh
#
# runtest -- basically all this script does is find the proper expect shell
# and then
#            run BlueGnu. <neurdenburgj@acm.org>
#

#
# Get the execution path to this script and the current directory.
#
execpath=`echo ${0-.} | sed  -e 's@/[^/]*$@@'`
# rootme=`pwd`

#
# get the name by which bluegnu was invoked and extract the config triplet
#
bluegnu=`echo ${0-.} | sed -e 's@^.*/@@'`
target=`echo $bluegnu | sed -e 's/-runtest$//'`
if [ "$target" != runtest ] ; then
    target="--target ${target}"
else
    target=""
fi

#
# Find the right expect binary to use. If a variable EXPECT exists,
# it takes precedence over all other tests. Otherwise look for a freshly
# built one, and then use one in the path.
#
if [ x"$EXPECT" != x ] ; then
  expectbin=$EXPECT
else
  if [ -x "$execpath/expect" ] ; then
    expectbin=$execpath/expect
  else
      expectbin=expect
    fi
fi

# just to be safe...
if [ -z "$expectbin" ]; then
  echo "ERROR: No expect shell found"
  exit 1
fi

#
# Extract a few options from the option list.
#
verbose=0
debug=""
for a in "$@" ; do
  case $a in	    
      -v|--v|-verb*|--verb*)    verbose=`expr $verbose + 1`;;
      -D0|--D0)       debug="-D 0" ;;
      -D1|--D1)       debug="-D 1" ;;
  esac
done

if expr $verbose \> 0 > /dev/null ; then
  echo Expect binary is $expectbin
fi

#
# find runtest.exp. First we look in it's installed location, otherwise
# start if from the source tree.
#
for i in $execpath/../lib/bluegnu $execpath ; do
    if expr $verbose \> 1 > /dev/null ; then
	echo Looking for $i/runtest.exp.
    fi  
    if [ -f $i/runtest.exp ] ; then
	runpath=$i
	if expr $verbose \> 0 > /dev/null ; then
	    echo Using $i/runtest.exp as main test driver
	fi
    fi
done
# check for an environment variable
if [ x"$BLUEGNULIBS" != x ] ; then
    runpath=$BLUEGNULIBS
    if expr $verbose \> 0 > /dev/null ; then
	echo Using $BLUEGNULIBS/runtest.exp as main test driver
    fi
fi
if [ x"$runpath" = x ] ; then
    echo "ERROR: runtest.exp does not exist."
    exit 1
fi

exec $expectbin $debug -- $runpath/runtest.exp $target ${1+"$@"}
