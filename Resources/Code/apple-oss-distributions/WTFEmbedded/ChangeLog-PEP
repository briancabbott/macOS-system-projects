2013-08-05  Benjamin Poulain  <bpoulain@apple.com>

        Disable <meter> by default on iOS, it is enabled through the xconfig files
        https://bugs.webkit.org/show_bug.cgi?id=119503

        Merge opensource r153730 to fix <rdar://problem/14652512>.

        Reviewed by Alexey Proskuryakov.

        * wtf/FeatureDefines.h:

2013-08-04  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/14449832> Lots of false positive leaks in JSC FastMalloc zone in MobileSafari

        Merge ToT WebKit r153455.

        Merged the second part of the fix.

    2013-07-29  Mark Rowe  <mrowe@apple.com>

        <rdar://problem/14528244> Tons of FastMalloc leaks reported by leaks of objects that have already been deallocated

        Reviewed by Sam Weinig.

        * wtf/FastMalloc.cpp:
        (WTF::TCMalloc_Central_FreeList::enumerateFreeObjects): Mark objects in the transfer cache as being free.

2013-08-02  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/14640277> iOS: Shrink Vectors with inline capacity. (119295)

        Merge ToT WebKit r153617.

    2013-07-31  Andreas Kling  <akling@apple.com>

        Shrink Vectors with inline capacity.
        <http://webkit.org/b/119295>
        <rdar://problem/14598360>

        Reviewed by Anders Carlsson.

        Pack Vector::m_size next to VectorBufferBase::m_capacity so there's no space wasted
        on padding when sizeof(T) >= 8. Since m_size is not conceptually part of the buffer,
        I just using'ed it into Vector.

        * wtf/SizeLimits.cpp:
        * wtf/Vector.h:
        (WTF::VectorBufferBase::VectorBufferBase):
        (WTF::VectorBuffer::VectorBuffer):
        (WTF::Vector::Vector):
        (WTF::::Vector):

2013-08-02  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/14449832> Lots of false positive leaks in JSC FastMalloc zone in MobileSafari

        Merge ToT WebKit r153635.

    2013-08-01  Mark Rowe  <mrowe@apple.com>

        <rdar://problem/14528244> False-positive leaks from FastMalloc.

        A logic error in the page map enumeration code within FastMalloc could result in a subset of the memory regions
        owned by FastMalloc being skipped by the malloc zone enumeration code used by leaks and other performance tools.
        If the only reference to an allocated object lived within one of the skipped memory regions, leaks would believe
        it had been leaked since it would not find any references to the object.

        The logic error manifested when a FastMalloc span owned a region of memory that crossed a 16MB address space boundary,
        and when there was one or more other spans immediately after it in the address space. Crossing the 16MB address space
        boundary means that the start and end points of the span are in different leaf nodes of the page map trie, and the
        code within the page map's visitValues method didn't correctly account this case when skipping to the end of the span
        after visiting it. It would resume iterating from the start of the next leaf node rather than continuing to skip values
        until the end of the span was passed. The value representing the end of the span would then be processed as if it were
        the start of a new span, and more values would be skipped even though they may contain actual spans.

        The solution is to rework the algorithm used in visitValues so that it will skip the correct number of values even when
        some of the values are in different leaf nodes. This is a more involved change than it may seem since it's also necessary
        to deal with the case where a memory region spans two separate root nodes, which can happen if the region happens to cross
        a 64GB boundary in the address space.

        Reviewed by Geoff Garen.

        * wtf/TCPageMap.h:
        (TCMalloc_PageMap3::visitValues): Use a single loop to iterate, with the loop index being the key in to the page map in the
        same form as used by get and set. This allows us to correctly deal with the index being skipped to a different intermediate or
        root node as a result of visiting a span that crosses a 16MB boundary in memory.
        (TCMalloc_PageMap2::visitValues): Ditto, but without having to deal with intermediate nodes.

2013-07-31  Andy Estes  <aestes@apple.com>

        <rdar://problem/14601537> iOS: CodeBlock::m_argumentValueProfiles wastes a lot of memory. (118852)

        Merged ToT WebKit r152848.

    2013-07-18  Andreas Kling  <akling@apple.com>

        CodeBlock::m_argumentValueProfiles wastes a lot of memory.
        <http://webkit.org/b/118852>
        <rdar://problem/14481659>

        Reviewed by Anders Carlsson.

        Add Vector::resizeToFit(size), like resize() but without growth padding.

        * wtf/Vector.h:
        (WTF::::resizeToFit):

2013-07-08  Antti Koivisto  <antti@apple.com>

        <rdar://problem/14366932> REGRESSION?: Safari hung scrolling through continuous reading list mode (main thread blocked on Web thread blocked on background thread pruning TileLayerPool)

        Merge open source r152449.

    2013-07-08  Antti Koivisto  <antti@apple.com>

        Add Deque::removeLast
        https://bugs.webkit.org/show_bug.cgi?id=118466

        Reviewed by Andreas Kling.
        
        Deque can remove both the first and the last element efficiently.
        
        Test: TestWebKitAPI/Tests/WTF/Deque.cpp

        * wtf/Deque.h:
        (WTF::::takeLast):
        (WTF::::removeLast):

2013-06-26  Anders Carlsson  <andersca@apple.com>

        <rdar://problem/14279905> Add JSStringCreateWithCharactersNoCopy SPI (118074)

        Merge ToT WebKit r152052.

    2013-06-26  Anders Carlsson  <andersca@apple.com>

        Add JSStringCreateWithCharactersNoCopy SPI
        https://bugs.webkit.org/show_bug.cgi?id=118074
        <rdar://problem/14279905>

        Reviewed by Geoffrey Garen.

        * wtf/text/StringImpl.cpp:
        (WTF::StringImpl::createFromLiteral):
        Use the new ConstructWithoutCopying constructor, passing DoesHaveTerminatingNullCharacter to it.
        Change the other createFromLiteral overload to just call the first.

        (WTF::StringImpl::createWithoutCopying):
        Add helper functions for creating strings that shouldn't copy their underlying data.

        * wtf/text/StringImpl.h:
        (WTF::StringImpl::StringImpl):
        Rename the ConstructFromLiteralTag constructor enum to ConstructWithoutCopyingTag. Change the constructor
        to take an enum that states whether the string has a terminating null character or not.

        (WTF::StringImpl::createFromLiteral):
        Call createWithoutCopying.

        (WTF::StringImpl::requiresCopy):
        Rename this from isASCIILiteral() and make it more generic so it can handle 16-bit strings as well.

        (WTF::StringImpl::isolatedCopy):
        If this string doesn't have to be copied, just create a new StringImpl object that references the current data.

2013-05-23  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource r150228.

    2013-05-16  Benjamin Poulain  <bpoulain@apple.com>

        Add the symbol WTFInvokeCrashHook back for binary compatibility.

        Reviewed by Ryosuke Niwa.

        * wtf/Assertions.cpp:
        * wtf/Assertions.h:

2013-05-23  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource WebKit r150196 for PLT work.

    2013-05-16  Benjamin Poulain  <benjamin@webkit.org>

        Crash properly on iOS
        https://bugs.webkit.org/show_bug.cgi?id=115782

        Reviewed by Darin Adler.

        Improve crash handling. <rdar://problem/13842771>

        * wtf/Assertions.cpp:
        * wtf/Assertions.h:

2013-05-15  Oliver Hunt  <oliver@apple.com>

        <rdar://problem/13888177> REGRESSION: Crash beneath createScriptCallStackFromException @ www.cars.com
        Merged ToT WebKit 150160

    2013-05-15  Oliver Hunt  <oliver@apple.com>

        RefCountedArray needs to use vector initialisers for its backing store
        https://bugs.webkit.org/show_bug.cgi?id=116194

        Reviewed by Gavin Barraclough.

        Use VectorOperations to operate on the backing store

        * wtf/RefCountedArray.h:
        (WTF::RefCountedArray::RefCountedArray):
        (WTF::RefCountedArray::operator=):
        (WTF::RefCountedArray::~RefCountedArray):

2013-05-15  Eric Carlson  <eric.carlson@apple.com>

        Merged ToT WebKit r149741.

    2013-05-08  Eric Carlson  <eric.carlson@apple.com>

                [Mac] Inband text tracks are not in track menu on Lion
                https://bugs.webkit.org/show_bug.cgi?id=115740

                Reviewed by Dean Jackson.

                * wtf/Platform.h: AVFOUNDATION_TEXT_TRACK_SUPPORT -> AVFOUNDATION_MEDIA_SELECTION_GROUP

2013-05-15  Eric Carlson  <eric.carlson@apple.com>

        Merged ToT WebKit r149503 and r149510.

    2013-05-02  Eric Carlson  <eric.carlson@apple.com>

            Caption menu does not include in-band captions
            https://bugs.webkit.org/show_bug.cgi?id=111934

            Reviewed by Dean Jackson.

            * wtf/Platform.h: Define HAVE_AVFOUNDATION_TEXT_TRACK_SUPPORT on 10.8 and higher. Added
                HAVE_AVFOUNDATION_LEGIBLE_OUTPUT_SUPPORT.

2013-05-09  Michael Saboff  <msaboff@apple.com>

        Merged ToT WebKit r149821.

    2013-05-08  Michael Saboff  <msaboff@apple.com>

        JSC: There should be a disassembler for ARM Thumb 2
        https://bugs.webkit.org/show_bug.cgi?id=115827

        Reviewed by Filip Pizlo.

        Added a new disassembler for ARMv7 Thumb2 instructions for use by the JSC debugging
        and profiling code.  Enabled the disassembler for IOS bulds.

        * wtf/Platform.h:

2013-05-05  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource r148857 early as it is needed for the tagged pointers work.

    2013-04-21  Benjamin Poulain  <benjamin@webkit.org>

        Improve StringImpl code density for older ARM hardware
        https://bugs.webkit.org/show_bug.cgi?id=114898

        Reviewed by Geoffrey Garen.

        Reduce the number of instructions needed for StringImpl::deref
        on older ARM hardware.

        The extra indirection should have a negligible impact on x86_64.

        * wtf/text/StringImpl.cpp:
        (WTF::StringImpl::destroy):
        * wtf/text/StringImpl.h:
        (StringImpl):
        (WTF::StringImpl::deref):

2013-05-01  Michael Saboff  <msaboff@apple.com>

        <rdar://problem/13669956> Safari crashed in JSC::SlotVisitor::finalizeUnconditionalFinalizers while loading mobile.twitter.com/graeters on J86

        Merge ToT WebKit r149472.

    2013-05-01  Michael Saboff  <msaboff@apple.com>

        FastMalloc.cpp should use system defined page size instead of literal constant
        https://bugs.webkit.org/show_bug.cgi?id=115502

        Reviewed by Geoffrey Garen.

        Updated kPageShift to be PAGE_SHIFT for Mac.  Changed kMaxSize to be fixed at 32K.
        Updated kNumClasses for 4K and 16K page sizes.

        * wtf/FastMalloc.cpp:
        kPageShift: Changed this to be PAGE_SHIFT on mac.

2013-04-25  Dean Jackson  <dino@apple.com>

        <rdar://problem/13711261> Allow web content to have letterpress-style text

        Reviewed by Tim Horton.

        Add an ENABLE_LETTERPRESS flag.

        * wtf/Platform.h:

2013-04-03  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/12787563> FastMalloc/TCMalloc should release memory back to iOS during memory notifications

        Merged ToT WebKit r147595.

        Use MADV_FREE_REUSE/MADV_FREE_REUSABLE instead of MADV_FREE on iOS.

    2013-04-03  Pratik Solanki  <psolanki@apple.com>

        Enable HAVE_MADV_FREE_REUSE on iOS
        https://bugs.webkit.org/show_bug.cgi?id=113892
        <rdar://problem/12787563>

        Reviewed by Mark Rowe.

        * wtf/Platform.h:

2013-03-29  Mark Hahnenberg  <mhahnenberg@apple.com>

        <rdar://problem/13351449> Objective-C API: Move JSC framework to public frameworks directory on Innsbruck

        Reviewed by NOBODY (OOPS!).

        Change JavaScriptCore to be installed into the public Frameworks directory. Also add a symlink between the 
        new and old location in case other projects link against JSC's absolute path.

        * Configurations/Base.xcconfig:

2013-03-25  David Kilzer  <ddkilzer@apple.com>

        WTF::binarySearchImpl() should compile with -Wshorten-64-to-32

        Merge ToT WebKit r146774.

        Part of: <rdar://problem/12484593> AutoBotCF (-Wshorten-64-to-32): WebBookmarks_Sim-282 failed to build ( 'sqlite3_int64' (aka 'long long') to 'int' )

    2013-03-25  David Kilzer  <ddkilzer@apple.com>

        WTF::binarySearchImpl() should compile with -Wshorten-64-to-32
        <http://webkit.org/b/113170>

        Reviewed by Dan Bernstein.

        Fixes the following build failure:

            /usr/local/include/wtf/StdLibExtras.h:190:30: error: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Werror,-Wshorten-64-to-32]
                    int pos = (size - 1) >> 1;
                        ~~~   ~~~~~~~~~~~^~~~
            1 error generated.

        * wtf/StdLibExtras.h:
        (WTF::binarySearchImpl): Switch type from int to size_t.

2013-03-18  Benjamin Poulain  <benjamin@webkit.org>

        Merge OpenSource WebKit r146170.

    2013-03-18  Benjamin Poulain  <benjamin@webkit.org>

        [iOS] Make a UChar string equal() based on the LChar version
        https://bugs.webkit.org/show_bug.cgi?id=112495

        Reviewed by David Kilzer.

        * wtf/text/StringImpl.h:
        (WTF::equal):
        Create a equal() function for UChar based on the work done for LChar.

        On A6, this is a speed up of about 40% for any string of 2 or more characters.
        It is slower by 8% on a single UChar comparison.

2013-03-15  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource WebKit r145949.

    2013-03-15  Benjamin Poulain  <bpoulain@apple.com>

        [iOS] Update StringImpl's equal to have a single version on all supported Apple CPUs
        https://bugs.webkit.org/show_bug.cgi?id=112400

        Reviewed by Michael Saboff.

        * wtf/text/StringImpl.h:
        (WTF::equal):
        Tweak the code to make it work on older Apple CPUs:
        -Use external "ouput" variable instead of the registers R9 and R12. This gets rid
         of some register pressure previously imposed on the compiler. (Clang nicely
         choose R9 and R12 when needed, following iOS ABI).
        -Instead of using "R3" for storing the length / 4, update the length by -4 on
         each iteration and work in the negative space for the tail. This frees one register
         which is then used for isEqual.
        -Get rid of the unconditional branch from the loop. By using subs and working in the
         negative space, we can test for the Carry flag to jump back to the next LDR.

2013-03-15  Benjamin Poulain  <bpoulain@apple.com>

        Merge Open Source WebKit r145935.

    2013-03-15  Benjamin Poulain  <bpoulain@apple.com>

        [iOS] Fix the length pass to memcmp in the fallback versions of String's equal
        https://bugs.webkit.org/show_bug.cgi?id=112463

        Reviewed by Ryosuke Niwa.

        * wtf/text/StringImpl.h:
        (WTF::equal): It might be a good idea to compare the full UChar strings...

2013-03-14  Benjamin Poulain  <bpoulain@apple.com>

        Enable dtoa 64bits optimization on ARM64

        Reviewed by Pratik Solanki.

        * wtf/dtoa.cpp:
        dtoa has some shortcuts for 64 bits, enable them on ARM64.

2013-03-13  Benjamin Poulain  <bpoulain@apple.com>

        Enable whole machine word string comparison on ARM64

        Reviewed by Oliver Hunt.

        * wtf/text/StringImpl.h:
        ARMv8 perfectly handle unaligned load. We can enable the code of X86_64
        for String's equal() operations.

        There is no gain from a tight ASM version, which indicated the function is
        bounded by memory speed and not CPU speed.

        With this enabled, comparing strings take 24% less time on average.

2013-03-13  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource WebKit r145748.

    2013-03-13  Benjamin Poulain  <bpoulain@apple.com>

        [iOS] Add optimized version of StringImpl's equal(LChar*,LChar*) for Apple CPUs
        https://bugs.webkit.org/show_bug.cgi?id=112202

        Reviewed by Gavin Barraclough.

        * Source/WTF/wtf/Platform.h:
        Make the macro WTF_ARM_ARCH_VERSION valid on any architecture.
        * wtf/text/StringImpl.h:
        (WTF::equal):
        On ARMv7S, the new version is about 11% percent faster than the simple loop.
        On ARMv7 classic, memcmp is a little faster than the simple loop on Apple A5.

2013-03-10  Eric Carlson  <eric.carlson@apple.com>

        <rdar://problem/12044942> TLF: Update captions support to meet Web broadcast requirements

        Reviewed by Dean Jackson.

        * wtf/Platform.h: Define WTF_USE_PLATFORM_TEXT_TRACK_MENU.

2013-03-01  Eric Carlson  <eric.carlson@apple.com>

        <rdar://problem/12868974> Hook up iOS user preferences to captions

        Reviewed by David Kilzer.

        * wtf/Platform.h: Define HAVE_MEDIA_ACCESSIBILITY_FRAMEWORK on iOS.

2013-02-28  Eric Carlson  <eric.carlson@apple.com>

        Required for <rdar://problem/12044942> TLF: Update captions support to meet Web broadcast requirements

        Merge ToT WebKit r144336 and r144367.

    2013-02-28  Eric Carlson  <eric.carlson@apple.com>

            [Mac] use HAVE() macro instead of version check
            https://bugs.webkit.org/show_bug.cgi?id=111087

            Reviewed by Dean Jackson.

            * wtf/Platform.h: Define HAVE_MEDIA_ACCESSIBILITY_FRAMEWORK.

2013-02-25  Benjamin Poulain  <bpoulain@apple.com>

        Remove iOS specific code from StackBounds

        Reviewed by Pratik Solanki.

        The OpenSource patch https://bugs.webkit.org/show_bug.cgi?id=110813 fixes the usage of StackBounds
        on iOS. It allows safe recursion from the UI thread.

        This patch removes the workaround for the assertions in StackBounds.

        * wtf/StackBounds.cpp:
        * wtf/StackBounds.h:
        (WTF::StackBounds::checkConsistency):

2013-02-20  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/13135808> Debug builds asserts after merge#5

        Reviewed by David Kilzer.

        Code in WeakPtr.h and Supplementable.h wants to assert that the data is accessed from only
        one thread. However, it is okay on iOS to access the data from the WebThread or the main UI
        thread if it was allocated on one of those threads. Fix the aseertions to accomodate this
        constraint. We have new WTF methods that set and return the ThreadIdentifier for WebThread
        and main thread.

        * wtf/MainThread.h:
        * wtf/WeakPtr.h:
        * wtf/mac/MainThreadMac.mm:
        (WTF::initializeApplicationUIThreadIdentifier):
        (WTF::initializeWebThreadIdentifier):
        (WTF::canAccessThreadLocalDataForThread):

2013-02-14  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/13208373> Set GCC_WARN_64_TO_32_BIT_CONVERSION=NO for 64-bit archs on all WebKit projects (except ANGLE)

        Merge ToT WebKit r142903.

    2013-02-14  David Kilzer  <ddkilzer@apple.com>

        [Mac] Clean up WARNING_CFLAGS
        <http://webkit.org/b/109747>
        <rdar://problem/13208373>

        Reviewed by Mark Rowe.

        * Configurations/Base.xcconfig: Use
        GCC_WARN_64_TO_32_BIT_CONVERSION to enable and disable
        -Wshorten-64-to-32 rather than WARNING_CFLAGS.

2013-02-14  Dan Bernstein  <mitz@apple.com>

        Merged TOT WebKit r142924.

    2013-02-14  Dan Bernstein  <mitz@apple.com>

        No easy way to use a RetainPtr as a key in a HashMap using object (rather than pointer) equality
        https://bugs.webkit.org/show_bug.cgi?id=109864

        Reviewed by Sam Weinig and Benjamin Poulain.

        Added RetainPtrObjectHashTraits and RetainPtrObjectHash, which use CFEqual
        and CFHash.

        * wtf/RetainPtr.h:
        (RetainPtrObjectHashTraits):
        (WTF::RetainPtrObjectHashTraits::emptyValue):
        (WTF::RetainPtrObjectHashTraits::constructDeletedValue):
        (WTF::RetainPtrObjectHashTraits::isDeletedValue):
        (WTF):
        (WTF::RetainPtrObjectHash::hash):
        (WTF::RetainPtrObjectHash::equal):
        (RetainPtrObjectHash):

2013-02-11  David Kilzer  <ddkilzer@apple.com>

        [iOS] Upstream changes to Platform.h

        Merge ToT WebKit r142537.

    2013-02-11  David Kilzer  <ddkilzer@apple.com>

        [iOS] Upstream changes to Platform.h
        <http://webkit.org/b/109459>

        Reviewed by Benjamin Poulain.

        * wtf/Platform.h:
        - Changes for armv7s.
        - Add ENABLE() definitions for DASHBOARD_SUPPORT and WEBGL.
        - Re-sort ENABLE() and USE() macros.
        - Remove ENABLE() macros for JIT, LLINT and YARR_JIT to enable
          on iOS Simulator.  They are already defined below.
        - Turn off HAVE(HOSTED_CORE_ANIMATION) for iOS.
        - Turn on USE(COREMEDIA) for iOS 6.0 and later.

2013-02-11  Enrica Casucci  <enrica@apple.com>

        Merge ToT WebKit r142533.

    2013-02-11  Enrica Casucci  <enrica@apple.com>

        Add ENABLE_DELETION_UI to control the use of the deletion UI.
        https://bugs.webkit.org/show_bug.cgi?id=109463.
        
        ENABLE_DELETION_UI is set to 1 by default for
        all ports. It is explicitly enabled for Mac and disabled for iOS.

        Reviewed by Ryosuke Niwa.

        * wtf/Platform.h:


2013-02-10  David Kilzer  <ddkilzer@apple.com>

        Miscellaneous header clean-up

        Reviewed by Dan Bernstein.

        * wtf/Assertions.h: Swap <wtf/Platform.h> and <stddef.h> to
        match open source.

2013-02-08  Michael Saboff  <msaboff@apple.com>

        Merge of OpenSource r142336.

    2013-02-08  Michael Saboff  <msaboff@apple.com>

            ARM_NEON Inline Assembly for copyLCharsFromUCharSource() inefficient for aligned destinations
            https://bugs.webkit.org/show_bug.cgi?id=109335

            Reviewed by Filip Pizlo.

            Change a "do while" to a "while" so that we don't copy single characters to align the
            destination when it is already aligned.

            * wtf/text/ASCIIFastPath.h:
            (WTF::copyLCharsFromUCharSource):

2013-02-08  Michael Saboff  <msaboff@apple.com>

        <rdar://problem/13183010> ARM64: Add inline assembly path to copyLCharsFromUCharSource()

        Reviewed by Benjamin Poulain and Oliver Hunt.

        Similar to what exists for the ARM_NEON case, added an ARM64 path that uses the multiple
        structure SIMD load and stores.  This tests out neutral on sunspider, v8 and kraken.

        * wtf/text/ASCIIFastPath.h:
        (WTF::copyLCharsFromUCharSource):

2013-02-08  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/13168634> safari_memory.rb doesn't run to completion due to "Interrupted by Operator"

        Merge ToT WebKit r141955.

    2013-02-05  Oliver Hunt  <oliver@apple.com>

        Disable TCMalloc hardening as it's breaking leaks.

        Reviewed by Gavin Barraclough.

        * wtf/FastMalloc.cpp:

2013-02-07  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource r142183.

    2013-02-07  Benjamin Poulain  <bpoulain@apple.com>

        Fix an incorrect comment from r142163

        Unreviewed.

        * wtf/MainThread.h:
        I accidentally copied PLATFORM(IOS) instead of USE(WEB_THREAD) for the #ifdef closing.

2013-02-07  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource r142163.

    2013-02-07  Benjamin Poulain  <bpoulain@apple.com>

        Upstream iOS isWebThread() and isUIThread()
        https://bugs.webkit.org/show_bug.cgi?id=109130

        Reviewed by Sam Weinig.

        On iOS, it is sometimes necessary to differenciate the thread running WebCore,
        and the thread running the UI. This patch upstream those functions.

        * wtf/MainThread.cpp:
        * wtf/MainThread.h:
        Disable the legacy initializer as it is incorrect when using the WebThread to run WebCore.
        (WTF::isWebThread):
        (WTF::isUIThread):
        Return true when the current thread is the Web/UI thread.

        * wtf/mac/MainThreadMac.mm:
        (WTF::isUIThread):
        (WTF::isWebThread):

        * wtf/text/AtomicString.cpp:
        (WTF::AtomicStringTable::create):
        Use the newly added methods.

2013-02-05  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource r141932.

    2013-02-05  Benjamin Poulain  <bpoulain@apple.com>

        Tidy up StackBounds
        https://bugs.webkit.org/show_bug.cgi?id=108889

        Reviewed by Ryosuke Niwa.

        * wtf/StackBounds.h:
        (StackBounds):
        (WTF::StackBounds::isSafeToRecurse):
        (WTF::StackBounds::size):
        Adopt a more conventional style for a multiline branch.

        (WTF::StackBounds::StackBounds):
        (WTF::StackBounds::current):
        (WTF::StackBounds::recursionLimit):
        Make those method private.

        Making the constructor private ensure initialize() is alwasy called on any StackBounds.

2013-02-05  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource WebKit r141919.

    2013-02-05  Benjamin Poulain  <bpoulain@apple.com>

        Rationalize the use of iOS/Mac #defines in Assertions.cpp
        https://bugs.webkit.org/show_bug.cgi?id=108870

        Reviewed by David Kilzer.

        * wtf/Assertions.cpp: Instead of using PLATFORM(MAC) and assume it works for iOS and OS X,
        use CF as the guard for CFString. Similarily, USE_APPLE_SYSTEM_LOG guards code using ASL.

2013-02-04  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource r141812.

    2013-02-04  Benjamin Poulain  <benjamin@webkit.org>

        Upstream iOS's AtomicString
        https://bugs.webkit.org/show_bug.cgi?id=108139

        Reviewed by David Kilzer.

        On iOS, WebCore can be executed from two different threads. To maintain consistency,
        a few changes had been made:
        -The main UI thread and the WebThread share the same AtomicStringTable.
        -A spin lock is needed before any access to prevent any concurrent modification of the string table.
         The spin lock also prevent race on the static initialization of the shared table.

        * wtf/Platform.h:
        Introduce a new USE(WEB_THREAD) to scope changes related to iOS Web Thread.
        * wtf/text/AtomicString.cpp:
        (AtomicStringTableLocker):
        (WTF::AtomicStringTableLocker::AtomicStringTableLocker):
        (WTF::AtomicStringTableLocker::~AtomicStringTableLocker):
        (WTF::AtomicStringTable::create):
        wtfThreadData() is not necessarily inlined on ARM. When it is not inlined, the old code
        causes two call to the function. Instead, we can keep the value in register and pass it
        to AtomicStringTable::create().
        (WTF::stringTable):
        (WTF::addToStringTable):
        (WTF::AtomicString::addSlowCase):
        (WTF::AtomicString::find):
        (WTF::AtomicString::remove):

2013-01-31  David Kilzer  <ddkilzer@apple.com>

        Upstream iOS build file changes for WTF

        Merge ToT WebKit r141308.

        * Configurations/CopyWTFHeaders.xcconfig:
        * Configurations/WTF.xcconfig:
        - Remove unneeded settings.

    2013-01-30  David Kilzer  <ddkilzer@apple.com>

        Upstream iOS build file changes for WTF
        <http://webkit.org/b/108221>

        Reviewed by Mark Rowe.

        * Configurations/Base.xcconfig:
        - Import iOS.xcconfig.
        - Remove VALID_ARCHS.  Modern Xcodes define these correctly.
        - Make HEADER_SEARCH_PATHS work with iOS Simulator builds.
        - Add SUPPORTED_PLATFORMS so both Mac and iOS SDKs appear in
          schemes.
        - Define INSTALL_PATH when building for macosx SDK.
        * Configurations/CopyWTFHeaders.xcconfig:
        - Make PRIVATE_HEADERS_FOLDER_PATH work with iOS Simulator
          builds.
        * Configurations/DebugRelease.xcconfig:
        - Simplify ARCHS.  This works correctly on 32-bit-only SDKs.
        * Configurations/WTF.xcconfig:
        - Fix installation directory for iOS Simulator builds by
          defining INSTALL_PATH_ACTUAL.
        * Configurations/iOS.xcconfig: Add.
        * WTF.xcodeproj/project.pbxproj:
        - Add iOS.xcconfig to the project.

2013-01-30  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/12927168> iOS WebKit merge #5: stabilizing merge branch to ToT r140978 (starts Wed, Jan 17)

        Merge up to OpenSource WebKit r140978.

2013-01-28  Andy Estes  <aestes@apple.com>

        Merged ToT WebKit r140366.

    2013-01-17  Andy Estes  <aestes@apple.com>

        Add a USE() macro for content filtering code
        https://bugs.webkit.org/show_bug.cgi?id=107098

        Reviewed by Mark Rowe.

        * wtf/Platform.h: Define WTF_USE_CONTENT_FILTERING on Mac platforms
        more recent than Lion.

2013-01-28  Joseph Pecoraro  <pecoraro@apple.com>

        Remove stale iOS diffs in MainThread.h.

        Reviewed by Benjamin Poulain and David Kilzer.

        * wtf/MainThread.h:
        - isMainThread is already WTF_EXPORT_PRIVATE in OpenSource. Remove diff.
        - registerGCThread was always non WTF_EXPORT_PRIVATE in OpenSource. Seems
          to work fine that way on iOS. Remove diff.

2013-01-28  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/13096992> Roll out CLANG_ANALYZER_NORETURN changes to Assertions.h

        Rubber-stamped by Dan Bernstein.

        * wtf/Assertions.h: Remove CLANG_ANALYZER_NORETURN and
        corresponding usage.

2013-01-28  Joseph Pecoraro  <pecoraro@apple.com>

        Remove unnecessary iOS diff.

        Reviewed by David Kilzer.

        * wtf/DisallowCType.h: r107205 claimed that at some point this was
        needed for iOS WebKit to build for the Simulator and Device. This no
        longer appears to be the case. We should just remove it and match ToT.

2013-01-28  Joseph Pecoraro  <pecoraro@apple.com>

        Cleanup some PLATFORM(IOS) code to prepare for upstreaming.

        Reviewed by David Kilzer.

        * wtf/Assertions.h: Include not necessary.
        * wtf/Platform.h: We could fail to build on non-iOS platforms without the defined check.

2013-01-28  Eric Carlson  <eric.carlson@apple.com>

        Required for <rdar://problem/12044942> TLF: Update captions support to meet Web broadcast requirements

        Merged ToT WebKit r137161.

    2012-12-10  Eric Carlson  <eric.carlson@apple.com>

            Add support for in-band text tracks to Mac port
            https://bugs.webkit.org/show_bug.cgi?id=103663

            Reviewed by Sam Weinig.

            * wtf/Platform.h: Define HAVE_AVFOUNDATION_TEXT_TRACK_SUPPORT.

2013-01-22  Michael Saboff  <msaboff@apple.com>

        <rdar://problem/13001536> Crash Garbage Collecting in ToT (r1178510) - JSC::CopiedSpace::doneCopying() + 200

        Reviewed by Mark Hahnenberg.

        Added DMB (Data Memory Barrier) instruction to ARM64 versions of memoryBarrierAfterLock() and 
        memoryBarrierBeforeUnlock() to bring it inline with the ARMv7 implementation.  Given that
        the ARM64 assembler requires the barrier option, while ARMv7 defaults to SY the option we want,
        the option is now given explicitly.

        * wtf/Atomics.h:
        (WTF::memoryBarrierAfterLock):
        (WTF::memoryBarrierBeforeUnlock):

2013-01-18  Michael Saboff  <msaboff@apple.com>

        Unreviewed build fix for building JSC with DFG_ENABLE_DEBUG_VERBOSE and DFG_ENABLE_DEBUG_PROPAGATION_VERBOSE
	enabled in DFGCommon.h.  These changes came from cherry picking individual file changes landed in open source.

        * wtf/StringPrintStream.cpp:
        (WTF::StringPrintStream::reset):
        (WTF::StringPrintStream::toString):
        * wtf/StringPrintStream.h:
        (StringPrintStream):
        (WTF::toString):

2013-01-17  David Kilzer  <ddkilzer@apple.com>

        Replace ENABLE(IOS_CONTENTEDITABLE) with USE(UIKIT_EDITING)

        Reviewed by Enrica Casucci.

        Assume that ENABLE(IOS_CONTENTEDITABLE) is always on for iOS.

        * wtf/Platform.h:
        - Remove ENABLE(IOS_CONTENTEDITABLE) definition.
        - Resort USE(APPKIT) and USE(SECURITY_FRAMEWORK) definitions.
        - Add USE(UIKIT_EDITING) definition.

2013-01-17  David Kilzer  <ddkilzer@apple.com>

        Clean up WTF in preparation for upstreaming to open source

        Reviewed by Enrica Casucci.

        * Configurations/Base.xcconfig: Add comment about INSTALL_PATH.
        Matches comment added to Base.xcconfig in ANGLE project.
        * Configurations/DebugRelease.xcconfig: Simplify ARCHS.
        * wtf/Platform.h:
        - Remove IOS_5_0_OR_LATER.
        - Always define ENABLE_IOS_CONTENTEDITABLE and ENABLE_WEBGL.
        - Remove code to set ENABLE_DISK_IMAGE_CACHE to zero to match
          similar changes in open source.  (It's not needed due to the
          way the ENABLE() macros works.)
        - Only set WTF_USE_ARM64_DISASSEMBLER on PLATFORM(IOS).
        * wtf/text/StringStatics.cpp: Remove duplicate header.

2013-01-15  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/13015824> Remove IOS_PPT code

        Reviewed by Simon Fraser.

        * wtf/Platform.h: Remove IOS_PPT setting.

2012-12-21  Michael Saboff  <msaboff@apple.com>

        <rdar://problem/12922052> ARM64: BranchTestNN() where the immediate has only one bit set should use the tbz instruction

        Reviewed by Phil Pizlo.

        Added helpers to check for a single bit immediate.

        * wtf/MathExtras.h:
        (hasOneBitSet): Helper to check for a single bit in a value.
        (getLSBSet): Help to find the first lsb set.

2012-12-10  Michael Saboff  <msaboff@apple.com>

        <rdar://problem/12821654> ARM64 Should compact compare then branch around branch when possible

        Reviewed by Filip Pizlo.

        Added ARM64 CPU type to the ENABLE_BRANCH_COMPACTION macro.

        * wtf/Platform.h:

2012-12-03  Michael Saboff  <msaboff@apple.com>

        <rdar://problem/12801153> JSC should have an ARM64 disassembler

        Reviewed by Filip Pizlo.

        Added ARM64 platform specific flag logic for disassembler.

        * wtf/Platform.h:

2012-10-29  Jer Noble  <jer.noble@apple.com>

        <rdar://problem/8978236> Sub-TLF: Support fullscreen API on iOS

        Reviewed by Ian Henderson.

        Enable WebKit Full Screen API by setting ENABLE_FULLSCREEN_API.

        * wtf/Platform.h: Delete the line for ENABLE_FULLSCREEN_API, as this setting is controlled by the FeatureDefines files.

2012-10-16  Yongjun Zhang  <yongjun_zhang@apple.com>

        <rdar://problem/12408638> Add ENABLE(IOS_GESTURE_EVENTS) to avoid conflicting with ToT's ENABLE(GESTURE_EVENTS).

        Add ENABLE_IOS_GESTURE_EVENTS to Platform.h.

        Reviewed by David Kilzer.

        Additional information of the change such as approach, rationale. Please add per-function descriptions below (OOPS!).

        * wtf/Platform.h:

2012-10-15  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/12476025> build-webkit --development tries to build WKSI and DRT for x86_64, but only builds WebKit for i386

        Reviewed by David Carson.

        * Configurations/DebugRelease.xcconfig: Use
        ARCHS_STANDARD_32_64_BIT.

2012-10-01  Matt Lilek  <mrl@apple.com>

        <rdar://problem/12268376> SWB: WTF/JSC/WebCore/WebKit build fixes to work with clang-424

        Fix some inline ARM64 asm syntax to work with newer versions of clang (courtesy of Gavin).

        Reviewed by Pratik Solanki.

        * wtf/Atomics.h:
        (WTF::weakCompareAndSwap):

2012-09-29  Gavin Barraclough  <barraclough@apple.com>

        <rdar://problem/12402175> DFG JIT on ARM64 accidentally disabled

        Reviewed by Filip Pizlo.

        * wtf/Platform.h:
            - Enable DFG_JIT.

2012-09-25  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/12363601> WTF fails to build with Innsbruck11A177 because sbrk is deprecated

        Merged ToT WebKit r129549.

    2012-09-25  Pratik Solanki  <psolanki@apple.com>

        Remove HAVE_SBRK since we never set use_sbrk to true
        https://bugs.webkit.org/show_bug.cgi?id=97525
        <rdar://problem/12363601>

        Reviewed by Geoffrey Garen.

        The code under HAVE(SBRK) has not been used since 2005. We use mmap not sbrk for FastMalloc
        not sbrk. We can just remove the define and move all of this code inside #ifndef
        WTF_CHANGES.

        * wtf/Platform.h:
        * wtf/TCSystemAlloc.cpp:
        (TCMalloc_SystemAlloc):

2012-09-24  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/12357174> Innsbruck11A177: MessageUI_Sim-1094 fails to build: Broken by WebKit-1270: #if ENABLE(POINTER_LOCK) is not a valid binary operator in a preprocessor subexpression

        Reviewed by David Kilzer.

        Define ENABLE_POINTER_LOCK to 0 for iOS. This is used DOMDocumentPrivate.h that MessageUI
        includes. In Webkit, we never set the flag to 0 and rely on the ENABLE macros testing for the
        existence of the define. But this means scrub-ifdefs.pl allows this to pass through into the
        exported private header and projects that include this file will fail because ENABLE is not
        defined.

        We used to define ENABLE_POINTER_LOCK to 0 in Platform.h in open source. But the following
        cleanup bug removed that.

            https://bugs.webkit.org/show_bug.cgi?id=83431
            http://trac.webkit.org/changeset/113798

        * wtf/Platform.h:

2012-09-20  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/12334226> ASSERTION FAILED: mainThreadPthread in MainThreadMac.mm(132) : bool WTF::isMainThread()

        Reviewed by Yongjun Zhang.

        Flip the thread checks so that we check for pthread_main_np() first. This avoids a call into
        isMainThread() when we are on the main thread and the web thread is not running. This code
        is only used in debug builds.

        * wtf/ThreadRestrictionVerifier.h:
        (WTF::ThreadRestrictionVerifier::setShared):
        (WTF::ThreadRestrictionVerifier::isSafeToUse):

2012-09-18  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/12217445> iOS WebKit merge: stabilizing merge branch to ToT r122402 (starts Tue, Sep 4)

        Merge up to OpenSource WebKit r122402.

2012-09-14  Gavin Barraclough  <barraclough@apple.com>

        <rdar://problem/12304546> DFG JIT for ARM64

        Reviewed by Filip Pizlo.

        * wtf/Platform.h:
            - Enable DFG JIT on ARM64.

2012-09-13  Filip Pizlo  <fpizlo@apple.com>

        <rdar://problem/12281506> LLInt for 64-bit ARM

        Reviewed by Gavin Barraclough.
        
        Enable the LLInt, disable the classic interpreter.

        * wtf/Platform.h:

2012-09-11  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/12278004> ObjcRuntimeExtras.h needs to be added to Xcode project

        Merged ToT WebKit r128241.

    2012-09-11  Pratik Solanki  <psolanki@apple.com>

        Add ObjcRuntimeExtras.h to the Xcode project file
        https://bugs.webkit.org/show_bug.cgi?id=96419

        Reviewed by Alexey Proskuryakov.

        * WTF.xcodeproj/project.pbxproj:

2012-09-07  Pratik Solanki  <psolanki@apple.com>

        Part of <rdar://problem/10906849> objc_msgSend and IMP must be cast to an appropriate function pointer type (WTF/JSC/WebCore/WebKit)

        Add ObjcRuntimeExtras.h. Forgot to add it during the merge commit for open source change r127193.

        * wtf/ObjcRuntimeExtras.h: Added.
        (wtfObjcMsgSend):
        (wtfCallIMP):

2012-09-07  Pratik Solanki  <psolanki@apple.com>

        Part of <rdar://problem/10906849> objc_msgSend and IMP must be cast to an appropriate function pointer type (WTF/JSC/WebCore/WebKit)

        Merged ToT WebKit r127306.

    2012-08-31  Pratik Solanki  <psolanki@apple.com>

        objc_msgSend and IMP should be cast appropriately before using
        https://bugs.webkit.org/show_bug.cgi?id=95242

        Reviewed by Benjamin Poulain.

        Fix for older compilers. Pass id as the return type to the template
        instead of relying on default type.

        * wtf/Functional.h:
        (WTF::R):
        * wtf/ObjcRuntimeExtras.h:

2012-09-07  Pratik Solanki  <psolanki@apple.com>

        Part of <rdar://problem/10906849> objc_msgSend and IMP must be cast to an appropriate function pointer type (WTF/JSC/WebCore/WebKit)

        Merged ToT WebKit r127193.

    2012-08-30  Pratik Solanki  <psolanki@apple.com>

        objc_msgSend and IMP should be cast appropriately before using
        https://bugs.webkit.org/show_bug.cgi?id=95242

        Reviewed by Benjamin Poulain.

        Add new templates wtfObjcMsgSend and wtfCallIMP that do the appropriate
        casts to correctly typed function pointers before calling objc_msgSend
        and IMP methods directly.

        * wtf/Functional.h:
        (WTF::R): Use wtfObjcMsgSend.
        * wtf/ObjcRuntimeExtras.h: Added.
        (wtfObjcMsgSend):
        (wtfCallIMP):

2012-09-06  Matt Lilek  <mrl@apple.com>

        Fix type in my last commit.

        * wtf/Atomics.h:
        (WTF::weakCompareAndSwap):

2012-09-06  Matt Lilek  <mrl@apple.com>

        <rdar://problem/12238147> SWB: JavaScriptCore-1106 failed to build with clang-422.2.10 in SWB of Innsbruck11A163

        CoreOS decided to revert back to the previous syntax for inline assembly, so undo the changes made for 11960197 and 12213083.

        Patch by Bob Wilson. Reviewed by me.

        * wtf/Atomics.h:
        (WTF::weakCompareAndSwap):

2012-09-03  Matt Lilek  <mrl@apple.com>

        <rdar://problem/12213083> JavaScriptCore-1148904 fails to build in the autoBot

        Not reviewed, super gross build fix to support old and new clangs.

        * wtf/Atomics.h:
        (WTF::weakCompareAndSwap):

2012-08-30  Matt Lilek  <mrl@apple.com>

        <rdar://problem/11960197> SWB: JavaScriptCore-1096 fails to build in Innsbruck with clang-422.2.3: -Wmismatched-tags

        Merge OpenSource r119429, r121986, r126475, r126476, r126481, r126511, and r126515.

        Not reviewed, build fixes.

        * ChangeLog:
        * wtf/Atomics.h:
        (WTF::weakCompareAndSwap):
        * wtf/FastMalloc.cpp:
        (WTF):
        (WTF::TCMalloc_ThreadCache::CreateCacheIfNecessary):

2012-08-29  Gavin Barraclough  <barraclough@apple.com>

        <rdar://problem/10293804> TLF: Nitro for 64-bit ARM

        Reviewed by Filip Pizlo.

        * wtf/Platform.h:
            - Enable baseline JIT on arm64.

2012-08-20  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/12062633> arm64: FastMalloc is using 3-level page map instead of 2-level

        Reviewed by David Kilzer.

        Use 48 bits for ARM64 just like we do for X86-64. This saves 4MB of
        memory in 64-bit. This is identical to what we saw on X86-64 when we
        made this change. See <rdar://problem/6439247> FastMalloc allocating an
        extra 4MB of meta-data on 64-bit.

        * wtf/FastMalloc.cpp:
        (WTF):

2012-07-26  Benjamin Poulain  <bpoulain@apple.com>

        Remove an erroneous blank line from AtomicString::addFromLiteralData()

        Unreviewed. Remove an extra blank line I accidentally added.

        * wtf/text/AtomicString.cpp:
        (WTF::AtomicString::addFromLiteralData):

2012-07-26  Benjamin Poulain  <bpoulain@apple.com>

        <rdar://problem/11961917> Investigate AtomicStringTableLocker for AtomicString::add(StringImpl* baseString, unsigned start, unsigned length)

        Reviewed by Joseph Pecoraro.

        On iOS, AtomicString's table is shared between the WebThread and the Main Thread. Consequently, every modification of
        AtomicStringTable must be guarded by a lock.

        Functions were missing the lock, making it possible to have unsafe access.

        This patch moves all the locking done above addToStringTable() to be done inside addToStringTable(). This protects
        all the code that uses addToStringTable() without doing explicit locking every time.

        * wtf/text/AtomicString.cpp:
        (WTF::addToStringTable):
        (WTF::AtomicString::add):
        (WTF::AtomicString::addFromLiteralData):
        (WTF::AtomicString::fromUTF8Internal):

2012-07-25  Benjamin Poulain  <bpoulain@apple.com>

        Merge Open Source WebKit r123689 for <rdar://problem/11332342>.

    2012-07-25  Benjamin Poulain  <bpoulain@apple.com>

        Initialize QualifiedName's strings from the read only data segment
        https://bugs.webkit.org/show_bug.cgi?id=92226

        Reviewed by Anders Carlsson.

        Add constructors for StringImpl and AtomicString to be able to create
        the strings from the literal in read only memory.

        * wtf/text/AtomicString.cpp:
        (HashTranslatorCharBuffer):
        (WTF::LCharBufferFromLiteralDataTranslator::hash):
        (LCharBufferFromLiteralDataTranslator):
        (WTF::LCharBufferFromLiteralDataTranslator::equal):
        (WTF::LCharBufferFromLiteralDataTranslator::translate):
        (WTF::AtomicString::addFromLiteralData):
        * wtf/text/AtomicString.h:
        (WTF::AtomicString::AtomicString):
        (AtomicString):
        * wtf/text/StringImpl.cpp:
        (WTF::StringImpl::createFromLiteral):
        * wtf/text/StringImpl.h:
        (WTF):
        (StringImpl):
        (WTF::StringImpl::createFromLiteral):

2012-07-25 Benjamin Poulain  <bpoulain@apple.com>

        Merge Open Source WebKit r123582 for <rdar://problem/11332342>.

    2012-07-24  Benjamin Poulain  <bpoulain@apple.com> && Joseph Pecoraro  <pecoraro@apple.com>

        QualifiedName's HashSet should be big enough to hold at least all the static names
        https://bugs.webkit.org/show_bug.cgi?id=91891

        Reviewed by Darin Adler.

        Add a static struct to compute the HashTable capacity for any given size at compile time.
        This allow us to create HashTraits giving the minimumSize without hardcoding the values.

        * wtf/HashTable.h:
        (OneifyLowBits):
        (UpperPowerOfTwoBound):
        (HashTableCapacityForSize): Compute the HashTable capacity at compile time.

2012-07-16  Anders Carlsson  <andersca@apple.com>

        Fix build; dispatch_get_current_queue has been deprecated.

        Reviewed by Paul Knight.

        * wtf/ThreadRestrictionVerifier.h:
        (WTF::ThreadRestrictionVerifier::isSafeToUse):
        Disable -Wdeprecated-declarations around the call to dispatch_get_current_queue.

2012-07-08  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/11827934> Back out debug logging added in r1136253

        Reviewed by Filip Pizlo.

        * wtf/DataLog.cpp: Back out debug logging.

2012-05-23  Lucas Forschler  <lforschler@apple.com>

    Merge 117744

    2012-05-21  Andreas Kling  <kling@webkit.org>

            REGRESSION(r117501): IconDatabase asserts on startup in synchronousIconForPageURL().
            <http://webkit.org/b/86935>
            <rdar://problem/11480012>

            Reviewed by Anders Carlsson.

            Added a swap() to HashCountedSet.

            * wtf/HashCountedSet.h:
            (HashCountedSet::swap):

2012-06-07  Andy Estes  <aestes@apple.com>

        [WebKit2] Do not define HAVE_HOSTED_CORE_ANIMATION on iOS
        Part of <rdar://problem/11531534> Merge iOS WebKit2 changes into puzzlebox

        Reviewed by Darin Adler.

        * wtf/Platform.h:

2012-05-30  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/11554167> JSC in simulator should use LLInt+JIT+DFG

        Reviewed by Filip Pizlo.

        * wtf/Platform.h: Remove Simulator-only Interpreter/JIT settings
        so that the Simulator uses the same configuration as 32-bit
        hardware.  Note that the x86_64 Simulator in Innsbruck will also
        use LLInt+JIT with this change.

2012-05-29  Cameron Zwarich  <zwarich@apple.com>

        <rdar://problem/11550560> 11A90: MobileSafari crashes on launch

        Reviewed by Filip Pizlo.

        Add support for COMPARE_AND_SWAP on ARM64.

        * wtf/Atomics.h:
        (WTF::weakCompareAndSwap):
        * wtf/Platform.h:

2012-05-26  Andy Estes  <aestes@apple.com>

        Merged ToT WebKit r117115.

    2012-05-15  Andy Estes  <aestes@apple.com>

            Add WTF_USE_SECURITY_FRAMEWORK and use it in place of the less specific PLATFORM(MAC)
            https://bugs.webkit.org/show_bug.cgi?id=86508

            Reviewed by Sam Weinig.

            * wtf/Platform.h:

2012-05-26  Andy Estes  <aestes@apple.com>

        Merged ToT WebKit r117027.

    2012-05-14  Andy Estes  <aestes@apple.com>

            Add WTF_USE_APPKIT to differentiate platforms that use AppKit.framework from other Darwin platforms
            https://bugs.webkit.org/show_bug.cgi?id=86432

            Reviewed by Maciej Stachowiak.

            * wtf/Platform.h:

2012-05-25  Gavin Barraclough  <barraclough@apple.com>

        <rdar://problem/11536267> YARR JIT for arm64

        Reviewed by Filip Pizlo.

        * wtf/Platform.h:
            - Enabled the YARR JIT on arm64.

2012-05-14  Benjamin Poulain  <bpoulain@apple.com>

        <rdar://problem/11406944> iOS WebKit merge: stabilizing merge branch to ToT r116210 (starts Mon, May 14)

        Merge up to OpenSource WebKit r116210.

2012-04-26  Pratik Solanki  <psolanki@apple.com>

        Merge Open Source WebKit r115272.

    2012-04-25  Darin Adler  <darin@apple.com>

        Iterating a HashMap<String, X> involves a string equality comparison to check for the empty value
        https://bugs.webkit.org/show_bug.cgi?id=84524

        Reviewed by Antti Koivisto.

        * wtf/HashMap.h: Added a struct template, HashMapValueTraits, that derives from
        PairHashTraits, adds an isEmptyValue function that looks only at the key, not
        the mapped value, in the hash table value, and uses the isHashTraitsEmptyValue
        function template to check if the key is empty.

2012-04-26  Pratik Solanki  <psolanki@apple.com>

        Merge OpenSource WebKit r115078.

    2012-04-24  Darin Adler  <darin@apple.com>

        Iterating a HashMap<String, X> involves a string equality comparison to check for the empty value
        https://bugs.webkit.org/show_bug.cgi?id=84524

        Reviewed by Antti Koivisto.

        Added a new algorithm for checking for empty buckets that can be specialized.
        Specialized it for String. We may later want to do the same thing for KURL.
        It's not important to do it for AtomicString, since AtomicString's == function
        is already a simple pointer equality compare. We may also later want to do
        something similar for pairs that have String objects in them.

        * wtf/HashTable.h:
        (WTF::HashTable::isEmptyBucket): Call the new isHashTraitsEmptyValue function, which
        will do something more efficient for String.

        * wtf/HashTraits.h: Added hasIsEmptyValueFunction to hash traits, with a default value
        of false. This allows us to continue to get automatic comparison with the appropriate
        emptyValue result for all existing traits, but supply a custom isEmptyValue function
        for HashTraits<String>. Putting an isEmptyValue function into the traits would require
        overriding it in every class that has a custom value for emptyValue. Specialized
        HashTraits for String to add hasIsEmptyValueFunction and declare, but not define, the
        isEmptyValue function.
        (WTF::isHashTraitsEmptyValue): Added a function that uses the HashTraitsEmptyValueChecker
        struct to use either == combined with the emptyValue function or the isEmptyValue function.

        * wtf/text/StringHash.h: Removed unneeded includes and sorted the using statements at
        the bottom of the file.
        (WTF::HashTraits<String>::isEmptyValue): Define this function here, since here we have
        included the WTFString.h header; the HashTraits.h header compiles without WTFString.h.

2012-04-26  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource WebKit r115290.

    2012-04-25  Benjamin Poulain  <benjamin@webkit.org>

        Add a version of StringImpl::find() without offset
        https://bugs.webkit.org/show_bug.cgi?id=83968

        Reviewed by Sam Weinig.

        This patch add a version of StringImpl::find() without offset, Instead of using the default
        value for the index.

        By not having the index, we can skip a couple of branches and a few instructions. This gives
        significant gains when the strings are short-ish.

        The case of empty string is moved below (matchLength == 1) since it is a less common operation.

        * wtf/text/StringImpl.cpp:
        (WTF::StringImpl::find):
        (WTF):
        * wtf/text/StringImpl.h:
        (StringImpl):
        * wtf/text/WTFString.h:
        (String):
        (WTF::String::find):

2012-04-26  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource WebKit r115132.

    2012-04-24  Benjamin Poulain  <bpoulain@apple.com>

        Generalize the single character optimization of r114072
        https://bugs.webkit.org/show_bug.cgi?id=83961

        Reviewed by Eric Seidel.

        This patch makes some improvment over String::find() in the case of lookup for a single
        character.

        The two function find(UChar|LChar) are replaced by a template.

        The case of searching a UChar in a 8bit string has a shortcut if the UChar cannot
        possibly match any character in the range of the type LChar.

        The slow case StringImpl::find(StringImpl*) is modified to
        -Do not allocate in the fast case if only one string is 8bit.
        -Use the shortcut for searching UChar in LChar.

        This speed up the function by about 7% when avoiding string conversion.

        * wtf/text/StringImpl.cpp:
        (WTF::StringImpl::find):
        * wtf/text/StringImpl.h:
        (StringImpl):
        (WTF):
        (WTF::find):
        (WTF::StringImpl::find):

2012-04-26  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource WebKit r114071.

    2012-04-12  Benjamin Poulain  <bpoulain@apple.com>

        Inline StringImpl::find(UChar, ...)
        https://bugs.webkit.org/show_bug.cgi?id=83737

        Reviewed by Geoffrey Garen.

        The implementation of StringImpl::find() is a simple branch before invoking one of
        two inline functions. The overhead of having a function for StringImpl::find() is significant.

        It is better to let the compiler decide if that should be inlined or not.

        * wtf/text/StringImpl.cpp:
        * wtf/text/StringImpl.h:
        (StringImpl):
        (WTF::find):
        (WTF):
        (WTF::reverseFind):
        (WTF::StringImpl::find):
        * wtf/text/WTFString.h:

2012-04-12  Benjamin Poulain  <bpoulain@apple.com>

        Merge OpenSource WebKit r113505.

    2012-04-06  Benjamin Poulain  <bpoulain@apple.com>

        Get rid of the useless flag PREEMPT_GEOLOCATION_PERMISSION
        https://bugs.webkit.org/show_bug.cgi?id=83325

        Reviewed by Ryosuke Niwa.

        * wtf/Platform.h: Remove the flag.

2012-04-06  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/9587937> Switch c++0x and switch from libstdc++ to libc++ when building with clang

        Reviewed by Sam Weinig.

        * Configurations/Base.xcconfig: Set CLANG_CXX_LIBRARY based on
        REAL_PLATFORM_NAME.

2012-04-04  David Kilzer  <ddkilzer@apple.com>

        <rdar://problem/11184606> UIKit-806c85 failed to build in the Innsbruck autoBot for sim

        Reviewed by Matt Lilek.

        * Configurations/Base.xcconfig: Hard-code VALID_ARCHS for
        iphoneos and iphonesimulator.

2012-04-04  Pratik Solanki  <psolanki@apple.com>

        <rdar://problem/11142625> iOS WebKit merge: stabilizing merge branch to ToT r111184

        Merge up to OpenSource WebKit r111184.

2012-03-27  David Kilzer  <ddkilzer@apple.com>

        Make WTF build for iOS using Debug, Release, Production

        Reviewed by Filip Pizlo.

        Needed for: <rdar://problem/11124408> Add new EmbeddedWTF project (new subproject for WebKit)

        * Configurations/Base.xcconfig: Include iOS.xcconfig.
        If it's missing, nothing bad happens.  Update VALID_ARCHS for
        iOS.  Update WARNING_CFLAGS for Innsbruck.  Set INSTALL_PATH
        just like AspenFamily.xcconfig in case it's missing.

        * Configurations/DebugRelease.xcconfig: Use 10.6 as a deployment
        target.  (This should be 10.7 now, but let's change all projects
        at the same time, and it's not clear this even matters.)

        * Configurations/WTF.xcconfig: Set INSTALL_PATH_ACTUAL and
        prefix PRIVATE_HEADERS_FOLDER_PATH with
        INSTALL_PATH_PREFIX.

        * Configurations/iOS.xcconfig: Added.  Obscures path to
        AspenFamily.xcconfig, which we will use later for upstreaming
        iOS WebKit to open source.
        * WTF.xcodeproj/project.pbxproj: Added iOS.xcconfig.

