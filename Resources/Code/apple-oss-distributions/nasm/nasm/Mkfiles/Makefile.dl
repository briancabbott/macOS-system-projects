# The Netwide Assembler is copyright (C) 1996 Simon Tatham and
# Julian Hall. All rights reserved. The software is
# redistributable under the licence given in the file "Licence"
# distributed in the NASM archive.
#
# This Makefile is designed to build NASM using David Lindauer's
# cc386

CC = cc386 /C+N
LINK = valx -case -use32 -map
LINKFLAGS =
LIBRARIES =
OBJ = obj

.c.obj:
	$(CC) $&
	&nasm -fobj $&.ASM

NDISASMOBJS = ndisasm.$(OBJ) disasm.$(OBJ) sync.$(OBJ) nasmlib.$(OBJ) \
              insnsd.$(OBJ)

NASMOBJS = nasm.$(OBJ) nasmlib.$(OBJ) eval.$(OBJ) float.$(OBJ) insnsa.$(OBJ) \
           assemble.$(OBJ) labels.$(OBJ) parser.$(OBJ) outform.$(OBJ) \
	   output/outbin.$(OBJ) output/outaout.$(OBJ) output/outcoff.$(OBJ) output/outelf.$(OBJ) \
	   output/outobj.$(OBJ) output/outas86.$(OBJ) output/outrdf.$(OBJ) output/outrdf2.$(OBJ) output/outdbg.$(OBJ) \
           preproc.$(OBJ) listing.$(OBJ) output/outieee.$(OBJ)

all : nasm.exe ndisasm.exe

# We have to have a horrible kludge here to get round the 128 character
# limit, as usual...
LINKOBJS = a*.obj e*.obj f*.obj insnsa.obj l*.obj na*.obj o*.obj p*.obj z*.obj
nasm.exe: $(NASMOBJS)
	$(LINK) \cc386\lib\c0dos $(LINKOBJS:.obj=),nasm,nasm,\cc386\lib\cldos

ndisasm.exe: $(NDISASMOBJS)
	$(LINK) \cc386\lib\c0dos.obj $(NDISASMOBJS:.obj=),ndisasm,ndisasm,\cc386\lib\cldos

clean :
        del *.asm
        del *.obj
        del *.map
        del *.exe

#-- Magic hints to mkdep.pl --#
# @object-ending: ".$(OBJ)"
# @path-separator: "/"
#-- Everything below is generated by mkdep.pl - do not edit --#
assemble.$(OBJ): assemble.c preproc.h insns.h regs.h version.h nasmlib.h \
 nasm.h regvals.c insnsi.h assemble.h
disasm.$(OBJ): disasm.c insns.h sync.h regdis.c regs.h regs.c version.h \
 nasm.h insnsn.c names.c insnsi.h disasm.h
eval.$(OBJ): eval.c labels.h eval.h regs.h version.h nasmlib.h nasm.h
float.$(OBJ): float.c regs.h version.h nasm.h
insnsa.$(OBJ): insnsa.c insns.h regs.h version.h nasm.h insnsi.h
insnsd.$(OBJ): insnsd.c insns.h regs.h version.h nasm.h insnsi.h
insnsn.$(OBJ): insnsn.c
labels.$(OBJ): labels.c regs.h version.h nasmlib.h nasm.h
listing.$(OBJ): listing.c regs.h version.h nasmlib.h nasm.h listing.h
macros.$(OBJ): macros.c
names.$(OBJ): names.c regs.c insnsn.c
nasm.$(OBJ): nasm.c labels.h preproc.h insns.h parser.h eval.h regs.h \
 outform.h version.h nasmlib.h nasm.h assemble.h insnsi.h listing.h
nasmlib.$(OBJ): nasmlib.c insns.h regs.h regs.c version.h nasmlib.h nasm.h \
 insnsn.c names.c insnsi.h
ndisasm.$(OBJ): ndisasm.c insns.h sync.h regs.h version.h nasmlib.h nasm.h \
 insnsi.h disasm.h
outform.$(OBJ): outform.c regs.h outform.h version.h nasm.h
output/outaout.$(OBJ): output/outaout.c regs.h outform.h version.h nasmlib.h \
 nasm.h
output/outas86.$(OBJ): output/outas86.c regs.h outform.h version.h nasmlib.h \
 nasm.h
output/outbin.$(OBJ): output/outbin.c labels.h eval.h regs.h outform.h \
 version.h nasmlib.h nasm.h
output/outcoff.$(OBJ): output/outcoff.c regs.h outform.h version.h nasmlib.h \
 nasm.h
output/outdbg.$(OBJ): output/outdbg.c regs.h outform.h version.h nasmlib.h \
 nasm.h
output/outelf.$(OBJ): output/outelf.c regs.h outform.h version.h nasmlib.h \
 nasm.h
output/outieee.$(OBJ): output/outieee.c regs.h outform.h version.h nasmlib.h \
 nasm.h
output/outobj.$(OBJ): output/outobj.c regs.h outform.h version.h nasmlib.h \
 nasm.h
output/outrdf.$(OBJ): output/outrdf.c regs.h outform.h version.h nasmlib.h \
 nasm.h
output/outrdf2.$(OBJ): output/outrdf2.c rdoff/rdoff.h regs.h outform.h \
 version.h nasmlib.h nasm.h
parser.$(OBJ): parser.c insns.h parser.h float.h regs.h regflags.c version.h \
 nasmlib.h nasm.h insnsi.h
preproc.$(OBJ): preproc.c macros.c regs.h version.h nasmlib.h nasm.h
regdis.$(OBJ): regdis.c
regflags.$(OBJ): regflags.c
regs.$(OBJ): regs.c
regvals.$(OBJ): regvals.c
sync.$(OBJ): sync.c sync.h
