This is gimpprint.info, produced by makeinfo version 4.0 from
gimpprint.texi.

INFO-DIR-SECTION Libraries
START-INFO-DIR-ENTRY
* GIMP-Print: (gimpprint).      print plugin for the GIMP, and printing library
END-INFO-DIR-ENTRY

   This file documents the gimpprint library and associated programs
used for high quality printing.

   Copyright (C) 2001 Michael Sweet (<mike@easysw.com>) and Robert
Krawitz (<rlk@alum.mit.edu>)

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided that
the entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be stated in a
translation approved by the Foundation.


File: gimpprint.info,  Node: Top,  Prev: (dir),  Up: (dir)

The print plugin for the GIMP and printing library
**************************************************

   This file documents the libgimpprint library and associated programs
used for high quality printing. This edition documents version 4.2.6.

   *Note Problems::, for information on how to report problems with
GIMP-Print.

* Menu:

* Instructions::                How to read this manual.
* Copying::                     Your rights.
* Overview::                    Preliminary information.
* Using libgimpprint::          Examples of how to use libgimpprint.
* Integrating libgimpprint::    Using libgimpprint in your own packages.
* Functions::                   libgimpprint function reference.
* Programs::                    Using GIMP-Print programs.
* Problems::                    Reporting bugs.
* Appendices::                  Additional information.
* Data Type and Variable Index::  Index of data types and variables.
* Function and Macro Index::    Index of functions and macros.
* Concept Index::               Index of concepts.


File: gimpprint.info,  Node: Instructions,  Next: Copying,  Prev: Top,  Up: Top

Preface
*******

   This manual documents the use of the GIMP-Print package, focusing
mainly on the libgimpprint library that is the core of GIMP-Print.
Parts of the manual which describe the use of libgimpprint are aimed
primarily at programmers, and do assume that the reader is familiar
with C programming, and using standard programming tools on GNU or UNIX
systems. Other parts of the manual document the use of the programs
that make up the GIMP-Print package, and assume no knowledge other than
the basics of using a shell and editor.

   The best way to learn how to use libgimpprint in your own programs
is to read the manual from start to finish, using the examples given in
the text to learn how it works. The bulk of the manual can be used as a
reference once one understands the basics.

   The manual is split into several parts for the programmer.  It starts
with a simple usage example of how to link a program with libgimpprint,
then how to integrate this into package build scripts, using `make',
`autoconf' and `automake'.  This is followed by a detailed function
reference, including descriptions of all the data types used.

   For the end-user, there is a section on all of the programs that come
with GIMP-Print, including the GIMP `print' plugin, and the CUPS and
Ghostscript drivers.

   The appendices at the end of the manual detail the dither and weave
algorithms used in libgimpprint, the ESC/P2 printer control language
used in Epson printers and how to add support for a new printer to
libgimpprint.



                  We hope you enjoy using GIMP-Print!

                       --The GIMP-Print project


File: gimpprint.info,  Node: Copying,  Next: Overview,  Prev: Instructions,  Up: Top

GNU GENERAL PUBLIC LICENSE
**************************

                         Version 2, June 1991

     Copyright (C) 1989, 1991 Free Software Foundation, Inc.
     675 Mass Ave, Cambridge, MA 02139, USA
     
     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

Preamble
========

   The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Library General Public License instead.)  You can apply it to
your programs, too.

   When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it in
new free programs; and that you know you can do these things.

   To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

   For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

   We protect your rights with two steps: (1) copyright the software,
and (2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

   Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

   Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

   The precise terms and conditions for copying, distribution and
modification follow.

    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

  1. This License applies to any program or other work which contains a
     notice placed by the copyright holder saying it may be distributed
     under the terms of this General Public License.  The "Program",
     below, refers to any such program or work, and a "work based on
     the Program" means either the Program or any derivative work under
     copyright law: that is to say, a work containing the Program or a
     portion of it, either verbatim or with modifications and/or
     translated into another language.  (Hereinafter, translation is
     included without limitation in the term "modification".)  Each
     licensee is addressed as "you".

     Activities other than copying, distribution and modification are
     not covered by this License; they are outside its scope.  The act
     of running the Program is not restricted, and the output from the
     Program is covered only if its contents constitute a work based on
     the Program (independent of having been made by running the
     Program).  Whether that is true depends on what the Program does.

  2. You may copy and distribute verbatim copies of the Program's
     source code as you receive it, in any medium, provided that you
     conspicuously and appropriately publish on each copy an appropriate
     copyright notice and disclaimer of warranty; keep intact all the
     notices that refer to this License and to the absence of any
     warranty; and give any other recipients of the Program a copy of
     this License along with the Program.

     You may charge a fee for the physical act of transferring a copy,
     and you may at your option offer warranty protection in exchange
     for a fee.

  3. You may modify your copy or copies of the Program or any portion
     of it, thus forming a work based on the Program, and copy and
     distribute such modifications or work under the terms of Section 1
     above, provided that you also meet all of these conditions:

       a. You must cause the modified files to carry prominent notices
          stating that you changed the files and the date of any change.

       b. You must cause any work that you distribute or publish, that
          in whole or in part contains or is derived from the Program
          or any part thereof, to be licensed as a whole at no charge
          to all third parties under the terms of this License.

       c. If the modified program normally reads commands interactively
          when run, you must cause it, when started running for such
          interactive use in the most ordinary way, to print or display
          an announcement including an appropriate copyright notice and
          a notice that there is no warranty (or else, saying that you
          provide a warranty) and that users may redistribute the
          program under these conditions, and telling the user how to
          view a copy of this License.  (Exception: if the Program
          itself is interactive but does not normally print such an
          announcement, your work based on the Program is not required
          to print an announcement.)

     These requirements apply to the modified work as a whole.  If
     identifiable sections of that work are not derived from the
     Program, and can be reasonably considered independent and separate
     works in themselves, then this License, and its terms, do not
     apply to those sections when you distribute them as separate
     works.  But when you distribute the same sections as part of a
     whole which is a work based on the Program, the distribution of
     the whole must be on the terms of this License, whose permissions
     for other licensees extend to the entire whole, and thus to each
     and every part regardless of who wrote it.

     Thus, it is not the intent of this section to claim rights or
     contest your rights to work written entirely by you; rather, the
     intent is to exercise the right to control the distribution of
     derivative or collective works based on the Program.

     In addition, mere aggregation of another work not based on the
     Program with the Program (or with a work based on the Program) on
     a volume of a storage or distribution medium does not bring the
     other work under the scope of this License.

  4. You may copy and distribute the Program (or a work based on it,
     under Section 2) in object code or executable form under the terms
     of Sections 1 and 2 above provided that you also do one of the
     following:

       a. Accompany it with the complete corresponding machine-readable
          source code, which must be distributed under the terms of
          Sections 1 and 2 above on a medium customarily used for
          software interchange; or,

       b. Accompany it with a written offer, valid for at least three
          years, to give any third party, for a charge no more than your
          cost of physically performing source distribution, a complete
          machine-readable copy of the corresponding source code, to be
          distributed under the terms of Sections 1 and 2 above on a
          medium customarily used for software interchange; or,

       c. Accompany it with the information you received as to the offer
          to distribute corresponding source code.  (This alternative is
          allowed only for noncommercial distribution and only if you
          received the program in object code or executable form with
          such an offer, in accord with Subsection b above.)

     The source code for a work means the preferred form of the work for
     making modifications to it.  For an executable work, complete
     source code means all the source code for all modules it contains,
     plus any associated interface definition files, plus the scripts
     used to control compilation and installation of the executable.
     However, as a special exception, the source code distributed need
     not include anything that is normally distributed (in either
     source or binary form) with the major components (compiler,
     kernel, and so on) of the operating system on which the executable
     runs, unless that component itself accompanies the executable.

     If distribution of executable or object code is made by offering
     access to copy from a designated place, then offering equivalent
     access to copy the source code from the same place counts as
     distribution of the source code, even though third parties are not
     compelled to copy the source along with the object code.

  5. You may not copy, modify, sublicense, or distribute the Program
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense or distribute the Program is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

  6. You are not required to accept this License, since you have not
     signed it.  However, nothing else grants you permission to modify
     or distribute the Program or its derivative works.  These actions
     are prohibited by law if you do not accept this License.
     Therefore, by modifying or distributing the Program (or any work
     based on the Program), you indicate your acceptance of this
     License to do so, and all its terms and conditions for copying,
     distributing or modifying the Program or works based on it.

  7. Each time you redistribute the Program (or any work based on the
     Program), the recipient automatically receives a license from the
     original licensor to copy, distribute or modify the Program
     subject to these terms and conditions.  You may not impose any
     further restrictions on the recipients' exercise of the rights
     granted herein.  You are not responsible for enforcing compliance
     by third parties to this License.

  8. If, as a consequence of a court judgment or allegation of patent
     infringement or for any other reason (not limited to patent
     issues), conditions are imposed on you (whether by court order,
     agreement or otherwise) that contradict the conditions of this
     License, they do not excuse you from the conditions of this
     License.  If you cannot distribute so as to satisfy simultaneously
     your obligations under this License and any other pertinent
     obligations, then as a consequence you may not distribute the
     Program at all.  For example, if a patent license would not permit
     royalty-free redistribution of the Program by all those who
     receive copies directly or indirectly through you, then the only
     way you could satisfy both it and this License would be to refrain
     entirely from distribution of the Program.

     If any portion of this section is held invalid or unenforceable
     under any particular circumstance, the balance of the section is
     intended to apply and the section as a whole is intended to apply
     in other circumstances.

     It is not the purpose of this section to induce you to infringe any
     patents or other property right claims or to contest validity of
     any such claims; this section has the sole purpose of protecting
     the integrity of the free software distribution system, which is
     implemented by public license practices.  Many people have made
     generous contributions to the wide range of software distributed
     through that system in reliance on consistent application of that
     system; it is up to the author/donor to decide if he or she is
     willing to distribute software through any other system and a
     licensee cannot impose that choice.

     This section is intended to make thoroughly clear what is believed
     to be a consequence of the rest of this License.

  9. If the distribution and/or use of the Program is restricted in
     certain countries either by patents or by copyrighted interfaces,
     the original copyright holder who places the Program under this
     License may add an explicit geographical distribution limitation
     excluding those countries, so that distribution is permitted only
     in or among countries not thus excluded.  In such case, this
     License incorporates the limitation as if written in the body of
     this License.

 10. The Free Software Foundation may publish revised and/or new
     versions of the General Public License from time to time.  Such
     new versions will be similar in spirit to the present version, but
     may differ in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the
     Program specifies a version number of this License which applies
     to it and "any later version", you have the option of following
     the terms and conditions either of that version or of any later
     version published by the Free Software Foundation.  If the Program
     does not specify a version number of this License, you may choose
     any version ever published by the Free Software Foundation.

 11. If you wish to incorporate parts of the Program into other free
     programs whose distribution conditions are different, write to the
     author to ask for permission.  For software which is copyrighted
     by the Free Software Foundation, write to the Free Software
     Foundation; we sometimes make exceptions for this.  Our decision
     will be guided by the two goals of preserving the free status of
     all derivatives of our free software and of promoting the sharing
     and reuse of software generally.

                                NO WARRANTY

 12. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO
     WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE
     LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT
     WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT
     NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
     FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE
     QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
     PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY
     SERVICING, REPAIR OR CORRECTION.

 13. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
     WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY
     MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE
     LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,
     INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR
     INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU
     OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY
     OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN
     ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

                      END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Programs
=============================================

   If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these
terms.

   To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

     ONE LINE TO GIVE THE PROGRAM'S NAME AND AN IDEA OF WHAT IT DOES.
     Copyright (C) 19YY  NAME OF AUTHOR
     
     This program is free software; you can redistribute it and/or
     modify it under the terms of the GNU General Public License
     as published by the Free Software Foundation; either version 2
     of the License, or (at your option) any later version.
     
     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
     
     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

   Also add information on how to contact you by electronic and paper
mail.

   If the program is interactive, make it output a short notice like
this when it starts in an interactive mode:

     Gnomovision version 69, Copyright (C) 19YY NAME OF AUTHOR
     Gnomovision comes with ABSOLUTELY NO WARRANTY; for details
     type `show w'.  This is free software, and you are welcome
     to redistribute it under certain conditions; type `show c'
     for details.

   The hypothetical commands `show w' and `show c' should show the
appropriate parts of the General Public License.  Of course, the
commands you use may be called something other than `show w' and `show
c'; they could even be mouse-clicks or menu items--whatever suits your
program.

   You should also get your employer (if you work as a programmer) or
your school, if any, to sign a "copyright disclaimer" for the program,
if necessary.  Here is a sample; alter the names:

     Yoyodyne, Inc., hereby disclaims all copyright
     interest in the program `Gnomovision'
     (which makes passes at compilers) written
     by James Hacker.
     
     SIGNATURE OF TY COON, 1 April 1989
     Ty Coon, President of Vice

   This General Public License does not permit incorporating your
program into proprietary programs.  If your program is a subroutine
library, you may consider it more useful to permit linking proprietary
applications with the library.  If this is what you want to do, use the
GNU Library General Public License instead of this License.

Copying summary
***************

   GIMP-Print is "free"; this means that everyone is free to use it and
free to redistribute it on a free basis. GIMP-Print is not in the public
domain; it is copyrighted and there are restrictions on its
distribution, but these restrictions are designed to permit everything
that a good cooperating citizen would want to do. What is not allowed is
to try to prevent others from further sharing any version of GIMP-Print
that they might get from you.

   Specifically, we want to make sure that you have the right to give
away copies of GIMP-Print, that you receive source code or else can get
it if you want it, that you can change GIMP-Print or use pieces of it
in new free programs, and that you know you can do these things.

   To make sure that everyone has such rights, we have to forbid you to
deprive anyone else of these rights. For example, if you distribute
copies of GIMP-Print, you must give the recipients all the rights that
you have. You must make sure that they, too, receive or can get the
source code. And you must tell them their rights.

   Also, for our own protection, we must make certain that everyone
finds out that there is no warranty for GIMP-Print. If GIMP-Print is
modified by someone else and passed on, we want their recipients to
know that what they have is not what we distributed, so that any
problems introduced by others will no reflect on our reputation.


File: gimpprint.info,  Node: Overview,  Next: Using libgimpprint,  Prev: Copying,  Up: Top

Overview
********

   The GIMP-Print package is a collection of programs and a library for
high quality printing on modern inkjets, including `photographic
quality' models which offer very high resolutions and several inks.

   META: Short history of the project

   GIMP-Print is the print facility of the "GNU Image Manipulation
Program" (GIMP). It is in addition a suite of drivers that may be used
with common UNIX spooling systems using GhostScript or CUPS.  These
drivers provide printing quality for UNIX/Linux on a par with
proprietary vendor-supplied drivers in many cases, and can be used for
many of the most demanding printing tasks.  The core of GIMP-Print is a
shared library (libgimpprint) which may be used by any program that
wishes to produce high-qulaity printed output.


File: gimpprint.info,  Node: Using libgimpprint,  Next: Integrating libgimpprint,  Prev: Overview,  Up: Top

Using libgimpprint
******************

   This chapter describes how to write programs that use libgimpprint.

Code prerequisites
==================

   To use libgimpprint with a program, several steps must be taken:

  1. Include the master libgimpprint header `<gimp-print/gimp-print.h>.'

  2. Call `stp_init()'.

  3. Link with libgimpprint.

   The following is a short example program. It does not do anything
useful, but it does everything required to link with libgimpprint and
call other functions from libgimpprint.

     #include <gimp-print/gimp-print.h>
     
     int
     main (int argc, char *argv[])
     {
       stp_init ();
       return (0);
     }

Linking with libgimpprint
=========================

   To link a program with libgimpprint, then `-lgimpprint' needs to be
passed to the compiler when linking. For example, to compile and link
`prog.c' the following commands would be used:

     gcc -c prog.c
     gcc -o prog -lgimpprint prog.o

   The compiler and linker flags needed may vary depending on the
options GIMP-Print was configured with when it was built. The
`gimpprint-config' script will give the correct parameters for the
local installation (*note gimpprint-config::).


File: gimpprint.info,  Node: Integrating libgimpprint,  Next: Functions,  Prev: Using libgimpprint,  Up: Top

Integrating libgimpprint
************************

   This chapter describes how to integrate the compiling and linking of
programs using libgimpprint with build scripts. Commonly used systems
include `make', but more commonly `Makefile' files are generated by
using tools such as `autoconf' and `automake'.

* Menu:

* gimpprint-config::            Getting the correct compiler and linker flags
* make::                        Normal makefiles
* autoconf::                    Macro to automatically check for libgimpprint
* automake::                    Automatically defined variables to use


File: gimpprint.info,  Node: gimpprint-config,  Next: make,  Up: Integrating libgimpprint

`gimpprint-config'
==================

   Depending on the setup of the computer system GIMP-Print was
installed on, as well as the options passed to `configure' when
configuring the package when it was built, the `CFLAGS' and `LIBS'
parameters needed to compile and link programs with libgimpprint may
vary. To make it simple to determine what these are on any given
system, the script `gimpprint-config' was created. It's job is to
output the correct parameters for the setup on your system. The
following options are available:

     roger@whinlatter:~/gimpprint/devel$ gimpprint-config --help
     Usage: gimpprint-config [OPTIONS] [LIBRARIES]
     Options:
             [--prefix[=DIR]]
             [--exec-prefix[=DIR]]
             [--version]
             [--libs]
             [--cflags]
     Libraries:
             gimpprint

   The `--prefix' and `--exec-prefix' options are only needed if the
installed locations of parts of GIMP-Print are different from the
configured locations. These should never be needed if GIMP-Print was
properly configured and installed.

   The installed version of GIMP-Print can be obtained with the
`--version' option:

     roger@whinlatter:~/gimpprint/devel$ gimpprint-config --version
     4.2.6

   The correct `CFLAGS' to use can be obtained with the `--cflags'
option:

     roger@whinlatter:~/gimpprint/devel$ gimpprint-config --cflags

   In this case, there are no special `CFLAGS' required to compile
programs.

   The correct `LIBS' to use can the obtained with the `--libs' option:

     roger@whinlatter:~/gimpprint/devel$ gimpprint-config --libs
     -L/usr/lib -lgimpprint -lm

   The command can be used from the shell by enclosing it in backquotes
``':

     gcc `gimpprint-config --cflags` -c prog.c
     gcc `gimpprint-config --libs` -o prog prog.o

   However, this is not the way it it typically used. Normally it is
used in a `Makefile' (*note make::) or by an `m4' macro in a `configure'
script (*note autoconf::).


File: gimpprint.info,  Node: make,  Next: autoconf,  Prev: gimpprint-config,  Up: Integrating libgimpprint

`make'
======

   If you use `make' with your own `Makefile' files, then you are on
your own. This manual offers no assistance with doing this. Only the
following suggestion is offered:

     GIMPPRINT_VERSION = $(shell gimpprint-config --version)
     GIMPPRINT_CFLAGS = $(shell gimpprint-config --cflags)
     GIMPPRINT_LIBS = $(shell gimpprint-config --libs)

   How you choose to use these variables is entirely up to you. *note
GNU make: (make)Top, for more information.


File: gimpprint.info,  Node: autoconf,  Next: automake,  Prev: make,  Up: Integrating libgimpprint

`autoconf'
==========

   The `autoconf' program produces a Bourne shell script called
`configure' from a template file called `configure.in'.  `configure.in'
contains both Bourne shell script, and `m4' macros.  `autoconf' expands
the `m4' macros into `real' shell script.  The resulting `configure'
script performs various checks for installed programs, compiler
characteristics and other system information such as available headers
and libraries. *note GNU autoconf: (autoconf)Top, for more information.

   GIMP-Print provides an `m4' macro, `AM_PATH_GIMPPRINT', suitable for
use in a `configure.in'. It defines the environment variables
`GIMPPRINT_CFLAGS', `GIMPPRINT_LIBS' and `GIMPPRINT_CONFIG'. You can
optionally specify a minimum version of the library to use, and shell
script to run if the test suceeds or fails.

 - Macro: AM_PATH_GIMPPRINT ([MINIMUM-VERSION [, ACTION-IF-FOUND [,
          ACTION-IF-NOT-FOUND]]])
     Check for an installed version of GIMP-Print greater than or equal
     to MINIMUM-VERSION.

     ACTION-IF-FOUND is a list of shell commands to run if the check
     for the library succeeds; ACTION-IF-NOT-FOUND is a list of shell
     commands to run if the check fails.

     The macro sets the following environment variables:
     `GIMPPRINT_CFLAGS', `GIMPPRINT_LIBS' and `GIMPPRINT_CONFIG'. It
     also will substitute them into any `Makefile.in' you specify in
     `AC_OUTPUT' because it calls `AC_SUBST' for each of them. However,
     you will probably be using `automake' to generate your
     `Makefile.in' files (*note automake::).



File: gimpprint.info,  Node: automake,  Prev: autoconf,  Up: Integrating libgimpprint

`automake'
==========

   The `automake' program can be used to generate `Makefile.in' files
suitable for use with a `configure' script generated by `autoconf'.  As
`automake' _requires_ `autoconf', this section will assume the use of a
`configure' script which uses the `AM_PATH_GIMPPRINT' macro (there is
little point in _not_ using it!).

   It is highly recommeded that you use GNU `autoconf' and `automake'.
They will allow you to make your software build on most platforms with
most compilers. `automake' makes writing complex `Makefile' files very
easy, by expressing how to build your packages in terms of what files
are required to build a project and the installation locations of the
files. It imposes a few limitations over using plain `Makefile' files,
such as in the use of conditionals, but these problems are vastly
outweighed by the benefits it brings. It also creates many extra
targets in the generated `Makefile.in' files such as `dist',
`distcheck', `clean', `distclean', `maintainer-clean' and `tags', and
there are many more more available. *note GNU automake: (automake)Top,
for more information.

   Because `AM_PATH_GIMPPRINT' calls `AC_SUBST' to substitute
`GIMPPRINT_CFLAGS', `GIMPPRINT_LIBS' and `GIMPPRINT_CONFIG', `automake'
will automatically set these variables in the `Makefile.in' files it
generates, requiring no additional effort on your part!

   As in previous examples, we will make a program `prog' from a file
`prog.c'. This is how one might build write a `Makefile.am' to do this:

     AUTOMAKE_OPTIONS = 1.4 gnu
     MAINT_CHARSET = latin1
     
     @SET_MAKE@
     
     CFLAGS = @CFLAGS@
     
     INCLUDES = @INCLUDES@ $(GIMPPRINT_CFLAGS)
     
     bin_PROGRAMS = prog
     prog_SOURCES = prog.c
     prog_LDADD = $(GIMPPRINT_LIBS)
     
     MAINTAINERCLEANFILES = Makefile.in

   That's all there is to it! Please note that this example also
requires the macro `AC_PROG_MAKE_SET' to be used in `configure.in' and
the use of `AC_SUBST' to substitute `CFLAGS' and `INCLUDES' where
`@CFLAGS@' and `@INCLUDES@' are found in the file, respectively.


File: gimpprint.info,  Node: Functions,  Next: Programs,  Prev: Integrating libgimpprint,  Up: Top

Functions
*********

   This section of the manual is a complete reference to all of the
functions comprising libgimpprint, with examples.

   All of the libgimpprint functions can be declared by including the
master libgimpprint header, `<gimp-print/gimp-print.h>'.  This should
be done in every source file that uses gimpprint functions by putting

     #include <gimp-print/gimp-print.h>

at the top of each file.

* Menu:

* Main functions::              Essential functions every program must call.
* stp_vars_t functions::        Using stp_vars_t.
* Dither functions::            Dither algorithms.
* Options functions::           Options.
* Paper functions::             Paper size and orientation.
* Printer functions::           Printer selection.
* Settings functions::          Getting and changing settings.
* Version functions::           Getting libgimpprint version information.


File: gimpprint.info,  Node: Main functions,  Next: stp_vars_t functions,  Up: Functions

Main functions
==============

   These functions are essential to the correct functioning of
libgimpprint.  All or most other functions in the library depend
absolutely upon them.  In the case of `stp_init', this function _must_
be called before any of the other functions in the library.

 - Function: int stp_init (void)
     This function initialises the libgimpprint library. It must be
     called before any of the other libgimpprint functions are called.
     It is responsible for setting up message catalogues (for
     internationalisation). This function may be called more than once,
     at any stage during the execution of a program.

     It returns zero on success, nonzero on failure.

   `stp_init' might be used as follows:

     int
     main (int argc, char **argv)
     {
       stp_init();
     
       ...
     
     }

 - Function: void * stp_malloc (size_t SIZE)
     Where SIZE is the amount of memory to allocate (in bytes).

     This function allocates memory. It will always return a pointer to
     the allocated memory. It will not return on failure.

     It returns a pointer to the allocated memory.


File: gimpprint.info,  Node: stp_vars_t functions,  Next: Dither functions,  Prev: Main functions,  Up: Functions

`stp_vars_t' functions
======================

 - Data type: void * stp_vars_t
     This is an opaque data type, whose structure is not visible to the
     user.  This object contains all of the information about settings
     for a given printer, such as color (contrast, brightness), the
     type of printer, the dithering algorithm in use, and so forth.
     Please see the `stp_set_*' and `stp_get_*' functions below for the
     accessors and mutators for this data type.

 - Function: stp_vars_t stp_allocate_vars (void)
     Allocate a new `stp_vars_t' with default settings for all members.

 - Function: void stp_copy_vars (stp_vars_t VD, const stp_vars_t VS)
     Copy the settings from VS to VD.

 - Function: stp_vars_t stp_allocate_copy (const stp_vars_t VS)
     Allocate a new `stp_vars_t', copying settings from VS.

 - Function: void stp_free_vars (stp_vars_t VV)
     Free all resources associated with VV.  VV must not be used in any
     way following this call.

 - Function: const char * stp_get_output_to (const stp_vars_t VV)
 - Function: void stp_set_output_to (stp_vars_t VV, const char *VAL)
 - Function: void stp_set_output_to_n (stp_vars_t VV, const char *VAL,
          int BYTES)
     Get or set the name of the command that this job will be printed
     to.  This is used by front ends; the driver library always prints
     to a stream provided by the front end and never uses this directly.

 - Function: const char * stp_get_driver (const stp_vars_t VV)
 - Function: void stp_set_driver (stp_vars_t VV, const char *VAL)
 - Function: void stp_set_driver_n (stp_vars_t VV, const char *VAL, int
          BYTES)
     Get or set the name of the driver (the type of printer).

 - Function: const char * stp_get_ppd_file (const stp_vars_t VV)
 - Function: void stp_set_ppd_file (stp_vars_t VV, const char *VAL)
 - Function: void stp_set_ppd_file_n (stp_vars_t VV, const char *VAL,
          int BYTES)
     Get or set the name of the PPD file used by this print job.
     Normally, only PostScript printers use PPD files.

 - Function: const char * stp_get_resolution (const stp_vars_t VV)
 - Function: void stp_set_resolution (stp_vars_t VV, const char *VAL)
 - Function: void stp_set_resolution_n (stp_vars_t VV, const char *VAL,
          int BYTES)
     Get or set the resolution to be used in this print job.  Different
     drivers support different resolutions, and many drivers support
     multiple quality settings for a given DPI resolution.

 - Function: const char * stp_get_media_size (const stp_vars_t VV)
 - Function: void stp_set_media_size (stp_vars_t VV, const char *VAL)
 - Function: void stp_set_media_size_n (stp_vars_t VV, const char *VAL,
          int BYTES)
     Get or set the name of the media size (e. g. A3, letter, legal) to
     be used in this print job.

 - Function: const char * stp_get_media_type (const stp_vars_t VV)
 - Function: void stp_set_media_type (stp_vars_t VV, const char *VAL)
 - Function: void stp_set_media_type_n (stp_vars_t VV, const char *VAL,
          int BYTES)
     Get or set the name of the media type (e. g. plain paper, photo
     quality inkjet paper) to be used in this print job.

 - Function: const char * stp_get_media_source (const stp_vars_t VV)
 - Function: void stp_set_media_source (stp_vars_t VV, const char *VAL)
 - Function: void stp_set_media_source_n (stp_vars_t VV, const char
          *VAL, int BYTES)
     Get or set the name of the media source (e. g. manual feed, tray
     A) to be used in this print job.

 - Function: const char * stp_get_ink_type (const stp_vars_t VV)
 - Function: void stp_set_ink_type (stp_vars_t VV, const char *VAL)
 - Function: void stp_set_ink_type_n (stp_vars_t VV, const char *VAL,
          int BYTES)
     Get or set the name of the ink type (e. g. four color standard, six
     color photo) to be used in this print job.

 - Function: const char * stp_get_dither_algorithm (const stp_vars_t VV)
 - Function: void stp_set_dither_algorithm (stp_vars_t VV, const char
          *VAL)
 - Function: void stp_set_dither_algorithm_n (stp_vars_t VV, const char
          *VAL, int BYTES)
     Get or set the dither algorithm to be used in this print job.

 - Function: int stp_get_output_type (const stp_vars_t VV)
 - Function: void stp_set_output_type (stp_vars_t VV, int VAL)
     Get or set the output type (color, grayscale, black and white) for
     this print job.

 - Function: int stp_get_orientation (const stp_vars_t VV)
 - Function: void stp_set_orientation (stp_vars_t VV, int VAL)
     Get or set the paper orientation for this print job.

 - Function: int stp_get_left (const stp_vars_t VV)
 - Function: void stp_set_left (stp_vars_t VV, int VAL)
     Get or set the left margin (in 1/72 inch units, or "points") for
     this print job.

 - Function: int stp_get_top (const stp_vars_t VV)
 - Function: void stp_set_top (stp_vars_t VV, int VAL)
     Get or set the top margin (in 1/72 inch units, or "points") for
     this print job.

 - Function: int stp_get_image_type (const stp_vars_t VV)
 - Function: void stp_set_image_type (stp_vars_t VV, int VAL)
     Get or set the image type (line art, continuous tone, solid colors)
     for this print job.

 - Function: int stp_get_unit (const stp_vars_t VV)
 - Function: void stp_set_unit (stp_vars_t VV, int VAL)
     Get or set the base unit (inches or centimeters) for this print
     job.  This is provided for front ends; the package itself uses
     points as its unit of measurement.

 - Function: int stp_get_page_width (const stp_vars_t VV)
 - Function: void stp_set_page_width (stp_vars_t VV, int VAL)
     Get or set the width of the printed region of the page.

 - Function: int stp_get_page_height (const stp_vars_t VV)
 - Function: void stp_set_page_height (stp_vars_t VV, int VAL)
     Get or set the height of the printed region of the page.

 - Function: int stp_get_input_color_model (const stp_vars_t VV)
 - Function: void stp_set_input_color_model (stp_vars_t VV, int VAL)
     Get or set the color model (currently RGB or CMY) of the input to
     the driver.  Most front ends will use RGB input.

 - Function: int stp_get_output_color_model (const stp_vars_t VV)
 - Function: void stp_set_output_color_model (stp_vars_t VV, int VAL)
     Get or set the color model (currently RGB or CMY) of the output of
     the driver.  Most printers will use CMY.

 - Function: float stp_get_scaling (const stp_vars_t VV)
 - Function: void stp_set_scaling (stp_vars_t VV, float VAL)
     Get or set the scaling factor of the image.  If the scaling factor
     is greater than 0, it is interpreted as a percent (5.0-100.0 is
     the valid range) of the printable page region, using the more
     restrictive axis.  For example, if the image to be printed should
     be 3" (wide) x 2" (high), and the printable page region is
     8"x10.5", the scale factor should be 37.5 (3"/8").

     If the scaling is less than zero, it is interpreted as pixels per
     inch.

     It is likely that in the future this will be migrated into the
     front end.  There is no particular reason why the driver needs to
     know about this.

 - Function: float stp_get_gamma (const stp_vars_t VV)
 - Function: void stp_set_gamma (stp_vars_t VV, float VAL)
     Get or set the gamma of the print job (valid range: 0.1-4.0;
     default 1.0).  Note that this is not the absolute gamma used by
     the print job; it is scaled by the gamma appropriate for the
     printer.  This is true for all of the numerical parameters.

 - Function: float stp_get_brightness (const stp_vars_t VV)
 - Function: void stp_set_brightness (stp_vars_t VV, float VAL)
     Get or set the brightness of the print job (valid range: 0.0-2.0;
     default: 1.0).  Any value other than 1.0 will result in some
     possible values not being used; if brightness is less than 1.0, no
     output point will be pure white, and if brightness is greater than
     1.0, no output point will be pure black (or cyan, or magenta, or
     yellow).

 - Function: float stp_get_contrast (const stp_vars_t VV)
 - Function: void stp_set_contrast (stp_vars_t VV, float VAL)
     Get or set the contrast of the print job (valid range: 0.0-4.0;
     default: 1.0).  Values less than 1.0 will result in pure white or
     black not being used (0.0 will make the entire image 50% gray).
     Values greater than 1.0 do not hard clip; while the contrast in the
     midtones increases, it only asymptotically approaches the limits.

 - Function: float stp_get_cyan (const stp_vars_t VV)
 - Function: void stp_set_cyan (stp_vars_t VV, float VAL)
     Get or set the cyan adjustment of the print job (range: 0.0-4.0;
     default: 1.0).  This currently adjusts the gamma of the cyan
     curve.  It is scaled by the cyan adjustment for the printer model
     in question.

 - Function: float stp_get_magenta (const stp_vars_t VV)
 - Function: void stp_set_magenta (stp_vars_t VV, float VAL)
     Get or set the magenta adjustment of the print job (range:
     0.0-4.0; default: 1.0).  This currently adjusts the gamma of the
     magenta curve.  It is scaled by the magenta adjustment for the
     printer model in question.

 - Function: float stp_get_yellow (const stp_vars_t VV)
 - Function: void stp_set_yellow (stp_vars_t VV, float VAL)
     Get or set the yellow adjustment of the print job (range: 0.0-4.0;
     default: 1.0).  This currently adjusts the gamma of the yellow
     curve.  It is scaled by the yellow adjustment for the printer
     model in question.

 - Function: float stp_get_saturation (const stp_vars_t VV)
 - Function: void stp_set_saturation (stp_vars_t VV, float VAL)
     Get or set the saturation of the print job (range: 0.0-9.0;
     default: 1.0).  Saturation of 0.0 produces grayscale output using
     composite (CMY or CMYK, as appropriate for the printer) color.

 - Function: float stp_get_density (const stp_vars_t VV)
 - Function: void stp_set_density (stp_vars_t VV, float VAL)
     Get or set the density of the print job (range: 0.0-2.0; default:
     1.0).  This adjusts the amount of ink deposited in a linear fashion
     for all channels.  It is scaled by the density appropriate for the
     choice of printer, resolution, paper type, and other factors that
     the driver may deem appropriate.

 - Function: float stp_get_app_gamma (const stp_vars_t VV)
 - Function: void stp_set_app_gamma (stp_vars_t VV, float VAL)
     Get or set the gamma of the input (i. e. what the driving
     application uses).

 - Function: void * stp_get_lut (const stp_vars_t VV)
 - Function: void stp_set_lut (stp_vars_t VV, void *VAL)
     Get or set the color lookup table for the print job.  This is
     useful outside of the library for computing a preview of the
     printed result.  The lookup table itself should be treated as an
     opaque handle.

 - Function: unsigned char * stp_get_cmap (const stp_vars_t VV)
 - Function: void stp_set_cmap (stp_vars_t VV, unsigned char *VAL)
     Get or set the color map for the print job.  This is a table of
     R,G,B values for 8-bit indexed input.  This may be moved outside
     of the library in the future; in this case, the front end would be
     required to do its own mapping and supply true-color RGB to the
     driver.

   The following methods are used to perform output and error reporting
by the driver.  The driver supplies a stream of output bytes; the front
end is responsible for providing methods that accept this output and
handle it appropriately.

 - Function: stp_outfunc_t stp_get_outfunc (const stp_vars_t VV)
 - Function: void stp_set_outfunc (const stp_vars_t VV, stp_outfunc_t
          VAL)
 - Function: void * stp_get_outdata (const stp_vars_t VV)
 - Function: void stp_set_outdata (stp_vars_t VV, void *VAL)
      - Data type:  stp_outfunc_t
               typedef void (*stp_outfunc_t) (void *data,
                             const char *buffer, size_t bytes);
     Get or set the output function the driver will use.  The
     front end must supply a suitable function for accepting the output
     data.  The `stp_set_outdata' method provides a way of passing an
     appropriate object to the output function.

 - Function: stp_outfunc_t stp_get_errfunc (const stp_vars_t VV)
 - Function: void stp_set_errfunc (const stp_vars_t VV, stp_outfunc_t
          VAL)
 - Function: void * stp_get_errdata (const stp_vars_t VV)
 - Function: void stp_set_errdata (stp_vars_t VV, void *VAL)
     Get or set the error reporting function that the driver will use.
     This is used to report errors or debugging information, and must be
     supplied.  A typical errfunc will simply print whatever it's
     passed to stderr.

   /*  * hue_map is an array of 49 doubles representing the mapping of
hue  * from (0..6) to (0..6) in increments of .125.  The hue_map is in
CMY space,  * so hue=0 is cyan.   */ typedef void
(*stp_convert_t)(const stp_vars_t vars, const unsigned char *in,
                      unsigned short *out, int *zero_mask,
                 int width, int bpp, const unsigned char *cmap,
                      const double *hue_map, const double *lum_map,
                          const double *sat_map);

 - Function: void stp_merge_printvars (stp_vars_t USER, const
          stp_vars_t PRINT)

 - Function: void stp_allocate_lut (stp_vars_t V, size_t STEPS)

 - Function: void stp_free_lut (stp_vars_t V)

 - Function: void stp_compute_lut (stp_vars_t V, size_t STEPS)


File: gimpprint.info,  Node: Dither functions,  Next: Options functions,  Prev: stp_vars_t functions,  Up: Functions

Dither functions
================

 - Function: size_t stp_dither_algorithm_count (void)

 - Function: const char * stp_dither_algorithm_name (int ID)

 - Function: const char * stp_default_dither_algorithm (void)

