g/5\.12\.3/s//@VERSION@/g
/^=head2 Installation Prefix/i
=head1 Customizations in Apple's Perl

Several custom features have been added to the version of perl in Mac OS X.

=head2 Module Search Path (@INC)

Since 10.4 "Tiger", system administrators can easily add paths to perl's
module search path.
The file '/Library/Perl/${version}/PrependToPath' contains paths (one per
line) that will be added to the beginning of the search path, while the file
'/Library/Perl/${version}/AppendToPath' contains paths that will be added
to the end of the search path.

By default, Mac OS X does not come with a PrependToPath file, but does come
with an AppendToPath file.
This file contains the path '/System/Library/Perl/Extras/${version}', where
third-party perl modules that Apple ships on Mac OS X, are installed.
In addition, it contains the paths to previous versions of
'/Library/Perl/${version}' (where ${version} are the previous versions of perl
that shipped in Mac OS X), to maintain backwards compatibility.

In 10.5 "Leopard" and beyond, the environment variable NO_PERL_PREPENDTOPATH
(set to anything) will cause perl to not load any PrependToPath file.
Likewise, the NO_PERL_APPENDTOPATH environment variable will case perl to not
load any AppendToPath file.

In 10.5.7 for versions of perl before @VERSION@, there is a new path,
'/Library/Perl/Updates/${version}' that comes before the system perl directory.
When 'INSTALLDIRS=perl' is specified to Makefile.PL, modules that
previous overwrite those in '/System/Library/Perl/${version}', will now be
install in '/Library/Perl/Updates/${version}'.
This allows Apple to update modules in the system perl, but users will
get the versions they installed in '/Library/Perl/Updates/${version}'.

In addition, the Config parameters "installprivlib" and "installarchlib" now
corresponds to this new directory.
There are also the new parameters "installupdateslib", "installupdatesarch",
"updateslib" and "updatesarch", which also correspond to this new directory,
and are provided for completeness.

However, for perl @VERSION@ in Mac OS X 10.7, the order of the include
paths was changed so that '/Library/Perl/@VERSION@' came before
'/System/Library/Perl/@VERSION@', so '/Library/Perl/Updates' is no longer needed.
The Config parameters "installprivlib" and "installarchlib" have returned
to their original values, and "installupdateslib", "installupdatesarch",
"updateslib" and "updatesarch" have been removed.

=head2 Dtrace Support

Dtrace support has been added to perl to allow tracing of perl subroutine
calls, both entry and return.
Here is a quick example:

    % cat test.pl
    #!/usr/bin/perl

    sub a {
	print "Ah! death. Welcome to thee brother\n";
    }

    sub b {
	print "Where art thou a()?\n";
	a();
    }

    sub c {
	print "The band of alphabets\n";
	b();
    }

    sub main {
	c();
    }

    main();
    % cat pltest.d
    perl$target:::
    {
	printf("%s\n", copyinstr(arg0));
    }
    % sudo dtrace -s pltest.d -c 'perl test.pl'
    dtrace: description 'perl$target::: ' matched 8 probes
    The band of alphabets
    Where art thou a()?
    Ah! death. Welcome to thee brother
    dtrace: pid 50272 has exited
    CPU     ID                    FUNCTION:NAME
      0  14231       Perl_pp_entersub:sub-entry main

      0  14231       Perl_pp_entersub:sub-entry c

      0  14231       Perl_pp_entersub:sub-entry b

      0  14231       Perl_pp_entersub:sub-entry a

      0  15806      Perl_pp_leavesub:sub-return a

      0  15806      Perl_pp_leavesub:sub-return b

      0  15806      Perl_pp_leavesub:sub-return c

      0  15806      Perl_pp_leavesub:sub-return main

=head2 64-bit Support

Since 10.5 "Leopard", Mac OS X provided both 32 and 64-bit support for libraries
and frameworks, allowing both 32 and 64-bit applications to be written.
While running perl (and all other command-line programs) remained 32-bit, the
'libperl.dylib' library is 32/64 bits.
This allows programs with embedded
perl support to run in both 32 and 64-bit mode as needed.

To support this, changes to the Config module were made to return the correct
values for the internal sizes of perl types.
For example, "longsize" return 4 in 32-bits, while it returns 8 in 64-bits.

Related to this support is the new environment variable ARCHFLAGS, which
provides a way to build extensions for different machine and 32/64-bit
architectures.
The default architecture to build extensions before 10.5 was the (single)
architecture of the building machine.
In 10.5, this became building both 32-bit PowerPC and Intel.
In 10.6 and beyond, the default architectures were changed to building 32-bit
for both PowerPC and Intel, and 64-bit only for Intel.
With ARCHFLAGS, this can be changed to whatever architectures the user
wants to build.
For example:

    % env ARCHFLAGS='-arch i386 -arch x86_64' perl Makefile.PL
    % make
    % make install

will build only 2-way universal.

=head2 Multiple Version Support

Since 10.6 "SnowLeopard", more than one version of perl are supported.
So out of the box, the default version of perl is @VERSION_DEFAULT@.
However, to provide backwards compatibility with previous versions of perl,
especially for systems that have installed (version-specific) perl modules, or
to provide newer versions of perl that we aren't ready to make the default,
'/usr/bin/perl' can be switched to use an alternate version, on a per-user or
system-wide basis.
The alternate version of perl that is provided is @VERSION_ALT@.

Users can select the alternate version
by simply running the following command:

    % defaults write com.apple.versioner.perl Version @VERSION_ALT@

Subsequent invocations of '/usr/bin/perl' will then use the @VERSION_ALT@ version.

To set defaults systemwide, use the above command, but replace the third
argument with '/Library/Preferences/com.apple.versioner.perl' (admin privileges
will be required).

The environment variable VERSIONER_PERL_VERSION (set to one of the supported versions)
can also be set, and it overrides the settings in any preference files.

Note: this may changes in future versions of Mac OS X, which may use
an improved scheme for making such settings.

=head1 Building Perl

.
/64-bit PPC support/s//64-bit Support/
/PPC64/s//64-bit/
/^Last modified /s/ [^ ]*$/ 2011-10-31./
w
