/*
 * Copyright (c) 2006 Kungliga Tekniska HÃ¶gskolan
 * (Royal Institute of Technology, Stockholm, Sweden). 
 * All rights reserved. 
 *
 * Portions Copyright (c) 2009 - 2010 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
 *
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
 *
 * 2. Redistributions in binary form must reproduce the above copyright 
 *    notice, this list of conditions and the following disclaimer in the 
 *    documentation and/or other materials provided with the distribution. 
 *
 * 3. Neither the name of the Institute nor the names of its contributors 
 *    may be used to endorse or promote products derived from this software 
 *    without specific prior written permission. 
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGE. 
 */
/* $Id$ */

command = {
	name = "supported-mechanisms"
	help = "Print the supported mechanisms"
	option = {
		long = "options"
		type = "flag"
	}
}
command = {
	name = "acquire-credential"
	help = "Acquire initial credential"
	option = {
		long = "user"
		type = "string"
		argument = "domain"
	}
	option = {
		long = "realm"
		type = "string"
		argument = "domain"
	}
	option = {
		long = "kdc-hostname"
		type = "string"
		argument = "hostname"
	}
	option = {
		long = "certificate-persistant"
		type = "string"
		argument = "persistent reference"
	}
	option = {
		long = "mech"
		type = "string"
		argument = "gssapi mechanism"
	}
	option = {
		long = "validate"
		type = "flag"
	}
	option = {
		long = "server-hostname"
		type = "string"
		argument = "server name used for validation"
	}
	option = {
		long = "source-app-identifier"
		type = "string"
		argument = "source app identifier for per app vpn"
	}
	option = {
		long = "source-app-audit-token"
		type = "string"
		argument = "file containing the audit token"
	}
	min_args = "0"
	max_args = "1"
	argument = "[user name]"
}
command = {
	name = "list-credentials"
	help = "List available credentials"
	option = {
		long = "verbose"
		type = "flag"
	}
	option = {
		long = "mech"
		type = "string"
		argument = "gssapi mechanism"
	}

	min_args = "0"
	max_args = "0"
}
command = {
	option = {
		long = "name-type"
		type = "string"
		argument = "name-type"
	}
	option = {
		long = "mech"
		type = "string"
		argument = "gssapi mechanism"
	}
	option = {
		long = "all"
		short = "A"
		type = "flag"
	}
	option = {
		long = "uuid"
		type = "string"
		argument = "cache entry"
	}
	name = "destroy"
	argument = "[user name]"
	min_args = "0"
	max_args = "1"
	help = "Destroy one or all credentials of optional mech type."
}
command = {
	option = {
		long = "name-type"
		type = "string"
		argument = "name-type"
	}
	option = {
		long = "mech"
		type = "string"
		argument = "gssapi mechanism"
	}
	name = "hold"
	argument = "user"
	help = "Retain refcount on credential"
	min_args = "0"
	max_args = "1"
}
command = {
	option = {
		long = "name-type"
		type = "string"
		argument = "name-type"
	}
	option = {
		long = "mech"
		type = "string"
		argument = "gssapi mechanism"
	}
	name = "unhold"
	argument = "user"
	help = "Release refcount on credential"
	min_args = "0"
	max_args = "1"
}
command = {
	option = {
		long = "name-type"
		type = "string"
		argument = "name-type"
	}
	option = {
		long = "mech"
		type = "string"
		argument = "gssapi mechanism"
	}
	name = "get-label"
	argument = "name label"
	help = "Get label on credential"
	min_args = "2"
	max_args = "2"
}
command = {
	option = {
		long = "name-type"
		type = "string"
		argument = "name-type"
	}
	option = {
		long = "mech"
		type = "string"
		argument = "gssapi mechanism"
	}
	name = "set-label"
	argument = "name label data"
	help = "Set label on credential"
	min_args = "2"
	max_args = "3"
}
command = {
	name = "attrs-for-mech"
	help = "Print the attributes for mechs"
	option = {
		long = "all"
		type = "flag"
	}
	option = {
		long = "mech"
		type = "string"
		argument = "mechanism"
	}
}
command = {
	option = {
		long = "mech"
		type = "string"
		argument = "mechanism"
	}
	option = {
		long = "minor-status"
		type = "flag"
	}
	name = "display-status"
	argument = "status-code"
	help = "unparse major and minor status codes"
	min_args = "1"
}
command = {
	option = {
		long = "mech"
		type = "string"
		argument = "mechanism"
	}
	name = "credentials-status"
	help = "dump status of credentials available in caches"
}
command = {
	name = "delete-all"
	argument = "alt-dsid"
	help = "delete all the credentials for the supplied altdsid"
	max_args = "1"
	min_args = "1"
}
command = {
	name = "help"
	name = "?"
	argument = "[command]"
	min_args = "0"
	max_args = "1"
	help = "Help! I need somebody."
}
