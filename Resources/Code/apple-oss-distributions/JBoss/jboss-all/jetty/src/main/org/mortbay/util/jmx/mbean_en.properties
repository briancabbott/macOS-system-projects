
LifeCycle            = Object implementing org.mortbay.util.LifeCycle
LifeCycle.started    = True if the instance has been started and is still running.
LifeCycle.start()    = Initialize and start the instance.
LifeCycle.stop()     = Stop the instance.

Code                 = Debugging and Defensive programming support.
Code.debug           = True if debug output is to be generated.
Code.suppressStack   = True if stack trace to be suppressed.
Code.suppressWarnings= True if warnings are to be suppressed.
Code.verbose         = Integer level of verbosity of debug output.
Code.debugPatterns   = Coma separated list of substring patterns used to select debug output from thread, class, file and/or method name.

Log                                 = The org.mortbay.util.Log logging service. \
  This object allows LogSink instances to be added. MBeans for the LogSinks are \
  created by this object.
Log.logSinks                        = An array of all registered LogSink instances.
Log.add(java.lang.String)           = Add a LogSink by class name.
Log.add(java.lang.String)[0]        = classname:LogSink class name or null for the default class.
Log.add(org.mortbay.util.LogSink)   = Add a LogSink instance.
Log.add(org.mortbay.util.LogSink)[0]= logSink:LogSink instance.
Log.disableLog()                    = Disable logging by stopping all LogSinks
Log.message(java.lang.String,java.lang.String)    = Log a message.
Log.message(java.lang.String,java.lang.String)[0] = tag:Message tag (eg DEBUG, WARN, etc.).
Log.message(java.lang.String,java.lang.String)[1] = message:Message string.

LogSink                         = A logging component that consumes messages from the Log mechanism.
LogSink.log(java.lang.String)   = Log a message to this sink.
LogSink.log(java.lang.String)[0]= message:formatted message

OutputStreamLogSink               = A LogSink that writes messages to a OutputStream or File.
OutputStreamLogSink.logDateFormat = The SimpleDateFormat string to use for formatting log messages.
OutputStreamLogSink.logTimezone   = The Timezone name to use for formatting log messages.
OutputStreamLogSink.logTimeStamps = If true, timestamps are added when formatting messages.
OutputStreamLogSink.logLabels     = If true, the Frame details are added when formatting messages.
OutputStreamLogSink.logTags       = If true, the tag is added when formatting messages.
OutputStreamLogSink.logStackSize  = If true, an indication of stack depth is added when formatting messages.
OutputStreamLogSink.logStackTrace = If true, a stack trace is added to every logged message. 
OutputStreamLogSink.logOneLine    = If true, log messages are formatted onto a single line.
OutputStreamLogSink.append        = If true, log existing log files are appended to.
OutputStreamLogSink.utputStream   = The stream to log to.
OutputStreamLogSink.filename      = The filename to log to. If the filename contains the string yyyy_mm_dd, then the log is rolled over \
                              every local midnight to a new file named with the date.
OutputStreamLogSink.retainDays    = The number of days to retain old log files before deleting them.
OutputStreamLogSink.flushOn       = If true, the log is flushed on every log entry.


ThreadPool = Pool of reusable threads. Changes made to this MBean are not persisted.
ThreadPool.name = Name of the pool.
ThreadPool.threadClass = Class of the Threads
ThreadPool.threads = Number of thread instances.
ThreadPool.idleThreads = number of idle threads.
ThreadPool.minThreads = minimum number of threads allowed
ThreadPool.maxThreads = maximum number of threass allowed
ThreadPool.maxIdleTimeMs = Time in MS that a thread can be idle before it may expire.
ThreadPool.maxStopTimeMs = DEPRECATED
ThreadPool.poolName = The name of a shared pool of threads. All ThreadPools with the same pool name share the same pool of threads.

ThreadedServer = A ThreadPool dedicated to serving a ServerSocket
ThreadedServer.host = Host or IP of listening interface.
ThreadedServer.port = The listening port number.
ThreadedServer.address = String representation of addr:port
ThreadedServer.inetAddress = InetAddress of host.
ThreadedServer.inetAddrPort = InetAddrPort instance of InetAddress and port.
ThreadedServer.maxReadTimeMs = The maximum time in milliseconds that a read can be idle.
ThreadedServer.lingerTimeSecs = The maximum time in seconds that a connection lingers during close handshaking.

