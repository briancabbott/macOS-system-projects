diff -Naur net-snmp-5.6.orig/agent/snmp_agent.c net-snmp-5.6.working/agent/snmp_agent.c
--- net-snmp-5.6.orig/agent/snmp_agent.c	2010-07-12 03:09:16.000000000 -0700
+++ net-snmp-5.6.working/agent/snmp_agent.c	2015-09-02 20:42:16.000000000 -0700
@@ -107,6 +107,8 @@
 #include "smux/smux.h"
 #endif
 
+void            netsnmp_check_delegated_requests(void);
+
 NETSNMP_INLINE void
 netsnmp_agent_add_list_data(netsnmp_agent_request_info *ari,
                             netsnmp_data_list *node)
@@ -1392,6 +1394,11 @@
     return asp;
 }

+// hack on ugly hack
+static netsnmp_agent_session **cancelled_agent_snmp_sessions;
+static int agent_snmp_session_mark_cancelled(netsnmp_agent_session *session);
+static int agent_snmp_session_is_cancelled(netsnmp_agent_session *session);
+static int agent_snmp_session_release_cancelled(netsnmp_agent_session *session); 
 void
 free_agent_snmp_session(netsnmp_agent_session *asp)
 {
@@ -1425,6 +1427,7 @@
         netsnmp_free_cachemap(asp->cache_store);
         asp->cache_store = NULL;
     }
+    agent_snmp_session_release_cancelled(asp);
     SNMP_FREE(asp);
 }
 
@@ -1438,7 +1446,11 @@
 
     if (NULL == asp->treecache)
         return 0;
-    
+        
+    if (agent_snmp_session_is_cancelled(asp)) {
+        return 0;
+    }
+
     for (i = 0; i <= asp->treecache_num; i++) {
         for (request = asp->treecache[i].requests_begin; request;
              request = request->next) {
@@ -1514,39 +1521,47 @@
 netsnmp_remove_delegated_requests_for_session(netsnmp_session *sess)
 {
     netsnmp_agent_session *asp;
-    int count = 0;
+    int total_count = 0;
     
     for (asp = agent_delegated_list; asp; asp = asp->next) {
         /*
          * check each request
          */
+        int i;
+        int count = 0;
         netsnmp_request_info *request;
-        for(request = asp->requests; request; request = request->next) {
-            /*
-             * check session
-             */
-            netsnmp_assert(NULL!=request->subtree);
-            if(request->subtree->session != sess)
-                continue;
-
-            /*
-             * matched! mark request as done
-             */
-            netsnmp_request_set_error(request, SNMP_ERR_GENERR);
-            ++count;
+        for (i = 0; i <= asp->treecache_num; i++) {
+            for (request = asp->treecache[i].requests_begin; request;
+                 request = request->next) {
+                /*
+                 * check session
+                 */
+                netsnmp_assert(NULL!=request->subtree);
+                if(request->subtree->session != sess)
+                    continue;
+                /*
+                 * matched! mark request as done
+                 */
+                netsnmp_request_set_error(request, SNMP_ERR_GENERR);
+                ++count;
+            }
+        }
+        if (count) {
+            agent_snmp_session_mark_cancelled(asp);
+            total_count += count;
         }
     }
 
     /*
      * if we found any, that request may be finished now
      */
-    if(count) {
+    if(total_count) {
         DEBUGMSGTL(("snmp_agent", "removed %d delegated request(s) for session "
-                    "%8p\n", count, sess));
-        netsnmp_check_outstanding_agent_requests();
+                    "%8p\n", total_count, sess));
+        netsnmp_check_delegated_requests();
     }
     
-    return count;
+    return total_count;
 }
 
 int
@@ -2693,19 +2708,11 @@
     return final_status;
 }
 
-/*
- * loop through our sessions known delegated sessions and check to see
- * if they've completed yet. If there are no more delegated sessions,
- * check for and process any queued requests
- */
 void
-netsnmp_check_outstanding_agent_requests(void)
+netsnmp_check_delegated_requests(void)
 {
     netsnmp_agent_session *asp, *prev_asp = NULL, *next_asp = NULL;
 
-    /*
-     * deal with delegated requests
-     */
     for (asp = agent_delegated_list; asp; asp = next_asp) {
         next_asp = asp->next;   /* save in case we clean up asp */
         if (!netsnmp_check_for_delegated(asp)) {
@@ -2744,6 +2751,22 @@
             prev_asp = asp;
         }
     }
+}
+
+/*
+ * loop through our sessions known delegated sessions and check to see
+ * if they've completed yet. If there are no more delegated sessions,
+ * check for and process any queued requests
+ */
+void
+netsnmp_check_outstanding_agent_requests(void)
+{
+    netsnmp_agent_session *asp;
+
+    /*
+     * deal with delegated requests
+     */
+    netsnmp_check_delegated_requests();
 
     /*
      * if we are processing a set and there are more delegated
@@ -2832,6 +2855,10 @@
     case SNMP_MSG_GETBULK:
     case SNMP_MSG_GETNEXT:
         netsnmp_check_all_requests_status(asp, 0);
+        if (agent_snmp_session_is_cancelled(asp)) {
+            DEBUGMSGTL(("snmp_agent","canceling next walk for asp %p\n", asp));
+            break;
+        }
         handle_getnext_loop(asp);
         if (netsnmp_check_for_delegated(asp) &&
             netsnmp_check_transaction_id(asp->pdu->transid) !=
@@ -3769,3 +3796,72 @@
     return error_value;
 }
 /** @} */
+
+
+
+/*
+ * Ugly hack to fix bug #950602 and preserve ABI
+ * (the official patch adds netsnmp_agent_session->flags).
+ * We must create parallel database of netsnmp_agent_sessions
+ * and put cancelled requests there instead of marking
+ * netsnmp_agent_session->flags.
+ */
+static netsnmp_agent_session **cancelled_agent_snmp_sessions;
+static int cancelled_agent_snmp_sessions_count;
+static int cancelled_agent_snmp_sessions_max;
+
+int
+agent_snmp_session_mark_cancelled(netsnmp_agent_session *session)
+{
+    DEBUGMSGTL(("agent:cancelled", "Cancelling session %p\n", session));
+    if (!session)
+        return 0;
+    if (cancelled_agent_snmp_sessions_count + 1 > cancelled_agent_snmp_sessions_max) {
+        netsnmp_agent_session **aux;
+        int max = cancelled_agent_snmp_sessions_max + 10;
+        aux = realloc(cancelled_agent_snmp_sessions, sizeof(netsnmp_agent_session*) * max);
+        if (!aux)
+            return SNMP_ERR_GENERR;
+        cancelled_agent_snmp_sessions = aux;
+        cancelled_agent_snmp_sessions_max = max;
+    }
+    cancelled_agent_snmp_sessions[cancelled_agent_snmp_sessions_count] = session;
+    cancelled_agent_snmp_sessions_count++;
+    return 0;
+}
+
+int
+agent_snmp_session_is_cancelled(netsnmp_agent_session *session)
+{
+    int i;
+    for (i=0; i<cancelled_agent_snmp_sessions_count; i++)
+        if (cancelled_agent_snmp_sessions[i] == session) {
+            DEBUGMSGTL(("agent:cancelled", "session %p is cancelled\n", session));
+            return TRUE;
+    }
+    return FALSE;
+}
+
+int
+agent_snmp_session_release_cancelled(netsnmp_agent_session *session)
+{
+    int i, j;
+
+    if (!session)
+        return 0;
+
+    DEBUGMSGTL(("agent:cancelled", "Removing session %p\n", session));
+
+    /* delete the session from cancelled_agent_snmp_sessions */
+    for (i=0, j=0; j<cancelled_agent_snmp_sessions_count; i++, j++)
+        if (cancelled_agent_snmp_sessions[j] == session)
+            i--; /* don't increase i in this loop iteration */
+        else
+            cancelled_agent_snmp_sessions[i] = cancelled_agent_snmp_sessions[j];
+
+    cancelled_agent_snmp_sessions_count = i;
+
+    for (; i< cancelled_agent_snmp_sessions_max; i++)
+        cancelled_agent_snmp_sessions[i] = NULL;
+    return 0;
+}
--- net-snmp-5.6.orig/agent/mibgroup/agentx/master.c	2010-03-20 12:36:28.000000000 -0700
+++ net-snmp-5.6.working/agent/mibgroup/agentx/master.c	2015-09-02 18:20:07.000000000 -0700
@@ -214,7 +214,7 @@
     if (!cache) {
         DEBUGMSGTL(("agentx/master", "response too late on session %8p\n",
                     session));
-        return 0;
+        return 1;
     }
     requests = cache->requests;

diff -Naur net-snmp-5.6.orig/agent/mibgroup/agentx/master_admin.c net-snmp-5.6.working/agent/mibgroup/agentx/master_admin.c
--- net-snmp-5.6.orig/agent/mibgroup/agentx/master_admin.c	2010-01-24 03:41:03.000000000 -0800
+++ net-snmp-5.6.working/agent/mibgroup/agentx/master_admin.c	2015-09-02 20:54:29.000000000 -0700
@@ -149,6 +149,7 @@
     for (sp = session->subsession; sp != NULL; sp = sp->next) {
 
         if (sp->sessid == sessid) {
+         	netsnmp_remove_delegated_requests_for_session(sp);
             unregister_mibs_by_session(sp);
             unregister_index_by_session(sp);
             unregister_sysORTable_by_session(sp);

