_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,tbl|eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(GetPixelMap,return the specified pixel map)
_names(GetPixelMap,u*[ifs]v)
.SH PARAMETERS
_phead(_param1)
Specifies the name of the pixel map to return.
Accepted values are
_const(PIXEL_MAP_I_TO_I),
_const(PIXEL_MAP_S_TO_S),
_const(PIXEL_MAP_I_TO_R),
_const(PIXEL_MAP_I_TO_G),
_const(PIXEL_MAP_I_TO_B),
_const(PIXEL_MAP_I_TO_A),
_const(PIXEL_MAP_R_TO_R),
_const(PIXEL_MAP_G_TO_G),
_const(PIXEL_MAP_B_TO_B), and
_const(PIXEL_MAP_A_TO_A).
_phead(_param2)
Returns the pixel map contents.
.SH DESCRIPTION
See the _cmnd(PixelMap) reference page for a description of the acceptable
values for the _param1 parameter.
_cmnd returns in _param2 the contents of the pixel map
specified in _param1.
Pixel maps are used during the execution of
_cmnd(ReadPixels),
_cmnd(DrawPixels),
_cmnd(CopyPixels),
_cmnd(TexImage1D),
_cmnd(TexImage2D),
_cmnd(TexImage3D),
_cmnd(TexSubImage1D),
_cmnd(TexSubImage2D),
_cmnd(TexSubImage3D),
_cmnd(CopyTexImage1D),
_cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D),
_cmnd(CopyTexSubImage2D),
_cmnd(CopyTexSubImage3D),
_cmnd(ColorTable),
_cmnd(ColorSubTable),
_cmnd(CopyColorTable),
_cmnd(CopyColorSubTable),
_cmnd(ConvolutionFilter1D),
_cmnd(ConvolutionFilter2D),
_cmnd(SeparableFilter2D),
_cmnd(GetHistogram),
_cmnd(GetMinmax), and
_cmnd(GetTexImage)
to map color indices,
stencil indices,
color components,
and depth components to other values.
.P
Unsigned integer values,
if requested,
are linearly mapped from the internal fixed or floating-point representation
such that 1.0 maps to the largest representable integer value,
and 0.0 maps to 0.
Return unsigned integer values are undefined if the map value was
not in the range [0,1].
.P
To determine the required size of _param1,
call _cmnd(Get) with the appropriate symbolic constant.
.SH NOTES
If an error is generated,
no change is made to the contents of _param2.
.SH ERRORS
_const(INVALID_ENUM) is generated if _param1 is not an accepted value.
.P
_const(INVALID_OPERATION) is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
.SH ASSOCIATED GETS
.na
_cmnd(Get) with argument _const(PIXEL_MAP_I_TO_I_SIZE)
.br
_cmnd(Get) with argument _const(PIXEL_MAP_S_TO_S_SIZE)
.br
_cmnd(Get) with argument _const(PIXEL_MAP_I_TO_R_SIZE)
.br
_cmnd(Get) with argument _const(PIXEL_MAP_I_TO_G_SIZE)
.br
_cmnd(Get) with argument _const(PIXEL_MAP_I_TO_B_SIZE)
.br
_cmnd(Get) with argument _const(PIXEL_MAP_I_TO_A_SIZE)
.br
_cmnd(Get) with argument _const(PIXEL_MAP_R_TO_R_SIZE)
.br
_cmnd(Get) with argument _const(PIXEL_MAP_G_TO_G_SIZE)
.br
_cmnd(Get) with argument _const(PIXEL_MAP_B_TO_B_SIZE)
.br
_cmnd(Get) with argument _const(PIXEL_MAP_A_TO_A_SIZE)
.br
_cmnd(Get) with argument _const(MAX_PIXEL_MAP_TABLE)
.SH SEE ALSO
_cmnd(ColorSubTable),
_cmnd(ColorTable),
_cmnd(ConvolutionFilter1D),
_cmnd(ConvolutionFilter2D),
_cmnd(CopyColorSubTable),
_cmnd(CopyColorTable),
_cmnd(CopyPixels),
_cmnd(CopyTexImage1D),
_cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D),
_cmnd(CopyTexSubImage2D),
_cmnd(CopyTexSubImage3D),
_cmnd(DrawPixels),
_cmnd(GetHistogram),
_cmnd(GetMinmax),
_cmnd(GetTexImage),
_cmnd(PixelMap),
_cmnd(PixelTransfer),
_cmnd(ReadPixels),
_cmnd(SeparableFilter2D),
_cmnd(TexImage1D),
_cmnd(TexImage1D),
_cmnd(TexImage2D)
_cmnd(TexImage2D),
_cmnd(TexImage3D),
_cmnd(TexSubImage1D),
_cmnd(TexSubImage2D),
_cmnd(TexSubImage3D)
