_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ $Date$ $Revision$
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(Project, map object coordinates to window coordinates)
_names(Project)
.EQ
delim $$
.EN
.SH PARAMETERS
_phead(_param1 _param2 _param3)
Specify the object coordinates.
_phead(_param4)
Specifies the current modelview matrix (as from a _glcmnd(GetDoublev) call).
_phead(_param5)
Specifies the current projection matrix (as from a _glcmnd(GetDoublev) call).
_phead(_param6)
Specifies the current viewport (as from a _glcmnd(GetIntegerv) call).
_phead(_param7 _param8 _param9)
Return the computed window coordinates.
.SH DESCRIPTION
_cmnd transforms the specified object coordinates into window coordinates
using _param4, _param5, and _param6. The result is stored 
in _param7, _param8, and _param9. A return value of 
_const(TRUE) indicates success, a return value of _const(FALSE)
indicates failure.
.P
To compute the coordinates,
let $v ~=~ (_eqnparam1, _eqnparam2, _eqnparam3, 1.0)$
represented as a matrix with 4 rows and 1 column.
Then _cmnd computes $v sup prime$
as follows: 
.sp
.EQ
v sup prime ~=~ P ~times~ M ~times~ v
.EN
.sp
where $P$ is the current projection matrix _param5, $M$ is the current
modelview matrix _param4 (both represented as
$4 times 4$ matrices in column-major order) and '$times$' represents
matrix multiplication. 
.P 
The window coordinates are then computed as follows: 
.sp
.EQ
_eqnparam7 ~=~ _eqnparam6 (0) ~+~ _eqnparam6 (2) ~*~ (v sup prime (0) ~+~ 1)~/~2 
.EN
.sp
.EQ
_eqnparam8 ~=~ _eqnparam6 (1) ~+~ _eqnparam6 (3)~*~(v sup prime (1) ~+~ 1)~/~2 .EN
.sp
.EQ
_eqnparam9 ~=~ (v sup prime (2)  ~+~ 1)~/~ 2
.EN
.sp
.SH SEE ALSO
_glcmnd(Get), _cmnd(UnProject)

