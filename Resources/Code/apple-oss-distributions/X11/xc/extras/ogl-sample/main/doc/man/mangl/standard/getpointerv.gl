_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_C_ A real line follows.
_define(_filters,tbl|eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_C_ Use GL not OpenGL
_C_ Don't change the ordering of the main headers.
_C_ C specification (or fortran) is handled automatically
_C_ .TH is automatically added to the top of this file.
_C_ Below, use current tense, active do not capitalize the first word and dont
_C_ use a period.
_C_ the function name must appear in (APIFILE) (usually gl.h) as set in 
_C_ Makefile.
_header(GetPointerv, return the address of the specified pointer)
_names(GetPointerv)
.EQ
delim $$
.EN
.SH PARAMETERS
_phead(_param1)
Specifies the array or buffer pointer to be returned.
Symbolic constants
_const(COLOR_ARRAY_POINTER),
_const(EDGE_FLAG_ARRAY_POINTER),
_const(FEEDBACK_BUFFER_POINTER),
_const(INDEX_ARRAY_POINTER),
_const(NORMAL_ARRAY_POINTER),
_const(TEXTURE_COORD_ARRAY_POINTER),
_const(SELECTION_BUFFER_POINTER),
and
_const(VERTEX_ARRAY_POINTER)
are accepted. 
_phead(_param2)
Returns the pointer value specified by _param1.
.SH DESCRIPTION
_cmnd returns pointer information. _param1 
is a symbolic constant indicating the pointer to be returned, and
_param2 is a pointer to a location in which to place the returned data. 
.SH NOTES
_cmnd is available only if the GL version is 1.1 or greater.
.P
The pointers are all client-side state.
.P
The initial value for each pointer is 0. 
.P
When the _arbstring(multitexture) extension is supported, querying the
_const(TEXTURE_COORD_ARRAY_POINTER) returns the value for the active
client texture unit.
.SH ERRORS
_const(INVALID_ENUM) is generated if _param1 is not an accepted value.
.SH SEE ALSO 
_C_ no queries or gets listed above, alphabetize commands,
_C_ seperate with commas not .br. no command appears in the associated gets
_C_ as well as in SEE ALSO.
_cmnd(ArrayElement),
_cmnd(ClientActiveTextureARB),
_cmnd(ColorPointer),
_cmnd(DrawArrays),
_cmnd(EdgeFlagPointer),
_cmnd(FeedbackBuffer),
_cmnd(IndexPointer),
_cmnd(InterleavedArrays),
_cmnd(NormalPointer),
_cmnd(SelectBuffer),
_cmnd(TexCoordPointer),
_cmnd(VertexPointer)
