_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,tbl | eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(GetColorTableParameter, get color lookup table parameters)
_names(GetColorTableParameter,[fi]v)
.EQ
delim $$
.EN
.SH PARAMETERS
_define(@<__target>@,@<_param1>@)_C_
_define(@<__pname>@,@<_param2>@)_C_
_define(@<__params>@,@<_param3>@)_C_
_phead(__target)
The target color table.
Must be
_const(COLOR_TABLE),
_const(POST_CONVOLUTION_COLOR_TABLE),
_const(POST_COLOR_MATRIX_COLOR_TABLE),
_const(PROXY_COLOR_TABLE),
_const(PROXY_POST_CONVOLUTION_COLOR_TABLE),
_const(PROXY_POST_COLOR_MATRIX_COLOR_TABLE).
_phead(__pname)
The symbolic name of a color lookup table parameter.
Must be one of
_const(COLOR_TABLE_BIAS),
_const(COLOR_TABLE_SCALE),
_const(COLOR_TABLE_FORMAT),
_const(COLOR_TABLE_WIDTH),
_const(COLOR_TABLE_RED_SIZE),
_const(COLOR_TABLE_GREEN_SIZE),
_const(COLOR_TABLE_BLUE_SIZE),
_const(COLOR_TABLE_ALPHA_SIZE),
_const(COLOR_TABLE_LUMINANCE_SIZE), or
_const(COLOR_TABLE_INTENSITY_SIZE).
_phead(__params)
A pointer to an array where the values of the parameter will be stored.
.SH DESCRIPTION
Returns parameters specific to color table __target.
.P
When __pname is set to _const(COLOR_TABLE_SCALE) or
_const(COLOR_TABLE_BIAS), _cmnd returns the color 
table scale or bias parameters for the table specified by __target.
For these queries, __target must be set to
_const(COLOR_TABLE),
_const(POST_CONVOLUTION_COLOR_TABLE),
or _const(POST_COLOR_MATRIX_COLOR_TABLE) and
__params points to an array of four elements, which receive
the scale or bias factors for red, green, blue, and alpha, in that order.
.P
_cmnd can also be used to retrieve the format and size parameters
for a color table. For these queries, set __target to either the
color table target or the proxy color table target.
The format and size parameters are set by _cmnd(ColorTable).
.P 
The following table lists the format and size parameters that may
be queried.
For each symbolic constant listed below for __pname, 
__params must point to an array of the 
given length, and receive the values indicated.
.P
.TS
center;
lb cb lb
l c l.
_
Parameter	N	Meaning
_
_const(COLOR_TABLE_FORMAT)	1	Internal format (e.g. _const(RGBA))
_const(COLOR_TABLE_WIDTH)	1	Number of elements in table
_const(COLOR_TABLE_RED_SIZE)	1	Size of red component, in bits
_const(COLOR_TABLE_GREEN_SIZE)	1	Size of green component
_const(COLOR_TABLE_BLUE_SIZE)	1	Size of blue component
_const(COLOR_TABLE_ALPHA_SIZE)	1	Size of alpha component
_const(COLOR_TABLE_LUMINANCE_SIZE)	1	Size of luminance component
_const(COLOR_TABLE_INTENSITY_SIZE)	1	Size of intensity component
_
.TE
.SH NOTES
_cmnd is present only if _arbstring(imaging) is returned when _cmnd(GetString)
is called with an argument of _const(EXTENSIONS).
.SH ERRORS
_const(INVALID_ENUM) is generated if __target or __pname is not
an acceptable value.
.P
_const(INVALID_OPERATION) is generated if _cmnd is executed
between the execution of _cmnd(Begin) and the corresponding
execution of _cmnd(End).
.SH SEE ALSO
_cmnd(ColorTable),
_cmnd(TexParameter),
_cmnd(ColorTableParameter)
