_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_
_C_ Anything on a line after _C_ is ignored
_C_
_C_ A real line follows.
_C_
_define(_filters,tbl|eqn)_C_
_C_
_C_      eqn is automatically replaced with neqn for nroff
_C_
_C_ Use GL not OpenGL
_C_
_C_ Don't change the ordering of the main headers.
_C_
_C_ C specification (or fortran) is handled automatically
_C_
_C_ .TH is automatically added to the top of this file.
_C_
_C_ Below, use current tense, active do not capitalize the first word and dont
_C_ use a period.
_C_
_C_ The function name must appear in (APIFILE) (usually gl.h) as set in 
_C_ Makefile.
_header(ArrayElement,render a vertex using the specified vertex array element)
_names(ArrayElement)
.EQ
delim $$
.EN
.SH PARAMETERS
_phead(_param1)
Specifies an index into the enabled vertex data arrays. 
.SH DESCRIPTION
_cmnd commands are used within _cmnd(Begin)/_cmnd(End) pairs to
specify vertex and attribute data for point, line, and polygon
primitives. If _const(VERTEX_ARRAY) is enabled when _cmnd is called, a
single vertex is drawn, using 
vertex and attribute data taken from location _param1 of the enabled
arrays. If _const(VERTEX_ARRAY) is not enabled, no drawing occurs but
the attributes corresponding to the enabled arrays are modified. 
.P
Use _cmnd to construct primitives by indexing vertex data, rather than
by streaming through arrays of data in first-to-last order. Because
each call specifies only a single vertex, it is possible to explicitly
specify per-primitive attributes such as a single normal per
individual triangle.
.P
Changes made to array data between the execution of _cmnd(Begin) and the 
corresponding execution of _cmnd(End) may affect calls to _cmnd that are made
within the same _cmnd(Begin)/_cmnd(End) period in non-sequential ways.
That is, a call to 
.br
_cmnd that precedes a change to array data may 
access the changed data, and a call that follows a change to array data 
may access original data.
.SH NOTES
_cmnd is available only if the GL version is 1.1 or greater.
.P
_cmnd is included in display lists. If _cmnd is entered into a
display list, the necessary array data (determined by the array
pointers and enables) is also entered into the display list. Because
the array pointers and enables are client-side state, their values
affect display lists when the lists are created, not when the lists
are executed.
.SH SEE ALSO 
_cmnd(ClientActiveTextureARB),
_cmnd(ColorPointer),
_cmnd(DrawArrays),
_cmnd(EdgeFlagPointer),
_cmnd(GetPointerv),
_cmnd(IndexPointer),
_cmnd(InterleavedArrays),
_cmnd(NormalPointer),
_cmnd(TexCoordPointer),
_cmnd(VertexPointer)
