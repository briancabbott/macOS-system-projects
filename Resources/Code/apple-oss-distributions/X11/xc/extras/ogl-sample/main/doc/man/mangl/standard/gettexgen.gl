_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(GetTexGen,return texture coordinate generation parameters)
_names(GetTexGen,[dfi]v)
.EQ
delim $$
.EN
.SH PARAMETERS
_phead(_param1)
Specifies a texture coordinate.
Must be
_const(S),
_const(T),
_const(R), or
_const(Q).
_phead(_param2)
Specifies the symbolic name of the value(s) to be returned.
Must be either _const(TEXTURE_GEN_MODE)
or the name of one of the texture generation plane equations:
_const(OBJECT_PLANE) or _const(EYE_PLANE).
_phead(_param3)
Returns the requested data.
.SH DESCRIPTION
_cmnd returns in _param3 selected parameters of a texture coordinate
generation function that was specified using _cmnd(TexGen).
_param1 names one of the (\f2s\fP, \f2t\fP, \f2r\fP, \f2q\fP)
texture coordinates,
using the symbolic constant
_const(S),
_const(T),
_const(R), or
_const(Q).
.P
_param2 specifies one of three symbolic names:
.TP 28
_const(TEXTURE_GEN_MODE)
_param3 returns the single-valued texture generation function,
a symbolic constant. The initial value is _const(EYE_LINEAR). 
.TP 
_const(OBJECT_PLANE)
_param3 returns the four plane equation coefficients that specify
object linear-coordinate generation.
Integer values, when requested,
are mapped directly from the internal floating-point representation.
.BP
.TP
_const(EYE_PLANE)
_param3 returns the four plane equation coefficients that specify
eye linear-coordinate generation.
Integer values,
when requested,
are mapped directly from the internal floating-point representation.
The returned values are those maintained in eye coordinates.
They are not equal to the values specified using _cmnd(TexGen),
unless the modelview matrix was identity when _cmnd(TexGen) was called.
.SH NOTES
If an error is generated,
no change is made to the contents of _param3.
.P
When the _arbstring(multitexture) extension is supported, _cmnd returns
the texture coordinate generation parameters for the active texture unit.
.SH ERRORS
_const(INVALID_ENUM) is generated if _param1 or _param2 is not an
accepted value.
.P
_const(INVALID_OPERATION) is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
.SH SEE ALSO
_cmnd(ActiveTextureARB),
_cmnd(TexGen)
