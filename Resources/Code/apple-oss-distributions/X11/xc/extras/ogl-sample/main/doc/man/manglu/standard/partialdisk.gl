_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ $Date$ $Revision$
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(PartialDisk, draw an arc of a disk)
_names(PartialDisk)
.EQ
delim $$
.EN
.SH PARAMETERS
_phead(_param1)
Specifies a quadrics object (created with _cmnd(NewQuadric)).
_phead(_param2)
Specifies the inner radius of the partial disk (can be 0).
_phead(_param3)
Specifies the outer radius of the partial disk.
_phead(_param4)
Specifies the number of subdivisions around the \f2z\fP axis.
_phead(_param5)
Specifies the number of concentric rings about the origin into which
the partial disk is subdivided.
_phead(_param6)
Specifies the starting angle, in degrees, of the disk portion.
_phead(_param7)
Specifies the sweep angle, in degrees, of the disk portion.
.SH DESCRIPTION
_cmnd renders a partial disk on the $ z ~=~ 0 $ plane. A partial disk is 
similar to a full disk, except that only the subset of the disk from
_param6 through _param6 + _param7 is included (where 0 degrees is along the 
+\f2y\f axis,
90 degrees along the +\f2x\fP axis, 180 degrees along the \-\f2y\fP axis, and 
270 degrees along the \-\f2x\fP axis).
.P
The partial disk has a radius of 
_param3, and contains a concentric circular hole with a radius 
of _param2. If _param2 is 0, then no hole is generated. The partial disk is
subdivided around the \f2z\fP axis into slices (like pizza slices), and also
about the \f2z\fP axis into rings 
(as specified by _param4 and _param5, respectively).
.P
With respect to orientation, the +\f2z\fP 
side of the partial disk is considered to 
be outside (see _cmnd(QuadricOrientation)).
This means that if the 
orientation is set to _gluconst(OUTSIDE), then any normals generated 
point along the +\f2z\fP axis. Otherwise, they point along the \-\f2z\fP 
axis.
.P
If texturing is turned on (with _cmnd(QuadricTexture)), texture
coordinates are generated
linearly such that where $ r ~=~ _eqnparam3 $, the value at (\f2r\fP, 0, 0) is 
(1.0, 0.5), at (0, \f2r\fP, 0) it is (0.5, 1.0), at (\-\f2r\fP, 0, 0) 
it is (0.0, 0.5), and 
at (0, \-\f2r\fP, 0) it is (0.5, 0.0).
.SH SEE ALSO
_cmnd(Cylinder), _cmnd(Disk), _cmnd(NewQuadric), _cmnd(QuadricOrientation),
_cmnd(QuadricTexture), 
_cmnd(Sphere)

