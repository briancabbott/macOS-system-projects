_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,tbl)_C_
_header(ColorSubTable,respecify a portion of a color table)
_names(ColorSubTable)
_define(@<__target>@,@<_param1>@)_C_
_define(@<__start>@,@<_param2>@)_C_
_define(@<__count>@,@<_param3>@)_C_
_define(@<__format>@,@<_param4>@)_C_
_define(@<__type>@,@<_param5>@)_C_
_define(@<__table>@,@<_param6>@)_C_
.SH PARAMETERS
_phead(__target)
Must be one of
_const(COLOR_TABLE),
_const(POST_CONVOLUTION_COLOR_TABLE), or
_const(POST_COLOR_MATRIX_COLOR_TABLE).
_phead(__start)
The starting index of the portion of the color table to be replaced.
_phead(__count)
The number of table entries to replace.
_phead(__format)
The format of the pixel data in __table.
The allowable values are
_const(RED),
_const(GREEN),
_const(BLUE),
_const(ALPHA),
_const(LUMINANCE),
_const(LUMINANCE_ALPHA),
_const(RGB),
_const(BGR),
_const(RGBA), and
_const(BGRA).
_phead(__type)
The type of the pixel data in __table.
The allowable values are
_const(UNSIGNED_BYTE),
_const(BYTE),
_const(UNSIGNED_SHORT),
_const(SHORT),
_const(UNSIGNED_INT),
_const(INT),
_const(FLOAT),
_const(UNSIGNED_BYTE_3_3_2),
_const(UNSIGNED_BYTE_2_3_3_REV),
_const(UNSIGNED_SHORT_5_6_5),
_const(UNSIGNED_SHORT_5_6_5_REV),
_const(UNSIGNED_SHORT_4_4_4_4),
_const(UNSIGNED_SHORT_4_4_4_4_REV),
_const(UNSIGNED_SHORT_5_5_5_1),
_const(UNSIGNED_SHORT_1_5_5_5_REV),
_const(UNSIGNED_INT_8_8_8_8),
_const(UNSIGNED_INT_8_8_8_8_REV),
_const(UNSIGNED_INT_10_10_10_2), and
_const(UNSIGNED_INT_2_10_10_10_REV).
_phead(__table)
Pointer to a one-dimensional array of pixel data that is processed to
replace the specified region of the color table.
.SH DESCRIPTION
_cmnd is used to respecify a contiguous portion of a color table previously
defined using _cmnd(ColorTable).  The pixels referenced by __table replace the
portion of the existing table from indices __start to
$_eqnparam2~+~_eqnparam3~-~1$, inclusive.  This region may not include any
entries outside the range of the color table as it was originally specified.
It is not an error to specify a subtexture with width of 0, but such a
specification has no effect.
.SH NOTES
_cmnd is present only if _arbstring(imaging) is returned when _cmnd(GetString)
is called with an argument of _const(EXTENSIONS).
.P
.SH ERRORS
_const(INVALID_ENUM) is generated if __target is not one of the allowable
values.
.P
_const(INVALID_VALUE) is generated if $_eqnparam2~+~_eqnparam3~>~width$.
.P
_const(INVALID_ENUM) is generated if __format is not one of the allowable
values.
.P
_const(INVALID_ENUM) is generated if __type is not one of the allowable
values.
.P
_const(INVALID_OPERATION) is generated if _cmnd is executed
between the execution of _cmnd(Begin) and the corresponding
execution of _cmnd(End).
.SH ASSOCIATED GETS
_cmnd(GetColorTable),
_cmnd(GetColorTableParameter)
.SH SEE ALSO
_cmnd(ColorSubTable),
_cmnd(ColorTableParameter),
_cmnd(CopyColorTable),
_cmnd(CopyColorSubTable),
_cmnd(GetColorTable)
