_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,tbl|eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(AlphaFunc,specify the alpha test function)
_names(AlphaFunc)
.SH PARAMETERS
_phead(_param1)
Specifies the alpha comparison function.
Symbolic constants
_const(NEVER),
_const(LESS),
_const(EQUAL),
_const(LEQUAL),
_const(GREATER),
_const(NOTEQUAL),
_const(GEQUAL), and
_const(ALWAYS) are accepted. The initial value is _const(ALWAYS).
_phead(_param2)
Specifies the reference value that incoming alpha values are compared to.
This value is clamped to the range [0,\ 1],
where 0 represents the lowest possible alpha value
and 1 the highest possible value.
The initial reference value is 0.
.SH DESCRIPTION
The alpha test discards fragments depending on the outcome of a comparison
between an incoming fragment's alpha value and a constant reference value.
_cmnd specifies the reference value and the comparison function.
The comparison is performed only if alpha testing is enabled. By
default, it is not enabled. 
(See 
_cmnd(Enable) and _cmnd(Disable) of _const(ALPHA_TEST).)
.P
_param1 and _param2 specify the conditions under which
the pixel is drawn.
The incoming alpha value is compared to _param2
using the function specified by _param1.
If the value passes the comparison,
the incoming fragment is drawn
if it also passes subsequent stencil and depth buffer tests. 
If the value fails the comparison,
no change is made to the frame buffer at that pixel location. The
comparison functions are as follows: 
.TP 18
_const(NEVER)
Never passes. 
.TP
_const(LESS)
Passes if the incoming alpha value is less than the reference value.
.TP
_const(EQUAL)
Passes if the incoming alpha value is equal to the reference value.
.TP
_const(LEQUAL)
Passes if the incoming alpha value is less than or equal to the reference value.
.TP
_const(GREATER) 
Passes if the incoming alpha value is greater than the reference value.
.TP
_const(NOTEQUAL)
Passes if the incoming alpha value is not equal to the reference value.
.TP
_const(GEQUAL)
Passes if the incoming alpha value is greater than or equal to
the reference value.
.TP
_const(ALWAYS)
Always passes (initial value). 
.P
_cmnd operates on all pixel write operations,
including those resulting from the scan conversion of points,
lines,
polygons,
and bitmaps,
and from pixel draw and copy operations.
_cmnd does not affect screen clear operations.
.SH NOTES
Alpha testing is performed only in RGBA mode.
.SH ERRORS
_const(INVALID_ENUM) is generated if _param1 is not an accepted value.
.P
_const(INVALID_OPERATION) is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
.SH ASSOCIATED GETS
_cmnd(Get) with argument _const(ALPHA_TEST_FUNC)
.br
_cmnd(Get) with argument _const(ALPHA_TEST_REF)
.br
_cmnd(IsEnabled) with argument _const(ALPHA_TEST)
.SH SEE ALSO
_cmnd(BlendFunc),
_cmnd(Clear),
_cmnd(DepthFunc),
_cmnd(Enable),
_cmnd(StencilFunc)
