_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ $Date$ $Revision$
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(Cylinder, draw a cylinder)
_names(Cylinder)
.EQ
delim $$
.EN
.SH PARAMETERS
_phead(_param1)
Specifies the quadrics object (created with _cmnd(NewQuadric)).
_phead(_param2)
Specifies the radius of the cylinder at \f2z\fP = 0.
_phead(_param3)
Specifies the radius of the cylinder at \f2z\fP = _param4.
_phead(_param4)
Specifies the height of the cylinder.
_phead(_param5)
Specifies the number of subdivisions around the \f2z\fP axis.
_phead(_param6)
Specifies the number of subdivisions along the \f2z\fP axis.
.SH DESCRIPTION
_cmnd draws a cylinder oriented along the \f2z\fP axis. The base of the cylinder
is placed at \f2z\fP = 0, and the top at $ z ~=~ _eqnparam4 $. Like a sphere,
a cylinder is subdivided around the \f2z\fP axis into slices, and along the 
\f2z\fP axis into stacks.
.P
Note that if _param3 is set to 0.0, this routine generates a cone.
.P
If the orientation is set to _gluconst(OUTSIDE) 
(with _cmnd(QuadricOrientation)), then any generated normals
point away from the \f2z\fP axis. Otherwise, they point toward the 
\f2z\fP axis.
.P
If texturing is turned on (with _cmnd(QuadricTexture)), then texture 
coordinates are generated so that \f2t\fP ranges linearly from 0.0 
at \f2z\fP = 0 to 1.0 at \f2z\fP = _param4, and \f2s\fP 
ranges from 0.0 at the +\f2y\fP axis, to 0.25 at the +\f2x\fP axis, 
to 0.5 at the -\f2y\fP axis, to 0.75 at the \-\f2x\fP axis, 
and back to 1.0 at the +\f2y\fP axis.
.SH SEE ALSO
_cmnd(Disk), _cmnd(NewQuadric), _cmnd(PartialDisk), _cmnd(QuadricTexture), 
_cmnd(Sphere)
