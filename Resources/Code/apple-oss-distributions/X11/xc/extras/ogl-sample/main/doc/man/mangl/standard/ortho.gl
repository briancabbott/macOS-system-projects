_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(Ortho,multiply the current matrix with an orthographic matrix)
_names(Ortho)
.SH PARAMETERS
_phead(_param1 _param2)
Specify the coordinates for the left and right vertical clipping planes.
_phead(_param3 _param4)
Specify the coordinates for the bottom and top horizontal clipping planes.
_phead(_param5 _param6)
Specify the distances to the nearer and farther depth clipping planes.
These values are negative if the plane is to be behind the viewer.
.SH DESCRIPTION
_cmnd describes a transformation that produces a parallel projection.
The current matrix (see _cmnd(MatrixMode)) is multiplied by this matrix
and the result replaces the current matrix, as if
_cmnd(MultMatrix) were called with the following matrix
as its argument:
.sp
.ce
.EQ
left (  matrix {
   ccol { {2 over {_eqnparam2 - _eqnparam1}} above 0 above 0 above 0 }
   ccol { 0 above {2 over {_eqnparam4 - _eqnparam3}} above 0 above 0 }
   ccol { 0 above 0 above {-2 over {_eqnparam6 - _eqnparam5}}  above 0 }
   ccol { {t sub x}~ above {t sub y}~ above {t sub z}~ above 1~ }
} right )
.EN
.BP
.P
where
.ce
.EQ
t sub x ~=~ -^{{_eqnparam2 ~+~ _eqnparam1} over {_eqnparam2 ~-~ _eqnparam1}}
.EN

.ce
.EQ
t sub y ~=~ -^{{_eqnparam4 ~+~ _eqnparam3} over {_eqnparam4 ~-~ _eqnparam3}}
.EN

.ce
.EQ
t sub z ~=~ -^{{_eqnparam6 ~+~ _eqnparam5} over {_eqnparam6 ~-~ _eqnparam5}}
.EN

.RE
.P
Typically, the matrix mode is _const(PROJECTION), and 
(_param1, _param3,  \-_param5) and (_param2, _param4,  \-_param5)
specify the points on the near clipping plane that are mapped
to the lower left and upper right corners of the window,
respectively,
assuming that the eye is located at (0, 0, 0).
\-_param6 specifies the location of the far clipping plane.
Both _param5 and _param6 can be either positive or negative.
.P
Use _cmnd(PushMatrix) and _cmnd(PopMatrix) to save and restore
the current matrix stack.
.SH ERRORS
_const(INVALID_OPERATION) is generated if _cmnd
is executed between the execution of 
_cmnd(Begin)
and the corresponding execution of _cmnd(End).
.SH ASSOCIATED GETS
_cmnd(Get) with argument _const(MATRIX_MODE)
.br
_cmnd(Get) with argument _const(COLOR_MATRIX)
.br
_cmnd(Get) with argument _const(MODELVIEW_MATRIX)
.br
_cmnd(Get) with argument _const(PROJECTION_MATRIX)
.br
_cmnd(Get) with argument _const(TEXTURE_MATRIX)
.SH SEE ALSO
_cmnd(Frustum),
_cmnd(MatrixMode),
_cmnd(MultMatrix), 
_cmnd(PushMatrix),
_cmnd(Viewport)
