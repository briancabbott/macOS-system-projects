_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,tbl|eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(Index,set the current color index)
.P
_names(Index,u*[bsifd])
.SH PARAMETERS
_phead(_param1)
Specifies the new value for the current color index.
.P
_names(Index,u*[bsifd]v)
.SH PARAMETERS
_phead(_param1)
Specifies a pointer to a one-element array that contains
the new value for the current color index.
.SH DESCRIPTION
_cmnd updates the current (single-valued) color index.
It takes one argument, the new value for the current color index.
.P
The current index is stored as a floating-point value. 
Integer values are converted directly to floating-point values,
with no special mapping.
The initial value is 1. 
.P
Index values outside the representable range of the color index buffer
are not clamped.
However,
before an index is dithered (if enabled) and written to the frame buffer,
it is converted to fixed-point format.
Any bits in the integer portion of the resulting fixed-point value
that do not correspond to bits in the frame buffer are masked out.
.SH NOTES
_cmnd(Indexub) and _cmnd(Indexubv) are available only if the GL version is
1.1 or greater.
.P
The current index can be updated at any time.
In particular,
_cmnd can be called between a call to _cmnd(Begin) and the corresponding
call to _cmnd(End).
.SH ASSOCIATED GETS
_cmnd(Get) with argument _const(CURRENT_INDEX)
.SH SEE ALSO
_cmnd(Color),
_cmnd(IndexPointer)
