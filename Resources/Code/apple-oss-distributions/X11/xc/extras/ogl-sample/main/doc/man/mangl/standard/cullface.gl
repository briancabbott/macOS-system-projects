_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,tbl|eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(CullFace,specify whether front- or back-facing facets can be culled)
_names(CullFace)
.SH PARAMETERS
_phead(_param1)
Specifies whether front- or back-facing facets are candidates for culling.
Symbolic constants
_const(FRONT), _const(BACK), and _const(FRONT_AND_BACK) are accepted.
The initial value is _const(BACK).
.SH DESCRIPTION
_cmnd specifies whether front- or back-facing facets are culled
(as specified by \f2mode\fP) when facet culling is enabled. Facet
culling is initially disabled.
To enable and disable facet culling, call the
_cmnd(Enable) and _cmnd(Disable) commands
with the argument _const(CULL_FACE).
Facets include triangles,
quadrilaterals,
polygons,
and rectangles.
.P
_cmnd(FrontFace) specifies which of the clockwise and counterclockwise facets
are front-facing and back-facing.
See _cmnd(FrontFace).
.SH NOTES
If  _param1 is _const(FRONT_AND_BACK), no facets are drawn, but other
primitives such as points and lines are drawn.
.SH ERRORS
_const(INVALID_ENUM) is generated if _param1 is not an accepted value.
.P
_const(INVALID_OPERATION) is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
.SH ASSOCIATED GETS
_cmnd(IsEnabled) with argument _const(CULL_FACE)
.br
_cmnd(Get) with argument _const(CULL_FACE_MODE)
.SH SEE ALSO
_cmnd(Enable),
_cmnd(FrontFace)
