_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,tbl)_C_
_header(GetHistogram,get histogram table)
_names(GetHistogram)
_define(@<__target>@,@<_param1>@)_C_
_define(@<__reset>@,@<_param2>@)_C_
_define(@<__format>@,@<_param3>@)_C_
_define(@<__type>@,@<_param4>@)_C_
_define(@<__values>@,@<_param5>@)_C_
.SH PARAMETERS
_phead(__target)
Must be
_const(HISTOGRAM).
_phead(__reset)
If _const(TRUE), each component counter that is actually returned
is reset to zero.  (Other counters are unaffected.)
If _const(FALSE), none of the counters in the histogram table is modified.
_phead(__format)
The format of values to be returned in __values.
Must be one of
_const(RED),
_const(GREEN),
_const(BLUE),
_const(ALPHA),
_const(RGB),
_const(BGR),
_const(RGBA),
_const(BGRA),
_const(LUMINANCE), or
_const(LUMINANCE_ALPHA).
_phead(__type)
The type of values to be returned in __values.
Symbolic constants
_const(UNSIGNED_BYTE),
_const(BYTE),
_const(BITMAP),
_const(UNSIGNED_SHORT),
_const(SHORT),
_const(UNSIGNED_INT),
_const(INT),
_const(FLOAT),
_const(UNSIGNED_BYTE_3_3_2),
_const(UNSIGNED_BYTE_2_3_3_REV),
_const(UNSIGNED_SHORT_5_6_5),
_const(UNSIGNED_SHORT_5_6_5_REV),
_const(UNSIGNED_SHORT_4_4_4_4),
_const(UNSIGNED_SHORT_4_4_4_4_REV),
_const(UNSIGNED_SHORT_5_5_5_1),
_const(UNSIGNED_SHORT_1_5_5_5_REV),
_const(UNSIGNED_INT_8_8_8_8),
_const(UNSIGNED_INT_8_8_8_8_REV),
_const(UNSIGNED_INT_10_10_10_2), and
_const(UNSIGNED_INT_2_10_10_10_REV)
are accepted.
_phead(__values)
A pointer to storage for the returned histogram table.
.SH DESCRIPTION
_cmnd returns the current histogram table as a one-dimensional image
with the same width as the histogram.
No pixel transfer operations are performed on this image, but pixel storage
modes that are applicable to 1D images are honored.
.PP
Color components that are requested in the specified __format, but which
are not included in the internal format of the histogram, are returned as
zero.
.bp
The assignments of internal color components to the components
requested by __format are:
.TS
center;
lb lb
l l.
_
Internal Component	Resulting Component
_
Red	Red
Green	Green
Blue	Blue
Alpha	Alpha
Luminance	Red
_
.TE

.SH NOTES
_cmnd is present only if _arbstring(imaging) is returned when _cmnd(GetString)
is called with an argument of _const(EXTENSIONS).
.SH ERRORS
_const(INVALID_ENUM) is generated if __target is not _const(HISTOGRAM).
.P
_const(INVALID_ENUM) is generated if __format is not one of the allowable
values.
.P
_const(INVALID_ENUM) is generated if __type is not one of the allowable
values.
.P
_const(INVALID_OPERATION) is generated if _cmnd is executed
between the execution of _cmnd(Begin) and the corresponding
execution of _cmnd(End).
.P
.P
_const(INVALID_OPERATION) is generated if __type is one of
_const(UNSIGNED_BYTE_3_3_2),
_const(UNSIGNED_BYTE_2_3_3_REV),
_const(UNSIGNED_SHORT_5_6_5), or
_const(UNSIGNED_SHORT_5_6_5_REV)
and __format is not _const(RGB).
.P
_const(INVALID_OPERATION) is generated if __type is one of
_const(UNSIGNED_SHORT_4_4_4_4),
_const(UNSIGNED_SHORT_4_4_4_4_REV),
_const(UNSIGNED_SHORT_5_5_5_1),
_const(UNSIGNED_SHORT_1_5_5_5_REV),
_const(UNSIGNED_INT_8_8_8_8),
_const(UNSIGNED_INT_8_8_8_8_REV),
_const(UNSIGNED_INT_10_10_10_2), or
_const(UNSIGNED_INT_2_10_10_10_REV)
and __format is neither _const(RGBA) nor _const(BGRA).
.SH SEE ALSO
_cmnd(Histogram),
_cmnd(ResetHistogram),
_cmnd(GetHistogramParameter)
