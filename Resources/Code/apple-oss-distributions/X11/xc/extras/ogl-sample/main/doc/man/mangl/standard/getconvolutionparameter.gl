_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,tbl)_C_
_header(GetConvolutionParameter,get convolution parameters)
_names(GetConvolutionParameter,[fi]v)
_define(@<__target>@,@<_param1>@)_C_
_define(@<__pname>@,@<_param2>@)_C_
_define(@<__params>@,@<_param3>@)_C_
.SH PARAMETERS
_phead(__target)
The filter whose parameters are to be retrieved.
Must be one of
_const(CONVOLUTION_1D),
_const(CONVOLUTION_2D), or
_const(SEPARABLE_2D).
_phead(__pname)
The parameter to be retrieved.
Must be one of
_const(CONVOLUTION_BORDER_MODE),
_const(CONVOLUTION_BORDER_COLOR),
_const(CONVOLUTION_FILTER_SCALE),
_const(CONVOLUTION_FILTER_BIAS),
_const(CONVOLUTION_FORMAT),
_const(CONVOLUTION_WIDTH),
_const(CONVOLUTION_HEIGHT),
_const(MAX_CONVOLUTION_WIDTH), or
_const(MAX_CONVOLUTION_HEIGHT).
_phead(__params)
Pointer to storage for the parameters to be retrieved.
.SH DESCRIPTION
_cmnd retrieves convolution parameters.
__target determines which convolution filter is queried.
__pname determines which parameter is returned:
.TP
_const(CONVOLUTION_BORDER_MODE)
The convolution border mode.
See _cmnd(ConvolutionParameter) for a list of border modes.
.TP
_const(CONVOLUTION_BORDER_COLOR)
The current convolution border color.
__params must be a pointer to an array of four elements,
which will receive the red, green, blue, and alpha border colors.
.TP
_const(CONVOLUTION_FILTER_SCALE)
The current filter scale factors.
__params must be a pointer to an array of four elements,
which will receive the red, green, blue, and alpha filter scale
factors in that order.
.TP
_const(CONVOLUTION_FILTER_BIAS)
The current filter bias factors.
__params must be a pointer to an array of four elements,
which will receive the red, green, blue, and alpha filter bias
terms in that order.
.TP
_const(CONVOLUTION_FORMAT)
The current internal format.
See _cmnd(ConvolutionFilter1D), _cmnd(ConvolutionFilter2D),
and _cmnd(SeparableFilter2D) for lists of allowable formats.
.TP
_const(CONVOLUTION_WIDTH)
The current filter image width.
.TP
_const(CONVOLUTION_HEIGHT)
The current filter image height.
.TP
_const(MAX_CONVOLUTION_WIDTH)
The maximum acceptable filter image width.
.TP
_const(MAX_CONVOLUTION_HEIGHT)
The maximum acceptable filter image height.
.SH ERRORS
_const(INVALID_ENUM) is generated if __target is not one of the allowable
values.
.P
_const(INVALID_ENUM) is generated if __pname is not one of the allowable
values.
.P
_const(INVALID_ENUM) is generated if __target is _const(CONVOLUTION_1D)
and __pname is _const(CONVOLUTION_HEIGHT) or
_const(MAX_CONVOLUTION_HEIGHT).
.P
_const(INVALID_OPERATION) is generated if _cmnd is executed
between the execution of _cmnd(Begin) and the corresponding
execution of _cmnd(End).
.SH SEE ALSO
_cmnd(GetConvolutionFilter),
_cmnd(GetSeparableFilter2D),
_cmnd(ConvolutionParameter)
