_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(ReadBuffer,select a color buffer source for pixels)
_names(ReadBuffer)
.SH PARAMETERS
_phead(_param1)
Specifies a color buffer.
Accepted values are
_const(FRONT_LEFT),
_const(FRONT_RIGHT),
_const(BACK_LEFT),
_const(BACK_RIGHT),
_const(FRONT),
_const(BACK),
_const(LEFT),
_const(RIGHT), and
_const(AUX)\f2i\fP,
where \f2i\fP is between 0 and _const(AUX_BUFFERS) \-1.
.SH DESCRIPTION
_cmnd specifies a color buffer as the source for subsequent
_cmnd(ReadPixels), _cmnd(CopyTexImage1D), _cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D), _cmnd(CopyTexSubImage2D),
_cmnd(CopyTexSubImage3D), and
_cmnd(CopyPixels) commands. 
_param1 accepts one of twelve or more predefined values.
(_const(AUX0) through _const(AUX3) are always defined.)
In a fully configured system,
_const(FRONT),
_const(LEFT), and
_const(FRONT_LEFT) all name the front left buffer,
_const(FRONT_RIGHT) and
_const(RIGHT) name the front right buffer, and
_const(BACK_LEFT) and
_const(BACK) name the back left buffer.
.P
Nonstereo double-buffered configurations have only a front left and a
back left buffer.
Single-buffered configurations have a front left and a front right 
buffer if stereo, and only a front left buffer if nonstereo.
It is an error to specify a nonexistent buffer to _cmnd.
.P
_param1 is initially _const(FRONT) in single-buffered configurations,
and _const(BACK) in double-buffered configurations.
.SH ERRORS
_const(INVALID_ENUM) is generated if _param1 is not one of the twelve
(or more) accepted values.
.P
_const(INVALID_OPERATION) is generated if _param1 specifies a buffer
that does not exist.
.P
_const(INVALID_OPERATION) is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
.SH ASSOCIATED GETS
_cmnd(Get) with argument _const(READ_BUFFER)
.SH SEE ALSO
_cmnd(CopyPixels),
_cmnd(CopyTexImage1D),
_cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D),
_cmnd(CopyTexSubImage2D),
_cmnd(CopyTexSubImage3D),
_cmnd(DrawBuffer),
_cmnd(ReadPixels)
