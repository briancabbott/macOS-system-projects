_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_header(PushMatrix,push and pop the current matrix stack)
_names(PushMatrix)
_names(PopMatrix)
.SH DESCRIPTION
There is a stack of matrices for each of the matrix modes.
In _const(MODELVIEW) mode,
the stack depth is at least 32.
In the other modes,
_const(COLOR), const(PROJECTION), and _const(TEXTURE),
the depth is at least 2.
The current matrix in any mode is the matrix on the top of the stack
for that mode.
.P
_cmnd pushes the current matrix stack down by one,
duplicating the current matrix.
That is,
after a _cmnd call,
the matrix on top of the stack is identical to the one below it.
.P
_cmnd(PopMatrix) pops the current matrix stack,
replacing the current matrix with the one below it on the stack. 
.P
Initially, each of the stacks contains one matrix, an identity matrix.
.P
It is an error to push a full matrix stack,
or to pop a matrix stack that contains only a single matrix.
In either case, the error flag is set
and no other change is made to GL state.
.SH ERRORS
_const(STACK_OVERFLOW) is generated if _cmnd(PushMatrix) is called while
the current matrix stack is full.
.P
_const(STACK_UNDERFLOW) is generated if _cmnd(PopMatrix) is called while
the current matrix stack contains only a single matrix.
.P
_const(INVALID_OPERATION) is generated if _cmnd(PushMatrix) or _cmnd(PopMatrix)
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
.SH ASSOCIATED GETS
_cmnd(Get) with argument _const(MATRIX_MODE)
.br
_cmnd(Get) with argument _const(COLOR_MATRIX)
.br
_cmnd(Get) with argument _const(MODELVIEW_MATRIX)
.br
_cmnd(Get) with argument _const(PROJECTION_MATRIX)
.br
_cmnd(Get) with argument _const(TEXTURE_MATRIX)
.br
_cmnd(Get) with argument _const(COLOR_STACK_DEPTH)
.br
_cmnd(Get) with argument _const(MODELVIEW_STACK_DEPTH)
.br
_cmnd(Get) with argument _const(PROJECTION_STACK_DEPTH)
.br
_cmnd(Get) with argument _const(TEXTURE_STACK_DEPTH)
.br
_cmnd(Get) with argument _const(MAX_MODELVIEW_STACK_DEPTH)
.br
_cmnd(Get) with argument _const(MAX_PROJECTION_STACK_DEPTH)
.br
_cmnd(Get) with argument _const(MAX_TEXTURE_STACK_DEPTH)
.SH SEE ALSO
_cmnd(Frustum), 
_cmnd(LoadIdentity),
_cmnd(LoadMatrix),
_cmnd(MatrixMode),
_cmnd(MultMatrix),
_cmnd(Ortho),
_cmnd(Rotate),
_cmnd(Scale),
_cmnd(Translate),
_cmnd(Viewport)
