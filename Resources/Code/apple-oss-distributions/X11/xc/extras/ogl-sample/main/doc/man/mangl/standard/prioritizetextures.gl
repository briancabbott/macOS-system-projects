_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(PrioritizeTextures, set texture residence priority)
_names(PrioritizeTextures)
.SH PARAMETERS
_define(@<__n>@,@<_param1>@)_C_
_define(@<__textures>@,@<_param2>@)_C_
_define(@<__priorities>@,@<_param3>@)_C_
_phead(__n)
Specifies the number of textures to be prioritized.
_phead(__textures)
Specifies an array containing the names of the textures to be prioritized.
_phead(__priorities)
Specifies an array containing the texture priorities.
A priority given in an element of __priorities applies to the texture
named by the corresponding element of __textures.
.SH DESCRIPTION
_cmnd assigns the __n texture priorities given in __priorities to the
__n textures named in __textures.
.P
The GL establishes
a ``working set'' of textures that are resident in texture memory.
These textures may be bound to a texture target much more efficiently
than textures that are not resident.
By specifying a priority for each texture,
_cmnd allows applications to guide the GL implementation in determining
which textures should be resident.
.P
The priorities given in __priorities are clamped to the range [0,\1]
before they are assigned.
0 indicates the lowest priority; textures with priority 0
are least likely to be resident.
1 indicates the highest priority; textures with priority 1
are most likely to be resident.
However, textures are not guaranteed to be resident until they are used.
.P
_cmnd silently ignores attempts to prioritize texture 0, or any texture
name that does not correspond to an existing texture.
.P
_cmnd does not require that any of the textures named by __textures
be bound to a texture target.
_cmnd(TexParameter) may also be used to set a texture's priority,
but only if the texture is currently bound.
This is the only way to set the priority of a default texture.
.SH NOTES
_cmnd is available only if the GL version is 1.1 or greater.
.SH ERRORS
_const(INVALID_VALUE) is generated if __n is negative.
.P
_const(INVALID_OPERATION) is generated if _cmnd is executed
between the execution of _cmnd(Begin) and the corresponding
execution of _cmnd(End).
.SH ASSOCIATED GETS
_cmnd(GetTexParameter) with parameter name _const(TEXTURE_PRIORITY)
retrieves the priority of a currently bound texture.
.SH SEE ALSO
_cmnd(AreTexturesResident),
_cmnd(BindTexture),
_cmnd(CopyTexImage1D),
_cmnd(CopyTexImage2D),
_cmnd(TexImage1D),
_cmnd(TexImage2D),
_cmnd(TexImage3D),
_cmnd(TexParameter)
