--- /tmp/jabberd-2.2.17/c2s/c2s.c	2012-07-11 13:06:15.000000000 -0700
+++ ./jabberd2/c2s/c2s.c	2012-08-28 18:48:59.000000000 -0700
@@ -488,6 +488,35 @@ static int _c2s_client_sx_callback(sx_t 
 
             /* they sasl auth'd, so we only want the new-style session start */
             else {
+                /* Apple SACL check */
+#ifdef APPLE_ENABLE_OD_AUTH
+                int iResult = 0;
+               if (NULL != sess->c2s->ar_authorization_sacl_name) {
+                    jid_t jid;
+                    jid = jid_new(sess->s->auth_id, -1);
+                    if (NULL == jid) {
+                        log_debug(ZONE, "jid_new returned NULL for userid %s", sess->s->auth_id);
+                        sx_error(s, stream_err_INTERNAL_SERVER_ERROR, "failure during authorization");
+                        sx_close(s);
+                        jid_free(jid);
+                        iResult = -1;
+                        goto authz_done;
+                    }
+                    int iErr = od_auth_check_service_membership(jid->node, sess->c2s->ar_authorization_sacl_name);
+                    log_debug(ZONE, "_ar_od_check_password(): od_auth_check_service_membership returned %d for %s", iErr, jid->node);
+                    if (iErr != 1) {
+                        sx_error(s, stream_err_NOT_AUTHORIZED, "Authorization failed");
+                        sx_close(s);
+                        jid_free(jid);
+                        iResult = -1;
+                        goto authz_done;
+                    }
+                    jid_free(jid);
+                }
+authz_done:
+                if (0 != iResult)
+                    break;
+#endif
                 log_write(sess->c2s->log, LOG_NOTICE, "[%d] %s authentication succeeded: %s %s:%d%s%s",
                     sess->s->tag, &sess->s->auth_method[5],
                     sess->s->auth_id, sess->s->ip, sess->s->port,
@@ -820,7 +849,7 @@ int c2s_router_sx_callback(sx_t s, sx_ev
                     if(ns >= 0) {
                         elem = nad_find_elem(nad, 0, ns, "starttls", 1);
                         if(elem >= 0) {
-                            if(sx_ssl_client_starttls(c2s->sx_ssl, s, c2s->router_pemfile) == 0) {
+                            if(sx_ssl_client_starttls(c2s->sx_ssl, s, c2s->router_pemfile, c2s->router_private_key_password) == 0) {
                                 nad_free(nad);
                                 return 0;
                             }
