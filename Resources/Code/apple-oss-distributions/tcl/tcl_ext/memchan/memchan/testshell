#!/usr/local/bin/tclsh
# -*- tcl -*-
# Generic test application for all test suites
#
# This file contains a top-level script to run all of the tests
# in an extension.  Execute it by invoking "tclsh testshell -testdir ... -load".
#
# Derived from tcl 8.2/all.tcl, Copyright (c) 1998-1999 by Scriptics Corporation.
# Copyright (c) 1999 by andreas Kupries <a.kupries@westend.com>
#
# All rights reserved.
# 
# CVS $Id: testshell,v 1.1 2002/08/21 05:59:14 andreas_kupries Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    # Initialize autoloader, then load the commands and initialize
    # the package (constraints and command line argument processing).

    package require tcltest
    namespace import ::tcltest::*
}

# Directory containing the tests specified via '-testDir'.
# Scripts to load the commands to test in '-load' / '-loadfile'.

set ::tcltest::testSingleFile false

puts stdout "Tests running in interp:       [info nameofexecutable]"
puts stdout "Tests running in working dir:  $::tcltest::testsDirectory"

if {[llength $::tcltest::skip] > 0} {
    puts stdout "Skipping tests that match:  $::tcltest::skip"
}
if {[llength $::tcltest::match] > 0} {
    puts stdout "Only running tests that match:  $::tcltest::match"
}

if {[llength $::tcltest::skipFiles] > 0} {
    puts stdout "Skipping test files that match:  $::tcltest::skipFiles"
}
if {[llength $::tcltest::matchFiles] > 0} {
    puts stdout "Only sourcing test files that match:  $::tcltest::matchFiles"
}


::tcltest::loadTestedCommands

set timeCmd {clock format [clock seconds]}
puts stdout "Tests began at [eval $timeCmd]"

# Source each of the specified tests

foreach file [lsort [::tcltest::getMatchingFiles]] {
    set tail [file tail $file]
    puts stdout $tail

    if {[catch {source $file} msg]} {
	puts stdout $msg
    }
}

# cleanup
puts stdout "\nTests ended at [eval $timeCmd]"
::tcltest::cleanupTests 1
return

