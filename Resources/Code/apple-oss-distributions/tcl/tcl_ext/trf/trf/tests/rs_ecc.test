# -*- tcl -*-
# Commands covered:	rs_ecc (Reed Solomon error correction coder)
#
# This file contains a collection of tests for one or more of the commands
# the TRF extension. Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1996 Andreas Kupries (a.kupries@westend.com)
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# $Id: rs_ecc.test,v 1.2 1997/07/22 20:32:52 aku Exp $

if {[string compare test [info procs test]] == 1} then {source defs}

defblock in {
    00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
    10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f
    20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f
    30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f
    40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f
    50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f
    60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f
    70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f
    80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f
    90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f
    a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af
    b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf
    c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf
    d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df
    e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef
    f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff
}


defblock in_b {
    00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
    10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f
    20 21 22 23 24 25 26 27 28 a9 2a 2b 2c 2d 2e 2f
    30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f
    40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f
    50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f
    60 61 62 63 64 65 66 67 68 6f 6a 6b 6c 6d 6e 6f
    70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f
    80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f
    90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f
    a0 a1 12 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af
    b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf
    c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca c3 cc cd ce cf
    d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df
    e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef
    f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff
}

defblock out {
    ab e8 b0 ef 7c f7 f8 f7 f6 f5 f4 f3 f2 f1 f0 ef
    ee ed ec eb ea e9 e8 e7 e6 e5 e4 e3 e2 e1 e0 df
    de dd dc db da d9 d8 d7 d6 d5 d4 d3 d2 d1 d0 cf
    ce cd cc cb ca c9 c8 c7 c6 c5 c4 c3 c2 c1 c0 bf
    be bd bc bb ba b9 b8 b7 b6 b5 b4 b3 b2 b1 b0 af
    ae ad ac ab aa a9 a8 a7 a6 a5 a4 a3 a2 a1 a0 9f
    9e 9d 9c 9b 9a 99 98 97 96 95 94 93 92 91 90 8f
    8e 8d 8c 8b 8a 89 88 87 86 85 84 83 82 81 80 7f
    7e 7d 7c 7b 7a 79 78 77 76 75 74 73 72 71 70 6f
    6e 6d 6c 6b 6a 69 68 67 66 65 64 63 62 61 60 5f
    5e 5d 5c 5b 5a 59 58 57 56 55 54 53 52 51 50 4f
    4e 4d 4c 4b 4a 49 48 47 46 45 44 43 42 41 40 3f
    3e 3d 3c 3b 3a 39 38 37 36 35 34 33 32 31 30 2f
    2e 2d 2c 2b 2a 29 28 27 26 25 24 23 22 21 20 1f
    1e 1d 1c 1b 1a 19 18 17 16 15 14 13 12 11 10 0f
    0e 0d 0c 0b 0a 09 08 07 06 05 04 03 02 01 00

    05 56 7c 70 ca d1 08 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 ff fe fd fc fb fa f9 f8
}

#   ab e8 b0 ef 7c f7 f8 f7 f6 f5 f4 f3 f2 f1 f0 ef
#   ab e8 b0 ef 7d f7 ff f7 f6 f5 f4 13 f2 f1 f0 ef
#                *     *             *

defblock out_err_a {
    ab e8 b0 ef 7d f7 ff f7 f6 f5 f4 13 f2 f1 f0 ef
    ee ed ec eb ea e9 e8 e7 e6 e5 e4 e3 e2 e1 e0 df
    de dd dc db da d9 d8 d7 d6 d5 d4 d3 d2 d1 d0 cf
    ce cd cc cb ca c9 c8 c7 c6 c5 c4 c3 c2 c1 c0 bf
    be bd bc bb ba b9 b8 b7 b6 b5 b4 b3 b2 b1 b0 af
    ae ad ac ab aa a9 a8 a7 a6 a5 a4 a3 a2 a1 a0 9f
    9e 9d 9c 9b 9a 99 98 97 96 95 94 93 92 91 90 8f
    8e 8d 8c 8b 8a 89 88 87 86 85 84 83 82 81 80 7f
    7e 7d 7c 7b 7a 79 78 77 76 75 74 73 72 71 70 6f
    6e 6d 6c 6b 6a 69 68 67 66 65 64 63 62 61 60 5f
    5e 5d 5c 5b 5a 59 58 57 56 55 54 53 52 51 50 4f
    4e 4d 4c 4b 4a 49 48 47 46 45 44 43 42 41 40 3f
    3e 3d 3c 3b 3a 39 38 37 36 35 34 33 32 31 30 2f
    2e 2d 2c 2b 2a 29 28 27 26 25 24 23 22 21 20 1f
    1e 1d 1c 1b 1a 19 18 17 16 15 14 13 12 11 10 0f
    0e 0d 0c 0b 0a 09 08 07 06 05 04 03 02 01 00

    05 56 7c 70 ca d1 08 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 ff fe fd fc fb fa f9 f8
}


#   ab e8 b0 ef 7c f7 f8 f7 f6 f5 f4 f3 f2 f1 f0 ef
#   ab e8 b0 ef 7d f7 ff f7 f6 f5 00 13 f2 f1 f0 ef
#                *     *          ** *

defblock out_err_b {
    ab e8 b0 ef 7c f7 f8 f7 f6 f5 f4 f3 f2 f1 f0 ef
    ee ed ec eb ea e9 e8 e7 e6 e5 e4 e3 e2 e1 e0 df
    de dd dc db da d9 d8 d7 d6 d5 d4 d3 d2 d1 d0 cf
    ce cd cc c3 ca c9 c8 c7 c6 c5 c4 c3 c2 c1 c0 bf
    be bd bc bb ba b9 b8 b7 b6 b5 b4 b3 b2 b1 b0 af
    ae ad ac ab aa a9 a8 a7 a6 a5 a4 a3 12 a1 a0 9f
    9e 9d 9c 9b 9a 99 98 97 96 95 94 93 92 91 90 8f
    8e 8d 8c 8b 8a 89 88 87 86 85 84 83 82 81 80 7f
    7e 7d 7c 7b 7a 79 78 77 76 75 74 73 72 71 70 6f
    6e 6d 6c 6b 6a 6f 68 67 66 65 64 63 62 61 60 5f
    5e 5d 5c 5b 5a 59 58 57 56 55 54 53 52 51 50 4f
    4e 4d 4c 4b 4a 49 48 47 46 45 44 43 42 41 40 3f
    3e 3d 3c 3b 3a 39 38 37 36 35 34 33 32 31 30 2f
    2e 2d 2c 2b 2a a9 28 27 26 25 24 23 22 21 20 1f
    1e 1d 1c 1b 1a 19 18 17 16 15 14 13 12 11 10 0f
    0e 0d 0c 0b 0a 09 08 07 06 05 04 03 02 01 00

    05 56 7c 70 ca d1 08 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 ff fe fd fc fb fa f9 f8
}


# ---- test section ----

# differentiate tcl versions
if {[info tclversion] < 8.0} {
    # 7.6, use channels to transfer information, we have embedded \0s.

    test rs-ecc-1.0-7.6 {encode, place ecc information} {
	set in_c   [hex2chan $in]
	set out_c  [memchan]
	fconfigure  $out_c -translation binary
	hex -attach $out_c -mode encode

	rs_ecc -mode encode -in $in_c -out $out_c

	unstack 	 $out_c
	seek             $out_c 0
	set txt    [read $out_c]

	close $in_c
	close $out_c

	list [string length $txt] $txt
    } [list 1020 [string toupper $out]]	; # {}


    test rs-ecc-1.1-7.6 {decode without error recovery} {
	set in_c   [hex2chan $out]
	set out_c  [memchan]
	fconfigure  $out_c -translation binary
	hex -attach $out_c -mode encode

	rs_ecc -mode decode -in $in_c -out $out_c

	unstack 	 $out_c
	seek             $out_c 0
	set txt    [read $out_c]

	close $in_c
	close $out_c

	list [string length $txt] $txt
    } [list 512 [string toupper $in]]	; # {}


    test rs-ecc-1.2-7.6 {decode with error recovery} {
	set in_c   [hex2chan $out_err_a]
	set out_c  [memchan]
	fconfigure  $out_c -translation binary
	hex -attach $out_c -mode encode

	rs_ecc -mode decode -in $in_c -out $out_c

	unstack 	 $out_c
	seek             $out_c 0
	set txt    [read $out_c]

	close $in_c
	close $out_c

	list [string length $txt] $txt
    } [list 512 [string toupper $in]]	; # {}


    test rs-ecc-1.3-7.6 {decode, with partial recovery} {
	set in_c   [hex2chan $out_err_b]
	set out_c  [memchan]
	fconfigure  $out_c -translation binary
	hex -attach $out_c -mode encode
	
	rs_ecc -mode decode -in $in_c -out $out_c

	unstack 	 $out_c
	seek             $out_c 0
	set txt    [read $out_c]

	close $in_c
	close $out_c

	list [string length $txt] $txt
    } [list 512 [string toupper $in_b]]	; # {}

} else {
    # 8.x is able to work with embedded \0s.

    test rs-ecc-1.0-8.x {encode, place ecc information} {
	set txt [hex -mode encode [rs_ecc -mode encode [hex -mode decode $in]]]
	list [string length $txt] $txt
    } [list 1020 [string toupper $out]]	; # {}

    test rs-ecc-1.1-8.x {decode without error recovery} {
	set txt [hex -mode encode [rs_ecc -mode decode [hex -mode decode $out]]]
	list [string length $txt] $txt
    } [list 512 [string toupper $in]]	; # {}

    test rs-ecc-1.2-8.x {decode with error recovery} {
	set txt [hex -mode encode [rs_ecc -mode decode [hex -mode decode $out_err_a]]]
	list [string length $txt] $txt
    } [list 512 [string toupper $in]]	; # {}

    test rs-ecc-1.3-8.x {decode, with partial recovery} {
	set txt [hex -mode encode [rs_ecc -mode decode [hex -mode decode $out_err_b]]]
	list [string length $txt] $txt
    } [list 512 [string toupper $in_b]]	; # {}
}



# xx_cmp $in $in_b 32
