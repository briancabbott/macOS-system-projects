scratch-pad about Tcl-BLOB activities, speculations, ideas, etc.
inofficial file. official todo-list is part of 'man.tex'.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- uncut method ? -> unpack + cut of retrieved data



pack/unpack with tcl-like syntax.

*	structure definitions should be objects too,
	to avoid multiple compilation-overhead.

*	use internal separate interpreter to compile
	structure definitions.
	*	safer,
	*	restricted to core and structure commands,
	*	avoids cluttering of global namespace 

*	types:
	*	scalars
		*	integer (short, long, int)
		*	double
		*	float
		*	char

	*	fixed arrays
		n-times <type>

	*	dynamic arrays

	*	structures
	*	union	(not required, can be done via seek's)

*	movement:
	*	seek (start, end, current)
	*	align
	*	mark position, seek to mark

*	inquiries:	current location
			type sizes


definition usages:

*	take data from array, keyed list, simple list (hierarchical)
*	place data in array, keyed list, simple list  (hierarchical)






- better:	tcl specific format syntax
	->	formats compilable into special tcl-objects !!
	->	use such formats in pack / unpack
	->	format object inquirable about:

			number of required bytes  (unpack)
			number of generated bytes (pack)

			number of generated values   (unpack)
			number of required arguments (pack)

		reengeneerable into tcl-code (ascii representation)

=	format spec ?
	contains:	basic types
			location specs

	possibilities:
	*	type integrated
	*	separate command(s) /seek ?

	-	compilation done in separate interpreter!
	  	(initialized as SAFE !)

-- from BinarIO.README
	set recfmt [list \
		{string	2	id} \
		{int	4	controlnum} \
		{string 30	name} ]





-- more manipulation:	shift/rotate byte/bit!
			(useful in cryptography)

\item	Implement additional commands to retrieve various type sizes,
	i.e. short, int, long, float, double.
