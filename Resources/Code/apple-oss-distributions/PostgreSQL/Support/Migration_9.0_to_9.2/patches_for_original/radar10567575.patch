diff -Naur postgresql-9.0.17/contrib/cube/cubeparse.c postgresql/contrib/cube/cubeparse.c
--- postgresql-9.0.17/contrib/cube/cubeparse.c	2014-03-17 12:55:48.000000000 -0700
+++ postgresql/contrib/cube/cubeparse.c	2014-03-31 18:05:07.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,45 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         cube_yyparse
-#define yylex           cube_yylex
-#define yyerror         cube_yyerror
-#define yylval          cube_yylval
-#define yychar          cube_yychar
-#define yydebug         cube_yydebug
-#define yynerrs         cube_yynerrs
+#define yyparse cube_yyparse
+#define yylex   cube_yylex
+#define yyerror cube_yyerror
+#define yylval  cube_yylval
+#define yychar  cube_yychar
+#define yydebug cube_yydebug
+#define yynerrs cube_yynerrs
 
 
-/* Copy the first part of user declarations.  */
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     CUBEFLOAT = 258,
+     O_PAREN = 259,
+     C_PAREN = 260,
+     O_BRACKET = 261,
+     C_BRACKET = 262,
+     COMMA = 263
+   };
+#endif
+/* Tokens.  */
+#define CUBEFLOAT 258
+#define O_PAREN 259
+#define C_PAREN 260
+#define O_BRACKET 261
+#define C_BRACKET 262
+#define COMMA 263
+
 
-/* Line 268 of yacc.c  */
+
+
+/* Copy the first part of user declarations.  */
 #line 1 "cubeparse.y"
 
 /* $PostgreSQL: pgsql/contrib/cube/cubeparse.y,v 1.19 2008/11/26 08:45:11 petere Exp $ */
@@ -113,9 +133,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 118 "cubeparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -134,37 +151,20 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     CUBEFLOAT = 258,
-     O_PAREN = 259,
-     C_PAREN = 260,
-     O_BRACKET = 261,
-     C_BRACKET = 262,
-     COMMA = 263
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef int YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 168 "cubeparse.c"
+/* Line 216 of yacc.c.  */
+#line 168 "cubeparse.tab.c"
 
 #ifdef short
 # undef short
@@ -239,14 +239,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -267,11 +267,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -294,24 +294,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -327,9 +327,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -340,27 +340,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -378,7 +357,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  9
@@ -488,8 +484,8 @@
        0,     2,     5,     3,     1,     1,     3,     1,     3
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -520,7 +516,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -528,12 +525,6 @@
       16,    15,    10,    11,    13,     7,     0,    17
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-4))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        3,     3,     4,     4,     6,     5,     3,    10,     8,     0,
@@ -560,18 +551,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -581,6 +563,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -622,10 +605,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -732,20 +724,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -780,11 +769,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       , result);
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -821,6 +810,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -923,142 +913,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1092,9 +1055,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1110,16 +1074,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1146,37 +1112,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1184,28 +1127,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1235,6 +1201,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1242,6 +1209,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1264,8 +1232,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1276,6 +1245,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1285,9 +1255,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1296,16 +1263,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1331,22 +1298,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1386,8 +1357,6 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 51 "cubeparse.y"
     {
 
@@ -1413,12 +1382,10 @@
 	    
 	    *result = write_box( dim, (yyvsp[(2) - (5)]), (yyvsp[(4) - (5)]) );
     
-          }
+          ;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 77 "cubeparse.y"
     {
 	    int dim;
@@ -1443,12 +1410,10 @@
             }
 	    
 	    *result = write_box( dim, (yyvsp[(1) - (3)]), (yyvsp[(3) - (3)]) );
-          }
+          ;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 103 "cubeparse.y"
     {
             int dim;
@@ -1464,12 +1429,10 @@
             }
 
 	    *result = write_point_as_box((yyvsp[(1) - (1)]), dim);
-          }
+          ;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 121 "cubeparse.y"
     {
             int dim;
@@ -1484,57 +1447,39 @@
               YYABORT;
             }
 	    *result = write_point_as_box((yyvsp[(1) - (1)]), dim);
-          }
+          ;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 138 "cubeparse.y"
     {
              (yyval) = (yyvsp[(2) - (3)]);
-	  }
+	  ;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 144 "cubeparse.y"
     {
 			 /* alloc enough space to be sure whole list will fit */
              (yyval) = palloc(scanbuflen + 1);
 			 strcpy((yyval), (yyvsp[(1) - (1)]));
-	  }
+	  ;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 150 "cubeparse.y"
     {
              (yyval) = (yyvsp[(1) - (3)]);
 	     strcat((yyval), ",");
 	     strcat((yyval), (yyvsp[(3) - (3)]));
-	  }
+	  ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1525 "cubeparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1481 "cubeparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1543,6 +1488,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1562,10 +1508,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1573,36 +1515,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (result, YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (result, yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (result, yymsg);
+	  }
+	else
+	  {
+	    yyerror (result, YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1610,7 +1553,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1627,7 +1570,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1661,7 +1604,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1684,6 +1627,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1708,7 +1654,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1719,14 +1665,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, result);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, result);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1750,8 +1691,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 157 "cubeparse.y"
 
 
diff -Naur postgresql-9.0.17/contrib/seg/segparse.c postgresql/contrib/seg/segparse.c
--- postgresql-9.0.17/contrib/seg/segparse.c	2014-03-17 12:55:49.000000000 -0700
+++ postgresql/contrib/seg/segparse.c	2014-03-31 18:05:26.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,41 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         seg_yyparse
-#define yylex           seg_yylex
-#define yyerror         seg_yyerror
-#define yylval          seg_yylval
-#define yychar          seg_yychar
-#define yydebug         seg_yydebug
-#define yynerrs         seg_yynerrs
+#define yyparse seg_yyparse
+#define yylex   seg_yylex
+#define yyerror seg_yyerror
+#define yylval  seg_yylval
+#define yychar  seg_yychar
+#define yydebug seg_yydebug
+#define yynerrs seg_yynerrs
 
 
-/* Copy the first part of user declarations.  */
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     SEGFLOAT = 258,
+     RANGE = 259,
+     PLUMIN = 260,
+     EXTENSION = 261
+   };
+#endif
+/* Tokens.  */
+#define SEGFLOAT 258
+#define RANGE 259
+#define PLUMIN 260
+#define EXTENSION 261
+
 
-/* Line 268 of yacc.c  */
+
+
+/* Copy the first part of user declarations.  */
 #line 1 "segparse.y"
 
 /* contrib/seg/segparse.y */
@@ -116,9 +132,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 121 "segparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -137,52 +150,32 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     SEGFLOAT = 258,
-     RANGE = 259,
-     PLUMIN = 260,
-     EXTENSION = 261
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 47 "segparse.y"
-
+{
   struct BND {
     float val;
     char  ext;
     char  sigd;
   } bnd;
   char * text;
-
-
-
-/* Line 293 of yacc.c  */
-#line 174 "segparse.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 166 "segparse.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 186 "segparse.c"
+/* Line 216 of yacc.c.  */
+#line 179 "segparse.tab.c"
 
 #ifdef short
 # undef short
@@ -257,14 +250,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -285,11 +278,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -312,24 +305,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -345,9 +338,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -358,27 +351,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -396,7 +368,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  8
@@ -505,8 +494,8 @@
        0,     2,     3,     3,     2,     2,     1,     1,     2,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -537,7 +526,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -545,12 +535,6 @@
        9,    10,    12
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-3))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        2,    -1,     3,     4,     3,     6,     3,     9,     0,     6,
@@ -577,18 +561,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -598,6 +573,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -639,10 +615,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -749,20 +734,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -797,11 +779,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       , result);
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -838,6 +820,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -940,142 +923,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1109,9 +1065,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1127,16 +1084,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1163,37 +1122,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1201,28 +1137,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1252,6 +1211,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1259,6 +1219,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1281,8 +1242,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1293,6 +1255,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1302,9 +1265,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1313,16 +1273,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1348,22 +1308,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1403,8 +1367,6 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 68 "segparse.y"
     {
 	    result->lower = (yyvsp[(1) - (3)].bnd).val - (yyvsp[(3) - (3)].bnd).val;
@@ -1415,12 +1377,10 @@
 	    result->u_sigd = Max(Min(6, significant_digits(strbuf)), Max((yyvsp[(1) - (3)].bnd).sigd, (yyvsp[(3) - (3)].bnd).sigd));
 	    result->l_ext = '\0';
 	    result->u_ext = '\0';
-          }
+          ;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 79 "segparse.y"
     {
 	    result->lower = (yyvsp[(1) - (3)].bnd).val;
@@ -1437,12 +1397,10 @@
 	    result->u_sigd = (yyvsp[(3) - (3)].bnd).sigd;
 	    result->l_ext = ( (yyvsp[(1) - (3)].bnd).ext ? (yyvsp[(1) - (3)].bnd).ext : '\0' );
 	    result->u_ext = ( (yyvsp[(3) - (3)].bnd).ext ? (yyvsp[(3) - (3)].bnd).ext : '\0' );
-          }
+          ;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 96 "segparse.y"
     {
 	    result->lower = (yyvsp[(1) - (2)].bnd).val;
@@ -1451,12 +1409,10 @@
 	    result->u_sigd = 0;
 	    result->l_ext = ( (yyvsp[(1) - (2)].bnd).ext ? (yyvsp[(1) - (2)].bnd).ext : '\0' );
 	    result->u_ext = '-';
-          }
+          ;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 105 "segparse.y"
     {
 	    result->lower = -HUGE_VAL;
@@ -1465,23 +1421,19 @@
 	    result->u_sigd = (yyvsp[(2) - (2)].bnd).sigd;
 	    result->l_ext = '-';
 	    result->u_ext = ( (yyvsp[(2) - (2)].bnd).ext ? (yyvsp[(2) - (2)].bnd).ext : '\0' );
-          }
+          ;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 114 "segparse.y"
     {
 	    result->lower = result->upper = (yyvsp[(1) - (1)].bnd).val;
 	    result->l_sigd = result->u_sigd = (yyvsp[(1) - (1)].bnd).sigd;
 	    result->l_ext = result->u_ext = ( (yyvsp[(1) - (1)].bnd).ext ? (yyvsp[(1) - (1)].bnd).ext : '\0' );
-          }
+          ;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 122 "segparse.y"
     {
 			/* temp variable avoids a gcc 3.3.x bug on Sparc64 */
@@ -1490,12 +1442,10 @@
 			(yyval.bnd).ext = '\0';
 			(yyval.bnd).sigd = significant_digits((yyvsp[(1) - (1)].text));
 			(yyval.bnd).val = val;
-	  }
+	  ;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 131 "segparse.y"
     {
 			/* temp variable avoids a gcc 3.3.x bug on Sparc64 */
@@ -1504,12 +1454,10 @@
 			(yyval.bnd).ext = (yyvsp[(1) - (2)].text)[0];
 			(yyval.bnd).sigd = significant_digits((yyvsp[(2) - (2)].text));
 			(yyval.bnd).val = val;
-	  }
+	  ;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 142 "segparse.y"
     {
 			/* temp variable avoids a gcc 3.3.x bug on Sparc64 */
@@ -1518,26 +1466,14 @@
 			(yyval.bnd).ext = '\0';
 			(yyval.bnd).sigd = significant_digits((yyvsp[(1) - (1)].text));
 			(yyval.bnd).val = val;
-	  }
+	  ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1528 "segparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1475 "segparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1546,6 +1482,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1565,10 +1502,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1576,36 +1509,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (result, YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (result, yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (result, yymsg);
+	  }
+	else
+	  {
+	    yyerror (result, YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1613,7 +1547,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1630,7 +1564,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1664,7 +1598,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1687,6 +1621,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1711,7 +1648,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1722,14 +1659,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, result);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, result);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1753,8 +1685,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 152 "segparse.y"
 
 
diff -Naur postgresql-9.0.17/src/backend/bootstrap/bootparse.c postgresql/src/backend/bootstrap/bootparse.c
--- postgresql-9.0.17/src/backend/bootstrap/bootparse.c	2014-03-17 12:55:41.000000000 -0700
+++ postgresql/src/backend/bootstrap/bootparse.c	2014-03-31 18:05:47.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,85 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         boot_yyparse
-#define yylex           boot_yylex
-#define yyerror         boot_yyerror
-#define yylval          boot_yylval
-#define yychar          boot_yychar
-#define yydebug         boot_yydebug
-#define yynerrs         boot_yynerrs
+#define yyparse boot_yyparse
+#define yylex   boot_yylex
+#define yyerror boot_yyerror
+#define yylval  boot_yylval
+#define yychar  boot_yychar
+#define yydebug boot_yydebug
+#define yynerrs boot_yynerrs
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     CONST_P = 258,
+     ID = 259,
+     OPEN = 260,
+     XCLOSE = 261,
+     XCREATE = 262,
+     INSERT_TUPLE = 263,
+     XDECLARE = 264,
+     INDEX = 265,
+     ON = 266,
+     USING = 267,
+     XBUILD = 268,
+     INDICES = 269,
+     UNIQUE = 270,
+     XTOAST = 271,
+     COMMA = 272,
+     EQUALS = 273,
+     LPAREN = 274,
+     RPAREN = 275,
+     OBJ_ID = 276,
+     XBOOTSTRAP = 277,
+     XSHARED_RELATION = 278,
+     XWITHOUT_OIDS = 279,
+     XROWTYPE_OID = 280,
+     NULLVAL = 281,
+     low = 282,
+     high = 283
+   };
+#endif
+/* Tokens.  */
+#define CONST_P 258
+#define ID 259
+#define OPEN 260
+#define XCLOSE 261
+#define XCREATE 262
+#define INSERT_TUPLE 263
+#define XDECLARE 264
+#define INDEX 265
+#define ON 266
+#define USING 267
+#define XBUILD 268
+#define INDICES 269
+#define UNIQUE 270
+#define XTOAST 271
+#define COMMA 272
+#define EQUALS 273
+#define LPAREN 274
+#define RPAREN 275
+#define OBJ_ID 276
+#define XBOOTSTRAP 277
+#define XSHARED_RELATION 278
+#define XWITHOUT_OIDS 279
+#define XROWTYPE_OID 280
+#define NULLVAL 281
+#define low 282
+#define high 283
 
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+/* Copy the first part of user declarations.  */
 #line 1 "bootparse.y"
 
 /*-------------------------------------------------------------------------
@@ -169,9 +229,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 174 "bootparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -190,73 +247,31 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     CONST_P = 258,
-     ID = 259,
-     OPEN = 260,
-     XCLOSE = 261,
-     XCREATE = 262,
-     INSERT_TUPLE = 263,
-     XDECLARE = 264,
-     INDEX = 265,
-     ON = 266,
-     USING = 267,
-     XBUILD = 268,
-     INDICES = 269,
-     UNIQUE = 270,
-     XTOAST = 271,
-     COMMA = 272,
-     EQUALS = 273,
-     LPAREN = 274,
-     RPAREN = 275,
-     OBJ_ID = 276,
-     XBOOTSTRAP = 277,
-     XSHARED_RELATION = 278,
-     XWITHOUT_OIDS = 279,
-     XROWTYPE_OID = 280,
-     NULLVAL = 281,
-     low = 282,
-     high = 283
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 99 "bootparse.y"
-
+{
 	List		*list;
 	IndexElem	*ielem;
 	char		*str;
 	int			ival;
 	Oid			oidval;
-
-
-
-/* Line 293 of yacc.c  */
-#line 248 "bootparse.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 262 "bootparse.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 260 "bootparse.c"
+/* Line 216 of yacc.c.  */
+#line 275 "bootparse.tab.c"
 
 #ifdef short
 # undef short
@@ -331,14 +346,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -359,11 +374,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -386,24 +401,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -419,9 +434,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -432,27 +447,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -470,7 +464,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  28
@@ -584,7 +595,7 @@
   "OBJ_ID", "XBOOTSTRAP", "XSHARED_RELATION", "XWITHOUT_OIDS",
   "XROWTYPE_OID", "NULLVAL", "low", "high", "$accept", "TopLevel",
   "Boot_Queries", "Boot_Query", "Boot_OpenStmt", "Boot_CloseStmt",
-  "Boot_CreateStmt", "$@1", "$@2", "Boot_InsertStmt", "$@3",
+  "Boot_CreateStmt", "@1", "@2", "Boot_InsertStmt", "@3",
   "Boot_DeclareIndexStmt", "Boot_DeclareUniqueIndexStmt",
   "Boot_DeclareToastStmt", "Boot_BuildIndsStmt", "boot_index_params",
   "boot_index_param", "optbootstrap", "optsharedrelation",
@@ -627,8 +638,8 @@
        1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -679,7 +690,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -694,12 +706,6 @@
       80,    77,     0,    91,    80
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-41))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        1,     2,     3,    26,     3,     4,     3,     4,    48,    32,
@@ -741,18 +747,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -762,6 +759,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -803,10 +801,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -910,20 +917,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -957,11 +961,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -998,6 +1002,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -1100,142 +1105,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1267,9 +1245,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1285,16 +1264,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1321,37 +1302,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1359,28 +1317,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1410,6 +1391,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1417,6 +1399,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1439,8 +1422,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1451,6 +1435,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1460,9 +1445,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1471,16 +1453,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1506,22 +1488,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1561,41 +1547,33 @@
   switch (yyn)
     {
         case 14:
-
-/* Line 1806 of yacc.c  */
 #line 149 "bootparse.y"
     {
 					do_start();
 					boot_openrel((yyvsp[(2) - (2)].str));
 					do_end();
-				}
+				;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 158 "bootparse.y"
     {
 					do_start();
 					closerel((yyvsp[(2) - (2)].str));
 					do_end();
-				}
+				;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 164 "bootparse.y"
     {
 					do_start();
 					closerel(NULL);
 					do_end();
-				}
+				;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 173 "bootparse.y"
     {
 					do_start();
@@ -1605,21 +1583,17 @@
 						 (yyvsp[(5) - (8)].ival) ? " shared" : "",
 						 (yyvsp[(2) - (8)].str),
 						 (yyvsp[(3) - (8)].oidval));
-				}
+				;}
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 183 "bootparse.y"
     {
 					do_end();
-				}
+				;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 187 "bootparse.y"
     {
 					TupleDesc tupdesc;
@@ -1687,12 +1661,10 @@
 						elog(DEBUG4, "relation created with oid %u", id);
 					}
 					do_end();
-				}
+				;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 258 "bootparse.y"
     {
 					do_start();
@@ -1701,12 +1673,10 @@
 					else
 						elog(DEBUG4, "inserting row");
 					num_columns_read = 0;
-				}
+				;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 267 "bootparse.y"
     {
 					if (num_columns_read != numattr)
@@ -1716,12 +1686,10 @@
 						elog(FATAL, "relation not open");
 					InsertOneTuple((yyvsp[(2) - (6)].oidval));
 					do_end();
-				}
+				;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 280 "bootparse.y"
     {
 					Oid		relationId;
@@ -1741,12 +1709,10 @@
 								false, false, false, false, false,
 								false, false, true, false, false);
 					do_end();
-				}
+				;}
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 303 "bootparse.y"
     {
 					Oid		relationId;
@@ -1766,49 +1732,39 @@
 								true, false, false, false, false,
 								false, false, true, false, false);
 					do_end();
-				}
+				;}
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 326 "bootparse.y"
     {
 					do_start();
 
 					BootstrapToastTable((yyvsp[(6) - (6)].str), (yyvsp[(3) - (6)].oidval), (yyvsp[(4) - (6)].oidval));
 					do_end();
-				}
+				;}
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 336 "bootparse.y"
     {
 					do_start();
 					build_indices();
 					do_end();
-				}
+				;}
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 345 "bootparse.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 346 "bootparse.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 351 "bootparse.y"
     {
 					IndexElem *n = makeNode(IndexElem);
@@ -1819,149 +1775,103 @@
 					n->ordering = SORTBY_DEFAULT;
 					n->nulls_ordering = SORTBY_NULLS_DEFAULT;
 					(yyval.ielem) = n;
-				}
+				;}
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 364 "bootparse.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 365 "bootparse.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 369 "bootparse.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 370 "bootparse.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 374 "bootparse.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 34:
-
-/* Line 1806 of yacc.c  */
 #line 375 "bootparse.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 35:
-
-/* Line 1806 of yacc.c  */
 #line 379 "bootparse.y"
-    { (yyval.oidval) = (yyvsp[(2) - (2)].oidval); }
+    { (yyval.oidval) = (yyvsp[(2) - (2)].oidval); ;}
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 380 "bootparse.y"
-    { (yyval.oidval) = InvalidOid; }
+    { (yyval.oidval) = InvalidOid; ;}
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 390 "bootparse.y"
     {
 				   if (++numattr > MAXATTR)
 						elog(FATAL, "too many columns");
 				   DefineAttr((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), numattr-1);
-				}
+				;}
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 398 "bootparse.y"
-    { (yyval.oidval) = atooid((yyvsp[(1) - (1)].str)); }
+    { (yyval.oidval) = atooid((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 402 "bootparse.y"
-    { (yyval.oidval) = (yyvsp[(3) - (3)].oidval); }
+    { (yyval.oidval) = (yyvsp[(3) - (3)].oidval); ;}
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 403 "bootparse.y"
-    { (yyval.oidval) = InvalidOid; }
+    { (yyval.oidval) = InvalidOid; ;}
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 414 "bootparse.y"
-    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); }
+    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); ;}
     break;
 
   case 47:
-
-/* Line 1806 of yacc.c  */
 #line 416 "bootparse.y"
-    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); }
+    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); ;}
     break;
 
   case 48:
-
-/* Line 1806 of yacc.c  */
 #line 418 "bootparse.y"
-    { InsertOneNull(num_columns_read++); }
+    { InsertOneNull(num_columns_read++); ;}
     break;
 
   case 49:
-
-/* Line 1806 of yacc.c  */
 #line 422 "bootparse.y"
-    { (yyval.str) = yylval.str; }
+    { (yyval.str) = yylval.str; ;}
     break;
 
   case 50:
-
-/* Line 1806 of yacc.c  */
 #line 426 "bootparse.y"
-    { (yyval.str) = yylval.str; }
+    { (yyval.str) = yylval.str; ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1952 "bootparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1873 "bootparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1970,6 +1880,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1989,10 +1900,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -2000,36 +1907,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -2037,7 +1945,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -2054,7 +1962,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -2088,7 +1996,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -2111,6 +2019,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -2135,7 +2046,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -2146,14 +2057,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -2177,8 +2083,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 428 "bootparse.y"
 
 
diff -Naur postgresql-9.0.17/src/backend/parser/gram.c postgresql/src/backend/parser/gram.c
--- postgresql-9.0.17/src/backend/parser/gram.c	2014-03-17 12:55:41.000000000 -0700
+++ postgresql/src/backend/parser/gram.c	2014-03-31 18:07:49.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,184 +55,18 @@
 /* Pure parsers.  */
 #define YYPURE 1
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 1
 
 /* Substitute the variable and function names.  */
-#define yyparse         base_yyparse
-#define yylex           base_yylex
-#define yyerror         base_yyerror
-#define yylval          base_yylval
-#define yychar          base_yychar
-#define yydebug         base_yydebug
-#define yynerrs         base_yynerrs
-#define yylloc          base_yylloc
-
-/* Copy the first part of user declarations.  */
-
-/* Line 268 of yacc.c  */
-#line 1 "gram.y"
-
-
-/*#define YYDEBUG 1*/
-/*-------------------------------------------------------------------------
- *
- * gram.y
- *	  POSTGRESQL BISON rules/actions
- *
- * Portions Copyright (c) 1996-2010, PostgreSQL Global Development Group
- * Portions Copyright (c) 1994, Regents of the University of California
- *
- *
- * IDENTIFICATION
- *	  $PostgreSQL: pgsql/src/backend/parser/gram.y,v 2.713.2.1 2010/08/18 18:35:30 tgl Exp $
- *
- * HISTORY
- *	  AUTHOR			DATE			MAJOR EVENT
- *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
- *	  Andrew Yu			Oct, 1994		lispy code conversion
- *
- * NOTES
- *	  CAPITALS are used to represent terminal symbols.
- *	  non-capitals are used to represent non-terminals.
- *	  SQL92-specific syntax is separated from plain SQL/Postgres syntax
- *	  to help isolate the non-extensible portions of the parser.
- *
- *	  In general, nothing in this file should initiate database accesses
- *	  nor depend on changeable state (such as SET variables).  If you do
- *	  database accesses, your code will fail when we have aborted the
- *	  current transaction and are just parsing commands to find the next
- *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
- *	  will do the wrong thing in multi-query strings like this:
- *			SET SQL_inheritance TO off; SELECT * FROM foo;
- *	  because the entire string is parsed by gram.y before the SET gets
- *	  executed.  Anything that depends on the database or changeable state
- *	  should be handled during parse analysis so that it happens at the
- *	  right time not the wrong time.  The handling of SQL_inheritance is
- *	  a good example.
- *
- * WARNINGS
- *	  If you use a list, make sure the datum is a node so that the printing
- *	  routines work.
- *
- *	  Sometimes we assign constants to makeStrings. Make sure we don't free
- *	  those.
- *
- *-------------------------------------------------------------------------
- */
-#include "postgres.h"
-
-#include <ctype.h>
-#include <limits.h>
-
-#include "catalog/index.h"
-#include "catalog/namespace.h"
-#include "catalog/pg_trigger.h"
-#include "commands/defrem.h"
-#include "nodes/makefuncs.h"
-#include "nodes/nodeFuncs.h"
-#include "parser/gramparse.h"
-#include "parser/parser.h"
-#include "storage/lmgr.h"
-#include "utils/date.h"
-#include "utils/datetime.h"
-#include "utils/numeric.h"
-#include "utils/xml.h"
-
-
-/* Location tracking support --- simpler than bison's default */
-#define YYLLOC_DEFAULT(Current, Rhs, N) \
-	do { \
-		if (N) \
-			(Current) = (Rhs)[1]; \
-		else \
-			(Current) = (Rhs)[0]; \
-	} while (0)
-
-/*
- * Bison doesn't allocate anything that needs to live across parser calls,
- * so we can easily have it use palloc instead of malloc.  This prevents
- * memory leaks if we error out during parsing.  Note this only works with
- * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
- * if possible, so there's not really much problem anyhow, at least if
- * you're building with gcc.
- */
-#define YYMALLOC palloc
-#define YYFREE   pfree
-
-/* Private struct for the result of privilege_target production */
-typedef struct PrivTarget
-{
-	GrantTargetType targtype;
-	GrantObjectType objtype;
-	List	   *objs;
-} PrivTarget;
-
-
-#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
-#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)
-
-static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
-						 const char *msg);
-static Node *makeColumnRef(char *colname, List *indirection,
-						   int location, core_yyscan_t yyscanner);
-static Node *makeTypeCast(Node *arg, TypeName *typename, int location);
-static Node *makeStringConst(char *str, int location);
-static Node *makeStringConstCast(char *str, int location, TypeName *typename);
-static Node *makeIntConst(int val, int location);
-static Node *makeFloatConst(char *str, int location);
-static Node *makeBitStringConst(char *str, int location);
-static Node *makeNullAConst(int location);
-static Node *makeAConst(Value *v, int location);
-static Node *makeBoolAConst(bool state, int location);
-static void check_qualified_name(List *names, core_yyscan_t yyscanner);
-static List *check_func_name(List *names, core_yyscan_t yyscanner);
-static List *check_indirection(List *indirection, core_yyscan_t yyscanner);
-static List *extractArgTypes(List *parameters);
-static SelectStmt *findLeftmostSelect(SelectStmt *node);
-static void insertSelectOptions(SelectStmt *stmt,
-								List *sortClause, List *lockingClause,
-								Node *limitOffset, Node *limitCount,
-								WithClause *withClause,
-								core_yyscan_t yyscanner);
-static Node *makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg);
-static Node *doNegate(Node *n, int location);
-static void doNegateFloat(Value *v);
-static Node *makeAArrayExpr(List *elements, int location);
-static Node *makeXmlExpr(XmlExprOp op, char *name, List *named_args,
-						 List *args, int location);
-static List *mergeTableFuncParameters(List *func_args, List *columns);
-static TypeName *TableFuncTypeName(List *columns);
-
-
-
-/* Line 268 of yacc.c  */
-#line 214 "gram.c"
-
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-
-/* Enabling verbose error messages.  */
-#ifdef YYERROR_VERBOSE
-# undef YYERROR_VERBOSE
-# define YYERROR_VERBOSE 1
-#else
-# define YYERROR_VERBOSE 0
-#endif
-
-/* Enabling the token table.  */
-#ifndef YYTOKEN_TABLE
-# define YYTOKEN_TABLE 0
-#endif
-
+#define yyparse base_yyparse
+#define yylex   base_yylex
+#define yyerror base_yyerror
+#define yylval  base_yylval
+#define yychar  base_yychar
+#define yydebug base_yydebug
+#define yynerrs base_yynerrs
+#define yylloc base_yylloc
 
 /* Tokens.  */
 #ifndef YYTOKENTYPE
@@ -650,16 +487,580 @@
      UMINUS = 668
    };
 #endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define ABORT_P 269
+#define ABSOLUTE_P 270
+#define ACCESS 271
+#define ACTION 272
+#define ADD_P 273
+#define ADMIN 274
+#define AFTER 275
+#define AGGREGATE 276
+#define ALL 277
+#define ALSO 278
+#define ALTER 279
+#define ALWAYS 280
+#define ANALYSE 281
+#define ANALYZE 282
+#define AND 283
+#define ANY 284
+#define ARRAY 285
+#define AS 286
+#define ASC 287
+#define ASSERTION 288
+#define ASSIGNMENT 289
+#define ASYMMETRIC 290
+#define AT 291
+#define AUTHORIZATION 292
+#define BACKWARD 293
+#define BEFORE 294
+#define BEGIN_P 295
+#define BETWEEN 296
+#define BIGINT 297
+#define BINARY 298
+#define BIT 299
+#define BOOLEAN_P 300
+#define BOTH 301
+#define BY 302
+#define CACHE 303
+#define CALLED 304
+#define CASCADE 305
+#define CASCADED 306
+#define CASE 307
+#define CAST 308
+#define CATALOG_P 309
+#define CHAIN 310
+#define CHAR_P 311
+#define CHARACTER 312
+#define CHARACTERISTICS 313
+#define CHECK 314
+#define CHECKPOINT 315
+#define CLASS 316
+#define CLOSE 317
+#define CLUSTER 318
+#define COALESCE 319
+#define COLLATE 320
+#define COLUMN 321
+#define COMMENT 322
+#define COMMENTS 323
+#define COMMIT 324
+#define COMMITTED 325
+#define CONCURRENTLY 326
+#define CONFIGURATION 327
+#define CONNECTION 328
+#define CONSTRAINT 329
+#define CONSTRAINTS 330
+#define CONTENT_P 331
+#define CONTINUE_P 332
+#define CONVERSION_P 333
+#define COPY 334
+#define COST 335
+#define CREATE 336
+#define CREATEDB 337
+#define CREATEROLE 338
+#define CREATEUSER 339
+#define CROSS 340
+#define CSV 341
+#define CURRENT_P 342
+#define CURRENT_CATALOG 343
+#define CURRENT_DATE 344
+#define CURRENT_ROLE 345
+#define CURRENT_SCHEMA 346
+#define CURRENT_TIME 347
+#define CURRENT_TIMESTAMP 348
+#define CURRENT_USER 349
+#define CURSOR 350
+#define CYCLE 351
+#define DATA_P 352
+#define DATABASE 353
+#define DAY_P 354
+#define DEALLOCATE 355
+#define DEC 356
+#define DECIMAL_P 357
+#define DECLARE 358
+#define DEFAULT 359
+#define DEFAULTS 360
+#define DEFERRABLE 361
+#define DEFERRED 362
+#define DEFINER 363
+#define DELETE_P 364
+#define DELIMITER 365
+#define DELIMITERS 366
+#define DESC 367
+#define DICTIONARY 368
+#define DISABLE_P 369
+#define DISCARD 370
+#define DISTINCT 371
+#define DO 372
+#define DOCUMENT_P 373
+#define DOMAIN_P 374
+#define DOUBLE_P 375
+#define DROP 376
+#define EACH 377
+#define ELSE 378
+#define ENABLE_P 379
+#define ENCODING 380
+#define ENCRYPTED 381
+#define END_P 382
+#define ENUM_P 383
+#define ESCAPE 384
+#define EXCEPT 385
+#define EXCLUDE 386
+#define EXCLUDING 387
+#define EXCLUSIVE 388
+#define EXECUTE 389
+#define EXISTS 390
+#define EXPLAIN 391
+#define EXTERNAL 392
+#define EXTRACT 393
+#define FALSE_P 394
+#define FAMILY 395
+#define FETCH 396
+#define FIRST_P 397
+#define FLOAT_P 398
+#define FOLLOWING 399
+#define FOR 400
+#define FORCE 401
+#define FOREIGN 402
+#define FORWARD 403
+#define FREEZE 404
+#define FROM 405
+#define FULL 406
+#define FUNCTION 407
+#define FUNCTIONS 408
+#define GLOBAL 409
+#define GRANT 410
+#define GRANTED 411
+#define GREATEST 412
+#define GROUP_P 413
+#define HANDLER 414
+#define HAVING 415
+#define HEADER_P 416
+#define HOLD 417
+#define HOUR_P 418
+#define IDENTITY_P 419
+#define IF_P 420
+#define ILIKE 421
+#define IMMEDIATE 422
+#define IMMUTABLE 423
+#define IMPLICIT_P 424
+#define IN_P 425
+#define INCLUDING 426
+#define INCREMENT 427
+#define INDEX 428
+#define INDEXES 429
+#define INHERIT 430
+#define INHERITS 431
+#define INITIALLY 432
+#define INLINE_P 433
+#define INNER_P 434
+#define INOUT 435
+#define INPUT_P 436
+#define INSENSITIVE 437
+#define INSERT 438
+#define INSTEAD 439
+#define INT_P 440
+#define INTEGER 441
+#define INTERSECT 442
+#define INTERVAL 443
+#define INTO 444
+#define INVOKER 445
+#define IS 446
+#define ISNULL 447
+#define ISOLATION 448
+#define JOIN 449
+#define KEY 450
+#define LANGUAGE 451
+#define LARGE_P 452
+#define LAST_P 453
+#define LC_COLLATE_P 454
+#define LC_CTYPE_P 455
+#define LEADING 456
+#define LEAST 457
+#define LEFT 458
+#define LEVEL 459
+#define LIKE 460
+#define LIMIT 461
+#define LISTEN 462
+#define LOAD 463
+#define LOCAL 464
+#define LOCALTIME 465
+#define LOCALTIMESTAMP 466
+#define LOCATION 467
+#define LOCK_P 468
+#define LOGIN_P 469
+#define MAPPING 470
+#define MATCH 471
+#define MAXVALUE 472
+#define MINUTE_P 473
+#define MINVALUE 474
+#define MODE 475
+#define MONTH_P 476
+#define MOVE 477
+#define NAME_P 478
+#define NAMES 479
+#define NATIONAL 480
+#define NATURAL 481
+#define NCHAR 482
+#define NEXT 483
+#define NO 484
+#define NOCREATEDB 485
+#define NOCREATEROLE 486
+#define NOCREATEUSER 487
+#define NOINHERIT 488
+#define NOLOGIN_P 489
+#define NONE 490
+#define NOSUPERUSER 491
+#define NOT 492
+#define NOTHING 493
+#define NOTIFY 494
+#define NOTNULL 495
+#define NOWAIT 496
+#define NULL_P 497
+#define NULLIF 498
+#define NULLS_P 499
+#define NUMERIC 500
+#define OBJECT_P 501
+#define OF 502
+#define OFF 503
+#define OFFSET 504
+#define OIDS 505
+#define ON 506
+#define ONLY 507
+#define OPERATOR 508
+#define OPTION 509
+#define OPTIONS 510
+#define OR 511
+#define ORDER 512
+#define OUT_P 513
+#define OUTER_P 514
+#define OVER 515
+#define OVERLAPS 516
+#define OVERLAY 517
+#define OWNED 518
+#define OWNER 519
+#define PARSER 520
+#define PARTIAL 521
+#define PARTITION 522
+#define PASSWORD 523
+#define PLACING 524
+#define PLANS 525
+#define POSITION 526
+#define PRECEDING 527
+#define PRECISION 528
+#define PRESERVE 529
+#define PREPARE 530
+#define PREPARED 531
+#define PRIMARY 532
+#define PRIOR 533
+#define PRIVILEGES 534
+#define PROCEDURAL 535
+#define PROCEDURE 536
+#define QUOTE 537
+#define RANGE 538
+#define READ 539
+#define REAL 540
+#define REASSIGN 541
+#define RECHECK 542
+#define RECURSIVE 543
+#define REFERENCES 544
+#define REINDEX 545
+#define RELATIVE_P 546
+#define RELEASE 547
+#define RENAME 548
+#define REPEATABLE 549
+#define REPLACE 550
+#define REPLICA 551
+#define RESET 552
+#define RESTART 553
+#define RESTRICT 554
+#define RETURNING 555
+#define RETURNS 556
+#define REVOKE 557
+#define RIGHT 558
+#define ROLE 559
+#define ROLLBACK 560
+#define ROW 561
+#define ROWS 562
+#define RULE 563
+#define SAVEPOINT 564
+#define SCHEMA 565
+#define SCROLL 566
+#define SEARCH 567
+#define SECOND_P 568
+#define SECURITY 569
+#define SELECT 570
+#define SEQUENCE 571
+#define SEQUENCES 572
+#define SERIALIZABLE 573
+#define SERVER 574
+#define SESSION 575
+#define SESSION_USER 576
+#define SET 577
+#define SETOF 578
+#define SHARE 579
+#define SHOW 580
+#define SIMILAR 581
+#define SIMPLE 582
+#define SMALLINT 583
+#define SOME 584
+#define STABLE 585
+#define STANDALONE_P 586
+#define START 587
+#define STATEMENT 588
+#define STATISTICS 589
+#define STDIN 590
+#define STDOUT 591
+#define STORAGE 592
+#define STRICT_P 593
+#define STRIP_P 594
+#define SUBSTRING 595
+#define SUPERUSER_P 596
+#define SYMMETRIC 597
+#define SYSID 598
+#define SYSTEM_P 599
+#define TABLE 600
+#define TABLES 601
+#define TABLESPACE 602
+#define TEMP 603
+#define TEMPLATE 604
+#define TEMPORARY 605
+#define TEXT_P 606
+#define THEN 607
+#define TIME 608
+#define TIMESTAMP 609
+#define TO 610
+#define TRAILING 611
+#define TRANSACTION 612
+#define TREAT 613
+#define TRIGGER 614
+#define TRIM 615
+#define TRUE_P 616
+#define TRUNCATE 617
+#define TRUSTED 618
+#define TYPE_P 619
+#define UNBOUNDED 620
+#define UNCOMMITTED 621
+#define UNENCRYPTED 622
+#define UNION 623
+#define UNIQUE 624
+#define UNKNOWN 625
+#define UNLISTEN 626
+#define UNTIL 627
+#define UPDATE 628
+#define USER 629
+#define USING 630
+#define VACUUM 631
+#define VALID 632
+#define VALIDATOR 633
+#define VALUE_P 634
+#define VALUES 635
+#define VARCHAR 636
+#define VARIADIC 637
+#define VARYING 638
+#define VERBOSE 639
+#define VERSION_P 640
+#define VIEW 641
+#define VOLATILE 642
+#define WHEN 643
+#define WHERE 644
+#define WHITESPACE_P 645
+#define WINDOW 646
+#define WITH 647
+#define WITHOUT 648
+#define WORK 649
+#define WRAPPER 650
+#define WRITE 651
+#define XML_P 652
+#define XMLATTRIBUTES 653
+#define XMLCONCAT 654
+#define XMLELEMENT 655
+#define XMLFOREST 656
+#define XMLPARSE 657
+#define XMLPI 658
+#define XMLROOT 659
+#define XMLSERIALIZE 660
+#define YEAR_P 661
+#define YES_P 662
+#define ZONE 663
+#define NULLS_FIRST 664
+#define NULLS_LAST 665
+#define WITH_TIME 666
+#define POSTFIXOP 667
+#define UMINUS 668
 
 
 
-#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE
+
+/* Copy the first part of user declarations.  */
+#line 1 "gram.y"
+
+
+/*#define YYDEBUG 1*/
+/*-------------------------------------------------------------------------
+ *
+ * gram.y
+ *	  POSTGRESQL BISON rules/actions
+ *
+ * Portions Copyright (c) 1996-2010, PostgreSQL Global Development Group
+ * Portions Copyright (c) 1994, Regents of the University of California
+ *
+ *
+ * IDENTIFICATION
+ *	  $PostgreSQL: pgsql/src/backend/parser/gram.y,v 2.713.2.1 2010/08/18 18:35:30 tgl Exp $
+ *
+ * HISTORY
+ *	  AUTHOR			DATE			MAJOR EVENT
+ *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
+ *	  Andrew Yu			Oct, 1994		lispy code conversion
+ *
+ * NOTES
+ *	  CAPITALS are used to represent terminal symbols.
+ *	  non-capitals are used to represent non-terminals.
+ *	  SQL92-specific syntax is separated from plain SQL/Postgres syntax
+ *	  to help isolate the non-extensible portions of the parser.
+ *
+ *	  In general, nothing in this file should initiate database accesses
+ *	  nor depend on changeable state (such as SET variables).  If you do
+ *	  database accesses, your code will fail when we have aborted the
+ *	  current transaction and are just parsing commands to find the next
+ *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
+ *	  will do the wrong thing in multi-query strings like this:
+ *			SET SQL_inheritance TO off; SELECT * FROM foo;
+ *	  because the entire string is parsed by gram.y before the SET gets
+ *	  executed.  Anything that depends on the database or changeable state
+ *	  should be handled during parse analysis so that it happens at the
+ *	  right time not the wrong time.  The handling of SQL_inheritance is
+ *	  a good example.
+ *
+ * WARNINGS
+ *	  If you use a list, make sure the datum is a node so that the printing
+ *	  routines work.
+ *
+ *	  Sometimes we assign constants to makeStrings. Make sure we don't free
+ *	  those.
+ *
+ *-------------------------------------------------------------------------
+ */
+#include "postgres.h"
+
+#include <ctype.h>
+#include <limits.h>
+
+#include "catalog/index.h"
+#include "catalog/namespace.h"
+#include "catalog/pg_trigger.h"
+#include "commands/defrem.h"
+#include "nodes/makefuncs.h"
+#include "nodes/nodeFuncs.h"
+#include "parser/gramparse.h"
+#include "parser/parser.h"
+#include "storage/lmgr.h"
+#include "utils/date.h"
+#include "utils/datetime.h"
+#include "utils/numeric.h"
+#include "utils/xml.h"
+
+
+/* Location tracking support --- simpler than bison's default */
+#define YYLLOC_DEFAULT(Current, Rhs, N) \
+	do { \
+		if (N) \
+			(Current) = (Rhs)[1]; \
+		else \
+			(Current) = (Rhs)[0]; \
+	} while (0)
+
+/*
+ * Bison doesn't allocate anything that needs to live across parser calls,
+ * so we can easily have it use palloc instead of malloc.  This prevents
+ * memory leaks if we error out during parsing.  Note this only works with
+ * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
+ * if possible, so there's not really much problem anyhow, at least if
+ * you're building with gcc.
+ */
+#define YYMALLOC palloc
+#define YYFREE   pfree
+
+/* Private struct for the result of privilege_target production */
+typedef struct PrivTarget
 {
+	GrantTargetType targtype;
+	GrantObjectType objtype;
+	List	   *objs;
+} PrivTarget;
+
+
+#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
+#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)
+
+static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
+						 const char *msg);
+static Node *makeColumnRef(char *colname, List *indirection,
+						   int location, core_yyscan_t yyscanner);
+static Node *makeTypeCast(Node *arg, TypeName *typename, int location);
+static Node *makeStringConst(char *str, int location);
+static Node *makeStringConstCast(char *str, int location, TypeName *typename);
+static Node *makeIntConst(int val, int location);
+static Node *makeFloatConst(char *str, int location);
+static Node *makeBitStringConst(char *str, int location);
+static Node *makeNullAConst(int location);
+static Node *makeAConst(Value *v, int location);
+static Node *makeBoolAConst(bool state, int location);
+static void check_qualified_name(List *names, core_yyscan_t yyscanner);
+static List *check_func_name(List *names, core_yyscan_t yyscanner);
+static List *check_indirection(List *indirection, core_yyscan_t yyscanner);
+static List *extractArgTypes(List *parameters);
+static SelectStmt *findLeftmostSelect(SelectStmt *node);
+static void insertSelectOptions(SelectStmt *stmt,
+								List *sortClause, List *lockingClause,
+								Node *limitOffset, Node *limitCount,
+								WithClause *withClause,
+								core_yyscan_t yyscanner);
+static Node *makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg);
+static Node *doNegate(Node *n, int location);
+static void doNegateFloat(Value *v);
+static Node *makeAArrayExpr(List *elements, int location);
+static Node *makeXmlExpr(XmlExprOp op, char *name, List *named_args,
+						 List *args, int location);
+static List *mergeTableFuncParameters(List *func_args, List *columns);
+static TypeName *TableFuncTypeName(List *columns);
 
-/* Line 293 of yacc.c  */
-#line 144 "gram.y"
 
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
+
+#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
+typedef union YYSTYPE
+#line 144 "gram.y"
+{
 	core_YYSTYPE		core_yystype;
 	/* these fields must match core_YYSTYPE: */
 	int					ival;
@@ -694,15 +1095,13 @@
 	AccessPriv			*accesspriv;
 	InsertStmt			*istmt;
 	VariableSetStmt		*vsetstmt;
-
-
-
-/* Line 293 of yacc.c  */
-#line 702 "gram.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 1101 "gram.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
@@ -722,8 +1121,8 @@
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 727 "gram.c"
+/* Line 216 of yacc.c.  */
+#line 1126 "gram.tab.c"
 
 #ifdef short
 # undef short
@@ -798,14 +1197,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -826,11 +1225,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -853,24 +1252,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -887,9 +1286,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-  YYLTYPE yyls_alloc;
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+    YYLTYPE yyls;
 };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
@@ -901,27 +1300,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
       + 2 * YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -939,7 +1317,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  683
@@ -2866,8 +3261,8 @@
        1,     1,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint16 yydefact[] =
 {
@@ -3766,7 +4161,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -2000
 static const yytype_int16 yytable[] =
 {
@@ -10239,12 +10635,6 @@
        0,     0,     0,   486,   487,   488
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-3456))
-
-#define yytable_value_is_error(yytable_value) \
-  ((yytable_value) == (-2000))
-
 static const yytype_int16 yycheck[] =
 {
        0,     0,     0,     0,     0,    35,   693,   513,    49,   856,
@@ -17119,18 +17509,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -17140,6 +17521,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -17305,20 +17687,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -17354,11 +17733,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -17395,6 +17774,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -17497,142 +17877,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -17668,9 +18021,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -17686,6 +18040,10 @@
 #endif /* ! YYPARSE_PARAM */
 
 
+
+
+
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -17712,59 +18070,24 @@
 #endif
 #endif
 {
-/* The lookahead symbol.  */
+  /* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
-/* Location data for the lookahead symbol.  */
+/* Number of syntax errors so far.  */
+int yynerrs;
+/* Location data for the look-ahead symbol.  */
 YYLTYPE yylloc;
 
-    /* Number of syntax errors so far.  */
-    int yynerrs;
-
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-       `yyls': related to locations.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    /* The location stack.  */
-    YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls;
-    YYLTYPE *yylsp;
-
-    /* The locations where the error started and ended.  */
-    YYLTYPE yyerror_range[3];
-
-    YYSIZE_T yystacksize;
-
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-  YYLTYPE yyloc;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -17772,37 +18095,63 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+  /* The location stack.  */
+  YYLTYPE yylsa[YYINITDEPTH];
+  YYLTYPE *yyls = yylsa;
+  YYLTYPE *yylsp;
+  /* The locations where the error started and ended.  */
+  YYLTYPE yyerror_range[2];
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+  YYLTYPE yyloc;
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yyls = yylsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
   yylsp = yyls;
-
 #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
   /* Initialize the default location before parsing starts.  */
   yylloc.first_line   = yylloc.last_line   = 1;
-  yylloc.first_column = yylloc.last_column = 1;
+  yylloc.first_column = yylloc.last_column = 0;
 #endif
 
   goto yysetstate;
@@ -17841,7 +18190,6 @@
 		    &yyvs1, yysize * sizeof (*yyvsp),
 		    &yyls1, yysize * sizeof (*yylsp),
 		    &yystacksize);
-
 	yyls = yyls1;
 	yyss = yyss1;
 	yyvs = yyvs1;
@@ -17863,9 +18211,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
-	YYSTACK_RELOCATE (yyls_alloc, yyls);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+	YYSTACK_RELOCATE (yyls);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -17886,9 +18234,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -17897,16 +18242,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -17932,22 +18277,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -17988,48 +18337,38 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 623 "gram.y"
     {
 				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
-			}
+			;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 630 "gram.y"
     {
 					if ((yyvsp[(3) - (3)].node) != NULL)
 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
 					else
 						(yyval.list) = (yyvsp[(1) - (3)].list);
-				}
+				;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 637 "gram.y"
     {
 					if ((yyvsp[(1) - (1)].node) != NULL)
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
 					else
 						(yyval.list) = NIL;
-				}
+				;}
     break;
 
   case 107:
-
-/* Line 1806 of yacc.c  */
 #line 749 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 108:
-
-/* Line 1806 of yacc.c  */
 #line 760 "gram.y"
     {
 					CreateRoleStmt *n = makeNode(CreateRoleStmt);
@@ -18037,281 +18376,217 @@
 					n->role = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 109:
-
-/* Line 1806 of yacc.c  */
 #line 770 "gram.y"
-    {}
+    {;}
     break;
 
   case 110:
-
-/* Line 1806 of yacc.c  */
 #line 771 "gram.y"
-    {}
+    {;}
     break;
 
   case 111:
-
-/* Line 1806 of yacc.c  */
 #line 780 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 112:
-
-/* Line 1806 of yacc.c  */
 #line 781 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 113:
-
-/* Line 1806 of yacc.c  */
 #line 785 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 114:
-
-/* Line 1806 of yacc.c  */
 #line 786 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 115:
-
-/* Line 1806 of yacc.c  */
 #line 791 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("password",
 									 (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 116:
-
-/* Line 1806 of yacc.c  */
 #line 796 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("password", NULL);
-				}
+				;}
     break;
 
   case 117:
-
-/* Line 1806 of yacc.c  */
 #line 800 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encryptedPassword",
 									 (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 118:
-
-/* Line 1806 of yacc.c  */
 #line 805 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("unencryptedPassword",
 									 (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 119:
-
-/* Line 1806 of yacc.c  */
 #line 810 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 120:
-
-/* Line 1806 of yacc.c  */
 #line 814 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 121:
-
-/* Line 1806 of yacc.c  */
 #line 818 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("inherit", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 122:
-
-/* Line 1806 of yacc.c  */
 #line 822 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("inherit", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 123:
-
-/* Line 1806 of yacc.c  */
 #line 826 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("createdb", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 124:
-
-/* Line 1806 of yacc.c  */
 #line 830 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("createdb", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 125:
-
-/* Line 1806 of yacc.c  */
 #line 834 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("createrole", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 126:
-
-/* Line 1806 of yacc.c  */
 #line 838 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("createrole", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 127:
-
-/* Line 1806 of yacc.c  */
 #line 842 "gram.y"
     {
 					/* For backwards compatibility, synonym for SUPERUSER */
 					(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 128:
-
-/* Line 1806 of yacc.c  */
 #line 847 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 129:
-
-/* Line 1806 of yacc.c  */
 #line 851 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("canlogin", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 130:
-
-/* Line 1806 of yacc.c  */
 #line 855 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("canlogin", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 131:
-
-/* Line 1806 of yacc.c  */
 #line 859 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[(3) - (3)].ival)));
-				}
+				;}
     break;
 
   case 132:
-
-/* Line 1806 of yacc.c  */
 #line 863 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("validUntil", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 133:
-
-/* Line 1806 of yacc.c  */
 #line 868 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 134:
-
-/* Line 1806 of yacc.c  */
 #line 874 "gram.y"
-    { (yyval.defelt) = (yyvsp[(1) - (1)].defelt); }
+    { (yyval.defelt) = (yyvsp[(1) - (1)].defelt); ;}
     break;
 
   case 135:
-
-/* Line 1806 of yacc.c  */
 #line 877 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("sysid", (Node *)makeInteger((yyvsp[(2) - (2)].ival)));
-				}
+				;}
     break;
 
   case 136:
-
-/* Line 1806 of yacc.c  */
 #line 881 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("adminmembers", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 137:
-
-/* Line 1806 of yacc.c  */
 #line 885 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 138:
-
-/* Line 1806 of yacc.c  */
 #line 889 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 139:
-
-/* Line 1806 of yacc.c  */
 #line 893 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 140:
-
-/* Line 1806 of yacc.c  */
 #line 907 "gram.y"
     {
 					CreateRoleStmt *n = makeNode(CreateRoleStmt);
@@ -18319,12 +18594,10 @@
 					n->role = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 141:
-
-/* Line 1806 of yacc.c  */
 #line 925 "gram.y"
     {
 					AlterRoleStmt *n = makeNode(AlterRoleStmt);
@@ -18332,26 +18605,20 @@
 					n->action = +1;	/* add, if there are members */
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 142:
-
-/* Line 1806 of yacc.c  */
 #line 935 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 143:
-
-/* Line 1806 of yacc.c  */
 #line 936 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 144:
-
-/* Line 1806 of yacc.c  */
 #line 941 "gram.y"
     {
 					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
@@ -18359,12 +18626,10 @@
 					n->database = (yyvsp[(4) - (5)].str);
 					n->setstmt = (yyvsp[(5) - (5)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 145:
-
-/* Line 1806 of yacc.c  */
 #line 959 "gram.y"
     {
 					AlterRoleStmt *n = makeNode(AlterRoleStmt);
@@ -18372,12 +18637,10 @@
 					n->action = +1;	/* add, if there are members */
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 146:
-
-/* Line 1806 of yacc.c  */
 #line 971 "gram.y"
     {
 					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
@@ -18385,60 +18648,50 @@
 					n->database = NULL;
 					n->setstmt = (yyvsp[(4) - (4)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 147:
-
-/* Line 1806 of yacc.c  */
 #line 992 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = FALSE;
 					n->roles = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 148:
-
-/* Line 1806 of yacc.c  */
 #line 999 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = TRUE;
 					n->roles = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 149:
-
-/* Line 1806 of yacc.c  */
 #line 1018 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = FALSE;
 					n->roles = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 150:
-
-/* Line 1806 of yacc.c  */
 #line 1025 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->roles = (yyvsp[(5) - (5)].list);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 151:
-
-/* Line 1806 of yacc.c  */
 #line 1042 "gram.y"
     {
 					CreateRoleStmt *n = makeNode(CreateRoleStmt);
@@ -18446,12 +18699,10 @@
 					n->role = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 152:
-
-/* Line 1806 of yacc.c  */
 #line 1060 "gram.y"
     {
 					AlterRoleStmt *n = makeNode(AlterRoleStmt);
@@ -18460,50 +18711,40 @@
 					n->options = list_make1(makeDefElem("rolemembers",
 														(Node *)(yyvsp[(6) - (6)].list)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 153:
-
-/* Line 1806 of yacc.c  */
 #line 1070 "gram.y"
-    { (yyval.ival) = +1; }
+    { (yyval.ival) = +1; ;}
     break;
 
   case 154:
-
-/* Line 1806 of yacc.c  */
 #line 1071 "gram.y"
-    { (yyval.ival) = -1; }
+    { (yyval.ival) = -1; ;}
     break;
 
   case 155:
-
-/* Line 1806 of yacc.c  */
 #line 1084 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = FALSE;
 					n->roles = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 156:
-
-/* Line 1806 of yacc.c  */
 #line 1091 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = TRUE;
 					n->roles = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 157:
-
-/* Line 1806 of yacc.c  */
 #line 1108 "gram.y"
     {
 					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
@@ -18515,12 +18756,10 @@
 					n->authid = (yyvsp[(5) - (6)].str);
 					n->schemaElts = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 158:
-
-/* Line 1806 of yacc.c  */
 #line 1120 "gram.y"
     {
 					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
@@ -18529,73 +18768,57 @@
 					n->authid = NULL;
 					n->schemaElts = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 159:
-
-/* Line 1806 of yacc.c  */
 #line 1131 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 160:
-
-/* Line 1806 of yacc.c  */
 #line 1132 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 161:
-
-/* Line 1806 of yacc.c  */
 #line 1136 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 162:
-
-/* Line 1806 of yacc.c  */
 #line 1137 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 169:
-
-/* Line 1806 of yacc.c  */
 #line 1165 "gram.y"
     {
 					VariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
 					n->is_local = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 170:
-
-/* Line 1806 of yacc.c  */
 #line 1171 "gram.y"
     {
 					VariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
 					n->is_local = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 171:
-
-/* Line 1806 of yacc.c  */
 #line 1177 "gram.y"
     {
 					VariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
 					n->is_local = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 172:
-
-/* Line 1806 of yacc.c  */
 #line 1186 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18603,12 +18826,10 @@
 					n->name = (yyvsp[(1) - (3)].str);
 					n->args = (yyvsp[(3) - (3)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 173:
-
-/* Line 1806 of yacc.c  */
 #line 1194 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18616,48 +18837,40 @@
 					n->name = (yyvsp[(1) - (3)].str);
 					n->args = (yyvsp[(3) - (3)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 174:
-
-/* Line 1806 of yacc.c  */
 #line 1202 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_DEFAULT;
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 175:
-
-/* Line 1806 of yacc.c  */
 #line 1209 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_DEFAULT;
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 176:
-
-/* Line 1806 of yacc.c  */
 #line 1216 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_CURRENT;
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 177:
-
-/* Line 1806 of yacc.c  */
 #line 1224 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18668,12 +18881,10 @@
 					else
 						n->kind = VAR_SET_DEFAULT;
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 178:
-
-/* Line 1806 of yacc.c  */
 #line 1235 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18681,12 +18892,10 @@
 					n->name = "TRANSACTION";
 					n->args = (yyvsp[(2) - (2)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 179:
-
-/* Line 1806 of yacc.c  */
 #line 1243 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18694,12 +18903,10 @@
 					n->name = "SESSION CHARACTERISTICS";
 					n->args = (yyvsp[(5) - (5)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 180:
-
-/* Line 1806 of yacc.c  */
 #line 1251 "gram.y"
     {
 					ereport(ERROR,
@@ -18707,12 +18914,10 @@
 							 errmsg("current database cannot be changed"),
 							 parser_errposition((yylsp[(2) - (2)]))));
 					(yyval.vsetstmt) = NULL; /*not reached*/
-				}
+				;}
     break;
 
   case 181:
-
-/* Line 1806 of yacc.c  */
 #line 1259 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18720,12 +18925,10 @@
 					n->name = "search_path";
 					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 182:
-
-/* Line 1806 of yacc.c  */
 #line 1267 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18736,12 +18939,10 @@
 					else
 						n->kind = VAR_SET_DEFAULT;
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 183:
-
-/* Line 1806 of yacc.c  */
 #line 1278 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18749,12 +18950,10 @@
 					n->name = "role";
 					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 184:
-
-/* Line 1806 of yacc.c  */
 #line 1286 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18762,24 +18961,20 @@
 					n->name = "session_authorization";
 					n->args = list_make1(makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 185:
-
-/* Line 1806 of yacc.c  */
 #line 1294 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_DEFAULT;
 					n->name = "session_authorization";
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 186:
-
-/* Line 1806 of yacc.c  */
 #line 1301 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -18787,131 +18982,97 @@
 					n->name = "xmloption";
 					n->args = list_make1(makeStringConst((yyvsp[(3) - (3)].ival) == XMLOPTION_DOCUMENT ? "DOCUMENT" : "CONTENT", (yylsp[(3) - (3)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 187:
-
-/* Line 1806 of yacc.c  */
 #line 1310 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 188:
-
-/* Line 1806 of yacc.c  */
 #line 1312 "gram.y"
     {
 					(yyval.str) = palloc(strlen((yyvsp[(1) - (3)].str)) + strlen((yyvsp[(3) - (3)].str)) + 2);
 					sprintf((yyval.str), "%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str));
-				}
+				;}
     break;
 
   case 189:
-
-/* Line 1806 of yacc.c  */
 #line 1318 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 190:
-
-/* Line 1806 of yacc.c  */
 #line 1319 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 191:
-
-/* Line 1806 of yacc.c  */
 #line 1323 "gram.y"
-    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
     break;
 
   case 192:
-
-/* Line 1806 of yacc.c  */
 #line 1325 "gram.y"
-    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
     break;
 
   case 193:
-
-/* Line 1806 of yacc.c  */
 #line 1328 "gram.y"
-    { (yyval.str) = "read uncommitted"; }
+    { (yyval.str) = "read uncommitted"; ;}
     break;
 
   case 194:
-
-/* Line 1806 of yacc.c  */
 #line 1329 "gram.y"
-    { (yyval.str) = "read committed"; }
+    { (yyval.str) = "read committed"; ;}
     break;
 
   case 195:
-
-/* Line 1806 of yacc.c  */
 #line 1330 "gram.y"
-    { (yyval.str) = "repeatable read"; }
+    { (yyval.str) = "repeatable read"; ;}
     break;
 
   case 196:
-
-/* Line 1806 of yacc.c  */
 #line 1331 "gram.y"
-    { (yyval.str) = "serializable"; }
+    { (yyval.str) = "serializable"; ;}
     break;
 
   case 197:
-
-/* Line 1806 of yacc.c  */
 #line 1335 "gram.y"
-    { (yyval.str) = "true"; }
+    { (yyval.str) = "true"; ;}
     break;
 
   case 198:
-
-/* Line 1806 of yacc.c  */
 #line 1336 "gram.y"
-    { (yyval.str) = "false"; }
+    { (yyval.str) = "false"; ;}
     break;
 
   case 199:
-
-/* Line 1806 of yacc.c  */
 #line 1337 "gram.y"
-    { (yyval.str) = "on"; }
+    { (yyval.str) = "on"; ;}
     break;
 
   case 200:
-
-/* Line 1806 of yacc.c  */
 #line 1343 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 201:
-
-/* Line 1806 of yacc.c  */
 #line 1356 "gram.y"
     {
 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 202:
-
-/* Line 1806 of yacc.c  */
 #line 1360 "gram.y"
     {
 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 203:
-
-/* Line 1806 of yacc.c  */
 #line 1364 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (3)].typnam);
@@ -18926,12 +19087,10 @@
 					}
 					t->typmods = (yyvsp[(3) - (3)].list);
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
-				}
+				;}
     break;
 
   case 204:
-
-/* Line 1806 of yacc.c  */
 #line 1379 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (6)].typnam);
@@ -18954,290 +19113,228 @@
 						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 												makeIntConst((yyvsp[(3) - (6)].ival), (yylsp[(3) - (6)])));
 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (6)].str), (yylsp[(5) - (6)]), t);
-				}
+				;}
     break;
 
   case 205:
-
-/* Line 1806 of yacc.c  */
 #line 1401 "gram.y"
-    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
     break;
 
   case 206:
-
-/* Line 1806 of yacc.c  */
 #line 1402 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 207:
-
-/* Line 1806 of yacc.c  */
 #line 1403 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 208:
-
-/* Line 1806 of yacc.c  */
 #line 1407 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 209:
-
-/* Line 1806 of yacc.c  */
 #line 1408 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 210:
-
-/* Line 1806 of yacc.c  */
 #line 1409 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 211:
-
-/* Line 1806 of yacc.c  */
 #line 1413 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 212:
-
-/* Line 1806 of yacc.c  */
 #line 1414 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 213:
-
-/* Line 1806 of yacc.c  */
 #line 1419 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 214:
-
-/* Line 1806 of yacc.c  */
 #line 1426 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = "timezone";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 215:
-
-/* Line 1806 of yacc.c  */
 #line 1433 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = "transaction_isolation";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 216:
-
-/* Line 1806 of yacc.c  */
 #line 1440 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = "session_authorization";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 217:
-
-/* Line 1806 of yacc.c  */
 #line 1447 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET_ALL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 218:
-
-/* Line 1806 of yacc.c  */
 #line 1456 "gram.y"
-    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); }
+    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); ;}
     break;
 
   case 219:
-
-/* Line 1806 of yacc.c  */
 #line 1457 "gram.y"
-    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); }
+    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 220:
-
-/* Line 1806 of yacc.c  */
 #line 1463 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 221:
-
-/* Line 1806 of yacc.c  */
 #line 1469 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "timezone";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 222:
-
-/* Line 1806 of yacc.c  */
 #line 1475 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "transaction_isolation";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 223:
-
-/* Line 1806 of yacc.c  */
 #line 1481 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "session_authorization";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 224:
-
-/* Line 1806 of yacc.c  */
 #line 1487 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "all";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 225:
-
-/* Line 1806 of yacc.c  */
 #line 1497 "gram.y"
     {
 					ConstraintsSetStmt *n = makeNode(ConstraintsSetStmt);
 					n->constraints = (yyvsp[(3) - (4)].list);
 					n->deferred    = (yyvsp[(4) - (4)].boolean);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 226:
-
-/* Line 1806 of yacc.c  */
 #line 1506 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 227:
-
-/* Line 1806 of yacc.c  */
 #line 1507 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 228:
-
-/* Line 1806 of yacc.c  */
 #line 1511 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 229:
-
-/* Line 1806 of yacc.c  */
 #line 1512 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 230:
-
-/* Line 1806 of yacc.c  */
 #line 1521 "gram.y"
     {
 					CheckPointStmt *n = makeNode(CheckPointStmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 231:
-
-/* Line 1806 of yacc.c  */
 #line 1536 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_ALL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 232:
-
-/* Line 1806 of yacc.c  */
 #line 1542 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_TEMP;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 233:
-
-/* Line 1806 of yacc.c  */
 #line 1548 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_TEMP;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 234:
-
-/* Line 1806 of yacc.c  */
 #line 1554 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_PLANS;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 235:
-
-/* Line 1806 of yacc.c  */
 #line 1572 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -19245,12 +19342,10 @@
 					n->cmds = (yyvsp[(4) - (4)].list);
 					n->relkind = OBJECT_TABLE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 236:
-
-/* Line 1806 of yacc.c  */
 #line 1580 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -19258,12 +19353,10 @@
 					n->cmds = (yyvsp[(4) - (4)].list);
 					n->relkind = OBJECT_INDEX;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 237:
-
-/* Line 1806 of yacc.c  */
 #line 1588 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -19271,12 +19364,10 @@
 					n->cmds = (yyvsp[(4) - (4)].list);
 					n->relkind = OBJECT_SEQUENCE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 238:
-
-/* Line 1806 of yacc.c  */
 #line 1596 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -19284,50 +19375,40 @@
 					n->cmds = (yyvsp[(4) - (4)].list);
 					n->relkind = OBJECT_VIEW;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 239:
-
-/* Line 1806 of yacc.c  */
 #line 1606 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 240:
-
-/* Line 1806 of yacc.c  */
 #line 1607 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 241:
-
-/* Line 1806 of yacc.c  */
 #line 1613 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddColumn;
 					n->def = (yyvsp[(2) - (2)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 242:
-
-/* Line 1806 of yacc.c  */
 #line 1621 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddColumn;
 					n->def = (yyvsp[(3) - (3)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 243:
-
-/* Line 1806 of yacc.c  */
 #line 1629 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19335,36 +19416,30 @@
 					n->name = (yyvsp[(3) - (4)].str);
 					n->def = (yyvsp[(4) - (4)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 244:
-
-/* Line 1806 of yacc.c  */
 #line 1638 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropNotNull;
 					n->name = (yyvsp[(3) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 245:
-
-/* Line 1806 of yacc.c  */
 #line 1646 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_SetNotNull;
 					n->name = (yyvsp[(3) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 246:
-
-/* Line 1806 of yacc.c  */
 #line 1654 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19372,12 +19447,10 @@
 					n->name = (yyvsp[(3) - (6)].str);
 					n->def = (Node *) makeInteger((yyvsp[(6) - (6)].ival));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 247:
-
-/* Line 1806 of yacc.c  */
 #line 1663 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19385,12 +19458,10 @@
 					n->name = (yyvsp[(3) - (5)].str);
 					n->def = (Node *) (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 248:
-
-/* Line 1806 of yacc.c  */
 #line 1672 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19398,12 +19469,10 @@
 					n->name = (yyvsp[(3) - (5)].str);
 					n->def = (Node *) (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 249:
-
-/* Line 1806 of yacc.c  */
 #line 1681 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19411,12 +19480,10 @@
 					n->name = (yyvsp[(3) - (6)].str);
 					n->def = (Node *) makeString((yyvsp[(6) - (6)].str));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 250:
-
-/* Line 1806 of yacc.c  */
 #line 1690 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19425,12 +19492,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 251:
-
-/* Line 1806 of yacc.c  */
 #line 1700 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19439,12 +19504,10 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 252:
-
-/* Line 1806 of yacc.c  */
 #line 1713 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19453,24 +19516,20 @@
 					n->def = (Node *) (yyvsp[(6) - (7)].typnam);
 					n->transform = (yyvsp[(7) - (7)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 253:
-
-/* Line 1806 of yacc.c  */
 #line 1723 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddConstraint;
 					n->def = (yyvsp[(2) - (2)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 254:
-
-/* Line 1806 of yacc.c  */
 #line 1731 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19479,12 +19538,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 255:
-
-/* Line 1806 of yacc.c  */
 #line 1741 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -19493,413 +19550,331 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 256:
-
-/* Line 1806 of yacc.c  */
 #line 1751 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddOids;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 257:
-
-/* Line 1806 of yacc.c  */
 #line 1758 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropOids;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 258:
-
-/* Line 1806 of yacc.c  */
 #line 1765 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ClusterOn;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 259:
-
-/* Line 1806 of yacc.c  */
 #line 1773 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropCluster;
 					n->name = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 260:
-
-/* Line 1806 of yacc.c  */
 #line 1781 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableTrig;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 261:
-
-/* Line 1806 of yacc.c  */
 #line 1789 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableAlwaysTrig;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 262:
-
-/* Line 1806 of yacc.c  */
 #line 1797 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableReplicaTrig;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 263:
-
-/* Line 1806 of yacc.c  */
 #line 1805 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableTrigAll;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 264:
-
-/* Line 1806 of yacc.c  */
 #line 1812 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableTrigUser;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 265:
-
-/* Line 1806 of yacc.c  */
 #line 1819 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableTrig;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 266:
-
-/* Line 1806 of yacc.c  */
 #line 1827 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableTrigAll;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 267:
-
-/* Line 1806 of yacc.c  */
 #line 1834 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableTrigUser;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 268:
-
-/* Line 1806 of yacc.c  */
 #line 1841 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableRule;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 269:
-
-/* Line 1806 of yacc.c  */
 #line 1849 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableAlwaysRule;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 270:
-
-/* Line 1806 of yacc.c  */
 #line 1857 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableReplicaRule;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 271:
-
-/* Line 1806 of yacc.c  */
 #line 1865 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableRule;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 272:
-
-/* Line 1806 of yacc.c  */
 #line 1873 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddInherit;
 					n->def = (Node *) (yyvsp[(2) - (2)].range);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 273:
-
-/* Line 1806 of yacc.c  */
 #line 1881 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropInherit;
 					n->def = (Node *) (yyvsp[(3) - (3)].range);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 274:
-
-/* Line 1806 of yacc.c  */
 #line 1889 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ChangeOwner;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 275:
-
-/* Line 1806 of yacc.c  */
 #line 1897 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_SetTableSpace;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 276:
-
-/* Line 1806 of yacc.c  */
 #line 1905 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_SetRelOptions;
 					n->def = (Node *)(yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 277:
-
-/* Line 1806 of yacc.c  */
 #line 1913 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ResetRelOptions;
 					n->def = (Node *)(yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 278:
-
-/* Line 1806 of yacc.c  */
 #line 1922 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (3)].node); }
+    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
     break;
 
   case 279:
-
-/* Line 1806 of yacc.c  */
 #line 1923 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 280:
-
-/* Line 1806 of yacc.c  */
 #line 1927 "gram.y"
-    { (yyval.dbehavior) = DROP_CASCADE; }
+    { (yyval.dbehavior) = DROP_CASCADE; ;}
     break;
 
   case 281:
-
-/* Line 1806 of yacc.c  */
 #line 1928 "gram.y"
-    { (yyval.dbehavior) = DROP_RESTRICT; }
+    { (yyval.dbehavior) = DROP_RESTRICT; ;}
     break;
 
   case 282:
-
-/* Line 1806 of yacc.c  */
 #line 1929 "gram.y"
-    { (yyval.dbehavior) = DROP_RESTRICT; /* default */ }
+    { (yyval.dbehavior) = DROP_RESTRICT; /* default */ ;}
     break;
 
   case 283:
-
-/* Line 1806 of yacc.c  */
 #line 1933 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 284:
-
-/* Line 1806 of yacc.c  */
 #line 1934 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 285:
-
-/* Line 1806 of yacc.c  */
 #line 1938 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 286:
-
-/* Line 1806 of yacc.c  */
 #line 1941 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 287:
-
-/* Line 1806 of yacc.c  */
 #line 1942 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 288:
-
-/* Line 1806 of yacc.c  */
 #line 1946 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 289:
-
-/* Line 1806 of yacc.c  */
 #line 1947 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 290:
-
-/* Line 1806 of yacc.c  */
 #line 1953 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (Node *) (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 291:
-
-/* Line 1806 of yacc.c  */
 #line 1957 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL);
-				}
+				;}
     break;
 
   case 292:
-
-/* Line 1806 of yacc.c  */
 #line 1961 "gram.y"
     {
 					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (Node *) (yyvsp[(5) - (5)].node),
 											 DEFELEM_UNSPEC);
-				}
+				;}
     break;
 
   case 293:
-
-/* Line 1806 of yacc.c  */
 #line 1966 "gram.y"
     {
 					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, DEFELEM_UNSPEC);
-				}
+				;}
     break;
 
   case 294:
-
-/* Line 1806 of yacc.c  */
 #line 1981 "gram.y"
     {
 					ClosePortalStmt *n = makeNode(ClosePortalStmt);
 					n->portalname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 295:
-
-/* Line 1806 of yacc.c  */
 #line 1987 "gram.y"
     {
 					ClosePortalStmt *n = makeNode(ClosePortalStmt);
 					n->portalname = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 296:
-
-/* Line 1806 of yacc.c  */
 #line 2015 "gram.y"
     {
 					CopyStmt *n = makeNode(CopyStmt);
@@ -19920,12 +19895,10 @@
 					if ((yyvsp[(10) - (10)].list))
 						n->options = list_concat(n->options, (yyvsp[(10) - (10)].list));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 297:
-
-/* Line 1806 of yacc.c  */
 #line 2036 "gram.y"
     {
 					CopyStmt *n = makeNode(CopyStmt);
@@ -19936,323 +19909,243 @@
 					n->filename = (yyvsp[(4) - (6)].str);
 					n->options = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 298:
-
-/* Line 1806 of yacc.c  */
 #line 2049 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 299:
-
-/* Line 1806 of yacc.c  */
 #line 2050 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 300:
-
-/* Line 1806 of yacc.c  */
 #line 2059 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 301:
-
-/* Line 1806 of yacc.c  */
 #line 2060 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 302:
-
-/* Line 1806 of yacc.c  */
 #line 2061 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 303:
-
-/* Line 1806 of yacc.c  */
 #line 2064 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 304:
-
-/* Line 1806 of yacc.c  */
 #line 2065 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 305:
-
-/* Line 1806 of yacc.c  */
 #line 2070 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 306:
-
-/* Line 1806 of yacc.c  */
 #line 2071 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 307:
-
-/* Line 1806 of yacc.c  */
 #line 2076 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
-				}
+				;}
     break;
 
   case 308:
-
-/* Line 1806 of yacc.c  */
 #line 2080 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 309:
-
-/* Line 1806 of yacc.c  */
 #line 2084 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 310:
-
-/* Line 1806 of yacc.c  */
 #line 2088 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("null", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 311:
-
-/* Line 1806 of yacc.c  */
 #line 2092 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("format", (Node *)makeString("csv"));
-				}
+				;}
     break;
 
   case 312:
-
-/* Line 1806 of yacc.c  */
 #line 2096 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("header", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 313:
-
-/* Line 1806 of yacc.c  */
 #line 2100 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("quote", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 314:
-
-/* Line 1806 of yacc.c  */
 #line 2104 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("escape", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 315:
-
-/* Line 1806 of yacc.c  */
 #line 2108 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("force_quote", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 316:
-
-/* Line 1806 of yacc.c  */
 #line 2112 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("force_quote", (Node *)makeNode(A_Star));
-				}
+				;}
     break;
 
   case 317:
-
-/* Line 1806 of yacc.c  */
 #line 2116 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("force_not_null", (Node *)(yyvsp[(4) - (4)].list));
-				}
+				;}
     break;
 
   case 318:
-
-/* Line 1806 of yacc.c  */
 #line 2125 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
-				}
+				;}
     break;
 
   case 319:
-
-/* Line 1806 of yacc.c  */
 #line 2128 "gram.y"
-    { (yyval.defelt) = NULL; }
+    { (yyval.defelt) = NULL; ;}
     break;
 
   case 320:
-
-/* Line 1806 of yacc.c  */
 #line 2133 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 321:
-
-/* Line 1806 of yacc.c  */
 #line 2136 "gram.y"
-    { (yyval.defelt) = NULL; }
+    { (yyval.defelt) = NULL; ;}
     break;
 
   case 322:
-
-/* Line 1806 of yacc.c  */
 #line 2141 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 323:
-
-/* Line 1806 of yacc.c  */
 #line 2144 "gram.y"
-    { (yyval.defelt) = NULL; }
+    { (yyval.defelt) = NULL; ;}
     break;
 
   case 324:
-
-/* Line 1806 of yacc.c  */
 #line 2148 "gram.y"
-    {}
+    {;}
     break;
 
   case 325:
-
-/* Line 1806 of yacc.c  */
 #line 2149 "gram.y"
-    {}
+    {;}
     break;
 
   case 326:
-
-/* Line 1806 of yacc.c  */
 #line 2155 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 327:
-
-/* Line 1806 of yacc.c  */
 #line 2159 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 328:
-
-/* Line 1806 of yacc.c  */
 #line 2166 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 329:
-
-/* Line 1806 of yacc.c  */
 #line 2172 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 330:
-
-/* Line 1806 of yacc.c  */
 #line 2173 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); }
+    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); ;}
     break;
 
   case 331:
-
-/* Line 1806 of yacc.c  */
 #line 2174 "gram.y"
-    { (yyval.node) = (Node *) makeNode(A_Star); }
+    { (yyval.node) = (Node *) makeNode(A_Star); ;}
     break;
 
   case 332:
-
-/* Line 1806 of yacc.c  */
 #line 2175 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(2) - (3)].list); }
+    { (yyval.node) = (Node *) (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 333:
-
-/* Line 1806 of yacc.c  */
 #line 2176 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 334:
-
-/* Line 1806 of yacc.c  */
 #line 2181 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 335:
-
-/* Line 1806 of yacc.c  */
 #line 2185 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 336:
-
-/* Line 1806 of yacc.c  */
 #line 2192 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 337:
-
-/* Line 1806 of yacc.c  */
 #line 2205 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -20265,12 +20158,10 @@
 					n->oncommit = (yyvsp[(10) - (11)].oncommit);
 					n->tablespacename = (yyvsp[(11) - (11)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 338:
-
-/* Line 1806 of yacc.c  */
 #line 2219 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -20284,160 +20175,118 @@
 					n->oncommit = (yyvsp[(9) - (10)].oncommit);
 					n->tablespacename = (yyvsp[(10) - (10)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 339:
-
-/* Line 1806 of yacc.c  */
 #line 2241 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 340:
-
-/* Line 1806 of yacc.c  */
 #line 2242 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 341:
-
-/* Line 1806 of yacc.c  */
 #line 2243 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 342:
-
-/* Line 1806 of yacc.c  */
 #line 2244 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 343:
-
-/* Line 1806 of yacc.c  */
 #line 2245 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 344:
-
-/* Line 1806 of yacc.c  */
 #line 2246 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 345:
-
-/* Line 1806 of yacc.c  */
 #line 2247 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 346:
-
-/* Line 1806 of yacc.c  */
 #line 2251 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 347:
-
-/* Line 1806 of yacc.c  */
 #line 2252 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 348:
-
-/* Line 1806 of yacc.c  */
 #line 2256 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 349:
-
-/* Line 1806 of yacc.c  */
 #line 2257 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 350:
-
-/* Line 1806 of yacc.c  */
 #line 2262 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 351:
-
-/* Line 1806 of yacc.c  */
 #line 2266 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 352:
-
-/* Line 1806 of yacc.c  */
 #line 2273 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 353:
-
-/* Line 1806 of yacc.c  */
 #line 2277 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 354:
-
-/* Line 1806 of yacc.c  */
 #line 2283 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 355:
-
-/* Line 1806 of yacc.c  */
 #line 2284 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 356:
-
-/* Line 1806 of yacc.c  */
 #line 2285 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 357:
-
-/* Line 1806 of yacc.c  */
 #line 2289 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 358:
-
-/* Line 1806 of yacc.c  */
 #line 2290 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 359:
-
-/* Line 1806 of yacc.c  */
 #line 2294 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -20446,12 +20295,10 @@
 					n->constraints = (yyvsp[(3) - (3)].list);
 					n->is_local = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 360:
-
-/* Line 1806 of yacc.c  */
 #line 2305 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -20459,26 +20306,20 @@
 					n->constraints = (yyvsp[(4) - (4)].list);
 					n->is_local = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 361:
-
-/* Line 1806 of yacc.c  */
 #line 2315 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 362:
-
-/* Line 1806 of yacc.c  */
 #line 2316 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 363:
-
-/* Line 1806 of yacc.c  */
 #line 2321 "gram.y"
     {
 					Constraint *n = (Constraint *) (yyvsp[(3) - (3)].node);
@@ -20486,50 +20327,40 @@
 					n->conname = (yyvsp[(2) - (3)].str);
 					n->location = (yylsp[(1) - (3)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 364:
-
-/* Line 1806 of yacc.c  */
 #line 2328 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 365:
-
-/* Line 1806 of yacc.c  */
 #line 2329 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 366:
-
-/* Line 1806 of yacc.c  */
 #line 2349 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_NOTNULL;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 367:
-
-/* Line 1806 of yacc.c  */
 #line 2356 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 368:
-
-/* Line 1806 of yacc.c  */
 #line 2363 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20539,12 +20370,10 @@
 					n->options = (yyvsp[(2) - (3)].list);
 					n->indexspace = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 369:
-
-/* Line 1806 of yacc.c  */
 #line 2373 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20554,12 +20383,10 @@
 					n->options = (yyvsp[(3) - (4)].list);
 					n->indexspace = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 370:
-
-/* Line 1806 of yacc.c  */
 #line 2383 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20568,12 +20395,10 @@
 					n->raw_expr = (yyvsp[(3) - (4)].node);
 					n->cooked_expr = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 371:
-
-/* Line 1806 of yacc.c  */
 #line 2392 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20582,12 +20407,10 @@
 					n->raw_expr = (yyvsp[(2) - (2)].node);
 					n->cooked_expr = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 372:
-
-/* Line 1806 of yacc.c  */
 #line 2401 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20601,135 +20424,105 @@
 					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
 					n->skip_validation  = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 373:
-
-/* Line 1806 of yacc.c  */
 #line 2430 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_DEFERRABLE;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 374:
-
-/* Line 1806 of yacc.c  */
 #line 2437 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_NOT_DEFERRABLE;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 375:
-
-/* Line 1806 of yacc.c  */
 #line 2444 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_DEFERRED;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 376:
-
-/* Line 1806 of yacc.c  */
 #line 2451 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_IMMEDIATE;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 377:
-
-/* Line 1806 of yacc.c  */
 #line 2470 "gram.y"
     {
 					InhRelation *n = makeNode(InhRelation);
 					n->relation = (yyvsp[(2) - (3)].range);
 					n->options = (yyvsp[(3) - (3)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 378:
-
-/* Line 1806 of yacc.c  */
 #line 2479 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 379:
-
-/* Line 1806 of yacc.c  */
 #line 2480 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 380:
-
-/* Line 1806 of yacc.c  */
 #line 2481 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 381:
-
-/* Line 1806 of yacc.c  */
 #line 2485 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_DEFAULTS; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_DEFAULTS; ;}
     break;
 
   case 382:
-
-/* Line 1806 of yacc.c  */
 #line 2486 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_CONSTRAINTS; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_CONSTRAINTS; ;}
     break;
 
   case 383:
-
-/* Line 1806 of yacc.c  */
 #line 2487 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_INDEXES; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_INDEXES; ;}
     break;
 
   case 384:
-
-/* Line 1806 of yacc.c  */
 #line 2488 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_STORAGE; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_STORAGE; ;}
     break;
 
   case 385:
-
-/* Line 1806 of yacc.c  */
 #line 2489 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_COMMENTS; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_COMMENTS; ;}
     break;
 
   case 386:
-
-/* Line 1806 of yacc.c  */
 #line 2490 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_ALL; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_ALL; ;}
     break;
 
   case 387:
-
-/* Line 1806 of yacc.c  */
 #line 2500 "gram.y"
     {
 					Constraint *n = (Constraint *) (yyvsp[(3) - (3)].node);
@@ -20737,19 +20530,15 @@
 					n->conname = (yyvsp[(2) - (3)].str);
 					n->location = (yylsp[(1) - (3)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 388:
-
-/* Line 1806 of yacc.c  */
 #line 2507 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 389:
-
-/* Line 1806 of yacc.c  */
 #line 2512 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20763,12 +20552,10 @@
 								 errmsg("CHECK constraints cannot be deferred"),
 								 parser_errposition((yylsp[(5) - (5)]))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 390:
-
-/* Line 1806 of yacc.c  */
 #line 2527 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20780,12 +20567,10 @@
 					n->deferrable = ((yyvsp[(7) - (7)].ival) & 1) != 0;
 					n->initdeferred = ((yyvsp[(7) - (7)].ival) & 2) != 0;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 391:
-
-/* Line 1806 of yacc.c  */
 #line 2540 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20797,12 +20582,10 @@
 					n->deferrable = ((yyvsp[(8) - (8)].ival) & 1) != 0;
 					n->initdeferred = ((yyvsp[(8) - (8)].ival) & 2) != 0;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 392:
-
-/* Line 1806 of yacc.c  */
 #line 2554 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20816,12 +20599,10 @@
 					n->deferrable		= ((yyvsp[(9) - (9)].ival) & 1) != 0;
 					n->initdeferred		= ((yyvsp[(9) - (9)].ival) & 2) != 0;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 393:
-
-/* Line 1806 of yacc.c  */
 #line 2569 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -20837,58 +20618,44 @@
 					n->deferrable		= ((yyvsp[(11) - (11)].ival) & 1) != 0;
 					n->initdeferred		= ((yyvsp[(11) - (11)].ival) & 2) != 0;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 394:
-
-/* Line 1806 of yacc.c  */
 #line 2587 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 395:
-
-/* Line 1806 of yacc.c  */
 #line 2588 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 396:
-
-/* Line 1806 of yacc.c  */
 #line 2592 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 397:
-
-/* Line 1806 of yacc.c  */
 #line 2593 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 398:
-
-/* Line 1806 of yacc.c  */
 #line 2597 "gram.y"
     {
 					(yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str));
-				}
+				;}
     break;
 
   case 399:
-
-/* Line 1806 of yacc.c  */
 #line 2603 "gram.y"
     {
 				(yyval.ival) = FKCONSTR_MATCH_FULL;
-			}
+			;}
     break;
 
   case 400:
-
-/* Line 1806 of yacc.c  */
 #line 2607 "gram.y"
     {
 				ereport(ERROR,
@@ -20896,258 +20663,188 @@
 						 errmsg("MATCH PARTIAL not yet implemented"),
 						 parser_errposition((yylsp[(1) - (2)]))));
 				(yyval.ival) = FKCONSTR_MATCH_PARTIAL;
-			}
+			;}
     break;
 
   case 401:
-
-/* Line 1806 of yacc.c  */
 #line 2615 "gram.y"
     {
 				(yyval.ival) = FKCONSTR_MATCH_UNSPECIFIED;
-			}
+			;}
     break;
 
   case 402:
-
-/* Line 1806 of yacc.c  */
 #line 2619 "gram.y"
     {
 				(yyval.ival) = FKCONSTR_MATCH_UNSPECIFIED;
-			}
+			;}
     break;
 
   case 403:
-
-/* Line 1806 of yacc.c  */
 #line 2625 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
     break;
 
   case 404:
-
-/* Line 1806 of yacc.c  */
 #line 2627 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 405:
-
-/* Line 1806 of yacc.c  */
 #line 2631 "gram.y"
     {
 				(yyval.list) = list_make2((yyvsp[(1) - (3)].ielem), (yyvsp[(3) - (3)].list));
-			}
+			;}
     break;
 
   case 406:
-
-/* Line 1806 of yacc.c  */
 #line 2636 "gram.y"
     {
 				(yyval.list) = list_make2((yyvsp[(1) - (6)].ielem), (yyvsp[(5) - (6)].list));
-			}
+			;}
     break;
 
   case 407:
-
-/* Line 1806 of yacc.c  */
 #line 2642 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (4)].node); }
+    { (yyval.node) = (yyvsp[(3) - (4)].node); ;}
     break;
 
   case 408:
-
-/* Line 1806 of yacc.c  */
 #line 2643 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 409:
-
-/* Line 1806 of yacc.c  */
 #line 2654 "gram.y"
-    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
+    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); ;}
     break;
 
   case 410:
-
-/* Line 1806 of yacc.c  */
 #line 2656 "gram.y"
-    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); }
+    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
     break;
 
   case 411:
-
-/* Line 1806 of yacc.c  */
 #line 2658 "gram.y"
-    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); }
+    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
     break;
 
   case 412:
-
-/* Line 1806 of yacc.c  */
 #line 2660 "gram.y"
-    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); }
+    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
     break;
 
   case 413:
-
-/* Line 1806 of yacc.c  */
 #line 2662 "gram.y"
-    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
+    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); ;}
     break;
 
   case 414:
-
-/* Line 1806 of yacc.c  */
 #line 2665 "gram.y"
-    { (yyval.ival) = (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 415:
-
-/* Line 1806 of yacc.c  */
 #line 2668 "gram.y"
-    { (yyval.ival) = (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 416:
-
-/* Line 1806 of yacc.c  */
 #line 2672 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_NOACTION; }
+    { (yyval.ival) = FKCONSTR_ACTION_NOACTION; ;}
     break;
 
   case 417:
-
-/* Line 1806 of yacc.c  */
 #line 2673 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_RESTRICT; }
+    { (yyval.ival) = FKCONSTR_ACTION_RESTRICT; ;}
     break;
 
   case 418:
-
-/* Line 1806 of yacc.c  */
 #line 2674 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_CASCADE; }
+    { (yyval.ival) = FKCONSTR_ACTION_CASCADE; ;}
     break;
 
   case 419:
-
-/* Line 1806 of yacc.c  */
 #line 2675 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_SETNULL; }
+    { (yyval.ival) = FKCONSTR_ACTION_SETNULL; ;}
     break;
 
   case 420:
-
-/* Line 1806 of yacc.c  */
 #line 2676 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_SETDEFAULT; }
+    { (yyval.ival) = FKCONSTR_ACTION_SETDEFAULT; ;}
     break;
 
   case 421:
-
-/* Line 1806 of yacc.c  */
 #line 2679 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 422:
-
-/* Line 1806 of yacc.c  */
 #line 2680 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 423:
-
-/* Line 1806 of yacc.c  */
 #line 2685 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 424:
-
-/* Line 1806 of yacc.c  */
 #line 2686 "gram.y"
-    { (yyval.list) = list_make1(defWithOids(true)); }
+    { (yyval.list) = list_make1(defWithOids(true)); ;}
     break;
 
   case 425:
-
-/* Line 1806 of yacc.c  */
 #line 2687 "gram.y"
-    { (yyval.list) = list_make1(defWithOids(false)); }
+    { (yyval.list) = list_make1(defWithOids(false)); ;}
     break;
 
   case 426:
-
-/* Line 1806 of yacc.c  */
 #line 2688 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 427:
-
-/* Line 1806 of yacc.c  */
 #line 2691 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_DROP; }
+    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
     break;
 
   case 428:
-
-/* Line 1806 of yacc.c  */
 #line 2692 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_DELETE_ROWS; }
+    { (yyval.oncommit) = ONCOMMIT_DELETE_ROWS; ;}
     break;
 
   case 429:
-
-/* Line 1806 of yacc.c  */
 #line 2693 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_PRESERVE_ROWS; }
+    { (yyval.oncommit) = ONCOMMIT_PRESERVE_ROWS; ;}
     break;
 
   case 430:
-
-/* Line 1806 of yacc.c  */
 #line 2694 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_NOOP; }
+    { (yyval.oncommit) = ONCOMMIT_NOOP; ;}
     break;
 
   case 431:
-
-/* Line 1806 of yacc.c  */
 #line 2697 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 432:
-
-/* Line 1806 of yacc.c  */
 #line 2698 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 433:
-
-/* Line 1806 of yacc.c  */
 #line 2701 "gram.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 434:
-
-/* Line 1806 of yacc.c  */
 #line 2702 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 435:
-
-/* Line 1806 of yacc.c  */
 #line 2713 "gram.y"
     {
 					/*
@@ -21169,12 +20866,10 @@
 					if (!(yyvsp[(7) - (7)].boolean))
 						((SelectStmt *) (yyvsp[(6) - (7)].node))->limitCount = makeIntConst(0, -1);
 					(yyval.node) = (yyvsp[(6) - (7)].node);
-				}
+				;}
     break;
 
   case 436:
-
-/* Line 1806 of yacc.c  */
 #line 2738 "gram.y"
     {
 					(yyval.into) = makeNode(IntoClause);
@@ -21183,40 +20878,30 @@
 					(yyval.into)->options = (yyvsp[(3) - (5)].list);
 					(yyval.into)->onCommit = (yyvsp[(4) - (5)].oncommit);
 					(yyval.into)->tableSpaceName = (yyvsp[(5) - (5)].str);
-				}
+				;}
     break;
 
   case 437:
-
-/* Line 1806 of yacc.c  */
 #line 2749 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 438:
-
-/* Line 1806 of yacc.c  */
 #line 2750 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 439:
-
-/* Line 1806 of yacc.c  */
 #line 2754 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 440:
-
-/* Line 1806 of yacc.c  */
 #line 2755 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 441:
-
-/* Line 1806 of yacc.c  */
 #line 2760 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -21229,33 +20914,25 @@
 					n->cooked_default = NULL;
 					n->constraints = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 442:
-
-/* Line 1806 of yacc.c  */
 #line 2775 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 443:
-
-/* Line 1806 of yacc.c  */
 #line 2776 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 444:
-
-/* Line 1806 of yacc.c  */
 #line 2777 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 445:
-
-/* Line 1806 of yacc.c  */
 #line 2791 "gram.y"
     {
 					CreateSeqStmt *n = makeNode(CreateSeqStmt);
@@ -21264,212 +20941,162 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->ownerId = InvalidOid;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 446:
-
-/* Line 1806 of yacc.c  */
 #line 2803 "gram.y"
     {
 					AlterSeqStmt *n = makeNode(AlterSeqStmt);
 					n->sequence = (yyvsp[(3) - (4)].range);
 					n->options = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 447:
-
-/* Line 1806 of yacc.c  */
 #line 2811 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 448:
-
-/* Line 1806 of yacc.c  */
 #line 2812 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 449:
-
-/* Line 1806 of yacc.c  */
 #line 2815 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 450:
-
-/* Line 1806 of yacc.c  */
 #line 2816 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 451:
-
-/* Line 1806 of yacc.c  */
 #line 2820 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cache", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 452:
-
-/* Line 1806 of yacc.c  */
 #line 2824 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 453:
-
-/* Line 1806 of yacc.c  */
 #line 2828 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 454:
-
-/* Line 1806 of yacc.c  */
 #line 2832 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("increment", (Node *)(yyvsp[(3) - (3)].value));
-				}
+				;}
     break;
 
   case 455:
-
-/* Line 1806 of yacc.c  */
 #line 2836 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("maxvalue", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 456:
-
-/* Line 1806 of yacc.c  */
 #line 2840 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("minvalue", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 457:
-
-/* Line 1806 of yacc.c  */
 #line 2844 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("maxvalue", NULL);
-				}
+				;}
     break;
 
   case 458:
-
-/* Line 1806 of yacc.c  */
 #line 2848 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("minvalue", NULL);
-				}
+				;}
     break;
 
   case 459:
-
-/* Line 1806 of yacc.c  */
 #line 2852 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("owned_by", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 460:
-
-/* Line 1806 of yacc.c  */
 #line 2856 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("start", (Node *)(yyvsp[(3) - (3)].value));
-				}
+				;}
     break;
 
   case 461:
-
-/* Line 1806 of yacc.c  */
 #line 2860 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("restart", NULL);
-				}
+				;}
     break;
 
   case 462:
-
-/* Line 1806 of yacc.c  */
 #line 2864 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("restart", (Node *)(yyvsp[(3) - (3)].value));
-				}
+				;}
     break;
 
   case 463:
-
-/* Line 1806 of yacc.c  */
 #line 2869 "gram.y"
-    {}
+    {;}
     break;
 
   case 464:
-
-/* Line 1806 of yacc.c  */
 #line 2870 "gram.y"
-    {}
+    {;}
     break;
 
   case 465:
-
-/* Line 1806 of yacc.c  */
 #line 2874 "gram.y"
-    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 466:
-
-/* Line 1806 of yacc.c  */
 #line 2876 "gram.y"
     {
 					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
 					doNegateFloat((yyval.value));
-				}
+				;}
     break;
 
   case 467:
-
-/* Line 1806 of yacc.c  */
 #line 2880 "gram.y"
-    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); }
+    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
     break;
 
   case 468:
-
-/* Line 1806 of yacc.c  */
 #line 2883 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); ;}
     break;
 
   case 469:
-
-/* Line 1806 of yacc.c  */
 #line 2884 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); ;}
     break;
 
   case 470:
-
-/* Line 1806 of yacc.c  */
 #line 2897 "gram.y"
     {
 				CreatePLangStmt *n = makeNode(CreatePLangStmt);
@@ -21481,12 +21108,10 @@
 				n->plvalidator = NIL;
 				n->pltrusted = false;
 				(yyval.node) = (Node *)n;
-			}
+			;}
     break;
 
   case 471:
-
-/* Line 1806 of yacc.c  */
 #line 2910 "gram.y"
     {
 				CreatePLangStmt *n = makeNode(CreatePLangStmt);
@@ -21497,82 +21122,60 @@
 				n->plvalidator = (yyvsp[(10) - (10)].list);
 				n->pltrusted = (yyvsp[(3) - (10)].boolean);
 				(yyval.node) = (Node *)n;
-			}
+			;}
     break;
 
   case 472:
-
-/* Line 1806 of yacc.c  */
 #line 2923 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 473:
-
-/* Line 1806 of yacc.c  */
 #line 2924 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 474:
-
-/* Line 1806 of yacc.c  */
 #line 2932 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 475:
-
-/* Line 1806 of yacc.c  */
 #line 2933 "gram.y"
-    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); }
+    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 476:
-
-/* Line 1806 of yacc.c  */
 #line 2937 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 477:
-
-/* Line 1806 of yacc.c  */
 #line 2938 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 478:
-
-/* Line 1806 of yacc.c  */
 #line 2942 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 479:
-
-/* Line 1806 of yacc.c  */
 #line 2943 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 480:
-
-/* Line 1806 of yacc.c  */
 #line 2947 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 481:
-
-/* Line 1806 of yacc.c  */
 #line 2948 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 482:
-
-/* Line 1806 of yacc.c  */
 #line 2953 "gram.y"
     {
 					DropPLangStmt *n = makeNode(DropPLangStmt);
@@ -21580,12 +21183,10 @@
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 483:
-
-/* Line 1806 of yacc.c  */
 #line 2961 "gram.y"
     {
 					DropPLangStmt *n = makeNode(DropPLangStmt);
@@ -21593,26 +21194,20 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 484:
-
-/* Line 1806 of yacc.c  */
 #line 2971 "gram.y"
-    {}
+    {;}
     break;
 
   case 485:
-
-/* Line 1806 of yacc.c  */
 #line 2972 "gram.y"
-    {}
+    {;}
     break;
 
   case 486:
-
-/* Line 1806 of yacc.c  */
 #line 2983 "gram.y"
     {
 					CreateTableSpaceStmt *n = makeNode(CreateTableSpaceStmt);
@@ -21620,50 +21215,40 @@
 					n->owner = (yyvsp[(4) - (6)].str);
 					n->location = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 487:
-
-/* Line 1806 of yacc.c  */
 #line 2992 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 488:
-
-/* Line 1806 of yacc.c  */
 #line 2993 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 489:
-
-/* Line 1806 of yacc.c  */
 #line 3007 "gram.y"
     {
 					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
 					n->tablespacename = (yyvsp[(3) - (3)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 490:
-
-/* Line 1806 of yacc.c  */
 #line 3014 "gram.y"
     {
 					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
 					n->tablespacename = (yyvsp[(5) - (5)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 491:
-
-/* Line 1806 of yacc.c  */
 #line 3030 "gram.y"
     {
 					CreateFdwStmt *n = makeNode(CreateFdwStmt);
@@ -21671,12 +21256,10 @@
 					n->validator = (yyvsp[(6) - (7)].list);
 					n->options = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 492:
-
-/* Line 1806 of yacc.c  */
 #line 3047 "gram.y"
     {
 					DropFdwStmt *n = makeNode(DropFdwStmt);
@@ -21684,12 +21267,10 @@
 					n->missing_ok = false;
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 493:
-
-/* Line 1806 of yacc.c  */
 #line 3055 "gram.y"
     {
 					DropFdwStmt *n = makeNode(DropFdwStmt);
@@ -21697,12 +21278,10 @@
 					n->missing_ok = true;
 					n->behavior = (yyvsp[(8) - (8)].dbehavior);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 494:
-
-/* Line 1806 of yacc.c  */
 #line 3072 "gram.y"
     {
 					AlterFdwStmt *n = makeNode(AlterFdwStmt);
@@ -21711,12 +21290,10 @@
 					n->change_validator = true;
 					n->options = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 495:
-
-/* Line 1806 of yacc.c  */
 #line 3081 "gram.y"
     {
 					AlterFdwStmt *n = makeNode(AlterFdwStmt);
@@ -21724,142 +21301,110 @@
 					n->validator = (yyvsp[(6) - (6)].list);
 					n->change_validator = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 496:
-
-/* Line 1806 of yacc.c  */
 #line 3089 "gram.y"
     {
 					AlterFdwStmt *n = makeNode(AlterFdwStmt);
 					n->fdwname = (yyvsp[(5) - (6)].str);
 					n->options = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 497:
-
-/* Line 1806 of yacc.c  */
 #line 3099 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 498:
-
-/* Line 1806 of yacc.c  */
 #line 3100 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 499:
-
-/* Line 1806 of yacc.c  */
 #line 3105 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 500:
-
-/* Line 1806 of yacc.c  */
 #line 3109 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 501:
-
-/* Line 1806 of yacc.c  */
 #line 3116 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 502:
-
-/* Line 1806 of yacc.c  */
 #line 3121 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 503:
-
-/* Line 1806 of yacc.c  */
 #line 3125 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 504:
-
-/* Line 1806 of yacc.c  */
 #line 3132 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
-				}
+				;}
     break;
 
   case 505:
-
-/* Line 1806 of yacc.c  */
 #line 3136 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
 					(yyval.defelt)->defaction = DEFELEM_SET;
-				}
+				;}
     break;
 
   case 506:
-
-/* Line 1806 of yacc.c  */
 #line 3141 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
 					(yyval.defelt)->defaction = DEFELEM_ADD;
-				}
+				;}
     break;
 
   case 507:
-
-/* Line 1806 of yacc.c  */
 #line 3146 "gram.y"
     {
 					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP);
-				}
+				;}
     break;
 
   case 508:
-
-/* Line 1806 of yacc.c  */
 #line 3153 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 509:
-
-/* Line 1806 of yacc.c  */
 #line 3159 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 510:
-
-/* Line 1806 of yacc.c  */
 #line 3164 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 511:
-
-/* Line 1806 of yacc.c  */
 #line 3176 "gram.y"
     {
 					CreateForeignServerStmt *n = makeNode(CreateForeignServerStmt);
@@ -21869,54 +21414,40 @@
 					n->fdwname = (yyvsp[(9) - (10)].str);
 					n->options = (yyvsp[(10) - (10)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 512:
-
-/* Line 1806 of yacc.c  */
 #line 3188 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 513:
-
-/* Line 1806 of yacc.c  */
 #line 3189 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 514:
-
-/* Line 1806 of yacc.c  */
 #line 3194 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 515:
-
-/* Line 1806 of yacc.c  */
 #line 3195 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 516:
-
-/* Line 1806 of yacc.c  */
 #line 3199 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 517:
-
-/* Line 1806 of yacc.c  */
 #line 3200 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 518:
-
-/* Line 1806 of yacc.c  */
 #line 3211 "gram.y"
     {
 					DropForeignServerStmt *n = makeNode(DropForeignServerStmt);
@@ -21924,12 +21455,10 @@
 					n->missing_ok = false;
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 519:
-
-/* Line 1806 of yacc.c  */
 #line 3219 "gram.y"
     {
 					DropForeignServerStmt *n = makeNode(DropForeignServerStmt);
@@ -21937,12 +21466,10 @@
 					n->missing_ok = true;
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 520:
-
-/* Line 1806 of yacc.c  */
 #line 3236 "gram.y"
     {
 					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
@@ -21951,12 +21478,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->has_version = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 521:
-
-/* Line 1806 of yacc.c  */
 #line 3245 "gram.y"
     {
 					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
@@ -21964,24 +21489,20 @@
 					n->version = (yyvsp[(4) - (4)].str);
 					n->has_version = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 522:
-
-/* Line 1806 of yacc.c  */
 #line 3253 "gram.y"
     {
 					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
 					n->servername = (yyvsp[(3) - (4)].str);
 					n->options = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 523:
-
-/* Line 1806 of yacc.c  */
 #line 3269 "gram.y"
     {
 					CreateUserMappingStmt *n = makeNode(CreateUserMappingStmt);
@@ -21989,33 +21510,25 @@
 					n->servername = (yyvsp[(7) - (8)].str);
 					n->options = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 524:
-
-/* Line 1806 of yacc.c  */
 #line 3280 "gram.y"
-    { (yyval.str) = "current_user"; }
+    { (yyval.str) = "current_user"; ;}
     break;
 
   case 525:
-
-/* Line 1806 of yacc.c  */
 #line 3281 "gram.y"
-    { (yyval.str) = "current_user"; }
+    { (yyval.str) = "current_user"; ;}
     break;
 
   case 526:
-
-/* Line 1806 of yacc.c  */
 #line 3282 "gram.y"
-    { (yyval.str) = (strcmp((yyvsp[(1) - (1)].str), "public") == 0) ? NULL : (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (strcmp((yyvsp[(1) - (1)].str), "public") == 0) ? NULL : (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 527:
-
-/* Line 1806 of yacc.c  */
 #line 3293 "gram.y"
     {
 					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
@@ -22023,12 +21536,10 @@
 					n->servername = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 528:
-
-/* Line 1806 of yacc.c  */
 #line 3301 "gram.y"
     {
 					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
@@ -22036,12 +21547,10 @@
 					n->servername = (yyvsp[(9) - (9)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 529:
-
-/* Line 1806 of yacc.c  */
 #line 3318 "gram.y"
     {
 					AlterUserMappingStmt *n = makeNode(AlterUserMappingStmt);
@@ -22049,12 +21558,10 @@
 					n->servername = (yyvsp[(7) - (8)].str);
 					n->options = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 530:
-
-/* Line 1806 of yacc.c  */
 #line 3339 "gram.y"
     {
 					CreateTrigStmt *n = makeNode(CreateTrigStmt);
@@ -22072,12 +21579,10 @@
 					n->initdeferred  = FALSE;
 					n->constrrel = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 531:
-
-/* Line 1806 of yacc.c  */
 #line 3360 "gram.y"
     {
 					CreateTrigStmt *n = makeNode(CreateTrigStmt);
@@ -22095,33 +21600,25 @@
 					n->initdeferred = ((yyvsp[(10) - (20)].ival) & 2) != 0;
 					n->constrrel = (yyvsp[(9) - (20)].range);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 532:
-
-/* Line 1806 of yacc.c  */
 #line 3380 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 533:
-
-/* Line 1806 of yacc.c  */
 #line 3381 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 534:
-
-/* Line 1806 of yacc.c  */
 #line 3386 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 535:
-
-/* Line 1806 of yacc.c  */
 #line 3388 "gram.y"
     {
 					int		events1 = intVal(linitial((yyvsp[(1) - (3)].list)));
@@ -22140,56 +21637,42 @@
 					 */
 					(yyval.list) = list_make2(makeInteger(events1 | events2),
 									list_concat(columns1, columns2));
-				}
+				;}
     break;
 
   case 536:
-
-/* Line 1806 of yacc.c  */
 #line 3410 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_INSERT), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_INSERT), NIL); ;}
     break;
 
   case 537:
-
-/* Line 1806 of yacc.c  */
 #line 3412 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_DELETE), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_DELETE), NIL); ;}
     break;
 
   case 538:
-
-/* Line 1806 of yacc.c  */
 #line 3414 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), NIL); ;}
     break;
 
   case 539:
-
-/* Line 1806 of yacc.c  */
 #line 3416 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 540:
-
-/* Line 1806 of yacc.c  */
 #line 3418 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_TRUNCATE), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_TRUNCATE), NIL); ;}
     break;
 
   case 541:
-
-/* Line 1806 of yacc.c  */
 #line 3423 "gram.y"
     {
 					(yyval.boolean) = (yyvsp[(3) - (3)].boolean);
-				}
+				;}
     break;
 
   case 542:
-
-/* Line 1806 of yacc.c  */
 #line 3427 "gram.y"
     {
 					/*
@@ -22197,142 +21680,104 @@
 					 * STATEMENT, per SQL
 					 */
 					(yyval.boolean) = FALSE;
-				}
+				;}
     break;
 
   case 543:
-
-/* Line 1806 of yacc.c  */
 #line 3437 "gram.y"
-    {}
+    {;}
     break;
 
   case 544:
-
-/* Line 1806 of yacc.c  */
 #line 3438 "gram.y"
-    {}
+    {;}
     break;
 
   case 545:
-
-/* Line 1806 of yacc.c  */
 #line 3442 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 546:
-
-/* Line 1806 of yacc.c  */
 #line 3443 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 547:
-
-/* Line 1806 of yacc.c  */
 #line 3447 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (4)].node); }
+    { (yyval.node) = (yyvsp[(3) - (4)].node); ;}
     break;
 
   case 548:
-
-/* Line 1806 of yacc.c  */
 #line 3448 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 549:
-
-/* Line 1806 of yacc.c  */
 #line 3452 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); ;}
     break;
 
   case 550:
-
-/* Line 1806 of yacc.c  */
 #line 3453 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); ;}
     break;
 
   case 551:
-
-/* Line 1806 of yacc.c  */
 #line 3454 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 552:
-
-/* Line 1806 of yacc.c  */
 #line 3459 "gram.y"
     {
 					char buf[64];
 					snprintf(buf, sizeof(buf), "%d", (yyvsp[(1) - (1)].ival));
 					(yyval.value) = makeString(pstrdup(buf));
-				}
+				;}
     break;
 
   case 553:
-
-/* Line 1806 of yacc.c  */
 #line 3464 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 554:
-
-/* Line 1806 of yacc.c  */
 #line 3465 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 555:
-
-/* Line 1806 of yacc.c  */
 #line 3466 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 556:
-
-/* Line 1806 of yacc.c  */
 #line 3467 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 557:
-
-/* Line 1806 of yacc.c  */
 #line 3468 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 558:
-
-/* Line 1806 of yacc.c  */
 #line 3472 "gram.y"
-    { (yyval.range) = (yyvsp[(2) - (2)].range); }
+    { (yyval.range) = (yyvsp[(2) - (2)].range); ;}
     break;
 
   case 559:
-
-/* Line 1806 of yacc.c  */
 #line 3473 "gram.y"
-    { (yyval.range) = NULL; }
+    { (yyval.range) = NULL; ;}
     break;
 
   case 560:
-
-/* Line 1806 of yacc.c  */
 #line 3478 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 561:
-
-/* Line 1806 of yacc.c  */
 #line 3480 "gram.y"
     {
 					if ((yyvsp[(1) - (2)].ival) == 0 && (yyvsp[(2) - (2)].ival) != 0)
@@ -22341,24 +21786,20 @@
 								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
 								 parser_errposition((yylsp[(1) - (2)]))));
 					(yyval.ival) = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);
-				}
+				;}
     break;
 
   case 562:
-
-/* Line 1806 of yacc.c  */
 #line 3489 "gram.y"
     {
 					if ((yyvsp[(1) - (1)].ival) != 0)
 						(yyval.ival) = 3;
 					else
 						(yyval.ival) = 0;
-				}
+				;}
     break;
 
   case 563:
-
-/* Line 1806 of yacc.c  */
 #line 3496 "gram.y"
     {
 					if ((yyvsp[(2) - (2)].ival) == 0 && (yyvsp[(1) - (2)].ival) != 0)
@@ -22367,47 +21808,35 @@
 								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
 								 parser_errposition((yylsp[(1) - (2)]))));
 					(yyval.ival) = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);
-				}
+				;}
     break;
 
   case 564:
-
-/* Line 1806 of yacc.c  */
 #line 3505 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 565:
-
-/* Line 1806 of yacc.c  */
 #line 3509 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 566:
-
-/* Line 1806 of yacc.c  */
 #line 3510 "gram.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 567:
-
-/* Line 1806 of yacc.c  */
 #line 3514 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 568:
-
-/* Line 1806 of yacc.c  */
 #line 3515 "gram.y"
-    { (yyval.ival) = 2; }
+    { (yyval.ival) = 2; ;}
     break;
 
   case 569:
-
-/* Line 1806 of yacc.c  */
 #line 3521 "gram.y"
     {
 					DropPropertyStmt *n = makeNode(DropPropertyStmt);
@@ -22417,12 +21846,10 @@
 					n->removeType = OBJECT_TRIGGER;
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 570:
-
-/* Line 1806 of yacc.c  */
 #line 3531 "gram.y"
     {
 					DropPropertyStmt *n = makeNode(DropPropertyStmt);
@@ -22432,12 +21859,10 @@
 					n->removeType = OBJECT_TRIGGER;
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 571:
-
-/* Line 1806 of yacc.c  */
 #line 3554 "gram.y"
     {
 					CreateTrigStmt *n = makeNode(CreateTrigStmt);
@@ -22452,12 +21877,10 @@
 							 errmsg("CREATE ASSERTION is not yet implemented")));
 
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 572:
-
-/* Line 1806 of yacc.c  */
 #line 3572 "gram.y"
     {
 					DropPropertyStmt *n = makeNode(DropPropertyStmt);
@@ -22469,12 +21892,10 @@
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("DROP ASSERTION is not yet implemented")));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 573:
-
-/* Line 1806 of yacc.c  */
 #line 3595 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -22484,12 +21905,10 @@
 					n->args = (yyvsp[(4) - (5)].list);
 					n->definition = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 574:
-
-/* Line 1806 of yacc.c  */
 #line 3605 "gram.y"
     {
 					/* old-style (pre-8.2) syntax for CREATE AGGREGATE */
@@ -22500,12 +21919,10 @@
 					n->args = NIL;
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 575:
-
-/* Line 1806 of yacc.c  */
 #line 3616 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -22515,12 +21932,10 @@
 					n->args = NIL;
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 576:
-
-/* Line 1806 of yacc.c  */
 #line 3626 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -22530,12 +21945,10 @@
 					n->args = NIL;
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 577:
-
-/* Line 1806 of yacc.c  */
 #line 3636 "gram.y"
     {
 					/* Shell type (identified by lack of definition) */
@@ -22546,12 +21959,10 @@
 					n->args = NIL;
 					n->definition = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 578:
-
-/* Line 1806 of yacc.c  */
 #line 3647 "gram.y"
     {
 					CompositeTypeStmt *n = makeNode(CompositeTypeStmt);
@@ -22587,24 +21998,20 @@
 					n->typevar = r;
 					n->coldeflist = (yyvsp[(6) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 579:
-
-/* Line 1806 of yacc.c  */
 #line 3683 "gram.y"
     {
 					CreateEnumStmt *n = makeNode(CreateEnumStmt);
 					n->typeName = (yyvsp[(3) - (8)].list);
 					n->vals = (yyvsp[(7) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 580:
-
-/* Line 1806 of yacc.c  */
 #line 3690 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -22613,12 +22020,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 581:
-
-/* Line 1806 of yacc.c  */
 #line 3699 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -22627,12 +22032,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 582:
-
-/* Line 1806 of yacc.c  */
 #line 3708 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -22641,12 +22044,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 583:
-
-/* Line 1806 of yacc.c  */
 #line 3717 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -22655,158 +22056,116 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 584:
-
-/* Line 1806 of yacc.c  */
 #line 3727 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 585:
-
-/* Line 1806 of yacc.c  */
 #line 3730 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 586:
-
-/* Line 1806 of yacc.c  */
 #line 3731 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 587:
-
-/* Line 1806 of yacc.c  */
 #line 3735 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (Node *) (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 588:
-
-/* Line 1806 of yacc.c  */
 #line 3739 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL);
-				}
+				;}
     break;
 
   case 589:
-
-/* Line 1806 of yacc.c  */
 #line 3745 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].typnam); }
+    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 590:
-
-/* Line 1806 of yacc.c  */
 #line 3746 "gram.y"
-    { (yyval.node) = (Node *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); }
+    { (yyval.node) = (Node *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
     break;
 
   case 591:
-
-/* Line 1806 of yacc.c  */
 #line 3747 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].list); }
+    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].list); ;}
     break;
 
   case 592:
-
-/* Line 1806 of yacc.c  */
 #line 3748 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].value); }
+    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].value); ;}
     break;
 
   case 593:
-
-/* Line 1806 of yacc.c  */
 #line 3749 "gram.y"
-    { (yyval.node) = (Node *)makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *)makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 594:
-
-/* Line 1806 of yacc.c  */
 #line 3752 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 595:
-
-/* Line 1806 of yacc.c  */
 #line 3753 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 596:
-
-/* Line 1806 of yacc.c  */
 #line 3756 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 597:
-
-/* Line 1806 of yacc.c  */
 #line 3759 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 598:
-
-/* Line 1806 of yacc.c  */
 #line 3760 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 599:
-
-/* Line 1806 of yacc.c  */
 #line 3769 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (Node *)(yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 600:
-
-/* Line 1806 of yacc.c  */
 #line 3775 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 601:
-
-/* Line 1806 of yacc.c  */
 #line 3776 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 602:
-
-/* Line 1806 of yacc.c  */
 #line 3780 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 603:
-
-/* Line 1806 of yacc.c  */
 #line 3782 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 604:
-
-/* Line 1806 of yacc.c  */
 #line 3800 "gram.y"
     {
 					CreateOpClassStmt *n = makeNode(CreateOpClassStmt);
@@ -22817,26 +22176,20 @@
 					n->opfamilyname = (yyvsp[(11) - (13)].list);
 					n->items = (yyvsp[(13) - (13)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 605:
-
-/* Line 1806 of yacc.c  */
 #line 3813 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 606:
-
-/* Line 1806 of yacc.c  */
 #line 3814 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 607:
-
-/* Line 1806 of yacc.c  */
 #line 3819 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -22845,12 +22198,10 @@
 					n->args = NIL;
 					n->number = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 608:
-
-/* Line 1806 of yacc.c  */
 #line 3828 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -22859,12 +22210,10 @@
 					n->args = (yyvsp[(4) - (5)].list);
 					n->number = (yyvsp[(2) - (5)].ival);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 609:
-
-/* Line 1806 of yacc.c  */
 #line 3837 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -22873,12 +22222,10 @@
 					n->args = extractArgTypes((yyvsp[(4) - (4)].list));
 					n->number = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 610:
-
-/* Line 1806 of yacc.c  */
 #line 3846 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -22888,52 +22235,40 @@
 					n->number = (yyvsp[(2) - (7)].ival);
 					n->class_args = (yyvsp[(4) - (7)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 611:
-
-/* Line 1806 of yacc.c  */
 #line 3856 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
 					n->itemtype = OPCLASS_ITEM_STORAGETYPE;
 					n->storedtype = (yyvsp[(2) - (2)].typnam);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 612:
-
-/* Line 1806 of yacc.c  */
 #line 3864 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 613:
-
-/* Line 1806 of yacc.c  */
 #line 3865 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 614:
-
-/* Line 1806 of yacc.c  */
 #line 3868 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 615:
-
-/* Line 1806 of yacc.c  */
 #line 3869 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 616:
-
-/* Line 1806 of yacc.c  */
 #line 3873 "gram.y"
     {
 					/*
@@ -22947,31 +22282,25 @@
 							 errhint("Update your data type."),
 							 parser_errposition((yylsp[(1) - (1)]))));
 					(yyval.boolean) = TRUE;
-				}
+				;}
     break;
 
   case 617:
-
-/* Line 1806 of yacc.c  */
 #line 3886 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 618:
-
-/* Line 1806 of yacc.c  */
 #line 3892 "gram.y"
     {
 					CreateOpFamilyStmt *n = makeNode(CreateOpFamilyStmt);
 					n->opfamilyname = (yyvsp[(4) - (6)].list);
 					n->amname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 619:
-
-/* Line 1806 of yacc.c  */
 #line 3902 "gram.y"
     {
 					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
@@ -22980,12 +22309,10 @@
 					n->isDrop = false;
 					n->items = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 620:
-
-/* Line 1806 of yacc.c  */
 #line 3911 "gram.y"
     {
 					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
@@ -22994,26 +22321,20 @@
 					n->isDrop = true;
 					n->items = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 621:
-
-/* Line 1806 of yacc.c  */
 #line 3922 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 622:
-
-/* Line 1806 of yacc.c  */
 #line 3923 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 623:
-
-/* Line 1806 of yacc.c  */
 #line 3928 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -23021,12 +22342,10 @@
 					n->number = (yyvsp[(2) - (5)].ival);
 					n->args = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 624:
-
-/* Line 1806 of yacc.c  */
 #line 3936 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -23034,12 +22353,10 @@
 					n->number = (yyvsp[(2) - (5)].ival);
 					n->args = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 625:
-
-/* Line 1806 of yacc.c  */
 #line 3948 "gram.y"
     {
 					RemoveOpClassStmt *n = makeNode(RemoveOpClassStmt);
@@ -23048,12 +22365,10 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 626:
-
-/* Line 1806 of yacc.c  */
 #line 3957 "gram.y"
     {
 					RemoveOpClassStmt *n = makeNode(RemoveOpClassStmt);
@@ -23062,12 +22377,10 @@
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 627:
-
-/* Line 1806 of yacc.c  */
 #line 3969 "gram.y"
     {
 					RemoveOpFamilyStmt *n = makeNode(RemoveOpFamilyStmt);
@@ -23076,12 +22389,10 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 628:
-
-/* Line 1806 of yacc.c  */
 #line 3978 "gram.y"
     {
 					RemoveOpFamilyStmt *n = makeNode(RemoveOpFamilyStmt);
@@ -23090,36 +22401,30 @@
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 629:
-
-/* Line 1806 of yacc.c  */
 #line 3999 "gram.y"
     {
 					DropOwnedStmt *n = makeNode(DropOwnedStmt);
 					n->roles = (yyvsp[(4) - (5)].list);
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 630:
-
-/* Line 1806 of yacc.c  */
 #line 4009 "gram.y"
     {
 					ReassignOwnedStmt *n = makeNode(ReassignOwnedStmt);
 					n->roles = (yyvsp[(4) - (6)].list);
 					n->newrole = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 631:
-
-/* Line 1806 of yacc.c  */
 #line 4027 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -23128,12 +22433,10 @@
 					n->objects = (yyvsp[(5) - (6)].list);
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 632:
-
-/* Line 1806 of yacc.c  */
 #line 4036 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -23142,138 +22445,100 @@
 					n->objects = (yyvsp[(3) - (4)].list);
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 633:
-
-/* Line 1806 of yacc.c  */
 #line 4047 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 634:
-
-/* Line 1806 of yacc.c  */
 #line 4048 "gram.y"
-    { (yyval.objtype) = OBJECT_SEQUENCE; }
+    { (yyval.objtype) = OBJECT_SEQUENCE; ;}
     break;
 
   case 635:
-
-/* Line 1806 of yacc.c  */
 #line 4049 "gram.y"
-    { (yyval.objtype) = OBJECT_VIEW; }
+    { (yyval.objtype) = OBJECT_VIEW; ;}
     break;
 
   case 636:
-
-/* Line 1806 of yacc.c  */
 #line 4050 "gram.y"
-    { (yyval.objtype) = OBJECT_INDEX; }
+    { (yyval.objtype) = OBJECT_INDEX; ;}
     break;
 
   case 637:
-
-/* Line 1806 of yacc.c  */
 #line 4051 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 638:
-
-/* Line 1806 of yacc.c  */
 #line 4052 "gram.y"
-    { (yyval.objtype) = OBJECT_DOMAIN; }
+    { (yyval.objtype) = OBJECT_DOMAIN; ;}
     break;
 
   case 639:
-
-/* Line 1806 of yacc.c  */
 #line 4053 "gram.y"
-    { (yyval.objtype) = OBJECT_CONVERSION; }
+    { (yyval.objtype) = OBJECT_CONVERSION; ;}
     break;
 
   case 640:
-
-/* Line 1806 of yacc.c  */
 #line 4054 "gram.y"
-    { (yyval.objtype) = OBJECT_SCHEMA; }
+    { (yyval.objtype) = OBJECT_SCHEMA; ;}
     break;
 
   case 641:
-
-/* Line 1806 of yacc.c  */
 #line 4055 "gram.y"
-    { (yyval.objtype) = OBJECT_TSPARSER; }
+    { (yyval.objtype) = OBJECT_TSPARSER; ;}
     break;
 
   case 642:
-
-/* Line 1806 of yacc.c  */
 #line 4056 "gram.y"
-    { (yyval.objtype) = OBJECT_TSDICTIONARY; }
+    { (yyval.objtype) = OBJECT_TSDICTIONARY; ;}
     break;
 
   case 643:
-
-/* Line 1806 of yacc.c  */
 #line 4057 "gram.y"
-    { (yyval.objtype) = OBJECT_TSTEMPLATE; }
+    { (yyval.objtype) = OBJECT_TSTEMPLATE; ;}
     break;
 
   case 644:
-
-/* Line 1806 of yacc.c  */
 #line 4058 "gram.y"
-    { (yyval.objtype) = OBJECT_TSCONFIGURATION; }
+    { (yyval.objtype) = OBJECT_TSCONFIGURATION; ;}
     break;
 
   case 645:
-
-/* Line 1806 of yacc.c  */
 #line 4062 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
     break;
 
   case 646:
-
-/* Line 1806 of yacc.c  */
 #line 4063 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 647:
-
-/* Line 1806 of yacc.c  */
 #line 4066 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 648:
-
-/* Line 1806 of yacc.c  */
 #line 4067 "gram.y"
-    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); }
+    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 649:
-
-/* Line 1806 of yacc.c  */
 #line 4071 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
     break;
 
   case 650:
-
-/* Line 1806 of yacc.c  */
 #line 4073 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 651:
-
-/* Line 1806 of yacc.c  */
 #line 4086 "gram.y"
     {
 					TruncateStmt *n = makeNode(TruncateStmt);
@@ -23281,33 +22546,25 @@
 					n->restart_seqs = (yyvsp[(4) - (5)].boolean);
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 652:
-
-/* Line 1806 of yacc.c  */
 #line 4096 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 653:
-
-/* Line 1806 of yacc.c  */
 #line 4097 "gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 654:
-
-/* Line 1806 of yacc.c  */
 #line 4098 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 655:
-
-/* Line 1806 of yacc.c  */
 #line 4124 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23316,12 +22573,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 656:
-
-/* Line 1806 of yacc.c  */
 #line 4133 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23330,12 +22585,10 @@
 					n->objargs = (yyvsp[(5) - (7)].list);
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 657:
-
-/* Line 1806 of yacc.c  */
 #line 4142 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23344,12 +22597,10 @@
 					n->objargs = extractArgTypes((yyvsp[(5) - (7)].list));
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 658:
-
-/* Line 1806 of yacc.c  */
 #line 4151 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23358,12 +22609,10 @@
 					n->objargs = (yyvsp[(5) - (7)].list);
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 659:
-
-/* Line 1806 of yacc.c  */
 #line 4160 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23372,12 +22621,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 660:
-
-/* Line 1806 of yacc.c  */
 #line 4169 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23386,12 +22633,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 661:
-
-/* Line 1806 of yacc.c  */
 #line 4178 "gram.y"
     {
 					/* Obsolete syntax supported for awhile for compatibility */
@@ -23401,12 +22646,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 662:
-
-/* Line 1806 of yacc.c  */
 #line 4188 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23415,12 +22658,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 663:
-
-/* Line 1806 of yacc.c  */
 #line 4197 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23429,12 +22670,10 @@
 					n->objargs = list_make1(makeString((yyvsp[(7) - (9)].str)));
 					n->comment = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 664:
-
-/* Line 1806 of yacc.c  */
 #line 4206 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23443,12 +22682,10 @@
 					n->objargs = list_make1(makeString((yyvsp[(7) - (9)].str)));
 					n->comment = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 665:
-
-/* Line 1806 of yacc.c  */
 #line 4215 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23457,12 +22694,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 666:
-
-/* Line 1806 of yacc.c  */
 #line 4224 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23471,12 +22706,10 @@
 					n->objargs = list_make1((yyvsp[(7) - (10)].typnam));
 					n->comment = (yyvsp[(10) - (10)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 667:
-
-/* Line 1806 of yacc.c  */
 #line 4233 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23485,12 +22718,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 668:
-
-/* Line 1806 of yacc.c  */
 #line 4242 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23498,12 +22729,10 @@
 					n->objname = (yyvsp[(6) - (8)].list);
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 669:
-
-/* Line 1806 of yacc.c  */
 #line 4250 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23511,12 +22740,10 @@
 					n->objname = (yyvsp[(6) - (8)].list);
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 670:
-
-/* Line 1806 of yacc.c  */
 #line 4258 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23524,12 +22751,10 @@
 					n->objname = (yyvsp[(6) - (8)].list);
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 671:
-
-/* Line 1806 of yacc.c  */
 #line 4266 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -23537,132 +22762,98 @@
 					n->objname = (yyvsp[(6) - (8)].list);
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 672:
-
-/* Line 1806 of yacc.c  */
 #line 4276 "gram.y"
-    { (yyval.objtype) = OBJECT_COLUMN; }
+    { (yyval.objtype) = OBJECT_COLUMN; ;}
     break;
 
   case 673:
-
-/* Line 1806 of yacc.c  */
 #line 4277 "gram.y"
-    { (yyval.objtype) = OBJECT_DATABASE; }
+    { (yyval.objtype) = OBJECT_DATABASE; ;}
     break;
 
   case 674:
-
-/* Line 1806 of yacc.c  */
 #line 4278 "gram.y"
-    { (yyval.objtype) = OBJECT_SCHEMA; }
+    { (yyval.objtype) = OBJECT_SCHEMA; ;}
     break;
 
   case 675:
-
-/* Line 1806 of yacc.c  */
 #line 4279 "gram.y"
-    { (yyval.objtype) = OBJECT_INDEX; }
+    { (yyval.objtype) = OBJECT_INDEX; ;}
     break;
 
   case 676:
-
-/* Line 1806 of yacc.c  */
 #line 4280 "gram.y"
-    { (yyval.objtype) = OBJECT_SEQUENCE; }
+    { (yyval.objtype) = OBJECT_SEQUENCE; ;}
     break;
 
   case 677:
-
-/* Line 1806 of yacc.c  */
 #line 4281 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 678:
-
-/* Line 1806 of yacc.c  */
 #line 4282 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 679:
-
-/* Line 1806 of yacc.c  */
 #line 4283 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 680:
-
-/* Line 1806 of yacc.c  */
 #line 4284 "gram.y"
-    { (yyval.objtype) = OBJECT_VIEW; }
+    { (yyval.objtype) = OBJECT_VIEW; ;}
     break;
 
   case 681:
-
-/* Line 1806 of yacc.c  */
 #line 4285 "gram.y"
-    { (yyval.objtype) = OBJECT_CONVERSION; }
+    { (yyval.objtype) = OBJECT_CONVERSION; ;}
     break;
 
   case 682:
-
-/* Line 1806 of yacc.c  */
 #line 4286 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLESPACE; }
+    { (yyval.objtype) = OBJECT_TABLESPACE; ;}
     break;
 
   case 683:
-
-/* Line 1806 of yacc.c  */
 #line 4287 "gram.y"
-    { (yyval.objtype) = OBJECT_ROLE; }
+    { (yyval.objtype) = OBJECT_ROLE; ;}
     break;
 
   case 684:
-
-/* Line 1806 of yacc.c  */
 #line 4291 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 685:
-
-/* Line 1806 of yacc.c  */
 #line 4292 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 686:
-
-/* Line 1806 of yacc.c  */
 #line 4303 "gram.y"
     {
 					FetchStmt *n = (FetchStmt *) (yyvsp[(2) - (2)].node);
 					n->ismove = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 687:
-
-/* Line 1806 of yacc.c  */
 #line 4309 "gram.y"
     {
 					FetchStmt *n = (FetchStmt *) (yyvsp[(2) - (2)].node);
 					n->ismove = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 688:
-
-/* Line 1806 of yacc.c  */
 #line 4317 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23670,12 +22861,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 689:
-
-/* Line 1806 of yacc.c  */
 #line 4325 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23683,12 +22872,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 690:
-
-/* Line 1806 of yacc.c  */
 #line 4333 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23696,12 +22883,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 691:
-
-/* Line 1806 of yacc.c  */
 #line 4341 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23709,12 +22894,10 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 692:
-
-/* Line 1806 of yacc.c  */
 #line 4349 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23722,12 +22905,10 @@
 					n->direction = FETCH_ABSOLUTE;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 693:
-
-/* Line 1806 of yacc.c  */
 #line 4357 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23735,12 +22916,10 @@
 					n->direction = FETCH_ABSOLUTE;
 					n->howMany = -1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 694:
-
-/* Line 1806 of yacc.c  */
 #line 4365 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23748,12 +22927,10 @@
 					n->direction = FETCH_ABSOLUTE;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 695:
-
-/* Line 1806 of yacc.c  */
 #line 4373 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23761,12 +22938,10 @@
 					n->direction = FETCH_RELATIVE;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 696:
-
-/* Line 1806 of yacc.c  */
 #line 4381 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23774,12 +22949,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = (yyvsp[(1) - (3)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 697:
-
-/* Line 1806 of yacc.c  */
 #line 4389 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23787,12 +22960,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 698:
-
-/* Line 1806 of yacc.c  */
 #line 4397 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23800,12 +22971,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 699:
-
-/* Line 1806 of yacc.c  */
 #line 4405 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23813,12 +22982,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 700:
-
-/* Line 1806 of yacc.c  */
 #line 4413 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23826,12 +22993,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 701:
-
-/* Line 1806 of yacc.c  */
 #line 4421 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23839,12 +23004,10 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 702:
-
-/* Line 1806 of yacc.c  */
 #line 4429 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23852,12 +23015,10 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 703:
-
-/* Line 1806 of yacc.c  */
 #line 4437 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -23865,40 +23026,30 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 704:
-
-/* Line 1806 of yacc.c  */
 #line 4446 "gram.y"
-    {}
+    {;}
     break;
 
   case 705:
-
-/* Line 1806 of yacc.c  */
 #line 4447 "gram.y"
-    {}
+    {;}
     break;
 
   case 706:
-
-/* Line 1806 of yacc.c  */
 #line 4450 "gram.y"
-    {}
+    {;}
     break;
 
   case 707:
-
-/* Line 1806 of yacc.c  */
 #line 4451 "gram.y"
-    {}
+    {;}
     break;
 
   case 708:
-
-/* Line 1806 of yacc.c  */
 #line 4463 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -23910,12 +23061,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->grant_option = (yyvsp[(7) - (7)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 709:
-
-/* Line 1806 of yacc.c  */
 #line 4479 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -23928,12 +23077,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 710:
-
-/* Line 1806 of yacc.c  */
 #line 4493 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -23946,119 +23093,95 @@
 					n->grantees = (yyvsp[(9) - (10)].list);
 					n->behavior = (yyvsp[(10) - (10)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 711:
-
-/* Line 1806 of yacc.c  */
 #line 4518 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 712:
-
-/* Line 1806 of yacc.c  */
 #line 4520 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 713:
-
-/* Line 1806 of yacc.c  */
 #line 4522 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 714:
-
-/* Line 1806 of yacc.c  */
 #line 4524 "gram.y"
     {
 					AccessPriv *n = makeNode(AccessPriv);
 					n->priv_name = NULL;
 					n->cols = (yyvsp[(3) - (4)].list);
 					(yyval.list) = list_make1(n);
-				}
+				;}
     break;
 
   case 715:
-
-/* Line 1806 of yacc.c  */
 #line 4531 "gram.y"
     {
 					AccessPriv *n = makeNode(AccessPriv);
 					n->priv_name = NULL;
 					n->cols = (yyvsp[(4) - (5)].list);
 					(yyval.list) = list_make1(n);
-				}
+				;}
     break;
 
   case 716:
-
-/* Line 1806 of yacc.c  */
 #line 4539 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].accesspriv)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].accesspriv)); ;}
     break;
 
   case 717:
-
-/* Line 1806 of yacc.c  */
 #line 4540 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].accesspriv)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].accesspriv)); ;}
     break;
 
   case 718:
-
-/* Line 1806 of yacc.c  */
 #line 4544 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = pstrdup((yyvsp[(1) - (2)].keyword));
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 719:
-
-/* Line 1806 of yacc.c  */
 #line 4551 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = pstrdup((yyvsp[(1) - (2)].keyword));
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 720:
-
-/* Line 1806 of yacc.c  */
 #line 4558 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = pstrdup((yyvsp[(1) - (2)].keyword));
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 721:
-
-/* Line 1806 of yacc.c  */
 #line 4565 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = (yyvsp[(1) - (2)].str);
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 722:
-
-/* Line 1806 of yacc.c  */
 #line 4579 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24066,12 +23189,10 @@
 					n->objtype = ACL_OBJECT_RELATION;
 					n->objs = (yyvsp[(1) - (1)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 723:
-
-/* Line 1806 of yacc.c  */
 #line 4587 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24079,12 +23200,10 @@
 					n->objtype = ACL_OBJECT_RELATION;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 724:
-
-/* Line 1806 of yacc.c  */
 #line 4595 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24092,12 +23211,10 @@
 					n->objtype = ACL_OBJECT_SEQUENCE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 725:
-
-/* Line 1806 of yacc.c  */
 #line 4603 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24105,12 +23222,10 @@
 					n->objtype = ACL_OBJECT_FDW;
 					n->objs = (yyvsp[(4) - (4)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 726:
-
-/* Line 1806 of yacc.c  */
 #line 4611 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24118,12 +23233,10 @@
 					n->objtype = ACL_OBJECT_FOREIGN_SERVER;
 					n->objs = (yyvsp[(3) - (3)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 727:
-
-/* Line 1806 of yacc.c  */
 #line 4619 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24131,12 +23244,10 @@
 					n->objtype = ACL_OBJECT_FUNCTION;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 728:
-
-/* Line 1806 of yacc.c  */
 #line 4627 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24144,12 +23255,10 @@
 					n->objtype = ACL_OBJECT_DATABASE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 729:
-
-/* Line 1806 of yacc.c  */
 #line 4635 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24157,12 +23266,10 @@
 					n->objtype = ACL_OBJECT_LANGUAGE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 730:
-
-/* Line 1806 of yacc.c  */
 #line 4643 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24170,12 +23277,10 @@
 					n->objtype = ACL_OBJECT_LARGEOBJECT;
 					n->objs = (yyvsp[(3) - (3)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 731:
-
-/* Line 1806 of yacc.c  */
 #line 4651 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24183,12 +23288,10 @@
 					n->objtype = ACL_OBJECT_NAMESPACE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 732:
-
-/* Line 1806 of yacc.c  */
 #line 4659 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24196,12 +23299,10 @@
 					n->objtype = ACL_OBJECT_TABLESPACE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 733:
-
-/* Line 1806 of yacc.c  */
 #line 4667 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24209,12 +23310,10 @@
 					n->objtype = ACL_OBJECT_RELATION;
 					n->objs = (yyvsp[(5) - (5)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 734:
-
-/* Line 1806 of yacc.c  */
 #line 4675 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24222,12 +23321,10 @@
 					n->objtype = ACL_OBJECT_SEQUENCE;
 					n->objs = (yyvsp[(5) - (5)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 735:
-
-/* Line 1806 of yacc.c  */
 #line 4683 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -24235,26 +23332,20 @@
 					n->objtype = ACL_OBJECT_FUNCTION;
 					n->objs = (yyvsp[(5) - (5)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 736:
-
-/* Line 1806 of yacc.c  */
 #line 4694 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 737:
-
-/* Line 1806 of yacc.c  */
 #line 4695 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 738:
-
-/* Line 1806 of yacc.c  */
 #line 4699 "gram.y"
     {
 					PrivGrantee *n = makeNode(PrivGrantee);
@@ -24264,12 +23355,10 @@
 					else
 						n->rolname = (yyvsp[(1) - (1)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 739:
-
-/* Line 1806 of yacc.c  */
 #line 4709 "gram.y"
     {
 					PrivGrantee *n = makeNode(PrivGrantee);
@@ -24279,52 +23368,40 @@
 					else
 						n->rolname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 740:
-
-/* Line 1806 of yacc.c  */
 #line 4722 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 741:
-
-/* Line 1806 of yacc.c  */
 #line 4723 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 742:
-
-/* Line 1806 of yacc.c  */
 #line 4727 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].funwithargs)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].funwithargs)); ;}
     break;
 
   case 743:
-
-/* Line 1806 of yacc.c  */
 #line 4729 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].funwithargs)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].funwithargs)); ;}
     break;
 
   case 744:
-
-/* Line 1806 of yacc.c  */
 #line 4734 "gram.y"
     {
 					FuncWithArgs *n = makeNode(FuncWithArgs);
 					n->funcname = (yyvsp[(1) - (2)].list);
 					n->funcargs = extractArgTypes((yyvsp[(2) - (2)].list));
 					(yyval.funwithargs) = n;
-				}
+				;}
     break;
 
   case 745:
-
-/* Line 1806 of yacc.c  */
 #line 4750 "gram.y"
     {
 					GrantRoleStmt *n = makeNode(GrantRoleStmt);
@@ -24334,12 +23411,10 @@
 					n->admin_opt = (yyvsp[(5) - (6)].boolean);
 					n->grantor = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 746:
-
-/* Line 1806 of yacc.c  */
 #line 4763 "gram.y"
     {
 					GrantRoleStmt *n = makeNode(GrantRoleStmt);
@@ -24349,12 +23424,10 @@
 					n->grantee_roles = (yyvsp[(4) - (6)].list);
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 747:
-
-/* Line 1806 of yacc.c  */
 #line 4773 "gram.y"
     {
 					GrantRoleStmt *n = makeNode(GrantRoleStmt);
@@ -24364,93 +23437,71 @@
 					n->grantee_roles = (yyvsp[(7) - (9)].list);
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 748:
-
-/* Line 1806 of yacc.c  */
 #line 4784 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 749:
-
-/* Line 1806 of yacc.c  */
 #line 4785 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 750:
-
-/* Line 1806 of yacc.c  */
 #line 4788 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 751:
-
-/* Line 1806 of yacc.c  */
 #line 4789 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 752:
-
-/* Line 1806 of yacc.c  */
 #line 4800 "gram.y"
     {
 					AlterDefaultPrivilegesStmt *n = makeNode(AlterDefaultPrivilegesStmt);
 					n->options = (yyvsp[(4) - (5)].list);
 					n->action = (GrantStmt *) (yyvsp[(5) - (5)].node);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 753:
-
-/* Line 1806 of yacc.c  */
 #line 4809 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 754:
-
-/* Line 1806 of yacc.c  */
 #line 4810 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 755:
-
-/* Line 1806 of yacc.c  */
 #line 4815 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("schemas", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 756:
-
-/* Line 1806 of yacc.c  */
 #line 4819 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 757:
-
-/* Line 1806 of yacc.c  */
 #line 4823 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 758:
-
-/* Line 1806 of yacc.c  */
 #line 4835 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -24462,12 +23513,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->grant_option = (yyvsp[(7) - (7)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 759:
-
-/* Line 1806 of yacc.c  */
 #line 4848 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -24480,12 +23529,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 760:
-
-/* Line 1806 of yacc.c  */
 #line 4862 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -24498,33 +23545,25 @@
 					n->grantees = (yyvsp[(9) - (10)].list);
 					n->behavior = (yyvsp[(10) - (10)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 761:
-
-/* Line 1806 of yacc.c  */
 #line 4877 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_RELATION; }
+    { (yyval.ival) = ACL_OBJECT_RELATION; ;}
     break;
 
   case 762:
-
-/* Line 1806 of yacc.c  */
 #line 4878 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_FUNCTION; }
+    { (yyval.ival) = ACL_OBJECT_FUNCTION; ;}
     break;
 
   case 763:
-
-/* Line 1806 of yacc.c  */
 #line 4879 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_SEQUENCE; }
+    { (yyval.ival) = ACL_OBJECT_SEQUENCE; ;}
     break;
 
   case 764:
-
-/* Line 1806 of yacc.c  */
 #line 4894 "gram.y"
     {
 					IndexStmt *n = makeNode(IndexStmt);
@@ -24538,82 +23577,60 @@
 					n->tableSpace = (yyvsp[(13) - (14)].str);
 					n->whereClause = (yyvsp[(14) - (14)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 765:
-
-/* Line 1806 of yacc.c  */
 #line 4910 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 766:
-
-/* Line 1806 of yacc.c  */
 #line 4911 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 767:
-
-/* Line 1806 of yacc.c  */
 #line 4915 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 768:
-
-/* Line 1806 of yacc.c  */
 #line 4916 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 769:
-
-/* Line 1806 of yacc.c  */
 #line 4920 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 770:
-
-/* Line 1806 of yacc.c  */
 #line 4921 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 771:
-
-/* Line 1806 of yacc.c  */
 #line 4925 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 772:
-
-/* Line 1806 of yacc.c  */
 #line 4926 "gram.y"
-    { (yyval.str) = DEFAULT_INDEX_TYPE; }
+    { (yyval.str) = DEFAULT_INDEX_TYPE; ;}
     break;
 
   case 773:
-
-/* Line 1806 of yacc.c  */
 #line 4929 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
     break;
 
   case 774:
-
-/* Line 1806 of yacc.c  */
 #line 4930 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
     break;
 
   case 775:
-
-/* Line 1806 of yacc.c  */
 #line 4939 "gram.y"
     {
 					(yyval.ielem) = makeNode(IndexElem);
@@ -24623,12 +23640,10 @@
 					(yyval.ielem)->opclass = (yyvsp[(2) - (4)].list);
 					(yyval.ielem)->ordering = (yyvsp[(3) - (4)].ival);
 					(yyval.ielem)->nulls_ordering = (yyvsp[(4) - (4)].ival);
-				}
+				;}
     break;
 
   case 776:
-
-/* Line 1806 of yacc.c  */
 #line 4949 "gram.y"
     {
 					(yyval.ielem) = makeNode(IndexElem);
@@ -24638,12 +23653,10 @@
 					(yyval.ielem)->opclass = (yyvsp[(2) - (4)].list);
 					(yyval.ielem)->ordering = (yyvsp[(3) - (4)].ival);
 					(yyval.ielem)->nulls_ordering = (yyvsp[(4) - (4)].ival);
-				}
+				;}
     break;
 
   case 777:
-
-/* Line 1806 of yacc.c  */
 #line 4959 "gram.y"
     {
 					(yyval.ielem) = makeNode(IndexElem);
@@ -24653,75 +23666,55 @@
 					(yyval.ielem)->opclass = (yyvsp[(4) - (6)].list);
 					(yyval.ielem)->ordering = (yyvsp[(5) - (6)].ival);
 					(yyval.ielem)->nulls_ordering = (yyvsp[(6) - (6)].ival);
-				}
+				;}
     break;
 
   case 778:
-
-/* Line 1806 of yacc.c  */
 #line 4970 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 779:
-
-/* Line 1806 of yacc.c  */
 #line 4971 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 780:
-
-/* Line 1806 of yacc.c  */
 #line 4972 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 781:
-
-/* Line 1806 of yacc.c  */
 #line 4975 "gram.y"
-    { (yyval.ival) = SORTBY_ASC; }
+    { (yyval.ival) = SORTBY_ASC; ;}
     break;
 
   case 782:
-
-/* Line 1806 of yacc.c  */
 #line 4976 "gram.y"
-    { (yyval.ival) = SORTBY_DESC; }
+    { (yyval.ival) = SORTBY_DESC; ;}
     break;
 
   case 783:
-
-/* Line 1806 of yacc.c  */
 #line 4977 "gram.y"
-    { (yyval.ival) = SORTBY_DEFAULT; }
+    { (yyval.ival) = SORTBY_DEFAULT; ;}
     break;
 
   case 784:
-
-/* Line 1806 of yacc.c  */
 #line 4980 "gram.y"
-    { (yyval.ival) = SORTBY_NULLS_FIRST; }
+    { (yyval.ival) = SORTBY_NULLS_FIRST; ;}
     break;
 
   case 785:
-
-/* Line 1806 of yacc.c  */
 #line 4981 "gram.y"
-    { (yyval.ival) = SORTBY_NULLS_LAST; }
+    { (yyval.ival) = SORTBY_NULLS_LAST; ;}
     break;
 
   case 786:
-
-/* Line 1806 of yacc.c  */
 #line 4982 "gram.y"
-    { (yyval.ival) = SORTBY_NULLS_DEFAULT; }
+    { (yyval.ival) = SORTBY_NULLS_DEFAULT; ;}
     break;
 
   case 787:
-
-/* Line 1806 of yacc.c  */
 #line 5000 "gram.y"
     {
 					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
@@ -24732,12 +23725,10 @@
 					n->options = (yyvsp[(8) - (9)].list);
 					n->withClause = (yyvsp[(9) - (9)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 788:
-
-/* Line 1806 of yacc.c  */
 #line 5012 "gram.y"
     {
 					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
@@ -24749,12 +23740,10 @@
 					n->options = (yyvsp[(11) - (12)].list);
 					n->withClause = (yyvsp[(12) - (12)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 789:
-
-/* Line 1806 of yacc.c  */
 #line 5025 "gram.y"
     {
 					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
@@ -24765,82 +23754,60 @@
 					n->options = (yyvsp[(6) - (7)].list);
 					n->withClause = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 790:
-
-/* Line 1806 of yacc.c  */
 #line 5038 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 791:
-
-/* Line 1806 of yacc.c  */
 #line 5039 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 792:
-
-/* Line 1806 of yacc.c  */
 #line 5042 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 793:
-
-/* Line 1806 of yacc.c  */
 #line 5043 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 794:
-
-/* Line 1806 of yacc.c  */
 #line 5047 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); ;}
     break;
 
   case 795:
-
-/* Line 1806 of yacc.c  */
 #line 5048 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); ;}
     break;
 
   case 796:
-
-/* Line 1806 of yacc.c  */
 #line 5056 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 797:
-
-/* Line 1806 of yacc.c  */
 #line 5057 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 798:
-
-/* Line 1806 of yacc.c  */
 #line 5061 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); ;}
     break;
 
   case 799:
-
-/* Line 1806 of yacc.c  */
 #line 5063 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); ;}
     break;
 
   case 800:
-
-/* Line 1806 of yacc.c  */
 #line 5078 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -24849,12 +23816,10 @@
 					n->mode = (yyvsp[(1) - (3)].fun_param_mode);
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 801:
-
-/* Line 1806 of yacc.c  */
 #line 5087 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -24863,12 +23828,10 @@
 					n->mode = (yyvsp[(2) - (3)].fun_param_mode);
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 802:
-
-/* Line 1806 of yacc.c  */
 #line 5096 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -24877,12 +23840,10 @@
 					n->mode = FUNC_PARAM_IN;
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 803:
-
-/* Line 1806 of yacc.c  */
 #line 5105 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -24891,12 +23852,10 @@
 					n->mode = (yyvsp[(1) - (2)].fun_param_mode);
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 804:
-
-/* Line 1806 of yacc.c  */
 #line 5114 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -24905,47 +23864,35 @@
 					n->mode = FUNC_PARAM_IN;
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 805:
-
-/* Line 1806 of yacc.c  */
 #line 5125 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_IN; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_IN; ;}
     break;
 
   case 806:
-
-/* Line 1806 of yacc.c  */
 #line 5126 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_OUT; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_OUT; ;}
     break;
 
   case 807:
-
-/* Line 1806 of yacc.c  */
 #line 5127 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; ;}
     break;
 
   case 808:
-
-/* Line 1806 of yacc.c  */
 #line 5128 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; ;}
     break;
 
   case 809:
-
-/* Line 1806 of yacc.c  */
 #line 5129 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_VARIADIC; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_VARIADIC; ;}
     break;
 
   case 811:
-
-/* Line 1806 of yacc.c  */
 #line 5140 "gram.y"
     {
 					/* We can catch over-specified results here if we want to,
@@ -24953,269 +23900,209 @@
 					 * - thomas 2000-03-22
 					 */
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 812:
-
-/* Line 1806 of yacc.c  */
 #line 5154 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 813:
-
-/* Line 1806 of yacc.c  */
 #line 5156 "gram.y"
     {
 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
 					(yyval.typnam)->pct_type = true;
 					(yyval.typnam)->location = (yylsp[(1) - (4)]);
-				}
+				;}
     break;
 
   case 814:
-
-/* Line 1806 of yacc.c  */
 #line 5162 "gram.y"
     {
 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
 					(yyval.typnam)->pct_type = true;
 					(yyval.typnam)->setof = TRUE;
 					(yyval.typnam)->location = (yylsp[(2) - (5)]);
-				}
+				;}
     break;
 
   case 815:
-
-/* Line 1806 of yacc.c  */
 #line 5172 "gram.y"
     {
 				    (yyval.fun_param) = (yyvsp[(1) - (1)].fun_param);
-			    }
+			    ;}
     break;
 
   case 816:
-
-/* Line 1806 of yacc.c  */
 #line 5176 "gram.y"
     {
 				    (yyval.fun_param) = (yyvsp[(1) - (3)].fun_param);
 				    (yyval.fun_param)->defexpr = (yyvsp[(3) - (3)].node);
-			    }
+			    ;}
     break;
 
   case 817:
-
-/* Line 1806 of yacc.c  */
 #line 5181 "gram.y"
     {
 				    (yyval.fun_param) = (yyvsp[(1) - (3)].fun_param);
 				    (yyval.fun_param)->defexpr = (yyvsp[(3) - (3)].node);
-			    }
+			    ;}
     break;
 
   case 818:
-
-/* Line 1806 of yacc.c  */
 #line 5190 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 819:
-
-/* Line 1806 of yacc.c  */
 #line 5191 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 820:
-
-/* Line 1806 of yacc.c  */
 #line 5199 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 821:
-
-/* Line 1806 of yacc.c  */
 #line 5203 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 822:
-
-/* Line 1806 of yacc.c  */
 #line 5207 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 823:
-
-/* Line 1806 of yacc.c  */
 #line 5211 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("immutable"));
-				}
+				;}
     break;
 
   case 824:
-
-/* Line 1806 of yacc.c  */
 #line 5215 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("stable"));
-				}
+				;}
     break;
 
   case 825:
-
-/* Line 1806 of yacc.c  */
 #line 5219 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("volatile"));
-				}
+				;}
     break;
 
   case 826:
-
-/* Line 1806 of yacc.c  */
 #line 5223 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 827:
-
-/* Line 1806 of yacc.c  */
 #line 5227 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 828:
-
-/* Line 1806 of yacc.c  */
 #line 5231 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 829:
-
-/* Line 1806 of yacc.c  */
 #line 5235 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 830:
-
-/* Line 1806 of yacc.c  */
 #line 5239 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cost", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 831:
-
-/* Line 1806 of yacc.c  */
 #line 5243 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("rows", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 832:
-
-/* Line 1806 of yacc.c  */
 #line 5247 "gram.y"
     {
 					/* we abuse the normal content of a DefElem here */
 					(yyval.defelt) = makeDefElem("set", (Node *)(yyvsp[(1) - (1)].vsetstmt));
-				}
+				;}
     break;
 
   case 833:
-
-/* Line 1806 of yacc.c  */
 #line 5255 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("as", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 834:
-
-/* Line 1806 of yacc.c  */
 #line 5259 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 835:
-
-/* Line 1806 of yacc.c  */
 #line 5263 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("window", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 836:
-
-/* Line 1806 of yacc.c  */
 #line 5267 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
-				}
+				;}
     break;
 
   case 837:
-
-/* Line 1806 of yacc.c  */
 #line 5272 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 838:
-
-/* Line 1806 of yacc.c  */
 #line 5274 "gram.y"
     {
 					(yyval.list) = list_make2(makeString((yyvsp[(1) - (3)].str)), makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 839:
-
-/* Line 1806 of yacc.c  */
 #line 5280 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 840:
-
-/* Line 1806 of yacc.c  */
 #line 5281 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 841:
-
-/* Line 1806 of yacc.c  */
 #line 5285 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -25224,56 +24111,44 @@
 					n->mode = FUNC_PARAM_TABLE;
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 842:
-
-/* Line 1806 of yacc.c  */
 #line 5297 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param));
-				}
+				;}
     break;
 
   case 843:
-
-/* Line 1806 of yacc.c  */
 #line 5301 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param));
-				}
+				;}
     break;
 
   case 844:
-
-/* Line 1806 of yacc.c  */
 #line 5316 "gram.y"
     {
 					AlterFunctionStmt *n = makeNode(AlterFunctionStmt);
 					n->func = (yyvsp[(3) - (5)].funwithargs);
 					n->actions = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 845:
-
-/* Line 1806 of yacc.c  */
 #line 5326 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 846:
-
-/* Line 1806 of yacc.c  */
 #line 5327 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 849:
-
-/* Line 1806 of yacc.c  */
 #line 5349 "gram.y"
     {
 					RemoveFuncStmt *n = makeNode(RemoveFuncStmt);
@@ -25283,12 +24158,10 @@
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 850:
-
-/* Line 1806 of yacc.c  */
 #line 5359 "gram.y"
     {
 					RemoveFuncStmt *n = makeNode(RemoveFuncStmt);
@@ -25298,12 +24171,10 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 851:
-
-/* Line 1806 of yacc.c  */
 #line 5372 "gram.y"
     {
 					RemoveFuncStmt *n = makeNode(RemoveFuncStmt);
@@ -25313,12 +24184,10 @@
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 852:
-
-/* Line 1806 of yacc.c  */
 #line 5382 "gram.y"
     {
 					RemoveFuncStmt *n = makeNode(RemoveFuncStmt);
@@ -25328,12 +24197,10 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 853:
-
-/* Line 1806 of yacc.c  */
 #line 5395 "gram.y"
     {
 					RemoveFuncStmt *n = makeNode(RemoveFuncStmt);
@@ -25343,12 +24210,10 @@
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 854:
-
-/* Line 1806 of yacc.c  */
 #line 5405 "gram.y"
     {
 					RemoveFuncStmt *n = makeNode(RemoveFuncStmt);
@@ -25358,12 +24223,10 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 855:
-
-/* Line 1806 of yacc.c  */
 #line 5418 "gram.y"
     {
 				   ereport(ERROR,
@@ -25371,90 +24234,68 @@
 							errmsg("missing argument"),
 							errhint("Use NONE to denote the missing argument of a unary operator."),
 							parser_errposition((yylsp[(3) - (3)]))));
-				}
+				;}
     break;
 
   case 856:
-
-/* Line 1806 of yacc.c  */
 #line 5426 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), (yyvsp[(4) - (5)].typnam)); }
+    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), (yyvsp[(4) - (5)].typnam)); ;}
     break;
 
   case 857:
-
-/* Line 1806 of yacc.c  */
 #line 5428 "gram.y"
-    { (yyval.list) = list_make2(NULL, (yyvsp[(4) - (5)].typnam)); }
+    { (yyval.list) = list_make2(NULL, (yyvsp[(4) - (5)].typnam)); ;}
     break;
 
   case 858:
-
-/* Line 1806 of yacc.c  */
 #line 5430 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), NULL); }
+    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), NULL); ;}
     break;
 
   case 859:
-
-/* Line 1806 of yacc.c  */
 #line 5435 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 860:
-
-/* Line 1806 of yacc.c  */
 #line 5437 "gram.y"
-    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 861:
-
-/* Line 1806 of yacc.c  */
 #line 5450 "gram.y"
     {
 					DoStmt *n = makeNode(DoStmt);
 					n->args = (yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 862:
-
-/* Line 1806 of yacc.c  */
 #line 5458 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 863:
-
-/* Line 1806 of yacc.c  */
 #line 5459 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 864:
-
-/* Line 1806 of yacc.c  */
 #line 5464 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("as", (Node *)makeString((yyvsp[(1) - (1)].str)));
-				}
+				;}
     break;
 
   case 865:
-
-/* Line 1806 of yacc.c  */
 #line 5468 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 866:
-
-/* Line 1806 of yacc.c  */
 #line 5481 "gram.y"
     {
 					CreateCastStmt *n = makeNode(CreateCastStmt);
@@ -25464,12 +24305,10 @@
 					n->context = (CoercionContext) (yyvsp[(11) - (11)].ival);
 					n->inout = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 867:
-
-/* Line 1806 of yacc.c  */
 #line 5492 "gram.y"
     {
 					CreateCastStmt *n = makeNode(CreateCastStmt);
@@ -25479,12 +24318,10 @@
 					n->context = (CoercionContext) (yyvsp[(10) - (10)].ival);
 					n->inout = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 868:
-
-/* Line 1806 of yacc.c  */
 #line 5503 "gram.y"
     {
 					CreateCastStmt *n = makeNode(CreateCastStmt);
@@ -25494,33 +24331,25 @@
 					n->context = (CoercionContext) (yyvsp[(10) - (10)].ival);
 					n->inout = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 869:
-
-/* Line 1806 of yacc.c  */
 #line 5514 "gram.y"
-    { (yyval.ival) = COERCION_IMPLICIT; }
+    { (yyval.ival) = COERCION_IMPLICIT; ;}
     break;
 
   case 870:
-
-/* Line 1806 of yacc.c  */
 #line 5515 "gram.y"
-    { (yyval.ival) = COERCION_ASSIGNMENT; }
+    { (yyval.ival) = COERCION_ASSIGNMENT; ;}
     break;
 
   case 871:
-
-/* Line 1806 of yacc.c  */
 #line 5516 "gram.y"
-    { (yyval.ival) = COERCION_EXPLICIT; }
+    { (yyval.ival) = COERCION_EXPLICIT; ;}
     break;
 
   case 872:
-
-/* Line 1806 of yacc.c  */
 #line 5521 "gram.y"
     {
 					DropCastStmt *n = makeNode(DropCastStmt);
@@ -25529,26 +24358,20 @@
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					n->missing_ok = (yyvsp[(3) - (9)].boolean);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 873:
-
-/* Line 1806 of yacc.c  */
 #line 5531 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 874:
-
-/* Line 1806 of yacc.c  */
 #line 5532 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 875:
-
-/* Line 1806 of yacc.c  */
 #line 5547 "gram.y"
     {
 					ReindexStmt *n = makeNode(ReindexStmt);
@@ -25556,12 +24379,10 @@
 					n->relation = (yyvsp[(3) - (4)].range);
 					n->name = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 876:
-
-/* Line 1806 of yacc.c  */
 #line 5555 "gram.y"
     {
 					ReindexStmt *n = makeNode(ReindexStmt);
@@ -25571,12 +24392,10 @@
 					n->do_system = true;
 					n->do_user = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 877:
-
-/* Line 1806 of yacc.c  */
 #line 5565 "gram.y"
     {
 					ReindexStmt *n = makeNode(ReindexStmt);
@@ -25586,40 +24405,30 @@
 					n->do_system = true;
 					n->do_user = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 878:
-
-/* Line 1806 of yacc.c  */
 #line 5577 "gram.y"
-    { (yyval.objtype) = OBJECT_INDEX; }
+    { (yyval.objtype) = OBJECT_INDEX; ;}
     break;
 
   case 879:
-
-/* Line 1806 of yacc.c  */
 #line 5578 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 880:
-
-/* Line 1806 of yacc.c  */
 #line 5581 "gram.y"
-    {  (yyval.boolean) = TRUE; }
+    {  (yyval.boolean) = TRUE; ;}
     break;
 
   case 881:
-
-/* Line 1806 of yacc.c  */
 #line 5582 "gram.y"
-    {  (yyval.boolean) = FALSE; }
+    {  (yyval.boolean) = FALSE; ;}
     break;
 
   case 882:
-
-/* Line 1806 of yacc.c  */
 #line 5593 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25628,12 +24437,10 @@
 					n->objarg = (yyvsp[(4) - (7)].list);
 					n->newname = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 883:
-
-/* Line 1806 of yacc.c  */
 #line 5602 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25641,12 +24448,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 884:
-
-/* Line 1806 of yacc.c  */
 #line 5610 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25654,12 +24459,10 @@
 					n->subname = (yyvsp[(3) - (6)].str);
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 885:
-
-/* Line 1806 of yacc.c  */
 #line 5618 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25668,12 +24471,10 @@
 					n->objarg = (yyvsp[(3) - (6)].funwithargs)->funcargs;
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 886:
-
-/* Line 1806 of yacc.c  */
 #line 5627 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25681,12 +24482,10 @@
 					n->subname = (yyvsp[(3) - (6)].str);
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 887:
-
-/* Line 1806 of yacc.c  */
 #line 5635 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25694,12 +24493,10 @@
 					n->subname = (yyvsp[(4) - (7)].str);
 					n->newname = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 888:
-
-/* Line 1806 of yacc.c  */
 #line 5643 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25708,12 +24505,10 @@
 					n->subname = (yyvsp[(6) - (9)].str);
 					n->newname = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 889:
-
-/* Line 1806 of yacc.c  */
 #line 5652 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25722,12 +24517,10 @@
 					n->subname = (yyvsp[(6) - (9)].str);
 					n->newname = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 890:
-
-/* Line 1806 of yacc.c  */
 #line 5661 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25735,12 +24528,10 @@
 					n->subname = (yyvsp[(3) - (6)].str);
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 891:
-
-/* Line 1806 of yacc.c  */
 #line 5669 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25749,12 +24540,10 @@
 					n->subname = NULL;
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 892:
-
-/* Line 1806 of yacc.c  */
 #line 5678 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25763,12 +24552,10 @@
 					n->subname = NULL;
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 893:
-
-/* Line 1806 of yacc.c  */
 #line 5687 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25777,12 +24564,10 @@
 					n->subname = NULL;
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 894:
-
-/* Line 1806 of yacc.c  */
 #line 5696 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25791,12 +24576,10 @@
 					n->subname = NULL;
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 895:
-
-/* Line 1806 of yacc.c  */
 #line 5705 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25805,12 +24588,10 @@
 					n->subname = (yyvsp[(6) - (8)].str);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 896:
-
-/* Line 1806 of yacc.c  */
 #line 5714 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25819,12 +24600,10 @@
 					n->subname = (yyvsp[(3) - (8)].str);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 897:
-
-/* Line 1806 of yacc.c  */
 #line 5723 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25832,12 +24611,10 @@
 					n->subname = (yyvsp[(3) - (6)].str);
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 898:
-
-/* Line 1806 of yacc.c  */
 #line 5731 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25845,12 +24622,10 @@
 					n->subname = (yyvsp[(3) - (6)].str);
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 899:
-
-/* Line 1806 of yacc.c  */
 #line 5739 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25858,12 +24633,10 @@
 					n->subname = (yyvsp[(3) - (6)].str);
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 900:
-
-/* Line 1806 of yacc.c  */
 #line 5747 "gram.y"
     {
 					AlterTableSpaceOptionsStmt *n =
@@ -25872,12 +24645,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->isReset = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 901:
-
-/* Line 1806 of yacc.c  */
 #line 5756 "gram.y"
     {
 					AlterTableSpaceOptionsStmt *n =
@@ -25886,12 +24657,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->isReset = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 902:
-
-/* Line 1806 of yacc.c  */
 #line 5765 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25899,12 +24668,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 903:
-
-/* Line 1806 of yacc.c  */
 #line 5773 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25912,12 +24679,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 904:
-
-/* Line 1806 of yacc.c  */
 #line 5781 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25925,12 +24690,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 905:
-
-/* Line 1806 of yacc.c  */
 #line 5789 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25938,12 +24701,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 906:
-
-/* Line 1806 of yacc.c  */
 #line 5797 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -25951,40 +24712,30 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 907:
-
-/* Line 1806 of yacc.c  */
 #line 5806 "gram.y"
-    { (yyval.ival) = COLUMN; }
+    { (yyval.ival) = COLUMN; ;}
     break;
 
   case 908:
-
-/* Line 1806 of yacc.c  */
 #line 5807 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 909:
-
-/* Line 1806 of yacc.c  */
 #line 5810 "gram.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 910:
-
-/* Line 1806 of yacc.c  */
 #line 5811 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 911:
-
-/* Line 1806 of yacc.c  */
 #line 5822 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -25993,12 +24744,10 @@
 					n->objarg = (yyvsp[(4) - (7)].list);
 					n->newschema = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 912:
-
-/* Line 1806 of yacc.c  */
 #line 5831 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -26006,12 +24755,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newschema = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 913:
-
-/* Line 1806 of yacc.c  */
 #line 5839 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -26020,12 +24767,10 @@
 					n->objarg = (yyvsp[(3) - (6)].funwithargs)->funcargs;
 					n->newschema = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 914:
-
-/* Line 1806 of yacc.c  */
 #line 5848 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -26033,12 +24778,10 @@
 					n->relation = (yyvsp[(3) - (6)].range);
 					n->newschema = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 915:
-
-/* Line 1806 of yacc.c  */
 #line 5856 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -26046,12 +24789,10 @@
 					n->relation = (yyvsp[(3) - (6)].range);
 					n->newschema = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 916:
-
-/* Line 1806 of yacc.c  */
 #line 5864 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -26059,12 +24800,10 @@
 					n->relation = (yyvsp[(3) - (6)].range);
 					n->newschema = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 917:
-
-/* Line 1806 of yacc.c  */
 #line 5872 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -26072,12 +24811,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newschema = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 918:
-
-/* Line 1806 of yacc.c  */
 #line 5888 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26086,12 +24823,10 @@
 					n->objarg = (yyvsp[(4) - (7)].list);
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 919:
-
-/* Line 1806 of yacc.c  */
 #line 5897 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26099,12 +24834,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 920:
-
-/* Line 1806 of yacc.c  */
 #line 5905 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26112,12 +24845,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 921:
-
-/* Line 1806 of yacc.c  */
 #line 5913 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26125,12 +24856,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 922:
-
-/* Line 1806 of yacc.c  */
 #line 5921 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26139,12 +24868,10 @@
 					n->objarg = (yyvsp[(3) - (6)].funwithargs)->funcargs;
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 923:
-
-/* Line 1806 of yacc.c  */
 #line 5930 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26152,12 +24879,10 @@
 					n->object = list_make1(makeString((yyvsp[(4) - (7)].str)));
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 924:
-
-/* Line 1806 of yacc.c  */
 #line 5938 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26165,12 +24890,10 @@
 					n->object = list_make1((yyvsp[(4) - (7)].value));
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 925:
-
-/* Line 1806 of yacc.c  */
 #line 5946 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26179,12 +24902,10 @@
 					n->objarg = (yyvsp[(4) - (7)].list);
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 926:
-
-/* Line 1806 of yacc.c  */
 #line 5955 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26193,12 +24914,10 @@
 					n->addname = (yyvsp[(6) - (9)].str);
 					n->newowner = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 927:
-
-/* Line 1806 of yacc.c  */
 #line 5964 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26207,12 +24926,10 @@
 					n->addname = (yyvsp[(6) - (9)].str);
 					n->newowner = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 928:
-
-/* Line 1806 of yacc.c  */
 #line 5973 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26220,12 +24937,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 929:
-
-/* Line 1806 of yacc.c  */
 #line 5981 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26233,12 +24948,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 930:
-
-/* Line 1806 of yacc.c  */
 #line 5989 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26246,12 +24959,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 931:
-
-/* Line 1806 of yacc.c  */
 #line 5997 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26259,12 +24970,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newowner = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 932:
-
-/* Line 1806 of yacc.c  */
 #line 6005 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26272,12 +24981,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newowner = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 933:
-
-/* Line 1806 of yacc.c  */
 #line 6013 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26285,12 +24992,10 @@
 					n->object = list_make1(makeString((yyvsp[(5) - (8)].str)));
 					n->newowner = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 934:
-
-/* Line 1806 of yacc.c  */
 #line 6021 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -26298,12 +25003,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 935:
-
-/* Line 1806 of yacc.c  */
 #line 6040 "gram.y"
     {
 					RuleStmt *n = makeNode(RuleStmt);
@@ -26315,118 +25018,88 @@
 					n->instead = (yyvsp[(12) - (13)].boolean);
 					n->actions = (yyvsp[(13) - (13)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 936:
-
-/* Line 1806 of yacc.c  */
 #line 6054 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 937:
-
-/* Line 1806 of yacc.c  */
 #line 6055 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 938:
-
-/* Line 1806 of yacc.c  */
 #line 6056 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 939:
-
-/* Line 1806 of yacc.c  */
 #line 6062 "gram.y"
     { if ((yyvsp[(3) - (3)].node) != NULL)
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
 				  else
 					(yyval.list) = (yyvsp[(1) - (3)].list);
-				}
+				;}
     break;
 
   case 940:
-
-/* Line 1806 of yacc.c  */
 #line 6068 "gram.y"
     { if ((yyvsp[(1) - (1)].node) != NULL)
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
 				  else
 					(yyval.list) = NIL;
-				}
+				;}
     break;
 
   case 946:
-
-/* Line 1806 of yacc.c  */
 #line 6084 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 947:
-
-/* Line 1806 of yacc.c  */
 #line 6085 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 948:
-
-/* Line 1806 of yacc.c  */
 #line 6088 "gram.y"
-    { (yyval.ival) = CMD_SELECT; }
+    { (yyval.ival) = CMD_SELECT; ;}
     break;
 
   case 949:
-
-/* Line 1806 of yacc.c  */
 #line 6089 "gram.y"
-    { (yyval.ival) = CMD_UPDATE; }
+    { (yyval.ival) = CMD_UPDATE; ;}
     break;
 
   case 950:
-
-/* Line 1806 of yacc.c  */
 #line 6090 "gram.y"
-    { (yyval.ival) = CMD_DELETE; }
+    { (yyval.ival) = CMD_DELETE; ;}
     break;
 
   case 951:
-
-/* Line 1806 of yacc.c  */
 #line 6091 "gram.y"
-    { (yyval.ival) = CMD_INSERT; }
+    { (yyval.ival) = CMD_INSERT; ;}
     break;
 
   case 952:
-
-/* Line 1806 of yacc.c  */
 #line 6095 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 953:
-
-/* Line 1806 of yacc.c  */
 #line 6096 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 954:
-
-/* Line 1806 of yacc.c  */
 #line 6097 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 955:
-
-/* Line 1806 of yacc.c  */
 #line 6103 "gram.y"
     {
 					DropPropertyStmt *n = makeNode(DropPropertyStmt);
@@ -26436,12 +25109,10 @@
 					n->removeType = OBJECT_RULE;
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 956:
-
-/* Line 1806 of yacc.c  */
 #line 6113 "gram.y"
     {
 					DropPropertyStmt *n = makeNode(DropPropertyStmt);
@@ -26451,143 +25122,117 @@
 					n->removeType = OBJECT_RULE;
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 957:
-
-/* Line 1806 of yacc.c  */
 #line 6134 "gram.y"
     {
 					NotifyStmt *n = makeNode(NotifyStmt);
 					n->conditionname = (yyvsp[(2) - (3)].str);
 					n->payload = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 958:
-
-/* Line 1806 of yacc.c  */
 #line 6143 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 959:
-
-/* Line 1806 of yacc.c  */
 #line 6144 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 960:
-
-/* Line 1806 of yacc.c  */
 #line 6148 "gram.y"
     {
 					ListenStmt *n = makeNode(ListenStmt);
 					n->conditionname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 961:
-
-/* Line 1806 of yacc.c  */
 #line 6157 "gram.y"
     {
 					UnlistenStmt *n = makeNode(UnlistenStmt);
 					n->conditionname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 962:
-
-/* Line 1806 of yacc.c  */
 #line 6163 "gram.y"
     {
 					UnlistenStmt *n = makeNode(UnlistenStmt);
 					n->conditionname = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 963:
-
-/* Line 1806 of yacc.c  */
 #line 6182 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_ROLLBACK;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 964:
-
-/* Line 1806 of yacc.c  */
 #line 6189 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_BEGIN;
 					n->options = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 965:
-
-/* Line 1806 of yacc.c  */
 #line 6196 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_START;
 					n->options = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 966:
-
-/* Line 1806 of yacc.c  */
 #line 6203 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_COMMIT;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 967:
-
-/* Line 1806 of yacc.c  */
 #line 6210 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_COMMIT;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 968:
-
-/* Line 1806 of yacc.c  */
 #line 6217 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_ROLLBACK;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 969:
-
-/* Line 1806 of yacc.c  */
 #line 6224 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -26595,12 +25240,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(2) - (2)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 970:
-
-/* Line 1806 of yacc.c  */
 #line 6232 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -26608,12 +25251,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(3) - (3)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 971:
-
-/* Line 1806 of yacc.c  */
 #line 6240 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -26621,12 +25262,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(2) - (2)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 972:
-
-/* Line 1806 of yacc.c  */
 #line 6248 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -26634,12 +25273,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(5) - (5)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 973:
-
-/* Line 1806 of yacc.c  */
 #line 6256 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -26647,121 +25284,93 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(4) - (4)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 974:
-
-/* Line 1806 of yacc.c  */
 #line 6264 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_PREPARE;
 					n->gid = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 975:
-
-/* Line 1806 of yacc.c  */
 #line 6271 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_COMMIT_PREPARED;
 					n->gid = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 976:
-
-/* Line 1806 of yacc.c  */
 #line 6278 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_ROLLBACK_PREPARED;
 					n->gid = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 977:
-
-/* Line 1806 of yacc.c  */
 #line 6286 "gram.y"
-    {}
+    {;}
     break;
 
   case 978:
-
-/* Line 1806 of yacc.c  */
 #line 6287 "gram.y"
-    {}
+    {;}
     break;
 
   case 979:
-
-/* Line 1806 of yacc.c  */
 #line 6288 "gram.y"
-    {}
+    {;}
     break;
 
   case 980:
-
-/* Line 1806 of yacc.c  */
 #line 6293 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_isolation",
-									   makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)]))); }
+									   makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)]))); ;}
     break;
 
   case 981:
-
-/* Line 1806 of yacc.c  */
 #line 6296 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_read_only",
-									   makeIntConst(TRUE, (yylsp[(1) - (2)]))); }
+									   makeIntConst(TRUE, (yylsp[(1) - (2)]))); ;}
     break;
 
   case 982:
-
-/* Line 1806 of yacc.c  */
 #line 6299 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_read_only",
-									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); }
+									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); ;}
     break;
 
   case 983:
-
-/* Line 1806 of yacc.c  */
 #line 6306 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 984:
-
-/* Line 1806 of yacc.c  */
 #line 6308 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 985:
-
-/* Line 1806 of yacc.c  */
 #line 6310 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 987:
-
-/* Line 1806 of yacc.c  */
 #line 6316 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 988:
-
-/* Line 1806 of yacc.c  */
 #line 6330 "gram.y"
     {
 					ViewStmt *n = makeNode(ViewStmt);
@@ -26771,12 +25380,10 @@
 					n->query = (yyvsp[(7) - (8)].node);
 					n->replace = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 989:
-
-/* Line 1806 of yacc.c  */
 #line 6341 "gram.y"
     {
 					ViewStmt *n = makeNode(ViewStmt);
@@ -26786,259 +25393,203 @@
 					n->query = (yyvsp[(9) - (10)].node);
 					n->replace = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 990:
-
-/* Line 1806 of yacc.c  */
 #line 6354 "gram.y"
     {
 					ereport(ERROR,
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("WITH CHECK OPTION is not implemented")));
-				}
+				;}
     break;
 
   case 991:
-
-/* Line 1806 of yacc.c  */
 #line 6360 "gram.y"
     {
 					ereport(ERROR,
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("WITH CHECK OPTION is not implemented")));
-				}
+				;}
     break;
 
   case 992:
-
-/* Line 1806 of yacc.c  */
 #line 6366 "gram.y"
     {
 					ereport(ERROR,
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("WITH CHECK OPTION is not implemented")));
-				}
+				;}
     break;
 
   case 993:
-
-/* Line 1806 of yacc.c  */
 #line 6371 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 994:
-
-/* Line 1806 of yacc.c  */
 #line 6382 "gram.y"
     {
 					LoadStmt *n = makeNode(LoadStmt);
 					n->filename = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 995:
-
-/* Line 1806 of yacc.c  */
 #line 6398 "gram.y"
     {
 					CreatedbStmt *n = makeNode(CreatedbStmt);
 					n->dbname = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 996:
-
-/* Line 1806 of yacc.c  */
 #line 6407 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 997:
-
-/* Line 1806 of yacc.c  */
 #line 6408 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 998:
-
-/* Line 1806 of yacc.c  */
 #line 6413 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("tablespace", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 999:
-
-/* Line 1806 of yacc.c  */
 #line 6417 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("tablespace", NULL);
-				}
+				;}
     break;
 
   case 1000:
-
-/* Line 1806 of yacc.c  */
 #line 6421 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("location", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1001:
-
-/* Line 1806 of yacc.c  */
 #line 6425 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("location", NULL);
-				}
+				;}
     break;
 
   case 1002:
-
-/* Line 1806 of yacc.c  */
 #line 6429 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("template", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1003:
-
-/* Line 1806 of yacc.c  */
 #line 6433 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("template", NULL);
-				}
+				;}
     break;
 
   case 1004:
-
-/* Line 1806 of yacc.c  */
 #line 6437 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1005:
-
-/* Line 1806 of yacc.c  */
 #line 6441 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", (Node *)makeInteger((yyvsp[(3) - (3)].ival)));
-				}
+				;}
     break;
 
   case 1006:
-
-/* Line 1806 of yacc.c  */
 #line 6445 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", NULL);
-				}
+				;}
     break;
 
   case 1007:
-
-/* Line 1806 of yacc.c  */
 #line 6449 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_collate", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1008:
-
-/* Line 1806 of yacc.c  */
 #line 6453 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_collate", NULL);
-				}
+				;}
     break;
 
   case 1009:
-
-/* Line 1806 of yacc.c  */
 #line 6457 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_ctype", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1010:
-
-/* Line 1806 of yacc.c  */
 #line 6461 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_ctype", NULL);
-				}
+				;}
     break;
 
   case 1011:
-
-/* Line 1806 of yacc.c  */
 #line 6465 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[(4) - (4)].ival)));
-				}
+				;}
     break;
 
   case 1012:
-
-/* Line 1806 of yacc.c  */
 #line 6469 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("owner", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1013:
-
-/* Line 1806 of yacc.c  */
 #line 6473 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("owner", NULL);
-				}
+				;}
     break;
 
   case 1014:
-
-/* Line 1806 of yacc.c  */
 #line 6482 "gram.y"
-    {}
+    {;}
     break;
 
   case 1015:
-
-/* Line 1806 of yacc.c  */
 #line 6483 "gram.y"
-    {}
+    {;}
     break;
 
   case 1016:
-
-/* Line 1806 of yacc.c  */
 #line 6495 "gram.y"
     {
 					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
 					n->dbname = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 1017:
-
-/* Line 1806 of yacc.c  */
 #line 6502 "gram.y"
     {
 					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
@@ -27046,71 +25597,57 @@
 					n->options = list_make1(makeDefElem("tablespace",
 													(Node *)makeString((yyvsp[(6) - (6)].str))));
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 1018:
-
-/* Line 1806 of yacc.c  */
 #line 6513 "gram.y"
     {
 					AlterDatabaseSetStmt *n = makeNode(AlterDatabaseSetStmt);
 					n->dbname = (yyvsp[(3) - (4)].str);
 					n->setstmt = (yyvsp[(4) - (4)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1019:
-
-/* Line 1806 of yacc.c  */
 #line 6523 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 1020:
-
-/* Line 1806 of yacc.c  */
 #line 6524 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1021:
-
-/* Line 1806 of yacc.c  */
 #line 6529 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[(4) - (4)].ival)));
-				}
+				;}
     break;
 
   case 1022:
-
-/* Line 1806 of yacc.c  */
 #line 6543 "gram.y"
     {
 					DropdbStmt *n = makeNode(DropdbStmt);
 					n->dbname = (yyvsp[(3) - (3)].str);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1023:
-
-/* Line 1806 of yacc.c  */
 #line 6550 "gram.y"
     {
 					DropdbStmt *n = makeNode(DropdbStmt);
 					n->dbname = (yyvsp[(5) - (5)].str);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1024:
-
-/* Line 1806 of yacc.c  */
 #line 6567 "gram.y"
     {
 					CreateDomainStmt *n = makeNode(CreateDomainStmt);
@@ -27118,12 +25655,10 @@
 					n->typeName = (yyvsp[(5) - (6)].typnam);
 					n->constraints = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1025:
-
-/* Line 1806 of yacc.c  */
 #line 6579 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -27131,36 +25666,30 @@
 					n->typeName = (yyvsp[(3) - (4)].list);
 					n->def = (yyvsp[(4) - (4)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1026:
-
-/* Line 1806 of yacc.c  */
 #line 6588 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
 					n->subtype = 'N';
 					n->typeName = (yyvsp[(3) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1027:
-
-/* Line 1806 of yacc.c  */
 #line 6596 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
 					n->subtype = 'O';
 					n->typeName = (yyvsp[(3) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1028:
-
-/* Line 1806 of yacc.c  */
 #line 6604 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -27168,12 +25697,10 @@
 					n->typeName = (yyvsp[(3) - (5)].list);
 					n->def = (yyvsp[(5) - (5)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1029:
-
-/* Line 1806 of yacc.c  */
 #line 6613 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -27182,38 +25709,30 @@
 					n->name = (yyvsp[(6) - (7)].str);
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1030:
-
-/* Line 1806 of yacc.c  */
 #line 6623 "gram.y"
-    {}
+    {;}
     break;
 
   case 1031:
-
-/* Line 1806 of yacc.c  */
 #line 6624 "gram.y"
-    {}
+    {;}
     break;
 
   case 1032:
-
-/* Line 1806 of yacc.c  */
 #line 6636 "gram.y"
     {
 					AlterTSDictionaryStmt *n = makeNode(AlterTSDictionaryStmt);
 					n->dictname = (yyvsp[(5) - (6)].list);
 					n->options = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1033:
-
-/* Line 1806 of yacc.c  */
 #line 6646 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -27223,12 +25742,10 @@
 					n->override = false;
 					n->replace = false;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1034:
-
-/* Line 1806 of yacc.c  */
 #line 6656 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -27238,12 +25755,10 @@
 					n->override = true;
 					n->replace = false;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1035:
-
-/* Line 1806 of yacc.c  */
 #line 6666 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -27253,12 +25768,10 @@
 					n->override = false;
 					n->replace = true;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1036:
-
-/* Line 1806 of yacc.c  */
 #line 6676 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -27268,12 +25781,10 @@
 					n->override = false;
 					n->replace = true;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1037:
-
-/* Line 1806 of yacc.c  */
 #line 6686 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -27281,12 +25792,10 @@
 					n->tokentype = (yyvsp[(9) - (9)].list);
 					n->missing_ok = false;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1038:
-
-/* Line 1806 of yacc.c  */
 #line 6694 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -27294,12 +25803,10 @@
 					n->tokentype = (yyvsp[(11) - (11)].list);
 					n->missing_ok = true;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1039:
-
-/* Line 1806 of yacc.c  */
 #line 6716 "gram.y"
     {
 			  CreateConversionStmt *n = makeNode(CreateConversionStmt);
@@ -27309,12 +25816,10 @@
 			  n->func_name = (yyvsp[(10) - (10)].list);
 			  n->def = (yyvsp[(2) - (10)].boolean);
 			  (yyval.node) = (Node *)n;
-			}
+			;}
     break;
 
   case 1040:
-
-/* Line 1806 of yacc.c  */
 #line 6738 "gram.y"
     {
 			       ClusterStmt *n = makeNode(ClusterStmt);
@@ -27322,12 +25827,10 @@
 				   n->indexname = (yyvsp[(4) - (4)].str);
 				   n->verbose = (yyvsp[(2) - (4)].boolean);
 				   (yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1041:
-
-/* Line 1806 of yacc.c  */
 #line 6746 "gram.y"
     {
 				   ClusterStmt *n = makeNode(ClusterStmt);
@@ -27335,12 +25838,10 @@
 				   n->indexname = NULL;
 				   n->verbose = (yyvsp[(2) - (2)].boolean);
 				   (yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1042:
-
-/* Line 1806 of yacc.c  */
 #line 6755 "gram.y"
     {
 				   ClusterStmt *n = makeNode(ClusterStmt);
@@ -27348,26 +25849,20 @@
 				   n->indexname = (yyvsp[(3) - (5)].str);
 				   n->verbose = (yyvsp[(2) - (5)].boolean);
 				   (yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1043:
-
-/* Line 1806 of yacc.c  */
 #line 6765 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 1044:
-
-/* Line 1806 of yacc.c  */
 #line 6766 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1045:
-
-/* Line 1806 of yacc.c  */
 #line 6779 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -27381,12 +25876,10 @@
 					n->relation = NULL;
 					n->va_cols = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1046:
-
-/* Line 1806 of yacc.c  */
 #line 6793 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -27400,12 +25893,10 @@
 					n->relation = (yyvsp[(5) - (5)].range);
 					n->va_cols = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1047:
-
-/* Line 1806 of yacc.c  */
 #line 6807 "gram.y"
     {
 					VacuumStmt *n = (VacuumStmt *) (yyvsp[(5) - (5)].node);
@@ -27417,12 +25908,10 @@
 					n->freeze_min_age = (yyvsp[(3) - (5)].boolean) ? 0 : -1;
 					n->freeze_table_age = (yyvsp[(3) - (5)].boolean) ? 0 : -1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1048:
-
-/* Line 1806 of yacc.c  */
 #line 6819 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -27434,12 +25923,10 @@
 					n->relation = NULL;
 					n->va_cols = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1049:
-
-/* Line 1806 of yacc.c  */
 #line 6831 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -27453,54 +25940,40 @@
 					if (n->va_cols != NIL)	/* implies analyze */
 						n->options |= VACOPT_ANALYZE;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1050:
-
-/* Line 1806 of yacc.c  */
 #line 6847 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1051:
-
-/* Line 1806 of yacc.c  */
 #line 6848 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 1052:
-
-/* Line 1806 of yacc.c  */
 #line 6852 "gram.y"
-    { (yyval.ival) = VACOPT_ANALYZE; }
+    { (yyval.ival) = VACOPT_ANALYZE; ;}
     break;
 
   case 1053:
-
-/* Line 1806 of yacc.c  */
 #line 6853 "gram.y"
-    { (yyval.ival) = VACOPT_VERBOSE; }
+    { (yyval.ival) = VACOPT_VERBOSE; ;}
     break;
 
   case 1054:
-
-/* Line 1806 of yacc.c  */
 #line 6854 "gram.y"
-    { (yyval.ival) = VACOPT_FREEZE; }
+    { (yyval.ival) = VACOPT_FREEZE; ;}
     break;
 
   case 1055:
-
-/* Line 1806 of yacc.c  */
 #line 6855 "gram.y"
-    { (yyval.ival) = VACOPT_FULL; }
+    { (yyval.ival) = VACOPT_FULL; ;}
     break;
 
   case 1056:
-
-/* Line 1806 of yacc.c  */
 #line 6860 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -27512,12 +25985,10 @@
 					n->relation = NULL;
 					n->va_cols = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1057:
-
-/* Line 1806 of yacc.c  */
 #line 6872 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -27529,94 +26000,70 @@
 					n->relation = (yyvsp[(3) - (4)].range);
 					n->va_cols = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1058:
-
-/* Line 1806 of yacc.c  */
 #line 6886 "gram.y"
-    {}
+    {;}
     break;
 
   case 1059:
-
-/* Line 1806 of yacc.c  */
 #line 6887 "gram.y"
-    {}
+    {;}
     break;
 
   case 1060:
-
-/* Line 1806 of yacc.c  */
 #line 6891 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1061:
-
-/* Line 1806 of yacc.c  */
 #line 6892 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1062:
-
-/* Line 1806 of yacc.c  */
 #line 6895 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1063:
-
-/* Line 1806 of yacc.c  */
 #line 6896 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1064:
-
-/* Line 1806 of yacc.c  */
 #line 6899 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1065:
-
-/* Line 1806 of yacc.c  */
 #line 6900 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1066:
-
-/* Line 1806 of yacc.c  */
 #line 6904 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1067:
-
-/* Line 1806 of yacc.c  */
 #line 6905 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1068:
-
-/* Line 1806 of yacc.c  */
 #line 6919 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
 					n->query = (yyvsp[(2) - (2)].node);
 					n->options = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1069:
-
-/* Line 1806 of yacc.c  */
 #line 6926 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
@@ -27626,98 +26073,76 @@
 						n->options = lappend(n->options,
 											 makeDefElem("verbose", NULL));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1070:
-
-/* Line 1806 of yacc.c  */
 #line 6936 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
 					n->query = (yyvsp[(3) - (3)].node);
 					n->options = list_make1(makeDefElem("verbose", NULL));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1071:
-
-/* Line 1806 of yacc.c  */
 #line 6943 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
 					n->query = (yyvsp[(5) - (5)].node);
 					n->options = (yyvsp[(3) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1079:
-
-/* Line 1806 of yacc.c  */
 #line 6963 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 1080:
-
-/* Line 1806 of yacc.c  */
 #line 6967 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 1081:
-
-/* Line 1806 of yacc.c  */
 #line 6974 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 1082:
-
-/* Line 1806 of yacc.c  */
 #line 6980 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1083:
-
-/* Line 1806 of yacc.c  */
 #line 6981 "gram.y"
-    { (yyval.str) = "analyze"; }
+    { (yyval.str) = "analyze"; ;}
     break;
 
   case 1084:
-
-/* Line 1806 of yacc.c  */
 #line 6985 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 1085:
-
-/* Line 1806 of yacc.c  */
 #line 6986 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); }
+    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); ;}
     break;
 
   case 1086:
-
-/* Line 1806 of yacc.c  */
 #line 6987 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1087:
-
-/* Line 1806 of yacc.c  */
 #line 6998 "gram.y"
     {
 					PrepareStmt *n = makeNode(PrepareStmt);
@@ -27725,26 +26150,20 @@
 					n->argtypes = (yyvsp[(3) - (5)].list);
 					n->query = (yyvsp[(5) - (5)].node);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1088:
-
-/* Line 1806 of yacc.c  */
 #line 7007 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1089:
-
-/* Line 1806 of yacc.c  */
 #line 7008 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1094:
-
-/* Line 1806 of yacc.c  */
 #line 7026 "gram.y"
     {
 					ExecuteStmt *n = makeNode(ExecuteStmt);
@@ -27752,12 +26171,10 @@
 					n->params = (yyvsp[(3) - (3)].list);
 					n->into = NULL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1095:
-
-/* Line 1806 of yacc.c  */
 #line 7035 "gram.y"
     {
 					ExecuteStmt *n = makeNode(ExecuteStmt);
@@ -27771,128 +26188,102 @@
 								 errmsg("column name list not allowed in CREATE TABLE / AS EXECUTE")));
 					/* ... because it's not implemented, but it could be */
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1096:
-
-/* Line 1806 of yacc.c  */
 #line 7050 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1097:
-
-/* Line 1806 of yacc.c  */
 #line 7051 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1098:
-
-/* Line 1806 of yacc.c  */
 #line 7062 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = (yyvsp[(2) - (2)].str);
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1099:
-
-/* Line 1806 of yacc.c  */
 #line 7068 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = (yyvsp[(3) - (3)].str);
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1100:
-
-/* Line 1806 of yacc.c  */
 #line 7074 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = NULL;
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1101:
-
-/* Line 1806 of yacc.c  */
 #line 7080 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = NULL;
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1102:
-
-/* Line 1806 of yacc.c  */
 #line 7096 "gram.y"
     {
 					(yyvsp[(4) - (5)].istmt)->relation = (yyvsp[(3) - (5)].range);
 					(yyvsp[(4) - (5)].istmt)->returningList = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *) (yyvsp[(4) - (5)].istmt);
-				}
+				;}
     break;
 
   case 1103:
-
-/* Line 1806 of yacc.c  */
 #line 7105 "gram.y"
     {
 					(yyval.istmt) = makeNode(InsertStmt);
 					(yyval.istmt)->cols = NIL;
 					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
-				}
+				;}
     break;
 
   case 1104:
-
-/* Line 1806 of yacc.c  */
 #line 7111 "gram.y"
     {
 					(yyval.istmt) = makeNode(InsertStmt);
 					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
 					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
-				}
+				;}
     break;
 
   case 1105:
-
-/* Line 1806 of yacc.c  */
 #line 7117 "gram.y"
     {
 					(yyval.istmt) = makeNode(InsertStmt);
 					(yyval.istmt)->cols = NIL;
 					(yyval.istmt)->selectStmt = NULL;
-				}
+				;}
     break;
 
   case 1106:
-
-/* Line 1806 of yacc.c  */
 #line 7126 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1107:
-
-/* Line 1806 of yacc.c  */
 #line 7128 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1108:
-
-/* Line 1806 of yacc.c  */
 #line 7133 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -27900,26 +26291,20 @@
 					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.target)->val = NULL;
 					(yyval.target)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1109:
-
-/* Line 1806 of yacc.c  */
 #line 7143 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1110:
-
-/* Line 1806 of yacc.c  */
 #line 7144 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1111:
-
-/* Line 1806 of yacc.c  */
 #line 7157 "gram.y"
     {
 					DeleteStmt *n = makeNode(DeleteStmt);
@@ -27928,26 +26313,20 @@
 					n->whereClause = (yyvsp[(5) - (6)].node);
 					n->returningList = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1112:
-
-/* Line 1806 of yacc.c  */
 #line 7168 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1113:
-
-/* Line 1806 of yacc.c  */
 #line 7169 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1114:
-
-/* Line 1806 of yacc.c  */
 #line 7181 "gram.y"
     {
 					LockStmt *n = makeNode(LockStmt);
@@ -27956,96 +26335,70 @@
 					n->mode = (yyvsp[(4) - (5)].ival);
 					n->nowait = (yyvsp[(5) - (5)].boolean);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1115:
-
-/* Line 1806 of yacc.c  */
 #line 7191 "gram.y"
-    { (yyval.ival) = (yyvsp[(2) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(2) - (3)].ival); ;}
     break;
 
   case 1116:
-
-/* Line 1806 of yacc.c  */
 #line 7192 "gram.y"
-    { (yyval.ival) = AccessExclusiveLock; }
+    { (yyval.ival) = AccessExclusiveLock; ;}
     break;
 
   case 1117:
-
-/* Line 1806 of yacc.c  */
 #line 7195 "gram.y"
-    { (yyval.ival) = AccessShareLock; }
+    { (yyval.ival) = AccessShareLock; ;}
     break;
 
   case 1118:
-
-/* Line 1806 of yacc.c  */
 #line 7196 "gram.y"
-    { (yyval.ival) = RowShareLock; }
+    { (yyval.ival) = RowShareLock; ;}
     break;
 
   case 1119:
-
-/* Line 1806 of yacc.c  */
 #line 7197 "gram.y"
-    { (yyval.ival) = RowExclusiveLock; }
+    { (yyval.ival) = RowExclusiveLock; ;}
     break;
 
   case 1120:
-
-/* Line 1806 of yacc.c  */
 #line 7198 "gram.y"
-    { (yyval.ival) = ShareUpdateExclusiveLock; }
+    { (yyval.ival) = ShareUpdateExclusiveLock; ;}
     break;
 
   case 1121:
-
-/* Line 1806 of yacc.c  */
 #line 7199 "gram.y"
-    { (yyval.ival) = ShareLock; }
+    { (yyval.ival) = ShareLock; ;}
     break;
 
   case 1122:
-
-/* Line 1806 of yacc.c  */
 #line 7200 "gram.y"
-    { (yyval.ival) = ShareRowExclusiveLock; }
+    { (yyval.ival) = ShareRowExclusiveLock; ;}
     break;
 
   case 1123:
-
-/* Line 1806 of yacc.c  */
 #line 7201 "gram.y"
-    { (yyval.ival) = ExclusiveLock; }
+    { (yyval.ival) = ExclusiveLock; ;}
     break;
 
   case 1124:
-
-/* Line 1806 of yacc.c  */
 #line 7202 "gram.y"
-    { (yyval.ival) = AccessExclusiveLock; }
+    { (yyval.ival) = AccessExclusiveLock; ;}
     break;
 
   case 1125:
-
-/* Line 1806 of yacc.c  */
 #line 7205 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1126:
-
-/* Line 1806 of yacc.c  */
 #line 7206 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1127:
-
-/* Line 1806 of yacc.c  */
 #line 7222 "gram.y"
     {
 					UpdateStmt *n = makeNode(UpdateStmt);
@@ -28055,50 +26408,38 @@
 					n->whereClause = (yyvsp[(6) - (7)].node);
 					n->returningList = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1128:
-
-/* Line 1806 of yacc.c  */
 #line 7234 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1129:
-
-/* Line 1806 of yacc.c  */
 #line 7235 "gram.y"
-    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 1130:
-
-/* Line 1806 of yacc.c  */
 #line 7239 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1131:
-
-/* Line 1806 of yacc.c  */
 #line 7240 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1132:
-
-/* Line 1806 of yacc.c  */
 #line 7245 "gram.y"
     {
 					(yyval.target) = (yyvsp[(1) - (3)].target);
 					(yyval.target)->val = (Node *) (yyvsp[(3) - (3)].node);
-				}
+				;}
     break;
 
   case 1133:
-
-/* Line 1806 of yacc.c  */
 #line 7253 "gram.y"
     {
 					ListCell *col_cell;
@@ -28123,12 +26464,10 @@
 					}
 
 					(yyval.list) = (yyvsp[(2) - (5)].list);
-				}
+				;}
     break;
 
   case 1134:
-
-/* Line 1806 of yacc.c  */
 #line 7281 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -28136,26 +26475,20 @@
 					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.target)->val = NULL;	/* upper production sets this */
 					(yyval.target)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1135:
-
-/* Line 1806 of yacc.c  */
 #line 7291 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1136:
-
-/* Line 1806 of yacc.c  */
 #line 7292 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1137:
-
-/* Line 1806 of yacc.c  */
 #line 7303 "gram.y"
     {
 					DeclareCursorStmt *n = makeNode(DeclareCursorStmt);
@@ -28164,108 +26497,80 @@
 					n->options = (yyvsp[(3) - (7)].ival) | (yyvsp[(5) - (7)].ival) | CURSOR_OPT_FAST_PLAN;
 					n->query = (yyvsp[(7) - (7)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1138:
-
-/* Line 1806 of yacc.c  */
 #line 7313 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1139:
-
-/* Line 1806 of yacc.c  */
 #line 7316 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1140:
-
-/* Line 1806 of yacc.c  */
 #line 7317 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | CURSOR_OPT_NO_SCROLL; }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | CURSOR_OPT_NO_SCROLL; ;}
     break;
 
   case 1141:
-
-/* Line 1806 of yacc.c  */
 #line 7318 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_SCROLL; }
+    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_SCROLL; ;}
     break;
 
   case 1142:
-
-/* Line 1806 of yacc.c  */
 #line 7319 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_BINARY; }
+    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_BINARY; ;}
     break;
 
   case 1143:
-
-/* Line 1806 of yacc.c  */
 #line 7320 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_INSENSITIVE; }
+    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_INSENSITIVE; ;}
     break;
 
   case 1144:
-
-/* Line 1806 of yacc.c  */
 #line 7323 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1145:
-
-/* Line 1806 of yacc.c  */
 #line 7324 "gram.y"
-    { (yyval.ival) = CURSOR_OPT_HOLD; }
+    { (yyval.ival) = CURSOR_OPT_HOLD; ;}
     break;
 
   case 1146:
-
-/* Line 1806 of yacc.c  */
 #line 7325 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1149:
-
-/* Line 1806 of yacc.c  */
 #line 7378 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1150:
-
-/* Line 1806 of yacc.c  */
 #line 7379 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1151:
-
-/* Line 1806 of yacc.c  */
 #line 7393 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1152:
-
-/* Line 1806 of yacc.c  */
 #line 7395 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
 										NULL, NULL, NULL,
 										yyscanner);
 					(yyval.node) = (yyvsp[(1) - (2)].node);
-				}
+				;}
     break;
 
   case 1153:
-
-/* Line 1806 of yacc.c  */
 #line 7402 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
@@ -28273,12 +26578,10 @@
 										NULL,
 										yyscanner);
 					(yyval.node) = (yyvsp[(1) - (4)].node);
-				}
+				;}
     break;
 
   case 1154:
-
-/* Line 1806 of yacc.c  */
 #line 7410 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
@@ -28286,12 +26589,10 @@
 										NULL,
 										yyscanner);
 					(yyval.node) = (yyvsp[(1) - (4)].node);
-				}
+				;}
     break;
 
   case 1155:
-
-/* Line 1806 of yacc.c  */
 #line 7418 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
@@ -28299,12 +26600,10 @@
 										(yyvsp[(1) - (2)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (2)].node);
-				}
+				;}
     break;
 
   case 1156:
-
-/* Line 1806 of yacc.c  */
 #line 7426 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
@@ -28312,12 +26611,10 @@
 										(yyvsp[(1) - (3)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (3)].node);
-				}
+				;}
     break;
 
   case 1157:
-
-/* Line 1806 of yacc.c  */
 #line 7434 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
@@ -28325,12 +26622,10 @@
 										(yyvsp[(1) - (5)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (5)].node);
-				}
+				;}
     break;
 
   case 1158:
-
-/* Line 1806 of yacc.c  */
 #line 7442 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
@@ -28338,26 +26633,20 @@
 										(yyvsp[(1) - (5)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (5)].node);
-				}
+				;}
     break;
 
   case 1159:
-
-/* Line 1806 of yacc.c  */
 #line 7452 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1160:
-
-/* Line 1806 of yacc.c  */
 #line 7453 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1161:
-
-/* Line 1806 of yacc.c  */
 #line 7483 "gram.y"
     {
 					SelectStmt *n = makeNode(SelectStmt);
@@ -28370,19 +26659,15 @@
 					n->havingClause = (yyvsp[(8) - (9)].node);
 					n->windowClause = (yyvsp[(9) - (9)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1162:
-
-/* Line 1806 of yacc.c  */
 #line 7495 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1163:
-
-/* Line 1806 of yacc.c  */
 #line 7497 "gram.y"
     {
 					/* same as SELECT * FROM relation_expr */
@@ -28401,77 +26686,61 @@
 					n->targetList = list_make1(rt);
 					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1164:
-
-/* Line 1806 of yacc.c  */
 #line 7516 "gram.y"
     {
 					(yyval.node) = makeSetOp(SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1165:
-
-/* Line 1806 of yacc.c  */
 #line 7520 "gram.y"
     {
 					(yyval.node) = makeSetOp(SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1166:
-
-/* Line 1806 of yacc.c  */
 #line 7524 "gram.y"
     {
 					(yyval.node) = makeSetOp(SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1167:
-
-/* Line 1806 of yacc.c  */
 #line 7539 "gram.y"
     {
 				(yyval.with) = makeNode(WithClause);
 				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
 				(yyval.with)->recursive = false;
 				(yyval.with)->location = (yylsp[(1) - (2)]);
-			}
+			;}
     break;
 
   case 1168:
-
-/* Line 1806 of yacc.c  */
 #line 7546 "gram.y"
     {
 				(yyval.with) = makeNode(WithClause);
 				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
 				(yyval.with)->recursive = true;
 				(yyval.with)->location = (yylsp[(1) - (3)]);
-			}
+			;}
     break;
 
   case 1169:
-
-/* Line 1806 of yacc.c  */
 #line 7555 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1170:
-
-/* Line 1806 of yacc.c  */
 #line 7556 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1171:
-
-/* Line 1806 of yacc.c  */
 #line 7560 "gram.y"
     {
 				CommonTableExpr *n = makeNode(CommonTableExpr);
@@ -28480,12 +26749,10 @@
 				n->ctequery = (yyvsp[(4) - (4)].node);
 				n->location = (yylsp[(1) - (4)]);
 				(yyval.node) = (Node *) n;
-			}
+			;}
     break;
 
   case 1172:
-
-/* Line 1806 of yacc.c  */
 #line 7572 "gram.y"
     {
 					(yyval.into) = makeNode(IntoClause);
@@ -28494,197 +26761,149 @@
 					(yyval.into)->options = NIL;
 					(yyval.into)->onCommit = ONCOMMIT_NOOP;
 					(yyval.into)->tableSpaceName = NULL;
-				}
+				;}
     break;
 
   case 1173:
-
-/* Line 1806 of yacc.c  */
 #line 7581 "gram.y"
-    { (yyval.into) = NULL; }
+    { (yyval.into) = NULL; ;}
     break;
 
   case 1174:
-
-/* Line 1806 of yacc.c  */
 #line 7590 "gram.y"
     {
 					(yyval.range) = (yyvsp[(3) - (3)].range);
 					(yyval.range)->istemp = true;
-				}
+				;}
     break;
 
   case 1175:
-
-/* Line 1806 of yacc.c  */
 #line 7595 "gram.y"
     {
 					(yyval.range) = (yyvsp[(3) - (3)].range);
 					(yyval.range)->istemp = true;
-				}
+				;}
     break;
 
   case 1176:
-
-/* Line 1806 of yacc.c  */
 #line 7600 "gram.y"
     {
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->istemp = true;
-				}
+				;}
     break;
 
   case 1177:
-
-/* Line 1806 of yacc.c  */
 #line 7605 "gram.y"
     {
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->istemp = true;
-				}
+				;}
     break;
 
   case 1178:
-
-/* Line 1806 of yacc.c  */
 #line 7610 "gram.y"
     {
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->istemp = true;
-				}
+				;}
     break;
 
   case 1179:
-
-/* Line 1806 of yacc.c  */
 #line 7615 "gram.y"
     {
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->istemp = true;
-				}
+				;}
     break;
 
   case 1180:
-
-/* Line 1806 of yacc.c  */
 #line 7620 "gram.y"
     {
 					(yyval.range) = (yyvsp[(2) - (2)].range);
 					(yyval.range)->istemp = false;
-				}
+				;}
     break;
 
   case 1181:
-
-/* Line 1806 of yacc.c  */
 #line 7625 "gram.y"
     {
 					(yyval.range) = (yyvsp[(1) - (1)].range);
 					(yyval.range)->istemp = false;
-				}
+				;}
     break;
 
   case 1182:
-
-/* Line 1806 of yacc.c  */
 #line 7631 "gram.y"
-    {}
+    {;}
     break;
 
   case 1183:
-
-/* Line 1806 of yacc.c  */
 #line 7632 "gram.y"
-    {}
+    {;}
     break;
 
   case 1184:
-
-/* Line 1806 of yacc.c  */
 #line 7635 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1185:
-
-/* Line 1806 of yacc.c  */
 #line 7636 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1186:
-
-/* Line 1806 of yacc.c  */
 #line 7637 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1187:
-
-/* Line 1806 of yacc.c  */
 #line 7644 "gram.y"
-    { (yyval.list) = list_make1(NIL); }
+    { (yyval.list) = list_make1(NIL); ;}
     break;
 
   case 1188:
-
-/* Line 1806 of yacc.c  */
 #line 7645 "gram.y"
-    { (yyval.list) = (yyvsp[(4) - (5)].list); }
+    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
     break;
 
   case 1189:
-
-/* Line 1806 of yacc.c  */
 #line 7646 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1190:
-
-/* Line 1806 of yacc.c  */
 #line 7647 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1191:
-
-/* Line 1806 of yacc.c  */
 #line 7651 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list);}
+    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
     break;
 
   case 1192:
-
-/* Line 1806 of yacc.c  */
 #line 7652 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1193:
-
-/* Line 1806 of yacc.c  */
 #line 7656 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (3)].list); }
+    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 1194:
-
-/* Line 1806 of yacc.c  */
 #line 7660 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
     break;
 
   case 1195:
-
-/* Line 1806 of yacc.c  */
 #line 7661 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
     break;
 
   case 1196:
-
-/* Line 1806 of yacc.c  */
 #line 7665 "gram.y"
     {
 					(yyval.sortby) = makeNode(SortBy);
@@ -28693,12 +26912,10 @@
 					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].ival);
 					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
 					(yyval.sortby)->location = (yylsp[(3) - (4)]);
-				}
+				;}
     break;
 
   case 1197:
-
-/* Line 1806 of yacc.c  */
 #line 7674 "gram.y"
     {
 					(yyval.sortby) = makeNode(SortBy);
@@ -28707,61 +26924,45 @@
 					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].ival);
 					(yyval.sortby)->useOp = NIL;
 					(yyval.sortby)->location = -1;		/* no operator */
-				}
+				;}
     break;
 
   case 1198:
-
-/* Line 1806 of yacc.c  */
 #line 7686 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); }
+    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
     break;
 
   case 1199:
-
-/* Line 1806 of yacc.c  */
 #line 7687 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1200:
-
-/* Line 1806 of yacc.c  */
 #line 7688 "gram.y"
-    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1201:
-
-/* Line 1806 of yacc.c  */
 #line 7689 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); }
+    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
     break;
 
   case 1202:
-
-/* Line 1806 of yacc.c  */
 #line 7693 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1203:
-
-/* Line 1806 of yacc.c  */
 #line 7694 "gram.y"
-    { (yyval.list) = list_make2(NULL,NULL); }
+    { (yyval.list) = list_make2(NULL,NULL); ;}
     break;
 
   case 1204:
-
-/* Line 1806 of yacc.c  */
 #line 7699 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1205:
-
-/* Line 1806 of yacc.c  */
 #line 7701 "gram.y"
     {
 					/* Disabled because it was too confusing, bjm 2002-02-18 */
@@ -28770,183 +26971,133 @@
 							 errmsg("LIMIT #,# syntax is not supported"),
 							 errhint("Use separate LIMIT and OFFSET clauses."),
 							 parser_errposition((yylsp[(1) - (4)]))));
-				}
+				;}
     break;
 
   case 1206:
-
-/* Line 1806 of yacc.c  */
 #line 7711 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (5)].node); }
+    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
     break;
 
   case 1207:
-
-/* Line 1806 of yacc.c  */
 #line 7716 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1208:
-
-/* Line 1806 of yacc.c  */
 #line 7719 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1209:
-
-/* Line 1806 of yacc.c  */
 #line 7723 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1210:
-
-/* Line 1806 of yacc.c  */
 #line 7725 "gram.y"
     {
 					/* LIMIT ALL is represented as a NULL constant */
 					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1211:
-
-/* Line 1806 of yacc.c  */
 #line 7732 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1212:
-
-/* Line 1806 of yacc.c  */
 #line 7742 "gram.y"
-    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)])); ;}
     break;
 
   case 1213:
-
-/* Line 1806 of yacc.c  */
 #line 7743 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1214:
-
-/* Line 1806 of yacc.c  */
 #line 7744 "gram.y"
-    { (yyval.node) = makeIntConst(1, -1); }
+    { (yyval.node) = makeIntConst(1, -1); ;}
     break;
 
   case 1215:
-
-/* Line 1806 of yacc.c  */
 #line 7752 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1216:
-
-/* Line 1806 of yacc.c  */
 #line 7756 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1217:
-
-/* Line 1806 of yacc.c  */
 #line 7757 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1218:
-
-/* Line 1806 of yacc.c  */
 #line 7760 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1219:
-
-/* Line 1806 of yacc.c  */
 #line 7761 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1220:
-
-/* Line 1806 of yacc.c  */
 #line 7766 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (3)].list); }
+    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 1221:
-
-/* Line 1806 of yacc.c  */
 #line 7767 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1222:
-
-/* Line 1806 of yacc.c  */
 #line 7771 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1223:
-
-/* Line 1806 of yacc.c  */
 #line 7772 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1224:
-
-/* Line 1806 of yacc.c  */
 #line 7776 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1225:
-
-/* Line 1806 of yacc.c  */
 #line 7777 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1226:
-
-/* Line 1806 of yacc.c  */
 #line 7781 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1227:
-
-/* Line 1806 of yacc.c  */
 #line 7782 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1228:
-
-/* Line 1806 of yacc.c  */
 #line 7786 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1229:
-
-/* Line 1806 of yacc.c  */
 #line 7787 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1230:
-
-/* Line 1806 of yacc.c  */
 #line 7792 "gram.y"
     {
 					LockingClause *n = makeNode(LockingClause);
@@ -28954,12 +27105,10 @@
 					n->forUpdate = TRUE;
 					n->noWait = (yyvsp[(4) - (4)].boolean);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1231:
-
-/* Line 1806 of yacc.c  */
 #line 7800 "gram.y"
     {
 					LockingClause *n = makeNode(LockingClause);
@@ -28967,107 +27116,83 @@
 					n->forUpdate = FALSE;
 					n->noWait = (yyvsp[(4) - (4)].boolean);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1232:
-
-/* Line 1806 of yacc.c  */
 #line 7810 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1233:
-
-/* Line 1806 of yacc.c  */
 #line 7811 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1234:
-
-/* Line 1806 of yacc.c  */
 #line 7817 "gram.y"
     {
 					SelectStmt *n = makeNode(SelectStmt);
 					n->valuesLists = list_make1((yyvsp[(2) - (2)].list));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1235:
-
-/* Line 1806 of yacc.c  */
 #line 7823 "gram.y"
     {
 					SelectStmt *n = (SelectStmt *) (yyvsp[(1) - (3)].node);
 					n->valuesLists = lappend(n->valuesLists, (yyvsp[(3) - (3)].list));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1236:
-
-/* Line 1806 of yacc.c  */
 #line 7840 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1237:
-
-/* Line 1806 of yacc.c  */
 #line 7841 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1238:
-
-/* Line 1806 of yacc.c  */
 #line 7845 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1239:
-
-/* Line 1806 of yacc.c  */
 #line 7846 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1240:
-
-/* Line 1806 of yacc.c  */
 #line 7857 "gram.y"
     {
 					(yyval.node) = (Node *) (yyvsp[(1) - (1)].range);
-				}
+				;}
     break;
 
   case 1241:
-
-/* Line 1806 of yacc.c  */
 #line 7861 "gram.y"
     {
 					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
 					(yyval.node) = (Node *) (yyvsp[(1) - (2)].range);
-				}
+				;}
     break;
 
   case 1242:
-
-/* Line 1806 of yacc.c  */
 #line 7866 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
 					n->funccallnode = (yyvsp[(1) - (1)].node);
 					n->coldeflist = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1243:
-
-/* Line 1806 of yacc.c  */
 #line 7873 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
@@ -29075,24 +27200,20 @@
 					n->alias = (yyvsp[(2) - (2)].alias);
 					n->coldeflist = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1244:
-
-/* Line 1806 of yacc.c  */
 #line 7881 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
 					n->funccallnode = (yyvsp[(1) - (5)].node);
 					n->coldeflist = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1245:
-
-/* Line 1806 of yacc.c  */
 #line 7888 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
@@ -29102,12 +27223,10 @@
 					n->alias = a;
 					n->coldeflist = (yyvsp[(5) - (6)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1246:
-
-/* Line 1806 of yacc.c  */
 #line 7898 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
@@ -29117,12 +27236,10 @@
 					n->alias = a;
 					n->coldeflist = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1247:
-
-/* Line 1806 of yacc.c  */
 #line 7908 "gram.y"
     {
 					/*
@@ -29150,52 +27267,42 @@
 								 errhint("For example, FROM (SELECT ...) [AS] foo."),
 								 parser_errposition((yylsp[(1) - (1)]))));
 					(yyval.node) = NULL;
-				}
+				;}
     break;
 
   case 1248:
-
-/* Line 1806 of yacc.c  */
 #line 7936 "gram.y"
     {
 					RangeSubselect *n = makeNode(RangeSubselect);
 					n->subquery = (yyvsp[(1) - (2)].node);
 					n->alias = (yyvsp[(2) - (2)].alias);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1249:
-
-/* Line 1806 of yacc.c  */
 #line 7943 "gram.y"
     {
 					(yyval.node) = (Node *) (yyvsp[(1) - (1)].jexpr);
-				}
+				;}
     break;
 
   case 1250:
-
-/* Line 1806 of yacc.c  */
 #line 7947 "gram.y"
     {
 					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
 					(yyval.node) = (Node *) (yyvsp[(2) - (4)].jexpr);
-				}
+				;}
     break;
 
   case 1251:
-
-/* Line 1806 of yacc.c  */
 #line 7973 "gram.y"
     {
 					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
-				}
+				;}
     break;
 
   case 1252:
-
-/* Line 1806 of yacc.c  */
 #line 7977 "gram.y"
     {
 					/* CROSS JOIN is same as unqualified inner join */
@@ -29207,12 +27314,10 @@
 					n->usingClause = NIL;
 					n->quals = NULL;
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1253:
-
-/* Line 1806 of yacc.c  */
 #line 7989 "gram.y"
     {
 					JoinExpr *n = makeNode(JoinExpr);
@@ -29225,12 +27330,10 @@
 					else
 						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1254:
-
-/* Line 1806 of yacc.c  */
 #line 8002 "gram.y"
     {
 					/* letting join_type reduce to empty doesn't work */
@@ -29244,12 +27347,10 @@
 					else
 						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1255:
-
-/* Line 1806 of yacc.c  */
 #line 8016 "gram.y"
     {
 					JoinExpr *n = makeNode(JoinExpr);
@@ -29260,12 +27361,10 @@
 					n->usingClause = NIL; /* figure out which columns later... */
 					n->quals = NULL; /* fill later */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1256:
-
-/* Line 1806 of yacc.c  */
 #line 8027 "gram.y"
     {
 					/* letting join_type reduce to empty doesn't work */
@@ -29277,233 +27376,181 @@
 					n->usingClause = NIL; /* figure out which columns later... */
 					n->quals = NULL; /* fill later */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1257:
-
-/* Line 1806 of yacc.c  */
 #line 8042 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
 					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
-				}
+				;}
     break;
 
   case 1258:
-
-/* Line 1806 of yacc.c  */
 #line 8048 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
-				}
+				;}
     break;
 
   case 1259:
-
-/* Line 1806 of yacc.c  */
 #line 8053 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
 					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
-				}
+				;}
     break;
 
   case 1260:
-
-/* Line 1806 of yacc.c  */
 #line 8059 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
-				}
+				;}
     break;
 
   case 1261:
-
-/* Line 1806 of yacc.c  */
 #line 8065 "gram.y"
-    { (yyval.jtype) = JOIN_FULL; }
+    { (yyval.jtype) = JOIN_FULL; ;}
     break;
 
   case 1262:
-
-/* Line 1806 of yacc.c  */
 #line 8066 "gram.y"
-    { (yyval.jtype) = JOIN_LEFT; }
+    { (yyval.jtype) = JOIN_LEFT; ;}
     break;
 
   case 1263:
-
-/* Line 1806 of yacc.c  */
 #line 8067 "gram.y"
-    { (yyval.jtype) = JOIN_RIGHT; }
+    { (yyval.jtype) = JOIN_RIGHT; ;}
     break;
 
   case 1264:
-
-/* Line 1806 of yacc.c  */
 #line 8068 "gram.y"
-    { (yyval.jtype) = JOIN_INNER; }
+    { (yyval.jtype) = JOIN_INNER; ;}
     break;
 
   case 1265:
-
-/* Line 1806 of yacc.c  */
 #line 8072 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1266:
-
-/* Line 1806 of yacc.c  */
 #line 8073 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1267:
-
-/* Line 1806 of yacc.c  */
 #line 8085 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(3) - (4)].list); }
+    { (yyval.node) = (Node *) (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1268:
-
-/* Line 1806 of yacc.c  */
 #line 8086 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1269:
-
-/* Line 1806 of yacc.c  */
 #line 8092 "gram.y"
     {
 					/* default inheritance */
 					(yyval.range) = (yyvsp[(1) - (1)].range);
 					(yyval.range)->inhOpt = INH_DEFAULT;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1270:
-
-/* Line 1806 of yacc.c  */
 #line 8099 "gram.y"
     {
 					/* inheritance query */
 					(yyval.range) = (yyvsp[(1) - (2)].range);
 					(yyval.range)->inhOpt = INH_YES;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1271:
-
-/* Line 1806 of yacc.c  */
 #line 8106 "gram.y"
     {
 					/* no inheritance */
 					(yyval.range) = (yyvsp[(2) - (2)].range);
 					(yyval.range)->inhOpt = INH_NO;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1272:
-
-/* Line 1806 of yacc.c  */
 #line 8113 "gram.y"
     {
 					/* no inheritance, SQL99-style syntax */
 					(yyval.range) = (yyvsp[(3) - (4)].range);
 					(yyval.range)->inhOpt = INH_NO;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1273:
-
-/* Line 1806 of yacc.c  */
 #line 8123 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
     break;
 
   case 1274:
-
-/* Line 1806 of yacc.c  */
 #line 8124 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
     break;
 
   case 1275:
-
-/* Line 1806 of yacc.c  */
 #line 8138 "gram.y"
     {
 					(yyval.range) = (yyvsp[(1) - (1)].range);
-				}
+				;}
     break;
 
   case 1276:
-
-/* Line 1806 of yacc.c  */
 #line 8142 "gram.y"
     {
 					Alias *alias = makeNode(Alias);
 					alias->aliasname = (yyvsp[(2) - (2)].str);
 					(yyvsp[(1) - (2)].range)->alias = alias;
 					(yyval.range) = (yyvsp[(1) - (2)].range);
-				}
+				;}
     break;
 
   case 1277:
-
-/* Line 1806 of yacc.c  */
 #line 8149 "gram.y"
     {
 					Alias *alias = makeNode(Alias);
 					alias->aliasname = (yyvsp[(3) - (3)].str);
 					(yyvsp[(1) - (3)].range)->alias = alias;
 					(yyval.range) = (yyvsp[(1) - (3)].range);
-				}
+				;}
     break;
 
   case 1278:
-
-/* Line 1806 of yacc.c  */
 #line 8158 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1279:
-
-/* Line 1806 of yacc.c  */
 #line 8163 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1280:
-
-/* Line 1806 of yacc.c  */
 #line 8164 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1281:
-
-/* Line 1806 of yacc.c  */
 #line 8169 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1282:
-
-/* Line 1806 of yacc.c  */
 #line 8171 "gram.y"
     {
 					CurrentOfExpr *n = makeNode(CurrentOfExpr);
@@ -29511,37 +27558,29 @@
 					n->cursor_name = (yyvsp[(4) - (4)].str);
 					n->cursor_param = 0;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1283:
-
-/* Line 1806 of yacc.c  */
 #line 8178 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1284:
-
-/* Line 1806 of yacc.c  */
 #line 8184 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 1285:
-
-/* Line 1806 of yacc.c  */
 #line 8188 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1286:
-
-/* Line 1806 of yacc.c  */
 #line 8194 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -29550,141 +27589,109 @@
 					n->constraints = NIL;
 					n->is_local = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1287:
-
-/* Line 1806 of yacc.c  */
 #line 8215 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
 					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
-				}
+				;}
     break;
 
   case 1288:
-
-/* Line 1806 of yacc.c  */
 #line 8220 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
 					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
 					(yyval.typnam)->setof = TRUE;
-				}
+				;}
     break;
 
   case 1289:
-
-/* Line 1806 of yacc.c  */
 #line 8227 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
-				}
+				;}
     break;
 
   case 1290:
-
-/* Line 1806 of yacc.c  */
 #line 8232 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
 					(yyval.typnam)->setof = TRUE;
-				}
+				;}
     break;
 
   case 1291:
-
-/* Line 1806 of yacc.c  */
 #line 8238 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
-				}
+				;}
     break;
 
   case 1292:
-
-/* Line 1806 of yacc.c  */
 #line 8243 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
 					(yyval.typnam)->setof = TRUE;
-				}
+				;}
     break;
 
   case 1293:
-
-/* Line 1806 of yacc.c  */
 #line 8252 "gram.y"
-    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); }
+    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
     break;
 
   case 1294:
-
-/* Line 1806 of yacc.c  */
 #line 8254 "gram.y"
-    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); }
+    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
     break;
 
   case 1295:
-
-/* Line 1806 of yacc.c  */
 #line 8256 "gram.y"
-    {  (yyval.list) = NIL; }
+    {  (yyval.list) = NIL; ;}
     break;
 
   case 1296:
-
-/* Line 1806 of yacc.c  */
 #line 8260 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1297:
-
-/* Line 1806 of yacc.c  */
 #line 8261 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1298:
-
-/* Line 1806 of yacc.c  */
 #line 8262 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1299:
-
-/* Line 1806 of yacc.c  */
 #line 8263 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1300:
-
-/* Line 1806 of yacc.c  */
 #line 8264 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1301:
-
-/* Line 1806 of yacc.c  */
 #line 8266 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
-				}
+				;}
     break;
 
   case 1302:
-
-/* Line 1806 of yacc.c  */
 #line 8271 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
@@ -29700,189 +27707,149 @@
 					else
 						(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 												 makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
-				}
+				;}
     break;
 
   case 1303:
-
-/* Line 1806 of yacc.c  */
 #line 8300 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1304:
-
-/* Line 1806 of yacc.c  */
 #line 8301 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1305:
-
-/* Line 1806 of yacc.c  */
 #line 8302 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1306:
-
-/* Line 1806 of yacc.c  */
 #line 8303 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1307:
-
-/* Line 1806 of yacc.c  */
 #line 8315 "gram.y"
     {
 					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1308:
-
-/* Line 1806 of yacc.c  */
 #line 8321 "gram.y"
     {
 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
 					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (3)]);
-				}
+				;}
     break;
 
   case 1309:
-
-/* Line 1806 of yacc.c  */
 #line 8328 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1310:
-
-/* Line 1806 of yacc.c  */
 #line 8329 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1311:
-
-/* Line 1806 of yacc.c  */
 #line 8336 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int4");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1312:
-
-/* Line 1806 of yacc.c  */
 #line 8341 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int4");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1313:
-
-/* Line 1806 of yacc.c  */
 #line 8346 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int2");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1314:
-
-/* Line 1806 of yacc.c  */
 #line 8351 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int8");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1315:
-
-/* Line 1806 of yacc.c  */
 #line 8356 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("float4");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1316:
-
-/* Line 1806 of yacc.c  */
 #line 8361 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1317:
-
-/* Line 1806 of yacc.c  */
 #line 8366 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("float8");
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1318:
-
-/* Line 1806 of yacc.c  */
 #line 8371 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("numeric");
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1319:
-
-/* Line 1806 of yacc.c  */
 #line 8377 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("numeric");
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1320:
-
-/* Line 1806 of yacc.c  */
 #line 8383 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("numeric");
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1321:
-
-/* Line 1806 of yacc.c  */
 #line 8389 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("bool");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1322:
-
-/* Line 1806 of yacc.c  */
 #line 8396 "gram.y"
     {
 					/*
@@ -29903,58 +27870,46 @@
 								(errcode(ERRCODE_INVALID_PARAMETER_VALUE),
 								 errmsg("precision for type float must be less than 54 bits"),
 								 parser_errposition((yylsp[(2) - (3)]))));
-				}
+				;}
     break;
 
   case 1323:
-
-/* Line 1806 of yacc.c  */
 #line 8417 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("float8");
-				}
+				;}
     break;
 
   case 1324:
-
-/* Line 1806 of yacc.c  */
 #line 8427 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1325:
-
-/* Line 1806 of yacc.c  */
 #line 8431 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1326:
-
-/* Line 1806 of yacc.c  */
 #line 8439 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1327:
-
-/* Line 1806 of yacc.c  */
 #line 8443 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
 					(yyval.typnam)->typmods = NIL;
-				}
+				;}
     break;
 
   case 1328:
-
-/* Line 1806 of yacc.c  */
 #line 8451 "gram.y"
     {
 					char *typname;
@@ -29963,12 +27918,10 @@
 					(yyval.typnam) = SystemTypeName(typname);
 					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1329:
-
-/* Line 1806 of yacc.c  */
 #line 8463 "gram.y"
     {
 					/* bit defaults to bit(1), varbit to no limit */
@@ -29982,39 +27935,31 @@
 						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
 					}
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1330:
-
-/* Line 1806 of yacc.c  */
 #line 8484 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1331:
-
-/* Line 1806 of yacc.c  */
 #line 8488 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1332:
-
-/* Line 1806 of yacc.c  */
 #line 8494 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1333:
-
-/* Line 1806 of yacc.c  */
 #line 8498 "gram.y"
     {
 					/* Length was not specified so allow to be unrestricted.
@@ -30025,12 +27970,10 @@
 					 */
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
 					(yyval.typnam)->typmods = NIL;
-				}
+				;}
     break;
 
   case 1334:
-
-/* Line 1806 of yacc.c  */
 #line 8511 "gram.y"
     {
 					if (((yyvsp[(5) - (5)].str) != NULL) && (strcmp((yyvsp[(5) - (5)].str), "sql_text") != 0))
@@ -30047,12 +27990,10 @@
 					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (5)].str));
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1335:
-
-/* Line 1806 of yacc.c  */
 #line 8530 "gram.y"
     {
 					if (((yyvsp[(2) - (2)].str) != NULL) && (strcmp((yyvsp[(2) - (2)].str), "sql_text") != 0))
@@ -30073,82 +28014,60 @@
 						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
 
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1336:
-
-/* Line 1806 of yacc.c  */
 #line 8553 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1337:
-
-/* Line 1806 of yacc.c  */
 #line 8555 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1338:
-
-/* Line 1806 of yacc.c  */
 #line 8557 "gram.y"
-    { (yyval.str) = "varchar"; }
+    { (yyval.str) = "varchar"; ;}
     break;
 
   case 1339:
-
-/* Line 1806 of yacc.c  */
 #line 8559 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1340:
-
-/* Line 1806 of yacc.c  */
 #line 8561 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1341:
-
-/* Line 1806 of yacc.c  */
 #line 8563 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1342:
-
-/* Line 1806 of yacc.c  */
 #line 8567 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1343:
-
-/* Line 1806 of yacc.c  */
 #line 8568 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1344:
-
-/* Line 1806 of yacc.c  */
 #line 8572 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 1345:
-
-/* Line 1806 of yacc.c  */
 #line 8573 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1346:
-
-/* Line 1806 of yacc.c  */
 #line 8581 "gram.y"
     {
 					if ((yyvsp[(5) - (5)].boolean))
@@ -30157,12 +28076,10 @@
 						(yyval.typnam) = SystemTypeName("timestamp");
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1347:
-
-/* Line 1806 of yacc.c  */
 #line 8590 "gram.y"
     {
 					if ((yyvsp[(2) - (2)].boolean))
@@ -30170,12 +28087,10 @@
 					else
 						(yyval.typnam) = SystemTypeName("timestamp");
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1348:
-
-/* Line 1806 of yacc.c  */
 #line 8598 "gram.y"
     {
 					if ((yyvsp[(5) - (5)].boolean))
@@ -30184,12 +28099,10 @@
 						(yyval.typnam) = SystemTypeName("time");
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1349:
-
-/* Line 1806 of yacc.c  */
 #line 8607 "gram.y"
     {
 					if ((yyvsp[(2) - (2)].boolean))
@@ -30197,116 +28110,88 @@
 					else
 						(yyval.typnam) = SystemTypeName("time");
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1350:
-
-/* Line 1806 of yacc.c  */
 #line 8618 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("interval");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1351:
-
-/* Line 1806 of yacc.c  */
 #line 8625 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1352:
-
-/* Line 1806 of yacc.c  */
 #line 8626 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1353:
-
-/* Line 1806 of yacc.c  */
 #line 8627 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1354:
-
-/* Line 1806 of yacc.c  */
 #line 8632 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1355:
-
-/* Line 1806 of yacc.c  */
 #line 8634 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1356:
-
-/* Line 1806 of yacc.c  */
 #line 8636 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1357:
-
-/* Line 1806 of yacc.c  */
 #line 8638 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1358:
-
-/* Line 1806 of yacc.c  */
 #line 8640 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1359:
-
-/* Line 1806 of yacc.c  */
 #line 8642 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1360:
-
-/* Line 1806 of yacc.c  */
 #line 8644 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
 												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1361:
-
-/* Line 1806 of yacc.c  */
 #line 8649 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
 												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1362:
-
-/* Line 1806 of yacc.c  */
 #line 8654 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
 												 INTERVAL_MASK(HOUR) |
 												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1363:
-
-/* Line 1806 of yacc.c  */
 #line 8660 "gram.y"
     {
 					(yyval.list) = (yyvsp[(3) - (3)].list);
@@ -30314,85 +28199,67 @@
 												INTERVAL_MASK(HOUR) |
 												INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1364:
-
-/* Line 1806 of yacc.c  */
 #line 8668 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
 												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1365:
-
-/* Line 1806 of yacc.c  */
 #line 8673 "gram.y"
     {
 					(yyval.list) = (yyvsp[(3) - (3)].list);
 					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
 												INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1366:
-
-/* Line 1806 of yacc.c  */
 #line 8680 "gram.y"
     {
 					(yyval.list) = (yyvsp[(3) - (3)].list);
 					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1367:
-
-/* Line 1806 of yacc.c  */
 #line 8686 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1368:
-
-/* Line 1806 of yacc.c  */
 #line 8691 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
-				}
+				;}
     break;
 
   case 1369:
-
-/* Line 1806 of yacc.c  */
 #line 8695 "gram.y"
     {
 					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
 									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
-				}
+				;}
     break;
 
   case 1370:
-
-/* Line 1806 of yacc.c  */
 #line 8724 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1371:
-
-/* Line 1806 of yacc.c  */
 #line 8726 "gram.y"
-    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); }
+    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1372:
-
-/* Line 1806 of yacc.c  */
 #line 8728 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30405,138 +28272,100 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1373:
-
-/* Line 1806 of yacc.c  */
 #line 8750 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1374:
-
-/* Line 1806 of yacc.c  */
 #line 8752 "gram.y"
-    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1375:
-
-/* Line 1806 of yacc.c  */
 #line 8754 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1376:
-
-/* Line 1806 of yacc.c  */
 #line 8756 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1377:
-
-/* Line 1806 of yacc.c  */
 #line 8758 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1378:
-
-/* Line 1806 of yacc.c  */
 #line 8760 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1379:
-
-/* Line 1806 of yacc.c  */
 #line 8762 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1380:
-
-/* Line 1806 of yacc.c  */
 #line 8764 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1381:
-
-/* Line 1806 of yacc.c  */
 #line 8766 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1382:
-
-/* Line 1806 of yacc.c  */
 #line 8768 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1383:
-
-/* Line 1806 of yacc.c  */
 #line 8770 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1384:
-
-/* Line 1806 of yacc.c  */
 #line 8773 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1385:
-
-/* Line 1806 of yacc.c  */
 #line 8775 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1386:
-
-/* Line 1806 of yacc.c  */
 #line 8777 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
     break;
 
   case 1387:
-
-/* Line 1806 of yacc.c  */
 #line 8780 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1388:
-
-/* Line 1806 of yacc.c  */
 #line 8782 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1389:
-
-/* Line 1806 of yacc.c  */
 #line 8784 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1390:
-
-/* Line 1806 of yacc.c  */
 #line 8787 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1391:
-
-/* Line 1806 of yacc.c  */
 #line 8789 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30549,19 +28378,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[(1) - (5)].node), (Node *) n, (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1392:
-
-/* Line 1806 of yacc.c  */
 #line 8802 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); ;}
     break;
 
   case 1393:
-
-/* Line 1806 of yacc.c  */
 #line 8804 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30574,19 +28399,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (6)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[(1) - (6)].node), (Node *) n, (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1394:
-
-/* Line 1806 of yacc.c  */
 #line 8817 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1395:
-
-/* Line 1806 of yacc.c  */
 #line 8819 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30599,19 +28420,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[(1) - (5)].node), (Node *) n, (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1396:
-
-/* Line 1806 of yacc.c  */
 #line 8832 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); ;}
     break;
 
   case 1397:
-
-/* Line 1806 of yacc.c  */
 #line 8834 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30624,12 +28441,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (6)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[(1) - (6)].node), (Node *) n, (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1398:
-
-/* Line 1806 of yacc.c  */
 #line 8848 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30642,12 +28457,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (4)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[(1) - (4)].node), (Node *) n, (yylsp[(2) - (4)]));
-				}
+				;}
     break;
 
   case 1399:
-
-/* Line 1806 of yacc.c  */
 #line 8861 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30660,12 +28473,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (6)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[(1) - (6)].node), (Node *) n, (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1400:
-
-/* Line 1806 of yacc.c  */
 #line 8874 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30678,12 +28489,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[(1) - (5)].node), (Node *) n, (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1401:
-
-/* Line 1806 of yacc.c  */
 #line 8887 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30696,60 +28505,50 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (7)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[(1) - (7)].node), (Node *) n, (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1402:
-
-/* Line 1806 of yacc.c  */
 #line 8910 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					n->nulltesttype = IS_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1403:
-
-/* Line 1806 of yacc.c  */
 #line 8917 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (2)].node);
 					n->nulltesttype = IS_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1404:
-
-/* Line 1806 of yacc.c  */
 #line 8924 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					n->nulltesttype = IS_NOT_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1405:
-
-/* Line 1806 of yacc.c  */
 #line 8931 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (2)].node);
 					n->nulltesttype = IS_NOT_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1406:
-
-/* Line 1806 of yacc.c  */
 #line 8938 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -30772,93 +28571,77 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (3)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1407:
-
-/* Line 1806 of yacc.c  */
 #line 8961 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					b->booltesttype = IS_TRUE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1408:
-
-/* Line 1806 of yacc.c  */
 #line 8968 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					b->booltesttype = IS_NOT_TRUE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1409:
-
-/* Line 1806 of yacc.c  */
 #line 8975 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					b->booltesttype = IS_FALSE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1410:
-
-/* Line 1806 of yacc.c  */
 #line 8982 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					b->booltesttype = IS_NOT_FALSE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1411:
-
-/* Line 1806 of yacc.c  */
 #line 8989 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					b->booltesttype = IS_UNKNOWN;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1412:
-
-/* Line 1806 of yacc.c  */
 #line 8996 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					b->booltesttype = IS_NOT_UNKNOWN;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1413:
-
-/* Line 1806 of yacc.c  */
 #line 9003 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1414:
-
-/* Line 1806 of yacc.c  */
 #line 9007 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
@@ -30866,54 +28649,44 @@
 															  "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)])),
 											 (yylsp[(2) - (6)]));
 
-				}
+				;}
     break;
 
   case 1415:
-
-/* Line 1806 of yacc.c  */
 #line 9015 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (Node *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1416:
-
-/* Line 1806 of yacc.c  */
 #line 9019 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (Node *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1417:
-
-/* Line 1806 of yacc.c  */
 #line 9029 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
 						(Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yylsp[(2) - (6)])),
 						(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)])),
 											 (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1418:
-
-/* Line 1806 of yacc.c  */
 #line 9036 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
 						(Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (7)].node), (yyvsp[(5) - (7)].node), (yylsp[(2) - (7)])),
 						(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (7)].node), (yyvsp[(7) - (7)].node), (yylsp[(2) - (7)])),
 											 (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1419:
-
-/* Line 1806 of yacc.c  */
 #line 9043 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
@@ -30926,12 +28699,10 @@
 						    (Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yylsp[(2) - (6)])),
 											(yylsp[(2) - (6)])),
 											 (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1420:
-
-/* Line 1806 of yacc.c  */
 #line 9056 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
@@ -30944,12 +28715,10 @@
 						    (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (7)].node), (yyvsp[(5) - (7)].node), (yylsp[(2) - (7)])),
 											(yylsp[(2) - (7)])),
 											 (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1421:
-
-/* Line 1806 of yacc.c  */
 #line 9069 "gram.y"
     {
 					/* in_expr returns a SubLink or a list of a_exprs */
@@ -30968,12 +28737,10 @@
 						/* generate scalar IN expression */
 						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
 					}
-				}
+				;}
     break;
 
   case 1422:
-
-/* Line 1806 of yacc.c  */
 #line 9088 "gram.y"
     {
 					/* in_expr returns a SubLink or a list of a_exprs */
@@ -30994,12 +28761,10 @@
 						/* generate scalar NOT IN expression */
 						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
 					}
-				}
+				;}
     break;
 
   case 1423:
-
-/* Line 1806 of yacc.c  */
 #line 9109 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -31009,24 +28774,20 @@
 					n->subselect = (yyvsp[(4) - (4)].node);
 					n->location = (yylsp[(2) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1424:
-
-/* Line 1806 of yacc.c  */
 #line 9119 "gram.y"
     {
 					if ((yyvsp[(3) - (6)].ival) == ANY_SUBLINK)
 						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
 					else
 						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1425:
-
-/* Line 1806 of yacc.c  */
 #line 9126 "gram.y"
     {
 					/* Not sure how to get rid of the parentheses
@@ -31042,219 +28803,165 @@
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("UNIQUE predicate is not yet implemented"),
 							 parser_errposition((yylsp[(1) - (2)]))));
-				}
+				;}
     break;
 
   case 1426:
-
-/* Line 1806 of yacc.c  */
 #line 9142 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 									 list_make1((yyvsp[(1) - (3)].node)), (yylsp[(2) - (3)]));
-				}
+				;}
     break;
 
   case 1427:
-
-/* Line 1806 of yacc.c  */
 #line 9147 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
 											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 														 list_make1((yyvsp[(1) - (4)].node)), (yylsp[(2) - (4)])),
 											 (yylsp[(2) - (4)]));
-				}
+				;}
     break;
 
   case 1428:
-
-/* Line 1806 of yacc.c  */
 #line 9165 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1429:
-
-/* Line 1806 of yacc.c  */
 #line 9167 "gram.y"
-    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); }
+    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1430:
-
-/* Line 1806 of yacc.c  */
 #line 9169 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1431:
-
-/* Line 1806 of yacc.c  */
 #line 9171 "gram.y"
-    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1432:
-
-/* Line 1806 of yacc.c  */
 #line 9173 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1433:
-
-/* Line 1806 of yacc.c  */
 #line 9175 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1434:
-
-/* Line 1806 of yacc.c  */
 #line 9177 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1435:
-
-/* Line 1806 of yacc.c  */
 #line 9179 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1436:
-
-/* Line 1806 of yacc.c  */
 #line 9181 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1437:
-
-/* Line 1806 of yacc.c  */
 #line 9183 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1438:
-
-/* Line 1806 of yacc.c  */
 #line 9185 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1439:
-
-/* Line 1806 of yacc.c  */
 #line 9187 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1440:
-
-/* Line 1806 of yacc.c  */
 #line 9189 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1441:
-
-/* Line 1806 of yacc.c  */
 #line 9191 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1442:
-
-/* Line 1806 of yacc.c  */
 #line 9193 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1443:
-
-/* Line 1806 of yacc.c  */
 #line 9195 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
     break;
 
   case 1444:
-
-/* Line 1806 of yacc.c  */
 #line 9197 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1445:
-
-/* Line 1806 of yacc.c  */
 #line 9201 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL,
 						NULL, (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)])), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1446:
-
-/* Line 1806 of yacc.c  */
 #line 9206 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (Node *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1447:
-
-/* Line 1806 of yacc.c  */
 #line 9210 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (Node *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1448:
-
-/* Line 1806 of yacc.c  */
 #line 9214 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 									 list_make1((yyvsp[(1) - (3)].node)), (yylsp[(2) - (3)]));
-				}
+				;}
     break;
 
   case 1449:
-
-/* Line 1806 of yacc.c  */
 #line 9219 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
 											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 														 list_make1((yyvsp[(1) - (4)].node)), (yylsp[(2) - (4)])),
 											 (yylsp[(2) - (4)]));
-				}
+				;}
     break;
 
   case 1450:
-
-/* Line 1806 of yacc.c  */
 #line 9235 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1451:
-
-/* Line 1806 of yacc.c  */
 #line 9236 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1452:
-
-/* Line 1806 of yacc.c  */
 #line 9238 "gram.y"
     {
 					ParamRef *p = makeNode(ParamRef);
@@ -31269,12 +28976,10 @@
 					}
 					else
 						(yyval.node) = (Node *) p;
-				}
+				;}
     break;
 
   case 1453:
-
-/* Line 1806 of yacc.c  */
 #line 9253 "gram.y"
     {
 					if ((yyvsp[(4) - (4)].list))
@@ -31286,26 +28991,20 @@
 					}
 					else
 						(yyval.node) = (yyvsp[(2) - (4)].node);
-				}
+				;}
     break;
 
   case 1454:
-
-/* Line 1806 of yacc.c  */
 #line 9265 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1455:
-
-/* Line 1806 of yacc.c  */
 #line 9267 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1456:
-
-/* Line 1806 of yacc.c  */
 #line 9269 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -31315,12 +29014,10 @@
 					n->subselect = (yyvsp[(1) - (1)].node);
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1457:
-
-/* Line 1806 of yacc.c  */
 #line 9279 "gram.y"
     {
 					/*
@@ -31343,12 +29040,10 @@
 					a->arg = (Node *)n;
 					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.node) = (Node *)a;
-				}
+				;}
     break;
 
   case 1458:
-
-/* Line 1806 of yacc.c  */
 #line 9302 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -31358,12 +29053,10 @@
 					n->subselect = (yyvsp[(2) - (2)].node);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1459:
-
-/* Line 1806 of yacc.c  */
 #line 9312 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -31373,12 +29066,10 @@
 					n->subselect = (yyvsp[(2) - (2)].node);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1460:
-
-/* Line 1806 of yacc.c  */
 #line 9322 "gram.y"
     {
 					A_ArrayExpr *n = (A_ArrayExpr *) (yyvsp[(2) - (2)].node);
@@ -31386,12 +29077,10 @@
 					/* point outermost A_ArrayExpr to the ARRAY keyword */
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1461:
-
-/* Line 1806 of yacc.c  */
 #line 9330 "gram.y"
     {
 					RowExpr *r = makeNode(RowExpr);
@@ -31399,12 +29088,10 @@
 					r->row_typeid = InvalidOid;	/* not analyzed yet */
 					r->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)r;
-				}
+				;}
     break;
 
   case 1462:
-
-/* Line 1806 of yacc.c  */
 #line 9348 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31417,12 +29104,10 @@
 					n->over = (yyvsp[(4) - (4)].windef);
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1463:
-
-/* Line 1806 of yacc.c  */
 #line 9361 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31435,12 +29120,10 @@
 					n->over = (yyvsp[(5) - (5)].windef);
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1464:
-
-/* Line 1806 of yacc.c  */
 #line 9374 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31453,12 +29136,10 @@
 					n->over = (yyvsp[(6) - (6)].windef);
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1465:
-
-/* Line 1806 of yacc.c  */
 #line 9387 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31471,12 +29152,10 @@
 					n->over = (yyvsp[(8) - (8)].windef);
 					n->location = (yylsp[(1) - (8)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1466:
-
-/* Line 1806 of yacc.c  */
 #line 9400 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31489,12 +29168,10 @@
 					n->over = (yyvsp[(6) - (6)].windef);
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1467:
-
-/* Line 1806 of yacc.c  */
 #line 9413 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31511,12 +29188,10 @@
 					n->over = (yyvsp[(7) - (7)].windef);
 					n->location = (yylsp[(1) - (7)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1468:
-
-/* Line 1806 of yacc.c  */
 #line 9430 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31529,12 +29204,10 @@
 					n->over = (yyvsp[(7) - (7)].windef);
 					n->location = (yylsp[(1) - (7)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1469:
-
-/* Line 1806 of yacc.c  */
 #line 9443 "gram.y"
     {
 					/*
@@ -31557,12 +29230,10 @@
 					n->over = (yyvsp[(5) - (5)].windef);
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1470:
-
-/* Line 1806 of yacc.c  */
 #line 9466 "gram.y"
     {
 					/*
@@ -31583,12 +29254,10 @@
 					Node *n;
 					n = makeStringConstCast("now", (yylsp[(1) - (1)]), SystemTypeName("text"));
 					(yyval.node) = makeTypeCast(n, SystemTypeName("date"), -1);
-				}
+				;}
     break;
 
   case 1471:
-
-/* Line 1806 of yacc.c  */
 #line 9487 "gram.y"
     {
 					/*
@@ -31598,12 +29267,10 @@
 					Node *n;
 					n = makeStringConstCast("now", (yylsp[(1) - (1)]), SystemTypeName("text"));
 					(yyval.node) = makeTypeCast(n, SystemTypeName("timetz"), -1);
-				}
+				;}
     break;
 
   case 1472:
-
-/* Line 1806 of yacc.c  */
 #line 9497 "gram.y"
     {
 					/*
@@ -31616,12 +29283,10 @@
 					d = SystemTypeName("timetz");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast(n, d, -1);
-				}
+				;}
     break;
 
   case 1473:
-
-/* Line 1806 of yacc.c  */
 #line 9510 "gram.y"
     {
 					/*
@@ -31638,12 +29303,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1474:
-
-/* Line 1806 of yacc.c  */
 #line 9527 "gram.y"
     {
 					/*
@@ -31656,12 +29319,10 @@
 					d = SystemTypeName("timestamptz");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast(n, d, -1);
-				}
+				;}
     break;
 
   case 1475:
-
-/* Line 1806 of yacc.c  */
 #line 9540 "gram.y"
     {
 					/*
@@ -31671,12 +29332,10 @@
 					Node *n;
 					n = makeStringConstCast("now", (yylsp[(1) - (1)]), SystemTypeName("text"));
 					(yyval.node) = makeTypeCast((Node *)n, SystemTypeName("time"), -1);
-				}
+				;}
     break;
 
   case 1476:
-
-/* Line 1806 of yacc.c  */
 #line 9550 "gram.y"
     {
 					/*
@@ -31689,12 +29348,10 @@
 					d = SystemTypeName("time");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast((Node *)n, d, -1);
-				}
+				;}
     break;
 
   case 1477:
-
-/* Line 1806 of yacc.c  */
 #line 9563 "gram.y"
     {
 					/*
@@ -31704,12 +29361,10 @@
 					Node *n;
 					n = makeStringConstCast("now", (yylsp[(1) - (1)]), SystemTypeName("text"));
 					(yyval.node) = makeTypeCast(n, SystemTypeName("timestamp"), -1);
-				}
+				;}
     break;
 
   case 1478:
-
-/* Line 1806 of yacc.c  */
 #line 9573 "gram.y"
     {
 					/*
@@ -31722,12 +29377,10 @@
 					d = SystemTypeName("timestamp");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast(n, d, -1);
-				}
+				;}
     break;
 
   case 1479:
-
-/* Line 1806 of yacc.c  */
 #line 9586 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31740,12 +29393,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1480:
-
-/* Line 1806 of yacc.c  */
 #line 9599 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31758,12 +29409,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1481:
-
-/* Line 1806 of yacc.c  */
 #line 9612 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31776,12 +29425,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1482:
-
-/* Line 1806 of yacc.c  */
 #line 9625 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31794,12 +29441,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1483:
-
-/* Line 1806 of yacc.c  */
 #line 9638 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31812,12 +29457,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1484:
-
-/* Line 1806 of yacc.c  */
 #line 9651 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31830,19 +29473,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1485:
-
-/* Line 1806 of yacc.c  */
 #line 9664 "gram.y"
-    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); }
+    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
     break;
 
   case 1486:
-
-/* Line 1806 of yacc.c  */
 #line 9666 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31855,12 +29494,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1487:
-
-/* Line 1806 of yacc.c  */
 #line 9679 "gram.y"
     {
 					/* overlay(A PLACING B FROM C FOR D) is converted to
@@ -31878,12 +29515,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1488:
-
-/* Line 1806 of yacc.c  */
 #line 9697 "gram.y"
     {
 					/* position(A in B) is converted to position(B, A) */
@@ -31897,12 +29532,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1489:
-
-/* Line 1806 of yacc.c  */
 #line 9711 "gram.y"
     {
 					/* substring(A from B for C) is converted to
@@ -31918,12 +29551,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1490:
-
-/* Line 1806 of yacc.c  */
 #line 9727 "gram.y"
     {
 					/* TREAT(expr AS target) converts expr of a particular type to target,
@@ -31945,12 +29576,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1491:
-
-/* Line 1806 of yacc.c  */
 #line 9749 "gram.y"
     {
 					/* various trim expressions are defined in SQL92
@@ -31966,12 +29595,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1492:
-
-/* Line 1806 of yacc.c  */
 #line 9765 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -31984,12 +29611,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1493:
-
-/* Line 1806 of yacc.c  */
 #line 9778 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -32002,12 +29627,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1494:
-
-/* Line 1806 of yacc.c  */
 #line 9791 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -32020,33 +29643,27 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1495:
-
-/* Line 1806 of yacc.c  */
 #line 9804 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
-				}
+				;}
     break;
 
   case 1496:
-
-/* Line 1806 of yacc.c  */
 #line 9808 "gram.y"
     {
 					CoalesceExpr *c = makeNode(CoalesceExpr);
 					c->args = (yyvsp[(3) - (4)].list);
 					c->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)c;
-				}
+				;}
     break;
 
   case 1497:
-
-/* Line 1806 of yacc.c  */
 #line 9815 "gram.y"
     {
 					MinMaxExpr *v = makeNode(MinMaxExpr);
@@ -32054,12 +29671,10 @@
 					v->op = IS_GREATEST;
 					v->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)v;
-				}
+				;}
     break;
 
   case 1498:
-
-/* Line 1806 of yacc.c  */
 #line 9823 "gram.y"
     {
 					MinMaxExpr *v = makeNode(MinMaxExpr);
@@ -32067,66 +29682,52 @@
 					v->op = IS_LEAST;
 					v->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)v;
-				}
+				;}
     break;
 
   case 1499:
-
-/* Line 1806 of yacc.c  */
 #line 9831 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLCONCAT, NULL, NIL, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1500:
-
-/* Line 1806 of yacc.c  */
 #line 9835 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (5)].str), NIL, NIL, (yylsp[(1) - (5)]));
-				}
+				;}
     break;
 
   case 1501:
-
-/* Line 1806 of yacc.c  */
 #line 9839 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (7)].str), (yyvsp[(6) - (7)].list), NIL, (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1502:
-
-/* Line 1806 of yacc.c  */
 #line 9843 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (7)].str), NIL, (yyvsp[(6) - (7)].list), (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1503:
-
-/* Line 1806 of yacc.c  */
 #line 9847 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (9)].str), (yyvsp[(6) - (9)].list), (yyvsp[(8) - (9)].list), (yylsp[(1) - (9)]));
-				}
+				;}
     break;
 
   case 1504:
-
-/* Line 1806 of yacc.c  */
 #line 9851 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLFOREST, NULL, (yyvsp[(3) - (4)].list), NIL, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1505:
-
-/* Line 1806 of yacc.c  */
 #line 9855 "gram.y"
     {
 					XmlExpr *x = (XmlExpr *)
@@ -32135,40 +29736,32 @@
 									(yylsp[(1) - (6)]));
 					x->xmloption = (yyvsp[(3) - (6)].ival);
 					(yyval.node) = (Node *)x;
-				}
+				;}
     break;
 
   case 1506:
-
-/* Line 1806 of yacc.c  */
 #line 9864 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[(4) - (5)].str), NULL, NIL, (yylsp[(1) - (5)]));
-				}
+				;}
     break;
 
   case 1507:
-
-/* Line 1806 of yacc.c  */
 #line 9868 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[(4) - (7)].str), NULL, list_make1((yyvsp[(6) - (7)].node)), (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1508:
-
-/* Line 1806 of yacc.c  */
 #line 9872 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLROOT, NULL, NIL,
 									 list_make3((yyvsp[(3) - (7)].node), (yyvsp[(5) - (7)].node), (yyvsp[(6) - (7)].node)), (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1509:
-
-/* Line 1806 of yacc.c  */
 #line 9877 "gram.y"
     {
 					XmlSerialize *n = makeNode(XmlSerialize);
@@ -32177,75 +29770,55 @@
 					n->typeName = (yyvsp[(6) - (7)].typnam);
 					n->location = (yylsp[(1) - (7)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1510:
-
-/* Line 1806 of yacc.c  */
 #line 9891 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1511:
-
-/* Line 1806 of yacc.c  */
 #line 9893 "gram.y"
-    { (yyval.node) = makeNullAConst(-1); }
+    { (yyval.node) = makeNullAConst(-1); ;}
     break;
 
   case 1512:
-
-/* Line 1806 of yacc.c  */
 #line 9897 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_YES, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_YES, -1); ;}
     break;
 
   case 1513:
-
-/* Line 1806 of yacc.c  */
 #line 9899 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_NO, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_NO, -1); ;}
     break;
 
   case 1514:
-
-/* Line 1806 of yacc.c  */
 #line 9901 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_NO_VALUE, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_NO_VALUE, -1); ;}
     break;
 
   case 1515:
-
-/* Line 1806 of yacc.c  */
 #line 9903 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_OMITTED, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_OMITTED, -1); ;}
     break;
 
   case 1516:
-
-/* Line 1806 of yacc.c  */
 #line 9906 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1517:
-
-/* Line 1806 of yacc.c  */
 #line 9909 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1518:
-
-/* Line 1806 of yacc.c  */
 #line 9910 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1519:
-
-/* Line 1806 of yacc.c  */
 #line 9914 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -32253,12 +29826,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *) (yyvsp[(1) - (3)].node);
 					(yyval.target)->location = (yylsp[(1) - (3)]);
-				}
+				;}
     break;
 
   case 1520:
-
-/* Line 1806 of yacc.c  */
 #line 9922 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -32266,93 +29837,69 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *) (yyvsp[(1) - (1)].node);
 					(yyval.target)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1521:
-
-/* Line 1806 of yacc.c  */
 #line 9931 "gram.y"
-    { (yyval.ival) = XMLOPTION_DOCUMENT; }
+    { (yyval.ival) = XMLOPTION_DOCUMENT; ;}
     break;
 
   case 1522:
-
-/* Line 1806 of yacc.c  */
 #line 9932 "gram.y"
-    { (yyval.ival) = XMLOPTION_CONTENT; }
+    { (yyval.ival) = XMLOPTION_CONTENT; ;}
     break;
 
   case 1523:
-
-/* Line 1806 of yacc.c  */
 #line 9935 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1524:
-
-/* Line 1806 of yacc.c  */
 #line 9936 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1525:
-
-/* Line 1806 of yacc.c  */
 #line 9937 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1526:
-
-/* Line 1806 of yacc.c  */
 #line 9944 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1527:
-
-/* Line 1806 of yacc.c  */
 #line 9945 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1528:
-
-/* Line 1806 of yacc.c  */
 #line 9949 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
     break;
 
   case 1529:
-
-/* Line 1806 of yacc.c  */
 #line 9951 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
     break;
 
   case 1530:
-
-/* Line 1806 of yacc.c  */
 #line 9956 "gram.y"
     {
 					WindowDef *n = (yyvsp[(3) - (3)].windef);
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1531:
-
-/* Line 1806 of yacc.c  */
 #line 9964 "gram.y"
-    { (yyval.windef) = (yyvsp[(2) - (2)].windef); }
+    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
     break;
 
   case 1532:
-
-/* Line 1806 of yacc.c  */
 #line 9966 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -32365,19 +29912,15 @@
 					n->endOffset = NULL;
 					n->location = (yylsp[(2) - (2)]);
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1533:
-
-/* Line 1806 of yacc.c  */
 #line 9979 "gram.y"
-    { (yyval.windef) = NULL; }
+    { (yyval.windef) = NULL; ;}
     break;
 
   case 1534:
-
-/* Line 1806 of yacc.c  */
 #line 9984 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -32391,40 +29934,30 @@
 					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1535:
-
-/* Line 1806 of yacc.c  */
 #line 10009 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1536:
-
-/* Line 1806 of yacc.c  */
 #line 10010 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1537:
-
-/* Line 1806 of yacc.c  */
 #line 10013 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (3)].list); }
+    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 1538:
-
-/* Line 1806 of yacc.c  */
 #line 10014 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1539:
-
-/* Line 1806 of yacc.c  */
 #line 10026 "gram.y"
     {
 					WindowDef *n = (yyvsp[(2) - (2)].windef);
@@ -32442,23 +29975,19 @@
 								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
 								 parser_errposition((yylsp[(1) - (2)]))));
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1540:
-
-/* Line 1806 of yacc.c  */
 #line 10044 "gram.y"
     {
 					WindowDef *n = (yyvsp[(2) - (2)].windef);
 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1541:
-
-/* Line 1806 of yacc.c  */
 #line 10050 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -32466,12 +29995,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1542:
-
-/* Line 1806 of yacc.c  */
 #line 10060 "gram.y"
     {
 					WindowDef *n = (yyvsp[(1) - (1)].windef);
@@ -32488,12 +30015,10 @@
 								 parser_errposition((yylsp[(1) - (1)]))));
 					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1543:
-
-/* Line 1806 of yacc.c  */
 #line 10077 "gram.y"
     {
 					WindowDef *n1 = (yyvsp[(2) - (4)].windef);
@@ -32530,12 +30055,10 @@
 					n1->frameOptions = frameOptions;
 					n1->endOffset = n2->startOffset;
 					(yyval.windef) = n1;
-				}
+				;}
     break;
 
   case 1544:
-
-/* Line 1806 of yacc.c  */
 #line 10122 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -32543,12 +30066,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1545:
-
-/* Line 1806 of yacc.c  */
 #line 10130 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -32556,12 +30077,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1546:
-
-/* Line 1806 of yacc.c  */
 #line 10138 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -32569,12 +30088,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1547:
-
-/* Line 1806 of yacc.c  */
 #line 10146 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -32582,12 +30099,10 @@
 					n->startOffset = (yyvsp[(1) - (2)].node);
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1548:
-
-/* Line 1806 of yacc.c  */
 #line 10154 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -32595,246 +30110,180 @@
 					n->startOffset = (yyvsp[(1) - (2)].node);
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1549:
-
-/* Line 1806 of yacc.c  */
 #line 10174 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1550:
-
-/* Line 1806 of yacc.c  */
 #line 10175 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1551:
-
-/* Line 1806 of yacc.c  */
 #line 10176 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); }
+    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
     break;
 
   case 1552:
-
-/* Line 1806 of yacc.c  */
 #line 10179 "gram.y"
-    { (yyval.ival) = ANY_SUBLINK; }
+    { (yyval.ival) = ANY_SUBLINK; ;}
     break;
 
   case 1553:
-
-/* Line 1806 of yacc.c  */
 #line 10180 "gram.y"
-    { (yyval.ival) = ANY_SUBLINK; }
+    { (yyval.ival) = ANY_SUBLINK; ;}
     break;
 
   case 1554:
-
-/* Line 1806 of yacc.c  */
 #line 10181 "gram.y"
-    { (yyval.ival) = ALL_SUBLINK; }
+    { (yyval.ival) = ALL_SUBLINK; ;}
     break;
 
   case 1555:
-
-/* Line 1806 of yacc.c  */
 #line 10184 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1556:
-
-/* Line 1806 of yacc.c  */
 #line 10185 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1557:
-
-/* Line 1806 of yacc.c  */
 #line 10188 "gram.y"
-    { (yyval.str) = "+"; }
+    { (yyval.str) = "+"; ;}
     break;
 
   case 1558:
-
-/* Line 1806 of yacc.c  */
 #line 10189 "gram.y"
-    { (yyval.str) = "-"; }
+    { (yyval.str) = "-"; ;}
     break;
 
   case 1559:
-
-/* Line 1806 of yacc.c  */
 #line 10190 "gram.y"
-    { (yyval.str) = "*"; }
+    { (yyval.str) = "*"; ;}
     break;
 
   case 1560:
-
-/* Line 1806 of yacc.c  */
 #line 10191 "gram.y"
-    { (yyval.str) = "/"; }
+    { (yyval.str) = "/"; ;}
     break;
 
   case 1561:
-
-/* Line 1806 of yacc.c  */
 #line 10192 "gram.y"
-    { (yyval.str) = "%"; }
+    { (yyval.str) = "%"; ;}
     break;
 
   case 1562:
-
-/* Line 1806 of yacc.c  */
 #line 10193 "gram.y"
-    { (yyval.str) = "^"; }
+    { (yyval.str) = "^"; ;}
     break;
 
   case 1563:
-
-/* Line 1806 of yacc.c  */
 #line 10194 "gram.y"
-    { (yyval.str) = "<"; }
+    { (yyval.str) = "<"; ;}
     break;
 
   case 1564:
-
-/* Line 1806 of yacc.c  */
 #line 10195 "gram.y"
-    { (yyval.str) = ">"; }
+    { (yyval.str) = ">"; ;}
     break;
 
   case 1565:
-
-/* Line 1806 of yacc.c  */
 #line 10196 "gram.y"
-    { (yyval.str) = "="; }
+    { (yyval.str) = "="; ;}
     break;
 
   case 1566:
-
-/* Line 1806 of yacc.c  */
 #line 10200 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1567:
-
-/* Line 1806 of yacc.c  */
 #line 10202 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1568:
-
-/* Line 1806 of yacc.c  */
 #line 10207 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1569:
-
-/* Line 1806 of yacc.c  */
 #line 10209 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1570:
-
-/* Line 1806 of yacc.c  */
 #line 10214 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1571:
-
-/* Line 1806 of yacc.c  */
 #line 10216 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1572:
-
-/* Line 1806 of yacc.c  */
 #line 10218 "gram.y"
-    { (yyval.list) = list_make1(makeString("~~")); }
+    { (yyval.list) = list_make1(makeString("~~")); ;}
     break;
 
   case 1573:
-
-/* Line 1806 of yacc.c  */
 #line 10220 "gram.y"
-    { (yyval.list) = list_make1(makeString("!~~")); }
+    { (yyval.list) = list_make1(makeString("!~~")); ;}
     break;
 
   case 1574:
-
-/* Line 1806 of yacc.c  */
 #line 10222 "gram.y"
-    { (yyval.list) = list_make1(makeString("~~*")); }
+    { (yyval.list) = list_make1(makeString("~~*")); ;}
     break;
 
   case 1575:
-
-/* Line 1806 of yacc.c  */
 #line 10224 "gram.y"
-    { (yyval.list) = list_make1(makeString("!~~*")); }
+    { (yyval.list) = list_make1(makeString("!~~*")); ;}
     break;
 
   case 1576:
-
-/* Line 1806 of yacc.c  */
 #line 10236 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 1577:
-
-/* Line 1806 of yacc.c  */
 #line 10240 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1578:
-
-/* Line 1806 of yacc.c  */
 #line 10247 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 1579:
-
-/* Line 1806 of yacc.c  */
 #line 10251 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1580:
-
-/* Line 1806 of yacc.c  */
 #line 10257 "gram.y"
     {
 					(yyval.node) = (yyvsp[(1) - (1)].node);
-				}
+				;}
     break;
 
   case 1581:
-
-/* Line 1806 of yacc.c  */
 #line 10261 "gram.y"
     {
 					NamedArgExpr *na = makeNode(NamedArgExpr);
@@ -32843,206 +30292,154 @@
 					na->argnumber = -1;		/* until determined */
 					na->location = (yylsp[(1) - (3)]);
 					(yyval.node) = (Node *) na;
-				}
+				;}
     break;
 
   case 1582:
-
-/* Line 1806 of yacc.c  */
 #line 10271 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
     break;
 
   case 1583:
-
-/* Line 1806 of yacc.c  */
 #line 10272 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
     break;
 
   case 1584:
-
-/* Line 1806 of yacc.c  */
 #line 10276 "gram.y"
     {
 					(yyval.node) = makeAArrayExpr((yyvsp[(2) - (3)].list), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1585:
-
-/* Line 1806 of yacc.c  */
 #line 10280 "gram.y"
     {
 					(yyval.node) = makeAArrayExpr((yyvsp[(2) - (3)].list), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1586:
-
-/* Line 1806 of yacc.c  */
 #line 10284 "gram.y"
     {
 					(yyval.node) = makeAArrayExpr(NIL, (yylsp[(1) - (2)]));
-				}
+				;}
     break;
 
   case 1587:
-
-/* Line 1806 of yacc.c  */
 #line 10289 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1588:
-
-/* Line 1806 of yacc.c  */
 #line 10290 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1589:
-
-/* Line 1806 of yacc.c  */
 #line 10296 "gram.y"
     {
 					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1590:
-
-/* Line 1806 of yacc.c  */
 #line 10299 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1591:
-
-/* Line 1806 of yacc.c  */
 #line 10306 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1592:
-
-/* Line 1806 of yacc.c  */
 #line 10307 "gram.y"
-    { (yyval.str) = "year"; }
+    { (yyval.str) = "year"; ;}
     break;
 
   case 1593:
-
-/* Line 1806 of yacc.c  */
 #line 10308 "gram.y"
-    { (yyval.str) = "month"; }
+    { (yyval.str) = "month"; ;}
     break;
 
   case 1594:
-
-/* Line 1806 of yacc.c  */
 #line 10309 "gram.y"
-    { (yyval.str) = "day"; }
+    { (yyval.str) = "day"; ;}
     break;
 
   case 1595:
-
-/* Line 1806 of yacc.c  */
 #line 10310 "gram.y"
-    { (yyval.str) = "hour"; }
+    { (yyval.str) = "hour"; ;}
     break;
 
   case 1596:
-
-/* Line 1806 of yacc.c  */
 #line 10311 "gram.y"
-    { (yyval.str) = "minute"; }
+    { (yyval.str) = "minute"; ;}
     break;
 
   case 1597:
-
-/* Line 1806 of yacc.c  */
 #line 10312 "gram.y"
-    { (yyval.str) = "second"; }
+    { (yyval.str) = "second"; ;}
     break;
 
   case 1598:
-
-/* Line 1806 of yacc.c  */
 #line 10313 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1599:
-
-/* Line 1806 of yacc.c  */
 #line 10324 "gram.y"
     {
 					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1600:
-
-/* Line 1806 of yacc.c  */
 #line 10328 "gram.y"
     {
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1601:
-
-/* Line 1806 of yacc.c  */
 #line 10335 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1602:
-
-/* Line 1806 of yacc.c  */
 #line 10341 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); }
+    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
     break;
 
   case 1603:
-
-/* Line 1806 of yacc.c  */
 #line 10342 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1604:
-
-/* Line 1806 of yacc.c  */
 #line 10359 "gram.y"
     {
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1605:
-
-/* Line 1806 of yacc.c  */
 #line 10363 "gram.y"
     {
 					/* not legal per SQL99, but might as well allow it */
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
-				}
+				;}
     break;
 
   case 1606:
-
-/* Line 1806 of yacc.c  */
 #line 10368 "gram.y"
     {
 					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 1607:
-
-/* Line 1806 of yacc.c  */
 #line 10372 "gram.y"
     {
 					/*
@@ -33057,82 +30454,62 @@
 					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
 									makeTypeCast((yyvsp[(2) - (2)].node),
 												 SystemTypeName("int4"), -1));
-				}
+				;}
     break;
 
   case 1608:
-
-/* Line 1806 of yacc.c  */
 #line 10387 "gram.y"
     {
 					(yyval.list) = (yyvsp[(1) - (1)].list);
-				}
+				;}
     break;
 
   case 1609:
-
-/* Line 1806 of yacc.c  */
 #line 10391 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1610:
-
-/* Line 1806 of yacc.c  */
 #line 10395 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1611:
-
-/* Line 1806 of yacc.c  */
 #line 10398 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1612:
-
-/* Line 1806 of yacc.c  */
 #line 10401 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
     break;
 
   case 1613:
-
-/* Line 1806 of yacc.c  */
 #line 10402 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1614:
-
-/* Line 1806 of yacc.c  */
 #line 10403 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1615:
-
-/* Line 1806 of yacc.c  */
 #line 10407 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
 					n->subselect = (yyvsp[(1) - (1)].node);
 					/* other fields will be filled later */
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1616:
-
-/* Line 1806 of yacc.c  */
 #line 10413 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(2) - (3)].list); }
+    { (yyval.node) = (Node *)(yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1617:
-
-/* Line 1806 of yacc.c  */
 #line 10424 "gram.y"
     {
 					CaseExpr *c = makeNode(CaseExpr);
@@ -33142,26 +30519,20 @@
 					c->defresult = (Expr *) (yyvsp[(4) - (5)].node);
 					c->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)c;
-				}
+				;}
     break;
 
   case 1618:
-
-/* Line 1806 of yacc.c  */
 #line 10437 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1619:
-
-/* Line 1806 of yacc.c  */
 #line 10438 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1620:
-
-/* Line 1806 of yacc.c  */
 #line 10443 "gram.y"
     {
 					CaseWhen *w = makeNode(CaseWhen);
@@ -33169,181 +30540,137 @@
 					w->result = (Expr *) (yyvsp[(4) - (4)].node);
 					w->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)w;
-				}
+				;}
     break;
 
   case 1621:
-
-/* Line 1806 of yacc.c  */
 #line 10453 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1622:
-
-/* Line 1806 of yacc.c  */
 #line 10454 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1623:
-
-/* Line 1806 of yacc.c  */
 #line 10457 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1624:
-
-/* Line 1806 of yacc.c  */
 #line 10458 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1625:
-
-/* Line 1806 of yacc.c  */
 #line 10462 "gram.y"
     {
 					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
-				}
+				;}
     break;
 
   case 1626:
-
-/* Line 1806 of yacc.c  */
 #line 10466 "gram.y"
     {
 					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
-				}
+				;}
     break;
 
   case 1627:
-
-/* Line 1806 of yacc.c  */
 #line 10473 "gram.y"
     {
 					(yyval.node) = (Node *) makeString((yyvsp[(2) - (2)].str));
-				}
+				;}
     break;
 
   case 1628:
-
-/* Line 1806 of yacc.c  */
 #line 10477 "gram.y"
     {
 					(yyval.node) = (Node *) makeNode(A_Star);
-				}
+				;}
     break;
 
   case 1629:
-
-/* Line 1806 of yacc.c  */
 #line 10481 "gram.y"
     {
 					A_Indices *ai = makeNode(A_Indices);
 					ai->lidx = NULL;
 					ai->uidx = (yyvsp[(2) - (3)].node);
 					(yyval.node) = (Node *) ai;
-				}
+				;}
     break;
 
   case 1630:
-
-/* Line 1806 of yacc.c  */
 #line 10488 "gram.y"
     {
 					A_Indices *ai = makeNode(A_Indices);
 					ai->lidx = (yyvsp[(2) - (5)].node);
 					ai->uidx = (yyvsp[(4) - (5)].node);
 					(yyval.node) = (Node *) ai;
-				}
+				;}
     break;
 
   case 1631:
-
-/* Line 1806 of yacc.c  */
 #line 10497 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1632:
-
-/* Line 1806 of yacc.c  */
 #line 10498 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1633:
-
-/* Line 1806 of yacc.c  */
 #line 10502 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1634:
-
-/* Line 1806 of yacc.c  */
 #line 10503 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1637:
-
-/* Line 1806 of yacc.c  */
 #line 10518 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1638:
-
-/* Line 1806 of yacc.c  */
 #line 10520 "gram.y"
     {
 					SetToDefault *n = makeNode(SetToDefault);
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1639:
-
-/* Line 1806 of yacc.c  */
 #line 10528 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1640:
-
-/* Line 1806 of yacc.c  */
 #line 10529 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1641:
-
-/* Line 1806 of yacc.c  */
 #line 10537 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1642:
-
-/* Line 1806 of yacc.c  */
 #line 10548 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1643:
-
-/* Line 1806 of yacc.c  */
 #line 10549 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1644:
-
-/* Line 1806 of yacc.c  */
 #line 10553 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -33351,12 +30678,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)(yyvsp[(1) - (3)].node);
 					(yyval.target)->location = (yylsp[(1) - (3)]);
-				}
+				;}
     break;
 
   case 1645:
-
-/* Line 1806 of yacc.c  */
 #line 10569 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -33364,12 +30689,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)(yyvsp[(1) - (2)].node);
 					(yyval.target)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1646:
-
-/* Line 1806 of yacc.c  */
 #line 10577 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -33377,12 +30700,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)(yyvsp[(1) - (1)].node);
 					(yyval.target)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1647:
-
-/* Line 1806 of yacc.c  */
 #line 10585 "gram.y"
     {
 					ColumnRef *n = makeNode(ColumnRef);
@@ -33394,26 +30715,20 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)n;
 					(yyval.target)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1648:
-
-/* Line 1806 of yacc.c  */
 #line 10606 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
     break;
 
   case 1649:
-
-/* Line 1806 of yacc.c  */
 #line 10607 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
     break;
 
   case 1650:
-
-/* Line 1806 of yacc.c  */
 #line 10619 "gram.y"
     {
 					(yyval.range) = makeNode(RangeVar);
@@ -33421,12 +30736,10 @@
 					(yyval.range)->schemaname = NULL;
 					(yyval.range)->relname = (yyvsp[(1) - (1)].str);
 					(yyval.range)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1651:
-
-/* Line 1806 of yacc.c  */
 #line 10627 "gram.y"
     {
 					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
@@ -33452,121 +30765,91 @@
 							break;
 					}
 					(yyval.range)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1652:
-
-/* Line 1806 of yacc.c  */
 #line 10655 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1653:
-
-/* Line 1806 of yacc.c  */
 #line 10657 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 1654:
-
-/* Line 1806 of yacc.c  */
 #line 10661 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1655:
-
-/* Line 1806 of yacc.c  */
 #line 10664 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1656:
-
-/* Line 1806 of yacc.c  */
 #line 10667 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1657:
-
-/* Line 1806 of yacc.c  */
 #line 10669 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1658:
-
-/* Line 1806 of yacc.c  */
 #line 10671 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1659:
-
-/* Line 1806 of yacc.c  */
 #line 10673 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1660:
-
-/* Line 1806 of yacc.c  */
 #line 10684 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1661:
-
-/* Line 1806 of yacc.c  */
 #line 10686 "gram.y"
     {
 						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
 											 yyscanner);
-					}
+					;}
     break;
 
   case 1662:
-
-/* Line 1806 of yacc.c  */
 #line 10697 "gram.y"
     {
 					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1663:
-
-/* Line 1806 of yacc.c  */
 #line 10701 "gram.y"
     {
 					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1664:
-
-/* Line 1806 of yacc.c  */
 #line 10705 "gram.y"
     {
 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1665:
-
-/* Line 1806 of yacc.c  */
 #line 10709 "gram.y"
     {
 					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1666:
-
-/* Line 1806 of yacc.c  */
 #line 10713 "gram.y"
     {
 					/* This is a bit constant per SQL99:
@@ -33575,24 +30858,20 @@
 					 * <bit string literal> or a <hex string literal>.
 					 */
 					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1667:
-
-/* Line 1806 of yacc.c  */
 #line 10722 "gram.y"
     {
 					/* generic type 'literal' syntax */
 					TypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
 					t->location = (yylsp[(1) - (2)]);
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
-				}
+				;}
     break;
 
   case 1668:
-
-/* Line 1806 of yacc.c  */
 #line 10729 "gram.y"
     {
 					/* generic syntax with a type modifier */
@@ -33617,32 +30896,26 @@
 					t->typmods = (yyvsp[(3) - (5)].list);
 					t->location = (yylsp[(1) - (5)]);
 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
-				}
+				;}
     break;
 
   case 1669:
-
-/* Line 1806 of yacc.c  */
 #line 10754 "gram.y"
     {
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
-				}
+				;}
     break;
 
   case 1670:
-
-/* Line 1806 of yacc.c  */
 #line 10758 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (3)].typnam);
 					t->typmods = (yyvsp[(3) - (3)].list);
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
-				}
+				;}
     break;
 
   case 1671:
-
-/* Line 1806 of yacc.c  */
 #line 10764 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (6)].typnam);
@@ -33659,214 +30932,150 @@
 						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 												makeIntConst((yyvsp[(3) - (6)].ival), (yylsp[(3) - (6)])));
 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (6)].str), (yylsp[(5) - (6)]), t);
-				}
+				;}
     break;
 
   case 1672:
-
-/* Line 1806 of yacc.c  */
 #line 10781 "gram.y"
     {
 					(yyval.node) = makeBoolAConst(TRUE, (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1673:
-
-/* Line 1806 of yacc.c  */
 #line 10785 "gram.y"
     {
 					(yyval.node) = makeBoolAConst(FALSE, (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1674:
-
-/* Line 1806 of yacc.c  */
 #line 10789 "gram.y"
     {
 					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1675:
-
-/* Line 1806 of yacc.c  */
 #line 10794 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1676:
-
-/* Line 1806 of yacc.c  */
 #line 10795 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1677:
-
-/* Line 1806 of yacc.c  */
 #line 10796 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1678:
-
-/* Line 1806 of yacc.c  */
 #line 10799 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1679:
-
-/* Line 1806 of yacc.c  */
 #line 10801 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 1680:
-
-/* Line 1806 of yacc.c  */
 #line 10804 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1681:
-
-/* Line 1806 of yacc.c  */
 #line 10805 "gram.y"
-    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); }
+    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
     break;
 
   case 1682:
-
-/* Line 1806 of yacc.c  */
 #line 10806 "gram.y"
-    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); }
+    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
     break;
 
   case 1683:
-
-/* Line 1806 of yacc.c  */
 #line 10822 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1684:
-
-/* Line 1806 of yacc.c  */
 #line 10823 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1685:
-
-/* Line 1806 of yacc.c  */
 #line 10824 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1686:
-
-/* Line 1806 of yacc.c  */
 #line 10829 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1687:
-
-/* Line 1806 of yacc.c  */
 #line 10830 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1688:
-
-/* Line 1806 of yacc.c  */
 #line 10831 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1689:
-
-/* Line 1806 of yacc.c  */
 #line 10836 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1690:
-
-/* Line 1806 of yacc.c  */
 #line 10837 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1691:
-
-/* Line 1806 of yacc.c  */
 #line 10838 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1692:
-
-/* Line 1806 of yacc.c  */
 #line 10839 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1693:
-
-/* Line 1806 of yacc.c  */
 #line 10845 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1694:
-
-/* Line 1806 of yacc.c  */
 #line 10846 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1695:
-
-/* Line 1806 of yacc.c  */
 #line 10847 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1696:
-
-/* Line 1806 of yacc.c  */
 #line 10848 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1697:
-
-/* Line 1806 of yacc.c  */
 #line 10849 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 33857 "gram.c"
+/* Line 1267 of yacc.c.  */
+#line 31077 "gram.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -33895,10 +31104,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -33906,44 +31111,45 @@
 #if ! YYERROR_VERBOSE
       yyerror (&yylloc, yyscanner, YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (&yylloc, yyscanner, yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (&yylloc, yyscanner, yymsg);
+	  }
+	else
+	  {
+	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
-  yyerror_range[1] = yylloc;
+  yyerror_range[0] = yylloc;
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -33960,7 +31166,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -33976,7 +31182,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  yyerror_range[1] = yylsp[1-yylen];
+  yyerror_range[0] = yylsp[1-yylen];
   /* Do not reclaim the symbols of the rule which action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
@@ -33995,7 +31201,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -34010,7 +31216,7 @@
       if (yyssp == yyss)
 	YYABORT;
 
-      yyerror_range[1] = *yylsp;
+      yyerror_range[0] = *yylsp;
       yydestruct ("Error: popping",
 		  yystos[yystate], yyvsp, yylsp, yyscanner);
       YYPOPSTACK (1);
@@ -34018,12 +31224,15 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
-  yyerror_range[2] = yylloc;
+  yyerror_range[1] = yylloc;
   /* Using YYLLOC is tempting, but would change the location of
-     the lookahead.  YYLOC is available though.  */
-  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+     the look-ahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
   *++yylsp = yyloc;
 
   /* Shift the error token.  */
@@ -34047,7 +31256,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -34058,14 +31267,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, &yylloc, yyscanner);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, &yylloc, yyscanner);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -34089,8 +31293,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 11301 "gram.y"
 
 
diff -Naur postgresql-9.0.17/src/backend/parser/gram.h postgresql/src/backend/parser/gram.h
--- postgresql-9.0.17/src/backend/parser/gram.h	2014-03-17 12:55:41.000000000 -0700
+++ postgresql/src/backend/parser/gram.h	2014-03-31 18:07:49.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -450,16 +452,426 @@
      UMINUS = 668
    };
 #endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define ABORT_P 269
+#define ABSOLUTE_P 270
+#define ACCESS 271
+#define ACTION 272
+#define ADD_P 273
+#define ADMIN 274
+#define AFTER 275
+#define AGGREGATE 276
+#define ALL 277
+#define ALSO 278
+#define ALTER 279
+#define ALWAYS 280
+#define ANALYSE 281
+#define ANALYZE 282
+#define AND 283
+#define ANY 284
+#define ARRAY 285
+#define AS 286
+#define ASC 287
+#define ASSERTION 288
+#define ASSIGNMENT 289
+#define ASYMMETRIC 290
+#define AT 291
+#define AUTHORIZATION 292
+#define BACKWARD 293
+#define BEFORE 294
+#define BEGIN_P 295
+#define BETWEEN 296
+#define BIGINT 297
+#define BINARY 298
+#define BIT 299
+#define BOOLEAN_P 300
+#define BOTH 301
+#define BY 302
+#define CACHE 303
+#define CALLED 304
+#define CASCADE 305
+#define CASCADED 306
+#define CASE 307
+#define CAST 308
+#define CATALOG_P 309
+#define CHAIN 310
+#define CHAR_P 311
+#define CHARACTER 312
+#define CHARACTERISTICS 313
+#define CHECK 314
+#define CHECKPOINT 315
+#define CLASS 316
+#define CLOSE 317
+#define CLUSTER 318
+#define COALESCE 319
+#define COLLATE 320
+#define COLUMN 321
+#define COMMENT 322
+#define COMMENTS 323
+#define COMMIT 324
+#define COMMITTED 325
+#define CONCURRENTLY 326
+#define CONFIGURATION 327
+#define CONNECTION 328
+#define CONSTRAINT 329
+#define CONSTRAINTS 330
+#define CONTENT_P 331
+#define CONTINUE_P 332
+#define CONVERSION_P 333
+#define COPY 334
+#define COST 335
+#define CREATE 336
+#define CREATEDB 337
+#define CREATEROLE 338
+#define CREATEUSER 339
+#define CROSS 340
+#define CSV 341
+#define CURRENT_P 342
+#define CURRENT_CATALOG 343
+#define CURRENT_DATE 344
+#define CURRENT_ROLE 345
+#define CURRENT_SCHEMA 346
+#define CURRENT_TIME 347
+#define CURRENT_TIMESTAMP 348
+#define CURRENT_USER 349
+#define CURSOR 350
+#define CYCLE 351
+#define DATA_P 352
+#define DATABASE 353
+#define DAY_P 354
+#define DEALLOCATE 355
+#define DEC 356
+#define DECIMAL_P 357
+#define DECLARE 358
+#define DEFAULT 359
+#define DEFAULTS 360
+#define DEFERRABLE 361
+#define DEFERRED 362
+#define DEFINER 363
+#define DELETE_P 364
+#define DELIMITER 365
+#define DELIMITERS 366
+#define DESC 367
+#define DICTIONARY 368
+#define DISABLE_P 369
+#define DISCARD 370
+#define DISTINCT 371
+#define DO 372
+#define DOCUMENT_P 373
+#define DOMAIN_P 374
+#define DOUBLE_P 375
+#define DROP 376
+#define EACH 377
+#define ELSE 378
+#define ENABLE_P 379
+#define ENCODING 380
+#define ENCRYPTED 381
+#define END_P 382
+#define ENUM_P 383
+#define ESCAPE 384
+#define EXCEPT 385
+#define EXCLUDE 386
+#define EXCLUDING 387
+#define EXCLUSIVE 388
+#define EXECUTE 389
+#define EXISTS 390
+#define EXPLAIN 391
+#define EXTERNAL 392
+#define EXTRACT 393
+#define FALSE_P 394
+#define FAMILY 395
+#define FETCH 396
+#define FIRST_P 397
+#define FLOAT_P 398
+#define FOLLOWING 399
+#define FOR 400
+#define FORCE 401
+#define FOREIGN 402
+#define FORWARD 403
+#define FREEZE 404
+#define FROM 405
+#define FULL 406
+#define FUNCTION 407
+#define FUNCTIONS 408
+#define GLOBAL 409
+#define GRANT 410
+#define GRANTED 411
+#define GREATEST 412
+#define GROUP_P 413
+#define HANDLER 414
+#define HAVING 415
+#define HEADER_P 416
+#define HOLD 417
+#define HOUR_P 418
+#define IDENTITY_P 419
+#define IF_P 420
+#define ILIKE 421
+#define IMMEDIATE 422
+#define IMMUTABLE 423
+#define IMPLICIT_P 424
+#define IN_P 425
+#define INCLUDING 426
+#define INCREMENT 427
+#define INDEX 428
+#define INDEXES 429
+#define INHERIT 430
+#define INHERITS 431
+#define INITIALLY 432
+#define INLINE_P 433
+#define INNER_P 434
+#define INOUT 435
+#define INPUT_P 436
+#define INSENSITIVE 437
+#define INSERT 438
+#define INSTEAD 439
+#define INT_P 440
+#define INTEGER 441
+#define INTERSECT 442
+#define INTERVAL 443
+#define INTO 444
+#define INVOKER 445
+#define IS 446
+#define ISNULL 447
+#define ISOLATION 448
+#define JOIN 449
+#define KEY 450
+#define LANGUAGE 451
+#define LARGE_P 452
+#define LAST_P 453
+#define LC_COLLATE_P 454
+#define LC_CTYPE_P 455
+#define LEADING 456
+#define LEAST 457
+#define LEFT 458
+#define LEVEL 459
+#define LIKE 460
+#define LIMIT 461
+#define LISTEN 462
+#define LOAD 463
+#define LOCAL 464
+#define LOCALTIME 465
+#define LOCALTIMESTAMP 466
+#define LOCATION 467
+#define LOCK_P 468
+#define LOGIN_P 469
+#define MAPPING 470
+#define MATCH 471
+#define MAXVALUE 472
+#define MINUTE_P 473
+#define MINVALUE 474
+#define MODE 475
+#define MONTH_P 476
+#define MOVE 477
+#define NAME_P 478
+#define NAMES 479
+#define NATIONAL 480
+#define NATURAL 481
+#define NCHAR 482
+#define NEXT 483
+#define NO 484
+#define NOCREATEDB 485
+#define NOCREATEROLE 486
+#define NOCREATEUSER 487
+#define NOINHERIT 488
+#define NOLOGIN_P 489
+#define NONE 490
+#define NOSUPERUSER 491
+#define NOT 492
+#define NOTHING 493
+#define NOTIFY 494
+#define NOTNULL 495
+#define NOWAIT 496
+#define NULL_P 497
+#define NULLIF 498
+#define NULLS_P 499
+#define NUMERIC 500
+#define OBJECT_P 501
+#define OF 502
+#define OFF 503
+#define OFFSET 504
+#define OIDS 505
+#define ON 506
+#define ONLY 507
+#define OPERATOR 508
+#define OPTION 509
+#define OPTIONS 510
+#define OR 511
+#define ORDER 512
+#define OUT_P 513
+#define OUTER_P 514
+#define OVER 515
+#define OVERLAPS 516
+#define OVERLAY 517
+#define OWNED 518
+#define OWNER 519
+#define PARSER 520
+#define PARTIAL 521
+#define PARTITION 522
+#define PASSWORD 523
+#define PLACING 524
+#define PLANS 525
+#define POSITION 526
+#define PRECEDING 527
+#define PRECISION 528
+#define PRESERVE 529
+#define PREPARE 530
+#define PREPARED 531
+#define PRIMARY 532
+#define PRIOR 533
+#define PRIVILEGES 534
+#define PROCEDURAL 535
+#define PROCEDURE 536
+#define QUOTE 537
+#define RANGE 538
+#define READ 539
+#define REAL 540
+#define REASSIGN 541
+#define RECHECK 542
+#define RECURSIVE 543
+#define REFERENCES 544
+#define REINDEX 545
+#define RELATIVE_P 546
+#define RELEASE 547
+#define RENAME 548
+#define REPEATABLE 549
+#define REPLACE 550
+#define REPLICA 551
+#define RESET 552
+#define RESTART 553
+#define RESTRICT 554
+#define RETURNING 555
+#define RETURNS 556
+#define REVOKE 557
+#define RIGHT 558
+#define ROLE 559
+#define ROLLBACK 560
+#define ROW 561
+#define ROWS 562
+#define RULE 563
+#define SAVEPOINT 564
+#define SCHEMA 565
+#define SCROLL 566
+#define SEARCH 567
+#define SECOND_P 568
+#define SECURITY 569
+#define SELECT 570
+#define SEQUENCE 571
+#define SEQUENCES 572
+#define SERIALIZABLE 573
+#define SERVER 574
+#define SESSION 575
+#define SESSION_USER 576
+#define SET 577
+#define SETOF 578
+#define SHARE 579
+#define SHOW 580
+#define SIMILAR 581
+#define SIMPLE 582
+#define SMALLINT 583
+#define SOME 584
+#define STABLE 585
+#define STANDALONE_P 586
+#define START 587
+#define STATEMENT 588
+#define STATISTICS 589
+#define STDIN 590
+#define STDOUT 591
+#define STORAGE 592
+#define STRICT_P 593
+#define STRIP_P 594
+#define SUBSTRING 595
+#define SUPERUSER_P 596
+#define SYMMETRIC 597
+#define SYSID 598
+#define SYSTEM_P 599
+#define TABLE 600
+#define TABLES 601
+#define TABLESPACE 602
+#define TEMP 603
+#define TEMPLATE 604
+#define TEMPORARY 605
+#define TEXT_P 606
+#define THEN 607
+#define TIME 608
+#define TIMESTAMP 609
+#define TO 610
+#define TRAILING 611
+#define TRANSACTION 612
+#define TREAT 613
+#define TRIGGER 614
+#define TRIM 615
+#define TRUE_P 616
+#define TRUNCATE 617
+#define TRUSTED 618
+#define TYPE_P 619
+#define UNBOUNDED 620
+#define UNCOMMITTED 621
+#define UNENCRYPTED 622
+#define UNION 623
+#define UNIQUE 624
+#define UNKNOWN 625
+#define UNLISTEN 626
+#define UNTIL 627
+#define UPDATE 628
+#define USER 629
+#define USING 630
+#define VACUUM 631
+#define VALID 632
+#define VALIDATOR 633
+#define VALUE_P 634
+#define VALUES 635
+#define VARCHAR 636
+#define VARIADIC 637
+#define VARYING 638
+#define VERBOSE 639
+#define VERSION_P 640
+#define VIEW 641
+#define VOLATILE 642
+#define WHEN 643
+#define WHERE 644
+#define WHITESPACE_P 645
+#define WINDOW 646
+#define WITH 647
+#define WITHOUT 648
+#define WORK 649
+#define WRAPPER 650
+#define WRITE 651
+#define XML_P 652
+#define XMLATTRIBUTES 653
+#define XMLCONCAT 654
+#define XMLELEMENT 655
+#define XMLFOREST 656
+#define XMLPARSE 657
+#define XMLPI 658
+#define XMLROOT 659
+#define XMLSERIALIZE 660
+#define YEAR_P 661
+#define YES_P 662
+#define ZONE 663
+#define NULLS_FIRST 664
+#define NULLS_LAST 665
+#define WITH_TIME 666
+#define POSTFIXOP 667
+#define UMINUS 668
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 144 "gram.y"
-
+{
 	core_YYSTYPE		core_yystype;
 	/* these fields must match core_YYSTYPE: */
 	int					ival;
@@ -494,15 +906,13 @@
 	AccessPriv			*accesspriv;
 	InsertStmt			*istmt;
 	VariableSetStmt		*vsetstmt;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 502 "gram.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 912 "gram.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
@@ -521,4 +931,3 @@
 #endif
 
 
-
diff -Naur postgresql-9.0.17/src/interfaces/ecpg/preproc/preproc.c postgresql/src/interfaces/ecpg/preproc/preproc.c
--- postgresql-9.0.17/src/interfaces/ecpg/preproc/preproc.c	2014-03-17 12:55:48.000000000 -0700
+++ postgresql/src/interfaces/ecpg/preproc/preproc.c	2014-03-31 18:07:18.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,512 +55,18 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 1
 
 /* Substitute the variable and function names.  */
-#define yyparse         base_yyparse
-#define yylex           base_yylex
-#define yyerror         base_yyerror
-#define yylval          base_yylval
-#define yychar          base_yychar
-#define yydebug         base_yydebug
-#define yynerrs         base_yynerrs
-#define yylloc          base_yylloc
-
-/* Copy the first part of user declarations.  */
-
-/* Line 268 of yacc.c  */
-#line 5 "preproc.y"
-
-#include "postgres_fe.h"
-
-#include "extern.h"
-#include "ecpg_config.h"
-#include <unistd.h>
-
-/* Location tracking support --- simpler than bison's default */
-#define YYLLOC_DEFAULT(Current, Rhs, N) \
-	do { \
-                if (N) \
-			(Current) = (Rhs)[1]; \
-		else \
-		        (Current) = (Rhs)[0]; \
-	} while (0)
-
-/*
- * The %name-prefix option below will make bison call base_yylex, but we
- * really want it to call filtered_base_yylex (see parser.c).
- */
-#define base_yylex filtered_base_yylex
-
-/*
- * This is only here so the string gets into the POT.  Bison uses it
- * internally.
- */
-#define bison_gettext_dummy gettext_noop("syntax error")
-
-/*
- * Variables containing simple states.
- */
-int struct_level = 0;
-int braces_open; /* brace level counter */
-char *current_function;
-int ecpg_internal_var = 0;
-char	*connection = NULL;
-char	*input_filename = NULL;
-
-static int	FoundInto = 0;
-static int	initializer = 0;
-static int	pacounter = 1;
-static char     pacounter_buffer[sizeof(int) * CHAR_BIT * 10 / 3]; /* a rough guess at the size we need */
-static struct this_type actual_type[STRUCT_DEPTH];
-static char *actual_startline[STRUCT_DEPTH];
-static int 	varchar_counter = 1;
-
-/* temporarily store struct members while creating the data structure */
-struct ECPGstruct_member *struct_member_list[STRUCT_DEPTH] = { NULL };
-
-/* also store struct type so we can do a sizeof() later */
-static char *ECPGstruct_sizeof = NULL;
-
-/* for forward declarations we have to store some data as well */
-static char *forward_name = NULL;
-
-struct ECPGtype ecpg_no_indicator = {ECPGt_NO_INDICATOR, NULL, NULL, NULL, {NULL}, 0};
-struct variable no_indicator = {"no_indicator", &ecpg_no_indicator, 0, NULL};
-
-struct ECPGtype ecpg_query = {ECPGt_char_variable, NULL, NULL, NULL, {NULL}, 0};
-
-/*
- * Handle parsing errors and warnings
- */
-void
-mmerror(int error_code, enum errortype type, const char *error, ...)
-{
-	va_list ap;
-
-	/* internationalize the error message string */
-	error = _(error);
-
-	fprintf(stderr, "%s:%d: ", input_filename, yylineno);
-
-	switch(type)
-	{
-		case ET_WARNING:
-			fprintf(stderr, _("WARNING: "));
-			break;
-		case ET_ERROR:
-		case ET_FATAL:
-			fprintf(stderr, _("ERROR: "));
-			break;
-	}
-
-	va_start(ap, error);
-	vfprintf(stderr, error, ap);
-	va_end(ap);
-
-	fprintf(stderr, "\n");
-
-	switch(type)
-	{
-		case ET_WARNING:
-			break;
-		case ET_ERROR:
-			ret_value = error_code;
-			break;
-		case ET_FATAL:
-			if (yyin)
-				fclose(yyin);
-			if (yyout)
-				fclose(yyout);
-			
-			if (strcmp(output_filename, "-") != 0 && unlink(output_filename) != 0)
-			        fprintf(stderr, _("could not remove output file \"%s\"\n"), output_filename);
-			exit(error_code);
-	}
-}
-
-/*
- * string concatenation
- */
-
-static char *
-cat2_str(char *str1, char *str2)
-{
-	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 2);
-
-	strcpy(res_str, str1);
-	if (strlen(str1) != 0 && strlen(str2) != 0)
-		strcat(res_str, " ");
-	strcat(res_str, str2);
-	free(str1);
-	free(str2);
-	return(res_str);
-}
-
-static char *
-cat_str(int count, ...)
-{
-	va_list		args;
-	int			i;
-	char		*res_str;
-
-	va_start(args, count);
-
-	res_str = va_arg(args, char *);
-
-	/* now add all other strings */
-	for (i = 1; i < count; i++)
-		res_str = cat2_str(res_str, va_arg(args, char *));
-
-	va_end(args);
-
-	return(res_str);
-}
-
-char *
-make_str(const char *str)
-{
-	char * res_str = (char *)mm_alloc(strlen(str) + 1);
-
-	strcpy(res_str, str);
-	return res_str;
-}
-
-static char *
-make2_str(char *str1, char *str2)
-{
-	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 1);
-
-	strcpy(res_str, str1);
-	strcat(res_str, str2);
-	free(str1);
-	free(str2);
-	return(res_str);
-}
-
-static char *
-make3_str(char *str1, char *str2, char *str3)
-{
-	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) +strlen(str3) + 1);
-
-	strcpy(res_str, str1);
-	strcat(res_str, str2);
-	strcat(res_str, str3);
-	free(str1);
-	free(str2);
-	free(str3);
-	return(res_str);
-}
-
-/* and the rest */
-static char *
-make_name(void)
-{
-	return mm_strdup(yytext);
-}
-
-static char *
-create_questionmarks(char *name, bool array)
-{
-	struct variable *p = find_variable(name);
-	int count;
-	char *result = EMPTY;
-
-	/* In case we have a struct, we have to print as many "?" as there are attributes in the struct
-	 * An array is only allowed together with an element argument
-	 * This is essantially only used for inserts, but using a struct as input parameter is an error anywhere else
-	 * so we don't have to worry here. */
-
-	if (p->type->type == ECPGt_struct || (array && p->type->type == ECPGt_array && p->type->u.element->type == ECPGt_struct))
-	{
-		struct ECPGstruct_member *m;
-
-		if (p->type->type == ECPGt_struct)
-			m = p->type->u.members;
-		else
-			m = p->type->u.element->u.members;
-
-		for (count = 0; m != NULL; m=m->next, count++);
-	}
-	else
-		count = 1;
-
-	for (; count > 0; count --)
-	{
-		sprintf(pacounter_buffer, "$%d", pacounter++);
-		result = cat_str(3, result, mm_strdup(pacounter_buffer), make_str(" , "));
-	}
-
-	/* removed the trailing " ," */
-
-	result[strlen(result)-3] = '\0';
-	return(result);
-}
-
-static char *
-adjust_outofscope_cursor_vars(struct cursor *cur)
-{
-	/* Informix accepts DECLARE with variables that are out of scope when OPEN is called.
-	 * For instance you can DECLARE a cursor in one function, and OPEN/FETCH/CLOSE
-	 * it in other functions. This is very useful for e.g. event-driver programming,
-	 * but may also lead to dangerous programming. The limitation when this is allowed
-	 * and doesn's cause problems have to be documented, like the allocated variables
-	 * must not be realloc()'ed.
-	 *
-	 * We have to change the variables to our own struct and just store the pointer
-	 * instead of the variable. Do it only for local variables, not for globals.
-	 */
-
-	char *result = make_str("");
-	int insert;
-
-	for (insert = 1; insert >= 0; insert--)
-	{
-		struct arguments *list;
-		struct arguments *ptr;
-		struct arguments *newlist = NULL;
-		struct variable *newvar, *newind;
-
-		list = (insert ? cur->argsinsert : cur->argsresult);
-
-		for (ptr = list; ptr != NULL; ptr = ptr->next)
-		{
-			char temp[20];
-			char *original_var;
-			bool skip_set_var = false;
-
-			/* change variable name to "ECPGget_var(<counter>)" */
-			original_var = ptr->variable->name;
-			sprintf(temp, "%d))", ecpg_internal_var);
-
-			/* Don't emit ECPGset_var() calls for global variables */
-			if (ptr->variable->brace_level == 0)
-			{
-				newvar = ptr->variable;
-				skip_set_var = true;
-			}
-			else if ((ptr->variable->type->type == ECPGt_char_variable) && (!strncmp(ptr->variable->name, "ECPGprepared_statement", strlen("ECPGprepared_statement"))))
-			{
-				newvar = ptr->variable;
-				skip_set_var = true;
-			}
-			else if ((ptr->variable->type->type != ECPGt_varchar && ptr->variable->type->type != ECPGt_char && ptr->variable->type->type != ECPGt_unsigned_char && ptr->variable->type->type != ECPGt_string) && atoi(ptr->variable->type->size) > 1)
-			{
-				newvar = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->variable->type->u.element->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type, make_str("1"), ptr->variable->type->u.element->counter), ptr->variable->type->size), 0);
-				sprintf(temp, "%d, (", ecpg_internal_var++);
-			}
-			else if ((ptr->variable->type->type == ECPGt_varchar || ptr->variable->type->type == ECPGt_char || ptr->variable->type->type == ECPGt_unsigned_char || ptr->variable->type->type == ECPGt_string) && atoi(ptr->variable->type->size) > 1)
-			{
-				newvar = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->variable->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_simple_type(ptr->variable->type->type, ptr->variable->type->size, ptr->variable->type->counter), 0);
-				if (ptr->variable->type->type == ECPGt_varchar)
-					sprintf(temp, "%d, &(", ecpg_internal_var++);
-				else
-					sprintf(temp, "%d, (", ecpg_internal_var++);
-			}
-			else if (ptr->variable->type->type == ECPGt_struct || ptr->variable->type->type == ECPGt_union)
-			{
-				sprintf(temp, "%d)))", ecpg_internal_var);
-				newvar = new_variable(cat_str(4, make_str("(*("), mm_strdup(ptr->variable->type->type_name), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_struct_type(ptr->variable->type->u.members, ptr->variable->type->type, ptr->variable->type->type_name, ptr->variable->type->struct_sizeof), 0);
-				sprintf(temp, "%d, &(", ecpg_internal_var++);
-			}
-			else if (ptr->variable->type->type == ECPGt_array)
-			{
-				if (ptr->variable->type->u.element->type == ECPGt_struct || ptr->variable->type->u.element->type == ECPGt_union)
-				{
-					sprintf(temp, "%d)))", ecpg_internal_var);
-					newvar = new_variable(cat_str(4, make_str("(*("), mm_strdup(ptr->variable->type->u.element->type_name), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_struct_type(ptr->variable->type->u.element->u.members, ptr->variable->type->u.element->type, ptr->variable->type->u.element->type_name, ptr->variable->type->u.element->struct_sizeof), 0);
-					sprintf(temp, "%d, (", ecpg_internal_var++);
-				}
-				else
-				{
-					newvar = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->variable->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type, ptr->variable->type->u.element->size, ptr->variable->type->u.element->counter), ptr->variable->type->size), 0);
-					sprintf(temp, "%d, &(", ecpg_internal_var++);
-				}
-			}
-			else
-			{
-				newvar = new_variable(cat_str(4, make_str("*("), mm_strdup(ecpg_type_name(ptr->variable->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_simple_type(ptr->variable->type->type, ptr->variable->type->size, ptr->variable->type->counter), 0);
-				sprintf(temp, "%d, &(", ecpg_internal_var++);
-			}
-
-			/* create call to "ECPGset_var(<counter>, <pointer>. <line number>)" */
-			if (!skip_set_var)
-				result = cat_str(5, result, make_str("ECPGset_var("), mm_strdup(temp), mm_strdup(original_var), make_str("), __LINE__);\n"));
-
-			/* now the indicator if there is one and it's not a global variable */
-			if ((ptr->indicator->type->type == ECPGt_NO_INDICATOR) || (ptr->indicator->brace_level == 0))
-			{
-				newind = ptr->indicator;
-			}
-			else
-			{
-				/* change variable name to "ECPGget_var(<counter>)" */
-				original_var = ptr->indicator->name;
-				sprintf(temp, "%d))", ecpg_internal_var);
-
-				if (ptr->indicator->type->type == ECPGt_struct || ptr->indicator->type->type == ECPGt_union)
-				{
-					sprintf(temp, "%d)))", ecpg_internal_var);
-					newind = new_variable(cat_str(4, make_str("(*("), mm_strdup(ptr->indicator->type->type_name), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_struct_type(ptr->indicator->type->u.members, ptr->indicator->type->type, ptr->indicator->type->type_name, ptr->indicator->type->struct_sizeof), 0);
-					sprintf(temp, "%d, &(", ecpg_internal_var++);
-				}
-				else if (ptr->indicator->type->type == ECPGt_array)
-				{
-					if (ptr->indicator->type->u.element->type == ECPGt_struct || ptr->indicator->type->u.element->type == ECPGt_union)
-					{
-						sprintf(temp, "%d)))", ecpg_internal_var);
-						newind = new_variable(cat_str(4, make_str("(*("), mm_strdup(ptr->indicator->type->u.element->type_name), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_struct_type(ptr->indicator->type->u.element->u.members, ptr->indicator->type->u.element->type, ptr->indicator->type->u.element->type_name, ptr->indicator->type->u.element->struct_sizeof), 0);
-						sprintf(temp, "%d, (", ecpg_internal_var++);
-					}
-					else
-					{
-						newind = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->indicator->type->u.element->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_array_type(ECPGmake_simple_type(ptr->indicator->type->u.element->type, ptr->indicator->type->u.element->size, ptr->indicator->type->u.element->counter), ptr->indicator->type->size), 0);
-						sprintf(temp, "%d, &(", ecpg_internal_var++);
-					}
-				}
-				else if (atoi(ptr->indicator->type->size) > 1)
-				{
-					newind = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->indicator->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_simple_type(ptr->indicator->type->type, ptr->indicator->type->size, ptr->variable->type->counter), 0);
-					sprintf(temp, "%d, (", ecpg_internal_var++);
-				}
-				else
-				{
-					newind = new_variable(cat_str(4, make_str("*("), mm_strdup(ecpg_type_name(ptr->indicator->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_simple_type(ptr->indicator->type->type, ptr->indicator->type->size, ptr->variable->type->counter), 0);
-					sprintf(temp, "%d, &(", ecpg_internal_var++);
-				}
-
-				/* create call to "ECPGset_var(<counter>, <pointer>. <line number>)" */
-				result = cat_str(5, result, make_str("ECPGset_var("), mm_strdup(temp), mm_strdup(original_var), make_str("), __LINE__);\n"));
-			}
-
-			add_variable_to_tail(&newlist, newvar, newind);
-		}
-
-		if (insert)
-			cur->argsinsert_oos = newlist;
-		else
-			cur->argsresult_oos = newlist;
-	}
-
-	return result;
-}
-
-/* This tests whether the cursor was declared and opened in the same function. */
-#define SAMEFUNC(cur)	\
-	((cur->function == NULL) ||		\
-	 (cur->function != NULL && !strcmp(cur->function, current_function)))
-
-static struct cursor *
-add_additional_variables(char *name, bool insert)
-{
-	struct cursor *ptr;
-	struct arguments *p;
-
-	for (ptr = cur; ptr != NULL; ptr=ptr->next)
-	{
-		if (strcmp(ptr->name, name) == 0)
-			break;
-	}
-
-	if (ptr == NULL)
-	{
-		mmerror(PARSE_ERROR, ET_ERROR, "cursor \"%s\" does not exist", name);
-		return NULL;
-	}
-
-	if (insert)
-	{
-		/* add all those input variables that were given earlier
-		 * note that we have to append here but have to keep the existing order */
-		for (p = (SAMEFUNC(ptr) ? ptr->argsinsert : ptr->argsinsert_oos); p; p = p->next)
-			add_variable_to_tail(&argsinsert, p->variable, p->indicator);
-	}
-
-	/* add all those output variables that were given earlier */
-	for (p = (SAMEFUNC(ptr) ? ptr->argsresult : ptr->argsresult_oos); p; p = p->next)
-		add_variable_to_tail(&argsresult, p->variable, p->indicator);
-
-	return ptr;
-}
-
-static void
-add_typedef(char *name, char * dimension, char * length, enum ECPGttype type_enum, char *type_dimension, char *type_index, int initializer, int array)
-{
-	/* add entry to list */
-	struct typedefs *ptr, *this;
-
-	if ((type_enum == ECPGt_struct ||
-	     type_enum == ECPGt_union) &&
-	    initializer == 1)
-		mmerror(PARSE_ERROR, ET_ERROR, "initializer not allowed in type definition");
-	else if (INFORMIX_MODE && strcmp(name, "string") == 0)
-		mmerror(PARSE_ERROR, ET_ERROR, "type name \"string\" is reserved in Informix mode");
-	else
-	{
-		for (ptr = types; ptr != NULL; ptr = ptr->next)
-		{
-			if (strcmp(name, ptr->name) == 0)
-				/* re-definition is a bug */
-				mmerror(PARSE_ERROR, ET_ERROR, "type \"%s\" is already defined", name);
-		}
-		adjust_array(type_enum, &dimension, &length, type_dimension, type_index, array, true);
-
-		this = (struct typedefs *) mm_alloc(sizeof(struct typedefs));
-
-		/* initial definition */
-		this->next = types;
-		this->name = name;
-		this->brace_level = braces_open;
-		this->type = (struct this_type *) mm_alloc(sizeof(struct this_type));
-		this->type->type_enum = type_enum;
-		this->type->type_str = mm_strdup(name);
-		this->type->type_dimension = dimension; /* dimension of array */
-		this->type->type_index = length;	/* length of string */
-		this->type->type_sizeof = ECPGstruct_sizeof;
-		this->struct_member_list = (type_enum == ECPGt_struct || type_enum == ECPGt_union) ?
-		ECPGstruct_member_dup(struct_member_list[struct_level]) : NULL;
-
-		if (type_enum != ECPGt_varchar &&
-			type_enum != ECPGt_char &&
-			type_enum != ECPGt_unsigned_char &&
-			type_enum != ECPGt_string &&
-			atoi(this->type->type_index) >= 0)
-			mmerror(PARSE_ERROR, ET_ERROR, "multidimensional arrays for simple data types are not supported");
-
-		types = this;
-	}
-}
-
-
-/* Line 268 of yacc.c  */
-#line 542 "preproc.c"
-
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-
-/* Enabling verbose error messages.  */
-#ifdef YYERROR_VERBOSE
-# undef YYERROR_VERBOSE
-# define YYERROR_VERBOSE 1
-#else
-# define YYERROR_VERBOSE 0
-#endif
-
-/* Enabling the token table.  */
-#ifndef YYTOKEN_TABLE
-# define YYTOKEN_TABLE 0
-#endif
-
+#define yyparse base_yyparse
+#define yylex   base_yylex
+#define yyerror base_yyerror
+#define yylval  base_yylval
+#define yychar  base_yychar
+#define yydebug base_yydebug
+#define yynerrs base_yynerrs
+#define yylloc base_yylloc
 
 /* Tokens.  */
 #ifndef YYTOKENTYPE
@@ -1055,16 +564,985 @@
      UMINUS = 745
    };
 #endif
+/* Tokens.  */
+#define SQL_ALLOCATE 258
+#define SQL_AUTOCOMMIT 259
+#define SQL_BOOL 260
+#define SQL_BREAK 261
+#define SQL_CALL 262
+#define SQL_CARDINALITY 263
+#define SQL_CONNECT 264
+#define SQL_COUNT 265
+#define SQL_DATETIME_INTERVAL_CODE 266
+#define SQL_DATETIME_INTERVAL_PRECISION 267
+#define SQL_DESCRIBE 268
+#define SQL_DESCRIPTOR 269
+#define SQL_DISCONNECT 270
+#define SQL_FOUND 271
+#define SQL_FREE 272
+#define SQL_GET 273
+#define SQL_GO 274
+#define SQL_GOTO 275
+#define SQL_IDENTIFIED 276
+#define SQL_INDICATOR 277
+#define SQL_KEY_MEMBER 278
+#define SQL_LENGTH 279
+#define SQL_LONG 280
+#define SQL_NULLABLE 281
+#define SQL_OCTET_LENGTH 282
+#define SQL_OPEN 283
+#define SQL_OUTPUT 284
+#define SQL_REFERENCE 285
+#define SQL_RETURNED_LENGTH 286
+#define SQL_RETURNED_OCTET_LENGTH 287
+#define SQL_SCALE 288
+#define SQL_SECTION 289
+#define SQL_SHORT 290
+#define SQL_SIGNED 291
+#define SQL_SQL 292
+#define SQL_SQLERROR 293
+#define SQL_SQLPRINT 294
+#define SQL_SQLWARNING 295
+#define SQL_START 296
+#define SQL_STOP 297
+#define SQL_STRUCT 298
+#define SQL_UNSIGNED 299
+#define SQL_VAR 300
+#define SQL_WHENEVER 301
+#define S_ADD 302
+#define S_AND 303
+#define S_ANYTHING 304
+#define S_AUTO 305
+#define S_CONST 306
+#define S_DEC 307
+#define S_DIV 308
+#define S_DOTPOINT 309
+#define S_EQUAL 310
+#define S_EXTERN 311
+#define S_INC 312
+#define S_LSHIFT 313
+#define S_MEMPOINT 314
+#define S_MEMBER 315
+#define S_MOD 316
+#define S_MUL 317
+#define S_NEQUAL 318
+#define S_OR 319
+#define S_REGISTER 320
+#define S_RSHIFT 321
+#define S_STATIC 322
+#define S_SUB 323
+#define S_VOLATILE 324
+#define S_TYPEDEF 325
+#define CSTRING 326
+#define CVARIABLE 327
+#define CPP_LINE 328
+#define IP 329
+#define DOLCONST 330
+#define ECONST 331
+#define NCONST 332
+#define UCONST 333
+#define UIDENT 334
+#define IDENT 335
+#define FCONST 336
+#define SCONST 337
+#define BCONST 338
+#define XCONST 339
+#define Op 340
+#define ICONST 341
+#define PARAM 342
+#define TYPECAST 343
+#define DOT_DOT 344
+#define COLON_EQUALS 345
+#define ABORT_P 346
+#define ABSOLUTE_P 347
+#define ACCESS 348
+#define ACTION 349
+#define ADD_P 350
+#define ADMIN 351
+#define AFTER 352
+#define AGGREGATE 353
+#define ALL 354
+#define ALSO 355
+#define ALTER 356
+#define ALWAYS 357
+#define ANALYSE 358
+#define ANALYZE 359
+#define AND 360
+#define ANY 361
+#define ARRAY 362
+#define AS 363
+#define ASC 364
+#define ASSERTION 365
+#define ASSIGNMENT 366
+#define ASYMMETRIC 367
+#define AT 368
+#define AUTHORIZATION 369
+#define BACKWARD 370
+#define BEFORE 371
+#define BEGIN_P 372
+#define BETWEEN 373
+#define BIGINT 374
+#define BINARY 375
+#define BIT 376
+#define BOOLEAN_P 377
+#define BOTH 378
+#define BY 379
+#define CACHE 380
+#define CALLED 381
+#define CASCADE 382
+#define CASCADED 383
+#define CASE 384
+#define CAST 385
+#define CATALOG_P 386
+#define CHAIN 387
+#define CHAR_P 388
+#define CHARACTER 389
+#define CHARACTERISTICS 390
+#define CHECK 391
+#define CHECKPOINT 392
+#define CLASS 393
+#define CLOSE 394
+#define CLUSTER 395
+#define COALESCE 396
+#define COLLATE 397
+#define COLUMN 398
+#define COMMENT 399
+#define COMMENTS 400
+#define COMMIT 401
+#define COMMITTED 402
+#define CONCURRENTLY 403
+#define CONFIGURATION 404
+#define CONNECTION 405
+#define CONSTRAINT 406
+#define CONSTRAINTS 407
+#define CONTENT_P 408
+#define CONTINUE_P 409
+#define CONVERSION_P 410
+#define COPY 411
+#define COST 412
+#define CREATE 413
+#define CREATEDB 414
+#define CREATEROLE 415
+#define CREATEUSER 416
+#define CROSS 417
+#define CSV 418
+#define CURRENT_P 419
+#define CURRENT_CATALOG 420
+#define CURRENT_DATE 421
+#define CURRENT_ROLE 422
+#define CURRENT_SCHEMA 423
+#define CURRENT_TIME 424
+#define CURRENT_TIMESTAMP 425
+#define CURRENT_USER 426
+#define CURSOR 427
+#define CYCLE 428
+#define DATA_P 429
+#define DATABASE 430
+#define DAY_P 431
+#define DEALLOCATE 432
+#define DEC 433
+#define DECIMAL_P 434
+#define DECLARE 435
+#define DEFAULT 436
+#define DEFAULTS 437
+#define DEFERRABLE 438
+#define DEFERRED 439
+#define DEFINER 440
+#define DELETE_P 441
+#define DELIMITER 442
+#define DELIMITERS 443
+#define DESC 444
+#define DICTIONARY 445
+#define DISABLE_P 446
+#define DISCARD 447
+#define DISTINCT 448
+#define DO 449
+#define DOCUMENT_P 450
+#define DOMAIN_P 451
+#define DOUBLE_P 452
+#define DROP 453
+#define EACH 454
+#define ELSE 455
+#define ENABLE_P 456
+#define ENCODING 457
+#define ENCRYPTED 458
+#define END_P 459
+#define ENUM_P 460
+#define ESCAPE 461
+#define EXCEPT 462
+#define EXCLUDE 463
+#define EXCLUDING 464
+#define EXCLUSIVE 465
+#define EXECUTE 466
+#define EXISTS 467
+#define EXPLAIN 468
+#define EXTERNAL 469
+#define EXTRACT 470
+#define FALSE_P 471
+#define FAMILY 472
+#define FETCH 473
+#define FIRST_P 474
+#define FLOAT_P 475
+#define FOLLOWING 476
+#define FOR 477
+#define FORCE 478
+#define FOREIGN 479
+#define FORWARD 480
+#define FREEZE 481
+#define FROM 482
+#define FULL 483
+#define FUNCTION 484
+#define FUNCTIONS 485
+#define GLOBAL 486
+#define GRANT 487
+#define GRANTED 488
+#define GREATEST 489
+#define GROUP_P 490
+#define HANDLER 491
+#define HAVING 492
+#define HEADER_P 493
+#define HOLD 494
+#define HOUR_P 495
+#define IDENTITY_P 496
+#define IF_P 497
+#define ILIKE 498
+#define IMMEDIATE 499
+#define IMMUTABLE 500
+#define IMPLICIT_P 501
+#define IN_P 502
+#define INCLUDING 503
+#define INCREMENT 504
+#define INDEX 505
+#define INDEXES 506
+#define INHERIT 507
+#define INHERITS 508
+#define INITIALLY 509
+#define INLINE_P 510
+#define INNER_P 511
+#define INOUT 512
+#define INPUT_P 513
+#define INSENSITIVE 514
+#define INSERT 515
+#define INSTEAD 516
+#define INT_P 517
+#define INTEGER 518
+#define INTERSECT 519
+#define INTERVAL 520
+#define INTO 521
+#define INVOKER 522
+#define IS 523
+#define ISNULL 524
+#define ISOLATION 525
+#define JOIN 526
+#define KEY 527
+#define LANGUAGE 528
+#define LARGE_P 529
+#define LAST_P 530
+#define LC_COLLATE_P 531
+#define LC_CTYPE_P 532
+#define LEADING 533
+#define LEAST 534
+#define LEFT 535
+#define LEVEL 536
+#define LIKE 537
+#define LIMIT 538
+#define LISTEN 539
+#define LOAD 540
+#define LOCAL 541
+#define LOCALTIME 542
+#define LOCALTIMESTAMP 543
+#define LOCATION 544
+#define LOCK_P 545
+#define LOGIN_P 546
+#define MAPPING 547
+#define MATCH 548
+#define MAXVALUE 549
+#define MINUTE_P 550
+#define MINVALUE 551
+#define MODE 552
+#define MONTH_P 553
+#define MOVE 554
+#define NAME_P 555
+#define NAMES 556
+#define NATIONAL 557
+#define NATURAL 558
+#define NCHAR 559
+#define NEXT 560
+#define NO 561
+#define NOCREATEDB 562
+#define NOCREATEROLE 563
+#define NOCREATEUSER 564
+#define NOINHERIT 565
+#define NOLOGIN_P 566
+#define NONE 567
+#define NOSUPERUSER 568
+#define NOT 569
+#define NOTHING 570
+#define NOTIFY 571
+#define NOTNULL 572
+#define NOWAIT 573
+#define NULL_P 574
+#define NULLIF 575
+#define NULLS_P 576
+#define NUMERIC 577
+#define OBJECT_P 578
+#define OF 579
+#define OFF 580
+#define OFFSET 581
+#define OIDS 582
+#define ON 583
+#define ONLY 584
+#define OPERATOR 585
+#define OPTION 586
+#define OPTIONS 587
+#define OR 588
+#define ORDER 589
+#define OUT_P 590
+#define OUTER_P 591
+#define OVER 592
+#define OVERLAPS 593
+#define OVERLAY 594
+#define OWNED 595
+#define OWNER 596
+#define PARSER 597
+#define PARTIAL 598
+#define PARTITION 599
+#define PASSWORD 600
+#define PLACING 601
+#define PLANS 602
+#define POSITION 603
+#define PRECEDING 604
+#define PRECISION 605
+#define PRESERVE 606
+#define PREPARE 607
+#define PREPARED 608
+#define PRIMARY 609
+#define PRIOR 610
+#define PRIVILEGES 611
+#define PROCEDURAL 612
+#define PROCEDURE 613
+#define QUOTE 614
+#define RANGE 615
+#define READ 616
+#define REAL 617
+#define REASSIGN 618
+#define RECHECK 619
+#define RECURSIVE 620
+#define REFERENCES 621
+#define REINDEX 622
+#define RELATIVE_P 623
+#define RELEASE 624
+#define RENAME 625
+#define REPEATABLE 626
+#define REPLACE 627
+#define REPLICA 628
+#define RESET 629
+#define RESTART 630
+#define RESTRICT 631
+#define RETURNING 632
+#define RETURNS 633
+#define REVOKE 634
+#define RIGHT 635
+#define ROLE 636
+#define ROLLBACK 637
+#define ROW 638
+#define ROWS 639
+#define RULE 640
+#define SAVEPOINT 641
+#define SCHEMA 642
+#define SCROLL 643
+#define SEARCH 644
+#define SECOND_P 645
+#define SECURITY 646
+#define SELECT 647
+#define SEQUENCE 648
+#define SEQUENCES 649
+#define SERIALIZABLE 650
+#define SERVER 651
+#define SESSION 652
+#define SESSION_USER 653
+#define SET 654
+#define SETOF 655
+#define SHARE 656
+#define SHOW 657
+#define SIMILAR 658
+#define SIMPLE 659
+#define SMALLINT 660
+#define SOME 661
+#define STABLE 662
+#define STANDALONE_P 663
+#define START 664
+#define STATEMENT 665
+#define STATISTICS 666
+#define STDIN 667
+#define STDOUT 668
+#define STORAGE 669
+#define STRICT_P 670
+#define STRIP_P 671
+#define SUBSTRING 672
+#define SUPERUSER_P 673
+#define SYMMETRIC 674
+#define SYSID 675
+#define SYSTEM_P 676
+#define TABLE 677
+#define TABLES 678
+#define TABLESPACE 679
+#define TEMP 680
+#define TEMPLATE 681
+#define TEMPORARY 682
+#define TEXT_P 683
+#define THEN 684
+#define TIME 685
+#define TIMESTAMP 686
+#define TO 687
+#define TRAILING 688
+#define TRANSACTION 689
+#define TREAT 690
+#define TRIGGER 691
+#define TRIM 692
+#define TRUE_P 693
+#define TRUNCATE 694
+#define TRUSTED 695
+#define TYPE_P 696
+#define UNBOUNDED 697
+#define UNCOMMITTED 698
+#define UNENCRYPTED 699
+#define UNION 700
+#define UNIQUE 701
+#define UNKNOWN 702
+#define UNLISTEN 703
+#define UNTIL 704
+#define UPDATE 705
+#define USER 706
+#define USING 707
+#define VACUUM 708
+#define VALID 709
+#define VALIDATOR 710
+#define VALUE_P 711
+#define VALUES 712
+#define VARCHAR 713
+#define VARIADIC 714
+#define VARYING 715
+#define VERBOSE 716
+#define VERSION_P 717
+#define VIEW 718
+#define VOLATILE 719
+#define WHEN 720
+#define WHERE 721
+#define WHITESPACE_P 722
+#define WINDOW 723
+#define WITH 724
+#define WITHOUT 725
+#define WORK 726
+#define WRAPPER 727
+#define WRITE 728
+#define XML_P 729
+#define XMLATTRIBUTES 730
+#define XMLCONCAT 731
+#define XMLELEMENT 732
+#define XMLFOREST 733
+#define XMLPARSE 734
+#define XMLPI 735
+#define XMLROOT 736
+#define XMLSERIALIZE 737
+#define YEAR_P 738
+#define YES_P 739
+#define ZONE 740
+#define NULLS_FIRST 741
+#define NULLS_LAST 742
+#define WITH_TIME 743
+#define POSTFIXOP 744
+#define UMINUS 745
+
+
+
+
+/* Copy the first part of user declarations.  */
+#line 5 "preproc.y"
+
+#include "postgres_fe.h"
+
+#include "extern.h"
+#include "ecpg_config.h"
+#include <unistd.h>
+
+/* Location tracking support --- simpler than bison's default */
+#define YYLLOC_DEFAULT(Current, Rhs, N) \
+	do { \
+                if (N) \
+			(Current) = (Rhs)[1]; \
+		else \
+		        (Current) = (Rhs)[0]; \
+	} while (0)
+
+/*
+ * The %name-prefix option below will make bison call base_yylex, but we
+ * really want it to call filtered_base_yylex (see parser.c).
+ */
+#define base_yylex filtered_base_yylex
+
+/*
+ * This is only here so the string gets into the POT.  Bison uses it
+ * internally.
+ */
+#define bison_gettext_dummy gettext_noop("syntax error")
+
+/*
+ * Variables containing simple states.
+ */
+int struct_level = 0;
+int braces_open; /* brace level counter */
+char *current_function;
+int ecpg_internal_var = 0;
+char	*connection = NULL;
+char	*input_filename = NULL;
+
+static int	FoundInto = 0;
+static int	initializer = 0;
+static int	pacounter = 1;
+static char     pacounter_buffer[sizeof(int) * CHAR_BIT * 10 / 3]; /* a rough guess at the size we need */
+static struct this_type actual_type[STRUCT_DEPTH];
+static char *actual_startline[STRUCT_DEPTH];
+static int 	varchar_counter = 1;
+
+/* temporarily store struct members while creating the data structure */
+struct ECPGstruct_member *struct_member_list[STRUCT_DEPTH] = { NULL };
+
+/* also store struct type so we can do a sizeof() later */
+static char *ECPGstruct_sizeof = NULL;
+
+/* for forward declarations we have to store some data as well */
+static char *forward_name = NULL;
+
+struct ECPGtype ecpg_no_indicator = {ECPGt_NO_INDICATOR, NULL, NULL, NULL, {NULL}, 0};
+struct variable no_indicator = {"no_indicator", &ecpg_no_indicator, 0, NULL};
+
+struct ECPGtype ecpg_query = {ECPGt_char_variable, NULL, NULL, NULL, {NULL}, 0};
+
+/*
+ * Handle parsing errors and warnings
+ */
+void
+mmerror(int error_code, enum errortype type, const char *error, ...)
+{
+	va_list ap;
+
+	/* internationalize the error message string */
+	error = _(error);
+
+	fprintf(stderr, "%s:%d: ", input_filename, yylineno);
+
+	switch(type)
+	{
+		case ET_WARNING:
+			fprintf(stderr, _("WARNING: "));
+			break;
+		case ET_ERROR:
+		case ET_FATAL:
+			fprintf(stderr, _("ERROR: "));
+			break;
+	}
+
+	va_start(ap, error);
+	vfprintf(stderr, error, ap);
+	va_end(ap);
+
+	fprintf(stderr, "\n");
+
+	switch(type)
+	{
+		case ET_WARNING:
+			break;
+		case ET_ERROR:
+			ret_value = error_code;
+			break;
+		case ET_FATAL:
+			if (yyin)
+				fclose(yyin);
+			if (yyout)
+				fclose(yyout);
+			
+			if (strcmp(output_filename, "-") != 0 && unlink(output_filename) != 0)
+			        fprintf(stderr, _("could not remove output file \"%s\"\n"), output_filename);
+			exit(error_code);
+	}
+}
+
+/*
+ * string concatenation
+ */
+
+static char *
+cat2_str(char *str1, char *str2)
+{
+	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 2);
+
+	strcpy(res_str, str1);
+	if (strlen(str1) != 0 && strlen(str2) != 0)
+		strcat(res_str, " ");
+	strcat(res_str, str2);
+	free(str1);
+	free(str2);
+	return(res_str);
+}
+
+static char *
+cat_str(int count, ...)
+{
+	va_list		args;
+	int			i;
+	char		*res_str;
+
+	va_start(args, count);
+
+	res_str = va_arg(args, char *);
+
+	/* now add all other strings */
+	for (i = 1; i < count; i++)
+		res_str = cat2_str(res_str, va_arg(args, char *));
+
+	va_end(args);
+
+	return(res_str);
+}
+
+char *
+make_str(const char *str)
+{
+	char * res_str = (char *)mm_alloc(strlen(str) + 1);
+
+	strcpy(res_str, str);
+	return res_str;
+}
+
+static char *
+make2_str(char *str1, char *str2)
+{
+	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 1);
+
+	strcpy(res_str, str1);
+	strcat(res_str, str2);
+	free(str1);
+	free(str2);
+	return(res_str);
+}
+
+static char *
+make3_str(char *str1, char *str2, char *str3)
+{
+	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) +strlen(str3) + 1);
+
+	strcpy(res_str, str1);
+	strcat(res_str, str2);
+	strcat(res_str, str3);
+	free(str1);
+	free(str2);
+	free(str3);
+	return(res_str);
+}
+
+/* and the rest */
+static char *
+make_name(void)
+{
+	return mm_strdup(yytext);
+}
+
+static char *
+create_questionmarks(char *name, bool array)
+{
+	struct variable *p = find_variable(name);
+	int count;
+	char *result = EMPTY;
+
+	/* In case we have a struct, we have to print as many "?" as there are attributes in the struct
+	 * An array is only allowed together with an element argument
+	 * This is essantially only used for inserts, but using a struct as input parameter is an error anywhere else
+	 * so we don't have to worry here. */
+
+	if (p->type->type == ECPGt_struct || (array && p->type->type == ECPGt_array && p->type->u.element->type == ECPGt_struct))
+	{
+		struct ECPGstruct_member *m;
+
+		if (p->type->type == ECPGt_struct)
+			m = p->type->u.members;
+		else
+			m = p->type->u.element->u.members;
+
+		for (count = 0; m != NULL; m=m->next, count++);
+	}
+	else
+		count = 1;
+
+	for (; count > 0; count --)
+	{
+		sprintf(pacounter_buffer, "$%d", pacounter++);
+		result = cat_str(3, result, mm_strdup(pacounter_buffer), make_str(" , "));
+	}
+
+	/* removed the trailing " ," */
+
+	result[strlen(result)-3] = '\0';
+	return(result);
+}
+
+static char *
+adjust_outofscope_cursor_vars(struct cursor *cur)
+{
+	/* Informix accepts DECLARE with variables that are out of scope when OPEN is called.
+	 * For instance you can DECLARE a cursor in one function, and OPEN/FETCH/CLOSE
+	 * it in other functions. This is very useful for e.g. event-driver programming,
+	 * but may also lead to dangerous programming. The limitation when this is allowed
+	 * and doesn's cause problems have to be documented, like the allocated variables
+	 * must not be realloc()'ed.
+	 *
+	 * We have to change the variables to our own struct and just store the pointer
+	 * instead of the variable. Do it only for local variables, not for globals.
+	 */
+
+	char *result = make_str("");
+	int insert;
+
+	for (insert = 1; insert >= 0; insert--)
+	{
+		struct arguments *list;
+		struct arguments *ptr;
+		struct arguments *newlist = NULL;
+		struct variable *newvar, *newind;
+
+		list = (insert ? cur->argsinsert : cur->argsresult);
+
+		for (ptr = list; ptr != NULL; ptr = ptr->next)
+		{
+			char temp[20];
+			char *original_var;
+			bool skip_set_var = false;
+
+			/* change variable name to "ECPGget_var(<counter>)" */
+			original_var = ptr->variable->name;
+			sprintf(temp, "%d))", ecpg_internal_var);
+
+			/* Don't emit ECPGset_var() calls for global variables */
+			if (ptr->variable->brace_level == 0)
+			{
+				newvar = ptr->variable;
+				skip_set_var = true;
+			}
+			else if ((ptr->variable->type->type == ECPGt_char_variable) && (!strncmp(ptr->variable->name, "ECPGprepared_statement", strlen("ECPGprepared_statement"))))
+			{
+				newvar = ptr->variable;
+				skip_set_var = true;
+			}
+			else if ((ptr->variable->type->type != ECPGt_varchar && ptr->variable->type->type != ECPGt_char && ptr->variable->type->type != ECPGt_unsigned_char && ptr->variable->type->type != ECPGt_string) && atoi(ptr->variable->type->size) > 1)
+			{
+				newvar = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->variable->type->u.element->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type, make_str("1"), ptr->variable->type->u.element->counter), ptr->variable->type->size), 0);
+				sprintf(temp, "%d, (", ecpg_internal_var++);
+			}
+			else if ((ptr->variable->type->type == ECPGt_varchar || ptr->variable->type->type == ECPGt_char || ptr->variable->type->type == ECPGt_unsigned_char || ptr->variable->type->type == ECPGt_string) && atoi(ptr->variable->type->size) > 1)
+			{
+				newvar = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->variable->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_simple_type(ptr->variable->type->type, ptr->variable->type->size, ptr->variable->type->counter), 0);
+				if (ptr->variable->type->type == ECPGt_varchar)
+					sprintf(temp, "%d, &(", ecpg_internal_var++);
+				else
+					sprintf(temp, "%d, (", ecpg_internal_var++);
+			}
+			else if (ptr->variable->type->type == ECPGt_struct || ptr->variable->type->type == ECPGt_union)
+			{
+				sprintf(temp, "%d)))", ecpg_internal_var);
+				newvar = new_variable(cat_str(4, make_str("(*("), mm_strdup(ptr->variable->type->type_name), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_struct_type(ptr->variable->type->u.members, ptr->variable->type->type, ptr->variable->type->type_name, ptr->variable->type->struct_sizeof), 0);
+				sprintf(temp, "%d, &(", ecpg_internal_var++);
+			}
+			else if (ptr->variable->type->type == ECPGt_array)
+			{
+				if (ptr->variable->type->u.element->type == ECPGt_struct || ptr->variable->type->u.element->type == ECPGt_union)
+				{
+					sprintf(temp, "%d)))", ecpg_internal_var);
+					newvar = new_variable(cat_str(4, make_str("(*("), mm_strdup(ptr->variable->type->u.element->type_name), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_struct_type(ptr->variable->type->u.element->u.members, ptr->variable->type->u.element->type, ptr->variable->type->u.element->type_name, ptr->variable->type->u.element->struct_sizeof), 0);
+					sprintf(temp, "%d, (", ecpg_internal_var++);
+				}
+				else
+				{
+					newvar = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->variable->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type, ptr->variable->type->u.element->size, ptr->variable->type->u.element->counter), ptr->variable->type->size), 0);
+					sprintf(temp, "%d, &(", ecpg_internal_var++);
+				}
+			}
+			else
+			{
+				newvar = new_variable(cat_str(4, make_str("*("), mm_strdup(ecpg_type_name(ptr->variable->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_simple_type(ptr->variable->type->type, ptr->variable->type->size, ptr->variable->type->counter), 0);
+				sprintf(temp, "%d, &(", ecpg_internal_var++);
+			}
+
+			/* create call to "ECPGset_var(<counter>, <pointer>. <line number>)" */
+			if (!skip_set_var)
+				result = cat_str(5, result, make_str("ECPGset_var("), mm_strdup(temp), mm_strdup(original_var), make_str("), __LINE__);\n"));
+
+			/* now the indicator if there is one and it's not a global variable */
+			if ((ptr->indicator->type->type == ECPGt_NO_INDICATOR) || (ptr->indicator->brace_level == 0))
+			{
+				newind = ptr->indicator;
+			}
+			else
+			{
+				/* change variable name to "ECPGget_var(<counter>)" */
+				original_var = ptr->indicator->name;
+				sprintf(temp, "%d))", ecpg_internal_var);
+
+				if (ptr->indicator->type->type == ECPGt_struct || ptr->indicator->type->type == ECPGt_union)
+				{
+					sprintf(temp, "%d)))", ecpg_internal_var);
+					newind = new_variable(cat_str(4, make_str("(*("), mm_strdup(ptr->indicator->type->type_name), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_struct_type(ptr->indicator->type->u.members, ptr->indicator->type->type, ptr->indicator->type->type_name, ptr->indicator->type->struct_sizeof), 0);
+					sprintf(temp, "%d, &(", ecpg_internal_var++);
+				}
+				else if (ptr->indicator->type->type == ECPGt_array)
+				{
+					if (ptr->indicator->type->u.element->type == ECPGt_struct || ptr->indicator->type->u.element->type == ECPGt_union)
+					{
+						sprintf(temp, "%d)))", ecpg_internal_var);
+						newind = new_variable(cat_str(4, make_str("(*("), mm_strdup(ptr->indicator->type->u.element->type_name), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_struct_type(ptr->indicator->type->u.element->u.members, ptr->indicator->type->u.element->type, ptr->indicator->type->u.element->type_name, ptr->indicator->type->u.element->struct_sizeof), 0);
+						sprintf(temp, "%d, (", ecpg_internal_var++);
+					}
+					else
+					{
+						newind = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->indicator->type->u.element->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_array_type(ECPGmake_simple_type(ptr->indicator->type->u.element->type, ptr->indicator->type->u.element->size, ptr->indicator->type->u.element->counter), ptr->indicator->type->size), 0);
+						sprintf(temp, "%d, &(", ecpg_internal_var++);
+					}
+				}
+				else if (atoi(ptr->indicator->type->size) > 1)
+				{
+					newind = new_variable(cat_str(4, make_str("("), mm_strdup(ecpg_type_name(ptr->indicator->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_simple_type(ptr->indicator->type->type, ptr->indicator->type->size, ptr->variable->type->counter), 0);
+					sprintf(temp, "%d, (", ecpg_internal_var++);
+				}
+				else
+				{
+					newind = new_variable(cat_str(4, make_str("*("), mm_strdup(ecpg_type_name(ptr->indicator->type->type)), make_str(" *)(ECPGget_var("), mm_strdup(temp)), ECPGmake_simple_type(ptr->indicator->type->type, ptr->indicator->type->size, ptr->variable->type->counter), 0);
+					sprintf(temp, "%d, &(", ecpg_internal_var++);
+				}
+
+				/* create call to "ECPGset_var(<counter>, <pointer>. <line number>)" */
+				result = cat_str(5, result, make_str("ECPGset_var("), mm_strdup(temp), mm_strdup(original_var), make_str("), __LINE__);\n"));
+			}
+
+			add_variable_to_tail(&newlist, newvar, newind);
+		}
+
+		if (insert)
+			cur->argsinsert_oos = newlist;
+		else
+			cur->argsresult_oos = newlist;
+	}
+
+	return result;
+}
+
+/* This tests whether the cursor was declared and opened in the same function. */
+#define SAMEFUNC(cur)	\
+	((cur->function == NULL) ||		\
+	 (cur->function != NULL && !strcmp(cur->function, current_function)))
+
+static struct cursor *
+add_additional_variables(char *name, bool insert)
+{
+	struct cursor *ptr;
+	struct arguments *p;
+
+	for (ptr = cur; ptr != NULL; ptr=ptr->next)
+	{
+		if (strcmp(ptr->name, name) == 0)
+			break;
+	}
+
+	if (ptr == NULL)
+	{
+		mmerror(PARSE_ERROR, ET_ERROR, "cursor \"%s\" does not exist", name);
+		return NULL;
+	}
+
+	if (insert)
+	{
+		/* add all those input variables that were given earlier
+		 * note that we have to append here but have to keep the existing order */
+		for (p = (SAMEFUNC(ptr) ? ptr->argsinsert : ptr->argsinsert_oos); p; p = p->next)
+			add_variable_to_tail(&argsinsert, p->variable, p->indicator);
+	}
+
+	/* add all those output variables that were given earlier */
+	for (p = (SAMEFUNC(ptr) ? ptr->argsresult : ptr->argsresult_oos); p; p = p->next)
+		add_variable_to_tail(&argsresult, p->variable, p->indicator);
+
+	return ptr;
+}
+
+static void
+add_typedef(char *name, char * dimension, char * length, enum ECPGttype type_enum, char *type_dimension, char *type_index, int initializer, int array)
+{
+	/* add entry to list */
+	struct typedefs *ptr, *this;
+
+	if ((type_enum == ECPGt_struct ||
+	     type_enum == ECPGt_union) &&
+	    initializer == 1)
+		mmerror(PARSE_ERROR, ET_ERROR, "initializer not allowed in type definition");
+	else if (INFORMIX_MODE && strcmp(name, "string") == 0)
+		mmerror(PARSE_ERROR, ET_ERROR, "type name \"string\" is reserved in Informix mode");
+	else
+	{
+		for (ptr = types; ptr != NULL; ptr = ptr->next)
+		{
+			if (strcmp(name, ptr->name) == 0)
+				/* re-definition is a bug */
+				mmerror(PARSE_ERROR, ET_ERROR, "type \"%s\" is already defined", name);
+		}
+		adjust_array(type_enum, &dimension, &length, type_dimension, type_index, array, true);
+
+		this = (struct typedefs *) mm_alloc(sizeof(struct typedefs));
+
+		/* initial definition */
+		this->next = types;
+		this->name = name;
+		this->brace_level = braces_open;
+		this->type = (struct this_type *) mm_alloc(sizeof(struct this_type));
+		this->type->type_enum = type_enum;
+		this->type->type_str = mm_strdup(name);
+		this->type->type_dimension = dimension; /* dimension of array */
+		this->type->type_index = length;	/* length of string */
+		this->type->type_sizeof = ECPGstruct_sizeof;
+		this->struct_member_list = (type_enum == ECPGt_struct || type_enum == ECPGt_union) ?
+		ECPGstruct_member_dup(struct_member_list[struct_level]) : NULL;
+
+		if (type_enum != ECPGt_varchar &&
+			type_enum != ECPGt_char &&
+			type_enum != ECPGt_unsigned_char &&
+			type_enum != ECPGt_string &&
+			atoi(this->type->type_index) >= 0)
+			mmerror(PARSE_ERROR, ET_ERROR, "multidimensional arrays for simple data types are not supported");
+
+		types = this;
+	}
+}
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
 
-
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 471 "preproc.y"
-
+{
 	double	dval;
 	char	*str;
 	int     ival;
@@ -1077,15 +1555,13 @@
 	struct	fetch_desc	descriptor;
 	struct  su_symbol	struct_union;
 	struct	prep		prep;
-
-
-
-/* Line 293 of yacc.c  */
-#line 1085 "preproc.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 1561 "preproc.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
@@ -1105,8 +1581,8 @@
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 1110 "preproc.c"
+/* Line 216 of yacc.c.  */
+#line 1586 "preproc.tab.c"
 
 #ifdef short
 # undef short
@@ -1181,14 +1657,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -1209,11 +1685,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -1236,24 +1712,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -1270,9 +1746,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-  YYLTYPE yyls_alloc;
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+    YYLTYPE yyls;
 };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
@@ -1284,27 +1760,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
       + 2 * YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -1322,7 +1777,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
@@ -3004,19 +3476,19 @@
   "attr_name", "index_name", "file_name", "func_name", "AexprConst",
   "Iconst", "RoleId", "role_list", "SignedIconst", "NonReservedWord",
   "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
-  "reserved_keyword", "statements", "statement", "CreateAsStmt", "$@1",
+  "reserved_keyword", "statements", "statement", "CreateAsStmt", "@1",
   "at", "ECPGConnect", "connection_target", "opt_database_name",
   "db_prefix", "server", "opt_server", "server_name", "opt_port",
   "opt_connection_name", "opt_user", "ora_user", "user_name",
   "char_variable", "opt_options", "connect_options", "opt_opt_value",
   "prepared_name", "ECPGCursorStmt", "ECPGExecuteImmediateStmt",
   "ECPGVarDeclaration", "single_vt_declaration", "precision", "opt_scale",
-  "ecpg_interval", "ECPGDeclaration", "$@2", "sql_startdeclare",
+  "ecpg_interval", "ECPGDeclaration", "@2", "sql_startdeclare",
   "sql_enddeclare", "var_type_declarations", "vt_declarations",
-  "variable_declarations", "type_declaration", "$@3", "var_declaration",
-  "$@4", "$@5", "opt_bit_field", "storage_declaration", "storage_clause",
+  "variable_declarations", "type_declaration", "@3", "var_declaration",
+  "@4", "@5", "opt_bit_field", "storage_declaration", "storage_clause",
   "storage_modifier", "var_type", "enum_type", "enum_definition",
-  "struct_union_type_with_symbol", "$@6", "struct_union_type", "$@7",
+  "struct_union_type_with_symbol", "@6", "struct_union_type", "@7",
   "s_struct_union_symbol", "s_struct_union", "simple_type",
   "unsigned_type", "signed_type", "opt_signed", "variable_list",
   "variable", "opt_initializer", "opt_pointer", "ECPGDeclare",
@@ -3031,8 +3503,8 @@
   "ECPGGetDescriptor", "ECPGGetDescItems", "ECPGGetDescItem",
   "ECPGSetDescriptor", "ECPGSetDescItems", "ECPGSetDescItem",
   "AllConstVar", "descriptor_item", "ECPGSetAutocommit", "on_off",
-  "ECPGSetConnection", "ECPGTypedef", "$@8", "opt_reference", "ECPGVar",
-  "$@9", "ECPGWhenever", "action", "ECPGKeywords", "ECPGKeywords_vanames",
+  "ECPGSetConnection", "ECPGTypedef", "@8", "opt_reference", "ECPGVar",
+  "@9", "ECPGWhenever", "action", "ECPGKeywords", "ECPGKeywords_vanames",
   "ECPGKeywords_rest", "ECPGTypeName", "symbol", "ECPGColId", "ColId",
   "type_function_name", "ColLabel", "ECPGColLabel", "ECPGColLabelCommon",
   "ECPGCKeywords", "all_unreserved_keyword", "ECPGunreserved_interval",
@@ -3628,8 +4100,8 @@
        1,     1,     2,     1,     1,     1,     0,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint16 yydefact[] =
 {
@@ -4686,7 +5158,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -2409
 static const yytype_int16 yytable[] =
 {
@@ -14435,12 +14908,6 @@
      240,   241,   242,   243,   244,   245,     0,   645,   646
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-4055))
-
-#define yytable_value_is_error(yytable_value) \
-  ((yytable_value) == (-2409))
-
 static const yytype_int16 yycheck[] =
 {
        2,   117,    78,   246,    78,   117,    78,    78,   167,   210,
@@ -24656,18 +25123,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -24677,6 +25135,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -24839,20 +25298,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -24887,11 +25343,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -24928,6 +25384,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -25030,142 +25487,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -25199,9 +25629,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -25217,17 +25648,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
-/* Location data for the lookahead symbol.  */
-YYLTYPE yylloc;
-
 /* Number of syntax errors so far.  */
 int yynerrs;
+/* Location data for the look-ahead symbol.  */
+YYLTYPE yylloc;
+
 
 
 /*----------.
@@ -25256,47 +25688,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-       `yyls': related to locations.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    /* The location stack.  */
-    YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls;
-    YYLTYPE *yylsp;
-
-    /* The locations where the error started and ended.  */
-    YYLTYPE yyerror_range[3];
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-  YYLTYPE yyloc;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -25304,37 +25703,63 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+  /* The location stack.  */
+  YYLTYPE yylsa[YYINITDEPTH];
+  YYLTYPE *yyls = yylsa;
+  YYLTYPE *yylsp;
+  /* The locations where the error started and ended.  */
+  YYLTYPE yyerror_range[2];
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+  YYLTYPE yyloc;
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yyls = yylsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
   yylsp = yyls;
-
 #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
   /* Initialize the default location before parsing starts.  */
   yylloc.first_line   = yylloc.last_line   = 1;
-  yylloc.first_column = yylloc.last_column = 1;
+  yylloc.first_column = yylloc.last_column = 0;
 #endif
 
   goto yysetstate;
@@ -25373,7 +25798,6 @@
 		    &yyvs1, yysize * sizeof (*yyvsp),
 		    &yyls1, yysize * sizeof (*yylsp),
 		    &yystacksize);
-
 	yyls = yyls1;
 	yyss = yyss1;
 	yyvs = yyvs1;
@@ -25395,9 +25819,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
-	YYSTACK_RELOCATE (yyls_alloc, yyls);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+	YYSTACK_RELOCATE (yyls);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -25418,9 +25842,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -25429,16 +25850,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -25464,22 +25885,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -25520,155 +25945,111 @@
   switch (yyn)
     {
         case 3:
-
-/* Line 1806 of yacc.c  */
 #line 1346 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 1348 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 1350 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 1352 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 1354 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 1356 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 1358 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 10:
-
-/* Line 1806 of yacc.c  */
 #line 1360 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 1362 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 1364 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 1366 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 1368 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 1370 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 1372 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 1374 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 1376 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 1378 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 1380 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 1382 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 1384 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 1386 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 1388 "preproc.y"
     {
 		if (INFORMIX_MODE)
@@ -25686,594 +26067,430 @@
 		}
 
 		output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal);
-	}
+	;}
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 1406 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 1408 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 1410 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 1412 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 1414 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 1416 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 1418 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 1420 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 1422 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 34:
-
-/* Line 1806 of yacc.c  */
 #line 1424 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 35:
-
-/* Line 1806 of yacc.c  */
 #line 1426 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 1428 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 37:
-
-/* Line 1806 of yacc.c  */
 #line 1430 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 38:
-
-/* Line 1806 of yacc.c  */
 #line 1432 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 1434 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 1436 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 1438 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 1440 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 43:
-
-/* Line 1806 of yacc.c  */
 #line 1442 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 44:
-
-/* Line 1806 of yacc.c  */
 #line 1444 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 45:
-
-/* Line 1806 of yacc.c  */
 #line 1446 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 1448 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 47:
-
-/* Line 1806 of yacc.c  */
 #line 1450 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 48:
-
-/* Line 1806 of yacc.c  */
 #line 1452 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 49:
-
-/* Line 1806 of yacc.c  */
 #line 1454 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 50:
-
-/* Line 1806 of yacc.c  */
 #line 1456 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 51:
-
-/* Line 1806 of yacc.c  */
 #line 1458 "preproc.y"
     {
 		output_deallocate_prepare_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 52:
-
-/* Line 1806 of yacc.c  */
 #line 1462 "preproc.y"
-    { output_simple_statement((yyvsp[(1) - (1)].str)); }
+    { output_simple_statement((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 53:
-
-/* Line 1806 of yacc.c  */
 #line 1464 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 54:
-
-/* Line 1806 of yacc.c  */
 #line 1466 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 55:
-
-/* Line 1806 of yacc.c  */
 #line 1468 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); ;}
     break;
 
   case 56:
-
-/* Line 1806 of yacc.c  */
 #line 1470 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 57:
-
-/* Line 1806 of yacc.c  */
 #line 1472 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 58:
-
-/* Line 1806 of yacc.c  */
 #line 1474 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 59:
-
-/* Line 1806 of yacc.c  */
 #line 1476 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 60:
-
-/* Line 1806 of yacc.c  */
 #line 1478 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 61:
-
-/* Line 1806 of yacc.c  */
 #line 1480 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 62:
-
-/* Line 1806 of yacc.c  */
 #line 1482 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 63:
-
-/* Line 1806 of yacc.c  */
 #line 1484 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 64:
-
-/* Line 1806 of yacc.c  */
 #line 1486 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 65:
-
-/* Line 1806 of yacc.c  */
 #line 1488 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 66:
-
-/* Line 1806 of yacc.c  */
 #line 1490 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 67:
-
-/* Line 1806 of yacc.c  */
 #line 1492 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 68:
-
-/* Line 1806 of yacc.c  */
 #line 1494 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 69:
-
-/* Line 1806 of yacc.c  */
 #line 1496 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 70:
-
-/* Line 1806 of yacc.c  */
 #line 1498 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 71:
-
-/* Line 1806 of yacc.c  */
 #line 1500 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 72:
-
-/* Line 1806 of yacc.c  */
 #line 1502 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 73:
-
-/* Line 1806 of yacc.c  */
 #line 1504 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 74:
-
-/* Line 1806 of yacc.c  */
 #line 1506 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_execute); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_execute); ;}
     break;
 
   case 75:
-
-/* Line 1806 of yacc.c  */
 #line 1508 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 76:
-
-/* Line 1806 of yacc.c  */
 #line 1510 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); ;}
     break;
 
   case 77:
-
-/* Line 1806 of yacc.c  */
 #line 1512 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 78:
-
-/* Line 1806 of yacc.c  */
 #line 1514 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 79:
-
-/* Line 1806 of yacc.c  */
 #line 1516 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 80:
-
-/* Line 1806 of yacc.c  */
 #line 1518 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 81:
-
-/* Line 1806 of yacc.c  */
 #line 1520 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 82:
-
-/* Line 1806 of yacc.c  */
 #line 1522 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 83:
-
-/* Line 1806 of yacc.c  */
 #line 1524 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 84:
-
-/* Line 1806 of yacc.c  */
 #line 1526 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 85:
-
-/* Line 1806 of yacc.c  */
 #line 1528 "preproc.y"
     {
 		if ((yyvsp[(1) - (1)].prep).type == NULL || strlen((yyvsp[(1) - (1)].prep).type) == 0)
 			output_prepare_statement((yyvsp[(1) - (1)].prep).name, (yyvsp[(1) - (1)].prep).stmt);
 		else	
 			output_statement(cat_str(5, make_str("prepare"), (yyvsp[(1) - (1)].prep).name, (yyvsp[(1) - (1)].prep).type, make_str("as"), (yyvsp[(1) - (1)].prep).stmt), 0, ECPGst_normal);
-	}
+	;}
     break;
 
   case 86:
-
-/* Line 1806 of yacc.c  */
 #line 1535 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 87:
-
-/* Line 1806 of yacc.c  */
 #line 1537 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 88:
-
-/* Line 1806 of yacc.c  */
 #line 1539 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 89:
-
-/* Line 1806 of yacc.c  */
 #line 1541 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 90:
-
-/* Line 1806 of yacc.c  */
 #line 1543 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 91:
-
-/* Line 1806 of yacc.c  */
 #line 1545 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 92:
-
-/* Line 1806 of yacc.c  */
 #line 1547 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 93:
-
-/* Line 1806 of yacc.c  */
 #line 1549 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 94:
-
-/* Line 1806 of yacc.c  */
 #line 1551 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 95:
-
-/* Line 1806 of yacc.c  */
 #line 1553 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 96:
-
-/* Line 1806 of yacc.c  */
 #line 1555 "preproc.y"
     {
 		fprintf(yyout, "{ ECPGtrans(__LINE__, %s, \"%s\");", connection ? connection : "NULL", (yyvsp[(1) - (1)].str));
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 97:
-
-/* Line 1806 of yacc.c  */
 #line 1561 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 98:
-
-/* Line 1806 of yacc.c  */
 #line 1563 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 99:
-
-/* Line 1806 of yacc.c  */
 #line 1565 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 100:
-
-/* Line 1806 of yacc.c  */
 #line 1567 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 101:
-
-/* Line 1806 of yacc.c  */
 #line 1569 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 102:
-
-/* Line 1806 of yacc.c  */
 #line 1571 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 103:
-
-/* Line 1806 of yacc.c  */
 #line 1573 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 104:
-
-/* Line 1806 of yacc.c  */
 #line 1575 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 105:
-
-/* Line 1806 of yacc.c  */
 #line 1577 "preproc.y"
     {
 		fprintf(yyout,"ECPGallocate_desc(__LINE__, %s);",(yyvsp[(1) - (1)].str));
 		whenever_action(0);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 106:
-
-/* Line 1806 of yacc.c  */
 #line 1583 "preproc.y"
     {
 		if (connection)
@@ -26283,41 +26500,33 @@
 		reset_variables();
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 107:
-
-/* Line 1806 of yacc.c  */
 #line 1593 "preproc.y"
     {
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 108:
-
-/* Line 1806 of yacc.c  */
 #line 1597 "preproc.y"
     {
 		fprintf(yyout,"ECPGdeallocate_desc(__LINE__, %s);",(yyvsp[(1) - (1)].str));
 		whenever_action(0);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 109:
-
-/* Line 1806 of yacc.c  */
 #line 1603 "preproc.y"
     {
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 110:
-
-/* Line 1806 of yacc.c  */
 #line 1607 "preproc.y"
     {
 		fprintf(yyout, "{ ECPGdescribe(__LINE__, %d, %s,", compat, (yyvsp[(1) - (1)].str));
@@ -26327,12 +26536,10 @@
 		output_line_number();
 
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 111:
-
-/* Line 1806 of yacc.c  */
 #line 1617 "preproc.y"
     {
 		if (connection)
@@ -26342,19 +26549,15 @@
 				(yyvsp[(1) - (1)].str) ? (yyvsp[(1) - (1)].str) : "\"CURRENT\"");
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 112:
-
-/* Line 1806 of yacc.c  */
 #line 1626 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_exec_immediate); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_exec_immediate); ;}
     break;
 
   case 113:
-
-/* Line 1806 of yacc.c  */
 #line 1628 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
@@ -26368,35 +26571,29 @@
 
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 114:
-
-/* Line 1806 of yacc.c  */
 #line 1642 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].descriptor).name, connection);
 		output_get_descr((yyvsp[(1) - (1)].descriptor).name, (yyvsp[(1) - (1)].descriptor).str);
 		free((yyvsp[(1) - (1)].descriptor).name);
 		free((yyvsp[(1) - (1)].descriptor).str);
-	}
+	;}
     break;
 
   case 115:
-
-/* Line 1806 of yacc.c  */
 #line 1649 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].str), connection);
 		output_get_descr_header((yyvsp[(1) - (1)].str));
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 116:
-
-/* Line 1806 of yacc.c  */
 #line 1655 "preproc.y"
     {
 		struct cursor *ptr;
@@ -26407,23 +26604,19 @@
 			output_statement(mm_strdup(ptr->command), 0, ECPGst_normal);
 			ptr->opened = true;
 		}
-	}
+	;}
     break;
 
   case 117:
-
-/* Line 1806 of yacc.c  */
 #line 1666 "preproc.y"
     {
 		fprintf(yyout, "{ ECPGsetcommit(__LINE__, \"%s\", %s);", (yyvsp[(1) - (1)].str), connection ? connection : "NULL");
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 118:
-
-/* Line 1806 of yacc.c  */
 #line 1672 "preproc.y"
     {
 		if (connection)
@@ -26432,35 +26625,29 @@
 		fprintf(yyout, "{ ECPGsetconn(__LINE__, %s);", (yyvsp[(1) - (1)].str));
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 119:
-
-/* Line 1806 of yacc.c  */
 #line 1681 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].descriptor).name, connection);
 		output_set_descr((yyvsp[(1) - (1)].descriptor).name, (yyvsp[(1) - (1)].descriptor).str);
 		free((yyvsp[(1) - (1)].descriptor).name);
 		free((yyvsp[(1) - (1)].descriptor).str);
-	}
+	;}
     break;
 
   case 120:
-
-/* Line 1806 of yacc.c  */
 #line 1688 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].str), connection);
 		output_set_descr_header((yyvsp[(1) - (1)].str));
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 121:
-
-/* Line 1806 of yacc.c  */
 #line 1694 "preproc.y"
     {
 		if (connection)
@@ -26469,794 +26656,618 @@
 		fprintf(yyout, "%s", (yyvsp[(1) - (1)].str));
 		free((yyvsp[(1) - (1)].str));
 		output_line_number();
-	}
+	;}
     break;
 
   case 122:
-
-/* Line 1806 of yacc.c  */
 #line 1703 "preproc.y"
     {
 		if (connection)
 			mmerror(PARSE_ERROR, ET_ERROR, "AT option not allowed in VAR statement");
 
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 123:
-
-/* Line 1806 of yacc.c  */
 #line 1710 "preproc.y"
     {
 		if (connection)
 			mmerror(PARSE_ERROR, ET_ERROR, "AT option not allowed in WHENEVER statement");
 
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 124:
-
-/* Line 1806 of yacc.c  */
 #line 1717 "preproc.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 125:
-
-/* Line 1806 of yacc.c  */
 #line 1723 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("create role"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 126:
-
-/* Line 1806 of yacc.c  */
 #line 1731 "preproc.y"
     { 
  (yyval.str) = make_str("with");
-}
+;}
     break;
 
   case 127:
-
-/* Line 1806 of yacc.c  */
 #line 1735 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 128:
-
-/* Line 1806 of yacc.c  */
 #line 1742 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 129:
-
-/* Line 1806 of yacc.c  */
 #line 1746 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 130:
-
-/* Line 1806 of yacc.c  */
 #line 1753 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 131:
-
-/* Line 1806 of yacc.c  */
 #line 1757 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 132:
-
-/* Line 1806 of yacc.c  */
 #line 1764 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("password"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 133:
-
-/* Line 1806 of yacc.c  */
 #line 1768 "preproc.y"
     { 
  (yyval.str) = make_str("password null");
-}
+;}
     break;
 
   case 134:
-
-/* Line 1806 of yacc.c  */
 #line 1772 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("encrypted password"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 135:
-
-/* Line 1806 of yacc.c  */
 #line 1776 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("unencrypted password"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 136:
-
-/* Line 1806 of yacc.c  */
 #line 1780 "preproc.y"
     { 
  (yyval.str) = make_str("superuser");
-}
+;}
     break;
 
   case 137:
-
-/* Line 1806 of yacc.c  */
 #line 1784 "preproc.y"
     { 
  (yyval.str) = make_str("nosuperuser");
-}
+;}
     break;
 
   case 138:
-
-/* Line 1806 of yacc.c  */
 #line 1788 "preproc.y"
     { 
  (yyval.str) = make_str("inherit");
-}
+;}
     break;
 
   case 139:
-
-/* Line 1806 of yacc.c  */
 #line 1792 "preproc.y"
     { 
  (yyval.str) = make_str("noinherit");
-}
+;}
     break;
 
   case 140:
-
-/* Line 1806 of yacc.c  */
 #line 1796 "preproc.y"
     { 
  (yyval.str) = make_str("createdb");
-}
+;}
     break;
 
   case 141:
-
-/* Line 1806 of yacc.c  */
 #line 1800 "preproc.y"
     { 
  (yyval.str) = make_str("nocreatedb");
-}
+;}
     break;
 
   case 142:
-
-/* Line 1806 of yacc.c  */
 #line 1804 "preproc.y"
     { 
  (yyval.str) = make_str("createrole");
-}
+;}
     break;
 
   case 143:
-
-/* Line 1806 of yacc.c  */
 #line 1808 "preproc.y"
     { 
  (yyval.str) = make_str("nocreaterole");
-}
+;}
     break;
 
   case 144:
-
-/* Line 1806 of yacc.c  */
 #line 1812 "preproc.y"
     { 
  (yyval.str) = make_str("createuser");
-}
+;}
     break;
 
   case 145:
-
-/* Line 1806 of yacc.c  */
 #line 1816 "preproc.y"
     { 
  (yyval.str) = make_str("nocreateuser");
-}
+;}
     break;
 
   case 146:
-
-/* Line 1806 of yacc.c  */
 #line 1820 "preproc.y"
     { 
  (yyval.str) = make_str("login");
-}
+;}
     break;
 
   case 147:
-
-/* Line 1806 of yacc.c  */
 #line 1824 "preproc.y"
     { 
  (yyval.str) = make_str("nologin");
-}
+;}
     break;
 
   case 148:
-
-/* Line 1806 of yacc.c  */
 #line 1828 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("connection limit"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 149:
-
-/* Line 1806 of yacc.c  */
 #line 1832 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("valid until"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 150:
-
-/* Line 1806 of yacc.c  */
 #line 1836 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("user"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 151:
-
-/* Line 1806 of yacc.c  */
 #line 1844 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 152:
-
-/* Line 1806 of yacc.c  */
 #line 1848 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("sysid"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 153:
-
-/* Line 1806 of yacc.c  */
 #line 1852 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("admin"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 154:
-
-/* Line 1806 of yacc.c  */
 #line 1856 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("role"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 155:
-
-/* Line 1806 of yacc.c  */
 #line 1860 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("in role"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 156:
-
-/* Line 1806 of yacc.c  */
 #line 1864 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("in group"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 157:
-
-/* Line 1806 of yacc.c  */
 #line 1872 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("create user"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 158:
-
-/* Line 1806 of yacc.c  */
 #line 1880 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter role"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 159:
-
-/* Line 1806 of yacc.c  */
 #line 1888 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 160:
-
-/* Line 1806 of yacc.c  */
 #line 1891 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("in database"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 161:
-
-/* Line 1806 of yacc.c  */
 #line 1899 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter role"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 162:
-
-/* Line 1806 of yacc.c  */
 #line 1907 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter user"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 163:
-
-/* Line 1806 of yacc.c  */
 #line 1915 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter user"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 164:
-
-/* Line 1806 of yacc.c  */
 #line 1923 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop role"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 165:
-
-/* Line 1806 of yacc.c  */
 #line 1927 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop role if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 166:
-
-/* Line 1806 of yacc.c  */
 #line 1935 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop user"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 167:
-
-/* Line 1806 of yacc.c  */
 #line 1939 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop user if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 168:
-
-/* Line 1806 of yacc.c  */
 #line 1947 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("create group"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 169:
-
-/* Line 1806 of yacc.c  */
 #line 1955 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter group"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),make_str("user"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 170:
-
-/* Line 1806 of yacc.c  */
 #line 1963 "preproc.y"
     { 
  (yyval.str) = make_str("add");
-}
+;}
     break;
 
   case 171:
-
-/* Line 1806 of yacc.c  */
 #line 1967 "preproc.y"
     { 
  (yyval.str) = make_str("drop");
-}
+;}
     break;
 
   case 172:
-
-/* Line 1806 of yacc.c  */
 #line 1975 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop group"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 173:
-
-/* Line 1806 of yacc.c  */
 #line 1979 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop group if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 174:
-
-/* Line 1806 of yacc.c  */
 #line 1987 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("create schema"),(yyvsp[(3) - (6)].str),make_str("authorization"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 175:
-
-/* Line 1806 of yacc.c  */
 #line 1991 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("create schema"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 176:
-
-/* Line 1806 of yacc.c  */
 #line 1999 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 177:
-
-/* Line 1806 of yacc.c  */
 #line 2003 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 178:
-
-/* Line 1806 of yacc.c  */
 #line 2010 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 179:
-
-/* Line 1806 of yacc.c  */
 #line 2014 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 180:
-
-/* Line 1806 of yacc.c  */
 #line 2021 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 181:
-
-/* Line 1806 of yacc.c  */
 #line 2025 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 182:
-
-/* Line 1806 of yacc.c  */
 #line 2029 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 183:
-
-/* Line 1806 of yacc.c  */
 #line 2033 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 184:
-
-/* Line 1806 of yacc.c  */
 #line 2037 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 185:
-
-/* Line 1806 of yacc.c  */
 #line 2041 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 186:
-
-/* Line 1806 of yacc.c  */
 #line 2049 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 187:
-
-/* Line 1806 of yacc.c  */
 #line 2053 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("set local"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 188:
-
-/* Line 1806 of yacc.c  */
 #line 2057 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("set session"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 189:
-
-/* Line 1806 of yacc.c  */
 #line 2065 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 190:
-
-/* Line 1806 of yacc.c  */
 #line 2069 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 191:
-
-/* Line 1806 of yacc.c  */
 #line 2073 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("to default"));
-}
+;}
     break;
 
   case 192:
-
-/* Line 1806 of yacc.c  */
 #line 2077 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("= default"));
-}
+;}
     break;
 
   case 193:
-
-/* Line 1806 of yacc.c  */
 #line 2081 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("from current"));
-}
+;}
     break;
 
   case 194:
-
-/* Line 1806 of yacc.c  */
 #line 2085 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("time zone"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 195:
-
-/* Line 1806 of yacc.c  */
 #line 2089 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("transaction"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 196:
-
-/* Line 1806 of yacc.c  */
 #line 2093 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("session characteristics as transaction"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 197:
-
-/* Line 1806 of yacc.c  */
 #line 2097 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,make_str("catalog"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 198:
-
-/* Line 1806 of yacc.c  */
 #line 2102 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("schema"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 199:
-
-/* Line 1806 of yacc.c  */
 #line 2106 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("names"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 200:
-
-/* Line 1806 of yacc.c  */
 #line 2110 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("role"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 201:
-
-/* Line 1806 of yacc.c  */
 #line 2114 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("session authorization"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 202:
-
-/* Line 1806 of yacc.c  */
 #line 2118 "preproc.y"
     { 
  (yyval.str) = make_str("session authorization default");
-}
+;}
     break;
 
   case 203:
-
-/* Line 1806 of yacc.c  */
 #line 2122 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("xml option"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 204:
-
-/* Line 1806 of yacc.c  */
 #line 2130 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 205:
-
-/* Line 1806 of yacc.c  */
 #line 2134 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 206:
-
-/* Line 1806 of yacc.c  */
 #line 2142 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 207:
-
-/* Line 1806 of yacc.c  */
 #line 2146 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 208:
-
-/* Line 1806 of yacc.c  */
 #line 2154 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 209:
-
-/* Line 1806 of yacc.c  */
 #line 2158 "preproc.y"
     { 
 		if ((yyvsp[(1) - (1)].str)[0] == '$')
@@ -27266,937 +27277,729 @@
 		}
 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 210:
-
-/* Line 1806 of yacc.c  */
 #line 2172 "preproc.y"
     { 
  (yyval.str) = make_str("read uncommitted");
-}
+;}
     break;
 
   case 211:
-
-/* Line 1806 of yacc.c  */
 #line 2176 "preproc.y"
     { 
  (yyval.str) = make_str("read committed");
-}
+;}
     break;
 
   case 212:
-
-/* Line 1806 of yacc.c  */
 #line 2180 "preproc.y"
     { 
  (yyval.str) = make_str("repeatable read");
-}
+;}
     break;
 
   case 213:
-
-/* Line 1806 of yacc.c  */
 #line 2184 "preproc.y"
     { 
  (yyval.str) = make_str("serializable");
-}
+;}
     break;
 
   case 214:
-
-/* Line 1806 of yacc.c  */
 #line 2192 "preproc.y"
     { 
  (yyval.str) = make_str("true");
-}
+;}
     break;
 
   case 215:
-
-/* Line 1806 of yacc.c  */
 #line 2196 "preproc.y"
     { 
  (yyval.str) = make_str("false");
-}
+;}
     break;
 
   case 216:
-
-/* Line 1806 of yacc.c  */
 #line 2200 "preproc.y"
     { 
  (yyval.str) = make_str("on");
-}
+;}
     break;
 
   case 217:
-
-/* Line 1806 of yacc.c  */
 #line 2204 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 218:
-
-/* Line 1806 of yacc.c  */
 #line 2212 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 219:
-
-/* Line 1806 of yacc.c  */
 #line 2216 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 220:
-
-/* Line 1806 of yacc.c  */
 #line 2220 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 221:
-
-/* Line 1806 of yacc.c  */
 #line 2224 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),make_str("("),(yyvsp[(3) - (6)].str),make_str(")"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 222:
-
-/* Line 1806 of yacc.c  */
 #line 2228 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 223:
-
-/* Line 1806 of yacc.c  */
 #line 2232 "preproc.y"
     { 
  (yyval.str) = make_str("default");
-}
+;}
     break;
 
   case 224:
-
-/* Line 1806 of yacc.c  */
 #line 2236 "preproc.y"
     { 
  (yyval.str) = make_str("local");
-}
+;}
     break;
 
   case 225:
-
-/* Line 1806 of yacc.c  */
 #line 2244 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 226:
-
-/* Line 1806 of yacc.c  */
 #line 2248 "preproc.y"
     { 
  (yyval.str) = make_str("default");
-}
+;}
     break;
 
   case 227:
-
-/* Line 1806 of yacc.c  */
 #line 2252 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 228:
-
-/* Line 1806 of yacc.c  */
 #line 2259 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 229:
-
-/* Line 1806 of yacc.c  */
 #line 2263 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 230:
-
-/* Line 1806 of yacc.c  */
 #line 2271 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("reset"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 231:
-
-/* Line 1806 of yacc.c  */
 #line 2275 "preproc.y"
     { 
  (yyval.str) = make_str("reset time zone");
-}
+;}
     break;
 
   case 232:
-
-/* Line 1806 of yacc.c  */
 #line 2279 "preproc.y"
     { 
  (yyval.str) = make_str("reset transaction isolation level");
-}
+;}
     break;
 
   case 233:
-
-/* Line 1806 of yacc.c  */
 #line 2283 "preproc.y"
     { 
  (yyval.str) = make_str("reset session authorization");
-}
+;}
     break;
 
   case 234:
-
-/* Line 1806 of yacc.c  */
 #line 2287 "preproc.y"
     { 
  (yyval.str) = make_str("reset all");
-}
+;}
     break;
 
   case 235:
-
-/* Line 1806 of yacc.c  */
 #line 2295 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 236:
-
-/* Line 1806 of yacc.c  */
 #line 2299 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 237:
-
-/* Line 1806 of yacc.c  */
 #line 2307 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("show"),(yyvsp[(2) - (3)].str));
-}
+;}
     break;
 
   case 238:
-
-/* Line 1806 of yacc.c  */
 #line 2311 "preproc.y"
     { 
  (yyval.str) = make_str("show time zone");
-}
+;}
     break;
 
   case 239:
-
-/* Line 1806 of yacc.c  */
 #line 2315 "preproc.y"
     { 
  (yyval.str) = make_str("show transaction isolation level");
-}
+;}
     break;
 
   case 240:
-
-/* Line 1806 of yacc.c  */
 #line 2319 "preproc.y"
     { 
  (yyval.str) = make_str("show session authorization");
-}
+;}
     break;
 
   case 241:
-
-/* Line 1806 of yacc.c  */
 #line 2323 "preproc.y"
     {
 		mmerror(PARSE_ERROR, ET_ERROR, "SHOW ALL is not implemented");
 		(yyval.str) = EMPTY;
-	}
+	;}
     break;
 
   case 242:
-
-/* Line 1806 of yacc.c  */
 #line 2332 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("set constraints"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 243:
-
-/* Line 1806 of yacc.c  */
 #line 2340 "preproc.y"
     { 
  (yyval.str) = make_str("all");
-}
+;}
     break;
 
   case 244:
-
-/* Line 1806 of yacc.c  */
 #line 2344 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 245:
-
-/* Line 1806 of yacc.c  */
 #line 2352 "preproc.y"
     { 
  (yyval.str) = make_str("deferred");
-}
+;}
     break;
 
   case 246:
-
-/* Line 1806 of yacc.c  */
 #line 2356 "preproc.y"
     { 
  (yyval.str) = make_str("immediate");
-}
+;}
     break;
 
   case 247:
-
-/* Line 1806 of yacc.c  */
 #line 2364 "preproc.y"
     { 
  (yyval.str) = make_str("checkpoint");
-}
+;}
     break;
 
   case 248:
-
-/* Line 1806 of yacc.c  */
 #line 2372 "preproc.y"
     { 
  (yyval.str) = make_str("discard all");
-}
+;}
     break;
 
   case 249:
-
-/* Line 1806 of yacc.c  */
 #line 2376 "preproc.y"
     { 
  (yyval.str) = make_str("discard temp");
-}
+;}
     break;
 
   case 250:
-
-/* Line 1806 of yacc.c  */
 #line 2380 "preproc.y"
     { 
  (yyval.str) = make_str("discard temporary");
-}
+;}
     break;
 
   case 251:
-
-/* Line 1806 of yacc.c  */
 #line 2384 "preproc.y"
     { 
  (yyval.str) = make_str("discard plans");
-}
+;}
     break;
 
   case 252:
-
-/* Line 1806 of yacc.c  */
 #line 2392 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter table"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 253:
-
-/* Line 1806 of yacc.c  */
 #line 2396 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter index"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 254:
-
-/* Line 1806 of yacc.c  */
 #line 2400 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter sequence"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 255:
-
-/* Line 1806 of yacc.c  */
 #line 2404 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter view"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 256:
-
-/* Line 1806 of yacc.c  */
 #line 2412 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 257:
-
-/* Line 1806 of yacc.c  */
 #line 2416 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 258:
-
-/* Line 1806 of yacc.c  */
 #line 2424 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("add"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 259:
-
-/* Line 1806 of yacc.c  */
 #line 2428 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("add column"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 260:
-
-/* Line 1806 of yacc.c  */
 #line 2432 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 261:
-
-/* Line 1806 of yacc.c  */
 #line 2436 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),make_str("drop not null"));
-}
+;}
     break;
 
   case 262:
-
-/* Line 1806 of yacc.c  */
 #line 2440 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),make_str("set not null"));
-}
+;}
     break;
 
   case 263:
-
-/* Line 1806 of yacc.c  */
 #line 2444 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),make_str("set statistics"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 264:
-
-/* Line 1806 of yacc.c  */
 #line 2448 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),make_str("set"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 265:
-
-/* Line 1806 of yacc.c  */
 #line 2452 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),make_str("reset"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 266:
-
-/* Line 1806 of yacc.c  */
 #line 2456 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),make_str("set storage"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 267:
-
-/* Line 1806 of yacc.c  */
 #line 2460 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop"),(yyvsp[(2) - (6)].str),make_str("if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 268:
-
-/* Line 1806 of yacc.c  */
 #line 2464 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 269:
-
-/* Line 1806 of yacc.c  */
 #line 2468 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("alter"),(yyvsp[(2) - (7)].str),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),make_str("type"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 270:
-
-/* Line 1806 of yacc.c  */
 #line 2472 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("add"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 271:
-
-/* Line 1806 of yacc.c  */
 #line 2476 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("drop constraint if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 272:
-
-/* Line 1806 of yacc.c  */
 #line 2480 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("drop constraint"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 273:
-
-/* Line 1806 of yacc.c  */
 #line 2484 "preproc.y"
     { 
  (yyval.str) = make_str("set with oids");
-}
+;}
     break;
 
   case 274:
-
-/* Line 1806 of yacc.c  */
 #line 2488 "preproc.y"
     { 
  (yyval.str) = make_str("set without oids");
-}
+;}
     break;
 
   case 275:
-
-/* Line 1806 of yacc.c  */
 #line 2492 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("cluster on"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 276:
-
-/* Line 1806 of yacc.c  */
 #line 2496 "preproc.y"
     { 
  (yyval.str) = make_str("set without cluster");
-}
+;}
     break;
 
   case 277:
-
-/* Line 1806 of yacc.c  */
 #line 2500 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("enable trigger"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 278:
-
-/* Line 1806 of yacc.c  */
 #line 2504 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("enable always trigger"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 279:
-
-/* Line 1806 of yacc.c  */
 #line 2508 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("enable replica trigger"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 280:
-
-/* Line 1806 of yacc.c  */
 #line 2512 "preproc.y"
     { 
  (yyval.str) = make_str("enable trigger all");
-}
+;}
     break;
 
   case 281:
-
-/* Line 1806 of yacc.c  */
 #line 2516 "preproc.y"
     { 
  (yyval.str) = make_str("enable trigger user");
-}
+;}
     break;
 
   case 282:
-
-/* Line 1806 of yacc.c  */
 #line 2520 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("disable trigger"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 283:
-
-/* Line 1806 of yacc.c  */
 #line 2524 "preproc.y"
     { 
  (yyval.str) = make_str("disable trigger all");
-}
+;}
     break;
 
   case 284:
-
-/* Line 1806 of yacc.c  */
 #line 2528 "preproc.y"
     { 
  (yyval.str) = make_str("disable trigger user");
-}
+;}
     break;
 
   case 285:
-
-/* Line 1806 of yacc.c  */
 #line 2532 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("enable rule"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 286:
-
-/* Line 1806 of yacc.c  */
 #line 2536 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("enable always rule"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 287:
-
-/* Line 1806 of yacc.c  */
 #line 2540 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("enable replica rule"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 288:
-
-/* Line 1806 of yacc.c  */
 #line 2544 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("disable rule"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 289:
-
-/* Line 1806 of yacc.c  */
 #line 2548 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("inherit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 290:
-
-/* Line 1806 of yacc.c  */
 #line 2552 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("no inherit"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 291:
-
-/* Line 1806 of yacc.c  */
 #line 2556 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("owner to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 292:
-
-/* Line 1806 of yacc.c  */
 #line 2560 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("set tablespace"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 293:
-
-/* Line 1806 of yacc.c  */
 #line 2564 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 294:
-
-/* Line 1806 of yacc.c  */
 #line 2568 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("reset"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 295:
-
-/* Line 1806 of yacc.c  */
 #line 2576 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("set default"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 296:
-
-/* Line 1806 of yacc.c  */
 #line 2580 "preproc.y"
     { 
  (yyval.str) = make_str("drop default");
-}
+;}
     break;
 
   case 297:
-
-/* Line 1806 of yacc.c  */
 #line 2588 "preproc.y"
     { 
  (yyval.str) = make_str("cascade");
-}
+;}
     break;
 
   case 298:
-
-/* Line 1806 of yacc.c  */
 #line 2592 "preproc.y"
     { 
  (yyval.str) = make_str("restrict");
-}
+;}
     break;
 
   case 299:
-
-/* Line 1806 of yacc.c  */
 #line 2596 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 300:
-
-/* Line 1806 of yacc.c  */
 #line 2603 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 301:
-
-/* Line 1806 of yacc.c  */
 #line 2607 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 302:
-
-/* Line 1806 of yacc.c  */
 #line 2614 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 303:
-
-/* Line 1806 of yacc.c  */
 #line 2622 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 304:
-
-/* Line 1806 of yacc.c  */
 #line 2626 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 305:
-
-/* Line 1806 of yacc.c  */
 #line 2633 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 306:
-
-/* Line 1806 of yacc.c  */
 #line 2637 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 307:
-
-/* Line 1806 of yacc.c  */
 #line 2645 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 308:
-
-/* Line 1806 of yacc.c  */
 #line 2649 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 309:
-
-/* Line 1806 of yacc.c  */
 #line 2653 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),make_str("."),(yyvsp[(3) - (5)].str),make_str("="),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 310:
-
-/* Line 1806 of yacc.c  */
 #line 2657 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 311:
-
-/* Line 1806 of yacc.c  */
 #line 2665 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(2) - (2)].str)[0] == ':' ? make_str("$0") : (yyvsp[(2) - (2)].str);
 		(yyval.str) = cat2_str(make_str("close"), cursor_marker);
-	}
+	;}
     break;
 
   case 312:
-
-/* Line 1806 of yacc.c  */
 #line 2670 "preproc.y"
     { 
  (yyval.str) = make_str("close all");
-}
+;}
     break;
 
   case 313:
-
-/* Line 1806 of yacc.c  */
 #line 2678 "preproc.y"
     { 
 			if (strcmp((yyvsp[(6) - (10)].str), "to") == 0 && strcmp((yyvsp[(7) - (10)].str), "stdin") == 0)
@@ -28207,3590 +28010,2790 @@
 				mmerror(PARSE_ERROR, ET_WARNING, "COPY FROM STDIN is not implemented");
 
  (yyval.str) = cat_str(10,make_str("copy"),(yyvsp[(2) - (10)].str),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),(yyvsp[(5) - (10)].str),(yyvsp[(6) - (10)].str),(yyvsp[(7) - (10)].str),(yyvsp[(8) - (10)].str),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 314:
-
-/* Line 1806 of yacc.c  */
 #line 2689 "preproc.y"
     { 
 			if (strcmp((yyvsp[(4) - (6)].str), "stdin") == 0)
 				mmerror(PARSE_ERROR, ET_ERROR, "COPY TO STDIN is not possible");
 
  (yyval.str) = cat_str(6,make_str("copy"),(yyvsp[(2) - (6)].str),make_str("to"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 315:
-
-/* Line 1806 of yacc.c  */
 #line 2700 "preproc.y"
     { 
  (yyval.str) = make_str("from");
-}
+;}
     break;
 
   case 316:
-
-/* Line 1806 of yacc.c  */
 #line 2704 "preproc.y"
     { 
  (yyval.str) = make_str("to");
-}
+;}
     break;
 
   case 317:
-
-/* Line 1806 of yacc.c  */
 #line 2712 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 318:
-
-/* Line 1806 of yacc.c  */
 #line 2716 "preproc.y"
     { 
  (yyval.str) = make_str("stdin");
-}
+;}
     break;
 
   case 319:
-
-/* Line 1806 of yacc.c  */
 #line 2720 "preproc.y"
     { 
  (yyval.str) = make_str("stdout");
-}
+;}
     break;
 
   case 320:
-
-/* Line 1806 of yacc.c  */
 #line 2728 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 321:
-
-/* Line 1806 of yacc.c  */
 #line 2732 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 322:
-
-/* Line 1806 of yacc.c  */
 #line 2740 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 323:
-
-/* Line 1806 of yacc.c  */
 #line 2744 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 324:
-
-/* Line 1806 of yacc.c  */
 #line 2751 "preproc.y"
     { 
  (yyval.str) = make_str("binary");
-}
+;}
     break;
 
   case 325:
-
-/* Line 1806 of yacc.c  */
 #line 2755 "preproc.y"
     { 
  (yyval.str) = make_str("oids");
-}
+;}
     break;
 
   case 326:
-
-/* Line 1806 of yacc.c  */
 #line 2759 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("delimiter"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 327:
-
-/* Line 1806 of yacc.c  */
 #line 2763 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("null"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 328:
-
-/* Line 1806 of yacc.c  */
 #line 2767 "preproc.y"
     { 
  (yyval.str) = make_str("csv");
-}
+;}
     break;
 
   case 329:
-
-/* Line 1806 of yacc.c  */
 #line 2771 "preproc.y"
     { 
  (yyval.str) = make_str("header");
-}
+;}
     break;
 
   case 330:
-
-/* Line 1806 of yacc.c  */
 #line 2775 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("quote"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 331:
-
-/* Line 1806 of yacc.c  */
 #line 2779 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("escape"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 332:
-
-/* Line 1806 of yacc.c  */
 #line 2783 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("force quote"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 333:
-
-/* Line 1806 of yacc.c  */
 #line 2787 "preproc.y"
     { 
  (yyval.str) = make_str("force quote *");
-}
+;}
     break;
 
   case 334:
-
-/* Line 1806 of yacc.c  */
 #line 2791 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("force not null"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 335:
-
-/* Line 1806 of yacc.c  */
 #line 2799 "preproc.y"
     { 
  (yyval.str) = make_str("binary");
-}
+;}
     break;
 
   case 336:
-
-/* Line 1806 of yacc.c  */
 #line 2803 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 337:
-
-/* Line 1806 of yacc.c  */
 #line 2810 "preproc.y"
     { 
  (yyval.str) = make_str("with oids");
-}
+;}
     break;
 
   case 338:
-
-/* Line 1806 of yacc.c  */
 #line 2814 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 339:
-
-/* Line 1806 of yacc.c  */
 #line 2821 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("delimiters"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 340:
-
-/* Line 1806 of yacc.c  */
 #line 2825 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 341:
-
-/* Line 1806 of yacc.c  */
 #line 2832 "preproc.y"
     { 
  (yyval.str) = make_str("using");
-}
+;}
     break;
 
   case 342:
-
-/* Line 1806 of yacc.c  */
 #line 2836 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 343:
-
-/* Line 1806 of yacc.c  */
 #line 2843 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 344:
-
-/* Line 1806 of yacc.c  */
 #line 2847 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 345:
-
-/* Line 1806 of yacc.c  */
 #line 2855 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 346:
-
-/* Line 1806 of yacc.c  */
 #line 2863 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 347:
-
-/* Line 1806 of yacc.c  */
 #line 2867 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 348:
-
-/* Line 1806 of yacc.c  */
 #line 2871 "preproc.y"
     { 
  (yyval.str) = make_str("*");
-}
+;}
     break;
 
   case 349:
-
-/* Line 1806 of yacc.c  */
 #line 2875 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 350:
-
-/* Line 1806 of yacc.c  */
 #line 2879 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 351:
-
-/* Line 1806 of yacc.c  */
 #line 2886 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 352:
-
-/* Line 1806 of yacc.c  */
 #line 2890 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 353:
-
-/* Line 1806 of yacc.c  */
 #line 2898 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 354:
-
-/* Line 1806 of yacc.c  */
 #line 2906 "preproc.y"
     { 
  (yyval.str) = cat_str(11,make_str("create"),(yyvsp[(2) - (11)].str),make_str("table"),(yyvsp[(4) - (11)].str),make_str("("),(yyvsp[(6) - (11)].str),make_str(")"),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 355:
-
-/* Line 1806 of yacc.c  */
 #line 2910 "preproc.y"
     { 
  (yyval.str) = cat_str(10,make_str("create"),(yyvsp[(2) - (10)].str),make_str("table"),(yyvsp[(4) - (10)].str),make_str("of"),(yyvsp[(6) - (10)].str),(yyvsp[(7) - (10)].str),(yyvsp[(8) - (10)].str),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 356:
-
-/* Line 1806 of yacc.c  */
 #line 2918 "preproc.y"
     { 
  (yyval.str) = make_str("temporary");
-}
+;}
     break;
 
   case 357:
-
-/* Line 1806 of yacc.c  */
 #line 2922 "preproc.y"
     { 
  (yyval.str) = make_str("temp");
-}
+;}
     break;
 
   case 358:
-
-/* Line 1806 of yacc.c  */
 #line 2926 "preproc.y"
     { 
  (yyval.str) = make_str("local temporary");
-}
+;}
     break;
 
   case 359:
-
-/* Line 1806 of yacc.c  */
 #line 2930 "preproc.y"
     { 
  (yyval.str) = make_str("local temp");
-}
+;}
     break;
 
   case 360:
-
-/* Line 1806 of yacc.c  */
 #line 2934 "preproc.y"
     { 
  (yyval.str) = make_str("global temporary");
-}
+;}
     break;
 
   case 361:
-
-/* Line 1806 of yacc.c  */
 #line 2938 "preproc.y"
     { 
  (yyval.str) = make_str("global temp");
-}
+;}
     break;
 
   case 362:
-
-/* Line 1806 of yacc.c  */
 #line 2942 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 363:
-
-/* Line 1806 of yacc.c  */
 #line 2949 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 364:
-
-/* Line 1806 of yacc.c  */
 #line 2953 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 365:
-
-/* Line 1806 of yacc.c  */
 #line 2960 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 366:
-
-/* Line 1806 of yacc.c  */
 #line 2964 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 367:
-
-/* Line 1806 of yacc.c  */
 #line 2971 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 368:
-
-/* Line 1806 of yacc.c  */
 #line 2975 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 369:
-
-/* Line 1806 of yacc.c  */
 #line 2983 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 370:
-
-/* Line 1806 of yacc.c  */
 #line 2987 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 371:
-
-/* Line 1806 of yacc.c  */
 #line 2995 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 372:
-
-/* Line 1806 of yacc.c  */
 #line 2999 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 373:
-
-/* Line 1806 of yacc.c  */
 #line 3003 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 374:
-
-/* Line 1806 of yacc.c  */
 #line 3011 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 375:
-
-/* Line 1806 of yacc.c  */
 #line 3015 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 376:
-
-/* Line 1806 of yacc.c  */
 #line 3023 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 377:
-
-/* Line 1806 of yacc.c  */
 #line 3031 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),make_str("with options"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 378:
-
-/* Line 1806 of yacc.c  */
 #line 3039 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 379:
-
-/* Line 1806 of yacc.c  */
 #line 3043 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 380:
-
-/* Line 1806 of yacc.c  */
 #line 3050 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("constraint"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 381:
-
-/* Line 1806 of yacc.c  */
 #line 3054 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 382:
-
-/* Line 1806 of yacc.c  */
 #line 3058 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 383:
-
-/* Line 1806 of yacc.c  */
 #line 3066 "preproc.y"
     { 
  (yyval.str) = make_str("not null");
-}
+;}
     break;
 
   case 384:
-
-/* Line 1806 of yacc.c  */
 #line 3070 "preproc.y"
     { 
  (yyval.str) = make_str("null");
-}
+;}
     break;
 
   case 385:
-
-/* Line 1806 of yacc.c  */
 #line 3074 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("unique"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 386:
-
-/* Line 1806 of yacc.c  */
 #line 3078 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("primary key"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 387:
-
-/* Line 1806 of yacc.c  */
 #line 3082 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("check ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 388:
-
-/* Line 1806 of yacc.c  */
 #line 3086 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("default"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 389:
-
-/* Line 1806 of yacc.c  */
 #line 3090 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("references"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 390:
-
-/* Line 1806 of yacc.c  */
 #line 3098 "preproc.y"
     { 
  (yyval.str) = make_str("deferrable");
-}
+;}
     break;
 
   case 391:
-
-/* Line 1806 of yacc.c  */
 #line 3102 "preproc.y"
     { 
  (yyval.str) = make_str("not deferrable");
-}
+;}
     break;
 
   case 392:
-
-/* Line 1806 of yacc.c  */
 #line 3106 "preproc.y"
     { 
  (yyval.str) = make_str("initially deferred");
-}
+;}
     break;
 
   case 393:
-
-/* Line 1806 of yacc.c  */
 #line 3110 "preproc.y"
     { 
  (yyval.str) = make_str("initially immediate");
-}
+;}
     break;
 
   case 394:
-
-/* Line 1806 of yacc.c  */
 #line 3118 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("like"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 395:
-
-/* Line 1806 of yacc.c  */
 #line 3126 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("including"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 396:
-
-/* Line 1806 of yacc.c  */
 #line 3130 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("excluding"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 397:
-
-/* Line 1806 of yacc.c  */
 #line 3134 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 398:
-
-/* Line 1806 of yacc.c  */
 #line 3141 "preproc.y"
     { 
  (yyval.str) = make_str("defaults");
-}
+;}
     break;
 
   case 399:
-
-/* Line 1806 of yacc.c  */
 #line 3145 "preproc.y"
     { 
  (yyval.str) = make_str("constraints");
-}
+;}
     break;
 
   case 400:
-
-/* Line 1806 of yacc.c  */
 #line 3149 "preproc.y"
     { 
  (yyval.str) = make_str("indexes");
-}
+;}
     break;
 
   case 401:
-
-/* Line 1806 of yacc.c  */
 #line 3153 "preproc.y"
     { 
  (yyval.str) = make_str("storage");
-}
+;}
     break;
 
   case 402:
-
-/* Line 1806 of yacc.c  */
 #line 3157 "preproc.y"
     { 
  (yyval.str) = make_str("comments");
-}
+;}
     break;
 
   case 403:
-
-/* Line 1806 of yacc.c  */
 #line 3161 "preproc.y"
     { 
  (yyval.str) = make_str("all");
-}
+;}
     break;
 
   case 404:
-
-/* Line 1806 of yacc.c  */
 #line 3169 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("constraint"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 405:
-
-/* Line 1806 of yacc.c  */
 #line 3173 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 406:
-
-/* Line 1806 of yacc.c  */
 #line 3181 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(4,make_str("check ("),(yyvsp[(3) - (5)].str),make_str(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 407:
-
-/* Line 1806 of yacc.c  */
 #line 3186 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("unique ("),(yyvsp[(3) - (7)].str),make_str(")"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 408:
-
-/* Line 1806 of yacc.c  */
 #line 3190 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("primary key ("),(yyvsp[(4) - (8)].str),make_str(")"),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 409:
-
-/* Line 1806 of yacc.c  */
 #line 3194 "preproc.y"
     { 
  (yyval.str) = cat_str(9,make_str("exclude"),(yyvsp[(2) - (9)].str),make_str("("),(yyvsp[(4) - (9)].str),make_str(")"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 410:
-
-/* Line 1806 of yacc.c  */
 #line 3198 "preproc.y"
     { 
  (yyval.str) = cat_str(8,make_str("foreign key ("),(yyvsp[(4) - (11)].str),make_str(") references"),(yyvsp[(7) - (11)].str),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 411:
-
-/* Line 1806 of yacc.c  */
 #line 3206 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 412:
-
-/* Line 1806 of yacc.c  */
 #line 3210 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 413:
-
-/* Line 1806 of yacc.c  */
 #line 3217 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 414:
-
-/* Line 1806 of yacc.c  */
 #line 3221 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 415:
-
-/* Line 1806 of yacc.c  */
 #line 3229 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 416:
-
-/* Line 1806 of yacc.c  */
 #line 3237 "preproc.y"
     { 
  (yyval.str) = make_str("match full");
-}
+;}
     break;
 
   case 417:
-
-/* Line 1806 of yacc.c  */
 #line 3241 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = make_str("match partial");
-}
+;}
     break;
 
   case 418:
-
-/* Line 1806 of yacc.c  */
 #line 3246 "preproc.y"
     { 
  (yyval.str) = make_str("match simple");
-}
+;}
     break;
 
   case 419:
-
-/* Line 1806 of yacc.c  */
 #line 3250 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 420:
-
-/* Line 1806 of yacc.c  */
 #line 3257 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 421:
-
-/* Line 1806 of yacc.c  */
 #line 3261 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 422:
-
-/* Line 1806 of yacc.c  */
 #line 3269 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("with"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 423:
-
-/* Line 1806 of yacc.c  */
 #line 3273 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (6)].str),make_str("with operator ("),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 424:
-
-/* Line 1806 of yacc.c  */
 #line 3281 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("where ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 425:
-
-/* Line 1806 of yacc.c  */
 #line 3285 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 426:
-
-/* Line 1806 of yacc.c  */
 #line 3292 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 427:
-
-/* Line 1806 of yacc.c  */
 #line 3296 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 428:
-
-/* Line 1806 of yacc.c  */
 #line 3300 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 429:
-
-/* Line 1806 of yacc.c  */
 #line 3304 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 430:
-
-/* Line 1806 of yacc.c  */
 #line 3308 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 431:
-
-/* Line 1806 of yacc.c  */
 #line 3315 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("on update"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 432:
-
-/* Line 1806 of yacc.c  */
 #line 3323 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("on delete"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 433:
-
-/* Line 1806 of yacc.c  */
 #line 3331 "preproc.y"
     { 
  (yyval.str) = make_str("no action");
-}
+;}
     break;
 
   case 434:
-
-/* Line 1806 of yacc.c  */
 #line 3335 "preproc.y"
     { 
  (yyval.str) = make_str("restrict");
-}
+;}
     break;
 
   case 435:
-
-/* Line 1806 of yacc.c  */
 #line 3339 "preproc.y"
     { 
  (yyval.str) = make_str("cascade");
-}
+;}
     break;
 
   case 436:
-
-/* Line 1806 of yacc.c  */
 #line 3343 "preproc.y"
     { 
  (yyval.str) = make_str("set null");
-}
+;}
     break;
 
   case 437:
-
-/* Line 1806 of yacc.c  */
 #line 3347 "preproc.y"
     { 
  (yyval.str) = make_str("set default");
-}
+;}
     break;
 
   case 438:
-
-/* Line 1806 of yacc.c  */
 #line 3355 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("inherits ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 439:
-
-/* Line 1806 of yacc.c  */
 #line 3359 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 440:
-
-/* Line 1806 of yacc.c  */
 #line 3366 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 441:
-
-/* Line 1806 of yacc.c  */
 #line 3370 "preproc.y"
     { 
  (yyval.str) = make_str("with oids");
-}
+;}
     break;
 
   case 442:
-
-/* Line 1806 of yacc.c  */
 #line 3374 "preproc.y"
     { 
  (yyval.str) = make_str("without oids");
-}
+;}
     break;
 
   case 443:
-
-/* Line 1806 of yacc.c  */
 #line 3378 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 444:
-
-/* Line 1806 of yacc.c  */
 #line 3385 "preproc.y"
     { 
  (yyval.str) = make_str("on commit drop");
-}
+;}
     break;
 
   case 445:
-
-/* Line 1806 of yacc.c  */
 #line 3389 "preproc.y"
     { 
  (yyval.str) = make_str("on commit delete rows");
-}
+;}
     break;
 
   case 446:
-
-/* Line 1806 of yacc.c  */
 #line 3393 "preproc.y"
     { 
  (yyval.str) = make_str("on commit preserve rows");
-}
+;}
     break;
 
   case 447:
-
-/* Line 1806 of yacc.c  */
 #line 3397 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 448:
-
-/* Line 1806 of yacc.c  */
 #line 3404 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("tablespace"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 449:
-
-/* Line 1806 of yacc.c  */
 #line 3408 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 450:
-
-/* Line 1806 of yacc.c  */
 #line 3415 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("using index tablespace"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 451:
-
-/* Line 1806 of yacc.c  */
 #line 3419 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 452:
-
-/* Line 1806 of yacc.c  */
 #line 3426 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 453:
-
-/* Line 1806 of yacc.c  */
 #line 3434 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 454:
-
-/* Line 1806 of yacc.c  */
 #line 3438 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 455:
-
-/* Line 1806 of yacc.c  */
 #line 3445 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 456:
-
-/* Line 1806 of yacc.c  */
 #line 3449 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 457:
-
-/* Line 1806 of yacc.c  */
 #line 3457 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 458:
-
-/* Line 1806 of yacc.c  */
 #line 3465 "preproc.y"
     { 
  (yyval.str) = make_str("with data");
-}
+;}
     break;
 
   case 459:
-
-/* Line 1806 of yacc.c  */
 #line 3469 "preproc.y"
     { 
  (yyval.str) = make_str("with no data");
-}
+;}
     break;
 
   case 460:
-
-/* Line 1806 of yacc.c  */
 #line 3473 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 461:
-
-/* Line 1806 of yacc.c  */
 #line 3480 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("create"),(yyvsp[(2) - (5)].str),make_str("sequence"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 462:
-
-/* Line 1806 of yacc.c  */
 #line 3488 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter sequence"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 463:
-
-/* Line 1806 of yacc.c  */
 #line 3496 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 464:
-
-/* Line 1806 of yacc.c  */
 #line 3500 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 465:
-
-/* Line 1806 of yacc.c  */
 #line 3507 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 466:
-
-/* Line 1806 of yacc.c  */
 #line 3511 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 467:
-
-/* Line 1806 of yacc.c  */
 #line 3519 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("cache"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 468:
-
-/* Line 1806 of yacc.c  */
 #line 3523 "preproc.y"
     { 
  (yyval.str) = make_str("cycle");
-}
+;}
     break;
 
   case 469:
-
-/* Line 1806 of yacc.c  */
 #line 3527 "preproc.y"
     { 
  (yyval.str) = make_str("no cycle");
-}
+;}
     break;
 
   case 470:
-
-/* Line 1806 of yacc.c  */
 #line 3531 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("increment"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 471:
-
-/* Line 1806 of yacc.c  */
 #line 3535 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("maxvalue"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 472:
-
-/* Line 1806 of yacc.c  */
 #line 3539 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("minvalue"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 473:
-
-/* Line 1806 of yacc.c  */
 #line 3543 "preproc.y"
     { 
  (yyval.str) = make_str("no maxvalue");
-}
+;}
     break;
 
   case 474:
-
-/* Line 1806 of yacc.c  */
 #line 3547 "preproc.y"
     { 
  (yyval.str) = make_str("no minvalue");
-}
+;}
     break;
 
   case 475:
-
-/* Line 1806 of yacc.c  */
 #line 3551 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("owned by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 476:
-
-/* Line 1806 of yacc.c  */
 #line 3555 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("start"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 477:
-
-/* Line 1806 of yacc.c  */
 #line 3559 "preproc.y"
     { 
  (yyval.str) = make_str("restart");
-}
+;}
     break;
 
   case 478:
-
-/* Line 1806 of yacc.c  */
 #line 3563 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("restart"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 479:
-
-/* Line 1806 of yacc.c  */
 #line 3571 "preproc.y"
     { 
  (yyval.str) = make_str("by");
-}
+;}
     break;
 
   case 480:
-
-/* Line 1806 of yacc.c  */
 #line 3575 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 481:
-
-/* Line 1806 of yacc.c  */
 #line 3582 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 482:
-
-/* Line 1806 of yacc.c  */
 #line 3586 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 483:
-
-/* Line 1806 of yacc.c  */
 #line 3590 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 484:
-
-/* Line 1806 of yacc.c  */
 #line 3598 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 485:
-
-/* Line 1806 of yacc.c  */
 #line 3602 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 486:
-
-/* Line 1806 of yacc.c  */
 #line 3610 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("create"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),make_str("language"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 487:
-
-/* Line 1806 of yacc.c  */
 #line 3614 "preproc.y"
     { 
  (yyval.str) = cat_str(10,make_str("create"),(yyvsp[(2) - (10)].str),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),make_str("language"),(yyvsp[(6) - (10)].str),make_str("handler"),(yyvsp[(8) - (10)].str),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 488:
-
-/* Line 1806 of yacc.c  */
 #line 3622 "preproc.y"
     { 
  (yyval.str) = make_str("trusted");
-}
+;}
     break;
 
   case 489:
-
-/* Line 1806 of yacc.c  */
 #line 3626 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 490:
-
-/* Line 1806 of yacc.c  */
 #line 3633 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 491:
-
-/* Line 1806 of yacc.c  */
 #line 3637 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 492:
-
-/* Line 1806 of yacc.c  */
 #line 3645 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("inline"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 493:
-
-/* Line 1806 of yacc.c  */
 #line 3649 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 494:
-
-/* Line 1806 of yacc.c  */
 #line 3656 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("validator"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 495:
-
-/* Line 1806 of yacc.c  */
 #line 3660 "preproc.y"
     { 
  (yyval.str) = make_str("no validator");
-}
+;}
     break;
 
   case 496:
-
-/* Line 1806 of yacc.c  */
 #line 3668 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 497:
-
-/* Line 1806 of yacc.c  */
 #line 3672 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 498:
-
-/* Line 1806 of yacc.c  */
 #line 3679 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop"),(yyvsp[(2) - (5)].str),make_str("language"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 499:
-
-/* Line 1806 of yacc.c  */
 #line 3683 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop"),(yyvsp[(2) - (7)].str),make_str("language if exists"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 500:
-
-/* Line 1806 of yacc.c  */
 #line 3691 "preproc.y"
     { 
  (yyval.str) = make_str("procedural");
-}
+;}
     break;
 
   case 501:
-
-/* Line 1806 of yacc.c  */
 #line 3695 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 502:
-
-/* Line 1806 of yacc.c  */
 #line 3702 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("create tablespace"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),make_str("location"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 503:
-
-/* Line 1806 of yacc.c  */
 #line 3710 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("owner"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 504:
-
-/* Line 1806 of yacc.c  */
 #line 3714 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 505:
-
-/* Line 1806 of yacc.c  */
 #line 3721 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop tablespace"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 506:
-
-/* Line 1806 of yacc.c  */
 #line 3725 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop tablespace if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 507:
-
-/* Line 1806 of yacc.c  */
 #line 3733 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("create foreign data wrapper"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 508:
-
-/* Line 1806 of yacc.c  */
 #line 3741 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("drop foreign data wrapper"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 509:
-
-/* Line 1806 of yacc.c  */
 #line 3745 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("drop foreign data wrapper if exists"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 510:
-
-/* Line 1806 of yacc.c  */
 #line 3753 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter foreign data wrapper"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 511:
-
-/* Line 1806 of yacc.c  */
 #line 3757 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter foreign data wrapper"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 512:
-
-/* Line 1806 of yacc.c  */
 #line 3761 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter foreign data wrapper"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 513:
-
-/* Line 1806 of yacc.c  */
 #line 3769 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("options ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 514:
-
-/* Line 1806 of yacc.c  */
 #line 3773 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 515:
-
-/* Line 1806 of yacc.c  */
 #line 3780 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 516:
-
-/* Line 1806 of yacc.c  */
 #line 3784 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 517:
-
-/* Line 1806 of yacc.c  */
 #line 3792 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("options ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 518:
-
-/* Line 1806 of yacc.c  */
 #line 3800 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 519:
-
-/* Line 1806 of yacc.c  */
 #line 3804 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 520:
-
-/* Line 1806 of yacc.c  */
 #line 3812 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 521:
-
-/* Line 1806 of yacc.c  */
 #line 3816 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 522:
-
-/* Line 1806 of yacc.c  */
 #line 3820 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("add"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 523:
-
-/* Line 1806 of yacc.c  */
 #line 3824 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 524:
-
-/* Line 1806 of yacc.c  */
 #line 3832 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 525:
-
-/* Line 1806 of yacc.c  */
 #line 3840 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 526:
-
-/* Line 1806 of yacc.c  */
 #line 3848 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 527:
-
-/* Line 1806 of yacc.c  */
 #line 3856 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("create server"),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),(yyvsp[(5) - (10)].str),make_str("foreign data wrapper"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 528:
-
-/* Line 1806 of yacc.c  */
 #line 3864 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("type"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 529:
-
-/* Line 1806 of yacc.c  */
 #line 3868 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 530:
-
-/* Line 1806 of yacc.c  */
 #line 3875 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("version"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 531:
-
-/* Line 1806 of yacc.c  */
 #line 3879 "preproc.y"
     { 
  (yyval.str) = make_str("version null");
-}
+;}
     break;
 
   case 532:
-
-/* Line 1806 of yacc.c  */
 #line 3887 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 533:
-
-/* Line 1806 of yacc.c  */
 #line 3891 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 534:
-
-/* Line 1806 of yacc.c  */
 #line 3898 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("drop server"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 535:
-
-/* Line 1806 of yacc.c  */
 #line 3902 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("drop server if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 536:
-
-/* Line 1806 of yacc.c  */
 #line 3910 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter server"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 537:
-
-/* Line 1806 of yacc.c  */
 #line 3914 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter server"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 538:
-
-/* Line 1806 of yacc.c  */
 #line 3918 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter server"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 539:
-
-/* Line 1806 of yacc.c  */
 #line 3926 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("create user mapping for"),(yyvsp[(5) - (8)].str),make_str("server"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 540:
-
-/* Line 1806 of yacc.c  */
 #line 3934 "preproc.y"
     { 
  (yyval.str) = make_str("current_user");
-}
+;}
     break;
 
   case 541:
-
-/* Line 1806 of yacc.c  */
 #line 3938 "preproc.y"
     { 
  (yyval.str) = make_str("user");
-}
+;}
     break;
 
   case 542:
-
-/* Line 1806 of yacc.c  */
 #line 3942 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 543:
-
-/* Line 1806 of yacc.c  */
 #line 3950 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop user mapping for"),(yyvsp[(5) - (7)].str),make_str("server"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 544:
-
-/* Line 1806 of yacc.c  */
 #line 3954 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop user mapping if exists for"),(yyvsp[(7) - (9)].str),make_str("server"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 545:
-
-/* Line 1806 of yacc.c  */
 #line 3962 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter user mapping for"),(yyvsp[(5) - (8)].str),make_str("server"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 546:
-
-/* Line 1806 of yacc.c  */
 #line 3970 "preproc.y"
     { 
  (yyval.str) = cat_str(13,make_str("create trigger"),(yyvsp[(3) - (15)].str),(yyvsp[(4) - (15)].str),(yyvsp[(5) - (15)].str),make_str("on"),(yyvsp[(7) - (15)].str),(yyvsp[(8) - (15)].str),(yyvsp[(9) - (15)].str),make_str("execute procedure"),(yyvsp[(12) - (15)].str),make_str("("),(yyvsp[(14) - (15)].str),make_str(")"));
-}
+;}
     break;
 
   case 547:
-
-/* Line 1806 of yacc.c  */
 #line 3974 "preproc.y"
     { 
  (yyval.str) = cat_str(15,make_str("create constraint trigger"),(yyvsp[(4) - (20)].str),make_str("after"),(yyvsp[(6) - (20)].str),make_str("on"),(yyvsp[(8) - (20)].str),(yyvsp[(9) - (20)].str),(yyvsp[(10) - (20)].str),make_str("for each row"),(yyvsp[(14) - (20)].str),make_str("execute procedure"),(yyvsp[(17) - (20)].str),make_str("("),(yyvsp[(19) - (20)].str),make_str(")"));
-}
+;}
     break;
 
   case 548:
-
-/* Line 1806 of yacc.c  */
 #line 3982 "preproc.y"
     { 
  (yyval.str) = make_str("before");
-}
+;}
     break;
 
   case 549:
-
-/* Line 1806 of yacc.c  */
 #line 3986 "preproc.y"
     { 
  (yyval.str) = make_str("after");
-}
+;}
     break;
 
   case 550:
-
-/* Line 1806 of yacc.c  */
 #line 3994 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 551:
-
-/* Line 1806 of yacc.c  */
 #line 3998 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("or"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 552:
-
-/* Line 1806 of yacc.c  */
 #line 4006 "preproc.y"
     { 
  (yyval.str) = make_str("insert");
-}
+;}
     break;
 
   case 553:
-
-/* Line 1806 of yacc.c  */
 #line 4010 "preproc.y"
     { 
  (yyval.str) = make_str("delete");
-}
+;}
     break;
 
   case 554:
-
-/* Line 1806 of yacc.c  */
 #line 4014 "preproc.y"
     { 
  (yyval.str) = make_str("update");
-}
+;}
     break;
 
   case 555:
-
-/* Line 1806 of yacc.c  */
 #line 4018 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("update of"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 556:
-
-/* Line 1806 of yacc.c  */
 #line 4022 "preproc.y"
     { 
  (yyval.str) = make_str("truncate");
-}
+;}
     break;
 
   case 557:
-
-/* Line 1806 of yacc.c  */
 #line 4030 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("for"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 558:
-
-/* Line 1806 of yacc.c  */
 #line 4034 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 559:
-
-/* Line 1806 of yacc.c  */
 #line 4041 "preproc.y"
     { 
  (yyval.str) = make_str("each");
-}
+;}
     break;
 
   case 560:
-
-/* Line 1806 of yacc.c  */
 #line 4045 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 561:
-
-/* Line 1806 of yacc.c  */
 #line 4052 "preproc.y"
     { 
  (yyval.str) = make_str("row");
-}
+;}
     break;
 
   case 562:
-
-/* Line 1806 of yacc.c  */
 #line 4056 "preproc.y"
     { 
  (yyval.str) = make_str("statement");
-}
+;}
     break;
 
   case 563:
-
-/* Line 1806 of yacc.c  */
 #line 4064 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("when ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 564:
-
-/* Line 1806 of yacc.c  */
 #line 4068 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 565:
-
-/* Line 1806 of yacc.c  */
 #line 4075 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 566:
-
-/* Line 1806 of yacc.c  */
 #line 4079 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 567:
-
-/* Line 1806 of yacc.c  */
 #line 4083 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 568:
-
-/* Line 1806 of yacc.c  */
 #line 4090 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 569:
-
-/* Line 1806 of yacc.c  */
 #line 4094 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 570:
-
-/* Line 1806 of yacc.c  */
 #line 4098 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 571:
-
-/* Line 1806 of yacc.c  */
 #line 4102 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 572:
-
-/* Line 1806 of yacc.c  */
 #line 4106 "preproc.y"
     { 
  (yyval.str) = make_str("xconst");
-}
+;}
     break;
 
   case 573:
-
-/* Line 1806 of yacc.c  */
 #line 4110 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 574:
-
-/* Line 1806 of yacc.c  */
 #line 4118 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 575:
-
-/* Line 1806 of yacc.c  */
 #line 4122 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 576:
-
-/* Line 1806 of yacc.c  */
 #line 4129 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 577:
-
-/* Line 1806 of yacc.c  */
 #line 4133 "preproc.y"
     { 
 			if (strcmp((yyvsp[(1) - (2)].str), "deferrable") != 0 && strcmp((yyvsp[(2) - (2)].str), "initially deferrable") == 0 )
 				mmerror(PARSE_ERROR, ET_ERROR, "constraint declared INITIALLY DEFERRED must be DEFERRABLE");
 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 578:
-
-/* Line 1806 of yacc.c  */
 #line 4140 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 579:
-
-/* Line 1806 of yacc.c  */
 #line 4144 "preproc.y"
     { 
 			if (strcmp((yyvsp[(2) - (2)].str), "deferrable") != 0 && strcmp((yyvsp[(1) - (2)].str), "initially deferrable") == 0 )
 				mmerror(PARSE_ERROR, ET_ERROR, "constraint declared INITIALLY DEFERRED must be DEFERRABLE");
 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 580:
-
-/* Line 1806 of yacc.c  */
 #line 4151 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 581:
-
-/* Line 1806 of yacc.c  */
 #line 4158 "preproc.y"
     { 
  (yyval.str) = make_str("not deferrable");
-}
+;}
     break;
 
   case 582:
-
-/* Line 1806 of yacc.c  */
 #line 4162 "preproc.y"
     { 
  (yyval.str) = make_str("deferrable");
-}
+;}
     break;
 
   case 583:
-
-/* Line 1806 of yacc.c  */
 #line 4170 "preproc.y"
     { 
  (yyval.str) = make_str("initially immediate");
-}
+;}
     break;
 
   case 584:
-
-/* Line 1806 of yacc.c  */
 #line 4174 "preproc.y"
     { 
  (yyval.str) = make_str("initially deferred");
-}
+;}
     break;
 
   case 585:
-
-/* Line 1806 of yacc.c  */
 #line 4182 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop trigger"),(yyvsp[(3) - (6)].str),make_str("on"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 586:
-
-/* Line 1806 of yacc.c  */
 #line 4186 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop trigger if exists"),(yyvsp[(5) - (8)].str),make_str("on"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 587:
-
-/* Line 1806 of yacc.c  */
 #line 4194 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(6,make_str("create assertion"),(yyvsp[(3) - (8)].str),make_str("check ("),(yyvsp[(6) - (8)].str),make_str(")"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 588:
-
-/* Line 1806 of yacc.c  */
 #line 4203 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(3,make_str("drop assertion"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 589:
-
-/* Line 1806 of yacc.c  */
 #line 4212 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("create aggregate"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 590:
-
-/* Line 1806 of yacc.c  */
 #line 4216 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("create aggregate"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 591:
-
-/* Line 1806 of yacc.c  */
 #line 4220 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("create operator"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 592:
-
-/* Line 1806 of yacc.c  */
 #line 4224 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("create type"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 593:
-
-/* Line 1806 of yacc.c  */
 #line 4228 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("create type"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 594:
-
-/* Line 1806 of yacc.c  */
 #line 4232 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("create type"),(yyvsp[(3) - (7)].str),make_str("as ("),(yyvsp[(6) - (7)].str),make_str(")"));
-}
+;}
     break;
 
   case 595:
-
-/* Line 1806 of yacc.c  */
 #line 4236 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("create type"),(yyvsp[(3) - (8)].str),make_str("as enum ("),(yyvsp[(7) - (8)].str),make_str(")"));
-}
+;}
     break;
 
   case 596:
-
-/* Line 1806 of yacc.c  */
 #line 4240 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("create text search parser"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 597:
-
-/* Line 1806 of yacc.c  */
 #line 4244 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("create text search dictionary"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 598:
-
-/* Line 1806 of yacc.c  */
 #line 4248 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("create text search template"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 599:
-
-/* Line 1806 of yacc.c  */
 #line 4252 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("create text search configuration"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 600:
-
-/* Line 1806 of yacc.c  */
 #line 4260 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 601:
-
-/* Line 1806 of yacc.c  */
 #line 4268 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 602:
-
-/* Line 1806 of yacc.c  */
 #line 4272 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 603:
-
-/* Line 1806 of yacc.c  */
 #line 4280 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 604:
-
-/* Line 1806 of yacc.c  */
 #line 4284 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 605:
-
-/* Line 1806 of yacc.c  */
 #line 4292 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 606:
-
-/* Line 1806 of yacc.c  */
 #line 4296 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 607:
-
-/* Line 1806 of yacc.c  */
 #line 4300 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 608:
-
-/* Line 1806 of yacc.c  */
 #line 4304 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 609:
-
-/* Line 1806 of yacc.c  */
 #line 4308 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 610:
-
-/* Line 1806 of yacc.c  */
 #line 4316 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 611:
-
-/* Line 1806 of yacc.c  */
 #line 4320 "preproc.y"
     { 
  (yyval.str) = make_str("( * )");
-}
+;}
     break;
 
   case 612:
-
-/* Line 1806 of yacc.c  */
 #line 4328 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 613:
-
-/* Line 1806 of yacc.c  */
 #line 4336 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 614:
-
-/* Line 1806 of yacc.c  */
 #line 4340 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 615:
-
-/* Line 1806 of yacc.c  */
 #line 4348 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 616:
-
-/* Line 1806 of yacc.c  */
 #line 4356 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 617:
-
-/* Line 1806 of yacc.c  */
 #line 4360 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 618:
-
-/* Line 1806 of yacc.c  */
 #line 4367 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 619:
-
-/* Line 1806 of yacc.c  */
 #line 4371 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 620:
-
-/* Line 1806 of yacc.c  */
 #line 4379 "preproc.y"
     { 
  (yyval.str) = cat_str(10,make_str("create operator class"),(yyvsp[(4) - (13)].str),(yyvsp[(5) - (13)].str),make_str("for type"),(yyvsp[(8) - (13)].str),make_str("using"),(yyvsp[(10) - (13)].str),(yyvsp[(11) - (13)].str),make_str("as"),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 621:
-
-/* Line 1806 of yacc.c  */
 #line 4387 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 622:
-
-/* Line 1806 of yacc.c  */
 #line 4391 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 623:
-
-/* Line 1806 of yacc.c  */
 #line 4399 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("operator"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 624:
-
-/* Line 1806 of yacc.c  */
 #line 4403 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("operator"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 625:
-
-/* Line 1806 of yacc.c  */
 #line 4407 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("function"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 626:
-
-/* Line 1806 of yacc.c  */
 #line 4411 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("function"),(yyvsp[(2) - (7)].str),make_str("("),(yyvsp[(4) - (7)].str),make_str(")"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 627:
-
-/* Line 1806 of yacc.c  */
 #line 4415 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("storage"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 628:
-
-/* Line 1806 of yacc.c  */
 #line 4423 "preproc.y"
     { 
  (yyval.str) = make_str("default");
-}
+;}
     break;
 
   case 629:
-
-/* Line 1806 of yacc.c  */
 #line 4427 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 630:
-
-/* Line 1806 of yacc.c  */
 #line 4434 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("family"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 631:
-
-/* Line 1806 of yacc.c  */
 #line 4438 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 632:
-
-/* Line 1806 of yacc.c  */
 #line 4445 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = make_str("recheck");
-}
+;}
     break;
 
   case 633:
-
-/* Line 1806 of yacc.c  */
 #line 4450 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 634:
-
-/* Line 1806 of yacc.c  */
 #line 4457 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("create operator family"),(yyvsp[(4) - (6)].str),make_str("using"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 635:
-
-/* Line 1806 of yacc.c  */
 #line 4465 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter operator family"),(yyvsp[(4) - (8)].str),make_str("using"),(yyvsp[(6) - (8)].str),make_str("add"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 636:
-
-/* Line 1806 of yacc.c  */
 #line 4469 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter operator family"),(yyvsp[(4) - (8)].str),make_str("using"),(yyvsp[(6) - (8)].str),make_str("drop"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 637:
-
-/* Line 1806 of yacc.c  */
 #line 4477 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 638:
-
-/* Line 1806 of yacc.c  */
 #line 4481 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 639:
-
-/* Line 1806 of yacc.c  */
 #line 4489 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("operator"),(yyvsp[(2) - (5)].str),make_str("("),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 640:
-
-/* Line 1806 of yacc.c  */
 #line 4493 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("function"),(yyvsp[(2) - (5)].str),make_str("("),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 641:
-
-/* Line 1806 of yacc.c  */
 #line 4501 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop operator class"),(yyvsp[(4) - (7)].str),make_str("using"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 642:
-
-/* Line 1806 of yacc.c  */
 #line 4505 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop operator class if exists"),(yyvsp[(6) - (9)].str),make_str("using"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 643:
-
-/* Line 1806 of yacc.c  */
 #line 4513 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop operator family"),(yyvsp[(4) - (7)].str),make_str("using"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 644:
-
-/* Line 1806 of yacc.c  */
 #line 4517 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop operator family if exists"),(yyvsp[(6) - (9)].str),make_str("using"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 645:
-
-/* Line 1806 of yacc.c  */
 #line 4525 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("drop owned by"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 646:
-
-/* Line 1806 of yacc.c  */
 #line 4533 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("reassign owned by"),(yyvsp[(4) - (6)].str),make_str("to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 647:
-
-/* Line 1806 of yacc.c  */
 #line 4541 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop"),(yyvsp[(2) - (6)].str),make_str("if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 648:
-
-/* Line 1806 of yacc.c  */
 #line 4545 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 649:
-
-/* Line 1806 of yacc.c  */
 #line 4553 "preproc.y"
     { 
  (yyval.str) = make_str("table");
-}
+;}
     break;
 
   case 650:
-
-/* Line 1806 of yacc.c  */
 #line 4557 "preproc.y"
     { 
  (yyval.str) = make_str("sequence");
-}
+;}
     break;
 
   case 651:
-
-/* Line 1806 of yacc.c  */
 #line 4561 "preproc.y"
     { 
  (yyval.str) = make_str("view");
-}
+;}
     break;
 
   case 652:
-
-/* Line 1806 of yacc.c  */
 #line 4565 "preproc.y"
     { 
  (yyval.str) = make_str("index");
-}
+;}
     break;
 
   case 653:
-
-/* Line 1806 of yacc.c  */
 #line 4569 "preproc.y"
     { 
  (yyval.str) = make_str("type");
-}
+;}
     break;
 
   case 654:
-
-/* Line 1806 of yacc.c  */
 #line 4573 "preproc.y"
     { 
  (yyval.str) = make_str("domain");
-}
+;}
     break;
 
   case 655:
-
-/* Line 1806 of yacc.c  */
 #line 4577 "preproc.y"
     { 
  (yyval.str) = make_str("conversion");
-}
+;}
     break;
 
   case 656:
-
-/* Line 1806 of yacc.c  */
 #line 4581 "preproc.y"
     { 
  (yyval.str) = make_str("schema");
-}
+;}
     break;
 
   case 657:
-
-/* Line 1806 of yacc.c  */
 #line 4585 "preproc.y"
     { 
  (yyval.str) = make_str("text search parser");
-}
+;}
     break;
 
   case 658:
-
-/* Line 1806 of yacc.c  */
 #line 4589 "preproc.y"
     { 
  (yyval.str) = make_str("text search dictionary");
-}
+;}
     break;
 
   case 659:
-
-/* Line 1806 of yacc.c  */
 #line 4593 "preproc.y"
     { 
  (yyval.str) = make_str("text search template");
-}
+;}
     break;
 
   case 660:
-
-/* Line 1806 of yacc.c  */
 #line 4597 "preproc.y"
     { 
  (yyval.str) = make_str("text search configuration");
-}
+;}
     break;
 
   case 661:
-
-/* Line 1806 of yacc.c  */
 #line 4605 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 662:
-
-/* Line 1806 of yacc.c  */
 #line 4609 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 663:
-
-/* Line 1806 of yacc.c  */
 #line 4617 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 664:
-
-/* Line 1806 of yacc.c  */
 #line 4621 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 665:
-
-/* Line 1806 of yacc.c  */
 #line 4629 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("."),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 666:
-
-/* Line 1806 of yacc.c  */
 #line 4633 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 667:
-
-/* Line 1806 of yacc.c  */
 #line 4641 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("truncate"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 668:
-
-/* Line 1806 of yacc.c  */
 #line 4649 "preproc.y"
     { 
  (yyval.str) = make_str("continue identity");
-}
+;}
     break;
 
   case 669:
-
-/* Line 1806 of yacc.c  */
 #line 4653 "preproc.y"
     { 
  (yyval.str) = make_str("restart identity");
-}
+;}
     break;
 
   case 670:
-
-/* Line 1806 of yacc.c  */
 #line 4657 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 671:
-
-/* Line 1806 of yacc.c  */
 #line 4664 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("comment on"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),make_str("is"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 672:
-
-/* Line 1806 of yacc.c  */
 #line 4668 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("comment on aggregate"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),make_str("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 673:
-
-/* Line 1806 of yacc.c  */
 #line 4672 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("comment on function"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),make_str("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 674:
-
-/* Line 1806 of yacc.c  */
 #line 4676 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("comment on operator"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),make_str("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 675:
-
-/* Line 1806 of yacc.c  */
 #line 4680 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("comment on constraint"),(yyvsp[(4) - (8)].str),make_str("on"),(yyvsp[(6) - (8)].str),make_str("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 676:
-
-/* Line 1806 of yacc.c  */
 #line 4684 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("comment on rule"),(yyvsp[(4) - (8)].str),make_str("on"),(yyvsp[(6) - (8)].str),make_str("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 677:
-
-/* Line 1806 of yacc.c  */
 #line 4688 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("comment on rule"),(yyvsp[(4) - (6)].str),make_str("is"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 678:
-
-/* Line 1806 of yacc.c  */
 #line 4692 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("comment on trigger"),(yyvsp[(4) - (8)].str),make_str("on"),(yyvsp[(6) - (8)].str),make_str("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 679:
-
-/* Line 1806 of yacc.c  */
 #line 4696 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("comment on operator class"),(yyvsp[(5) - (9)].str),make_str("using"),(yyvsp[(7) - (9)].str),make_str("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 680:
-
-/* Line 1806 of yacc.c  */
 #line 4700 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("comment on operator family"),(yyvsp[(5) - (9)].str),make_str("using"),(yyvsp[(7) - (9)].str),make_str("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 681:
-
-/* Line 1806 of yacc.c  */
 #line 4704 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("comment on large object"),(yyvsp[(5) - (7)].str),make_str("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 682:
-
-/* Line 1806 of yacc.c  */
 #line 4708 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("comment on cast ("),(yyvsp[(5) - (10)].str),make_str("as"),(yyvsp[(7) - (10)].str),make_str(") is"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 683:
-
-/* Line 1806 of yacc.c  */
 #line 4712 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("comment on"),(yyvsp[(3) - (7)].str),make_str("language"),(yyvsp[(5) - (7)].str),make_str("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 684:
-
-/* Line 1806 of yacc.c  */
 #line 4716 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("comment on text search parser"),(yyvsp[(6) - (8)].str),make_str("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 685:
-
-/* Line 1806 of yacc.c  */
 #line 4720 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("comment on text search dictionary"),(yyvsp[(6) - (8)].str),make_str("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 686:
-
-/* Line 1806 of yacc.c  */
 #line 4724 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("comment on text search template"),(yyvsp[(6) - (8)].str),make_str("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 687:
-
-/* Line 1806 of yacc.c  */
 #line 4728 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("comment on text search configuration"),(yyvsp[(6) - (8)].str),make_str("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 688:
-
-/* Line 1806 of yacc.c  */
 #line 4736 "preproc.y"
     { 
  (yyval.str) = make_str("column");
-}
+;}
     break;
 
   case 689:
-
-/* Line 1806 of yacc.c  */
 #line 4740 "preproc.y"
     { 
  (yyval.str) = make_str("database");
-}
+;}
     break;
 
   case 690:
-
-/* Line 1806 of yacc.c  */
 #line 4744 "preproc.y"
     { 
  (yyval.str) = make_str("schema");
-}
+;}
     break;
 
   case 691:
-
-/* Line 1806 of yacc.c  */
 #line 4748 "preproc.y"
     { 
  (yyval.str) = make_str("index");
-}
+;}
     break;
 
   case 692:
-
-/* Line 1806 of yacc.c  */
 #line 4752 "preproc.y"
     { 
  (yyval.str) = make_str("sequence");
-}
+;}
     break;
 
   case 693:
-
-/* Line 1806 of yacc.c  */
 #line 4756 "preproc.y"
     { 
  (yyval.str) = make_str("table");
-}
+;}
     break;
 
   case 694:
-
-/* Line 1806 of yacc.c  */
 #line 4760 "preproc.y"
     { 
  (yyval.str) = make_str("domain");
-}
+;}
     break;
 
   case 695:
-
-/* Line 1806 of yacc.c  */
 #line 4764 "preproc.y"
     { 
  (yyval.str) = make_str("type");
-}
+;}
     break;
 
   case 696:
-
-/* Line 1806 of yacc.c  */
 #line 4768 "preproc.y"
     { 
  (yyval.str) = make_str("view");
-}
+;}
     break;
 
   case 697:
-
-/* Line 1806 of yacc.c  */
 #line 4772 "preproc.y"
     { 
  (yyval.str) = make_str("conversion");
-}
+;}
     break;
 
   case 698:
-
-/* Line 1806 of yacc.c  */
 #line 4776 "preproc.y"
     { 
  (yyval.str) = make_str("tablespace");
-}
+;}
     break;
 
   case 699:
-
-/* Line 1806 of yacc.c  */
 #line 4780 "preproc.y"
     { 
  (yyval.str) = make_str("role");
-}
+;}
     break;
 
   case 700:
-
-/* Line 1806 of yacc.c  */
 #line 4788 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 701:
-
-/* Line 1806 of yacc.c  */
 #line 4792 "preproc.y"
     { 
  (yyval.str) = make_str("null");
-}
+;}
     break;
 
   case 702:
-
-/* Line 1806 of yacc.c  */
 #line 4800 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("fetch"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 703:
-
-/* Line 1806 of yacc.c  */
 #line 4804 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("move"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 704:
-
-/* Line 1806 of yacc.c  */
 #line 4808 "preproc.y"
     {
 		(yyval.str) = cat2_str(make_str("fetch"), (yyvsp[(2) - (3)].str));
-	}
+	;}
     break;
 
   case 705:
-
-/* Line 1806 of yacc.c  */
 #line 4812 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (4)].str)[0] == ':' ? make_str("$0") : (yyvsp[(3) - (4)].str);
 		add_additional_variables((yyvsp[(3) - (4)].str), false);
 		(yyval.str) = cat_str(2, make_str("fetch forward"), cursor_marker);
-	}
+	;}
     break;
 
   case 706:
-
-/* Line 1806 of yacc.c  */
 #line 4818 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (5)].str)[0] == ':' ? make_str("$0") : (yyvsp[(4) - (5)].str);
 		add_additional_variables((yyvsp[(4) - (5)].str), false);
 		(yyval.str) = cat_str(2, make_str("fetch forward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 707:
-
-/* Line 1806 of yacc.c  */
 #line 4824 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (4)].str)[0] == ':' ? make_str("$0") : (yyvsp[(3) - (4)].str);
 		add_additional_variables((yyvsp[(3) - (4)].str), false);
 		(yyval.str) = cat_str(2, make_str("fetch backward"), cursor_marker);
-	}
+	;}
     break;
 
   case 708:
-
-/* Line 1806 of yacc.c  */
 #line 4830 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (5)].str)[0] == ':' ? make_str("$0") : (yyvsp[(4) - (5)].str);
 		add_additional_variables((yyvsp[(4) - (5)].str), false);
 		(yyval.str) = cat_str(2, make_str("fetch backward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 709:
-
-/* Line 1806 of yacc.c  */
 #line 4836 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (3)].str)[0] == ':' ? make_str("$0") : (yyvsp[(3) - (3)].str);
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
 		(yyval.str) = cat_str(2, make_str("move forward"), cursor_marker);
-	}
+	;}
     break;
 
   case 710:
-
-/* Line 1806 of yacc.c  */
 #line 4842 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (4)].str)[0] == ':' ? make_str("$0") : (yyvsp[(4) - (4)].str);
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
 		(yyval.str) = cat_str(2, make_str("move forward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 711:
-
-/* Line 1806 of yacc.c  */
 #line 4848 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (3)].str)[0] == ':' ? make_str("$0") : (yyvsp[(3) - (3)].str);
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
 		(yyval.str) = cat_str(2, make_str("move backward"), cursor_marker);
-	}
+	;}
     break;
 
   case 712:
-
-/* Line 1806 of yacc.c  */
 #line 4854 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (4)].str)[0] == ':' ? make_str("$0") : (yyvsp[(4) - (4)].str);
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
 		(yyval.str) = cat_str(2, make_str("move backward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 713:
-
-/* Line 1806 of yacc.c  */
 #line 4864 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(1) - (1)].str), false);
@@ -31801,12 +30804,10 @@
 		}
 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 714:
-
-/* Line 1806 of yacc.c  */
 #line 4875 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(2) - (2)].str), false);
@@ -31817,12 +30818,10 @@
 		}
 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 715:
-
-/* Line 1806 of yacc.c  */
 #line 4886 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -31833,12 +30832,10 @@
 		}
 
  (yyval.str) = cat_str(3,make_str("next"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 716:
-
-/* Line 1806 of yacc.c  */
 #line 4897 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -31849,12 +30846,10 @@
 		}
 
  (yyval.str) = cat_str(3,make_str("prior"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 717:
-
-/* Line 1806 of yacc.c  */
 #line 4908 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -31865,12 +30860,10 @@
 		}
 
  (yyval.str) = cat_str(3,make_str("first"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 718:
-
-/* Line 1806 of yacc.c  */
 #line 4919 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -31881,12 +30874,10 @@
 		}
 
  (yyval.str) = cat_str(3,make_str("last"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 719:
-
-/* Line 1806 of yacc.c  */
 #line 4930 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -31902,12 +30893,10 @@
 		}
 
  (yyval.str) = cat_str(4,make_str("absolute"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 720:
-
-/* Line 1806 of yacc.c  */
 #line 4946 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -31923,12 +30912,10 @@
 		}
 
  (yyval.str) = cat_str(4,make_str("relative"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 721:
-
-/* Line 1806 of yacc.c  */
 #line 4962 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -31944,12 +30931,10 @@
 		}
 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 722:
-
-/* Line 1806 of yacc.c  */
 #line 4978 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -31960,12 +30945,10 @@
 		}
 
  (yyval.str) = cat_str(3,make_str("all"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 723:
-
-/* Line 1806 of yacc.c  */
 #line 4989 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -31981,12 +30964,10 @@
 		}
 
  (yyval.str) = cat_str(4,make_str("forward"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 724:
-
-/* Line 1806 of yacc.c  */
 #line 5005 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -31997,12 +30978,10 @@
 		}
 
  (yyval.str) = cat_str(3,make_str("forward all"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 725:
-
-/* Line 1806 of yacc.c  */
 #line 5016 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -32018,12 +30997,10 @@
 		}
 
  (yyval.str) = cat_str(4,make_str("backward"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 726:
-
-/* Line 1806 of yacc.c  */
 #line 5032 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -32034,3845 +31011,2983 @@
 		}
 
  (yyval.str) = cat_str(3,make_str("backward all"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 727:
-
-/* Line 1806 of yacc.c  */
 #line 5047 "preproc.y"
     { 
  (yyval.str) = make_str("from");
-}
+;}
     break;
 
   case 728:
-
-/* Line 1806 of yacc.c  */
 #line 5051 "preproc.y"
     { 
  (yyval.str) = make_str("in");
-}
+;}
     break;
 
   case 729:
-
-/* Line 1806 of yacc.c  */
 #line 5059 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 730:
-
-/* Line 1806 of yacc.c  */
 #line 5063 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 731:
-
-/* Line 1806 of yacc.c  */
 #line 5070 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("grant"),(yyvsp[(2) - (7)].str),make_str("on"),(yyvsp[(4) - (7)].str),make_str("to"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 732:
-
-/* Line 1806 of yacc.c  */
 #line 5078 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("revoke"),(yyvsp[(2) - (7)].str),make_str("on"),(yyvsp[(4) - (7)].str),make_str("from"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 733:
-
-/* Line 1806 of yacc.c  */
 #line 5082 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("revoke grant option for"),(yyvsp[(5) - (10)].str),make_str("on"),(yyvsp[(7) - (10)].str),make_str("from"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 734:
-
-/* Line 1806 of yacc.c  */
 #line 5090 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 735:
-
-/* Line 1806 of yacc.c  */
 #line 5094 "preproc.y"
     { 
  (yyval.str) = make_str("all");
-}
+;}
     break;
 
   case 736:
-
-/* Line 1806 of yacc.c  */
 #line 5098 "preproc.y"
     { 
  (yyval.str) = make_str("all privileges");
-}
+;}
     break;
 
   case 737:
-
-/* Line 1806 of yacc.c  */
 #line 5102 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("all ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 738:
-
-/* Line 1806 of yacc.c  */
 #line 5106 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("all privileges ("),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 739:
-
-/* Line 1806 of yacc.c  */
 #line 5114 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 740:
-
-/* Line 1806 of yacc.c  */
 #line 5118 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 741:
-
-/* Line 1806 of yacc.c  */
 #line 5126 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("select"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 742:
-
-/* Line 1806 of yacc.c  */
 #line 5130 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("references"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 743:
-
-/* Line 1806 of yacc.c  */
 #line 5134 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("create"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 744:
-
-/* Line 1806 of yacc.c  */
 #line 5138 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 745:
-
-/* Line 1806 of yacc.c  */
 #line 5146 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 746:
-
-/* Line 1806 of yacc.c  */
 #line 5150 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("table"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 747:
-
-/* Line 1806 of yacc.c  */
 #line 5154 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("sequence"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 748:
-
-/* Line 1806 of yacc.c  */
 #line 5158 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("foreign data wrapper"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 749:
-
-/* Line 1806 of yacc.c  */
 #line 5162 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("foreign server"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 750:
-
-/* Line 1806 of yacc.c  */
 #line 5166 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("function"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 751:
-
-/* Line 1806 of yacc.c  */
 #line 5170 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("database"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 752:
-
-/* Line 1806 of yacc.c  */
 #line 5174 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("language"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 753:
-
-/* Line 1806 of yacc.c  */
 #line 5178 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("large object"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 754:
-
-/* Line 1806 of yacc.c  */
 #line 5182 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("schema"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 755:
-
-/* Line 1806 of yacc.c  */
 #line 5186 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("tablespace"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 756:
-
-/* Line 1806 of yacc.c  */
 #line 5190 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("all tables in schema"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 757:
-
-/* Line 1806 of yacc.c  */
 #line 5194 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("all sequences in schema"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 758:
-
-/* Line 1806 of yacc.c  */
 #line 5198 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("all functions in schema"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 759:
-
-/* Line 1806 of yacc.c  */
 #line 5206 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 760:
-
-/* Line 1806 of yacc.c  */
 #line 5210 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 761:
-
-/* Line 1806 of yacc.c  */
 #line 5218 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 762:
-
-/* Line 1806 of yacc.c  */
 #line 5222 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("group"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 763:
-
-/* Line 1806 of yacc.c  */
 #line 5230 "preproc.y"
     { 
  (yyval.str) = make_str("with grant option");
-}
+;}
     break;
 
   case 764:
-
-/* Line 1806 of yacc.c  */
 #line 5234 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 765:
-
-/* Line 1806 of yacc.c  */
 #line 5241 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 766:
-
-/* Line 1806 of yacc.c  */
 #line 5245 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 767:
-
-/* Line 1806 of yacc.c  */
 #line 5253 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 768:
-
-/* Line 1806 of yacc.c  */
 #line 5261 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("grant"),(yyvsp[(2) - (6)].str),make_str("to"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 769:
-
-/* Line 1806 of yacc.c  */
 #line 5269 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("revoke"),(yyvsp[(2) - (6)].str),make_str("from"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 770:
-
-/* Line 1806 of yacc.c  */
 #line 5273 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("revoke admin option for"),(yyvsp[(5) - (9)].str),make_str("from"),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 771:
-
-/* Line 1806 of yacc.c  */
 #line 5281 "preproc.y"
     { 
  (yyval.str) = make_str("with admin option");
-}
+;}
     break;
 
   case 772:
-
-/* Line 1806 of yacc.c  */
 #line 5285 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 773:
-
-/* Line 1806 of yacc.c  */
 #line 5292 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("granted by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 774:
-
-/* Line 1806 of yacc.c  */
 #line 5296 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 775:
-
-/* Line 1806 of yacc.c  */
 #line 5303 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter default privileges"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 776:
-
-/* Line 1806 of yacc.c  */
 #line 5311 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 777:
-
-/* Line 1806 of yacc.c  */
 #line 5315 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 778:
-
-/* Line 1806 of yacc.c  */
 #line 5322 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("in schema"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 779:
-
-/* Line 1806 of yacc.c  */
 #line 5326 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("for role"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 780:
-
-/* Line 1806 of yacc.c  */
 #line 5330 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("for user"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 781:
-
-/* Line 1806 of yacc.c  */
 #line 5338 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("grant"),(yyvsp[(2) - (7)].str),make_str("on"),(yyvsp[(4) - (7)].str),make_str("to"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 782:
-
-/* Line 1806 of yacc.c  */
 #line 5342 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("revoke"),(yyvsp[(2) - (7)].str),make_str("on"),(yyvsp[(4) - (7)].str),make_str("from"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 783:
-
-/* Line 1806 of yacc.c  */
 #line 5346 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("revoke grant option for"),(yyvsp[(5) - (10)].str),make_str("on"),(yyvsp[(7) - (10)].str),make_str("from"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 784:
-
-/* Line 1806 of yacc.c  */
 #line 5354 "preproc.y"
     { 
  (yyval.str) = make_str("tables");
-}
+;}
     break;
 
   case 785:
-
-/* Line 1806 of yacc.c  */
 #line 5358 "preproc.y"
     { 
  (yyval.str) = make_str("functions");
-}
+;}
     break;
 
   case 786:
-
-/* Line 1806 of yacc.c  */
 #line 5362 "preproc.y"
     { 
  (yyval.str) = make_str("sequences");
-}
+;}
     break;
 
   case 787:
-
-/* Line 1806 of yacc.c  */
 #line 5370 "preproc.y"
     { 
  (yyval.str) = cat_str(14,make_str("create"),(yyvsp[(2) - (14)].str),make_str("index"),(yyvsp[(4) - (14)].str),(yyvsp[(5) - (14)].str),make_str("on"),(yyvsp[(7) - (14)].str),(yyvsp[(8) - (14)].str),make_str("("),(yyvsp[(10) - (14)].str),make_str(")"),(yyvsp[(12) - (14)].str),(yyvsp[(13) - (14)].str),(yyvsp[(14) - (14)].str));
-}
+;}
     break;
 
   case 788:
-
-/* Line 1806 of yacc.c  */
 #line 5378 "preproc.y"
     { 
  (yyval.str) = make_str("unique");
-}
+;}
     break;
 
   case 789:
-
-/* Line 1806 of yacc.c  */
 #line 5382 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 790:
-
-/* Line 1806 of yacc.c  */
 #line 5389 "preproc.y"
     { 
  (yyval.str) = make_str("concurrently");
-}
+;}
     break;
 
   case 791:
-
-/* Line 1806 of yacc.c  */
 #line 5393 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 792:
-
-/* Line 1806 of yacc.c  */
 #line 5400 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 793:
-
-/* Line 1806 of yacc.c  */
 #line 5404 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 794:
-
-/* Line 1806 of yacc.c  */
 #line 5411 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 795:
-
-/* Line 1806 of yacc.c  */
 #line 5415 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 796:
-
-/* Line 1806 of yacc.c  */
 #line 5422 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 797:
-
-/* Line 1806 of yacc.c  */
 #line 5426 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 798:
-
-/* Line 1806 of yacc.c  */
 #line 5434 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 799:
-
-/* Line 1806 of yacc.c  */
 #line 5438 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 800:
-
-/* Line 1806 of yacc.c  */
 #line 5442 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("("),(yyvsp[(2) - (6)].str),make_str(")"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 801:
-
-/* Line 1806 of yacc.c  */
 #line 5450 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 802:
-
-/* Line 1806 of yacc.c  */
 #line 5454 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 803:
-
-/* Line 1806 of yacc.c  */
 #line 5458 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 804:
-
-/* Line 1806 of yacc.c  */
 #line 5465 "preproc.y"
     { 
  (yyval.str) = make_str("asc");
-}
+;}
     break;
 
   case 805:
-
-/* Line 1806 of yacc.c  */
 #line 5469 "preproc.y"
     { 
  (yyval.str) = make_str("desc");
-}
+;}
     break;
 
   case 806:
-
-/* Line 1806 of yacc.c  */
 #line 5473 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 807:
-
-/* Line 1806 of yacc.c  */
 #line 5480 "preproc.y"
     { 
  (yyval.str) = make_str("nulls first");
-}
+;}
     break;
 
   case 808:
-
-/* Line 1806 of yacc.c  */
 #line 5484 "preproc.y"
     { 
  (yyval.str) = make_str("nulls last");
-}
+;}
     break;
 
   case 809:
-
-/* Line 1806 of yacc.c  */
 #line 5488 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 810:
-
-/* Line 1806 of yacc.c  */
 #line 5495 "preproc.y"
     { 
  (yyval.str) = cat_str(9,make_str("create"),(yyvsp[(2) - (9)].str),make_str("function"),(yyvsp[(4) - (9)].str),(yyvsp[(5) - (9)].str),make_str("returns"),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 811:
-
-/* Line 1806 of yacc.c  */
 #line 5499 "preproc.y"
     { 
  (yyval.str) = cat_str(10,make_str("create"),(yyvsp[(2) - (12)].str),make_str("function"),(yyvsp[(4) - (12)].str),(yyvsp[(5) - (12)].str),make_str("returns table ("),(yyvsp[(9) - (12)].str),make_str(")"),(yyvsp[(11) - (12)].str),(yyvsp[(12) - (12)].str));
-}
+;}
     break;
 
   case 812:
-
-/* Line 1806 of yacc.c  */
 #line 5503 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("create"),(yyvsp[(2) - (7)].str),make_str("function"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 813:
-
-/* Line 1806 of yacc.c  */
 #line 5511 "preproc.y"
     { 
  (yyval.str) = make_str("or replace");
-}
+;}
     break;
 
   case 814:
-
-/* Line 1806 of yacc.c  */
 #line 5515 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 815:
-
-/* Line 1806 of yacc.c  */
 #line 5522 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 816:
-
-/* Line 1806 of yacc.c  */
 #line 5526 "preproc.y"
     { 
  (yyval.str) = make_str("( )");
-}
+;}
     break;
 
   case 817:
-
-/* Line 1806 of yacc.c  */
 #line 5534 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 818:
-
-/* Line 1806 of yacc.c  */
 #line 5538 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 819:
-
-/* Line 1806 of yacc.c  */
 #line 5546 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 820:
-
-/* Line 1806 of yacc.c  */
 #line 5550 "preproc.y"
     { 
  (yyval.str) = make_str("( )");
-}
+;}
     break;
 
   case 821:
-
-/* Line 1806 of yacc.c  */
 #line 5558 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 822:
-
-/* Line 1806 of yacc.c  */
 #line 5562 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 823:
-
-/* Line 1806 of yacc.c  */
 #line 5570 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 824:
-
-/* Line 1806 of yacc.c  */
 #line 5574 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 825:
-
-/* Line 1806 of yacc.c  */
 #line 5578 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 826:
-
-/* Line 1806 of yacc.c  */
 #line 5582 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 827:
-
-/* Line 1806 of yacc.c  */
 #line 5586 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 828:
-
-/* Line 1806 of yacc.c  */
 #line 5594 "preproc.y"
     { 
  (yyval.str) = make_str("in");
-}
+;}
     break;
 
   case 829:
-
-/* Line 1806 of yacc.c  */
 #line 5598 "preproc.y"
     { 
  (yyval.str) = make_str("out");
-}
+;}
     break;
 
   case 830:
-
-/* Line 1806 of yacc.c  */
 #line 5602 "preproc.y"
     { 
  (yyval.str) = make_str("inout");
-}
+;}
     break;
 
   case 831:
-
-/* Line 1806 of yacc.c  */
 #line 5606 "preproc.y"
     { 
  (yyval.str) = make_str("in out");
-}
+;}
     break;
 
   case 832:
-
-/* Line 1806 of yacc.c  */
 #line 5610 "preproc.y"
     { 
  (yyval.str) = make_str("variadic");
-}
+;}
     break;
 
   case 833:
-
-/* Line 1806 of yacc.c  */
 #line 5618 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 834:
-
-/* Line 1806 of yacc.c  */
 #line 5626 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 835:
-
-/* Line 1806 of yacc.c  */
 #line 5634 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 836:
-
-/* Line 1806 of yacc.c  */
 #line 5638 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),make_str("% type"));
-}
+;}
     break;
 
   case 837:
-
-/* Line 1806 of yacc.c  */
 #line 5642 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("setof"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),make_str("% type"));
-}
+;}
     break;
 
   case 838:
-
-/* Line 1806 of yacc.c  */
 #line 5650 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 839:
-
-/* Line 1806 of yacc.c  */
 #line 5654 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("default"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 840:
-
-/* Line 1806 of yacc.c  */
 #line 5658 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 841:
-
-/* Line 1806 of yacc.c  */
 #line 5666 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 842:
-
-/* Line 1806 of yacc.c  */
 #line 5670 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 843:
-
-/* Line 1806 of yacc.c  */
 #line 5678 "preproc.y"
     { 
  (yyval.str) = make_str("called on null input");
-}
+;}
     break;
 
   case 844:
-
-/* Line 1806 of yacc.c  */
 #line 5682 "preproc.y"
     { 
  (yyval.str) = make_str("returns null on null input");
-}
+;}
     break;
 
   case 845:
-
-/* Line 1806 of yacc.c  */
 #line 5686 "preproc.y"
     { 
  (yyval.str) = make_str("strict");
-}
+;}
     break;
 
   case 846:
-
-/* Line 1806 of yacc.c  */
 #line 5690 "preproc.y"
     { 
  (yyval.str) = make_str("immutable");
-}
+;}
     break;
 
   case 847:
-
-/* Line 1806 of yacc.c  */
 #line 5694 "preproc.y"
     { 
  (yyval.str) = make_str("stable");
-}
+;}
     break;
 
   case 848:
-
-/* Line 1806 of yacc.c  */
 #line 5698 "preproc.y"
     { 
  (yyval.str) = make_str("volatile");
-}
+;}
     break;
 
   case 849:
-
-/* Line 1806 of yacc.c  */
 #line 5702 "preproc.y"
     { 
  (yyval.str) = make_str("external security definer");
-}
+;}
     break;
 
   case 850:
-
-/* Line 1806 of yacc.c  */
 #line 5706 "preproc.y"
     { 
  (yyval.str) = make_str("external security invoker");
-}
+;}
     break;
 
   case 851:
-
-/* Line 1806 of yacc.c  */
 #line 5710 "preproc.y"
     { 
  (yyval.str) = make_str("security definer");
-}
+;}
     break;
 
   case 852:
-
-/* Line 1806 of yacc.c  */
 #line 5714 "preproc.y"
     { 
  (yyval.str) = make_str("security invoker");
-}
+;}
     break;
 
   case 853:
-
-/* Line 1806 of yacc.c  */
 #line 5718 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("cost"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 854:
-
-/* Line 1806 of yacc.c  */
 #line 5722 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("rows"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 855:
-
-/* Line 1806 of yacc.c  */
 #line 5726 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 856:
-
-/* Line 1806 of yacc.c  */
 #line 5734 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("as"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 857:
-
-/* Line 1806 of yacc.c  */
 #line 5738 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("language"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 858:
-
-/* Line 1806 of yacc.c  */
 #line 5742 "preproc.y"
     { 
  (yyval.str) = make_str("window");
-}
+;}
     break;
 
   case 859:
-
-/* Line 1806 of yacc.c  */
 #line 5746 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 860:
-
-/* Line 1806 of yacc.c  */
 #line 5754 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 861:
-
-/* Line 1806 of yacc.c  */
 #line 5758 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 862:
-
-/* Line 1806 of yacc.c  */
 #line 5766 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 863:
-
-/* Line 1806 of yacc.c  */
 #line 5770 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 864:
-
-/* Line 1806 of yacc.c  */
 #line 5777 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 865:
-
-/* Line 1806 of yacc.c  */
 #line 5785 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 866:
-
-/* Line 1806 of yacc.c  */
 #line 5789 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 867:
-
-/* Line 1806 of yacc.c  */
 #line 5797 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter function"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 868:
-
-/* Line 1806 of yacc.c  */
 #line 5805 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 869:
-
-/* Line 1806 of yacc.c  */
 #line 5809 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 870:
-
-/* Line 1806 of yacc.c  */
 #line 5817 "preproc.y"
     { 
  (yyval.str) = make_str("restrict");
-}
+;}
     break;
 
   case 871:
-
-/* Line 1806 of yacc.c  */
 #line 5821 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 872:
-
-/* Line 1806 of yacc.c  */
 #line 5828 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop function"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 873:
-
-/* Line 1806 of yacc.c  */
 #line 5832 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop function if exists"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 874:
-
-/* Line 1806 of yacc.c  */
 #line 5840 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop aggregate"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 875:
-
-/* Line 1806 of yacc.c  */
 #line 5844 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop aggregate if exists"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 876:
-
-/* Line 1806 of yacc.c  */
 #line 5852 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop operator"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 877:
-
-/* Line 1806 of yacc.c  */
 #line 5856 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("drop operator if exists"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 878:
-
-/* Line 1806 of yacc.c  */
 #line 5864 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 879:
-
-/* Line 1806 of yacc.c  */
 #line 5868 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("("),(yyvsp[(2) - (5)].str),make_str(","),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 880:
-
-/* Line 1806 of yacc.c  */
 #line 5872 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("( none ,"),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 881:
-
-/* Line 1806 of yacc.c  */
 #line 5876 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (5)].str),make_str(", none )"));
-}
+;}
     break;
 
   case 882:
-
-/* Line 1806 of yacc.c  */
 #line 5884 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 883:
-
-/* Line 1806 of yacc.c  */
 #line 5888 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 884:
-
-/* Line 1806 of yacc.c  */
 #line 5896 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("do"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 885:
-
-/* Line 1806 of yacc.c  */
 #line 5904 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 886:
-
-/* Line 1806 of yacc.c  */
 #line 5908 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 887:
-
-/* Line 1806 of yacc.c  */
 #line 5916 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 888:
-
-/* Line 1806 of yacc.c  */
 #line 5920 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("language"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 889:
-
-/* Line 1806 of yacc.c  */
 #line 5928 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("create cast ("),(yyvsp[(4) - (11)].str),make_str("as"),(yyvsp[(6) - (11)].str),make_str(") with function"),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 890:
-
-/* Line 1806 of yacc.c  */
 #line 5932 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("create cast ("),(yyvsp[(4) - (10)].str),make_str("as"),(yyvsp[(6) - (10)].str),make_str(") without function"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 891:
-
-/* Line 1806 of yacc.c  */
 #line 5936 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("create cast ("),(yyvsp[(4) - (10)].str),make_str("as"),(yyvsp[(6) - (10)].str),make_str(") with inout"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 892:
-
-/* Line 1806 of yacc.c  */
 #line 5944 "preproc.y"
     { 
  (yyval.str) = make_str("as implicit");
-}
+;}
     break;
 
   case 893:
-
-/* Line 1806 of yacc.c  */
 #line 5948 "preproc.y"
     { 
  (yyval.str) = make_str("as assignment");
-}
+;}
     break;
 
   case 894:
-
-/* Line 1806 of yacc.c  */
 #line 5952 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 895:
-
-/* Line 1806 of yacc.c  */
 #line 5959 "preproc.y"
     { 
  (yyval.str) = cat_str(8,make_str("drop cast"),(yyvsp[(3) - (9)].str),make_str("("),(yyvsp[(5) - (9)].str),make_str("as"),(yyvsp[(7) - (9)].str),make_str(")"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 896:
-
-/* Line 1806 of yacc.c  */
 #line 5967 "preproc.y"
     { 
  (yyval.str) = make_str("if exists");
-}
+;}
     break;
 
   case 897:
-
-/* Line 1806 of yacc.c  */
 #line 5971 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 898:
-
-/* Line 1806 of yacc.c  */
 #line 5978 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("reindex"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 899:
-
-/* Line 1806 of yacc.c  */
 #line 5982 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("reindex system"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 900:
-
-/* Line 1806 of yacc.c  */
 #line 5986 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("reindex database"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 901:
-
-/* Line 1806 of yacc.c  */
 #line 5994 "preproc.y"
     { 
  (yyval.str) = make_str("index");
-}
+;}
     break;
 
   case 902:
-
-/* Line 1806 of yacc.c  */
 #line 5998 "preproc.y"
     { 
  (yyval.str) = make_str("table");
-}
+;}
     break;
 
   case 903:
-
-/* Line 1806 of yacc.c  */
 #line 6006 "preproc.y"
     { 
  (yyval.str) = make_str("force");
-}
+;}
     break;
 
   case 904:
-
-/* Line 1806 of yacc.c  */
 #line 6010 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 905:
-
-/* Line 1806 of yacc.c  */
 #line 6017 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter aggregate"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),make_str("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 906:
-
-/* Line 1806 of yacc.c  */
 #line 6021 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter conversion"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 907:
-
-/* Line 1806 of yacc.c  */
 #line 6025 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter database"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 908:
-
-/* Line 1806 of yacc.c  */
 #line 6029 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter function"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 909:
-
-/* Line 1806 of yacc.c  */
 #line 6033 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter group"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 910:
-
-/* Line 1806 of yacc.c  */
 #line 6037 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter"),(yyvsp[(2) - (7)].str),make_str("language"),(yyvsp[(4) - (7)].str),make_str("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 911:
-
-/* Line 1806 of yacc.c  */
 #line 6041 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter operator class"),(yyvsp[(4) - (9)].str),make_str("using"),(yyvsp[(6) - (9)].str),make_str("rename to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 912:
-
-/* Line 1806 of yacc.c  */
 #line 6045 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter operator family"),(yyvsp[(4) - (9)].str),make_str("using"),(yyvsp[(6) - (9)].str),make_str("rename to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 913:
-
-/* Line 1806 of yacc.c  */
 #line 6049 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter schema"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 914:
-
-/* Line 1806 of yacc.c  */
 #line 6053 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter table"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 915:
-
-/* Line 1806 of yacc.c  */
 #line 6057 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter sequence"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 916:
-
-/* Line 1806 of yacc.c  */
 #line 6061 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter view"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 917:
-
-/* Line 1806 of yacc.c  */
 #line 6065 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter index"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 918:
-
-/* Line 1806 of yacc.c  */
 #line 6069 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("alter table"),(yyvsp[(3) - (8)].str),make_str("rename"),(yyvsp[(5) - (8)].str),(yyvsp[(6) - (8)].str),make_str("to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 919:
-
-/* Line 1806 of yacc.c  */
 #line 6073 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter trigger"),(yyvsp[(3) - (8)].str),make_str("on"),(yyvsp[(5) - (8)].str),make_str("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 920:
-
-/* Line 1806 of yacc.c  */
 #line 6077 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter role"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 921:
-
-/* Line 1806 of yacc.c  */
 #line 6081 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter user"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 922:
-
-/* Line 1806 of yacc.c  */
 #line 6085 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter tablespace"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 923:
-
-/* Line 1806 of yacc.c  */
 #line 6089 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter tablespace"),(yyvsp[(3) - (5)].str),make_str("set"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 924:
-
-/* Line 1806 of yacc.c  */
 #line 6093 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter tablespace"),(yyvsp[(3) - (5)].str),make_str("reset"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 925:
-
-/* Line 1806 of yacc.c  */
 #line 6097 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter text search parser"),(yyvsp[(5) - (8)].str),make_str("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 926:
-
-/* Line 1806 of yacc.c  */
 #line 6101 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter text search dictionary"),(yyvsp[(5) - (8)].str),make_str("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 927:
-
-/* Line 1806 of yacc.c  */
 #line 6105 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter text search template"),(yyvsp[(5) - (8)].str),make_str("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 928:
-
-/* Line 1806 of yacc.c  */
 #line 6109 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter text search configuration"),(yyvsp[(5) - (8)].str),make_str("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 929:
-
-/* Line 1806 of yacc.c  */
 #line 6113 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter type"),(yyvsp[(3) - (6)].str),make_str("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 930:
-
-/* Line 1806 of yacc.c  */
 #line 6121 "preproc.y"
     { 
  (yyval.str) = make_str("column");
-}
+;}
     break;
 
   case 931:
-
-/* Line 1806 of yacc.c  */
 #line 6125 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 932:
-
-/* Line 1806 of yacc.c  */
 #line 6132 "preproc.y"
     { 
  (yyval.str) = make_str("set data");
-}
+;}
     break;
 
   case 933:
-
-/* Line 1806 of yacc.c  */
 #line 6136 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 934:
-
-/* Line 1806 of yacc.c  */
 #line 6143 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter aggregate"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),make_str("set schema"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 935:
-
-/* Line 1806 of yacc.c  */
 #line 6147 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter domain"),(yyvsp[(3) - (6)].str),make_str("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 936:
-
-/* Line 1806 of yacc.c  */
 #line 6151 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter function"),(yyvsp[(3) - (6)].str),make_str("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 937:
-
-/* Line 1806 of yacc.c  */
 #line 6155 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter table"),(yyvsp[(3) - (6)].str),make_str("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 938:
-
-/* Line 1806 of yacc.c  */
 #line 6159 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter sequence"),(yyvsp[(3) - (6)].str),make_str("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 939:
-
-/* Line 1806 of yacc.c  */
 #line 6163 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter view"),(yyvsp[(3) - (6)].str),make_str("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 940:
-
-/* Line 1806 of yacc.c  */
 #line 6167 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter type"),(yyvsp[(3) - (6)].str),make_str("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 941:
-
-/* Line 1806 of yacc.c  */
 #line 6175 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter aggregate"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),make_str("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 942:
-
-/* Line 1806 of yacc.c  */
 #line 6179 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter conversion"),(yyvsp[(3) - (6)].str),make_str("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 943:
-
-/* Line 1806 of yacc.c  */
 #line 6183 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter database"),(yyvsp[(3) - (6)].str),make_str("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 944:
-
-/* Line 1806 of yacc.c  */
 #line 6187 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter domain"),(yyvsp[(3) - (6)].str),make_str("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 945:
-
-/* Line 1806 of yacc.c  */
 #line 6191 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter function"),(yyvsp[(3) - (6)].str),make_str("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 946:
-
-/* Line 1806 of yacc.c  */
 #line 6195 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter"),(yyvsp[(2) - (7)].str),make_str("language"),(yyvsp[(4) - (7)].str),make_str("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 947:
-
-/* Line 1806 of yacc.c  */
 #line 6199 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter large object"),(yyvsp[(4) - (7)].str),make_str("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 948:
-
-/* Line 1806 of yacc.c  */
 #line 6203 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter operator"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),make_str("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 949:
-
-/* Line 1806 of yacc.c  */
 #line 6207 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter operator class"),(yyvsp[(4) - (9)].str),make_str("using"),(yyvsp[(6) - (9)].str),make_str("owner to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 950:
-
-/* Line 1806 of yacc.c  */
 #line 6211 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter operator family"),(yyvsp[(4) - (9)].str),make_str("using"),(yyvsp[(6) - (9)].str),make_str("owner to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 951:
-
-/* Line 1806 of yacc.c  */
 #line 6215 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter schema"),(yyvsp[(3) - (6)].str),make_str("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 952:
-
-/* Line 1806 of yacc.c  */
 #line 6219 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter type"),(yyvsp[(3) - (6)].str),make_str("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 953:
-
-/* Line 1806 of yacc.c  */
 #line 6223 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter tablespace"),(yyvsp[(3) - (6)].str),make_str("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 954:
-
-/* Line 1806 of yacc.c  */
 #line 6227 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter text search dictionary"),(yyvsp[(5) - (8)].str),make_str("owner to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 955:
-
-/* Line 1806 of yacc.c  */
 #line 6231 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter text search configuration"),(yyvsp[(5) - (8)].str),make_str("owner to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 956:
-
-/* Line 1806 of yacc.c  */
 #line 6235 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter foreign data wrapper"),(yyvsp[(5) - (8)].str),make_str("owner to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 957:
-
-/* Line 1806 of yacc.c  */
 #line 6239 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter server"),(yyvsp[(3) - (6)].str),make_str("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 958:
-
-/* Line 1806 of yacc.c  */
 #line 6247 "preproc.y"
     { 
  (yyval.str) = cat_str(12,make_str("create"),(yyvsp[(2) - (13)].str),make_str("rule"),(yyvsp[(4) - (13)].str),make_str("as on"),(yyvsp[(7) - (13)].str),make_str("to"),(yyvsp[(9) - (13)].str),(yyvsp[(10) - (13)].str),make_str("do"),(yyvsp[(12) - (13)].str),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 959:
-
-/* Line 1806 of yacc.c  */
 #line 6255 "preproc.y"
     { 
  (yyval.str) = make_str("nothing");
-}
+;}
     break;
 
   case 960:
-
-/* Line 1806 of yacc.c  */
 #line 6259 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 961:
-
-/* Line 1806 of yacc.c  */
 #line 6263 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 962:
-
-/* Line 1806 of yacc.c  */
 #line 6271 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(";"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 963:
-
-/* Line 1806 of yacc.c  */
 #line 6275 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 964:
-
-/* Line 1806 of yacc.c  */
 #line 6283 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 965:
-
-/* Line 1806 of yacc.c  */
 #line 6287 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 966:
-
-/* Line 1806 of yacc.c  */
 #line 6291 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 967:
-
-/* Line 1806 of yacc.c  */
 #line 6295 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 968:
-
-/* Line 1806 of yacc.c  */
 #line 6299 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 969:
-
-/* Line 1806 of yacc.c  */
 #line 6307 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 970:
-
-/* Line 1806 of yacc.c  */
 #line 6311 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 971:
-
-/* Line 1806 of yacc.c  */
 #line 6318 "preproc.y"
     { 
  (yyval.str) = make_str("select");
-}
+;}
     break;
 
   case 972:
-
-/* Line 1806 of yacc.c  */
 #line 6322 "preproc.y"
     { 
  (yyval.str) = make_str("update");
-}
+;}
     break;
 
   case 973:
-
-/* Line 1806 of yacc.c  */
 #line 6326 "preproc.y"
     { 
  (yyval.str) = make_str("delete");
-}
+;}
     break;
 
   case 974:
-
-/* Line 1806 of yacc.c  */
 #line 6330 "preproc.y"
     { 
  (yyval.str) = make_str("insert");
-}
+;}
     break;
 
   case 975:
-
-/* Line 1806 of yacc.c  */
 #line 6338 "preproc.y"
     { 
  (yyval.str) = make_str("instead");
-}
+;}
     break;
 
   case 976:
-
-/* Line 1806 of yacc.c  */
 #line 6342 "preproc.y"
     { 
  (yyval.str) = make_str("also");
-}
+;}
     break;
 
   case 977:
-
-/* Line 1806 of yacc.c  */
 #line 6346 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 978:
-
-/* Line 1806 of yacc.c  */
 #line 6353 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop rule"),(yyvsp[(3) - (6)].str),make_str("on"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 979:
-
-/* Line 1806 of yacc.c  */
 #line 6357 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("drop rule if exists"),(yyvsp[(5) - (8)].str),make_str("on"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 980:
-
-/* Line 1806 of yacc.c  */
 #line 6365 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("notify"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 981:
-
-/* Line 1806 of yacc.c  */
 #line 6373 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str(","),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 982:
-
-/* Line 1806 of yacc.c  */
 #line 6377 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 983:
-
-/* Line 1806 of yacc.c  */
 #line 6384 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("listen"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 984:
-
-/* Line 1806 of yacc.c  */
 #line 6392 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("unlisten"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 985:
-
-/* Line 1806 of yacc.c  */
 #line 6396 "preproc.y"
     { 
  (yyval.str) = make_str("unlisten *");
-}
+;}
     break;
 
   case 986:
-
-/* Line 1806 of yacc.c  */
 #line 6404 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("abort"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 987:
-
-/* Line 1806 of yacc.c  */
 #line 6408 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("begin"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 988:
-
-/* Line 1806 of yacc.c  */
 #line 6412 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("start transaction"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 989:
-
-/* Line 1806 of yacc.c  */
 #line 6416 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("commit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 990:
-
-/* Line 1806 of yacc.c  */
 #line 6420 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("end"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 991:
-
-/* Line 1806 of yacc.c  */
 #line 6424 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("rollback"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 992:
-
-/* Line 1806 of yacc.c  */
 #line 6428 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("savepoint"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 993:
-
-/* Line 1806 of yacc.c  */
 #line 6432 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("release savepoint"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 994:
-
-/* Line 1806 of yacc.c  */
 #line 6436 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("release"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 995:
-
-/* Line 1806 of yacc.c  */
 #line 6440 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("rollback"),(yyvsp[(2) - (5)].str),make_str("to savepoint"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 996:
-
-/* Line 1806 of yacc.c  */
 #line 6444 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("rollback"),(yyvsp[(2) - (4)].str),make_str("to"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 997:
-
-/* Line 1806 of yacc.c  */
 #line 6448 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("prepare transaction"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 998:
-
-/* Line 1806 of yacc.c  */
 #line 6452 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("commit prepared"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 999:
-
-/* Line 1806 of yacc.c  */
 #line 6456 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("rollback prepared"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1000:
-
-/* Line 1806 of yacc.c  */
 #line 6464 "preproc.y"
     { 
  (yyval.str) = make_str("work");
-}
+;}
     break;
 
   case 1001:
-
-/* Line 1806 of yacc.c  */
 #line 6468 "preproc.y"
     { 
  (yyval.str) = make_str("transaction");
-}
+;}
     break;
 
   case 1002:
-
-/* Line 1806 of yacc.c  */
 #line 6472 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1003:
-
-/* Line 1806 of yacc.c  */
 #line 6479 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("isolation level"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1004:
-
-/* Line 1806 of yacc.c  */
 #line 6483 "preproc.y"
     { 
  (yyval.str) = make_str("read only");
-}
+;}
     break;
 
   case 1005:
-
-/* Line 1806 of yacc.c  */
 #line 6487 "preproc.y"
     { 
  (yyval.str) = make_str("read write");
-}
+;}
     break;
 
   case 1006:
-
-/* Line 1806 of yacc.c  */
 #line 6495 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1007:
-
-/* Line 1806 of yacc.c  */
 #line 6499 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1008:
-
-/* Line 1806 of yacc.c  */
 #line 6503 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1009:
-
-/* Line 1806 of yacc.c  */
 #line 6511 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1010:
-
-/* Line 1806 of yacc.c  */
 #line 6515 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1011:
-
-/* Line 1806 of yacc.c  */
 #line 6522 "preproc.y"
     { 
  (yyval.str) = cat_str(8,make_str("create"),(yyvsp[(2) - (8)].str),make_str("view"),(yyvsp[(4) - (8)].str),(yyvsp[(5) - (8)].str),make_str("as"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1012:
-
-/* Line 1806 of yacc.c  */
 #line 6526 "preproc.y"
     { 
  (yyval.str) = cat_str(8,make_str("create or replace"),(yyvsp[(4) - (10)].str),make_str("view"),(yyvsp[(6) - (10)].str),(yyvsp[(7) - (10)].str),make_str("as"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1013:
-
-/* Line 1806 of yacc.c  */
 #line 6534 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = make_str("with check option");
-}
+;}
     break;
 
   case 1014:
-
-/* Line 1806 of yacc.c  */
 #line 6539 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = make_str("with cascaded check option");
-}
+;}
     break;
 
   case 1015:
-
-/* Line 1806 of yacc.c  */
 #line 6544 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = make_str("with local check option");
-}
+;}
     break;
 
   case 1016:
-
-/* Line 1806 of yacc.c  */
 #line 6549 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1017:
-
-/* Line 1806 of yacc.c  */
 #line 6556 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("load"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1018:
-
-/* Line 1806 of yacc.c  */
 #line 6564 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("create database"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1019:
-
-/* Line 1806 of yacc.c  */
 #line 6572 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1020:
-
-/* Line 1806 of yacc.c  */
 #line 6576 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1021:
-
-/* Line 1806 of yacc.c  */
 #line 6583 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("tablespace"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1022:
-
-/* Line 1806 of yacc.c  */
 #line 6587 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("tablespace"),(yyvsp[(2) - (3)].str),make_str("default"));
-}
+;}
     break;
 
   case 1023:
-
-/* Line 1806 of yacc.c  */
 #line 6591 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("location"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1024:
-
-/* Line 1806 of yacc.c  */
 #line 6595 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("location"),(yyvsp[(2) - (3)].str),make_str("default"));
-}
+;}
     break;
 
   case 1025:
-
-/* Line 1806 of yacc.c  */
 #line 6599 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("template"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1026:
-
-/* Line 1806 of yacc.c  */
 #line 6603 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("template"),(yyvsp[(2) - (3)].str),make_str("default"));
-}
+;}
     break;
 
   case 1027:
-
-/* Line 1806 of yacc.c  */
 #line 6607 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("encoding"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1028:
-
-/* Line 1806 of yacc.c  */
 #line 6611 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("encoding"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1029:
-
-/* Line 1806 of yacc.c  */
 #line 6615 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("encoding"),(yyvsp[(2) - (3)].str),make_str("default"));
-}
+;}
     break;
 
   case 1030:
-
-/* Line 1806 of yacc.c  */
 #line 6619 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("lc_collate"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1031:
-
-/* Line 1806 of yacc.c  */
 #line 6623 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("lc_collate"),(yyvsp[(2) - (3)].str),make_str("default"));
-}
+;}
     break;
 
   case 1032:
-
-/* Line 1806 of yacc.c  */
 #line 6627 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("lc_ctype"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1033:
-
-/* Line 1806 of yacc.c  */
 #line 6631 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("lc_ctype"),(yyvsp[(2) - (3)].str),make_str("default"));
-}
+;}
     break;
 
   case 1034:
-
-/* Line 1806 of yacc.c  */
 #line 6635 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("connection limit"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1035:
-
-/* Line 1806 of yacc.c  */
 #line 6639 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("owner"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1036:
-
-/* Line 1806 of yacc.c  */
 #line 6643 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("owner"),(yyvsp[(2) - (3)].str),make_str("default"));
-}
+;}
     break;
 
   case 1037:
-
-/* Line 1806 of yacc.c  */
 #line 6651 "preproc.y"
     { 
  (yyval.str) = make_str("=");
-}
+;}
     break;
 
   case 1038:
-
-/* Line 1806 of yacc.c  */
 #line 6655 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1039:
-
-/* Line 1806 of yacc.c  */
 #line 6662 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter database"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1040:
-
-/* Line 1806 of yacc.c  */
 #line 6666 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter database"),(yyvsp[(3) - (6)].str),make_str("set tablespace"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1041:
-
-/* Line 1806 of yacc.c  */
 #line 6674 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter database"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1042:
-
-/* Line 1806 of yacc.c  */
 #line 6682 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1043:
-
-/* Line 1806 of yacc.c  */
 #line 6686 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1044:
-
-/* Line 1806 of yacc.c  */
 #line 6693 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("connection limit"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1045:
-
-/* Line 1806 of yacc.c  */
 #line 6701 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop database"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1046:
-
-/* Line 1806 of yacc.c  */
 #line 6705 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("drop database if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1047:
-
-/* Line 1806 of yacc.c  */
 #line 6713 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("create domain"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1048:
-
-/* Line 1806 of yacc.c  */
 #line 6721 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter domain"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1049:
-
-/* Line 1806 of yacc.c  */
 #line 6725 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter domain"),(yyvsp[(3) - (6)].str),make_str("drop not null"));
-}
+;}
     break;
 
   case 1050:
-
-/* Line 1806 of yacc.c  */
 #line 6729 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter domain"),(yyvsp[(3) - (6)].str),make_str("set not null"));
-}
+;}
     break;
 
   case 1051:
-
-/* Line 1806 of yacc.c  */
 #line 6733 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter domain"),(yyvsp[(3) - (5)].str),make_str("add"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1052:
-
-/* Line 1806 of yacc.c  */
 #line 6737 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("alter domain"),(yyvsp[(3) - (7)].str),make_str("drop constraint"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1053:
-
-/* Line 1806 of yacc.c  */
 #line 6745 "preproc.y"
     { 
  (yyval.str) = make_str("as");
-}
+;}
     break;
 
   case 1054:
-
-/* Line 1806 of yacc.c  */
 #line 6749 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1055:
-
-/* Line 1806 of yacc.c  */
 #line 6756 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("alter text search dictionary"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1056:
-
-/* Line 1806 of yacc.c  */
 #line 6764 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter text search configuration"),(yyvsp[(5) - (11)].str),make_str("add mapping for"),(yyvsp[(9) - (11)].str),make_str("with"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1057:
-
-/* Line 1806 of yacc.c  */
 #line 6768 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter text search configuration"),(yyvsp[(5) - (11)].str),make_str("alter mapping for"),(yyvsp[(9) - (11)].str),make_str("with"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1058:
-
-/* Line 1806 of yacc.c  */
 #line 6772 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("alter text search configuration"),(yyvsp[(5) - (11)].str),make_str("alter mapping replace"),(yyvsp[(9) - (11)].str),make_str("with"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1059:
-
-/* Line 1806 of yacc.c  */
 #line 6776 "preproc.y"
     { 
  (yyval.str) = cat_str(8,make_str("alter text search configuration"),(yyvsp[(5) - (13)].str),make_str("alter mapping for"),(yyvsp[(9) - (13)].str),make_str("replace"),(yyvsp[(11) - (13)].str),make_str("with"),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 1060:
-
-/* Line 1806 of yacc.c  */
 #line 6780 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter text search configuration"),(yyvsp[(5) - (9)].str),make_str("drop mapping for"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1061:
-
-/* Line 1806 of yacc.c  */
 #line 6784 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("alter text search configuration"),(yyvsp[(5) - (11)].str),make_str("drop mapping if exists for"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1062:
-
-/* Line 1806 of yacc.c  */
 #line 6792 "preproc.y"
     { 
  (yyval.str) = cat_str(10,make_str("create"),(yyvsp[(2) - (10)].str),make_str("conversion"),(yyvsp[(4) - (10)].str),make_str("for"),(yyvsp[(6) - (10)].str),make_str("to"),(yyvsp[(8) - (10)].str),make_str("from"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1063:
-
-/* Line 1806 of yacc.c  */
 #line 6800 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("cluster"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1064:
-
-/* Line 1806 of yacc.c  */
 #line 6804 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("cluster"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1065:
-
-/* Line 1806 of yacc.c  */
 #line 6808 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("cluster"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),make_str("on"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1066:
-
-/* Line 1806 of yacc.c  */
 #line 6816 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1067:
-
-/* Line 1806 of yacc.c  */
 #line 6820 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1068:
-
-/* Line 1806 of yacc.c  */
 #line 6827 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("vacuum"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1069:
-
-/* Line 1806 of yacc.c  */
 #line 6831 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("vacuum"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1070:
-
-/* Line 1806 of yacc.c  */
 #line 6835 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("vacuum"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1071:
-
-/* Line 1806 of yacc.c  */
 #line 6839 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("vacuum ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1072:
-
-/* Line 1806 of yacc.c  */
 #line 6843 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("vacuum ("),(yyvsp[(3) - (6)].str),make_str(")"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1073:
-
-/* Line 1806 of yacc.c  */
 #line 6851 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1074:
-
-/* Line 1806 of yacc.c  */
 #line 6855 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1075:
-
-/* Line 1806 of yacc.c  */
 #line 6863 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1076:
-
-/* Line 1806 of yacc.c  */
 #line 6867 "preproc.y"
     { 
  (yyval.str) = make_str("verbose");
-}
+;}
     break;
 
   case 1077:
-
-/* Line 1806 of yacc.c  */
 #line 6871 "preproc.y"
     { 
  (yyval.str) = make_str("freeze");
-}
+;}
     break;
 
   case 1078:
-
-/* Line 1806 of yacc.c  */
 #line 6875 "preproc.y"
     { 
  (yyval.str) = make_str("full");
-}
+;}
     break;
 
   case 1079:
-
-/* Line 1806 of yacc.c  */
 #line 6883 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1080:
-
-/* Line 1806 of yacc.c  */
 #line 6887 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1081:
-
-/* Line 1806 of yacc.c  */
 #line 6895 "preproc.y"
     { 
  (yyval.str) = make_str("analyze");
-}
+;}
     break;
 
   case 1082:
-
-/* Line 1806 of yacc.c  */
 #line 6899 "preproc.y"
     { 
  (yyval.str) = make_str("analyse");
-}
+;}
     break;
 
   case 1083:
-
-/* Line 1806 of yacc.c  */
 #line 6907 "preproc.y"
     { 
  (yyval.str) = make_str("verbose");
-}
+;}
     break;
 
   case 1084:
-
-/* Line 1806 of yacc.c  */
 #line 6911 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1085:
-
-/* Line 1806 of yacc.c  */
 #line 6918 "preproc.y"
     { 
  (yyval.str) = make_str("full");
-}
+;}
     break;
 
   case 1086:
-
-/* Line 1806 of yacc.c  */
 #line 6922 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1087:
-
-/* Line 1806 of yacc.c  */
 #line 6929 "preproc.y"
     { 
  (yyval.str) = make_str("freeze");
-}
+;}
     break;
 
   case 1088:
-
-/* Line 1806 of yacc.c  */
 #line 6933 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1089:
-
-/* Line 1806 of yacc.c  */
 #line 6940 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1090:
-
-/* Line 1806 of yacc.c  */
 #line 6944 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1091:
-
-/* Line 1806 of yacc.c  */
 #line 6951 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("explain"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1092:
-
-/* Line 1806 of yacc.c  */
 #line 6955 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("explain"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1093:
-
-/* Line 1806 of yacc.c  */
 #line 6959 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("explain verbose"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1094:
-
-/* Line 1806 of yacc.c  */
 #line 6963 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("explain ("),(yyvsp[(3) - (5)].str),make_str(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1095:
-
-/* Line 1806 of yacc.c  */
 #line 6971 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1096:
-
-/* Line 1806 of yacc.c  */
 #line 6975 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1097:
-
-/* Line 1806 of yacc.c  */
 #line 6979 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1098:
-
-/* Line 1806 of yacc.c  */
 #line 6983 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1099:
-
-/* Line 1806 of yacc.c  */
 #line 6987 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1100:
-
-/* Line 1806 of yacc.c  */
 #line 6991 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1101:
-
-/* Line 1806 of yacc.c  */
 #line 6995 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1102:
-
-/* Line 1806 of yacc.c  */
 #line 7003 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1103:
-
-/* Line 1806 of yacc.c  */
 #line 7007 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1104:
-
-/* Line 1806 of yacc.c  */
 #line 7015 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1105:
-
-/* Line 1806 of yacc.c  */
 #line 7023 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1106:
-
-/* Line 1806 of yacc.c  */
 #line 7027 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1107:
-
-/* Line 1806 of yacc.c  */
 #line 7035 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1108:
-
-/* Line 1806 of yacc.c  */
 #line 7039 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1109:
-
-/* Line 1806 of yacc.c  */
 #line 7043 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1110:
-
-/* Line 1806 of yacc.c  */
 #line 7050 "preproc.y"
     {
 		(yyval.prep).name = (yyvsp[(2) - (5)].str);
 		(yyval.prep).type = (yyvsp[(3) - (5)].str);
 		(yyval.prep).stmt = cat_str(3, make_str("\""), (yyvsp[(5) - (5)].str), make_str("\""));
-	}
+	;}
     break;
 
   case 1111:
-
-/* Line 1806 of yacc.c  */
 #line 7056 "preproc.y"
     {
 		(yyval.prep).name = (yyvsp[(2) - (4)].str);
 		(yyval.prep).type = NULL;
 		(yyval.prep).stmt = (yyvsp[(4) - (4)].str);
-	}
+	;}
     break;
 
   case 1112:
-
-/* Line 1806 of yacc.c  */
 #line 7066 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1113:
-
-/* Line 1806 of yacc.c  */
 #line 7070 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1114:
-
-/* Line 1806 of yacc.c  */
 #line 7077 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1115:
-
-/* Line 1806 of yacc.c  */
 #line 7081 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1116:
-
-/* Line 1806 of yacc.c  */
 #line 7085 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1117:
-
-/* Line 1806 of yacc.c  */
 #line 7089 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1118:
-
-/* Line 1806 of yacc.c  */
 #line 7097 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (4)].str); }
+    { (yyval.str) = (yyvsp[(2) - (4)].str); ;}
     break;
 
   case 1119:
-
-/* Line 1806 of yacc.c  */
 #line 7099 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("create"),(yyvsp[(2) - (8)].str),make_str("table"),(yyvsp[(4) - (8)].str),make_str("as execute"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1120:
-
-/* Line 1806 of yacc.c  */
 #line 7107 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1121:
-
-/* Line 1806 of yacc.c  */
 #line 7111 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1122:
-
-/* Line 1806 of yacc.c  */
 #line 7118 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("insert into"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1123:
-
-/* Line 1806 of yacc.c  */
 #line 7126 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1124:
-
-/* Line 1806 of yacc.c  */
 #line 7130 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("("),(yyvsp[(2) - (4)].str),make_str(")"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1125:
-
-/* Line 1806 of yacc.c  */
 #line 7134 "preproc.y"
     { 
  (yyval.str) = make_str("default values");
-}
+;}
     break;
 
   case 1126:
-
-/* Line 1806 of yacc.c  */
 #line 7142 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1127:
-
-/* Line 1806 of yacc.c  */
 #line 7146 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1128:
-
-/* Line 1806 of yacc.c  */
 #line 7154 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1129:
-
-/* Line 1806 of yacc.c  */
 #line 7162 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("returning"),(yyvsp[(2) - (3)].str));
-}
+;}
     break;
 
   case 1130:
-
-/* Line 1806 of yacc.c  */
 #line 7166 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1131:
-
-/* Line 1806 of yacc.c  */
 #line 7173 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("delete from"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1132:
-
-/* Line 1806 of yacc.c  */
 #line 7181 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1133:
-
-/* Line 1806 of yacc.c  */
 #line 7185 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1134:
-
-/* Line 1806 of yacc.c  */
 #line 7192 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("lock"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1135:
-
-/* Line 1806 of yacc.c  */
 #line 7200 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("in"),(yyvsp[(2) - (3)].str),make_str("mode"));
-}
+;}
     break;
 
   case 1136:
-
-/* Line 1806 of yacc.c  */
 #line 7204 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1137:
-
-/* Line 1806 of yacc.c  */
 #line 7211 "preproc.y"
     { 
  (yyval.str) = make_str("access share");
-}
+;}
     break;
 
   case 1138:
-
-/* Line 1806 of yacc.c  */
 #line 7215 "preproc.y"
     { 
  (yyval.str) = make_str("row share");
-}
+;}
     break;
 
   case 1139:
-
-/* Line 1806 of yacc.c  */
 #line 7219 "preproc.y"
     { 
  (yyval.str) = make_str("row exclusive");
-}
+;}
     break;
 
   case 1140:
-
-/* Line 1806 of yacc.c  */
 #line 7223 "preproc.y"
     { 
  (yyval.str) = make_str("share update exclusive");
-}
+;}
     break;
 
   case 1141:
-
-/* Line 1806 of yacc.c  */
 #line 7227 "preproc.y"
     { 
  (yyval.str) = make_str("share");
-}
+;}
     break;
 
   case 1142:
-
-/* Line 1806 of yacc.c  */
 #line 7231 "preproc.y"
     { 
  (yyval.str) = make_str("share row exclusive");
-}
+;}
     break;
 
   case 1143:
-
-/* Line 1806 of yacc.c  */
 #line 7235 "preproc.y"
     { 
  (yyval.str) = make_str("exclusive");
-}
+;}
     break;
 
   case 1144:
-
-/* Line 1806 of yacc.c  */
 #line 7239 "preproc.y"
     { 
  (yyval.str) = make_str("access exclusive");
-}
+;}
     break;
 
   case 1145:
-
-/* Line 1806 of yacc.c  */
 #line 7247 "preproc.y"
     { 
  (yyval.str) = make_str("nowait");
-}
+;}
     break;
 
   case 1146:
-
-/* Line 1806 of yacc.c  */
 #line 7251 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1147:
-
-/* Line 1806 of yacc.c  */
 #line 7258 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("update"),(yyvsp[(2) - (7)].str),make_str("set"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1148:
-
-/* Line 1806 of yacc.c  */
 #line 7266 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1149:
-
-/* Line 1806 of yacc.c  */
 #line 7270 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1150:
-
-/* Line 1806 of yacc.c  */
 #line 7278 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1151:
-
-/* Line 1806 of yacc.c  */
 #line 7282 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1152:
-
-/* Line 1806 of yacc.c  */
 #line 7290 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1153:
-
-/* Line 1806 of yacc.c  */
 #line 7298 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("("),(yyvsp[(2) - (5)].str),make_str(") ="),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1154:
-
-/* Line 1806 of yacc.c  */
 #line 7306 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1155:
-
-/* Line 1806 of yacc.c  */
 #line 7314 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1156:
-
-/* Line 1806 of yacc.c  */
 #line 7318 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1157:
-
-/* Line 1806 of yacc.c  */
 #line 7326 "preproc.y"
     {
 		struct cursor *ptr, *this;
@@ -35920,21 +34035,17 @@
 				comment);
 		else
 			(yyval.str) = cat2_str(adjust_outofscope_cursor_vars(this), comment);
-	}
+	;}
     break;
 
   case 1158:
-
-/* Line 1806 of yacc.c  */
 #line 7378 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1159:
-
-/* Line 1806 of yacc.c  */
 #line 7382 "preproc.y"
     {
 			char *curname = mm_alloc(strlen((yyvsp[(1) - (1)].str)) + 2);
@@ -35942,1392 +34053,1080 @@
 			free((yyvsp[(1) - (1)].str));
 			(yyvsp[(1) - (1)].str) = curname;
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 1160:
-
-/* Line 1806 of yacc.c  */
 #line 7394 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1161:
-
-/* Line 1806 of yacc.c  */
 #line 7397 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("no scroll"));
-}
+;}
     break;
 
   case 1162:
-
-/* Line 1806 of yacc.c  */
 #line 7401 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),make_str("scroll"));
-}
+;}
     break;
 
   case 1163:
-
-/* Line 1806 of yacc.c  */
 #line 7405 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),make_str("binary"));
-}
+;}
     break;
 
   case 1164:
-
-/* Line 1806 of yacc.c  */
 #line 7409 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),make_str("insensitive"));
-}
+;}
     break;
 
   case 1165:
-
-/* Line 1806 of yacc.c  */
 #line 7417 "preproc.y"
     {
 		if (compat == ECPG_COMPAT_INFORMIX_SE && autocommit == true)
 			(yyval.str) = make_str("with hold");
 		else
 			(yyval.str) = EMPTY;
-	}
+	;}
     break;
 
   case 1166:
-
-/* Line 1806 of yacc.c  */
 #line 7424 "preproc.y"
     { 
  (yyval.str) = make_str("with hold");
-}
+;}
     break;
 
   case 1167:
-
-/* Line 1806 of yacc.c  */
 #line 7428 "preproc.y"
     { 
  (yyval.str) = make_str("without hold");
-}
+;}
     break;
 
   case 1168:
-
-/* Line 1806 of yacc.c  */
 #line 7436 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1169:
-
-/* Line 1806 of yacc.c  */
 #line 7440 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1170:
-
-/* Line 1806 of yacc.c  */
 #line 7448 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1171:
-
-/* Line 1806 of yacc.c  */
 #line 7452 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1172:
-
-/* Line 1806 of yacc.c  */
 #line 7460 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1173:
-
-/* Line 1806 of yacc.c  */
 #line 7464 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1174:
-
-/* Line 1806 of yacc.c  */
 #line 7468 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1175:
-
-/* Line 1806 of yacc.c  */
 #line 7472 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1176:
-
-/* Line 1806 of yacc.c  */
 #line 7476 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1177:
-
-/* Line 1806 of yacc.c  */
 #line 7480 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1178:
-
-/* Line 1806 of yacc.c  */
 #line 7484 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1179:
-
-/* Line 1806 of yacc.c  */
 #line 7488 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1180:
-
-/* Line 1806 of yacc.c  */
 #line 7496 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1181:
-
-/* Line 1806 of yacc.c  */
 #line 7500 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1182:
-
-/* Line 1806 of yacc.c  */
 #line 7508 "preproc.y"
     { 
  (yyval.str) = cat_str(9,make_str("select"),(yyvsp[(2) - (9)].str),(yyvsp[(3) - (9)].str),(yyvsp[(4) - (9)].str),(yyvsp[(5) - (9)].str),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1183:
-
-/* Line 1806 of yacc.c  */
 #line 7512 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1184:
-
-/* Line 1806 of yacc.c  */
 #line 7516 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("table"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1185:
-
-/* Line 1806 of yacc.c  */
 #line 7520 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),make_str("union"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1186:
-
-/* Line 1806 of yacc.c  */
 #line 7524 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),make_str("intersect"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1187:
-
-/* Line 1806 of yacc.c  */
 #line 7528 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),make_str("except"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1188:
-
-/* Line 1806 of yacc.c  */
 #line 7536 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1189:
-
-/* Line 1806 of yacc.c  */
 #line 7540 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("with recursive"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1190:
-
-/* Line 1806 of yacc.c  */
 #line 7548 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1191:
-
-/* Line 1806 of yacc.c  */
 #line 7552 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1192:
-
-/* Line 1806 of yacc.c  */
 #line 7560 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),make_str("as"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1193:
-
-/* Line 1806 of yacc.c  */
 #line 7568 "preproc.y"
     {
 						FoundInto = 1;
 						(yyval.str)= cat2_str(make_str("into"), (yyvsp[(2) - (2)].str));
-					}
+					;}
     break;
 
   case 1194:
-
-/* Line 1806 of yacc.c  */
 #line 7572 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 1195:
-
-/* Line 1806 of yacc.c  */
 #line 7574 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1196:
-
-/* Line 1806 of yacc.c  */
 #line 7581 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("temporary"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1197:
-
-/* Line 1806 of yacc.c  */
 #line 7585 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("temp"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1198:
-
-/* Line 1806 of yacc.c  */
 #line 7589 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("local temporary"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1199:
-
-/* Line 1806 of yacc.c  */
 #line 7593 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("local temp"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1200:
-
-/* Line 1806 of yacc.c  */
 #line 7597 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("global temporary"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1201:
-
-/* Line 1806 of yacc.c  */
 #line 7601 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("global temp"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1202:
-
-/* Line 1806 of yacc.c  */
 #line 7605 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("table"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1203:
-
-/* Line 1806 of yacc.c  */
 #line 7609 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1204:
-
-/* Line 1806 of yacc.c  */
 #line 7617 "preproc.y"
     { 
  (yyval.str) = make_str("table");
-}
+;}
     break;
 
   case 1205:
-
-/* Line 1806 of yacc.c  */
 #line 7621 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1206:
-
-/* Line 1806 of yacc.c  */
 #line 7628 "preproc.y"
     { 
  (yyval.str) = make_str("all");
-}
+;}
     break;
 
   case 1207:
-
-/* Line 1806 of yacc.c  */
 #line 7632 "preproc.y"
     { 
  (yyval.str) = make_str("distinct");
-}
+;}
     break;
 
   case 1208:
-
-/* Line 1806 of yacc.c  */
 #line 7636 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1209:
-
-/* Line 1806 of yacc.c  */
 #line 7643 "preproc.y"
     { 
  (yyval.str) = make_str("distinct");
-}
+;}
     break;
 
   case 1210:
-
-/* Line 1806 of yacc.c  */
 #line 7647 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("distinct on ("),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1211:
-
-/* Line 1806 of yacc.c  */
 #line 7651 "preproc.y"
     { 
  (yyval.str) = make_str("all");
-}
+;}
     break;
 
   case 1212:
-
-/* Line 1806 of yacc.c  */
 #line 7655 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1213:
-
-/* Line 1806 of yacc.c  */
 #line 7662 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1214:
-
-/* Line 1806 of yacc.c  */
 #line 7666 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1215:
-
-/* Line 1806 of yacc.c  */
 #line 7673 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("order by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1216:
-
-/* Line 1806 of yacc.c  */
 #line 7681 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1217:
-
-/* Line 1806 of yacc.c  */
 #line 7685 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1218:
-
-/* Line 1806 of yacc.c  */
 #line 7693 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),make_str("using"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1219:
-
-/* Line 1806 of yacc.c  */
 #line 7697 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1220:
-
-/* Line 1806 of yacc.c  */
 #line 7705 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1221:
-
-/* Line 1806 of yacc.c  */
 #line 7709 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1222:
-
-/* Line 1806 of yacc.c  */
 #line 7713 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1223:
-
-/* Line 1806 of yacc.c  */
 #line 7717 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1224:
-
-/* Line 1806 of yacc.c  */
 #line 7725 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1225:
-
-/* Line 1806 of yacc.c  */
 #line 7729 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1226:
-
-/* Line 1806 of yacc.c  */
 #line 7736 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("limit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1227:
-
-/* Line 1806 of yacc.c  */
 #line 7740 "preproc.y"
     {
                 mmerror(PARSE_ERROR, ET_WARNING, "no longer supported LIMIT #,# syntax passed to server");
                 (yyval.str) = cat_str(4, make_str("limit"), (yyvsp[(2) - (4)].str), make_str(","), (yyvsp[(4) - (4)].str));
-        }
+        ;}
     break;
 
   case 1228:
-
-/* Line 1806 of yacc.c  */
 #line 7745 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("fetch"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),make_str("only"));
-}
+;}
     break;
 
   case 1229:
-
-/* Line 1806 of yacc.c  */
 #line 7753 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("offset"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1230:
-
-/* Line 1806 of yacc.c  */
 #line 7757 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("offset"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1231:
-
-/* Line 1806 of yacc.c  */
 #line 7765 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1232:
-
-/* Line 1806 of yacc.c  */
 #line 7769 "preproc.y"
     { 
  (yyval.str) = make_str("all");
-}
+;}
     break;
 
   case 1233:
-
-/* Line 1806 of yacc.c  */
 #line 7777 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1234:
-
-/* Line 1806 of yacc.c  */
 #line 7785 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1235:
-
-/* Line 1806 of yacc.c  */
 #line 7789 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1236:
-
-/* Line 1806 of yacc.c  */
 #line 7793 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1237:
-
-/* Line 1806 of yacc.c  */
 #line 7800 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1238:
-
-/* Line 1806 of yacc.c  */
 #line 7808 "preproc.y"
     { 
  (yyval.str) = make_str("row");
-}
+;}
     break;
 
   case 1239:
-
-/* Line 1806 of yacc.c  */
 #line 7812 "preproc.y"
     { 
  (yyval.str) = make_str("rows");
-}
+;}
     break;
 
   case 1240:
-
-/* Line 1806 of yacc.c  */
 #line 7820 "preproc.y"
     { 
  (yyval.str) = make_str("first");
-}
+;}
     break;
 
   case 1241:
-
-/* Line 1806 of yacc.c  */
 #line 7824 "preproc.y"
     { 
  (yyval.str) = make_str("next");
-}
+;}
     break;
 
   case 1242:
-
-/* Line 1806 of yacc.c  */
 #line 7832 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("group by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1243:
-
-/* Line 1806 of yacc.c  */
 #line 7836 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1244:
-
-/* Line 1806 of yacc.c  */
 #line 7843 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("having"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1245:
-
-/* Line 1806 of yacc.c  */
 #line 7847 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1246:
-
-/* Line 1806 of yacc.c  */
 #line 7854 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1247:
-
-/* Line 1806 of yacc.c  */
 #line 7858 "preproc.y"
     { 
  (yyval.str) = make_str("for read only");
-}
+;}
     break;
 
   case 1248:
-
-/* Line 1806 of yacc.c  */
 #line 7866 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1249:
-
-/* Line 1806 of yacc.c  */
 #line 7870 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1250:
-
-/* Line 1806 of yacc.c  */
 #line 7877 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1251:
-
-/* Line 1806 of yacc.c  */
 #line 7881 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1252:
-
-/* Line 1806 of yacc.c  */
 #line 7889 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("for update"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1253:
-
-/* Line 1806 of yacc.c  */
 #line 7893 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("for share"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1254:
-
-/* Line 1806 of yacc.c  */
 #line 7901 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("of"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1255:
-
-/* Line 1806 of yacc.c  */
 #line 7905 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1256:
-
-/* Line 1806 of yacc.c  */
 #line 7912 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("values"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1257:
-
-/* Line 1806 of yacc.c  */
 #line 7916 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1258:
-
-/* Line 1806 of yacc.c  */
 #line 7924 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1259:
-
-/* Line 1806 of yacc.c  */
 #line 7928 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1260:
-
-/* Line 1806 of yacc.c  */
 #line 7935 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1261:
-
-/* Line 1806 of yacc.c  */
 #line 7939 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1262:
-
-/* Line 1806 of yacc.c  */
 #line 7947 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1263:
-
-/* Line 1806 of yacc.c  */
 #line 7951 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1264:
-
-/* Line 1806 of yacc.c  */
 #line 7955 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1265:
-
-/* Line 1806 of yacc.c  */
 #line 7959 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1266:
-
-/* Line 1806 of yacc.c  */
 #line 7963 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (5)].str),make_str("as ("),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1267:
-
-/* Line 1806 of yacc.c  */
 #line 7967 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),make_str("as"),(yyvsp[(3) - (6)].str),make_str("("),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 1268:
-
-/* Line 1806 of yacc.c  */
 #line 7971 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),make_str("("),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1269:
-
-/* Line 1806 of yacc.c  */
 #line 7975 "preproc.y"
     { 
 		mmerror(PARSE_ERROR, ET_ERROR, "subquery in FROM must have an alias");
 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1270:
-
-/* Line 1806 of yacc.c  */
 #line 7981 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1271:
-
-/* Line 1806 of yacc.c  */
 #line 7985 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1272:
-
-/* Line 1806 of yacc.c  */
 #line 7989 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("("),(yyvsp[(2) - (4)].str),make_str(")"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1273:
-
-/* Line 1806 of yacc.c  */
 #line 7997 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1274:
-
-/* Line 1806 of yacc.c  */
 #line 8001 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),make_str("cross join"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1275:
-
-/* Line 1806 of yacc.c  */
 #line 8005 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),make_str("join"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1276:
-
-/* Line 1806 of yacc.c  */
 #line 8009 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),make_str("join"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1277:
-
-/* Line 1806 of yacc.c  */
 #line 8013 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),make_str("natural"),(yyvsp[(3) - (5)].str),make_str("join"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1278:
-
-/* Line 1806 of yacc.c  */
 #line 8017 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),make_str("natural join"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1279:
-
-/* Line 1806 of yacc.c  */
 #line 8025 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("as"),(yyvsp[(2) - (5)].str),make_str("("),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1280:
-
-/* Line 1806 of yacc.c  */
 #line 8029 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("as"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1281:
-
-/* Line 1806 of yacc.c  */
 #line 8033 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),make_str("("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1282:
-
-/* Line 1806 of yacc.c  */
 #line 8037 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1283:
-
-/* Line 1806 of yacc.c  */
 #line 8045 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("full"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1284:
-
-/* Line 1806 of yacc.c  */
 #line 8049 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("left"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1285:
-
-/* Line 1806 of yacc.c  */
 #line 8053 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("right"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1286:
-
-/* Line 1806 of yacc.c  */
 #line 8057 "preproc.y"
     { 
  (yyval.str) = make_str("inner");
-}
+;}
     break;
 
   case 1287:
-
-/* Line 1806 of yacc.c  */
 #line 8065 "preproc.y"
     { 
  (yyval.str) = make_str("outer");
-}
+;}
     break;
 
   case 1288:
-
-/* Line 1806 of yacc.c  */
 #line 8069 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1289:
-
-/* Line 1806 of yacc.c  */
 #line 8076 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("using ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1290:
-
-/* Line 1806 of yacc.c  */
 #line 8080 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("on"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1291:
-
-/* Line 1806 of yacc.c  */
 #line 8088 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1292:
-
-/* Line 1806 of yacc.c  */
 #line 8092 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),make_str("*"));
-}
+;}
     break;
 
   case 1293:
-
-/* Line 1806 of yacc.c  */
 #line 8096 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("only"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1294:
-
-/* Line 1806 of yacc.c  */
 #line 8100 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("only ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1295:
-
-/* Line 1806 of yacc.c  */
 #line 8108 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1296:
-
-/* Line 1806 of yacc.c  */
 #line 8112 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1297:
-
-/* Line 1806 of yacc.c  */
 #line 8120 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1298:
-
-/* Line 1806 of yacc.c  */
 #line 8124 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1299:
-
-/* Line 1806 of yacc.c  */
 #line 8128 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1300:
-
-/* Line 1806 of yacc.c  */
 #line 8136 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1301:
-
-/* Line 1806 of yacc.c  */
 #line 8144 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("where"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1302:
-
-/* Line 1806 of yacc.c  */
 #line 8148 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1303:
-
-/* Line 1806 of yacc.c  */
 #line 8155 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("where"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1304:
-
-/* Line 1806 of yacc.c  */
 #line 8159 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("where current of"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1305:
-
-/* Line 1806 of yacc.c  */
 #line 8163 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1306:
-
-/* Line 1806 of yacc.c  */
 #line 8170 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1307:
-
-/* Line 1806 of yacc.c  */
 #line 8174 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1308:
-
-/* Line 1806 of yacc.c  */
 #line 8182 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1309:
-
-/* Line 1806 of yacc.c  */
 #line 8190 "preproc.y"
-    {	(yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].index).str); }
+    {	(yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].index).str); ;}
     break;
 
   case 1310:
-
-/* Line 1806 of yacc.c  */
 #line 8192 "preproc.y"
-    {	(yyval.str) = cat_str(3, make_str("setof"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].index).str); }
+    {	(yyval.str) = cat_str(3, make_str("setof"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].index).str); ;}
     break;
 
   case 1311:
-
-/* Line 1806 of yacc.c  */
 #line 8194 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (5)].str),make_str("array ["),(yyvsp[(4) - (5)].str),make_str("]"));
-}
+;}
     break;
 
   case 1312:
-
-/* Line 1806 of yacc.c  */
 #line 8198 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("setof"),(yyvsp[(2) - (6)].str),make_str("array ["),(yyvsp[(5) - (6)].str),make_str("]"));
-}
+;}
     break;
 
   case 1313:
-
-/* Line 1806 of yacc.c  */
 #line 8202 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),make_str("array"));
-}
+;}
     break;
 
   case 1314:
-
-/* Line 1806 of yacc.c  */
 #line 8206 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("setof"),(yyvsp[(2) - (3)].str),make_str("array"));
-}
+;}
     break;
 
   case 1315:
-
-/* Line 1806 of yacc.c  */
 #line 8214 "preproc.y"
     {
 		(yyval.index).index1 = (yyvsp[(1) - (3)].index).index1;
@@ -37337,12 +35136,10 @@
 		else if (strcmp((yyvsp[(1) - (3)].index).index2, "-1") == 0)
 			(yyval.index).index2 = make_str("0");
 		(yyval.index).str = cat_str(2, (yyvsp[(1) - (3)].index).str, make_str("[]"));
-	}
+	;}
     break;
 
   case 1316:
-
-/* Line 1806 of yacc.c  */
 #line 8224 "preproc.y"
     {
 		(yyval.index).index1 = (yyvsp[(1) - (4)].index).index1;
@@ -37352,7002 +35149,5440 @@
 		else if (strcmp((yyvsp[(1) - (4)].index).index2, "-1") == 0)
 			(yyval.index).index2 = strdup((yyvsp[(3) - (4)].str));
 		(yyval.index).str = cat_str(4, (yyvsp[(1) - (4)].index).str, make_str("["), (yyvsp[(3) - (4)].str), make_str("]"));
-	}
+	;}
     break;
 
   case 1317:
-
-/* Line 1806 of yacc.c  */
 #line 8234 "preproc.y"
     {
 		(yyval.index).index1 = make_str("-1");
 		(yyval.index).index2 = make_str("-1");
 		(yyval.index).str= EMPTY;
-	}
+	;}
     break;
 
   case 1318:
-
-/* Line 1806 of yacc.c  */
 #line 8244 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1319:
-
-/* Line 1806 of yacc.c  */
 #line 8248 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1320:
-
-/* Line 1806 of yacc.c  */
 #line 8252 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1321:
-
-/* Line 1806 of yacc.c  */
 #line 8256 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1322:
-
-/* Line 1806 of yacc.c  */
 #line 8260 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1323:
-
-/* Line 1806 of yacc.c  */
 #line 8264 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1324:
-
-/* Line 1806 of yacc.c  */
 #line 8268 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),make_str("("),(yyvsp[(3) - (5)].str),make_str(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1325:
-
-/* Line 1806 of yacc.c  */
 #line 8276 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1326:
-
-/* Line 1806 of yacc.c  */
 #line 8280 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1327:
-
-/* Line 1806 of yacc.c  */
 #line 8284 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1328:
-
-/* Line 1806 of yacc.c  */
 #line 8288 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1329:
-
-/* Line 1806 of yacc.c  */
 #line 8296 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1330:
-
-/* Line 1806 of yacc.c  */
 #line 8300 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1331:
-
-/* Line 1806 of yacc.c  */
 #line 8308 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1332:
-
-/* Line 1806 of yacc.c  */
 #line 8312 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1333:
-
-/* Line 1806 of yacc.c  */
 #line 8319 "preproc.y"
     { 
  (yyval.str) = make_str("int");
-}
+;}
     break;
 
   case 1334:
-
-/* Line 1806 of yacc.c  */
 #line 8323 "preproc.y"
     { 
  (yyval.str) = make_str("integer");
-}
+;}
     break;
 
   case 1335:
-
-/* Line 1806 of yacc.c  */
 #line 8327 "preproc.y"
     { 
  (yyval.str) = make_str("smallint");
-}
+;}
     break;
 
   case 1336:
-
-/* Line 1806 of yacc.c  */
 #line 8331 "preproc.y"
     { 
  (yyval.str) = make_str("bigint");
-}
+;}
     break;
 
   case 1337:
-
-/* Line 1806 of yacc.c  */
 #line 8335 "preproc.y"
     { 
  (yyval.str) = make_str("real");
-}
+;}
     break;
 
   case 1338:
-
-/* Line 1806 of yacc.c  */
 #line 8339 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("float"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1339:
-
-/* Line 1806 of yacc.c  */
 #line 8343 "preproc.y"
     { 
  (yyval.str) = make_str("double precision");
-}
+;}
     break;
 
   case 1340:
-
-/* Line 1806 of yacc.c  */
 #line 8347 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("decimal"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1341:
-
-/* Line 1806 of yacc.c  */
 #line 8351 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("dec"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1342:
-
-/* Line 1806 of yacc.c  */
 #line 8355 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("numeric"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1343:
-
-/* Line 1806 of yacc.c  */
 #line 8359 "preproc.y"
     { 
  (yyval.str) = make_str("boolean");
-}
+;}
     break;
 
   case 1344:
-
-/* Line 1806 of yacc.c  */
 #line 8367 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1345:
-
-/* Line 1806 of yacc.c  */
 #line 8371 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1346:
-
-/* Line 1806 of yacc.c  */
 #line 8378 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1347:
-
-/* Line 1806 of yacc.c  */
 #line 8382 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1348:
-
-/* Line 1806 of yacc.c  */
 #line 8390 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1349:
-
-/* Line 1806 of yacc.c  */
 #line 8394 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1350:
-
-/* Line 1806 of yacc.c  */
 #line 8402 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("bit"),(yyvsp[(2) - (5)].str),make_str("("),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1351:
-
-/* Line 1806 of yacc.c  */
 #line 8410 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("bit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1352:
-
-/* Line 1806 of yacc.c  */
 #line 8418 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1353:
-
-/* Line 1806 of yacc.c  */
 #line 8422 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1354:
-
-/* Line 1806 of yacc.c  */
 #line 8430 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1355:
-
-/* Line 1806 of yacc.c  */
 #line 8434 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1356:
-
-/* Line 1806 of yacc.c  */
 #line 8442 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),make_str("("),(yyvsp[(3) - (5)].str),make_str(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1357:
-
-/* Line 1806 of yacc.c  */
 #line 8450 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1358:
-
-/* Line 1806 of yacc.c  */
 #line 8458 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("character"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1359:
-
-/* Line 1806 of yacc.c  */
 #line 8462 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("char"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1360:
-
-/* Line 1806 of yacc.c  */
 #line 8466 "preproc.y"
     { 
  (yyval.str) = make_str("varchar");
-}
+;}
     break;
 
   case 1361:
-
-/* Line 1806 of yacc.c  */
 #line 8470 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("national character"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1362:
-
-/* Line 1806 of yacc.c  */
 #line 8474 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("national char"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1363:
-
-/* Line 1806 of yacc.c  */
 #line 8478 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("nchar"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1364:
-
-/* Line 1806 of yacc.c  */
 #line 8486 "preproc.y"
     { 
  (yyval.str) = make_str("varying");
-}
+;}
     break;
 
   case 1365:
-
-/* Line 1806 of yacc.c  */
 #line 8490 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1366:
-
-/* Line 1806 of yacc.c  */
 #line 8497 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("character set"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1367:
-
-/* Line 1806 of yacc.c  */
 #line 8501 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1368:
-
-/* Line 1806 of yacc.c  */
 #line 8508 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("timestamp ("),(yyvsp[(3) - (5)].str),make_str(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1369:
-
-/* Line 1806 of yacc.c  */
 #line 8512 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("timestamp"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1370:
-
-/* Line 1806 of yacc.c  */
 #line 8516 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("time ("),(yyvsp[(3) - (5)].str),make_str(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1371:
-
-/* Line 1806 of yacc.c  */
 #line 8520 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("time"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1372:
-
-/* Line 1806 of yacc.c  */
 #line 8528 "preproc.y"
     { 
  (yyval.str) = make_str("interval");
-}
+;}
     break;
 
   case 1373:
-
-/* Line 1806 of yacc.c  */
 #line 8536 "preproc.y"
     { 
  (yyval.str) = make_str("with time zone");
-}
+;}
     break;
 
   case 1374:
-
-/* Line 1806 of yacc.c  */
 #line 8540 "preproc.y"
     { 
  (yyval.str) = make_str("without time zone");
-}
+;}
     break;
 
   case 1375:
-
-/* Line 1806 of yacc.c  */
 #line 8544 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1376:
-
-/* Line 1806 of yacc.c  */
 #line 8551 "preproc.y"
     { 
  (yyval.str) = make_str("year");
-}
+;}
     break;
 
   case 1377:
-
-/* Line 1806 of yacc.c  */
 #line 8555 "preproc.y"
     { 
  (yyval.str) = make_str("month");
-}
+;}
     break;
 
   case 1378:
-
-/* Line 1806 of yacc.c  */
 #line 8559 "preproc.y"
     { 
  (yyval.str) = make_str("day");
-}
+;}
     break;
 
   case 1379:
-
-/* Line 1806 of yacc.c  */
 #line 8563 "preproc.y"
     { 
  (yyval.str) = make_str("hour");
-}
+;}
     break;
 
   case 1380:
-
-/* Line 1806 of yacc.c  */
 #line 8567 "preproc.y"
     { 
  (yyval.str) = make_str("minute");
-}
+;}
     break;
 
   case 1381:
-
-/* Line 1806 of yacc.c  */
 #line 8571 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1382:
-
-/* Line 1806 of yacc.c  */
 #line 8575 "preproc.y"
     { 
  (yyval.str) = make_str("year to month");
-}
+;}
     break;
 
   case 1383:
-
-/* Line 1806 of yacc.c  */
 #line 8579 "preproc.y"
     { 
  (yyval.str) = make_str("day to hour");
-}
+;}
     break;
 
   case 1384:
-
-/* Line 1806 of yacc.c  */
 #line 8583 "preproc.y"
     { 
  (yyval.str) = make_str("day to minute");
-}
+;}
     break;
 
   case 1385:
-
-/* Line 1806 of yacc.c  */
 #line 8587 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("day to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1386:
-
-/* Line 1806 of yacc.c  */
 #line 8591 "preproc.y"
     { 
  (yyval.str) = make_str("hour to minute");
-}
+;}
     break;
 
   case 1387:
-
-/* Line 1806 of yacc.c  */
 #line 8595 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("hour to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1388:
-
-/* Line 1806 of yacc.c  */
 #line 8599 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("minute to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1389:
-
-/* Line 1806 of yacc.c  */
 #line 8603 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1390:
-
-/* Line 1806 of yacc.c  */
 #line 8610 "preproc.y"
     { 
  (yyval.str) = make_str("second");
-}
+;}
     break;
 
   case 1391:
-
-/* Line 1806 of yacc.c  */
 #line 8614 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("second ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1392:
-
-/* Line 1806 of yacc.c  */
 #line 8622 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1393:
-
-/* Line 1806 of yacc.c  */
 #line 8626 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("::"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1394:
-
-/* Line 1806 of yacc.c  */
 #line 8630 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),make_str("at time zone"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1395:
-
-/* Line 1806 of yacc.c  */
 #line 8634 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("+"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1396:
-
-/* Line 1806 of yacc.c  */
 #line 8638 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1397:
-
-/* Line 1806 of yacc.c  */
 #line 8642 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("+"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1398:
-
-/* Line 1806 of yacc.c  */
 #line 8646 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("-"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1399:
-
-/* Line 1806 of yacc.c  */
 #line 8650 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("*"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1400:
-
-/* Line 1806 of yacc.c  */
 #line 8654 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("/"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1401:
-
-/* Line 1806 of yacc.c  */
 #line 8658 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("%"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1402:
-
-/* Line 1806 of yacc.c  */
 #line 8662 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("^"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1403:
-
-/* Line 1806 of yacc.c  */
 #line 8666 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("<"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1404:
-
-/* Line 1806 of yacc.c  */
 #line 8670 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(">"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1405:
-
-/* Line 1806 of yacc.c  */
 #line 8674 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1406:
-
-/* Line 1806 of yacc.c  */
 #line 8678 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1407:
-
-/* Line 1806 of yacc.c  */
 #line 8682 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1408:
-
-/* Line 1806 of yacc.c  */
 #line 8686 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1409:
-
-/* Line 1806 of yacc.c  */
 #line 8690 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("and"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1410:
-
-/* Line 1806 of yacc.c  */
 #line 8694 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("or"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1411:
-
-/* Line 1806 of yacc.c  */
 #line 8698 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("not"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1412:
-
-/* Line 1806 of yacc.c  */
 #line 8702 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("like"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1413:
-
-/* Line 1806 of yacc.c  */
 #line 8706 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),make_str("like"),(yyvsp[(3) - (5)].str),make_str("escape"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1414:
-
-/* Line 1806 of yacc.c  */
 #line 8710 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),make_str("not like"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1415:
-
-/* Line 1806 of yacc.c  */
 #line 8714 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),make_str("not like"),(yyvsp[(4) - (6)].str),make_str("escape"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1416:
-
-/* Line 1806 of yacc.c  */
 #line 8718 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("ilike"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1417:
-
-/* Line 1806 of yacc.c  */
 #line 8722 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),make_str("ilike"),(yyvsp[(3) - (5)].str),make_str("escape"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1418:
-
-/* Line 1806 of yacc.c  */
 #line 8726 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),make_str("not ilike"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1419:
-
-/* Line 1806 of yacc.c  */
 #line 8730 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),make_str("not ilike"),(yyvsp[(4) - (6)].str),make_str("escape"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1420:
-
-/* Line 1806 of yacc.c  */
 #line 8734 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),make_str("similar to"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1421:
-
-/* Line 1806 of yacc.c  */
 #line 8738 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),make_str("similar to"),(yyvsp[(4) - (6)].str),make_str("escape"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1422:
-
-/* Line 1806 of yacc.c  */
 #line 8742 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),make_str("not similar to"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1423:
-
-/* Line 1806 of yacc.c  */
 #line 8746 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (7)].str),make_str("not similar to"),(yyvsp[(5) - (7)].str),make_str("escape"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1424:
-
-/* Line 1806 of yacc.c  */
 #line 8750 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("is null"));
-}
+;}
     break;
 
   case 1425:
-
-/* Line 1806 of yacc.c  */
 #line 8754 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),make_str("isnull"));
-}
+;}
     break;
 
   case 1426:
-
-/* Line 1806 of yacc.c  */
 #line 8758 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),make_str("is not null"));
-}
+;}
     break;
 
   case 1427:
-
-/* Line 1806 of yacc.c  */
 #line 8762 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),make_str("notnull"));
-}
+;}
     break;
 
   case 1428:
-
-/* Line 1806 of yacc.c  */
 #line 8766 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("overlaps"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1429:
-
-/* Line 1806 of yacc.c  */
 #line 8770 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("is true"));
-}
+;}
     break;
 
   case 1430:
-
-/* Line 1806 of yacc.c  */
 #line 8774 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),make_str("is not true"));
-}
+;}
     break;
 
   case 1431:
-
-/* Line 1806 of yacc.c  */
 #line 8778 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("is false"));
-}
+;}
     break;
 
   case 1432:
-
-/* Line 1806 of yacc.c  */
 #line 8782 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),make_str("is not false"));
-}
+;}
     break;
 
   case 1433:
-
-/* Line 1806 of yacc.c  */
 #line 8786 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("is unknown"));
-}
+;}
     break;
 
   case 1434:
-
-/* Line 1806 of yacc.c  */
 #line 8790 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),make_str("is not unknown"));
-}
+;}
     break;
 
   case 1435:
-
-/* Line 1806 of yacc.c  */
 #line 8794 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),make_str("is distinct from"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1436:
-
-/* Line 1806 of yacc.c  */
 #line 8798 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (6)].str),make_str("is not distinct from"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1437:
-
-/* Line 1806 of yacc.c  */
 #line 8802 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (6)].str),make_str("is of ("),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 1438:
-
-/* Line 1806 of yacc.c  */
 #line 8806 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (7)].str),make_str("is not of ("),(yyvsp[(6) - (7)].str),make_str(")"));
-}
+;}
     break;
 
   case 1439:
-
-/* Line 1806 of yacc.c  */
 #line 8810 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),make_str("between"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),make_str("and"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1440:
-
-/* Line 1806 of yacc.c  */
 #line 8814 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),make_str("not between"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),make_str("and"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1441:
-
-/* Line 1806 of yacc.c  */
 #line 8818 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),make_str("between symmetric"),(yyvsp[(4) - (6)].str),make_str("and"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1442:
-
-/* Line 1806 of yacc.c  */
 #line 8822 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (7)].str),make_str("not between symmetric"),(yyvsp[(5) - (7)].str),make_str("and"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1443:
-
-/* Line 1806 of yacc.c  */
 #line 8826 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("in"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1444:
-
-/* Line 1806 of yacc.c  */
 #line 8830 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),make_str("not in"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1445:
-
-/* Line 1806 of yacc.c  */
 #line 8834 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1446:
-
-/* Line 1806 of yacc.c  */
 #line 8838 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),make_str("("),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 1447:
-
-/* Line 1806 of yacc.c  */
 #line 8842 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,make_str("unique"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1448:
-
-/* Line 1806 of yacc.c  */
 #line 8847 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("is document"));
-}
+;}
     break;
 
   case 1449:
-
-/* Line 1806 of yacc.c  */
 #line 8851 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),make_str("is not document"));
-}
+;}
     break;
 
   case 1450:
-
-/* Line 1806 of yacc.c  */
 #line 8859 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1451:
-
-/* Line 1806 of yacc.c  */
 #line 8863 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("::"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1452:
-
-/* Line 1806 of yacc.c  */
 #line 8867 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("+"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1453:
-
-/* Line 1806 of yacc.c  */
 #line 8871 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1454:
-
-/* Line 1806 of yacc.c  */
 #line 8875 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("+"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1455:
-
-/* Line 1806 of yacc.c  */
 #line 8879 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("-"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1456:
-
-/* Line 1806 of yacc.c  */
 #line 8883 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("*"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1457:
-
-/* Line 1806 of yacc.c  */
 #line 8887 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("/"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1458:
-
-/* Line 1806 of yacc.c  */
 #line 8891 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("%"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1459:
-
-/* Line 1806 of yacc.c  */
 #line 8895 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("^"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1460:
-
-/* Line 1806 of yacc.c  */
 #line 8899 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("<"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1461:
-
-/* Line 1806 of yacc.c  */
 #line 8903 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(">"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1462:
-
-/* Line 1806 of yacc.c  */
 #line 8907 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1463:
-
-/* Line 1806 of yacc.c  */
 #line 8911 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1464:
-
-/* Line 1806 of yacc.c  */
 #line 8915 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1465:
-
-/* Line 1806 of yacc.c  */
 #line 8919 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1466:
-
-/* Line 1806 of yacc.c  */
 #line 8923 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),make_str("is distinct from"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1467:
-
-/* Line 1806 of yacc.c  */
 #line 8927 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (6)].str),make_str("is not distinct from"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1468:
-
-/* Line 1806 of yacc.c  */
 #line 8931 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (6)].str),make_str("is of ("),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 1469:
-
-/* Line 1806 of yacc.c  */
 #line 8935 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (7)].str),make_str("is not of ("),(yyvsp[(6) - (7)].str),make_str(")"));
-}
+;}
     break;
 
   case 1470:
-
-/* Line 1806 of yacc.c  */
 #line 8939 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),make_str("is document"));
-}
+;}
     break;
 
   case 1471:
-
-/* Line 1806 of yacc.c  */
 #line 8943 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),make_str("is not document"));
-}
+;}
     break;
 
   case 1472:
-
-/* Line 1806 of yacc.c  */
 #line 8951 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1473:
-
-/* Line 1806 of yacc.c  */
 #line 8955 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1474:
-
-/* Line 1806 of yacc.c  */
 #line 8959 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1475:
-
-/* Line 1806 of yacc.c  */
 #line 8963 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("("),(yyvsp[(2) - (4)].str),make_str(")"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1476:
-
-/* Line 1806 of yacc.c  */
 #line 8967 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1477:
-
-/* Line 1806 of yacc.c  */
 #line 8971 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1478:
-
-/* Line 1806 of yacc.c  */
 #line 8975 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1479:
-
-/* Line 1806 of yacc.c  */
 #line 8979 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1480:
-
-/* Line 1806 of yacc.c  */
 #line 8983 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("exists"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1481:
-
-/* Line 1806 of yacc.c  */
 #line 8987 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("array"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1482:
-
-/* Line 1806 of yacc.c  */
 #line 8991 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("array"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1483:
-
-/* Line 1806 of yacc.c  */
 #line 8995 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1484:
-
-/* Line 1806 of yacc.c  */
 #line 9003 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),make_str("( )"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1485:
-
-/* Line 1806 of yacc.c  */
 #line 9007 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),make_str("("),(yyvsp[(3) - (5)].str),make_str(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1486:
-
-/* Line 1806 of yacc.c  */
 #line 9011 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),make_str("( variadic"),(yyvsp[(4) - (6)].str),make_str(")"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1487:
-
-/* Line 1806 of yacc.c  */
 #line 9015 "preproc.y"
     { 
  (yyval.str) = cat_str(7,(yyvsp[(1) - (8)].str),make_str("("),(yyvsp[(3) - (8)].str),make_str(", variadic"),(yyvsp[(6) - (8)].str),make_str(")"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1488:
-
-/* Line 1806 of yacc.c  */
 #line 9019 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),make_str("("),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),make_str(")"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1489:
-
-/* Line 1806 of yacc.c  */
 #line 9023 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),make_str("( all"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),make_str(")"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1490:
-
-/* Line 1806 of yacc.c  */
 #line 9027 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),make_str("( distinct"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),make_str(")"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1491:
-
-/* Line 1806 of yacc.c  */
 #line 9031 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),make_str("( * )"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1492:
-
-/* Line 1806 of yacc.c  */
 #line 9035 "preproc.y"
     { 
  (yyval.str) = make_str("current_date");
-}
+;}
     break;
 
   case 1493:
-
-/* Line 1806 of yacc.c  */
 #line 9039 "preproc.y"
     { 
  (yyval.str) = make_str("current_time");
-}
+;}
     break;
 
   case 1494:
-
-/* Line 1806 of yacc.c  */
 #line 9043 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("current_time ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1495:
-
-/* Line 1806 of yacc.c  */
 #line 9047 "preproc.y"
     { 
  (yyval.str) = make_str("current_timestamp");
-}
+;}
     break;
 
   case 1496:
-
-/* Line 1806 of yacc.c  */
 #line 9051 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("current_timestamp ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1497:
-
-/* Line 1806 of yacc.c  */
 #line 9055 "preproc.y"
     { 
  (yyval.str) = make_str("localtime");
-}
+;}
     break;
 
   case 1498:
-
-/* Line 1806 of yacc.c  */
 #line 9059 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("localtime ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1499:
-
-/* Line 1806 of yacc.c  */
 #line 9063 "preproc.y"
     { 
  (yyval.str) = make_str("localtimestamp");
-}
+;}
     break;
 
   case 1500:
-
-/* Line 1806 of yacc.c  */
 #line 9067 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("localtimestamp ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1501:
-
-/* Line 1806 of yacc.c  */
 #line 9071 "preproc.y"
     { 
  (yyval.str) = make_str("current_role");
-}
+;}
     break;
 
   case 1502:
-
-/* Line 1806 of yacc.c  */
 #line 9075 "preproc.y"
     { 
  (yyval.str) = make_str("current_user");
-}
+;}
     break;
 
   case 1503:
-
-/* Line 1806 of yacc.c  */
 #line 9079 "preproc.y"
     { 
  (yyval.str) = make_str("session_user");
-}
+;}
     break;
 
   case 1504:
-
-/* Line 1806 of yacc.c  */
 #line 9083 "preproc.y"
     { 
  (yyval.str) = make_str("user");
-}
+;}
     break;
 
   case 1505:
-
-/* Line 1806 of yacc.c  */
 #line 9087 "preproc.y"
     { 
  (yyval.str) = make_str("current_catalog");
-}
+;}
     break;
 
   case 1506:
-
-/* Line 1806 of yacc.c  */
 #line 9091 "preproc.y"
     { 
  (yyval.str) = make_str("current_schema");
-}
+;}
     break;
 
   case 1507:
-
-/* Line 1806 of yacc.c  */
 #line 9095 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("cast ("),(yyvsp[(3) - (6)].str),make_str("as"),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 1508:
-
-/* Line 1806 of yacc.c  */
 #line 9099 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("extract ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1509:
-
-/* Line 1806 of yacc.c  */
 #line 9103 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("overlay ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1510:
-
-/* Line 1806 of yacc.c  */
 #line 9107 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("position ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1511:
-
-/* Line 1806 of yacc.c  */
 #line 9111 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("substring ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1512:
-
-/* Line 1806 of yacc.c  */
 #line 9115 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("treat ("),(yyvsp[(3) - (6)].str),make_str("as"),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 1513:
-
-/* Line 1806 of yacc.c  */
 #line 9119 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("trim ( both"),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1514:
-
-/* Line 1806 of yacc.c  */
 #line 9123 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("trim ( leading"),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1515:
-
-/* Line 1806 of yacc.c  */
 #line 9127 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("trim ( trailing"),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1516:
-
-/* Line 1806 of yacc.c  */
 #line 9131 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("trim ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1517:
-
-/* Line 1806 of yacc.c  */
 #line 9135 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("nullif ("),(yyvsp[(3) - (6)].str),make_str(","),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 1518:
-
-/* Line 1806 of yacc.c  */
 #line 9139 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("coalesce ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1519:
-
-/* Line 1806 of yacc.c  */
 #line 9143 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("greatest ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1520:
-
-/* Line 1806 of yacc.c  */
 #line 9147 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("least ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1521:
-
-/* Line 1806 of yacc.c  */
 #line 9151 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("xmlconcat ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1522:
-
-/* Line 1806 of yacc.c  */
 #line 9155 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("xmlelement ( name"),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1523:
-
-/* Line 1806 of yacc.c  */
 #line 9159 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("xmlelement ( name"),(yyvsp[(4) - (7)].str),make_str(","),(yyvsp[(6) - (7)].str),make_str(")"));
-}
+;}
     break;
 
   case 1524:
-
-/* Line 1806 of yacc.c  */
 #line 9163 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("xmlelement ( name"),(yyvsp[(4) - (7)].str),make_str(","),(yyvsp[(6) - (7)].str),make_str(")"));
-}
+;}
     break;
 
   case 1525:
-
-/* Line 1806 of yacc.c  */
 #line 9167 "preproc.y"
     { 
  (yyval.str) = cat_str(7,make_str("xmlelement ( name"),(yyvsp[(4) - (9)].str),make_str(","),(yyvsp[(6) - (9)].str),make_str(","),(yyvsp[(8) - (9)].str),make_str(")"));
-}
+;}
     break;
 
   case 1526:
-
-/* Line 1806 of yacc.c  */
 #line 9171 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("xmlforest ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1527:
-
-/* Line 1806 of yacc.c  */
 #line 9175 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("xmlparse ("),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 1528:
-
-/* Line 1806 of yacc.c  */
 #line 9179 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("xmlpi ( name"),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1529:
-
-/* Line 1806 of yacc.c  */
 #line 9183 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("xmlpi ( name"),(yyvsp[(4) - (7)].str),make_str(","),(yyvsp[(6) - (7)].str),make_str(")"));
-}
+;}
     break;
 
   case 1530:
-
-/* Line 1806 of yacc.c  */
 #line 9187 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("xmlroot ("),(yyvsp[(3) - (7)].str),make_str(","),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),make_str(")"));
-}
+;}
     break;
 
   case 1531:
-
-/* Line 1806 of yacc.c  */
 #line 9191 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("xmlserialize ("),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),make_str("as"),(yyvsp[(6) - (7)].str),make_str(")"));
-}
+;}
     break;
 
   case 1532:
-
-/* Line 1806 of yacc.c  */
 #line 9199 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("version"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1533:
-
-/* Line 1806 of yacc.c  */
 #line 9203 "preproc.y"
     { 
  (yyval.str) = make_str("version no value");
-}
+;}
     break;
 
   case 1534:
-
-/* Line 1806 of yacc.c  */
 #line 9211 "preproc.y"
     { 
  (yyval.str) = make_str(", standalone yes");
-}
+;}
     break;
 
   case 1535:
-
-/* Line 1806 of yacc.c  */
 #line 9215 "preproc.y"
     { 
  (yyval.str) = make_str(", standalone no");
-}
+;}
     break;
 
   case 1536:
-
-/* Line 1806 of yacc.c  */
 #line 9219 "preproc.y"
     { 
  (yyval.str) = make_str(", standalone no value");
-}
+;}
     break;
 
   case 1537:
-
-/* Line 1806 of yacc.c  */
 #line 9223 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1538:
-
-/* Line 1806 of yacc.c  */
 #line 9230 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("xmlattributes ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1539:
-
-/* Line 1806 of yacc.c  */
 #line 9238 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1540:
-
-/* Line 1806 of yacc.c  */
 #line 9242 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1541:
-
-/* Line 1806 of yacc.c  */
 #line 9250 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1542:
-
-/* Line 1806 of yacc.c  */
 #line 9254 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1543:
-
-/* Line 1806 of yacc.c  */
 #line 9262 "preproc.y"
     { 
  (yyval.str) = make_str("document");
-}
+;}
     break;
 
   case 1544:
-
-/* Line 1806 of yacc.c  */
 #line 9266 "preproc.y"
     { 
  (yyval.str) = make_str("content");
-}
+;}
     break;
 
   case 1545:
-
-/* Line 1806 of yacc.c  */
 #line 9274 "preproc.y"
     { 
  (yyval.str) = make_str("preserve whitespace");
-}
+;}
     break;
 
   case 1546:
-
-/* Line 1806 of yacc.c  */
 #line 9278 "preproc.y"
     { 
  (yyval.str) = make_str("strip whitespace");
-}
+;}
     break;
 
   case 1547:
-
-/* Line 1806 of yacc.c  */
 #line 9282 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1548:
-
-/* Line 1806 of yacc.c  */
 #line 9289 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("window"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1549:
-
-/* Line 1806 of yacc.c  */
 #line 9293 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1550:
-
-/* Line 1806 of yacc.c  */
 #line 9300 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1551:
-
-/* Line 1806 of yacc.c  */
 #line 9304 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1552:
-
-/* Line 1806 of yacc.c  */
 #line 9312 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1553:
-
-/* Line 1806 of yacc.c  */
 #line 9320 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("over"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1554:
-
-/* Line 1806 of yacc.c  */
 #line 9324 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("over"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1555:
-
-/* Line 1806 of yacc.c  */
 #line 9328 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1556:
-
-/* Line 1806 of yacc.c  */
 #line 9335 "preproc.y"
     { 
  (yyval.str) = cat_str(6,make_str("("),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),make_str(")"));
-}
+;}
     break;
 
   case 1557:
-
-/* Line 1806 of yacc.c  */
 #line 9343 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1558:
-
-/* Line 1806 of yacc.c  */
 #line 9347 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1559:
-
-/* Line 1806 of yacc.c  */
 #line 9354 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("partition by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1560:
-
-/* Line 1806 of yacc.c  */
 #line 9358 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1561:
-
-/* Line 1806 of yacc.c  */
 #line 9365 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,make_str("range"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1562:
-
-/* Line 1806 of yacc.c  */
 #line 9370 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("rows"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1563:
-
-/* Line 1806 of yacc.c  */
 #line 9374 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1564:
-
-/* Line 1806 of yacc.c  */
 #line 9381 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1565:
-
-/* Line 1806 of yacc.c  */
 #line 9385 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("between"),(yyvsp[(2) - (4)].str),make_str("and"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1566:
-
-/* Line 1806 of yacc.c  */
 #line 9393 "preproc.y"
     { 
  (yyval.str) = make_str("unbounded preceding");
-}
+;}
     break;
 
   case 1567:
-
-/* Line 1806 of yacc.c  */
 #line 9397 "preproc.y"
     { 
  (yyval.str) = make_str("unbounded following");
-}
+;}
     break;
 
   case 1568:
-
-/* Line 1806 of yacc.c  */
 #line 9401 "preproc.y"
     { 
  (yyval.str) = make_str("current row");
-}
+;}
     break;
 
   case 1569:
-
-/* Line 1806 of yacc.c  */
 #line 9405 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),make_str("preceding"));
-}
+;}
     break;
 
   case 1570:
-
-/* Line 1806 of yacc.c  */
 #line 9409 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),make_str("following"));
-}
+;}
     break;
 
   case 1571:
-
-/* Line 1806 of yacc.c  */
 #line 9417 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("row ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1572:
-
-/* Line 1806 of yacc.c  */
 #line 9421 "preproc.y"
     { 
  (yyval.str) = make_str("row ( )");
-}
+;}
     break;
 
   case 1573:
-
-/* Line 1806 of yacc.c  */
 #line 9425 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("("),(yyvsp[(2) - (5)].str),make_str(","),(yyvsp[(4) - (5)].str),make_str(")"));
-}
+;}
     break;
 
   case 1574:
-
-/* Line 1806 of yacc.c  */
 #line 9433 "preproc.y"
     { 
  (yyval.str) = make_str("any");
-}
+;}
     break;
 
   case 1575:
-
-/* Line 1806 of yacc.c  */
 #line 9437 "preproc.y"
     { 
  (yyval.str) = make_str("some");
-}
+;}
     break;
 
   case 1576:
-
-/* Line 1806 of yacc.c  */
 #line 9441 "preproc.y"
     { 
  (yyval.str) = make_str("all");
-}
+;}
     break;
 
   case 1577:
-
-/* Line 1806 of yacc.c  */
 #line 9449 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1578:
-
-/* Line 1806 of yacc.c  */
 #line 9453 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1579:
-
-/* Line 1806 of yacc.c  */
 #line 9461 "preproc.y"
     { 
  (yyval.str) = make_str("+");
-}
+;}
     break;
 
   case 1580:
-
-/* Line 1806 of yacc.c  */
 #line 9465 "preproc.y"
     { 
  (yyval.str) = make_str("-");
-}
+;}
     break;
 
   case 1581:
-
-/* Line 1806 of yacc.c  */
 #line 9469 "preproc.y"
     { 
  (yyval.str) = make_str("*");
-}
+;}
     break;
 
   case 1582:
-
-/* Line 1806 of yacc.c  */
 #line 9473 "preproc.y"
     { 
  (yyval.str) = make_str("/");
-}
+;}
     break;
 
   case 1583:
-
-/* Line 1806 of yacc.c  */
 #line 9477 "preproc.y"
     { 
  (yyval.str) = make_str("%");
-}
+;}
     break;
 
   case 1584:
-
-/* Line 1806 of yacc.c  */
 #line 9481 "preproc.y"
     { 
  (yyval.str) = make_str("^");
-}
+;}
     break;
 
   case 1585:
-
-/* Line 1806 of yacc.c  */
 #line 9485 "preproc.y"
     { 
  (yyval.str) = make_str("<");
-}
+;}
     break;
 
   case 1586:
-
-/* Line 1806 of yacc.c  */
 #line 9489 "preproc.y"
     { 
  (yyval.str) = make_str(">");
-}
+;}
     break;
 
   case 1587:
-
-/* Line 1806 of yacc.c  */
 #line 9493 "preproc.y"
     { 
  (yyval.str) = make_str("=");
-}
+;}
     break;
 
   case 1588:
-
-/* Line 1806 of yacc.c  */
 #line 9501 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1589:
-
-/* Line 1806 of yacc.c  */
 #line 9505 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("operator ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1590:
-
-/* Line 1806 of yacc.c  */
 #line 9513 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1591:
-
-/* Line 1806 of yacc.c  */
 #line 9517 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("operator ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1592:
-
-/* Line 1806 of yacc.c  */
 #line 9525 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1593:
-
-/* Line 1806 of yacc.c  */
 #line 9529 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("operator ("),(yyvsp[(3) - (4)].str),make_str(")"));
-}
+;}
     break;
 
   case 1594:
-
-/* Line 1806 of yacc.c  */
 #line 9533 "preproc.y"
     { 
  (yyval.str) = make_str("like");
-}
+;}
     break;
 
   case 1595:
-
-/* Line 1806 of yacc.c  */
 #line 9537 "preproc.y"
     { 
  (yyval.str) = make_str("not like");
-}
+;}
     break;
 
   case 1596:
-
-/* Line 1806 of yacc.c  */
 #line 9541 "preproc.y"
     { 
  (yyval.str) = make_str("ilike");
-}
+;}
     break;
 
   case 1597:
-
-/* Line 1806 of yacc.c  */
 #line 9545 "preproc.y"
     { 
  (yyval.str) = make_str("not ilike");
-}
+;}
     break;
 
   case 1598:
-
-/* Line 1806 of yacc.c  */
 #line 9553 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1599:
-
-/* Line 1806 of yacc.c  */
 #line 9557 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1600:
-
-/* Line 1806 of yacc.c  */
 #line 9565 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1601:
-
-/* Line 1806 of yacc.c  */
 #line 9569 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1602:
-
-/* Line 1806 of yacc.c  */
 #line 9577 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1603:
-
-/* Line 1806 of yacc.c  */
 #line 9581 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(":="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1604:
-
-/* Line 1806 of yacc.c  */
 #line 9589 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1605:
-
-/* Line 1806 of yacc.c  */
 #line 9593 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1606:
-
-/* Line 1806 of yacc.c  */
 #line 9601 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("["),(yyvsp[(2) - (3)].str),make_str("]"));
-}
+;}
     break;
 
   case 1607:
-
-/* Line 1806 of yacc.c  */
 #line 9605 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("["),(yyvsp[(2) - (3)].str),make_str("]"));
-}
+;}
     break;
 
   case 1608:
-
-/* Line 1806 of yacc.c  */
 #line 9609 "preproc.y"
     { 
  (yyval.str) = make_str("[ ]");
-}
+;}
     break;
 
   case 1609:
-
-/* Line 1806 of yacc.c  */
 #line 9617 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1610:
-
-/* Line 1806 of yacc.c  */
 #line 9621 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1611:
-
-/* Line 1806 of yacc.c  */
 #line 9629 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("from"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1612:
-
-/* Line 1806 of yacc.c  */
 #line 9633 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1613:
-
-/* Line 1806 of yacc.c  */
 #line 9640 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1614:
-
-/* Line 1806 of yacc.c  */
 #line 9644 "preproc.y"
     { 
  (yyval.str) = make_str("year");
-}
+;}
     break;
 
   case 1615:
-
-/* Line 1806 of yacc.c  */
 #line 9648 "preproc.y"
     { 
  (yyval.str) = make_str("month");
-}
+;}
     break;
 
   case 1616:
-
-/* Line 1806 of yacc.c  */
 #line 9652 "preproc.y"
     { 
  (yyval.str) = make_str("day");
-}
+;}
     break;
 
   case 1617:
-
-/* Line 1806 of yacc.c  */
 #line 9656 "preproc.y"
     { 
  (yyval.str) = make_str("hour");
-}
+;}
     break;
 
   case 1618:
-
-/* Line 1806 of yacc.c  */
 #line 9660 "preproc.y"
     { 
  (yyval.str) = make_str("minute");
-}
+;}
     break;
 
   case 1619:
-
-/* Line 1806 of yacc.c  */
 #line 9664 "preproc.y"
     { 
  (yyval.str) = make_str("second");
-}
+;}
     break;
 
   case 1620:
-
-/* Line 1806 of yacc.c  */
 #line 9668 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1621:
-
-/* Line 1806 of yacc.c  */
 #line 9676 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1622:
-
-/* Line 1806 of yacc.c  */
 #line 9680 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1623:
-
-/* Line 1806 of yacc.c  */
 #line 9688 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("placing"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1624:
-
-/* Line 1806 of yacc.c  */
 #line 9696 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("in"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1625:
-
-/* Line 1806 of yacc.c  */
 #line 9700 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1626:
-
-/* Line 1806 of yacc.c  */
 #line 9707 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1627:
-
-/* Line 1806 of yacc.c  */
 #line 9711 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1628:
-
-/* Line 1806 of yacc.c  */
 #line 9715 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1629:
-
-/* Line 1806 of yacc.c  */
 #line 9719 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1630:
-
-/* Line 1806 of yacc.c  */
 #line 9723 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1631:
-
-/* Line 1806 of yacc.c  */
 #line 9727 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1632:
-
-/* Line 1806 of yacc.c  */
 #line 9734 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1633:
-
-/* Line 1806 of yacc.c  */
 #line 9742 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("for"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1634:
-
-/* Line 1806 of yacc.c  */
 #line 9750 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("from"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1635:
-
-/* Line 1806 of yacc.c  */
 #line 9754 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1636:
-
-/* Line 1806 of yacc.c  */
 #line 9758 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1637:
-
-/* Line 1806 of yacc.c  */
 #line 9766 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1638:
-
-/* Line 1806 of yacc.c  */
 #line 9770 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1639:
-
-/* Line 1806 of yacc.c  */
 #line 9778 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("case"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),make_str("end"));
-}
+;}
     break;
 
   case 1640:
-
-/* Line 1806 of yacc.c  */
 #line 9786 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1641:
-
-/* Line 1806 of yacc.c  */
 #line 9790 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1642:
-
-/* Line 1806 of yacc.c  */
 #line 9798 "preproc.y"
     { 
  (yyval.str) = cat_str(4,make_str("when"),(yyvsp[(2) - (4)].str),make_str("then"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1643:
-
-/* Line 1806 of yacc.c  */
 #line 9806 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("else"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1644:
-
-/* Line 1806 of yacc.c  */
 #line 9810 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1645:
-
-/* Line 1806 of yacc.c  */
 #line 9817 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1646:
-
-/* Line 1806 of yacc.c  */
 #line 9821 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1647:
-
-/* Line 1806 of yacc.c  */
 #line 9828 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1648:
-
-/* Line 1806 of yacc.c  */
 #line 9832 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1649:
-
-/* Line 1806 of yacc.c  */
 #line 9840 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("."),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1650:
-
-/* Line 1806 of yacc.c  */
 #line 9844 "preproc.y"
     { 
  (yyval.str) = make_str(". *");
-}
+;}
     break;
 
   case 1651:
-
-/* Line 1806 of yacc.c  */
 #line 9848 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("["),(yyvsp[(2) - (3)].str),make_str("]"));
-}
+;}
     break;
 
   case 1652:
-
-/* Line 1806 of yacc.c  */
 #line 9852 "preproc.y"
     { 
  (yyval.str) = cat_str(5,make_str("["),(yyvsp[(2) - (5)].str),make_str(":"),(yyvsp[(4) - (5)].str),make_str("]"));
-}
+;}
     break;
 
   case 1653:
-
-/* Line 1806 of yacc.c  */
 #line 9860 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1654:
-
-/* Line 1806 of yacc.c  */
 #line 9864 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1655:
-
-/* Line 1806 of yacc.c  */
 #line 9872 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1656:
-
-/* Line 1806 of yacc.c  */
 #line 9875 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1657:
-
-/* Line 1806 of yacc.c  */
 #line 9883 "preproc.y"
     { 
  (yyval.str) = make_str("asymmetric");
-}
+;}
     break;
 
   case 1658:
-
-/* Line 1806 of yacc.c  */
 #line 9887 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1659:
-
-/* Line 1806 of yacc.c  */
 #line 9894 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1660:
-
-/* Line 1806 of yacc.c  */
 #line 9898 "preproc.y"
     { 
  (yyval.str) = make_str("default");
-}
+;}
     break;
 
   case 1661:
-
-/* Line 1806 of yacc.c  */
 #line 9906 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1662:
-
-/* Line 1806 of yacc.c  */
 #line 9910 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1663:
-
-/* Line 1806 of yacc.c  */
 #line 9918 "preproc.y"
     { 
  (yyval.str) = cat_str(3,make_str("("),(yyvsp[(2) - (3)].str),make_str(")"));
-}
+;}
     break;
 
   case 1664:
-
-/* Line 1806 of yacc.c  */
 #line 9926 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1665:
-
-/* Line 1806 of yacc.c  */
 #line 9930 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1666:
-
-/* Line 1806 of yacc.c  */
 #line 9938 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1667:
-
-/* Line 1806 of yacc.c  */
 #line 9942 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1668:
-
-/* Line 1806 of yacc.c  */
 #line 9946 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1669:
-
-/* Line 1806 of yacc.c  */
 #line 9950 "preproc.y"
     { 
  (yyval.str) = make_str("*");
-}
+;}
     break;
 
   case 1670:
-
-/* Line 1806 of yacc.c  */
 #line 9958 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1671:
-
-/* Line 1806 of yacc.c  */
 #line 9962 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1672:
-
-/* Line 1806 of yacc.c  */
 #line 9970 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1673:
-
-/* Line 1806 of yacc.c  */
 #line 9974 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1674:
-
-/* Line 1806 of yacc.c  */
 #line 9982 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1675:
-
-/* Line 1806 of yacc.c  */
 #line 9986 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1676:
-
-/* Line 1806 of yacc.c  */
 #line 9994 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1677:
-
-/* Line 1806 of yacc.c  */
 #line 10002 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1678:
-
-/* Line 1806 of yacc.c  */
 #line 10010 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1679:
-
-/* Line 1806 of yacc.c  */
 #line 10018 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1680:
-
-/* Line 1806 of yacc.c  */
 #line 10026 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1681:
-
-/* Line 1806 of yacc.c  */
 #line 10034 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1682:
-
-/* Line 1806 of yacc.c  */
 #line 10042 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1683:
-
-/* Line 1806 of yacc.c  */
 #line 10046 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1684:
-
-/* Line 1806 of yacc.c  */
 #line 10054 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1685:
-
-/* Line 1806 of yacc.c  */
 #line 10058 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1686:
-
-/* Line 1806 of yacc.c  */
 #line 10062 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1687:
-
-/* Line 1806 of yacc.c  */
 #line 10066 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1688:
-
-/* Line 1806 of yacc.c  */
 #line 10070 "preproc.y"
     { 
  (yyval.str) = make_str("xconst");
-}
+;}
     break;
 
   case 1689:
-
-/* Line 1806 of yacc.c  */
 #line 10074 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1690:
-
-/* Line 1806 of yacc.c  */
 #line 10078 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),make_str("("),(yyvsp[(3) - (5)].str),make_str(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1691:
-
-/* Line 1806 of yacc.c  */
 #line 10082 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1692:
-
-/* Line 1806 of yacc.c  */
 #line 10086 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1693:
-
-/* Line 1806 of yacc.c  */
 #line 10090 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),make_str("("),(yyvsp[(3) - (6)].str),make_str(")"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1694:
-
-/* Line 1806 of yacc.c  */
 #line 10094 "preproc.y"
     { 
  (yyval.str) = make_str("true");
-}
+;}
     break;
 
   case 1695:
-
-/* Line 1806 of yacc.c  */
 #line 10098 "preproc.y"
     { 
  (yyval.str) = make_str("false");
-}
+;}
     break;
 
   case 1696:
-
-/* Line 1806 of yacc.c  */
 #line 10102 "preproc.y"
     { 
  (yyval.str) = make_str("null");
-}
+;}
     break;
 
   case 1697:
-
-/* Line 1806 of yacc.c  */
 #line 10105 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1698:
-
-/* Line 1806 of yacc.c  */
 #line 10106 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1699:
-
-/* Line 1806 of yacc.c  */
 #line 10112 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 1700:
-
-/* Line 1806 of yacc.c  */
 #line 10118 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1701:
-
-/* Line 1806 of yacc.c  */
 #line 10126 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1702:
-
-/* Line 1806 of yacc.c  */
 #line 10130 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),make_str(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1703:
-
-/* Line 1806 of yacc.c  */
 #line 10138 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1704:
-
-/* Line 1806 of yacc.c  */
 #line 10141 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1705:
-
-/* Line 1806 of yacc.c  */
 #line 10143 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("+"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1706:
-
-/* Line 1806 of yacc.c  */
 #line 10147 "preproc.y"
     { 
  (yyval.str) = cat_str(2,make_str("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1707:
-
-/* Line 1806 of yacc.c  */
 #line 10155 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1708:
-
-/* Line 1806 of yacc.c  */
 #line 10159 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1709:
-
-/* Line 1806 of yacc.c  */
 #line 10163 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1710:
-
-/* Line 1806 of yacc.c  */
 #line 10167 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1711:
-
-/* Line 1806 of yacc.c  */
 #line 10175 "preproc.y"
     { 
  (yyval.str) = make_str("abort");
-}
+;}
     break;
 
   case 1712:
-
-/* Line 1806 of yacc.c  */
 #line 10179 "preproc.y"
     { 
  (yyval.str) = make_str("absolute");
-}
+;}
     break;
 
   case 1713:
-
-/* Line 1806 of yacc.c  */
 #line 10183 "preproc.y"
     { 
  (yyval.str) = make_str("access");
-}
+;}
     break;
 
   case 1714:
-
-/* Line 1806 of yacc.c  */
 #line 10187 "preproc.y"
     { 
  (yyval.str) = make_str("action");
-}
+;}
     break;
 
   case 1715:
-
-/* Line 1806 of yacc.c  */
 #line 10191 "preproc.y"
     { 
  (yyval.str) = make_str("add");
-}
+;}
     break;
 
   case 1716:
-
-/* Line 1806 of yacc.c  */
 #line 10195 "preproc.y"
     { 
  (yyval.str) = make_str("admin");
-}
+;}
     break;
 
   case 1717:
-
-/* Line 1806 of yacc.c  */
 #line 10199 "preproc.y"
     { 
  (yyval.str) = make_str("after");
-}
+;}
     break;
 
   case 1718:
-
-/* Line 1806 of yacc.c  */
 #line 10203 "preproc.y"
     { 
  (yyval.str) = make_str("aggregate");
-}
+;}
     break;
 
   case 1719:
-
-/* Line 1806 of yacc.c  */
 #line 10207 "preproc.y"
     { 
  (yyval.str) = make_str("also");
-}
+;}
     break;
 
   case 1720:
-
-/* Line 1806 of yacc.c  */
 #line 10211 "preproc.y"
     { 
  (yyval.str) = make_str("alter");
-}
+;}
     break;
 
   case 1721:
-
-/* Line 1806 of yacc.c  */
 #line 10215 "preproc.y"
     { 
  (yyval.str) = make_str("always");
-}
+;}
     break;
 
   case 1722:
-
-/* Line 1806 of yacc.c  */
 #line 10219 "preproc.y"
     { 
  (yyval.str) = make_str("assertion");
-}
+;}
     break;
 
   case 1723:
-
-/* Line 1806 of yacc.c  */
 #line 10223 "preproc.y"
     { 
  (yyval.str) = make_str("assignment");
-}
+;}
     break;
 
   case 1724:
-
-/* Line 1806 of yacc.c  */
 #line 10227 "preproc.y"
     { 
  (yyval.str) = make_str("at");
-}
+;}
     break;
 
   case 1725:
-
-/* Line 1806 of yacc.c  */
 #line 10231 "preproc.y"
     { 
  (yyval.str) = make_str("backward");
-}
+;}
     break;
 
   case 1726:
-
-/* Line 1806 of yacc.c  */
 #line 10235 "preproc.y"
     { 
  (yyval.str) = make_str("before");
-}
+;}
     break;
 
   case 1727:
-
-/* Line 1806 of yacc.c  */
 #line 10239 "preproc.y"
     { 
  (yyval.str) = make_str("begin");
-}
+;}
     break;
 
   case 1728:
-
-/* Line 1806 of yacc.c  */
 #line 10243 "preproc.y"
     { 
  (yyval.str) = make_str("by");
-}
+;}
     break;
 
   case 1729:
-
-/* Line 1806 of yacc.c  */
 #line 10247 "preproc.y"
     { 
  (yyval.str) = make_str("cache");
-}
+;}
     break;
 
   case 1730:
-
-/* Line 1806 of yacc.c  */
 #line 10251 "preproc.y"
     { 
  (yyval.str) = make_str("called");
-}
+;}
     break;
 
   case 1731:
-
-/* Line 1806 of yacc.c  */
 #line 10255 "preproc.y"
     { 
  (yyval.str) = make_str("cascade");
-}
+;}
     break;
 
   case 1732:
-
-/* Line 1806 of yacc.c  */
 #line 10259 "preproc.y"
     { 
  (yyval.str) = make_str("cascaded");
-}
+;}
     break;
 
   case 1733:
-
-/* Line 1806 of yacc.c  */
 #line 10263 "preproc.y"
     { 
  (yyval.str) = make_str("catalog");
-}
+;}
     break;
 
   case 1734:
-
-/* Line 1806 of yacc.c  */
 #line 10267 "preproc.y"
     { 
  (yyval.str) = make_str("chain");
-}
+;}
     break;
 
   case 1735:
-
-/* Line 1806 of yacc.c  */
 #line 10271 "preproc.y"
     { 
  (yyval.str) = make_str("characteristics");
-}
+;}
     break;
 
   case 1736:
-
-/* Line 1806 of yacc.c  */
 #line 10275 "preproc.y"
     { 
  (yyval.str) = make_str("checkpoint");
-}
+;}
     break;
 
   case 1737:
-
-/* Line 1806 of yacc.c  */
 #line 10279 "preproc.y"
     { 
  (yyval.str) = make_str("class");
-}
+;}
     break;
 
   case 1738:
-
-/* Line 1806 of yacc.c  */
 #line 10283 "preproc.y"
     { 
  (yyval.str) = make_str("close");
-}
+;}
     break;
 
   case 1739:
-
-/* Line 1806 of yacc.c  */
 #line 10287 "preproc.y"
     { 
  (yyval.str) = make_str("cluster");
-}
+;}
     break;
 
   case 1740:
-
-/* Line 1806 of yacc.c  */
 #line 10291 "preproc.y"
     { 
  (yyval.str) = make_str("comment");
-}
+;}
     break;
 
   case 1741:
-
-/* Line 1806 of yacc.c  */
 #line 10295 "preproc.y"
     { 
  (yyval.str) = make_str("comments");
-}
+;}
     break;
 
   case 1742:
-
-/* Line 1806 of yacc.c  */
 #line 10299 "preproc.y"
     { 
  (yyval.str) = make_str("commit");
-}
+;}
     break;
 
   case 1743:
-
-/* Line 1806 of yacc.c  */
 #line 10303 "preproc.y"
     { 
  (yyval.str) = make_str("committed");
-}
+;}
     break;
 
   case 1744:
-
-/* Line 1806 of yacc.c  */
 #line 10307 "preproc.y"
     { 
  (yyval.str) = make_str("configuration");
-}
+;}
     break;
 
   case 1745:
-
-/* Line 1806 of yacc.c  */
 #line 10311 "preproc.y"
     { 
  (yyval.str) = make_str("constraints");
-}
+;}
     break;
 
   case 1746:
-
-/* Line 1806 of yacc.c  */
 #line 10315 "preproc.y"
     { 
  (yyval.str) = make_str("content");
-}
+;}
     break;
 
   case 1747:
-
-/* Line 1806 of yacc.c  */
 #line 10319 "preproc.y"
     { 
  (yyval.str) = make_str("continue");
-}
+;}
     break;
 
   case 1748:
-
-/* Line 1806 of yacc.c  */
 #line 10323 "preproc.y"
     { 
  (yyval.str) = make_str("conversion");
-}
+;}
     break;
 
   case 1749:
-
-/* Line 1806 of yacc.c  */
 #line 10327 "preproc.y"
     { 
  (yyval.str) = make_str("copy");
-}
+;}
     break;
 
   case 1750:
-
-/* Line 1806 of yacc.c  */
 #line 10331 "preproc.y"
     { 
  (yyval.str) = make_str("cost");
-}
+;}
     break;
 
   case 1751:
-
-/* Line 1806 of yacc.c  */
 #line 10335 "preproc.y"
     { 
  (yyval.str) = make_str("createdb");
-}
+;}
     break;
 
   case 1752:
-
-/* Line 1806 of yacc.c  */
 #line 10339 "preproc.y"
     { 
  (yyval.str) = make_str("createrole");
-}
+;}
     break;
 
   case 1753:
-
-/* Line 1806 of yacc.c  */
 #line 10343 "preproc.y"
     { 
  (yyval.str) = make_str("createuser");
-}
+;}
     break;
 
   case 1754:
-
-/* Line 1806 of yacc.c  */
 #line 10347 "preproc.y"
     { 
  (yyval.str) = make_str("csv");
-}
+;}
     break;
 
   case 1755:
-
-/* Line 1806 of yacc.c  */
 #line 10351 "preproc.y"
     { 
  (yyval.str) = make_str("cursor");
-}
+;}
     break;
 
   case 1756:
-
-/* Line 1806 of yacc.c  */
 #line 10355 "preproc.y"
     { 
  (yyval.str) = make_str("cycle");
-}
+;}
     break;
 
   case 1757:
-
-/* Line 1806 of yacc.c  */
 #line 10359 "preproc.y"
     { 
  (yyval.str) = make_str("data");
-}
+;}
     break;
 
   case 1758:
-
-/* Line 1806 of yacc.c  */
 #line 10363 "preproc.y"
     { 
  (yyval.str) = make_str("database");
-}
+;}
     break;
 
   case 1759:
-
-/* Line 1806 of yacc.c  */
 #line 10367 "preproc.y"
     { 
  (yyval.str) = make_str("deallocate");
-}
+;}
     break;
 
   case 1760:
-
-/* Line 1806 of yacc.c  */
 #line 10371 "preproc.y"
     { 
  (yyval.str) = make_str("declare");
-}
+;}
     break;
 
   case 1761:
-
-/* Line 1806 of yacc.c  */
 #line 10375 "preproc.y"
     { 
  (yyval.str) = make_str("defaults");
-}
+;}
     break;
 
   case 1762:
-
-/* Line 1806 of yacc.c  */
 #line 10379 "preproc.y"
     { 
  (yyval.str) = make_str("deferred");
-}
+;}
     break;
 
   case 1763:
-
-/* Line 1806 of yacc.c  */
 #line 10383 "preproc.y"
     { 
  (yyval.str) = make_str("definer");
-}
+;}
     break;
 
   case 1764:
-
-/* Line 1806 of yacc.c  */
 #line 10387 "preproc.y"
     { 
  (yyval.str) = make_str("delete");
-}
+;}
     break;
 
   case 1765:
-
-/* Line 1806 of yacc.c  */
 #line 10391 "preproc.y"
     { 
  (yyval.str) = make_str("delimiter");
-}
+;}
     break;
 
   case 1766:
-
-/* Line 1806 of yacc.c  */
 #line 10395 "preproc.y"
     { 
  (yyval.str) = make_str("delimiters");
-}
+;}
     break;
 
   case 1767:
-
-/* Line 1806 of yacc.c  */
 #line 10399 "preproc.y"
     { 
  (yyval.str) = make_str("dictionary");
-}
+;}
     break;
 
   case 1768:
-
-/* Line 1806 of yacc.c  */
 #line 10403 "preproc.y"
     { 
  (yyval.str) = make_str("disable");
-}
+;}
     break;
 
   case 1769:
-
-/* Line 1806 of yacc.c  */
 #line 10407 "preproc.y"
     { 
  (yyval.str) = make_str("discard");
-}
+;}
     break;
 
   case 1770:
-
-/* Line 1806 of yacc.c  */
 #line 10411 "preproc.y"
     { 
  (yyval.str) = make_str("document");
-}
+;}
     break;
 
   case 1771:
-
-/* Line 1806 of yacc.c  */
 #line 10415 "preproc.y"
     { 
  (yyval.str) = make_str("domain");
-}
+;}
     break;
 
   case 1772:
-
-/* Line 1806 of yacc.c  */
 #line 10419 "preproc.y"
     { 
  (yyval.str) = make_str("double");
-}
+;}
     break;
 
   case 1773:
-
-/* Line 1806 of yacc.c  */
 #line 10423 "preproc.y"
     { 
  (yyval.str) = make_str("drop");
-}
+;}
     break;
 
   case 1774:
-
-/* Line 1806 of yacc.c  */
 #line 10427 "preproc.y"
     { 
  (yyval.str) = make_str("each");
-}
+;}
     break;
 
   case 1775:
-
-/* Line 1806 of yacc.c  */
 #line 10431 "preproc.y"
     { 
  (yyval.str) = make_str("enable");
-}
+;}
     break;
 
   case 1776:
-
-/* Line 1806 of yacc.c  */
 #line 10435 "preproc.y"
     { 
  (yyval.str) = make_str("encoding");
-}
+;}
     break;
 
   case 1777:
-
-/* Line 1806 of yacc.c  */
 #line 10439 "preproc.y"
     { 
  (yyval.str) = make_str("encrypted");
-}
+;}
     break;
 
   case 1778:
-
-/* Line 1806 of yacc.c  */
 #line 10443 "preproc.y"
     { 
  (yyval.str) = make_str("enum");
-}
+;}
     break;
 
   case 1779:
-
-/* Line 1806 of yacc.c  */
 #line 10447 "preproc.y"
     { 
  (yyval.str) = make_str("escape");
-}
+;}
     break;
 
   case 1780:
-
-/* Line 1806 of yacc.c  */
 #line 10451 "preproc.y"
     { 
  (yyval.str) = make_str("exclude");
-}
+;}
     break;
 
   case 1781:
-
-/* Line 1806 of yacc.c  */
 #line 10455 "preproc.y"
     { 
  (yyval.str) = make_str("excluding");
-}
+;}
     break;
 
   case 1782:
-
-/* Line 1806 of yacc.c  */
 #line 10459 "preproc.y"
     { 
  (yyval.str) = make_str("exclusive");
-}
+;}
     break;
 
   case 1783:
-
-/* Line 1806 of yacc.c  */
 #line 10463 "preproc.y"
     { 
  (yyval.str) = make_str("execute");
-}
+;}
     break;
 
   case 1784:
-
-/* Line 1806 of yacc.c  */
 #line 10467 "preproc.y"
     { 
  (yyval.str) = make_str("explain");
-}
+;}
     break;
 
   case 1785:
-
-/* Line 1806 of yacc.c  */
 #line 10471 "preproc.y"
     { 
  (yyval.str) = make_str("external");
-}
+;}
     break;
 
   case 1786:
-
-/* Line 1806 of yacc.c  */
 #line 10475 "preproc.y"
     { 
  (yyval.str) = make_str("family");
-}
+;}
     break;
 
   case 1787:
-
-/* Line 1806 of yacc.c  */
 #line 10479 "preproc.y"
     { 
  (yyval.str) = make_str("first");
-}
+;}
     break;
 
   case 1788:
-
-/* Line 1806 of yacc.c  */
 #line 10483 "preproc.y"
     { 
  (yyval.str) = make_str("following");
-}
+;}
     break;
 
   case 1789:
-
-/* Line 1806 of yacc.c  */
 #line 10487 "preproc.y"
     { 
  (yyval.str) = make_str("force");
-}
+;}
     break;
 
   case 1790:
-
-/* Line 1806 of yacc.c  */
 #line 10491 "preproc.y"
     { 
  (yyval.str) = make_str("forward");
-}
+;}
     break;
 
   case 1791:
-
-/* Line 1806 of yacc.c  */
 #line 10495 "preproc.y"
     { 
  (yyval.str) = make_str("function");
-}
+;}
     break;
 
   case 1792:
-
-/* Line 1806 of yacc.c  */
 #line 10499 "preproc.y"
     { 
  (yyval.str) = make_str("functions");
-}
+;}
     break;
 
   case 1793:
-
-/* Line 1806 of yacc.c  */
 #line 10503 "preproc.y"
     { 
  (yyval.str) = make_str("global");
-}
+;}
     break;
 
   case 1794:
-
-/* Line 1806 of yacc.c  */
 #line 10507 "preproc.y"
     { 
  (yyval.str) = make_str("granted");
-}
+;}
     break;
 
   case 1795:
-
-/* Line 1806 of yacc.c  */
 #line 10511 "preproc.y"
     { 
  (yyval.str) = make_str("handler");
-}
+;}
     break;
 
   case 1796:
-
-/* Line 1806 of yacc.c  */
 #line 10515 "preproc.y"
     { 
  (yyval.str) = make_str("header");
-}
+;}
     break;
 
   case 1797:
-
-/* Line 1806 of yacc.c  */
 #line 10519 "preproc.y"
     { 
  (yyval.str) = make_str("hold");
-}
+;}
     break;
 
   case 1798:
-
-/* Line 1806 of yacc.c  */
 #line 10523 "preproc.y"
     { 
  (yyval.str) = make_str("identity");
-}
+;}
     break;
 
   case 1799:
-
-/* Line 1806 of yacc.c  */
 #line 10527 "preproc.y"
     { 
  (yyval.str) = make_str("if");
-}
+;}
     break;
 
   case 1800:
-
-/* Line 1806 of yacc.c  */
 #line 10531 "preproc.y"
     { 
  (yyval.str) = make_str("immediate");
-}
+;}
     break;
 
   case 1801:
-
-/* Line 1806 of yacc.c  */
 #line 10535 "preproc.y"
     { 
  (yyval.str) = make_str("immutable");
-}
+;}
     break;
 
   case 1802:
-
-/* Line 1806 of yacc.c  */
 #line 10539 "preproc.y"
     { 
  (yyval.str) = make_str("implicit");
-}
+;}
     break;
 
   case 1803:
-
-/* Line 1806 of yacc.c  */
 #line 10543 "preproc.y"
     { 
  (yyval.str) = make_str("including");
-}
+;}
     break;
 
   case 1804:
-
-/* Line 1806 of yacc.c  */
 #line 10547 "preproc.y"
     { 
  (yyval.str) = make_str("increment");
-}
+;}
     break;
 
   case 1805:
-
-/* Line 1806 of yacc.c  */
 #line 10551 "preproc.y"
     { 
  (yyval.str) = make_str("index");
-}
+;}
     break;
 
   case 1806:
-
-/* Line 1806 of yacc.c  */
 #line 10555 "preproc.y"
     { 
  (yyval.str) = make_str("indexes");
-}
+;}
     break;
 
   case 1807:
-
-/* Line 1806 of yacc.c  */
 #line 10559 "preproc.y"
     { 
  (yyval.str) = make_str("inherit");
-}
+;}
     break;
 
   case 1808:
-
-/* Line 1806 of yacc.c  */
 #line 10563 "preproc.y"
     { 
  (yyval.str) = make_str("inherits");
-}
+;}
     break;
 
   case 1809:
-
-/* Line 1806 of yacc.c  */
 #line 10567 "preproc.y"
     { 
  (yyval.str) = make_str("inline");
-}
+;}
     break;
 
   case 1810:
-
-/* Line 1806 of yacc.c  */
 #line 10571 "preproc.y"
     { 
  (yyval.str) = make_str("insensitive");
-}
+;}
     break;
 
   case 1811:
-
-/* Line 1806 of yacc.c  */
 #line 10575 "preproc.y"
     { 
  (yyval.str) = make_str("insert");
-}
+;}
     break;
 
   case 1812:
-
-/* Line 1806 of yacc.c  */
 #line 10579 "preproc.y"
     { 
  (yyval.str) = make_str("instead");
-}
+;}
     break;
 
   case 1813:
-
-/* Line 1806 of yacc.c  */
 #line 10583 "preproc.y"
     { 
  (yyval.str) = make_str("invoker");
-}
+;}
     break;
 
   case 1814:
-
-/* Line 1806 of yacc.c  */
 #line 10587 "preproc.y"
     { 
  (yyval.str) = make_str("isolation");
-}
+;}
     break;
 
   case 1815:
-
-/* Line 1806 of yacc.c  */
 #line 10591 "preproc.y"
     { 
  (yyval.str) = make_str("key");
-}
+;}
     break;
 
   case 1816:
-
-/* Line 1806 of yacc.c  */
 #line 10595 "preproc.y"
     { 
  (yyval.str) = make_str("language");
-}
+;}
     break;
 
   case 1817:
-
-/* Line 1806 of yacc.c  */
 #line 10599 "preproc.y"
     { 
  (yyval.str) = make_str("large");
-}
+;}
     break;
 
   case 1818:
-
-/* Line 1806 of yacc.c  */
 #line 10603 "preproc.y"
     { 
  (yyval.str) = make_str("last");
-}
+;}
     break;
 
   case 1819:
-
-/* Line 1806 of yacc.c  */
 #line 10607 "preproc.y"
     { 
  (yyval.str) = make_str("lc_collate");
-}
+;}
     break;
 
   case 1820:
-
-/* Line 1806 of yacc.c  */
 #line 10611 "preproc.y"
     { 
  (yyval.str) = make_str("lc_ctype");
-}
+;}
     break;
 
   case 1821:
-
-/* Line 1806 of yacc.c  */
 #line 10615 "preproc.y"
     { 
  (yyval.str) = make_str("level");
-}
+;}
     break;
 
   case 1822:
-
-/* Line 1806 of yacc.c  */
 #line 10619 "preproc.y"
     { 
  (yyval.str) = make_str("listen");
-}
+;}
     break;
 
   case 1823:
-
-/* Line 1806 of yacc.c  */
 #line 10623 "preproc.y"
     { 
  (yyval.str) = make_str("load");
-}
+;}
     break;
 
   case 1824:
-
-/* Line 1806 of yacc.c  */
 #line 10627 "preproc.y"
     { 
  (yyval.str) = make_str("local");
-}
+;}
     break;
 
   case 1825:
-
-/* Line 1806 of yacc.c  */
 #line 10631 "preproc.y"
     { 
  (yyval.str) = make_str("location");
-}
+;}
     break;
 
   case 1826:
-
-/* Line 1806 of yacc.c  */
 #line 10635 "preproc.y"
     { 
  (yyval.str) = make_str("lock");
-}
+;}
     break;
 
   case 1827:
-
-/* Line 1806 of yacc.c  */
 #line 10639 "preproc.y"
     { 
  (yyval.str) = make_str("login");
-}
+;}
     break;
 
   case 1828:
-
-/* Line 1806 of yacc.c  */
 #line 10643 "preproc.y"
     { 
  (yyval.str) = make_str("mapping");
-}
+;}
     break;
 
   case 1829:
-
-/* Line 1806 of yacc.c  */
 #line 10647 "preproc.y"
     { 
  (yyval.str) = make_str("match");
-}
+;}
     break;
 
   case 1830:
-
-/* Line 1806 of yacc.c  */
 #line 10651 "preproc.y"
     { 
  (yyval.str) = make_str("maxvalue");
-}
+;}
     break;
 
   case 1831:
-
-/* Line 1806 of yacc.c  */
 #line 10655 "preproc.y"
     { 
  (yyval.str) = make_str("minvalue");
-}
+;}
     break;
 
   case 1832:
-
-/* Line 1806 of yacc.c  */
 #line 10659 "preproc.y"
     { 
  (yyval.str) = make_str("mode");
-}
+;}
     break;
 
   case 1833:
-
-/* Line 1806 of yacc.c  */
 #line 10663 "preproc.y"
     { 
  (yyval.str) = make_str("move");
-}
+;}
     break;
 
   case 1834:
-
-/* Line 1806 of yacc.c  */
 #line 10667 "preproc.y"
     { 
  (yyval.str) = make_str("name");
-}
+;}
     break;
 
   case 1835:
-
-/* Line 1806 of yacc.c  */
 #line 10671 "preproc.y"
     { 
  (yyval.str) = make_str("names");
-}
+;}
     break;
 
   case 1836:
-
-/* Line 1806 of yacc.c  */
 #line 10675 "preproc.y"
     { 
  (yyval.str) = make_str("next");
-}
+;}
     break;
 
   case 1837:
-
-/* Line 1806 of yacc.c  */
 #line 10679 "preproc.y"
     { 
  (yyval.str) = make_str("no");
-}
+;}
     break;
 
   case 1838:
-
-/* Line 1806 of yacc.c  */
 #line 10683 "preproc.y"
     { 
  (yyval.str) = make_str("nocreatedb");
-}
+;}
     break;
 
   case 1839:
-
-/* Line 1806 of yacc.c  */
 #line 10687 "preproc.y"
     { 
  (yyval.str) = make_str("nocreaterole");
-}
+;}
     break;
 
   case 1840:
-
-/* Line 1806 of yacc.c  */
 #line 10691 "preproc.y"
     { 
  (yyval.str) = make_str("nocreateuser");
-}
+;}
     break;
 
   case 1841:
-
-/* Line 1806 of yacc.c  */
 #line 10695 "preproc.y"
     { 
  (yyval.str) = make_str("noinherit");
-}
+;}
     break;
 
   case 1842:
-
-/* Line 1806 of yacc.c  */
 #line 10699 "preproc.y"
     { 
  (yyval.str) = make_str("nologin");
-}
+;}
     break;
 
   case 1843:
-
-/* Line 1806 of yacc.c  */
 #line 10703 "preproc.y"
     { 
  (yyval.str) = make_str("nosuperuser");
-}
+;}
     break;
 
   case 1844:
-
-/* Line 1806 of yacc.c  */
 #line 10707 "preproc.y"
     { 
  (yyval.str) = make_str("nothing");
-}
+;}
     break;
 
   case 1845:
-
-/* Line 1806 of yacc.c  */
 #line 10711 "preproc.y"
     { 
  (yyval.str) = make_str("notify");
-}
+;}
     break;
 
   case 1846:
-
-/* Line 1806 of yacc.c  */
 #line 10715 "preproc.y"
     { 
  (yyval.str) = make_str("nowait");
-}
+;}
     break;
 
   case 1847:
-
-/* Line 1806 of yacc.c  */
 #line 10719 "preproc.y"
     { 
  (yyval.str) = make_str("nulls");
-}
+;}
     break;
 
   case 1848:
-
-/* Line 1806 of yacc.c  */
 #line 10723 "preproc.y"
     { 
  (yyval.str) = make_str("object");
-}
+;}
     break;
 
   case 1849:
-
-/* Line 1806 of yacc.c  */
 #line 10727 "preproc.y"
     { 
  (yyval.str) = make_str("of");
-}
+;}
     break;
 
   case 1850:
-
-/* Line 1806 of yacc.c  */
 #line 10731 "preproc.y"
     { 
  (yyval.str) = make_str("off");
-}
+;}
     break;
 
   case 1851:
-
-/* Line 1806 of yacc.c  */
 #line 10735 "preproc.y"
     { 
  (yyval.str) = make_str("oids");
-}
+;}
     break;
 
   case 1852:
-
-/* Line 1806 of yacc.c  */
 #line 10739 "preproc.y"
     { 
  (yyval.str) = make_str("operator");
-}
+;}
     break;
 
   case 1853:
-
-/* Line 1806 of yacc.c  */
 #line 10743 "preproc.y"
     { 
  (yyval.str) = make_str("option");
-}
+;}
     break;
 
   case 1854:
-
-/* Line 1806 of yacc.c  */
 #line 10747 "preproc.y"
     { 
  (yyval.str) = make_str("options");
-}
+;}
     break;
 
   case 1855:
-
-/* Line 1806 of yacc.c  */
 #line 10751 "preproc.y"
     { 
  (yyval.str) = make_str("owned");
-}
+;}
     break;
 
   case 1856:
-
-/* Line 1806 of yacc.c  */
 #line 10755 "preproc.y"
     { 
  (yyval.str) = make_str("owner");
-}
+;}
     break;
 
   case 1857:
-
-/* Line 1806 of yacc.c  */
 #line 10759 "preproc.y"
     { 
  (yyval.str) = make_str("parser");
-}
+;}
     break;
 
   case 1858:
-
-/* Line 1806 of yacc.c  */
 #line 10763 "preproc.y"
     { 
  (yyval.str) = make_str("partial");
-}
+;}
     break;
 
   case 1859:
-
-/* Line 1806 of yacc.c  */
 #line 10767 "preproc.y"
     { 
  (yyval.str) = make_str("partition");
-}
+;}
     break;
 
   case 1860:
-
-/* Line 1806 of yacc.c  */
 #line 10771 "preproc.y"
     { 
  (yyval.str) = make_str("password");
-}
+;}
     break;
 
   case 1861:
-
-/* Line 1806 of yacc.c  */
 #line 10775 "preproc.y"
     { 
  (yyval.str) = make_str("plans");
-}
+;}
     break;
 
   case 1862:
-
-/* Line 1806 of yacc.c  */
 #line 10779 "preproc.y"
     { 
  (yyval.str) = make_str("preceding");
-}
+;}
     break;
 
   case 1863:
-
-/* Line 1806 of yacc.c  */
 #line 10783 "preproc.y"
     { 
  (yyval.str) = make_str("prepare");
-}
+;}
     break;
 
   case 1864:
-
-/* Line 1806 of yacc.c  */
 #line 10787 "preproc.y"
     { 
  (yyval.str) = make_str("prepared");
-}
+;}
     break;
 
   case 1865:
-
-/* Line 1806 of yacc.c  */
 #line 10791 "preproc.y"
     { 
  (yyval.str) = make_str("preserve");
-}
+;}
     break;
 
   case 1866:
-
-/* Line 1806 of yacc.c  */
 #line 10795 "preproc.y"
     { 
  (yyval.str) = make_str("prior");
-}
+;}
     break;
 
   case 1867:
-
-/* Line 1806 of yacc.c  */
 #line 10799 "preproc.y"
     { 
  (yyval.str) = make_str("privileges");
-}
+;}
     break;
 
   case 1868:
-
-/* Line 1806 of yacc.c  */
 #line 10803 "preproc.y"
     { 
  (yyval.str) = make_str("procedural");
-}
+;}
     break;
 
   case 1869:
-
-/* Line 1806 of yacc.c  */
 #line 10807 "preproc.y"
     { 
  (yyval.str) = make_str("procedure");
-}
+;}
     break;
 
   case 1870:
-
-/* Line 1806 of yacc.c  */
 #line 10811 "preproc.y"
     { 
  (yyval.str) = make_str("quote");
-}
+;}
     break;
 
   case 1871:
-
-/* Line 1806 of yacc.c  */
 #line 10815 "preproc.y"
     { 
  (yyval.str) = make_str("range");
-}
+;}
     break;
 
   case 1872:
-
-/* Line 1806 of yacc.c  */
 #line 10819 "preproc.y"
     { 
  (yyval.str) = make_str("read");
-}
+;}
     break;
 
   case 1873:
-
-/* Line 1806 of yacc.c  */
 #line 10823 "preproc.y"
     { 
  (yyval.str) = make_str("reassign");
-}
+;}
     break;
 
   case 1874:
-
-/* Line 1806 of yacc.c  */
 #line 10827 "preproc.y"
     { 
  (yyval.str) = make_str("recheck");
-}
+;}
     break;
 
   case 1875:
-
-/* Line 1806 of yacc.c  */
 #line 10831 "preproc.y"
     { 
  (yyval.str) = make_str("recursive");
-}
+;}
     break;
 
   case 1876:
-
-/* Line 1806 of yacc.c  */
 #line 10835 "preproc.y"
     { 
  (yyval.str) = make_str("reindex");
-}
+;}
     break;
 
   case 1877:
-
-/* Line 1806 of yacc.c  */
 #line 10839 "preproc.y"
     { 
  (yyval.str) = make_str("relative");
-}
+;}
     break;
 
   case 1878:
-
-/* Line 1806 of yacc.c  */
 #line 10843 "preproc.y"
     { 
  (yyval.str) = make_str("release");
-}
+;}
     break;
 
   case 1879:
-
-/* Line 1806 of yacc.c  */
 #line 10847 "preproc.y"
     { 
  (yyval.str) = make_str("rename");
-}
+;}
     break;
 
   case 1880:
-
-/* Line 1806 of yacc.c  */
 #line 10851 "preproc.y"
     { 
  (yyval.str) = make_str("repeatable");
-}
+;}
     break;
 
   case 1881:
-
-/* Line 1806 of yacc.c  */
 #line 10855 "preproc.y"
     { 
  (yyval.str) = make_str("replace");
-}
+;}
     break;
 
   case 1882:
-
-/* Line 1806 of yacc.c  */
 #line 10859 "preproc.y"
     { 
  (yyval.str) = make_str("replica");
-}
+;}
     break;
 
   case 1883:
-
-/* Line 1806 of yacc.c  */
 #line 10863 "preproc.y"
     { 
  (yyval.str) = make_str("reset");
-}
+;}
     break;
 
   case 1884:
-
-/* Line 1806 of yacc.c  */
 #line 10867 "preproc.y"
     { 
  (yyval.str) = make_str("restart");
-}
+;}
     break;
 
   case 1885:
-
-/* Line 1806 of yacc.c  */
 #line 10871 "preproc.y"
     { 
  (yyval.str) = make_str("restrict");
-}
+;}
     break;
 
   case 1886:
-
-/* Line 1806 of yacc.c  */
 #line 10875 "preproc.y"
     { 
  (yyval.str) = make_str("returns");
-}
+;}
     break;
 
   case 1887:
-
-/* Line 1806 of yacc.c  */
 #line 10879 "preproc.y"
     { 
  (yyval.str) = make_str("revoke");
-}
+;}
     break;
 
   case 1888:
-
-/* Line 1806 of yacc.c  */
 #line 10883 "preproc.y"
     { 
  (yyval.str) = make_str("role");
-}
+;}
     break;
 
   case 1889:
-
-/* Line 1806 of yacc.c  */
 #line 10887 "preproc.y"
     { 
  (yyval.str) = make_str("rollback");
-}
+;}
     break;
 
   case 1890:
-
-/* Line 1806 of yacc.c  */
 #line 10891 "preproc.y"
     { 
  (yyval.str) = make_str("rows");
-}
+;}
     break;
 
   case 1891:
-
-/* Line 1806 of yacc.c  */
 #line 10895 "preproc.y"
     { 
  (yyval.str) = make_str("rule");
-}
+;}
     break;
 
   case 1892:
-
-/* Line 1806 of yacc.c  */
 #line 10899 "preproc.y"
     { 
  (yyval.str) = make_str("savepoint");
-}
+;}
     break;
 
   case 1893:
-
-/* Line 1806 of yacc.c  */
 #line 10903 "preproc.y"
     { 
  (yyval.str) = make_str("schema");
-}
+;}
     break;
 
   case 1894:
-
-/* Line 1806 of yacc.c  */
 #line 10907 "preproc.y"
     { 
  (yyval.str) = make_str("scroll");
-}
+;}
     break;
 
   case 1895:
-
-/* Line 1806 of yacc.c  */
 #line 10911 "preproc.y"
     { 
  (yyval.str) = make_str("search");
-}
+;}
     break;
 
   case 1896:
-
-/* Line 1806 of yacc.c  */
 #line 10915 "preproc.y"
     { 
  (yyval.str) = make_str("security");
-}
+;}
     break;
 
   case 1897:
-
-/* Line 1806 of yacc.c  */
 #line 10919 "preproc.y"
     { 
  (yyval.str) = make_str("sequence");
-}
+;}
     break;
 
   case 1898:
-
-/* Line 1806 of yacc.c  */
 #line 10923 "preproc.y"
     { 
  (yyval.str) = make_str("sequences");
-}
+;}
     break;
 
   case 1899:
-
-/* Line 1806 of yacc.c  */
 #line 10927 "preproc.y"
     { 
  (yyval.str) = make_str("serializable");
-}
+;}
     break;
 
   case 1900:
-
-/* Line 1806 of yacc.c  */
 #line 10931 "preproc.y"
     { 
  (yyval.str) = make_str("server");
-}
+;}
     break;
 
   case 1901:
-
-/* Line 1806 of yacc.c  */
 #line 10935 "preproc.y"
     { 
  (yyval.str) = make_str("session");
-}
+;}
     break;
 
   case 1902:
-
-/* Line 1806 of yacc.c  */
 #line 10939 "preproc.y"
     { 
  (yyval.str) = make_str("set");
-}
+;}
     break;
 
   case 1903:
-
-/* Line 1806 of yacc.c  */
 #line 10943 "preproc.y"
     { 
  (yyval.str) = make_str("share");
-}
+;}
     break;
 
   case 1904:
-
-/* Line 1806 of yacc.c  */
 #line 10947 "preproc.y"
     { 
  (yyval.str) = make_str("show");
-}
+;}
     break;
 
   case 1905:
-
-/* Line 1806 of yacc.c  */
 #line 10951 "preproc.y"
     { 
  (yyval.str) = make_str("simple");
-}
+;}
     break;
 
   case 1906:
-
-/* Line 1806 of yacc.c  */
 #line 10955 "preproc.y"
     { 
  (yyval.str) = make_str("stable");
-}
+;}
     break;
 
   case 1907:
-
-/* Line 1806 of yacc.c  */
 #line 10959 "preproc.y"
     { 
  (yyval.str) = make_str("standalone");
-}
+;}
     break;
 
   case 1908:
-
-/* Line 1806 of yacc.c  */
 #line 10963 "preproc.y"
     { 
  (yyval.str) = make_str("start");
-}
+;}
     break;
 
   case 1909:
-
-/* Line 1806 of yacc.c  */
 #line 10967 "preproc.y"
     { 
  (yyval.str) = make_str("statement");
-}
+;}
     break;
 
   case 1910:
-
-/* Line 1806 of yacc.c  */
 #line 10971 "preproc.y"
     { 
  (yyval.str) = make_str("statistics");
-}
+;}
     break;
 
   case 1911:
-
-/* Line 1806 of yacc.c  */
 #line 10975 "preproc.y"
     { 
  (yyval.str) = make_str("stdin");
-}
+;}
     break;
 
   case 1912:
-
-/* Line 1806 of yacc.c  */
 #line 10979 "preproc.y"
     { 
  (yyval.str) = make_str("stdout");
-}
+;}
     break;
 
   case 1913:
-
-/* Line 1806 of yacc.c  */
 #line 10983 "preproc.y"
     { 
  (yyval.str) = make_str("storage");
-}
+;}
     break;
 
   case 1914:
-
-/* Line 1806 of yacc.c  */
 #line 10987 "preproc.y"
     { 
  (yyval.str) = make_str("strict");
-}
+;}
     break;
 
   case 1915:
-
-/* Line 1806 of yacc.c  */
 #line 10991 "preproc.y"
     { 
  (yyval.str) = make_str("strip");
-}
+;}
     break;
 
   case 1916:
-
-/* Line 1806 of yacc.c  */
 #line 10995 "preproc.y"
     { 
  (yyval.str) = make_str("superuser");
-}
+;}
     break;
 
   case 1917:
-
-/* Line 1806 of yacc.c  */
 #line 10999 "preproc.y"
     { 
  (yyval.str) = make_str("sysid");
-}
+;}
     break;
 
   case 1918:
-
-/* Line 1806 of yacc.c  */
 #line 11003 "preproc.y"
     { 
  (yyval.str) = make_str("system");
-}
+;}
     break;
 
   case 1919:
-
-/* Line 1806 of yacc.c  */
 #line 11007 "preproc.y"
     { 
  (yyval.str) = make_str("tables");
-}
+;}
     break;
 
   case 1920:
-
-/* Line 1806 of yacc.c  */
 #line 11011 "preproc.y"
     { 
  (yyval.str) = make_str("tablespace");
-}
+;}
     break;
 
   case 1921:
-
-/* Line 1806 of yacc.c  */
 #line 11015 "preproc.y"
     { 
  (yyval.str) = make_str("temp");
-}
+;}
     break;
 
   case 1922:
-
-/* Line 1806 of yacc.c  */
 #line 11019 "preproc.y"
     { 
  (yyval.str) = make_str("template");
-}
+;}
     break;
 
   case 1923:
-
-/* Line 1806 of yacc.c  */
 #line 11023 "preproc.y"
     { 
  (yyval.str) = make_str("temporary");
-}
+;}
     break;
 
   case 1924:
-
-/* Line 1806 of yacc.c  */
 #line 11027 "preproc.y"
     { 
  (yyval.str) = make_str("text");
-}
+;}
     break;
 
   case 1925:
-
-/* Line 1806 of yacc.c  */
 #line 11031 "preproc.y"
     { 
  (yyval.str) = make_str("transaction");
-}
+;}
     break;
 
   case 1926:
-
-/* Line 1806 of yacc.c  */
 #line 11035 "preproc.y"
     { 
  (yyval.str) = make_str("trigger");
-}
+;}
     break;
 
   case 1927:
-
-/* Line 1806 of yacc.c  */
 #line 11039 "preproc.y"
     { 
  (yyval.str) = make_str("truncate");
-}
+;}
     break;
 
   case 1928:
-
-/* Line 1806 of yacc.c  */
 #line 11043 "preproc.y"
     { 
  (yyval.str) = make_str("trusted");
-}
+;}
     break;
 
   case 1929:
-
-/* Line 1806 of yacc.c  */
 #line 11047 "preproc.y"
     { 
  (yyval.str) = make_str("type");
-}
+;}
     break;
 
   case 1930:
-
-/* Line 1806 of yacc.c  */
 #line 11051 "preproc.y"
     { 
  (yyval.str) = make_str("unbounded");
-}
+;}
     break;
 
   case 1931:
-
-/* Line 1806 of yacc.c  */
 #line 11055 "preproc.y"
     { 
  (yyval.str) = make_str("uncommitted");
-}
+;}
     break;
 
   case 1932:
-
-/* Line 1806 of yacc.c  */
 #line 11059 "preproc.y"
     { 
  (yyval.str) = make_str("unencrypted");
-}
+;}
     break;
 
   case 1933:
-
-/* Line 1806 of yacc.c  */
 #line 11063 "preproc.y"
     { 
  (yyval.str) = make_str("unknown");
-}
+;}
     break;
 
   case 1934:
-
-/* Line 1806 of yacc.c  */
 #line 11067 "preproc.y"
     { 
  (yyval.str) = make_str("unlisten");
-}
+;}
     break;
 
   case 1935:
-
-/* Line 1806 of yacc.c  */
 #line 11071 "preproc.y"
     { 
  (yyval.str) = make_str("until");
-}
+;}
     break;
 
   case 1936:
-
-/* Line 1806 of yacc.c  */
 #line 11075 "preproc.y"
     { 
  (yyval.str) = make_str("update");
-}
+;}
     break;
 
   case 1937:
-
-/* Line 1806 of yacc.c  */
 #line 11079 "preproc.y"
     { 
  (yyval.str) = make_str("vacuum");
-}
+;}
     break;
 
   case 1938:
-
-/* Line 1806 of yacc.c  */
 #line 11083 "preproc.y"
     { 
  (yyval.str) = make_str("valid");
-}
+;}
     break;
 
   case 1939:
-
-/* Line 1806 of yacc.c  */
 #line 11087 "preproc.y"
     { 
  (yyval.str) = make_str("validator");
-}
+;}
     break;
 
   case 1940:
-
-/* Line 1806 of yacc.c  */
 #line 11091 "preproc.y"
     { 
  (yyval.str) = make_str("value");
-}
+;}
     break;
 
   case 1941:
-
-/* Line 1806 of yacc.c  */
 #line 11095 "preproc.y"
     { 
  (yyval.str) = make_str("varying");
-}
+;}
     break;
 
   case 1942:
-
-/* Line 1806 of yacc.c  */
 #line 11099 "preproc.y"
     { 
  (yyval.str) = make_str("version");
-}
+;}
     break;
 
   case 1943:
-
-/* Line 1806 of yacc.c  */
 #line 11103 "preproc.y"
     { 
  (yyval.str) = make_str("view");
-}
+;}
     break;
 
   case 1944:
-
-/* Line 1806 of yacc.c  */
 #line 11107 "preproc.y"
     { 
  (yyval.str) = make_str("volatile");
-}
+;}
     break;
 
   case 1945:
-
-/* Line 1806 of yacc.c  */
 #line 11111 "preproc.y"
     { 
  (yyval.str) = make_str("whitespace");
-}
+;}
     break;
 
   case 1946:
-
-/* Line 1806 of yacc.c  */
 #line 11115 "preproc.y"
     { 
  (yyval.str) = make_str("without");
-}
+;}
     break;
 
   case 1947:
-
-/* Line 1806 of yacc.c  */
 #line 11119 "preproc.y"
     { 
  (yyval.str) = make_str("work");
-}
+;}
     break;
 
   case 1948:
-
-/* Line 1806 of yacc.c  */
 #line 11123 "preproc.y"
     { 
  (yyval.str) = make_str("wrapper");
-}
+;}
     break;
 
   case 1949:
-
-/* Line 1806 of yacc.c  */
 #line 11127 "preproc.y"
     { 
  (yyval.str) = make_str("write");
-}
+;}
     break;
 
   case 1950:
-
-/* Line 1806 of yacc.c  */
 #line 11131 "preproc.y"
     { 
  (yyval.str) = make_str("xml");
-}
+;}
     break;
 
   case 1951:
-
-/* Line 1806 of yacc.c  */
 #line 11135 "preproc.y"
     { 
  (yyval.str) = make_str("yes");
-}
+;}
     break;
 
   case 1952:
-
-/* Line 1806 of yacc.c  */
 #line 11139 "preproc.y"
     { 
  (yyval.str) = make_str("zone");
-}
+;}
     break;
 
   case 1953:
-
-/* Line 1806 of yacc.c  */
 #line 11147 "preproc.y"
     { 
  (yyval.str) = make_str("between");
-}
+;}
     break;
 
   case 1954:
-
-/* Line 1806 of yacc.c  */
 #line 11151 "preproc.y"
     { 
  (yyval.str) = make_str("bigint");
-}
+;}
     break;
 
   case 1955:
-
-/* Line 1806 of yacc.c  */
 #line 11155 "preproc.y"
     { 
  (yyval.str) = make_str("bit");
-}
+;}
     break;
 
   case 1956:
-
-/* Line 1806 of yacc.c  */
 #line 11159 "preproc.y"
     { 
  (yyval.str) = make_str("boolean");
-}
+;}
     break;
 
   case 1957:
-
-/* Line 1806 of yacc.c  */
 #line 11163 "preproc.y"
     { 
  (yyval.str) = make_str("character");
-}
+;}
     break;
 
   case 1958:
-
-/* Line 1806 of yacc.c  */
 #line 11167 "preproc.y"
     { 
  (yyval.str) = make_str("coalesce");
-}
+;}
     break;
 
   case 1959:
-
-/* Line 1806 of yacc.c  */
 #line 11171 "preproc.y"
     { 
  (yyval.str) = make_str("dec");
-}
+;}
     break;
 
   case 1960:
-
-/* Line 1806 of yacc.c  */
 #line 11175 "preproc.y"
     { 
  (yyval.str) = make_str("decimal");
-}
+;}
     break;
 
   case 1961:
-
-/* Line 1806 of yacc.c  */
 #line 11179 "preproc.y"
     { 
  (yyval.str) = make_str("exists");
-}
+;}
     break;
 
   case 1962:
-
-/* Line 1806 of yacc.c  */
 #line 11183 "preproc.y"
     { 
  (yyval.str) = make_str("extract");
-}
+;}
     break;
 
   case 1963:
-
-/* Line 1806 of yacc.c  */
 #line 11187 "preproc.y"
     { 
  (yyval.str) = make_str("float");
-}
+;}
     break;
 
   case 1964:
-
-/* Line 1806 of yacc.c  */
 #line 11191 "preproc.y"
     { 
  (yyval.str) = make_str("greatest");
-}
+;}
     break;
 
   case 1965:
-
-/* Line 1806 of yacc.c  */
 #line 11195 "preproc.y"
     { 
  (yyval.str) = make_str("inout");
-}
+;}
     break;
 
   case 1966:
-
-/* Line 1806 of yacc.c  */
 #line 11199 "preproc.y"
     { 
  (yyval.str) = make_str("integer");
-}
+;}
     break;
 
   case 1967:
-
-/* Line 1806 of yacc.c  */
 #line 11203 "preproc.y"
     { 
  (yyval.str) = make_str("interval");
-}
+;}
     break;
 
   case 1968:
-
-/* Line 1806 of yacc.c  */
 #line 11207 "preproc.y"
     { 
  (yyval.str) = make_str("least");
-}
+;}
     break;
 
   case 1969:
-
-/* Line 1806 of yacc.c  */
 #line 11211 "preproc.y"
     { 
  (yyval.str) = make_str("national");
-}
+;}
     break;
 
   case 1970:
-
-/* Line 1806 of yacc.c  */
 #line 11215 "preproc.y"
     { 
  (yyval.str) = make_str("nchar");
-}
+;}
     break;
 
   case 1971:
-
-/* Line 1806 of yacc.c  */
 #line 11219 "preproc.y"
     { 
  (yyval.str) = make_str("none");
-}
+;}
     break;
 
   case 1972:
-
-/* Line 1806 of yacc.c  */
 #line 11223 "preproc.y"
     { 
  (yyval.str) = make_str("nullif");
-}
+;}
     break;
 
   case 1973:
-
-/* Line 1806 of yacc.c  */
 #line 11227 "preproc.y"
     { 
  (yyval.str) = make_str("numeric");
-}
+;}
     break;
 
   case 1974:
-
-/* Line 1806 of yacc.c  */
 #line 11231 "preproc.y"
     { 
  (yyval.str) = make_str("out");
-}
+;}
     break;
 
   case 1975:
-
-/* Line 1806 of yacc.c  */
 #line 11235 "preproc.y"
     { 
  (yyval.str) = make_str("overlay");
-}
+;}
     break;
 
   case 1976:
-
-/* Line 1806 of yacc.c  */
 #line 11239 "preproc.y"
     { 
  (yyval.str) = make_str("position");
-}
+;}
     break;
 
   case 1977:
-
-/* Line 1806 of yacc.c  */
 #line 11243 "preproc.y"
     { 
  (yyval.str) = make_str("precision");
-}
+;}
     break;
 
   case 1978:
-
-/* Line 1806 of yacc.c  */
 #line 11247 "preproc.y"
     { 
  (yyval.str) = make_str("real");
-}
+;}
     break;
 
   case 1979:
-
-/* Line 1806 of yacc.c  */
 #line 11251 "preproc.y"
     { 
  (yyval.str) = make_str("row");
-}
+;}
     break;
 
   case 1980:
-
-/* Line 1806 of yacc.c  */
 #line 11255 "preproc.y"
     { 
  (yyval.str) = make_str("setof");
-}
+;}
     break;
 
   case 1981:
-
-/* Line 1806 of yacc.c  */
 #line 11259 "preproc.y"
     { 
  (yyval.str) = make_str("smallint");
-}
+;}
     break;
 
   case 1982:
-
-/* Line 1806 of yacc.c  */
 #line 11263 "preproc.y"
     { 
  (yyval.str) = make_str("substring");
-}
+;}
     break;
 
   case 1983:
-
-/* Line 1806 of yacc.c  */
 #line 11267 "preproc.y"
     { 
  (yyval.str) = make_str("time");
-}
+;}
     break;
 
   case 1984:
-
-/* Line 1806 of yacc.c  */
 #line 11271 "preproc.y"
     { 
  (yyval.str) = make_str("timestamp");
-}
+;}
     break;
 
   case 1985:
-
-/* Line 1806 of yacc.c  */
 #line 11275 "preproc.y"
     { 
  (yyval.str) = make_str("treat");
-}
+;}
     break;
 
   case 1986:
-
-/* Line 1806 of yacc.c  */
 #line 11279 "preproc.y"
     { 
  (yyval.str) = make_str("trim");
-}
+;}
     break;
 
   case 1987:
-
-/* Line 1806 of yacc.c  */
 #line 11283 "preproc.y"
     { 
  (yyval.str) = make_str("varchar");
-}
+;}
     break;
 
   case 1988:
-
-/* Line 1806 of yacc.c  */
 #line 11287 "preproc.y"
     { 
  (yyval.str) = make_str("xmlattributes");
-}
+;}
     break;
 
   case 1989:
-
-/* Line 1806 of yacc.c  */
 #line 11291 "preproc.y"
     { 
  (yyval.str) = make_str("xmlconcat");
-}
+;}
     break;
 
   case 1990:
-
-/* Line 1806 of yacc.c  */
 #line 11295 "preproc.y"
     { 
  (yyval.str) = make_str("xmlelement");
-}
+;}
     break;
 
   case 1991:
-
-/* Line 1806 of yacc.c  */
 #line 11299 "preproc.y"
     { 
  (yyval.str) = make_str("xmlforest");
-}
+;}
     break;
 
   case 1992:
-
-/* Line 1806 of yacc.c  */
 #line 11303 "preproc.y"
     { 
  (yyval.str) = make_str("xmlparse");
-}
+;}
     break;
 
   case 1993:
-
-/* Line 1806 of yacc.c  */
 #line 11307 "preproc.y"
     { 
  (yyval.str) = make_str("xmlpi");
-}
+;}
     break;
 
   case 1994:
-
-/* Line 1806 of yacc.c  */
 #line 11311 "preproc.y"
     { 
  (yyval.str) = make_str("xmlroot");
-}
+;}
     break;
 
   case 1995:
-
-/* Line 1806 of yacc.c  */
 #line 11315 "preproc.y"
     { 
  (yyval.str) = make_str("xmlserialize");
-}
+;}
     break;
 
   case 1996:
-
-/* Line 1806 of yacc.c  */
 #line 11323 "preproc.y"
     { 
  (yyval.str) = make_str("authorization");
-}
+;}
     break;
 
   case 1997:
-
-/* Line 1806 of yacc.c  */
 #line 11327 "preproc.y"
     { 
  (yyval.str) = make_str("binary");
-}
+;}
     break;
 
   case 1998:
-
-/* Line 1806 of yacc.c  */
 #line 11331 "preproc.y"
     { 
  (yyval.str) = make_str("concurrently");
-}
+;}
     break;
 
   case 1999:
-
-/* Line 1806 of yacc.c  */
 #line 11335 "preproc.y"
     { 
  (yyval.str) = make_str("cross");
-}
+;}
     break;
 
   case 2000:
-
-/* Line 1806 of yacc.c  */
 #line 11339 "preproc.y"
     { 
  (yyval.str) = make_str("current_schema");
-}
+;}
     break;
 
   case 2001:
-
-/* Line 1806 of yacc.c  */
 #line 11343 "preproc.y"
     { 
  (yyval.str) = make_str("freeze");
-}
+;}
     break;
 
   case 2002:
-
-/* Line 1806 of yacc.c  */
 #line 11347 "preproc.y"
     { 
  (yyval.str) = make_str("full");
-}
+;}
     break;
 
   case 2003:
-
-/* Line 1806 of yacc.c  */
 #line 11351 "preproc.y"
     { 
  (yyval.str) = make_str("ilike");
-}
+;}
     break;
 
   case 2004:
-
-/* Line 1806 of yacc.c  */
 #line 11355 "preproc.y"
     { 
  (yyval.str) = make_str("inner");
-}
+;}
     break;
 
   case 2005:
-
-/* Line 1806 of yacc.c  */
 #line 11359 "preproc.y"
     { 
  (yyval.str) = make_str("is");
-}
+;}
     break;
 
   case 2006:
-
-/* Line 1806 of yacc.c  */
 #line 11363 "preproc.y"
     { 
  (yyval.str) = make_str("isnull");
-}
+;}
     break;
 
   case 2007:
-
-/* Line 1806 of yacc.c  */
 #line 11367 "preproc.y"
     { 
  (yyval.str) = make_str("join");
-}
+;}
     break;
 
   case 2008:
-
-/* Line 1806 of yacc.c  */
 #line 11371 "preproc.y"
     { 
  (yyval.str) = make_str("left");
-}
+;}
     break;
 
   case 2009:
-
-/* Line 1806 of yacc.c  */
 #line 11375 "preproc.y"
     { 
  (yyval.str) = make_str("like");
-}
+;}
     break;
 
   case 2010:
-
-/* Line 1806 of yacc.c  */
 #line 11379 "preproc.y"
     { 
  (yyval.str) = make_str("natural");
-}
+;}
     break;
 
   case 2011:
-
-/* Line 1806 of yacc.c  */
 #line 11383 "preproc.y"
     { 
  (yyval.str) = make_str("notnull");
-}
+;}
     break;
 
   case 2012:
-
-/* Line 1806 of yacc.c  */
 #line 11387 "preproc.y"
     { 
  (yyval.str) = make_str("outer");
-}
+;}
     break;
 
   case 2013:
-
-/* Line 1806 of yacc.c  */
 #line 11391 "preproc.y"
     { 
  (yyval.str) = make_str("over");
-}
+;}
     break;
 
   case 2014:
-
-/* Line 1806 of yacc.c  */
 #line 11395 "preproc.y"
     { 
  (yyval.str) = make_str("overlaps");
-}
+;}
     break;
 
   case 2015:
-
-/* Line 1806 of yacc.c  */
 #line 11399 "preproc.y"
     { 
  (yyval.str) = make_str("right");
-}
+;}
     break;
 
   case 2016:
-
-/* Line 1806 of yacc.c  */
 #line 11403 "preproc.y"
     { 
  (yyval.str) = make_str("similar");
-}
+;}
     break;
 
   case 2017:
-
-/* Line 1806 of yacc.c  */
 #line 11407 "preproc.y"
     { 
  (yyval.str) = make_str("verbose");
-}
+;}
     break;
 
   case 2018:
-
-/* Line 1806 of yacc.c  */
 #line 11415 "preproc.y"
     { 
  (yyval.str) = make_str("all");
-}
+;}
     break;
 
   case 2019:
-
-/* Line 1806 of yacc.c  */
 #line 11419 "preproc.y"
     { 
  (yyval.str) = make_str("analyse");
-}
+;}
     break;
 
   case 2020:
-
-/* Line 1806 of yacc.c  */
 #line 11423 "preproc.y"
     { 
  (yyval.str) = make_str("analyze");
-}
+;}
     break;
 
   case 2021:
-
-/* Line 1806 of yacc.c  */
 #line 11427 "preproc.y"
     { 
  (yyval.str) = make_str("and");
-}
+;}
     break;
 
   case 2022:
-
-/* Line 1806 of yacc.c  */
 #line 11431 "preproc.y"
     { 
  (yyval.str) = make_str("any");
-}
+;}
     break;
 
   case 2023:
-
-/* Line 1806 of yacc.c  */
 #line 11435 "preproc.y"
     { 
  (yyval.str) = make_str("array");
-}
+;}
     break;
 
   case 2024:
-
-/* Line 1806 of yacc.c  */
 #line 11439 "preproc.y"
     { 
  (yyval.str) = make_str("as");
-}
+;}
     break;
 
   case 2025:
-
-/* Line 1806 of yacc.c  */
 #line 11443 "preproc.y"
     { 
  (yyval.str) = make_str("asc");
-}
+;}
     break;
 
   case 2026:
-
-/* Line 1806 of yacc.c  */
 #line 11447 "preproc.y"
     { 
  (yyval.str) = make_str("asymmetric");
-}
+;}
     break;
 
   case 2027:
-
-/* Line 1806 of yacc.c  */
 #line 11451 "preproc.y"
     { 
  (yyval.str) = make_str("both");
-}
+;}
     break;
 
   case 2028:
-
-/* Line 1806 of yacc.c  */
 #line 11455 "preproc.y"
     { 
  (yyval.str) = make_str("case");
-}
+;}
     break;
 
   case 2029:
-
-/* Line 1806 of yacc.c  */
 #line 11459 "preproc.y"
     { 
  (yyval.str) = make_str("cast");
-}
+;}
     break;
 
   case 2030:
-
-/* Line 1806 of yacc.c  */
 #line 11463 "preproc.y"
     { 
  (yyval.str) = make_str("check");
-}
+;}
     break;
 
   case 2031:
-
-/* Line 1806 of yacc.c  */
 #line 11467 "preproc.y"
     { 
  (yyval.str) = make_str("collate");
-}
+;}
     break;
 
   case 2032:
-
-/* Line 1806 of yacc.c  */
 #line 11471 "preproc.y"
     { 
  (yyval.str) = make_str("column");
-}
+;}
     break;
 
   case 2033:
-
-/* Line 1806 of yacc.c  */
 #line 11475 "preproc.y"
     { 
  (yyval.str) = make_str("constraint");
-}
+;}
     break;
 
   case 2034:
-
-/* Line 1806 of yacc.c  */
 #line 11479 "preproc.y"
     { 
  (yyval.str) = make_str("create");
-}
+;}
     break;
 
   case 2035:
-
-/* Line 1806 of yacc.c  */
 #line 11483 "preproc.y"
     { 
  (yyval.str) = make_str("current_catalog");
-}
+;}
     break;
 
   case 2036:
-
-/* Line 1806 of yacc.c  */
 #line 11487 "preproc.y"
     { 
  (yyval.str) = make_str("current_date");
-}
+;}
     break;
 
   case 2037:
-
-/* Line 1806 of yacc.c  */
 #line 11491 "preproc.y"
     { 
  (yyval.str) = make_str("current_role");
-}
+;}
     break;
 
   case 2038:
-
-/* Line 1806 of yacc.c  */
 #line 11495 "preproc.y"
     { 
  (yyval.str) = make_str("current_time");
-}
+;}
     break;
 
   case 2039:
-
-/* Line 1806 of yacc.c  */
 #line 11499 "preproc.y"
     { 
  (yyval.str) = make_str("current_timestamp");
-}
+;}
     break;
 
   case 2040:
-
-/* Line 1806 of yacc.c  */
 #line 11503 "preproc.y"
     { 
  (yyval.str) = make_str("current_user");
-}
+;}
     break;
 
   case 2041:
-
-/* Line 1806 of yacc.c  */
 #line 11507 "preproc.y"
     { 
  (yyval.str) = make_str("default");
-}
+;}
     break;
 
   case 2042:
-
-/* Line 1806 of yacc.c  */
 #line 11511 "preproc.y"
     { 
  (yyval.str) = make_str("deferrable");
-}
+;}
     break;
 
   case 2043:
-
-/* Line 1806 of yacc.c  */
 #line 11515 "preproc.y"
     { 
  (yyval.str) = make_str("desc");
-}
+;}
     break;
 
   case 2044:
-
-/* Line 1806 of yacc.c  */
 #line 11519 "preproc.y"
     { 
  (yyval.str) = make_str("distinct");
-}
+;}
     break;
 
   case 2045:
-
-/* Line 1806 of yacc.c  */
 #line 11523 "preproc.y"
     { 
  (yyval.str) = make_str("do");
-}
+;}
     break;
 
   case 2046:
-
-/* Line 1806 of yacc.c  */
 #line 11527 "preproc.y"
     { 
  (yyval.str) = make_str("else");
-}
+;}
     break;
 
   case 2047:
-
-/* Line 1806 of yacc.c  */
 #line 11531 "preproc.y"
     { 
  (yyval.str) = make_str("end");
-}
+;}
     break;
 
   case 2048:
-
-/* Line 1806 of yacc.c  */
 #line 11535 "preproc.y"
     { 
  (yyval.str) = make_str("except");
-}
+;}
     break;
 
   case 2049:
-
-/* Line 1806 of yacc.c  */
 #line 11539 "preproc.y"
     { 
  (yyval.str) = make_str("false");
-}
+;}
     break;
 
   case 2050:
-
-/* Line 1806 of yacc.c  */
 #line 11543 "preproc.y"
     { 
  (yyval.str) = make_str("fetch");
-}
+;}
     break;
 
   case 2051:
-
-/* Line 1806 of yacc.c  */
 #line 11547 "preproc.y"
     { 
  (yyval.str) = make_str("for");
-}
+;}
     break;
 
   case 2052:
-
-/* Line 1806 of yacc.c  */
 #line 11551 "preproc.y"
     { 
  (yyval.str) = make_str("foreign");
-}
+;}
     break;
 
   case 2053:
-
-/* Line 1806 of yacc.c  */
 #line 11555 "preproc.y"
     { 
  (yyval.str) = make_str("from");
-}
+;}
     break;
 
   case 2054:
-
-/* Line 1806 of yacc.c  */
 #line 11559 "preproc.y"
     { 
  (yyval.str) = make_str("grant");
-}
+;}
     break;
 
   case 2055:
-
-/* Line 1806 of yacc.c  */
 #line 11563 "preproc.y"
     { 
  (yyval.str) = make_str("group");
-}
+;}
     break;
 
   case 2056:
-
-/* Line 1806 of yacc.c  */
 #line 11567 "preproc.y"
     { 
  (yyval.str) = make_str("having");
-}
+;}
     break;
 
   case 2057:
-
-/* Line 1806 of yacc.c  */
 #line 11571 "preproc.y"
     { 
  (yyval.str) = make_str("in");
-}
+;}
     break;
 
   case 2058:
-
-/* Line 1806 of yacc.c  */
 #line 11575 "preproc.y"
     { 
  (yyval.str) = make_str("initially");
-}
+;}
     break;
 
   case 2059:
-
-/* Line 1806 of yacc.c  */
 #line 11579 "preproc.y"
     { 
  (yyval.str) = make_str("intersect");
-}
+;}
     break;
 
   case 2060:
-
-/* Line 1806 of yacc.c  */
 #line 11583 "preproc.y"
     { 
  (yyval.str) = make_str("into");
-}
+;}
     break;
 
   case 2061:
-
-/* Line 1806 of yacc.c  */
 #line 11587 "preproc.y"
     { 
  (yyval.str) = make_str("leading");
-}
+;}
     break;
 
   case 2062:
-
-/* Line 1806 of yacc.c  */
 #line 11591 "preproc.y"
     { 
  (yyval.str) = make_str("limit");
-}
+;}
     break;
 
   case 2063:
-
-/* Line 1806 of yacc.c  */
 #line 11595 "preproc.y"
     { 
  (yyval.str) = make_str("localtime");
-}
+;}
     break;
 
   case 2064:
-
-/* Line 1806 of yacc.c  */
 #line 11599 "preproc.y"
     { 
  (yyval.str) = make_str("localtimestamp");
-}
+;}
     break;
 
   case 2065:
-
-/* Line 1806 of yacc.c  */
 #line 11603 "preproc.y"
     { 
  (yyval.str) = make_str("not");
-}
+;}
     break;
 
   case 2066:
-
-/* Line 1806 of yacc.c  */
 #line 11607 "preproc.y"
     { 
  (yyval.str) = make_str("null");
-}
+;}
     break;
 
   case 2067:
-
-/* Line 1806 of yacc.c  */
 #line 11611 "preproc.y"
     { 
  (yyval.str) = make_str("offset");
-}
+;}
     break;
 
   case 2068:
-
-/* Line 1806 of yacc.c  */
 #line 11615 "preproc.y"
     { 
  (yyval.str) = make_str("on");
-}
+;}
     break;
 
   case 2069:
-
-/* Line 1806 of yacc.c  */
 #line 11619 "preproc.y"
     { 
  (yyval.str) = make_str("only");
-}
+;}
     break;
 
   case 2070:
-
-/* Line 1806 of yacc.c  */
 #line 11623 "preproc.y"
     { 
  (yyval.str) = make_str("or");
-}
+;}
     break;
 
   case 2071:
-
-/* Line 1806 of yacc.c  */
 #line 11627 "preproc.y"
     { 
  (yyval.str) = make_str("order");
-}
+;}
     break;
 
   case 2072:
-
-/* Line 1806 of yacc.c  */
 #line 11631 "preproc.y"
     { 
  (yyval.str) = make_str("placing");
-}
+;}
     break;
 
   case 2073:
-
-/* Line 1806 of yacc.c  */
 #line 11635 "preproc.y"
     { 
  (yyval.str) = make_str("primary");
-}
+;}
     break;
 
   case 2074:
-
-/* Line 1806 of yacc.c  */
 #line 11639 "preproc.y"
     { 
  (yyval.str) = make_str("references");
-}
+;}
     break;
 
   case 2075:
-
-/* Line 1806 of yacc.c  */
 #line 11643 "preproc.y"
     { 
  (yyval.str) = make_str("returning");
-}
+;}
     break;
 
   case 2076:
-
-/* Line 1806 of yacc.c  */
 #line 11647 "preproc.y"
     { 
  (yyval.str) = make_str("select");
-}
+;}
     break;
 
   case 2077:
-
-/* Line 1806 of yacc.c  */
 #line 11651 "preproc.y"
     { 
  (yyval.str) = make_str("session_user");
-}
+;}
     break;
 
   case 2078:
-
-/* Line 1806 of yacc.c  */
 #line 11655 "preproc.y"
     { 
  (yyval.str) = make_str("some");
-}
+;}
     break;
 
   case 2079:
-
-/* Line 1806 of yacc.c  */
 #line 11659 "preproc.y"
     { 
  (yyval.str) = make_str("symmetric");
-}
+;}
     break;
 
   case 2080:
-
-/* Line 1806 of yacc.c  */
 #line 11663 "preproc.y"
     { 
  (yyval.str) = make_str("table");
-}
+;}
     break;
 
   case 2081:
-
-/* Line 1806 of yacc.c  */
 #line 11667 "preproc.y"
     { 
  (yyval.str) = make_str("then");
-}
+;}
     break;
 
   case 2082:
-
-/* Line 1806 of yacc.c  */
 #line 11671 "preproc.y"
     { 
  (yyval.str) = make_str("trailing");
-}
+;}
     break;
 
   case 2083:
-
-/* Line 1806 of yacc.c  */
 #line 11675 "preproc.y"
     { 
  (yyval.str) = make_str("true");
-}
+;}
     break;
 
   case 2084:
-
-/* Line 1806 of yacc.c  */
 #line 11679 "preproc.y"
     { 
  (yyval.str) = make_str("unique");
-}
+;}
     break;
 
   case 2085:
-
-/* Line 1806 of yacc.c  */
 #line 11683 "preproc.y"
     { 
  (yyval.str) = make_str("user");
-}
+;}
     break;
 
   case 2086:
-
-/* Line 1806 of yacc.c  */
 #line 11687 "preproc.y"
     { 
  (yyval.str) = make_str("using");
-}
+;}
     break;
 
   case 2087:
-
-/* Line 1806 of yacc.c  */
 #line 11691 "preproc.y"
     { 
  (yyval.str) = make_str("variadic");
-}
+;}
     break;
 
   case 2088:
-
-/* Line 1806 of yacc.c  */
 #line 11695 "preproc.y"
     { 
  (yyval.str) = make_str("when");
-}
+;}
     break;
 
   case 2089:
-
-/* Line 1806 of yacc.c  */
 #line 11699 "preproc.y"
     { 
  (yyval.str) = make_str("where");
-}
+;}
     break;
 
   case 2090:
-
-/* Line 1806 of yacc.c  */
 #line 11703 "preproc.y"
     { 
  (yyval.str) = make_str("window");
-}
+;}
     break;
 
   case 2091:
-
-/* Line 1806 of yacc.c  */
 #line 11707 "preproc.y"
     { 
  (yyval.str) = make_str("with");
-}
+;}
     break;
 
   case 2094:
-
-/* Line 1806 of yacc.c  */
 #line 11720 "preproc.y"
-    { connection = NULL; }
+    { connection = NULL; ;}
     break;
 
   case 2096:
-
-/* Line 1806 of yacc.c  */
 #line 11723 "preproc.y"
     {
                         fprintf(yyout, "%s", (yyvsp[(2) - (2)].str));
                         free((yyvsp[(2) - (2)].str));
                         output_line_number();
-                }
+                ;}
     break;
 
   case 2098:
-
-/* Line 1806 of yacc.c  */
 #line 11729 "preproc.y"
-    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); }
+    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 2099:
-
-/* Line 1806 of yacc.c  */
 #line 11730 "preproc.y"
-    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); }
+    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 2100:
-
-/* Line 1806 of yacc.c  */
 #line 11731 "preproc.y"
-    { braces_open++; fputs("{", yyout); }
+    { braces_open++; fputs("{", yyout); ;}
     break;
 
   case 2101:
-
-/* Line 1806 of yacc.c  */
 #line 11733 "preproc.y"
     {
 			remove_typedefs(braces_open);
@@ -44358,31 +40593,25 @@
 				current_function = NULL;
 			}
 			fputs("}", yyout);
-		}
+		;}
     break;
 
   case 2102:
-
-/* Line 1806 of yacc.c  */
 #line 11745 "preproc.y"
-    {FoundInto = 0;}
+    {FoundInto = 0;;}
     break;
 
   case 2103:
-
-/* Line 1806 of yacc.c  */
 #line 11746 "preproc.y"
     {
 			if (FoundInto == 1)
 				mmerror(PARSE_ERROR, ET_ERROR, "CREATE TABLE AS cannot specify INTO");
 
 			(yyval.str) = cat_str(6, make_str("create"), (yyvsp[(2) - (8)].str), make_str("table"), (yyvsp[(4) - (8)].str), make_str("as"), (yyvsp[(7) - (8)].str));
-		}
+		;}
     break;
 
   case 2104:
-
-/* Line 1806 of yacc.c  */
 #line 11755 "preproc.y"
     {
                         connection = (yyvsp[(2) - (2)].str);
@@ -44393,40 +40622,30 @@
                          */
                         if (argsinsert != NULL)
                                 argsinsert = NULL;
-                }
+                ;}
     break;
 
   case 2105:
-
-/* Line 1806 of yacc.c  */
 #line 11771 "preproc.y"
-    { (yyval.str) = cat_str(5, (yyvsp[(3) - (5)].str), make_str(","), (yyvsp[(5) - (5)].str), make_str(","), (yyvsp[(4) - (5)].str)); }
+    { (yyval.str) = cat_str(5, (yyvsp[(3) - (5)].str), make_str(","), (yyvsp[(5) - (5)].str), make_str(","), (yyvsp[(4) - (5)].str)); ;}
     break;
 
   case 2106:
-
-/* Line 1806 of yacc.c  */
 #line 11773 "preproc.y"
-    { (yyval.str) = make_str("NULL, NULL, NULL, \"DEFAULT\""); }
+    { (yyval.str) = make_str("NULL, NULL, NULL, \"DEFAULT\""); ;}
     break;
 
   case 2107:
-
-/* Line 1806 of yacc.c  */
 #line 11776 "preproc.y"
-    { (yyval.str) = cat_str(3, make_str("NULL,"), (yyvsp[(2) - (2)].str), make_str(", NULL")); }
+    { (yyval.str) = cat_str(3, make_str("NULL,"), (yyvsp[(2) - (2)].str), make_str(", NULL")); ;}
     break;
 
   case 2108:
-
-/* Line 1806 of yacc.c  */
 #line 11778 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(2) - (2)].str), make_str(", NULL, NULL, NULL")); }
+    { (yyval.str) = cat2_str((yyvsp[(2) - (2)].str), make_str(", NULL, NULL, NULL")); ;}
     break;
 
   case 2109:
-
-/* Line 1806 of yacc.c  */
 #line 11782 "preproc.y"
     {
 			/* old style: dbname[@server][:port] */
@@ -44438,12 +40657,10 @@
 				(yyval.str) = (yyvsp[(1) - (3)].str);
 			else
 				(yyval.str) = make3_str(make_str("\""), make3_str((yyvsp[(1) - (3)].str), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str)), make_str("\""));
-		}
+		;}
     break;
 
   case 2110:
-
-/* Line 1806 of yacc.c  */
 #line 11794 "preproc.y"
     {
 			/* new style: <tcp|unix>:postgresql://server[:port][/dbname] */
@@ -44459,21 +40676,17 @@
 				mmerror(PARSE_ERROR, ET_ERROR, "Unix-domain sockets only work on \"localhost\" but not on \"%s\"", (yyvsp[(3) - (7)].str) + strlen("//"));
 
 			(yyval.str) = make3_str(make3_str(make_str("\""), (yyvsp[(1) - (7)].str), make_str(":")), (yyvsp[(3) - (7)].str), make3_str(make3_str((yyvsp[(4) - (7)].str), make_str("/"), (yyvsp[(6) - (7)].str)),	(yyvsp[(7) - (7)].str), make_str("\"")));
-		}
+		;}
     break;
 
   case 2111:
-
-/* Line 1806 of yacc.c  */
 #line 11810 "preproc.y"
     {
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2112:
-
-/* Line 1806 of yacc.c  */
 #line 11814 "preproc.y"
     {
 			/* We can only process double quoted strings not single quotes ones,
@@ -44482,26 +40695,20 @@
 			(yyvsp[(1) - (1)].str)[0] = '\"';
 			(yyvsp[(1) - (1)].str)[strlen((yyvsp[(1) - (1)].str))-1] = '\"';
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2113:
-
-/* Line 1806 of yacc.c  */
 #line 11824 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2114:
-
-/* Line 1806 of yacc.c  */
 #line 11825 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2115:
-
-/* Line 1806 of yacc.c  */
 #line 11829 "preproc.y"
     {
 			if (strcmp((yyvsp[(2) - (2)].str), "postgresql") != 0 && strcmp((yyvsp[(2) - (2)].str), "postgres") != 0)
@@ -44511,153 +40718,115 @@
 				mmerror(PARSE_ERROR, ET_ERROR, "invalid connection type: %s", (yyvsp[(1) - (2)].str));
 
 			(yyval.str) = make3_str((yyvsp[(1) - (2)].str), make_str(":"), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2116:
-
-/* Line 1806 of yacc.c  */
 #line 11841 "preproc.y"
     {
 			if (strcmp((yyvsp[(1) - (2)].str), "@") != 0 && strcmp((yyvsp[(1) - (2)].str), "//") != 0)
 				mmerror(PARSE_ERROR, ET_ERROR, "expected \"@\" or \"://\", found \"%s\"", (yyvsp[(1) - (2)].str));
 
 			(yyval.str) = make2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2117:
-
-/* Line 1806 of yacc.c  */
 #line 11849 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2118:
-
-/* Line 1806 of yacc.c  */
 #line 11850 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2119:
-
-/* Line 1806 of yacc.c  */
 #line 11853 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2120:
-
-/* Line 1806 of yacc.c  */
 #line 11854 "preproc.y"
-    { (yyval.str) = make3_str((yyvsp[(1) - (3)].str), make_str("."), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = make3_str((yyvsp[(1) - (3)].str), make_str("."), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2121:
-
-/* Line 1806 of yacc.c  */
 #line 11855 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2122:
-
-/* Line 1806 of yacc.c  */
 #line 11858 "preproc.y"
-    { (yyval.str) = make2_str(make_str(":"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(make_str(":"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2123:
-
-/* Line 1806 of yacc.c  */
 #line 11859 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2124:
-
-/* Line 1806 of yacc.c  */
 #line 11862 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2125:
-
-/* Line 1806 of yacc.c  */
 #line 11863 "preproc.y"
-    { (yyval.str) = make_str("NULL"); }
+    { (yyval.str) = make_str("NULL"); ;}
     break;
 
   case 2126:
-
-/* Line 1806 of yacc.c  */
 #line 11866 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2127:
-
-/* Line 1806 of yacc.c  */
 #line 11867 "preproc.y"
-    { (yyval.str) = make_str("NULL, NULL"); }
+    { (yyval.str) = make_str("NULL, NULL"); ;}
     break;
 
   case 2128:
-
-/* Line 1806 of yacc.c  */
 #line 11871 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (1)].str), make_str(", NULL")); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (1)].str), make_str(", NULL")); ;}
     break;
 
   case 2129:
-
-/* Line 1806 of yacc.c  */
 #line 11873 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str(","), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str(","), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2130:
-
-/* Line 1806 of yacc.c  */
 #line 11875 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (4)].str), make_str(","), (yyvsp[(4) - (4)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (4)].str), make_str(","), (yyvsp[(4) - (4)].str)); ;}
     break;
 
   case 2131:
-
-/* Line 1806 of yacc.c  */
 #line 11877 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str(","), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str(","), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2132:
-
-/* Line 1806 of yacc.c  */
 #line 11881 "preproc.y"
     {
 			if ((yyvsp[(1) - (1)].str)[0] == '\"')
 				(yyval.str) = (yyvsp[(1) - (1)].str);
 			else
 				(yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\""));
-		}
+		;}
     break;
 
   case 2133:
-
-/* Line 1806 of yacc.c  */
 #line 11888 "preproc.y"
     {
 			if ((yyvsp[(1) - (1)].str)[0] == '\"')
 				(yyval.str) = (yyvsp[(1) - (1)].str);
 			else
 				(yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\""));
-		}
+		;}
     break;
 
   case 2134:
-
-/* Line 1806 of yacc.c  */
 #line 11895 "preproc.y"
     {
 			enum ECPGttype type = argsinsert->variable->type->type;
@@ -44671,12 +40840,10 @@
 				(yyval.str) = make2_str(mm_strdup(argsinsert->variable->name), make_str(".arr"));
 			else
 				(yyval.str) = mm_strdup(argsinsert->variable->name);
-		}
+		;}
     break;
 
   case 2135:
-
-/* Line 1806 of yacc.c  */
 #line 11911 "preproc.y"
     {
 			/* check if we have a string variable */
@@ -44708,12 +40875,10 @@
 						break;
 				}
 			}
-		}
+		;}
     break;
 
   case 2136:
-
-/* Line 1806 of yacc.c  */
 #line 11945 "preproc.y"
     {
 			if (strlen((yyvsp[(1) - (2)].str)) == 0)
@@ -44723,26 +40888,20 @@
 				mmerror(PARSE_ERROR, ET_ERROR, "unrecognized token \"%s\"", (yyvsp[(1) - (2)].str));
 
 			(yyval.str) = make2_str(make_str("?"), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2137:
-
-/* Line 1806 of yacc.c  */
 #line 11954 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2138:
-
-/* Line 1806 of yacc.c  */
 #line 11958 "preproc.y"
-    { (yyval.str) = make2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2139:
-
-/* Line 1806 of yacc.c  */
 #line 11960 "preproc.y"
     {
 				if (strlen((yyvsp[(3) - (4)].str)) == 0)
@@ -44752,40 +40911,30 @@
 					mmerror(PARSE_ERROR, ET_ERROR, "unrecognized token \"%s\"", (yyvsp[(3) - (4)].str));
 
 				(yyval.str) = cat_str(3, make2_str((yyvsp[(1) - (4)].str), (yyvsp[(2) - (4)].str)), (yyvsp[(3) - (4)].str), (yyvsp[(4) - (4)].str));
-			}
+			;}
     break;
 
   case 2140:
-
-/* Line 1806 of yacc.c  */
 #line 11972 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2141:
-
-/* Line 1806 of yacc.c  */
 #line 11974 "preproc.y"
-    { (yyval.str) = make2_str(make_str("="), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(make_str("="), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2142:
-
-/* Line 1806 of yacc.c  */
 #line 11976 "preproc.y"
-    { (yyval.str) = make2_str(make_str("="), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(make_str("="), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2143:
-
-/* Line 1806 of yacc.c  */
 #line 11978 "preproc.y"
-    { (yyval.str) = make2_str(make_str("="), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(make_str("="), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2144:
-
-/* Line 1806 of yacc.c  */
 #line 11981 "preproc.y"
     {
                                         if ((yyvsp[(1) - (1)].str)[0] == '\"' && (yyvsp[(1) - (1)].str)[strlen((yyvsp[(1) - (1)].str))-1] == '\"') /* already quoted? */
@@ -44799,19 +40948,15 @@
 
                                                 (yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\""));
                                         }
-                                }
+                                ;}
     break;
 
   case 2145:
-
-/* Line 1806 of yacc.c  */
 #line 11994 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2146:
-
-/* Line 1806 of yacc.c  */
 #line 12002 "preproc.y"
     {
 			struct cursor *ptr, *this;
@@ -44869,192 +41014,142 @@
 					comment);
 			else
 				(yyval.str) = cat2_str(adjust_outofscope_cursor_vars(this), comment);
-		}
+		;}
     break;
 
   case 2147:
-
-/* Line 1806 of yacc.c  */
 #line 12062 "preproc.y"
     { 
 			  /* execute immediate means prepare the statement and
 			   * immediately execute it */
 			  (yyval.str) = (yyvsp[(3) - (3)].str);
-			}
+			;}
     break;
 
   case 2149:
-
-/* Line 1806 of yacc.c  */
 #line 12072 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2150:
-
-/* Line 1806 of yacc.c  */
 #line 12073 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2151:
-
-/* Line 1806 of yacc.c  */
 #line 12076 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2152:
-
-/* Line 1806 of yacc.c  */
 #line 12078 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2153:
-
-/* Line 1806 of yacc.c  */
 #line 12079 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2154:
-
-/* Line 1806 of yacc.c  */
 #line 12082 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2155:
-
-/* Line 1806 of yacc.c  */
 #line 12083 "preproc.y"
-    { (yyval.str) = make_str("year to minute"); }
+    { (yyval.str) = make_str("year to minute"); ;}
     break;
 
   case 2156:
-
-/* Line 1806 of yacc.c  */
 #line 12084 "preproc.y"
-    { (yyval.str) = make_str("year to second"); }
+    { (yyval.str) = make_str("year to second"); ;}
     break;
 
   case 2157:
-
-/* Line 1806 of yacc.c  */
 #line 12085 "preproc.y"
-    { (yyval.str) = make_str("day to day"); }
+    { (yyval.str) = make_str("day to day"); ;}
     break;
 
   case 2158:
-
-/* Line 1806 of yacc.c  */
 #line 12086 "preproc.y"
-    { (yyval.str) = make_str("month to month"); }
+    { (yyval.str) = make_str("month to month"); ;}
     break;
 
   case 2159:
-
-/* Line 1806 of yacc.c  */
 #line 12093 "preproc.y"
-    { fputs("/* exec sql begin declare section */", yyout); }
+    { fputs("/* exec sql begin declare section */", yyout); ;}
     break;
 
   case 2160:
-
-/* Line 1806 of yacc.c  */
 #line 12095 "preproc.y"
     {
 			fprintf(yyout, "%s/* exec sql end declare section */", (yyvsp[(3) - (4)].str));
 			free((yyvsp[(3) - (4)].str));
 			output_line_number();
-		}
+		;}
     break;
 
   case 2161:
-
-/* Line 1806 of yacc.c  */
 #line 12102 "preproc.y"
-    {}
+    {;}
     break;
 
   case 2162:
-
-/* Line 1806 of yacc.c  */
 #line 12104 "preproc.y"
-    {}
+    {;}
     break;
 
   case 2163:
-
-/* Line 1806 of yacc.c  */
 #line 12106 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2164:
-
-/* Line 1806 of yacc.c  */
 #line 12107 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2165:
-
-/* Line 1806 of yacc.c  */
 #line 12110 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2166:
-
-/* Line 1806 of yacc.c  */
 #line 12111 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2167:
-
-/* Line 1806 of yacc.c  */
 #line 12112 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2168:
-
-/* Line 1806 of yacc.c  */
 #line 12113 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2169:
-
-/* Line 1806 of yacc.c  */
 #line 12116 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2170:
-
-/* Line 1806 of yacc.c  */
 #line 12117 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2171:
-
-/* Line 1806 of yacc.c  */
 #line 12121 "preproc.y"
     {
 		/* reset this variable so we see if there was */
 		/* an initializer specified */
 		initializer = 0;
-	}
+	;}
     break;
 
   case 2172:
-
-/* Line 1806 of yacc.c  */
 #line 12127 "preproc.y"
     {
 		add_typedef((yyvsp[(5) - (7)].str), (yyvsp[(6) - (7)].index).index1, (yyvsp[(6) - (7)].index).index2, (yyvsp[(3) - (7)].type).type_enum, (yyvsp[(3) - (7)].type).type_dimension, (yyvsp[(3) - (7)].type).type_index, initializer, *(yyvsp[(4) - (7)].str) ? 1 : 0);
@@ -45062,12 +41157,10 @@
 		fprintf(yyout, "typedef %s %s %s %s;\n", (yyvsp[(3) - (7)].type).type_str, *(yyvsp[(4) - (7)].str) ? "*" : "", (yyvsp[(5) - (7)].str), (yyvsp[(6) - (7)].index).str);
 		output_line_number();
 		(yyval.str) = make_str("");
-	}
+	;}
     break;
 
   case 2173:
-
-/* Line 1806 of yacc.c  */
 #line 12137 "preproc.y"
     {
 			actual_type[struct_level].type_enum = (yyvsp[(2) - (2)].type).type_enum;
@@ -45077,21 +41170,17 @@
 			actual_type[struct_level].type_sizeof = (yyvsp[(2) - (2)].type).type_sizeof;
 
 			actual_startline[struct_level] = hashline_number();
-		}
+		;}
     break;
 
   case 2174:
-
-/* Line 1806 of yacc.c  */
 #line 12147 "preproc.y"
     {
 			(yyval.str) = cat_str(5, actual_startline[struct_level], (yyvsp[(1) - (5)].str), (yyvsp[(2) - (5)].type).type_str, (yyvsp[(4) - (5)].str), make_str(";\n"));
-		}
+		;}
     break;
 
   case 2175:
-
-/* Line 1806 of yacc.c  */
 #line 12151 "preproc.y"
     {
 			actual_type[struct_level].type_enum = (yyvsp[(1) - (1)].type).type_enum;
@@ -45101,107 +41190,79 @@
 			actual_type[struct_level].type_sizeof = (yyvsp[(1) - (1)].type).type_sizeof;
 
 			actual_startline[struct_level] = hashline_number();
-		}
+		;}
     break;
 
   case 2176:
-
-/* Line 1806 of yacc.c  */
 #line 12161 "preproc.y"
     {
 			(yyval.str) = cat_str(4, actual_startline[struct_level], (yyvsp[(1) - (4)].type).type_str, (yyvsp[(3) - (4)].str), make_str(";\n"));
-		}
+		;}
     break;
 
   case 2177:
-
-/* Line 1806 of yacc.c  */
 #line 12165 "preproc.y"
     {
 			(yyval.str) = cat2_str((yyvsp[(1) - (2)].str), make_str(";"));
-		}
+		;}
     break;
 
   case 2178:
-
-/* Line 1806 of yacc.c  */
 #line 12170 "preproc.y"
-    { (yyval.str) =cat2_str(make_str(":"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) =cat2_str(make_str(":"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2179:
-
-/* Line 1806 of yacc.c  */
 #line 12171 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2180:
-
-/* Line 1806 of yacc.c  */
 #line 12175 "preproc.y"
-    {(yyval.str) = cat2_str ((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    {(yyval.str) = cat2_str ((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2181:
-
-/* Line 1806 of yacc.c  */
 #line 12176 "preproc.y"
-    {(yyval.str) = (yyvsp[(1) - (1)].str); }
+    {(yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2182:
-
-/* Line 1806 of yacc.c  */
 #line 12177 "preproc.y"
-    {(yyval.str) = (yyvsp[(1) - (1)].str); }
+    {(yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2183:
-
-/* Line 1806 of yacc.c  */
 #line 12180 "preproc.y"
-    { (yyval.str) = make_str("extern"); }
+    { (yyval.str) = make_str("extern"); ;}
     break;
 
   case 2184:
-
-/* Line 1806 of yacc.c  */
 #line 12181 "preproc.y"
-    { (yyval.str) = make_str("static"); }
+    { (yyval.str) = make_str("static"); ;}
     break;
 
   case 2185:
-
-/* Line 1806 of yacc.c  */
 #line 12182 "preproc.y"
-    { (yyval.str) = make_str("register"); }
+    { (yyval.str) = make_str("register"); ;}
     break;
 
   case 2186:
-
-/* Line 1806 of yacc.c  */
 #line 12183 "preproc.y"
-    { (yyval.str) = make_str("auto"); }
+    { (yyval.str) = make_str("auto"); ;}
     break;
 
   case 2187:
-
-/* Line 1806 of yacc.c  */
 #line 12186 "preproc.y"
-    { (yyval.str) = make_str("const"); }
+    { (yyval.str) = make_str("const"); ;}
     break;
 
   case 2188:
-
-/* Line 1806 of yacc.c  */
 #line 12187 "preproc.y"
-    { (yyval.str) = make_str("volatile"); }
+    { (yyval.str) = make_str("volatile"); ;}
     break;
 
   case 2189:
-
-/* Line 1806 of yacc.c  */
 #line 12191 "preproc.y"
     {
 			(yyval.type).type_enum = (yyvsp[(1) - (1)].type_enum);
@@ -45209,12 +41270,10 @@
 			(yyval.type).type_dimension = make_str("-1");
 			(yyval.type).type_index = make_str("-1");
 			(yyval.type).type_sizeof = NULL;
-		}
+		;}
     break;
 
   case 2190:
-
-/* Line 1806 of yacc.c  */
 #line 12199 "preproc.y"
     {
 			(yyval.type).type_str = (yyvsp[(1) - (1)].str);
@@ -45231,12 +41290,10 @@
 				(yyval.type).type_enum = ECPGt_union;
 				(yyval.type).type_sizeof = NULL;
 			}
-		}
+		;}
     break;
 
   case 2191:
-
-/* Line 1806 of yacc.c  */
 #line 12216 "preproc.y"
     {
 			(yyval.type).type_str = (yyvsp[(1) - (1)].str);
@@ -45244,12 +41301,10 @@
 			(yyval.type).type_dimension = make_str("-1");
 			(yyval.type).type_index = make_str("-1");
 			(yyval.type).type_sizeof = NULL;
-		}
+		;}
     break;
 
   case 2192:
-
-/* Line 1806 of yacc.c  */
 #line 12224 "preproc.y"
     {
 			if (strcmp((yyvsp[(1) - (5)].str), "numeric") == 0)
@@ -45272,12 +41327,10 @@
 			(yyval.type).type_dimension = make_str("-1");
 			(yyval.type).type_index = make_str("-1");
 			(yyval.type).type_sizeof = NULL;
-		}
+		;}
     break;
 
   case 2193:
-
-/* Line 1806 of yacc.c  */
 #line 12247 "preproc.y"
     {
 			if (strlen((yyvsp[(2) - (2)].str)) != 0 && strcmp ((yyvsp[(1) - (2)].str), "datetime") != 0 && strcmp ((yyvsp[(1) - (2)].str), "interval") != 0)
@@ -45383,12 +41436,10 @@
 
 				struct_member_list[struct_level] = ECPGstruct_member_dup(this->struct_member_list);
 			}
-		}
+		;}
     break;
 
   case 2194:
-
-/* Line 1806 of yacc.c  */
 #line 12353 "preproc.y"
     {
 			/* this is for named structs/unions */
@@ -45420,52 +41471,40 @@
 				(yyval.type).type_sizeof = make_str("");
 				struct_member_list[struct_level] = NULL;
 			}
-		}
+		;}
     break;
 
   case 2195:
-
-/* Line 1806 of yacc.c  */
 #line 12387 "preproc.y"
-    { (yyval.str) = cat_str(3, make_str("enum"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, make_str("enum"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2196:
-
-/* Line 1806 of yacc.c  */
 #line 12389 "preproc.y"
-    { (yyval.str) = cat2_str(make_str("enum"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str(make_str("enum"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2197:
-
-/* Line 1806 of yacc.c  */
 #line 12391 "preproc.y"
-    { (yyval.str) = cat2_str(make_str("enum"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str(make_str("enum"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2198:
-
-/* Line 1806 of yacc.c  */
 #line 12395 "preproc.y"
-    { (yyval.str) = cat_str(3, make_str("{"), (yyvsp[(2) - (3)].str), make_str("}")); }
+    { (yyval.str) = cat_str(3, make_str("{"), (yyvsp[(2) - (3)].str), make_str("}")); ;}
     break;
 
   case 2199:
-
-/* Line 1806 of yacc.c  */
 #line 12398 "preproc.y"
     {
 			struct_member_list[struct_level++] = NULL;
 			if (struct_level >= STRUCT_DEPTH)
 				 mmerror(PARSE_ERROR, ET_ERROR, "too many levels in nested structure/union definition");
 			forward_name = mm_strdup((yyvsp[(1) - (1)].struct_union).symbol);
-		}
+		;}
     break;
 
   case 2200:
-
-/* Line 1806 of yacc.c  */
 #line 12405 "preproc.y"
     {
 			struct typedefs *ptr, *this;
@@ -45507,136 +41546,104 @@
 
 			types = this;
 			(yyval.str) = cat_str(4, su_type.type_str, make_str("{"), (yyvsp[(4) - (5)].str), make_str("}"));
-		}
+		;}
     break;
 
   case 2201:
-
-/* Line 1806 of yacc.c  */
 #line 12448 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2202:
-
-/* Line 1806 of yacc.c  */
 #line 12450 "preproc.y"
     {
 			struct_member_list[struct_level++] = NULL;
 			if (struct_level >= STRUCT_DEPTH)
 				 mmerror(PARSE_ERROR, ET_ERROR, "too many levels in nested structure/union definition");
-		}
+		;}
     break;
 
   case 2203:
-
-/* Line 1806 of yacc.c  */
 #line 12456 "preproc.y"
     {
 			ECPGfree_struct_member(struct_member_list[struct_level]);
 			struct_member_list[struct_level] = NULL;
 			struct_level--;
 			(yyval.str) = cat_str(4, (yyvsp[(1) - (5)].str), make_str("{"), (yyvsp[(4) - (5)].str), make_str("}"));
-		}
+		;}
     break;
 
   case 2204:
-
-/* Line 1806 of yacc.c  */
 #line 12465 "preproc.y"
     {
 			(yyval.struct_union).su = make_str("struct");
 			(yyval.struct_union).symbol = (yyvsp[(2) - (2)].str);
 			ECPGstruct_sizeof = cat_str(3, make_str("sizeof("), cat2_str(mm_strdup((yyval.struct_union).su), mm_strdup((yyval.struct_union).symbol)), make_str(")"));
-		}
+		;}
     break;
 
   case 2205:
-
-/* Line 1806 of yacc.c  */
 #line 12471 "preproc.y"
     {
 			(yyval.struct_union).su = make_str("union");
 			(yyval.struct_union).symbol = (yyvsp[(2) - (2)].str);
-		}
+		;}
     break;
 
   case 2206:
-
-/* Line 1806 of yacc.c  */
 #line 12478 "preproc.y"
     {
 			ECPGstruct_sizeof = make_str(""); /* This must not be NULL to distinguish from simple types. */
 			(yyval.str) = make_str("struct");
-		}
+		;}
     break;
 
   case 2207:
-
-/* Line 1806 of yacc.c  */
 #line 12482 "preproc.y"
-    { (yyval.str) = make_str("union"); }
+    { (yyval.str) = make_str("union"); ;}
     break;
 
   case 2208:
-
-/* Line 1806 of yacc.c  */
 #line 12485 "preproc.y"
-    { (yyval.type_enum)=(yyvsp[(1) - (1)].type_enum); }
+    { (yyval.type_enum)=(yyvsp[(1) - (1)].type_enum); ;}
     break;
 
   case 2209:
-
-/* Line 1806 of yacc.c  */
 #line 12486 "preproc.y"
-    { (yyval.type_enum)=(yyvsp[(2) - (2)].type_enum); }
+    { (yyval.type_enum)=(yyvsp[(2) - (2)].type_enum); ;}
     break;
 
   case 2210:
-
-/* Line 1806 of yacc.c  */
 #line 12489 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_short; }
+    { (yyval.type_enum) = ECPGt_unsigned_short; ;}
     break;
 
   case 2211:
-
-/* Line 1806 of yacc.c  */
 #line 12490 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_short; }
+    { (yyval.type_enum) = ECPGt_unsigned_short; ;}
     break;
 
   case 2212:
-
-/* Line 1806 of yacc.c  */
 #line 12491 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_int; }
+    { (yyval.type_enum) = ECPGt_unsigned_int; ;}
     break;
 
   case 2213:
-
-/* Line 1806 of yacc.c  */
 #line 12492 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_int; }
+    { (yyval.type_enum) = ECPGt_unsigned_int; ;}
     break;
 
   case 2214:
-
-/* Line 1806 of yacc.c  */
 #line 12493 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_long; }
+    { (yyval.type_enum) = ECPGt_unsigned_long; ;}
     break;
 
   case 2215:
-
-/* Line 1806 of yacc.c  */
 #line 12494 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_long; }
+    { (yyval.type_enum) = ECPGt_unsigned_long; ;}
     break;
 
   case 2216:
-
-/* Line 1806 of yacc.c  */
 #line 12496 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -45644,12 +41651,10 @@
 #else
 			(yyval.type_enum) = ECPGt_unsigned_long;
 #endif
-		}
+		;}
     break;
 
   case 2217:
-
-/* Line 1806 of yacc.c  */
 #line 12504 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -45657,54 +41662,40 @@
 #else
 			(yyval.type_enum) = ECPGt_unsigned_long;
 #endif
-		}
+		;}
     break;
 
   case 2218:
-
-/* Line 1806 of yacc.c  */
 #line 12511 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_char; }
+    { (yyval.type_enum) = ECPGt_unsigned_char; ;}
     break;
 
   case 2219:
-
-/* Line 1806 of yacc.c  */
 #line 12514 "preproc.y"
-    { (yyval.type_enum) = ECPGt_short; }
+    { (yyval.type_enum) = ECPGt_short; ;}
     break;
 
   case 2220:
-
-/* Line 1806 of yacc.c  */
 #line 12515 "preproc.y"
-    { (yyval.type_enum) = ECPGt_short; }
+    { (yyval.type_enum) = ECPGt_short; ;}
     break;
 
   case 2221:
-
-/* Line 1806 of yacc.c  */
 #line 12516 "preproc.y"
-    { (yyval.type_enum) = ECPGt_int; }
+    { (yyval.type_enum) = ECPGt_int; ;}
     break;
 
   case 2222:
-
-/* Line 1806 of yacc.c  */
 #line 12517 "preproc.y"
-    { (yyval.type_enum) = ECPGt_long; }
+    { (yyval.type_enum) = ECPGt_long; ;}
     break;
 
   case 2223:
-
-/* Line 1806 of yacc.c  */
 #line 12518 "preproc.y"
-    { (yyval.type_enum) = ECPGt_long; }
+    { (yyval.type_enum) = ECPGt_long; ;}
     break;
 
   case 2224:
-
-/* Line 1806 of yacc.c  */
 #line 12520 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -45712,12 +41703,10 @@
 #else
 			(yyval.type_enum) = ECPGt_long;
 #endif
-		}
+		;}
     break;
 
   case 2225:
-
-/* Line 1806 of yacc.c  */
 #line 12528 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -45725,52 +41714,40 @@
 #else
 			(yyval.type_enum) = ECPGt_long;
 #endif
-		}
+		;}
     break;
 
   case 2226:
-
-/* Line 1806 of yacc.c  */
 #line 12535 "preproc.y"
-    { (yyval.type_enum) = ECPGt_bool; }
+    { (yyval.type_enum) = ECPGt_bool; ;}
     break;
 
   case 2227:
-
-/* Line 1806 of yacc.c  */
 #line 12536 "preproc.y"
-    { (yyval.type_enum) = ECPGt_char; }
+    { (yyval.type_enum) = ECPGt_char; ;}
     break;
 
   case 2228:
-
-/* Line 1806 of yacc.c  */
 #line 12537 "preproc.y"
-    { (yyval.type_enum) = ECPGt_double; }
+    { (yyval.type_enum) = ECPGt_double; ;}
     break;
 
   case 2231:
-
-/* Line 1806 of yacc.c  */
 #line 12545 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2232:
-
-/* Line 1806 of yacc.c  */
 #line 12547 "preproc.y"
     {
 			if (actual_type[struct_level].type_enum == ECPGt_varchar)
 				(yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str(";"), (yyvsp[(3) - (3)].str));
 			else
 				(yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str(","), (yyvsp[(3) - (3)].str));
-		}
+		;}
     break;
 
   case 2233:
-
-/* Line 1806 of yacc.c  */
 #line 12556 "preproc.y"
     {
 			struct ECPGtype * type;
@@ -45855,334 +41832,250 @@
 				ECPGmake_struct_member((yyvsp[(2) - (5)].str), type, &(struct_member_list[struct_level - 1]));
 
 			free((yyvsp[(2) - (5)].str));
-		}
+		;}
     break;
 
   case 2234:
-
-/* Line 1806 of yacc.c  */
 #line 12643 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2235:
-
-/* Line 1806 of yacc.c  */
 #line 12645 "preproc.y"
     {
 			initializer = 1;
 			(yyval.str) = cat2_str(make_str("="), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2236:
-
-/* Line 1806 of yacc.c  */
 #line 12651 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2237:
-
-/* Line 1806 of yacc.c  */
 #line 12652 "preproc.y"
-    { (yyval.str) = make_str("*"); }
+    { (yyval.str) = make_str("*"); ;}
     break;
 
   case 2238:
-
-/* Line 1806 of yacc.c  */
 #line 12653 "preproc.y"
-    { (yyval.str) = make_str("**"); }
+    { (yyval.str) = make_str("**"); ;}
     break;
 
   case 2239:
-
-/* Line 1806 of yacc.c  */
 #line 12660 "preproc.y"
     {
 			/* this is only supported for compatibility */
 			(yyval.str) = cat_str(3, make_str("/* declare statement"), (yyvsp[(3) - (3)].str), make_str("*/"));
-		}
+		;}
     break;
 
   case 2240:
-
-/* Line 1806 of yacc.c  */
 #line 12668 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2241:
-
-/* Line 1806 of yacc.c  */
 #line 12671 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2242:
-
-/* Line 1806 of yacc.c  */
 #line 12672 "preproc.y"
-    { (yyval.str) = make_str("\"CURRENT\""); }
+    { (yyval.str) = make_str("\"CURRENT\""); ;}
     break;
 
   case 2243:
-
-/* Line 1806 of yacc.c  */
 #line 12673 "preproc.y"
-    { (yyval.str) = make_str("\"ALL\""); }
+    { (yyval.str) = make_str("\"ALL\""); ;}
     break;
 
   case 2244:
-
-/* Line 1806 of yacc.c  */
 #line 12674 "preproc.y"
-    { (yyval.str) = make_str("\"CURRENT\""); }
+    { (yyval.str) = make_str("\"CURRENT\""); ;}
     break;
 
   case 2245:
-
-/* Line 1806 of yacc.c  */
 #line 12677 "preproc.y"
-    { (yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\"")); }
+    { (yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\"")); ;}
     break;
 
   case 2246:
-
-/* Line 1806 of yacc.c  */
 #line 12678 "preproc.y"
-    { (yyval.str) = make_str("\"DEFAULT\""); }
+    { (yyval.str) = make_str("\"DEFAULT\""); ;}
     break;
 
   case 2247:
-
-/* Line 1806 of yacc.c  */
 #line 12679 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2248:
-
-/* Line 1806 of yacc.c  */
 #line 12683 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2249:
-
-/* Line 1806 of yacc.c  */
 #line 12685 "preproc.y"
-    { (yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\"")); }
+    { (yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\"")); ;}
     break;
 
   case 2250:
-
-/* Line 1806 of yacc.c  */
 #line 12692 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2251:
-
-/* Line 1806 of yacc.c  */
 #line 12693 "preproc.y"
-    { (yyval.str) = make_str("all"); }
+    { (yyval.str) = make_str("all"); ;}
     break;
 
   case 2252:
-
-/* Line 1806 of yacc.c  */
 #line 12700 "preproc.y"
     {
 			if ((yyvsp[(2) - (3)].str)[0] == ':')
 				remove_variable_from_list(&argsinsert, find_variable((yyvsp[(2) - (3)].str) + 1));
 			(yyval.str) = (yyvsp[(2) - (3)].str);
-		}
+		;}
     break;
 
   case 2253:
-
-/* Line 1806 of yacc.c  */
 #line 12707 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2254:
-
-/* Line 1806 of yacc.c  */
 #line 12708 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2255:
-
-/* Line 1806 of yacc.c  */
 #line 12711 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2256:
-
-/* Line 1806 of yacc.c  */
 #line 12712 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2257:
-
-/* Line 1806 of yacc.c  */
 #line 12716 "preproc.y"
     {
 			add_variable_to_head(&argsinsert, descriptor_variable((yyvsp[(4) - (4)].str),0), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2258:
-
-/* Line 1806 of yacc.c  */
 #line 12721 "preproc.y"
     {
 			add_variable_to_head(&argsinsert, sqlda_variable((yyvsp[(3) - (3)].str)), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2259:
-
-/* Line 1806 of yacc.c  */
 #line 12728 "preproc.y"
     {
 			add_variable_to_head(&argsresult, descriptor_variable((yyvsp[(4) - (4)].str),1), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2260:
-
-/* Line 1806 of yacc.c  */
 #line 12733 "preproc.y"
     {
 			add_variable_to_head(&argsresult, sqlda_variable((yyvsp[(3) - (3)].str)), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2261:
-
-/* Line 1806 of yacc.c  */
 #line 12740 "preproc.y"
     {
 			add_variable_to_head(&argsresult, sqlda_variable((yyvsp[(2) - (2)].str)), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2264:
-
-/* Line 1806 of yacc.c  */
 #line 12749 "preproc.y"
     {
 			char *length = mm_alloc(32);
 
 			sprintf(length, "%d", (int) strlen((yyvsp[(1) - (1)].str)));
 			add_variable_to_head(&argsinsert, new_variable((yyvsp[(1) - (1)].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0), &no_indicator);
-		}
+		;}
     break;
 
   case 2265:
-
-/* Line 1806 of yacc.c  */
 #line 12755 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2266:
-
-/* Line 1806 of yacc.c  */
 #line 12756 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2267:
-
-/* Line 1806 of yacc.c  */
 #line 12759 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2268:
-
-/* Line 1806 of yacc.c  */
 #line 12760 "preproc.y"
-    { (yyval.str) = cat_str(2, make_str("+"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, make_str("+"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2269:
-
-/* Line 1806 of yacc.c  */
 #line 12761 "preproc.y"
-    { (yyval.str) = cat_str(2, make_str("-"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, make_str("-"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2270:
-
-/* Line 1806 of yacc.c  */
 #line 12762 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2271:
-
-/* Line 1806 of yacc.c  */
 #line 12763 "preproc.y"
-    { (yyval.str) = cat_str(2, make_str("+"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, make_str("+"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2272:
-
-/* Line 1806 of yacc.c  */
 #line 12764 "preproc.y"
-    { (yyval.str) = cat_str(2, make_str("-"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, make_str("-"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2273:
-
-/* Line 1806 of yacc.c  */
 #line 12765 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2274:
-
-/* Line 1806 of yacc.c  */
 #line 12766 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2275:
-
-/* Line 1806 of yacc.c  */
 #line 12767 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2276:
-
-/* Line 1806 of yacc.c  */
 #line 12774 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		mmerror(PARSE_ERROR, ET_WARNING, "using unsupported DESCRIBE statement");
 		(yyval.str) = (char *) mm_alloc(sizeof("1, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "1, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2277:
-
-/* Line 1806 of yacc.c  */
 #line 12781 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
@@ -46194,110 +42087,86 @@
 
 		(yyval.str) = (char *) mm_alloc(sizeof("0, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "0, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2278:
-
-/* Line 1806 of yacc.c  */
 #line 12793 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		(yyval.str) = (char *) mm_alloc(sizeof("0, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "0, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2279:
-
-/* Line 1806 of yacc.c  */
 #line 12799 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		mmerror(PARSE_ERROR, ET_WARNING, "using unsupported DESCRIBE statement");
 		(yyval.str) = (char *) mm_alloc(sizeof("1, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "1, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2280:
-
-/* Line 1806 of yacc.c  */
 #line 12806 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		(yyval.str) = (char *) mm_alloc(sizeof("0, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "0, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2281:
-
-/* Line 1806 of yacc.c  */
 #line 12813 "preproc.y"
-    { (yyval.str) = make_str("output"); }
+    { (yyval.str) = make_str("output"); ;}
     break;
 
   case 2282:
-
-/* Line 1806 of yacc.c  */
 #line 12814 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2283:
-
-/* Line 1806 of yacc.c  */
 #line 12827 "preproc.y"
     {
 			add_descriptor((yyvsp[(3) - (3)].str),connection);
 			(yyval.str) = (yyvsp[(3) - (3)].str);
-		}
+		;}
     break;
 
   case 2284:
-
-/* Line 1806 of yacc.c  */
 #line 12838 "preproc.y"
     {
 			drop_descriptor((yyvsp[(3) - (3)].str),connection);
 			(yyval.str) = (yyvsp[(3) - (3)].str);
-		}
+		;}
     break;
 
   case 2285:
-
-/* Line 1806 of yacc.c  */
 #line 12849 "preproc.y"
-    {  (yyval.str) = (yyvsp[(3) - (4)].str); }
+    {  (yyval.str) = (yyvsp[(3) - (4)].str); ;}
     break;
 
   case 2288:
-
-/* Line 1806 of yacc.c  */
 #line 12857 "preproc.y"
-    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); }
+    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); ;}
     break;
 
   case 2289:
-
-/* Line 1806 of yacc.c  */
 #line 12862 "preproc.y"
-    { (yyval.str) = (yyvsp[(3) - (4)].str); }
+    { (yyval.str) = (yyvsp[(3) - (4)].str); ;}
     break;
 
   case 2292:
-
-/* Line 1806 of yacc.c  */
 #line 12870 "preproc.y"
     {
 			push_assignment((yyvsp[(3) - (3)].str), (yyvsp[(1) - (3)].dtype_enum));
-		}
+		;}
     break;
 
   case 2293:
-
-/* Line 1806 of yacc.c  */
 #line 12876 "preproc.y"
     {
                         char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -46305,56 +42174,42 @@
                         sprintf(length, "%d", (int) strlen((yyvsp[(1) - (1)].str)));
                         new_variable((yyvsp[(1) - (1)].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0);
                         (yyval.str) = (yyvsp[(1) - (1)].str);
-                }
+                ;}
     break;
 
   case 2294:
-
-/* Line 1806 of yacc.c  */
 #line 12883 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2295:
-
-/* Line 1806 of yacc.c  */
 #line 12886 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_count; }
+    { (yyval.dtype_enum) = ECPGd_count; ;}
     break;
 
   case 2296:
-
-/* Line 1806 of yacc.c  */
 #line 12894 "preproc.y"
-    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); }
+    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); ;}
     break;
 
   case 2299:
-
-/* Line 1806 of yacc.c  */
 #line 12901 "preproc.y"
-    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); }
+    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); ;}
     break;
 
   case 2300:
-
-/* Line 1806 of yacc.c  */
 #line 12905 "preproc.y"
-    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); }
+    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); ;}
     break;
 
   case 2303:
-
-/* Line 1806 of yacc.c  */
 #line 12913 "preproc.y"
     {
 			push_assignment((yyvsp[(3) - (3)].str), (yyvsp[(1) - (3)].dtype_enum));
-		}
+		;}
     break;
 
   case 2304:
-
-/* Line 1806 of yacc.c  */
 #line 12919 "preproc.y"
     {
                         char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -46362,19 +42217,15 @@
                         sprintf(length, "%d", (int) strlen((yyvsp[(1) - (1)].str)));
                         new_variable((yyvsp[(1) - (1)].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0);
                         (yyval.str) = (yyvsp[(1) - (1)].str);
-                }
+                ;}
     break;
 
   case 2305:
-
-/* Line 1806 of yacc.c  */
 #line 12926 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2306:
-
-/* Line 1806 of yacc.c  */
 #line 12928 "preproc.y"
     {
                         char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -46383,12 +42234,10 @@
                         sprintf(length, "%d", (int) strlen(var));
                         new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
                         (yyval.str) = var;
-                }
+                ;}
     break;
 
   case 2307:
-
-/* Line 1806 of yacc.c  */
 #line 12937 "preproc.y"
     {
                         char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -46397,12 +42246,10 @@
                         sprintf(length, "%d", (int) strlen(var));
                         new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
                         (yyval.str) = var;
-                }
+                ;}
     break;
 
   case 2308:
-
-/* Line 1806 of yacc.c  */
 #line 12946 "preproc.y"
     {
                         char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -46412,177 +42259,129 @@
                         sprintf(length, "%d", (int) strlen(var));
                         new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
                         (yyval.str) = var;
-                }
+                ;}
     break;
 
   case 2309:
-
-/* Line 1806 of yacc.c  */
 #line 12957 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_cardinality; }
+    { (yyval.dtype_enum) = ECPGd_cardinality; ;}
     break;
 
   case 2310:
-
-/* Line 1806 of yacc.c  */
 #line 12958 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_data; }
+    { (yyval.dtype_enum) = ECPGd_data; ;}
     break;
 
   case 2311:
-
-/* Line 1806 of yacc.c  */
 #line 12959 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_di_code; }
+    { (yyval.dtype_enum) = ECPGd_di_code; ;}
     break;
 
   case 2312:
-
-/* Line 1806 of yacc.c  */
 #line 12960 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_di_precision; }
+    { (yyval.dtype_enum) = ECPGd_di_precision; ;}
     break;
 
   case 2313:
-
-/* Line 1806 of yacc.c  */
 #line 12961 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_indicator; }
+    { (yyval.dtype_enum) = ECPGd_indicator; ;}
     break;
 
   case 2314:
-
-/* Line 1806 of yacc.c  */
 #line 12962 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_key_member; }
+    { (yyval.dtype_enum) = ECPGd_key_member; ;}
     break;
 
   case 2315:
-
-/* Line 1806 of yacc.c  */
 #line 12963 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_length; }
+    { (yyval.dtype_enum) = ECPGd_length; ;}
     break;
 
   case 2316:
-
-/* Line 1806 of yacc.c  */
 #line 12964 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_name; }
+    { (yyval.dtype_enum) = ECPGd_name; ;}
     break;
 
   case 2317:
-
-/* Line 1806 of yacc.c  */
 #line 12965 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_nullable; }
+    { (yyval.dtype_enum) = ECPGd_nullable; ;}
     break;
 
   case 2318:
-
-/* Line 1806 of yacc.c  */
 #line 12966 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_octet; }
+    { (yyval.dtype_enum) = ECPGd_octet; ;}
     break;
 
   case 2319:
-
-/* Line 1806 of yacc.c  */
 #line 12967 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_precision; }
+    { (yyval.dtype_enum) = ECPGd_precision; ;}
     break;
 
   case 2320:
-
-/* Line 1806 of yacc.c  */
 #line 12968 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_length; }
+    { (yyval.dtype_enum) = ECPGd_length; ;}
     break;
 
   case 2321:
-
-/* Line 1806 of yacc.c  */
 #line 12969 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_ret_octet; }
+    { (yyval.dtype_enum) = ECPGd_ret_octet; ;}
     break;
 
   case 2322:
-
-/* Line 1806 of yacc.c  */
 #line 12970 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_scale; }
+    { (yyval.dtype_enum) = ECPGd_scale; ;}
     break;
 
   case 2323:
-
-/* Line 1806 of yacc.c  */
 #line 12971 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_type; }
+    { (yyval.dtype_enum) = ECPGd_type; ;}
     break;
 
   case 2324:
-
-/* Line 1806 of yacc.c  */
 #line 12978 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2325:
-
-/* Line 1806 of yacc.c  */
 #line 12979 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2326:
-
-/* Line 1806 of yacc.c  */
 #line 12982 "preproc.y"
-    { (yyval.str) = make_str("on"); }
+    { (yyval.str) = make_str("on"); ;}
     break;
 
   case 2327:
-
-/* Line 1806 of yacc.c  */
 #line 12983 "preproc.y"
-    { (yyval.str) = make_str("off"); }
+    { (yyval.str) = make_str("off"); ;}
     break;
 
   case 2328:
-
-/* Line 1806 of yacc.c  */
 #line 12990 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2329:
-
-/* Line 1806 of yacc.c  */
 #line 12991 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2330:
-
-/* Line 1806 of yacc.c  */
 #line 12992 "preproc.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 2331:
-
-/* Line 1806 of yacc.c  */
 #line 12999 "preproc.y"
     {
 			/* reset this variable so we see if there was */
 			/* an initializer specified */
 			initializer = 0;
-		}
+		;}
     break;
 
   case 2332:
-
-/* Line 1806 of yacc.c  */
 #line 13005 "preproc.y"
     {
 			add_typedef((yyvsp[(3) - (7)].str), (yyvsp[(6) - (7)].index).index1, (yyvsp[(6) - (7)].index).index2, (yyvsp[(5) - (7)].type).type_enum, (yyvsp[(5) - (7)].type).type_dimension, (yyvsp[(5) - (7)].type).type_index, initializer, *(yyvsp[(7) - (7)].str) ? 1 : 0);
@@ -46591,37 +42390,29 @@
 				(yyval.str) = cat_str(7, make_str("/* exec sql type"), mm_strdup((yyvsp[(3) - (7)].str)), make_str("is"), mm_strdup((yyvsp[(5) - (7)].type).type_str), mm_strdup((yyvsp[(6) - (7)].index).str), (yyvsp[(7) - (7)].str), make_str("*/"));
 			else
 				(yyval.str) = cat_str(6, make_str("typedef "), mm_strdup((yyvsp[(5) - (7)].type).type_str), *(yyvsp[(7) - (7)].str)?make_str("*"):make_str(""), mm_strdup((yyvsp[(6) - (7)].index).str), mm_strdup((yyvsp[(3) - (7)].str)), make_str(";"));
-		}
+		;}
     break;
 
   case 2333:
-
-/* Line 1806 of yacc.c  */
 #line 13015 "preproc.y"
-    { (yyval.str) = make_str("reference"); }
+    { (yyval.str) = make_str("reference"); ;}
     break;
 
   case 2334:
-
-/* Line 1806 of yacc.c  */
 #line 13016 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2335:
-
-/* Line 1806 of yacc.c  */
 #line 13023 "preproc.y"
     {
 			/* reset this variable so we see if there was */
 			/* an initializer specified */
 			initializer = 0;
-		}
+		;}
     break;
 
   case 2336:
-
-/* Line 1806 of yacc.c  */
 #line 13029 "preproc.y"
     {
 			struct variable *p = find_variable((yyvsp[(3) - (7)].str));
@@ -46679,861 +42470,631 @@
 			}
 
 			(yyval.str) = cat_str(7, make_str("/* exec sql var"), mm_strdup((yyvsp[(3) - (7)].str)), make_str("is"), mm_strdup((yyvsp[(5) - (7)].type).type_str), mm_strdup((yyvsp[(6) - (7)].index).str), (yyvsp[(7) - (7)].str), make_str("*/"));
-		}
+		;}
     break;
 
   case 2337:
-
-/* Line 1806 of yacc.c  */
 #line 13093 "preproc.y"
     {
 			when_error.code = (yyvsp[(3) - (3)].action).code;
 			when_error.command = (yyvsp[(3) - (3)].action).command;
 			(yyval.str) = cat_str(3, make_str("/* exec sql whenever sqlerror "), (yyvsp[(3) - (3)].action).str, make_str("; */"));
-		}
+		;}
     break;
 
   case 2338:
-
-/* Line 1806 of yacc.c  */
 #line 13099 "preproc.y"
     {
 			when_nf.code = (yyvsp[(4) - (4)].action).code;
 			when_nf.command = (yyvsp[(4) - (4)].action).command;
 			(yyval.str) = cat_str(3, make_str("/* exec sql whenever not found "), (yyvsp[(4) - (4)].action).str, make_str("; */"));
-		}
+		;}
     break;
 
   case 2339:
-
-/* Line 1806 of yacc.c  */
 #line 13105 "preproc.y"
     {
 			when_warn.code = (yyvsp[(3) - (3)].action).code;
 			when_warn.command = (yyvsp[(3) - (3)].action).command;
 			(yyval.str) = cat_str(3, make_str("/* exec sql whenever sql_warning "), (yyvsp[(3) - (3)].action).str, make_str("; */"));
-		}
+		;}
     break;
 
   case 2340:
-
-/* Line 1806 of yacc.c  */
 #line 13113 "preproc.y"
     {
 			(yyval.action).code = W_NOTHING;
 			(yyval.action).command = NULL;
 			(yyval.action).str = make_str("continue");
-		}
+		;}
     break;
 
   case 2341:
-
-/* Line 1806 of yacc.c  */
 #line 13119 "preproc.y"
     {
 			(yyval.action).code = W_SQLPRINT;
 			(yyval.action).command = NULL;
 			(yyval.action).str = make_str("sqlprint");
-		}
+		;}
     break;
 
   case 2342:
-
-/* Line 1806 of yacc.c  */
 #line 13125 "preproc.y"
     {
 			(yyval.action).code = W_STOP;
 			(yyval.action).command = NULL;
 			(yyval.action).str = make_str("stop");
-		}
+		;}
     break;
 
   case 2343:
-
-/* Line 1806 of yacc.c  */
 #line 13131 "preproc.y"
     {
 			(yyval.action).code = W_GOTO;
 			(yyval.action).command = strdup((yyvsp[(2) - (2)].str));
 			(yyval.action).str = cat2_str(make_str("goto "), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2344:
-
-/* Line 1806 of yacc.c  */
 #line 13137 "preproc.y"
     {
 			(yyval.action).code = W_GOTO;
 			(yyval.action).command = strdup((yyvsp[(3) - (3)].str));
 			(yyval.action).str = cat2_str(make_str("goto "), (yyvsp[(3) - (3)].str));
-		}
+		;}
     break;
 
   case 2345:
-
-/* Line 1806 of yacc.c  */
 #line 13143 "preproc.y"
     {
 			(yyval.action).code = W_DO;
 			(yyval.action).command = cat_str(4, (yyvsp[(2) - (5)].str), make_str("("), (yyvsp[(4) - (5)].str), make_str(")"));
 			(yyval.action).str = cat2_str(make_str("do"), mm_strdup((yyval.action).command));
-		}
+		;}
     break;
 
   case 2346:
-
-/* Line 1806 of yacc.c  */
 #line 13149 "preproc.y"
     {
 			(yyval.action).code = W_BREAK;
 			(yyval.action).command = NULL;
 			(yyval.action).str = make_str("break");
-		}
+		;}
     break;
 
   case 2347:
-
-/* Line 1806 of yacc.c  */
 #line 13155 "preproc.y"
     {
 			(yyval.action).code = W_DO;
 			(yyval.action).command = cat_str(4, (yyvsp[(2) - (5)].str), make_str("("), (yyvsp[(4) - (5)].str), make_str(")"));
 			(yyval.action).str = cat2_str(make_str("call"), mm_strdup((yyval.action).command));
-		}
+		;}
     break;
 
   case 2348:
-
-/* Line 1806 of yacc.c  */
 #line 13161 "preproc.y"
     {
 			(yyval.action).code = W_DO;
 			(yyval.action).command = cat2_str((yyvsp[(2) - (2)].str), make_str("()"));
 			(yyval.action).str = cat2_str(make_str("call"), mm_strdup((yyval.action).command));
-		}
+		;}
     break;
 
   case 2349:
-
-/* Line 1806 of yacc.c  */
 #line 13171 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2350:
-
-/* Line 1806 of yacc.c  */
 #line 13172 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2351:
-
-/* Line 1806 of yacc.c  */
 #line 13175 "preproc.y"
-    { (yyval.str) = make_str("break"); }
+    { (yyval.str) = make_str("break"); ;}
     break;
 
   case 2352:
-
-/* Line 1806 of yacc.c  */
 #line 13176 "preproc.y"
-    { (yyval.str) = make_str("call"); }
+    { (yyval.str) = make_str("call"); ;}
     break;
 
   case 2353:
-
-/* Line 1806 of yacc.c  */
 #line 13177 "preproc.y"
-    { (yyval.str) = make_str("cardinality"); }
+    { (yyval.str) = make_str("cardinality"); ;}
     break;
 
   case 2354:
-
-/* Line 1806 of yacc.c  */
 #line 13178 "preproc.y"
-    { (yyval.str) = make_str("count"); }
+    { (yyval.str) = make_str("count"); ;}
     break;
 
   case 2355:
-
-/* Line 1806 of yacc.c  */
 #line 13179 "preproc.y"
-    { (yyval.str) = make_str("datetime_interval_code"); }
+    { (yyval.str) = make_str("datetime_interval_code"); ;}
     break;
 
   case 2356:
-
-/* Line 1806 of yacc.c  */
 #line 13180 "preproc.y"
-    { (yyval.str) = make_str("datetime_interval_precision"); }
+    { (yyval.str) = make_str("datetime_interval_precision"); ;}
     break;
 
   case 2357:
-
-/* Line 1806 of yacc.c  */
 #line 13181 "preproc.y"
-    { (yyval.str) = make_str("found"); }
+    { (yyval.str) = make_str("found"); ;}
     break;
 
   case 2358:
-
-/* Line 1806 of yacc.c  */
 #line 13182 "preproc.y"
-    { (yyval.str) = make_str("go"); }
+    { (yyval.str) = make_str("go"); ;}
     break;
 
   case 2359:
-
-/* Line 1806 of yacc.c  */
 #line 13183 "preproc.y"
-    { (yyval.str) = make_str("goto"); }
+    { (yyval.str) = make_str("goto"); ;}
     break;
 
   case 2360:
-
-/* Line 1806 of yacc.c  */
 #line 13184 "preproc.y"
-    { (yyval.str) = make_str("identified"); }
+    { (yyval.str) = make_str("identified"); ;}
     break;
 
   case 2361:
-
-/* Line 1806 of yacc.c  */
 #line 13185 "preproc.y"
-    { (yyval.str) = make_str("indicator"); }
+    { (yyval.str) = make_str("indicator"); ;}
     break;
 
   case 2362:
-
-/* Line 1806 of yacc.c  */
 #line 13186 "preproc.y"
-    { (yyval.str) = make_str("key_member"); }
+    { (yyval.str) = make_str("key_member"); ;}
     break;
 
   case 2363:
-
-/* Line 1806 of yacc.c  */
 #line 13187 "preproc.y"
-    { (yyval.str) = make_str("length"); }
+    { (yyval.str) = make_str("length"); ;}
     break;
 
   case 2364:
-
-/* Line 1806 of yacc.c  */
 #line 13188 "preproc.y"
-    { (yyval.str) = make_str("nullable"); }
+    { (yyval.str) = make_str("nullable"); ;}
     break;
 
   case 2365:
-
-/* Line 1806 of yacc.c  */
 #line 13189 "preproc.y"
-    { (yyval.str) = make_str("octet_length"); }
+    { (yyval.str) = make_str("octet_length"); ;}
     break;
 
   case 2366:
-
-/* Line 1806 of yacc.c  */
 #line 13190 "preproc.y"
-    { (yyval.str) = make_str("returned_length"); }
+    { (yyval.str) = make_str("returned_length"); ;}
     break;
 
   case 2367:
-
-/* Line 1806 of yacc.c  */
 #line 13191 "preproc.y"
-    { (yyval.str) = make_str("returned_octet_length"); }
+    { (yyval.str) = make_str("returned_octet_length"); ;}
     break;
 
   case 2368:
-
-/* Line 1806 of yacc.c  */
 #line 13192 "preproc.y"
-    { (yyval.str) = make_str("scale"); }
+    { (yyval.str) = make_str("scale"); ;}
     break;
 
   case 2369:
-
-/* Line 1806 of yacc.c  */
 #line 13193 "preproc.y"
-    { (yyval.str) = make_str("section"); }
+    { (yyval.str) = make_str("section"); ;}
     break;
 
   case 2370:
-
-/* Line 1806 of yacc.c  */
 #line 13194 "preproc.y"
-    { (yyval.str) = make_str("sql"); }
+    { (yyval.str) = make_str("sql"); ;}
     break;
 
   case 2371:
-
-/* Line 1806 of yacc.c  */
 #line 13195 "preproc.y"
-    { (yyval.str) = make_str("sqlerror"); }
+    { (yyval.str) = make_str("sqlerror"); ;}
     break;
 
   case 2372:
-
-/* Line 1806 of yacc.c  */
 #line 13196 "preproc.y"
-    { (yyval.str) = make_str("sqlprint"); }
+    { (yyval.str) = make_str("sqlprint"); ;}
     break;
 
   case 2373:
-
-/* Line 1806 of yacc.c  */
 #line 13197 "preproc.y"
-    { (yyval.str) = make_str("sqlwarning"); }
+    { (yyval.str) = make_str("sqlwarning"); ;}
     break;
 
   case 2374:
-
-/* Line 1806 of yacc.c  */
 #line 13198 "preproc.y"
-    { (yyval.str) = make_str("stop"); }
+    { (yyval.str) = make_str("stop"); ;}
     break;
 
   case 2375:
-
-/* Line 1806 of yacc.c  */
 #line 13201 "preproc.y"
-    { (yyval.str) = make_str("connect"); }
+    { (yyval.str) = make_str("connect"); ;}
     break;
 
   case 2376:
-
-/* Line 1806 of yacc.c  */
 #line 13202 "preproc.y"
-    { (yyval.str) = make_str("describe"); }
+    { (yyval.str) = make_str("describe"); ;}
     break;
 
   case 2377:
-
-/* Line 1806 of yacc.c  */
 #line 13203 "preproc.y"
-    { (yyval.str) = make_str("disconnect"); }
+    { (yyval.str) = make_str("disconnect"); ;}
     break;
 
   case 2378:
-
-/* Line 1806 of yacc.c  */
 #line 13204 "preproc.y"
-    { (yyval.str) = make_str("open"); }
+    { (yyval.str) = make_str("open"); ;}
     break;
 
   case 2379:
-
-/* Line 1806 of yacc.c  */
 #line 13205 "preproc.y"
-    { (yyval.str) = make_str("var"); }
+    { (yyval.str) = make_str("var"); ;}
     break;
 
   case 2380:
-
-/* Line 1806 of yacc.c  */
 #line 13206 "preproc.y"
-    { (yyval.str) = make_str("whenever"); }
+    { (yyval.str) = make_str("whenever"); ;}
     break;
 
   case 2381:
-
-/* Line 1806 of yacc.c  */
 #line 13210 "preproc.y"
-    { (yyval.str) = make_str("bool"); }
+    { (yyval.str) = make_str("bool"); ;}
     break;
 
   case 2382:
-
-/* Line 1806 of yacc.c  */
 #line 13211 "preproc.y"
-    { (yyval.str) = make_str("long"); }
+    { (yyval.str) = make_str("long"); ;}
     break;
 
   case 2383:
-
-/* Line 1806 of yacc.c  */
 #line 13212 "preproc.y"
-    { (yyval.str) = make_str("output"); }
+    { (yyval.str) = make_str("output"); ;}
     break;
 
   case 2384:
-
-/* Line 1806 of yacc.c  */
 #line 13213 "preproc.y"
-    { (yyval.str) = make_str("short"); }
+    { (yyval.str) = make_str("short"); ;}
     break;
 
   case 2385:
-
-/* Line 1806 of yacc.c  */
 #line 13214 "preproc.y"
-    { (yyval.str) = make_str("struct"); }
+    { (yyval.str) = make_str("struct"); ;}
     break;
 
   case 2386:
-
-/* Line 1806 of yacc.c  */
 #line 13215 "preproc.y"
-    { (yyval.str) = make_str("signed"); }
+    { (yyval.str) = make_str("signed"); ;}
     break;
 
   case 2387:
-
-/* Line 1806 of yacc.c  */
 #line 13216 "preproc.y"
-    { (yyval.str) = make_str("unsigned"); }
+    { (yyval.str) = make_str("unsigned"); ;}
     break;
 
   case 2388:
-
-/* Line 1806 of yacc.c  */
 #line 13219 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2389:
-
-/* Line 1806 of yacc.c  */
 #line 13222 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2390:
-
-/* Line 1806 of yacc.c  */
 #line 13223 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2391:
-
-/* Line 1806 of yacc.c  */
 #line 13224 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2392:
-
-/* Line 1806 of yacc.c  */
 #line 13225 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2393:
-
-/* Line 1806 of yacc.c  */
 #line 13226 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2394:
-
-/* Line 1806 of yacc.c  */
 #line 13227 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2395:
-
-/* Line 1806 of yacc.c  */
 #line 13228 "preproc.y"
-    { (yyval.str) = make_str("char"); }
+    { (yyval.str) = make_str("char"); ;}
     break;
 
   case 2396:
-
-/* Line 1806 of yacc.c  */
 #line 13229 "preproc.y"
-    { (yyval.str) = make_str("values"); }
+    { (yyval.str) = make_str("values"); ;}
     break;
 
   case 2397:
-
-/* Line 1806 of yacc.c  */
 #line 13242 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2398:
-
-/* Line 1806 of yacc.c  */
 #line 13243 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2399:
-
-/* Line 1806 of yacc.c  */
 #line 13244 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2400:
-
-/* Line 1806 of yacc.c  */
 #line 13245 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2401:
-
-/* Line 1806 of yacc.c  */
 #line 13246 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2402:
-
-/* Line 1806 of yacc.c  */
 #line 13247 "preproc.y"
-    { (yyval.str) = make_str("char"); }
+    { (yyval.str) = make_str("char"); ;}
     break;
 
   case 2403:
-
-/* Line 1806 of yacc.c  */
 #line 13248 "preproc.y"
-    { (yyval.str) = make_str("values"); }
+    { (yyval.str) = make_str("values"); ;}
     break;
 
   case 2404:
-
-/* Line 1806 of yacc.c  */
 #line 13253 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2405:
-
-/* Line 1806 of yacc.c  */
 #line 13254 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2406:
-
-/* Line 1806 of yacc.c  */
 #line 13255 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2407:
-
-/* Line 1806 of yacc.c  */
 #line 13256 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2408:
-
-/* Line 1806 of yacc.c  */
 #line 13257 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2409:
-
-/* Line 1806 of yacc.c  */
 #line 13258 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2410:
-
-/* Line 1806 of yacc.c  */
 #line 13264 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2411:
-
-/* Line 1806 of yacc.c  */
 #line 13265 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2412:
-
-/* Line 1806 of yacc.c  */
 #line 13266 "preproc.y"
-    { (yyval.str) = make_str("char"); }
+    { (yyval.str) = make_str("char"); ;}
     break;
 
   case 2413:
-
-/* Line 1806 of yacc.c  */
 #line 13267 "preproc.y"
-    { (yyval.str) = make_str("current"); }
+    { (yyval.str) = make_str("current"); ;}
     break;
 
   case 2414:
-
-/* Line 1806 of yacc.c  */
 #line 13268 "preproc.y"
-    { (yyval.str) = make_str("input"); }
+    { (yyval.str) = make_str("input"); ;}
     break;
 
   case 2415:
-
-/* Line 1806 of yacc.c  */
 #line 13269 "preproc.y"
-    { (yyval.str) = make_str("int"); }
+    { (yyval.str) = make_str("int"); ;}
     break;
 
   case 2416:
-
-/* Line 1806 of yacc.c  */
 #line 13270 "preproc.y"
-    { (yyval.str) = make_str("to"); }
+    { (yyval.str) = make_str("to"); ;}
     break;
 
   case 2417:
-
-/* Line 1806 of yacc.c  */
 #line 13271 "preproc.y"
-    { (yyval.str) = make_str("union"); }
+    { (yyval.str) = make_str("union"); ;}
     break;
 
   case 2418:
-
-/* Line 1806 of yacc.c  */
 #line 13272 "preproc.y"
-    { (yyval.str) = make_str("values"); }
+    { (yyval.str) = make_str("values"); ;}
     break;
 
   case 2419:
-
-/* Line 1806 of yacc.c  */
 #line 13273 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2420:
-
-/* Line 1806 of yacc.c  */
 #line 13274 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2421:
-
-/* Line 1806 of yacc.c  */
 #line 13277 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2422:
-
-/* Line 1806 of yacc.c  */
 #line 13278 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2423:
-
-/* Line 1806 of yacc.c  */
 #line 13279 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2424:
-
-/* Line 1806 of yacc.c  */
 #line 13280 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2425:
-
-/* Line 1806 of yacc.c  */
 #line 13281 "preproc.y"
-    { (yyval.str) = make_str("connection"); }
+    { (yyval.str) = make_str("connection"); ;}
     break;
 
   case 2426:
-
-/* Line 1806 of yacc.c  */
 #line 13284 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2427:
-
-/* Line 1806 of yacc.c  */
 #line 13285 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2428:
-
-/* Line 1806 of yacc.c  */
 #line 13286 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2429:
-
-/* Line 1806 of yacc.c  */
 #line 13287 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2430:
-
-/* Line 1806 of yacc.c  */
 #line 13290 "preproc.y"
-    { (yyval.str) = make_str("auto"); }
+    { (yyval.str) = make_str("auto"); ;}
     break;
 
   case 2431:
-
-/* Line 1806 of yacc.c  */
 #line 13291 "preproc.y"
-    { (yyval.str) = make_str("const"); }
+    { (yyval.str) = make_str("const"); ;}
     break;
 
   case 2432:
-
-/* Line 1806 of yacc.c  */
 #line 13292 "preproc.y"
-    { (yyval.str) = make_str("extern"); }
+    { (yyval.str) = make_str("extern"); ;}
     break;
 
   case 2433:
-
-/* Line 1806 of yacc.c  */
 #line 13293 "preproc.y"
-    { (yyval.str) = make_str("register"); }
+    { (yyval.str) = make_str("register"); ;}
     break;
 
   case 2434:
-
-/* Line 1806 of yacc.c  */
 #line 13294 "preproc.y"
-    { (yyval.str) = make_str("static"); }
+    { (yyval.str) = make_str("static"); ;}
     break;
 
   case 2435:
-
-/* Line 1806 of yacc.c  */
 #line 13295 "preproc.y"
-    { (yyval.str) = make_str("typedef"); }
+    { (yyval.str) = make_str("typedef"); ;}
     break;
 
   case 2436:
-
-/* Line 1806 of yacc.c  */
 #line 13296 "preproc.y"
-    { (yyval.str) = make_str("volatile"); }
+    { (yyval.str) = make_str("volatile"); ;}
     break;
 
   case 2437:
-
-/* Line 1806 of yacc.c  */
 #line 13313 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2438:
-
-/* Line 1806 of yacc.c  */
 #line 13314 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2439:
-
-/* Line 1806 of yacc.c  */
 #line 13315 "preproc.y"
-    { (yyval.str) = make_str("connection"); }
+    { (yyval.str) = make_str("connection"); ;}
     break;
 
   case 2440:
-
-/* Line 1806 of yacc.c  */
 #line 13318 "preproc.y"
-    { (yyval.str) = make_str("day"); }
+    { (yyval.str) = make_str("day"); ;}
     break;
 
   case 2441:
-
-/* Line 1806 of yacc.c  */
 #line 13319 "preproc.y"
-    { (yyval.str) = make_str("hour"); }
+    { (yyval.str) = make_str("hour"); ;}
     break;
 
   case 2442:
-
-/* Line 1806 of yacc.c  */
 #line 13320 "preproc.y"
-    { (yyval.str) = make_str("minute"); }
+    { (yyval.str) = make_str("minute"); ;}
     break;
 
   case 2443:
-
-/* Line 1806 of yacc.c  */
 #line 13321 "preproc.y"
-    { (yyval.str) = make_str("month"); }
+    { (yyval.str) = make_str("month"); ;}
     break;
 
   case 2444:
-
-/* Line 1806 of yacc.c  */
 #line 13322 "preproc.y"
-    { (yyval.str) = make_str("second"); }
+    { (yyval.str) = make_str("second"); ;}
     break;
 
   case 2445:
-
-/* Line 1806 of yacc.c  */
 #line 13323 "preproc.y"
-    { (yyval.str) = make_str("year"); }
+    { (yyval.str) = make_str("year"); ;}
     break;
 
   case 2448:
-
-/* Line 1806 of yacc.c  */
 #line 13330 "preproc.y"
     {
 				reset_variables();
 				pacounter = 1;
-			}
+			;}
     break;
 
   case 2449:
-
-/* Line 1806 of yacc.c  */
 #line 13336 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2450:
-
-/* Line 1806 of yacc.c  */
 #line 13337 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2451:
-
-/* Line 1806 of yacc.c  */
 #line 13341 "preproc.y"
-    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (2)].str)), find_variable((yyvsp[(2) - (2)].str))); }
+    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (2)].str)), find_variable((yyvsp[(2) - (2)].str))); ;}
     break;
 
   case 2452:
-
-/* Line 1806 of yacc.c  */
 #line 13343 "preproc.y"
-    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (1)].str)), &no_indicator); }
+    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (1)].str)), &no_indicator); ;}
     break;
 
   case 2453:
-
-/* Line 1806 of yacc.c  */
 #line 13348 "preproc.y"
     {
 			if (find_variable((yyvsp[(2) - (2)].str))->type->type == ECPGt_array)
@@ -47541,12 +43102,10 @@
 
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[(1) - (2)].str)), find_variable((yyvsp[(2) - (2)].str)));
 			(yyval.str) = create_questionmarks((yyvsp[(1) - (2)].str), false);
-		}
+		;}
     break;
 
   case 2454:
-
-/* Line 1806 of yacc.c  */
 #line 13358 "preproc.y"
     {
 			char *ptr = strstr((yyvsp[(1) - (1)].str), ".arr");
@@ -47555,43 +43114,33 @@
 				*ptr = '\0';
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[(1) - (1)].str)), &no_indicator);
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2455:
-
-/* Line 1806 of yacc.c  */
 #line 13369 "preproc.y"
     {
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[(1) - (1)].str)), &no_indicator);
 			(yyval.str) = create_questionmarks((yyvsp[(1) - (1)].str), false);
-		}
+		;}
     break;
 
   case 2456:
-
-/* Line 1806 of yacc.c  */
 #line 13375 "preproc.y"
-    { check_indicator((find_variable((yyvsp[(1) - (1)].str)))->type); (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { check_indicator((find_variable((yyvsp[(1) - (1)].str)))->type); (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2457:
-
-/* Line 1806 of yacc.c  */
 #line 13376 "preproc.y"
-    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2458:
-
-/* Line 1806 of yacc.c  */
 #line 13377 "preproc.y"
-    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2459:
-
-/* Line 1806 of yacc.c  */
 #line 13381 "preproc.y"
     {
 			/* As long as multidimensional arrays are not implemented we have to check for those here */
@@ -47622,33 +43171,25 @@
 				}
 			}
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2460:
-
-/* Line 1806 of yacc.c  */
 #line 13413 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2461:
-
-/* Line 1806 of yacc.c  */
 #line 13415 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2462:
-
-/* Line 1806 of yacc.c  */
 #line 13417 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2463:
-
-/* Line 1806 of yacc.c  */
 #line 13421 "preproc.y"
     {
 			/* could have been input as '' or $$ */
@@ -47658,12 +43199,10 @@
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+1]='\'';
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+2]='\0';
 			free((yyvsp[(1) - (1)].str));
-		}
+		;}
     break;
 
   case 2464:
-
-/* Line 1806 of yacc.c  */
 #line 13431 "preproc.y"
     {
 			(yyval.str) = (char *)mm_alloc(strlen((yyvsp[(1) - (1)].str)) + 4);
@@ -47673,12 +43212,10 @@
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+2]='\'';
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+3]='\0';
 			free((yyvsp[(1) - (1)].str));
-		}
+		;}
     break;
 
   case 2465:
-
-/* Line 1806 of yacc.c  */
 #line 13441 "preproc.y"
     {
 			(yyval.str) = (char *)mm_alloc(strlen((yyvsp[(1) - (1)].str)) + 4);
@@ -47688,705 +43225,505 @@
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+2]='\'';
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+3]='\0';
 			free((yyvsp[(1) - (1)].str));
-		}
+		;}
     break;
 
   case 2466:
-
-/* Line 1806 of yacc.c  */
 #line 13450 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2467:
-
-/* Line 1806 of yacc.c  */
 #line 13451 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2468:
-
-/* Line 1806 of yacc.c  */
 #line 13454 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2469:
-
-/* Line 1806 of yacc.c  */
 #line 13456 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2470:
-
-/* Line 1806 of yacc.c  */
 #line 13457 "preproc.y"
-    { (yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\"")); }
+    { (yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\"")); ;}
     break;
 
   case 2471:
-
-/* Line 1806 of yacc.c  */
 #line 13458 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2472:
-
-/* Line 1806 of yacc.c  */
 #line 13462 "preproc.y"
-    { (yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\"")); }
+    { (yyval.str) = make3_str(make_str("\""), (yyvsp[(1) - (1)].str), make_str("\"")); ;}
     break;
 
   case 2473:
-
-/* Line 1806 of yacc.c  */
 #line 13464 "preproc.y"
-    { (yyval.str) = make3_str(make_str("("), (yyvsp[(1) - (1)].str), make_str(")")); }
+    { (yyval.str) = make3_str(make_str("("), (yyvsp[(1) - (1)].str), make_str(")")); ;}
     break;
 
   case 2474:
-
-/* Line 1806 of yacc.c  */
 #line 13471 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2475:
-
-/* Line 1806 of yacc.c  */
 #line 13472 "preproc.y"
-    { (yyval.str) = make_str("()"); }
+    { (yyval.str) = make_str("()"); ;}
     break;
 
   case 2476:
-
-/* Line 1806 of yacc.c  */
 #line 13474 "preproc.y"
-    { (yyval.str) = cat_str(3, make_str("("), (yyvsp[(2) - (3)].str), make_str(")")); }
+    { (yyval.str) = cat_str(3, make_str("("), (yyvsp[(2) - (3)].str), make_str(")")); ;}
     break;
 
   case 2477:
-
-/* Line 1806 of yacc.c  */
 #line 13477 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2478:
-
-/* Line 1806 of yacc.c  */
 #line 13479 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2479:
-
-/* Line 1806 of yacc.c  */
 #line 13482 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2480:
-
-/* Line 1806 of yacc.c  */
 #line 13483 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str(","), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str(","), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2481:
-
-/* Line 1806 of yacc.c  */
 #line 13486 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2482:
-
-/* Line 1806 of yacc.c  */
 #line 13487 "preproc.y"
-    { (yyval.str) = cat_str(3, make_str("{"), (yyvsp[(2) - (3)].str), make_str("}")); }
+    { (yyval.str) = cat_str(3, make_str("{"), (yyvsp[(2) - (3)].str), make_str("}")); ;}
     break;
 
   case 2483:
-
-/* Line 1806 of yacc.c  */
 #line 13490 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2484:
-
-/* Line 1806 of yacc.c  */
 #line 13491 "preproc.y"
-    { (yyval.str) = make_str("("); }
+    { (yyval.str) = make_str("("); ;}
     break;
 
   case 2485:
-
-/* Line 1806 of yacc.c  */
 #line 13492 "preproc.y"
-    { (yyval.str) = make_str(")"); }
+    { (yyval.str) = make_str(")"); ;}
     break;
 
   case 2486:
-
-/* Line 1806 of yacc.c  */
 #line 13493 "preproc.y"
-    { (yyval.str) = make_str(","); }
+    { (yyval.str) = make_str(","); ;}
     break;
 
   case 2487:
-
-/* Line 1806 of yacc.c  */
 #line 13494 "preproc.y"
-    { (yyval.str) = make_str(";"); }
+    { (yyval.str) = make_str(";"); ;}
     break;
 
   case 2488:
-
-/* Line 1806 of yacc.c  */
 #line 13497 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2489:
-
-/* Line 1806 of yacc.c  */
 #line 13498 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2490:
-
-/* Line 1806 of yacc.c  */
 #line 13499 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2491:
-
-/* Line 1806 of yacc.c  */
 #line 13500 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2492:
-
-/* Line 1806 of yacc.c  */
 #line 13501 "preproc.y"
-    { (yyval.str) = make_str("*"); }
+    { (yyval.str) = make_str("*"); ;}
     break;
 
   case 2493:
-
-/* Line 1806 of yacc.c  */
 #line 13502 "preproc.y"
-    { (yyval.str) = make_str("+"); }
+    { (yyval.str) = make_str("+"); ;}
     break;
 
   case 2494:
-
-/* Line 1806 of yacc.c  */
 #line 13503 "preproc.y"
-    { (yyval.str) = make_str("-"); }
+    { (yyval.str) = make_str("-"); ;}
     break;
 
   case 2495:
-
-/* Line 1806 of yacc.c  */
 #line 13504 "preproc.y"
-    { (yyval.str) = make_str("/"); }
+    { (yyval.str) = make_str("/"); ;}
     break;
 
   case 2496:
-
-/* Line 1806 of yacc.c  */
 #line 13505 "preproc.y"
-    { (yyval.str) = make_str("%"); }
+    { (yyval.str) = make_str("%"); ;}
     break;
 
   case 2497:
-
-/* Line 1806 of yacc.c  */
 #line 13506 "preproc.y"
-    { (yyval.str) = make_str("NULL"); }
+    { (yyval.str) = make_str("NULL"); ;}
     break;
 
   case 2498:
-
-/* Line 1806 of yacc.c  */
 #line 13507 "preproc.y"
-    { (yyval.str) = make_str("+="); }
+    { (yyval.str) = make_str("+="); ;}
     break;
 
   case 2499:
-
-/* Line 1806 of yacc.c  */
 #line 13508 "preproc.y"
-    { (yyval.str) = make_str("&&"); }
+    { (yyval.str) = make_str("&&"); ;}
     break;
 
   case 2500:
-
-/* Line 1806 of yacc.c  */
 #line 13509 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2501:
-
-/* Line 1806 of yacc.c  */
 #line 13510 "preproc.y"
-    { (yyval.str) = make_str("auto"); }
+    { (yyval.str) = make_str("auto"); ;}
     break;
 
   case 2502:
-
-/* Line 1806 of yacc.c  */
 #line 13511 "preproc.y"
-    { (yyval.str) = make_str("const"); }
+    { (yyval.str) = make_str("const"); ;}
     break;
 
   case 2503:
-
-/* Line 1806 of yacc.c  */
 #line 13512 "preproc.y"
-    { (yyval.str) = make_str("--"); }
+    { (yyval.str) = make_str("--"); ;}
     break;
 
   case 2504:
-
-/* Line 1806 of yacc.c  */
 #line 13513 "preproc.y"
-    { (yyval.str) = make_str("/="); }
+    { (yyval.str) = make_str("/="); ;}
     break;
 
   case 2505:
-
-/* Line 1806 of yacc.c  */
 #line 13514 "preproc.y"
-    { (yyval.str) = make_str(".*"); }
+    { (yyval.str) = make_str(".*"); ;}
     break;
 
   case 2506:
-
-/* Line 1806 of yacc.c  */
 #line 13515 "preproc.y"
-    { (yyval.str) = make_str("=="); }
+    { (yyval.str) = make_str("=="); ;}
     break;
 
   case 2507:
-
-/* Line 1806 of yacc.c  */
 #line 13516 "preproc.y"
-    { (yyval.str) = make_str("extern"); }
+    { (yyval.str) = make_str("extern"); ;}
     break;
 
   case 2508:
-
-/* Line 1806 of yacc.c  */
 #line 13517 "preproc.y"
-    { (yyval.str) = make_str("++"); }
+    { (yyval.str) = make_str("++"); ;}
     break;
 
   case 2509:
-
-/* Line 1806 of yacc.c  */
 #line 13518 "preproc.y"
-    { (yyval.str) = make_str("<<"); }
+    { (yyval.str) = make_str("<<"); ;}
     break;
 
   case 2510:
-
-/* Line 1806 of yacc.c  */
 #line 13519 "preproc.y"
-    { (yyval.str) = make_str("->"); }
+    { (yyval.str) = make_str("->"); ;}
     break;
 
   case 2511:
-
-/* Line 1806 of yacc.c  */
 #line 13520 "preproc.y"
-    { (yyval.str) = make_str("->*"); }
+    { (yyval.str) = make_str("->*"); ;}
     break;
 
   case 2512:
-
-/* Line 1806 of yacc.c  */
 #line 13521 "preproc.y"
-    { (yyval.str) = make_str("%="); }
+    { (yyval.str) = make_str("%="); ;}
     break;
 
   case 2513:
-
-/* Line 1806 of yacc.c  */
 #line 13522 "preproc.y"
-    { (yyval.str) = make_str("*="); }
+    { (yyval.str) = make_str("*="); ;}
     break;
 
   case 2514:
-
-/* Line 1806 of yacc.c  */
 #line 13523 "preproc.y"
-    { (yyval.str) = make_str("!="); }
+    { (yyval.str) = make_str("!="); ;}
     break;
 
   case 2515:
-
-/* Line 1806 of yacc.c  */
 #line 13524 "preproc.y"
-    { (yyval.str) = make_str("||"); }
+    { (yyval.str) = make_str("||"); ;}
     break;
 
   case 2516:
-
-/* Line 1806 of yacc.c  */
 #line 13525 "preproc.y"
-    { (yyval.str) = make_str("register"); }
+    { (yyval.str) = make_str("register"); ;}
     break;
 
   case 2517:
-
-/* Line 1806 of yacc.c  */
 #line 13526 "preproc.y"
-    { (yyval.str) = make_str(">>"); }
+    { (yyval.str) = make_str(">>"); ;}
     break;
 
   case 2518:
-
-/* Line 1806 of yacc.c  */
 #line 13527 "preproc.y"
-    { (yyval.str) = make_str("static"); }
+    { (yyval.str) = make_str("static"); ;}
     break;
 
   case 2519:
-
-/* Line 1806 of yacc.c  */
 #line 13528 "preproc.y"
-    { (yyval.str) = make_str("-="); }
+    { (yyval.str) = make_str("-="); ;}
     break;
 
   case 2520:
-
-/* Line 1806 of yacc.c  */
 #line 13529 "preproc.y"
-    { (yyval.str) = make_str("typedef"); }
+    { (yyval.str) = make_str("typedef"); ;}
     break;
 
   case 2521:
-
-/* Line 1806 of yacc.c  */
 #line 13530 "preproc.y"
-    { (yyval.str) = make_str("volatile"); }
+    { (yyval.str) = make_str("volatile"); ;}
     break;
 
   case 2522:
-
-/* Line 1806 of yacc.c  */
 #line 13531 "preproc.y"
-    { (yyval.str) = make_str("bool"); }
+    { (yyval.str) = make_str("bool"); ;}
     break;
 
   case 2523:
-
-/* Line 1806 of yacc.c  */
 #line 13532 "preproc.y"
-    { (yyval.str) = make_str("enum"); }
+    { (yyval.str) = make_str("enum"); ;}
     break;
 
   case 2524:
-
-/* Line 1806 of yacc.c  */
 #line 13533 "preproc.y"
-    { (yyval.str) = make_str("hour"); }
+    { (yyval.str) = make_str("hour"); ;}
     break;
 
   case 2525:
-
-/* Line 1806 of yacc.c  */
 #line 13534 "preproc.y"
-    { (yyval.str) = make_str("int"); }
+    { (yyval.str) = make_str("int"); ;}
     break;
 
   case 2526:
-
-/* Line 1806 of yacc.c  */
 #line 13535 "preproc.y"
-    { (yyval.str) = make_str("long"); }
+    { (yyval.str) = make_str("long"); ;}
     break;
 
   case 2527:
-
-/* Line 1806 of yacc.c  */
 #line 13536 "preproc.y"
-    { (yyval.str) = make_str("minute"); }
+    { (yyval.str) = make_str("minute"); ;}
     break;
 
   case 2528:
-
-/* Line 1806 of yacc.c  */
 #line 13537 "preproc.y"
-    { (yyval.str) = make_str("month"); }
+    { (yyval.str) = make_str("month"); ;}
     break;
 
   case 2529:
-
-/* Line 1806 of yacc.c  */
 #line 13538 "preproc.y"
-    { (yyval.str) = make_str("second"); }
+    { (yyval.str) = make_str("second"); ;}
     break;
 
   case 2530:
-
-/* Line 1806 of yacc.c  */
 #line 13539 "preproc.y"
-    { (yyval.str) = make_str("short"); }
+    { (yyval.str) = make_str("short"); ;}
     break;
 
   case 2531:
-
-/* Line 1806 of yacc.c  */
 #line 13540 "preproc.y"
-    { (yyval.str) = make_str("signed"); }
+    { (yyval.str) = make_str("signed"); ;}
     break;
 
   case 2532:
-
-/* Line 1806 of yacc.c  */
 #line 13541 "preproc.y"
-    { (yyval.str) = make_str("struct"); }
+    { (yyval.str) = make_str("struct"); ;}
     break;
 
   case 2533:
-
-/* Line 1806 of yacc.c  */
 #line 13542 "preproc.y"
-    { (yyval.str) = make_str("unsigned"); }
+    { (yyval.str) = make_str("unsigned"); ;}
     break;
 
   case 2534:
-
-/* Line 1806 of yacc.c  */
 #line 13543 "preproc.y"
-    { (yyval.str) = make_str("year"); }
+    { (yyval.str) = make_str("year"); ;}
     break;
 
   case 2535:
-
-/* Line 1806 of yacc.c  */
 #line 13544 "preproc.y"
-    { (yyval.str) = make_str("char"); }
+    { (yyval.str) = make_str("char"); ;}
     break;
 
   case 2536:
-
-/* Line 1806 of yacc.c  */
 #line 13545 "preproc.y"
-    { (yyval.str) = make_str("float"); }
+    { (yyval.str) = make_str("float"); ;}
     break;
 
   case 2537:
-
-/* Line 1806 of yacc.c  */
 #line 13546 "preproc.y"
-    { (yyval.str) = make_str("to"); }
+    { (yyval.str) = make_str("to"); ;}
     break;
 
   case 2538:
-
-/* Line 1806 of yacc.c  */
 #line 13547 "preproc.y"
-    { (yyval.str) = make_str("union"); }
+    { (yyval.str) = make_str("union"); ;}
     break;
 
   case 2539:
-
-/* Line 1806 of yacc.c  */
 #line 13548 "preproc.y"
-    { (yyval.str) = make_str("varchar"); }
+    { (yyval.str) = make_str("varchar"); ;}
     break;
 
   case 2540:
-
-/* Line 1806 of yacc.c  */
 #line 13549 "preproc.y"
-    { (yyval.str) = make_str("["); }
+    { (yyval.str) = make_str("["); ;}
     break;
 
   case 2541:
-
-/* Line 1806 of yacc.c  */
 #line 13550 "preproc.y"
-    { (yyval.str) = make_str("]"); }
+    { (yyval.str) = make_str("]"); ;}
     break;
 
   case 2542:
-
-/* Line 1806 of yacc.c  */
 #line 13551 "preproc.y"
-    { (yyval.str) = make_str("="); }
+    { (yyval.str) = make_str("="); ;}
     break;
 
   case 2543:
-
-/* Line 1806 of yacc.c  */
 #line 13552 "preproc.y"
-    { (yyval.str) = make_str(":"); }
+    { (yyval.str) = make_str(":"); ;}
     break;
 
   case 2544:
-
-/* Line 1806 of yacc.c  */
 #line 13555 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2545:
-
-/* Line 1806 of yacc.c  */
 #line 13556 "preproc.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 2546:
-
-/* Line 1806 of yacc.c  */
 #line 13557 "preproc.y"
-    { (yyval.str) = make_str("all"); }
+    { (yyval.str) = make_str("all"); ;}
     break;
 
   case 2547:
-
-/* Line 1806 of yacc.c  */
 #line 13558 "preproc.y"
-    { (yyval.str) = make_str("all"); }
+    { (yyval.str) = make_str("all"); ;}
     break;
 
   case 2548:
-
-/* Line 1806 of yacc.c  */
 #line 13561 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2549:
-
-/* Line 1806 of yacc.c  */
 #line 13562 "preproc.y"
-    { (yyval.str) = cat_str(3, make_str("("), (yyvsp[(2) - (3)].str), make_str(")")); }
+    { (yyval.str) = cat_str(3, make_str("("), (yyvsp[(2) - (3)].str), make_str(")")); ;}
     break;
 
   case 2550:
-
-/* Line 1806 of yacc.c  */
 #line 13563 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("+"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("+"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2551:
-
-/* Line 1806 of yacc.c  */
 #line 13564 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("-"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("-"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2552:
-
-/* Line 1806 of yacc.c  */
 #line 13565 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("*"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("*"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2553:
-
-/* Line 1806 of yacc.c  */
 #line 13566 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("/"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("/"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2554:
-
-/* Line 1806 of yacc.c  */
 #line 13567 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("%"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), make_str("%"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2555:
-
-/* Line 1806 of yacc.c  */
 #line 13568 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2556:
-
-/* Line 1806 of yacc.c  */
 #line 13569 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2557:
-
-/* Line 1806 of yacc.c  */
 #line 13572 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2558:
-
-/* Line 1806 of yacc.c  */
 #line 13573 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2559:
-
-/* Line 1806 of yacc.c  */
 #line 13574 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2560:
-
-/* Line 1806 of yacc.c  */
 #line 13575 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2561:
-
-/* Line 1806 of yacc.c  */
 #line 13576 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2562:
-
-/* Line 1806 of yacc.c  */
 #line 13579 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2563:
-
-/* Line 1806 of yacc.c  */
 #line 13580 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2564:
-
-/* Line 1806 of yacc.c  */
 #line 13583 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2565:
-
-/* Line 1806 of yacc.c  */
 #line 13585 "preproc.y"
     {
 		struct variable *var;
@@ -48395,40 +43732,24 @@
 		remove_variable_from_list(&argsinsert, var);
 		add_variable_to_head(&argsresult, var, &no_indicator);
 		(yyval.str) = (yyvsp[(1) - (1)].str);
-	}
+	;}
     break;
 
   case 2566:
-
-/* Line 1806 of yacc.c  */
 #line 13595 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2567:
-
-/* Line 1806 of yacc.c  */
 #line 13596 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 48419 "preproc.c"
+/* Line 1267 of yacc.c.  */
+#line 43751 "preproc.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -48457,10 +43778,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -48468,44 +43785,45 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
-  yyerror_range[1] = yylloc;
+  yyerror_range[0] = yylloc;
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -48522,7 +43840,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -48538,7 +43856,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  yyerror_range[1] = yylsp[1-yylen];
+  yyerror_range[0] = yylsp[1-yylen];
   /* Do not reclaim the symbols of the rule which action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
@@ -48557,7 +43875,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -48572,7 +43890,7 @@
       if (yyssp == yyss)
 	YYABORT;
 
-      yyerror_range[1] = *yylsp;
+      yyerror_range[0] = *yylsp;
       yydestruct ("Error: popping",
 		  yystos[yystate], yyvsp, yylsp);
       YYPOPSTACK (1);
@@ -48580,12 +43898,15 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
-  yyerror_range[2] = yylloc;
+  yyerror_range[1] = yylloc;
   /* Using YYLLOC is tempting, but would change the location of
-     the lookahead.  YYLOC is available though.  */
-  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+     the look-ahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
   *++yylsp = yyloc;
 
   /* Shift the error token.  */
@@ -48609,7 +43930,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -48620,14 +43941,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, &yylloc);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, &yylloc);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -48651,8 +43967,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 13599 "preproc.y"
 
 
diff -Naur postgresql-9.0.17/src/interfaces/ecpg/preproc/preproc.h postgresql/src/interfaces/ecpg/preproc/preproc.h
--- postgresql-9.0.17/src/interfaces/ecpg/preproc/preproc.h	2014-03-17 12:55:48.000000000 -0700
+++ postgresql/src/interfaces/ecpg/preproc/preproc.h	2014-03-31 18:07:18.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -527,16 +529,503 @@
      UMINUS = 745
    };
 #endif
+/* Tokens.  */
+#define SQL_ALLOCATE 258
+#define SQL_AUTOCOMMIT 259
+#define SQL_BOOL 260
+#define SQL_BREAK 261
+#define SQL_CALL 262
+#define SQL_CARDINALITY 263
+#define SQL_CONNECT 264
+#define SQL_COUNT 265
+#define SQL_DATETIME_INTERVAL_CODE 266
+#define SQL_DATETIME_INTERVAL_PRECISION 267
+#define SQL_DESCRIBE 268
+#define SQL_DESCRIPTOR 269
+#define SQL_DISCONNECT 270
+#define SQL_FOUND 271
+#define SQL_FREE 272
+#define SQL_GET 273
+#define SQL_GO 274
+#define SQL_GOTO 275
+#define SQL_IDENTIFIED 276
+#define SQL_INDICATOR 277
+#define SQL_KEY_MEMBER 278
+#define SQL_LENGTH 279
+#define SQL_LONG 280
+#define SQL_NULLABLE 281
+#define SQL_OCTET_LENGTH 282
+#define SQL_OPEN 283
+#define SQL_OUTPUT 284
+#define SQL_REFERENCE 285
+#define SQL_RETURNED_LENGTH 286
+#define SQL_RETURNED_OCTET_LENGTH 287
+#define SQL_SCALE 288
+#define SQL_SECTION 289
+#define SQL_SHORT 290
+#define SQL_SIGNED 291
+#define SQL_SQL 292
+#define SQL_SQLERROR 293
+#define SQL_SQLPRINT 294
+#define SQL_SQLWARNING 295
+#define SQL_START 296
+#define SQL_STOP 297
+#define SQL_STRUCT 298
+#define SQL_UNSIGNED 299
+#define SQL_VAR 300
+#define SQL_WHENEVER 301
+#define S_ADD 302
+#define S_AND 303
+#define S_ANYTHING 304
+#define S_AUTO 305
+#define S_CONST 306
+#define S_DEC 307
+#define S_DIV 308
+#define S_DOTPOINT 309
+#define S_EQUAL 310
+#define S_EXTERN 311
+#define S_INC 312
+#define S_LSHIFT 313
+#define S_MEMPOINT 314
+#define S_MEMBER 315
+#define S_MOD 316
+#define S_MUL 317
+#define S_NEQUAL 318
+#define S_OR 319
+#define S_REGISTER 320
+#define S_RSHIFT 321
+#define S_STATIC 322
+#define S_SUB 323
+#define S_VOLATILE 324
+#define S_TYPEDEF 325
+#define CSTRING 326
+#define CVARIABLE 327
+#define CPP_LINE 328
+#define IP 329
+#define DOLCONST 330
+#define ECONST 331
+#define NCONST 332
+#define UCONST 333
+#define UIDENT 334
+#define IDENT 335
+#define FCONST 336
+#define SCONST 337
+#define BCONST 338
+#define XCONST 339
+#define Op 340
+#define ICONST 341
+#define PARAM 342
+#define TYPECAST 343
+#define DOT_DOT 344
+#define COLON_EQUALS 345
+#define ABORT_P 346
+#define ABSOLUTE_P 347
+#define ACCESS 348
+#define ACTION 349
+#define ADD_P 350
+#define ADMIN 351
+#define AFTER 352
+#define AGGREGATE 353
+#define ALL 354
+#define ALSO 355
+#define ALTER 356
+#define ALWAYS 357
+#define ANALYSE 358
+#define ANALYZE 359
+#define AND 360
+#define ANY 361
+#define ARRAY 362
+#define AS 363
+#define ASC 364
+#define ASSERTION 365
+#define ASSIGNMENT 366
+#define ASYMMETRIC 367
+#define AT 368
+#define AUTHORIZATION 369
+#define BACKWARD 370
+#define BEFORE 371
+#define BEGIN_P 372
+#define BETWEEN 373
+#define BIGINT 374
+#define BINARY 375
+#define BIT 376
+#define BOOLEAN_P 377
+#define BOTH 378
+#define BY 379
+#define CACHE 380
+#define CALLED 381
+#define CASCADE 382
+#define CASCADED 383
+#define CASE 384
+#define CAST 385
+#define CATALOG_P 386
+#define CHAIN 387
+#define CHAR_P 388
+#define CHARACTER 389
+#define CHARACTERISTICS 390
+#define CHECK 391
+#define CHECKPOINT 392
+#define CLASS 393
+#define CLOSE 394
+#define CLUSTER 395
+#define COALESCE 396
+#define COLLATE 397
+#define COLUMN 398
+#define COMMENT 399
+#define COMMENTS 400
+#define COMMIT 401
+#define COMMITTED 402
+#define CONCURRENTLY 403
+#define CONFIGURATION 404
+#define CONNECTION 405
+#define CONSTRAINT 406
+#define CONSTRAINTS 407
+#define CONTENT_P 408
+#define CONTINUE_P 409
+#define CONVERSION_P 410
+#define COPY 411
+#define COST 412
+#define CREATE 413
+#define CREATEDB 414
+#define CREATEROLE 415
+#define CREATEUSER 416
+#define CROSS 417
+#define CSV 418
+#define CURRENT_P 419
+#define CURRENT_CATALOG 420
+#define CURRENT_DATE 421
+#define CURRENT_ROLE 422
+#define CURRENT_SCHEMA 423
+#define CURRENT_TIME 424
+#define CURRENT_TIMESTAMP 425
+#define CURRENT_USER 426
+#define CURSOR 427
+#define CYCLE 428
+#define DATA_P 429
+#define DATABASE 430
+#define DAY_P 431
+#define DEALLOCATE 432
+#define DEC 433
+#define DECIMAL_P 434
+#define DECLARE 435
+#define DEFAULT 436
+#define DEFAULTS 437
+#define DEFERRABLE 438
+#define DEFERRED 439
+#define DEFINER 440
+#define DELETE_P 441
+#define DELIMITER 442
+#define DELIMITERS 443
+#define DESC 444
+#define DICTIONARY 445
+#define DISABLE_P 446
+#define DISCARD 447
+#define DISTINCT 448
+#define DO 449
+#define DOCUMENT_P 450
+#define DOMAIN_P 451
+#define DOUBLE_P 452
+#define DROP 453
+#define EACH 454
+#define ELSE 455
+#define ENABLE_P 456
+#define ENCODING 457
+#define ENCRYPTED 458
+#define END_P 459
+#define ENUM_P 460
+#define ESCAPE 461
+#define EXCEPT 462
+#define EXCLUDE 463
+#define EXCLUDING 464
+#define EXCLUSIVE 465
+#define EXECUTE 466
+#define EXISTS 467
+#define EXPLAIN 468
+#define EXTERNAL 469
+#define EXTRACT 470
+#define FALSE_P 471
+#define FAMILY 472
+#define FETCH 473
+#define FIRST_P 474
+#define FLOAT_P 475
+#define FOLLOWING 476
+#define FOR 477
+#define FORCE 478
+#define FOREIGN 479
+#define FORWARD 480
+#define FREEZE 481
+#define FROM 482
+#define FULL 483
+#define FUNCTION 484
+#define FUNCTIONS 485
+#define GLOBAL 486
+#define GRANT 487
+#define GRANTED 488
+#define GREATEST 489
+#define GROUP_P 490
+#define HANDLER 491
+#define HAVING 492
+#define HEADER_P 493
+#define HOLD 494
+#define HOUR_P 495
+#define IDENTITY_P 496
+#define IF_P 497
+#define ILIKE 498
+#define IMMEDIATE 499
+#define IMMUTABLE 500
+#define IMPLICIT_P 501
+#define IN_P 502
+#define INCLUDING 503
+#define INCREMENT 504
+#define INDEX 505
+#define INDEXES 506
+#define INHERIT 507
+#define INHERITS 508
+#define INITIALLY 509
+#define INLINE_P 510
+#define INNER_P 511
+#define INOUT 512
+#define INPUT_P 513
+#define INSENSITIVE 514
+#define INSERT 515
+#define INSTEAD 516
+#define INT_P 517
+#define INTEGER 518
+#define INTERSECT 519
+#define INTERVAL 520
+#define INTO 521
+#define INVOKER 522
+#define IS 523
+#define ISNULL 524
+#define ISOLATION 525
+#define JOIN 526
+#define KEY 527
+#define LANGUAGE 528
+#define LARGE_P 529
+#define LAST_P 530
+#define LC_COLLATE_P 531
+#define LC_CTYPE_P 532
+#define LEADING 533
+#define LEAST 534
+#define LEFT 535
+#define LEVEL 536
+#define LIKE 537
+#define LIMIT 538
+#define LISTEN 539
+#define LOAD 540
+#define LOCAL 541
+#define LOCALTIME 542
+#define LOCALTIMESTAMP 543
+#define LOCATION 544
+#define LOCK_P 545
+#define LOGIN_P 546
+#define MAPPING 547
+#define MATCH 548
+#define MAXVALUE 549
+#define MINUTE_P 550
+#define MINVALUE 551
+#define MODE 552
+#define MONTH_P 553
+#define MOVE 554
+#define NAME_P 555
+#define NAMES 556
+#define NATIONAL 557
+#define NATURAL 558
+#define NCHAR 559
+#define NEXT 560
+#define NO 561
+#define NOCREATEDB 562
+#define NOCREATEROLE 563
+#define NOCREATEUSER 564
+#define NOINHERIT 565
+#define NOLOGIN_P 566
+#define NONE 567
+#define NOSUPERUSER 568
+#define NOT 569
+#define NOTHING 570
+#define NOTIFY 571
+#define NOTNULL 572
+#define NOWAIT 573
+#define NULL_P 574
+#define NULLIF 575
+#define NULLS_P 576
+#define NUMERIC 577
+#define OBJECT_P 578
+#define OF 579
+#define OFF 580
+#define OFFSET 581
+#define OIDS 582
+#define ON 583
+#define ONLY 584
+#define OPERATOR 585
+#define OPTION 586
+#define OPTIONS 587
+#define OR 588
+#define ORDER 589
+#define OUT_P 590
+#define OUTER_P 591
+#define OVER 592
+#define OVERLAPS 593
+#define OVERLAY 594
+#define OWNED 595
+#define OWNER 596
+#define PARSER 597
+#define PARTIAL 598
+#define PARTITION 599
+#define PASSWORD 600
+#define PLACING 601
+#define PLANS 602
+#define POSITION 603
+#define PRECEDING 604
+#define PRECISION 605
+#define PRESERVE 606
+#define PREPARE 607
+#define PREPARED 608
+#define PRIMARY 609
+#define PRIOR 610
+#define PRIVILEGES 611
+#define PROCEDURAL 612
+#define PROCEDURE 613
+#define QUOTE 614
+#define RANGE 615
+#define READ 616
+#define REAL 617
+#define REASSIGN 618
+#define RECHECK 619
+#define RECURSIVE 620
+#define REFERENCES 621
+#define REINDEX 622
+#define RELATIVE_P 623
+#define RELEASE 624
+#define RENAME 625
+#define REPEATABLE 626
+#define REPLACE 627
+#define REPLICA 628
+#define RESET 629
+#define RESTART 630
+#define RESTRICT 631
+#define RETURNING 632
+#define RETURNS 633
+#define REVOKE 634
+#define RIGHT 635
+#define ROLE 636
+#define ROLLBACK 637
+#define ROW 638
+#define ROWS 639
+#define RULE 640
+#define SAVEPOINT 641
+#define SCHEMA 642
+#define SCROLL 643
+#define SEARCH 644
+#define SECOND_P 645
+#define SECURITY 646
+#define SELECT 647
+#define SEQUENCE 648
+#define SEQUENCES 649
+#define SERIALIZABLE 650
+#define SERVER 651
+#define SESSION 652
+#define SESSION_USER 653
+#define SET 654
+#define SETOF 655
+#define SHARE 656
+#define SHOW 657
+#define SIMILAR 658
+#define SIMPLE 659
+#define SMALLINT 660
+#define SOME 661
+#define STABLE 662
+#define STANDALONE_P 663
+#define START 664
+#define STATEMENT 665
+#define STATISTICS 666
+#define STDIN 667
+#define STDOUT 668
+#define STORAGE 669
+#define STRICT_P 670
+#define STRIP_P 671
+#define SUBSTRING 672
+#define SUPERUSER_P 673
+#define SYMMETRIC 674
+#define SYSID 675
+#define SYSTEM_P 676
+#define TABLE 677
+#define TABLES 678
+#define TABLESPACE 679
+#define TEMP 680
+#define TEMPLATE 681
+#define TEMPORARY 682
+#define TEXT_P 683
+#define THEN 684
+#define TIME 685
+#define TIMESTAMP 686
+#define TO 687
+#define TRAILING 688
+#define TRANSACTION 689
+#define TREAT 690
+#define TRIGGER 691
+#define TRIM 692
+#define TRUE_P 693
+#define TRUNCATE 694
+#define TRUSTED 695
+#define TYPE_P 696
+#define UNBOUNDED 697
+#define UNCOMMITTED 698
+#define UNENCRYPTED 699
+#define UNION 700
+#define UNIQUE 701
+#define UNKNOWN 702
+#define UNLISTEN 703
+#define UNTIL 704
+#define UPDATE 705
+#define USER 706
+#define USING 707
+#define VACUUM 708
+#define VALID 709
+#define VALIDATOR 710
+#define VALUE_P 711
+#define VALUES 712
+#define VARCHAR 713
+#define VARIADIC 714
+#define VARYING 715
+#define VERBOSE 716
+#define VERSION_P 717
+#define VIEW 718
+#define VOLATILE 719
+#define WHEN 720
+#define WHERE 721
+#define WHITESPACE_P 722
+#define WINDOW 723
+#define WITH 724
+#define WITHOUT 725
+#define WORK 726
+#define WRAPPER 727
+#define WRITE 728
+#define XML_P 729
+#define XMLATTRIBUTES 730
+#define XMLCONCAT 731
+#define XMLELEMENT 732
+#define XMLFOREST 733
+#define XMLPARSE 734
+#define XMLPI 735
+#define XMLROOT 736
+#define XMLSERIALIZE 737
+#define YEAR_P 738
+#define YES_P 739
+#define ZONE 740
+#define NULLS_FIRST 741
+#define NULLS_LAST 742
+#define WITH_TIME 743
+#define POSTFIXOP 744
+#define UMINUS 745
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 471 "preproc.y"
-
+{
 	double	dval;
 	char	*str;
 	int     ival;
@@ -549,15 +1038,13 @@
 	struct	fetch_desc	descriptor;
 	struct  su_symbol	struct_union;
 	struct	prep		prep;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 557 "preproc.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 1044 "preproc.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE base_yylval;
@@ -576,4 +1063,3 @@
 #endif
 
 extern YYLTYPE base_yylloc;
-
diff -Naur postgresql-9.0.17/src/pl/plpgsql/src/pl_gram.c postgresql/src/pl/plpgsql/src/pl_gram.c
--- postgresql-9.0.17/src/pl/plpgsql/src/pl_gram.c	2014-03-17 12:55:48.000000000 -0700
+++ postgresql/src/pl/plpgsql/src/pl_gram.c	2014-03-31 18:06:31.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,213 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 1
 
 /* Substitute the variable and function names.  */
-#define yyparse         plpgsql_yyparse
-#define yylex           plpgsql_yylex
-#define yyerror         plpgsql_yyerror
-#define yylval          plpgsql_yylval
-#define yychar          plpgsql_yychar
-#define yydebug         plpgsql_yydebug
-#define yynerrs         plpgsql_yynerrs
-#define yylloc          plpgsql_yylloc
+#define yyparse plpgsql_yyparse
+#define yylex   plpgsql_yylex
+#define yyerror plpgsql_yyerror
+#define yylval  plpgsql_yylval
+#define yychar  plpgsql_yychar
+#define yydebug plpgsql_yydebug
+#define yynerrs plpgsql_yynerrs
+#define yylloc plpgsql_yylloc
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     IDENT = 258,
+     FCONST = 259,
+     SCONST = 260,
+     BCONST = 261,
+     XCONST = 262,
+     Op = 263,
+     ICONST = 264,
+     PARAM = 265,
+     TYPECAST = 266,
+     DOT_DOT = 267,
+     COLON_EQUALS = 268,
+     T_WORD = 269,
+     T_CWORD = 270,
+     T_DATUM = 271,
+     LESS_LESS = 272,
+     GREATER_GREATER = 273,
+     K_ABSOLUTE = 274,
+     K_ALIAS = 275,
+     K_ALL = 276,
+     K_BACKWARD = 277,
+     K_BEGIN = 278,
+     K_BY = 279,
+     K_CASE = 280,
+     K_CLOSE = 281,
+     K_CONSTANT = 282,
+     K_CONTINUE = 283,
+     K_CURSOR = 284,
+     K_DEBUG = 285,
+     K_DECLARE = 286,
+     K_DEFAULT = 287,
+     K_DETAIL = 288,
+     K_DIAGNOSTICS = 289,
+     K_DUMP = 290,
+     K_ELSE = 291,
+     K_ELSIF = 292,
+     K_END = 293,
+     K_ERRCODE = 294,
+     K_ERROR = 295,
+     K_EXCEPTION = 296,
+     K_EXECUTE = 297,
+     K_EXIT = 298,
+     K_FETCH = 299,
+     K_FIRST = 300,
+     K_FOR = 301,
+     K_FORWARD = 302,
+     K_FROM = 303,
+     K_GET = 304,
+     K_HINT = 305,
+     K_IF = 306,
+     K_IN = 307,
+     K_INFO = 308,
+     K_INSERT = 309,
+     K_INTO = 310,
+     K_IS = 311,
+     K_LAST = 312,
+     K_LOG = 313,
+     K_LOOP = 314,
+     K_MESSAGE = 315,
+     K_MOVE = 316,
+     K_NEXT = 317,
+     K_NO = 318,
+     K_NOT = 319,
+     K_NOTICE = 320,
+     K_NULL = 321,
+     K_OPEN = 322,
+     K_OPTION = 323,
+     K_OR = 324,
+     K_PERFORM = 325,
+     K_PRIOR = 326,
+     K_QUERY = 327,
+     K_RAISE = 328,
+     K_RELATIVE = 329,
+     K_RESULT_OID = 330,
+     K_RETURN = 331,
+     K_REVERSE = 332,
+     K_ROWTYPE = 333,
+     K_ROW_COUNT = 334,
+     K_SCROLL = 335,
+     K_SQLSTATE = 336,
+     K_STRICT = 337,
+     K_THEN = 338,
+     K_TO = 339,
+     K_TYPE = 340,
+     K_USE_COLUMN = 341,
+     K_USE_VARIABLE = 342,
+     K_USING = 343,
+     K_VARIABLE_CONFLICT = 344,
+     K_WARNING = 345,
+     K_WHEN = 346,
+     K_WHILE = 347
+   };
+#endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define T_WORD 269
+#define T_CWORD 270
+#define T_DATUM 271
+#define LESS_LESS 272
+#define GREATER_GREATER 273
+#define K_ABSOLUTE 274
+#define K_ALIAS 275
+#define K_ALL 276
+#define K_BACKWARD 277
+#define K_BEGIN 278
+#define K_BY 279
+#define K_CASE 280
+#define K_CLOSE 281
+#define K_CONSTANT 282
+#define K_CONTINUE 283
+#define K_CURSOR 284
+#define K_DEBUG 285
+#define K_DECLARE 286
+#define K_DEFAULT 287
+#define K_DETAIL 288
+#define K_DIAGNOSTICS 289
+#define K_DUMP 290
+#define K_ELSE 291
+#define K_ELSIF 292
+#define K_END 293
+#define K_ERRCODE 294
+#define K_ERROR 295
+#define K_EXCEPTION 296
+#define K_EXECUTE 297
+#define K_EXIT 298
+#define K_FETCH 299
+#define K_FIRST 300
+#define K_FOR 301
+#define K_FORWARD 302
+#define K_FROM 303
+#define K_GET 304
+#define K_HINT 305
+#define K_IF 306
+#define K_IN 307
+#define K_INFO 308
+#define K_INSERT 309
+#define K_INTO 310
+#define K_IS 311
+#define K_LAST 312
+#define K_LOG 313
+#define K_LOOP 314
+#define K_MESSAGE 315
+#define K_MOVE 316
+#define K_NEXT 317
+#define K_NO 318
+#define K_NOT 319
+#define K_NOTICE 320
+#define K_NULL 321
+#define K_OPEN 322
+#define K_OPTION 323
+#define K_OR 324
+#define K_PERFORM 325
+#define K_PRIOR 326
+#define K_QUERY 327
+#define K_RAISE 328
+#define K_RELATIVE 329
+#define K_RESULT_OID 330
+#define K_RETURN 331
+#define K_REVERSE 332
+#define K_ROWTYPE 333
+#define K_ROW_COUNT 334
+#define K_SCROLL 335
+#define K_SQLSTATE 336
+#define K_STRICT 337
+#define K_THEN 338
+#define K_TO 339
+#define K_TYPE 340
+#define K_USE_COLUMN 341
+#define K_USE_VARIABLE 342
+#define K_USING 343
+#define K_VARIABLE_CONFLICT 344
+#define K_WARNING 345
+#define K_WHEN 346
+#define K_WHILE 347
+
+
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+/* Copy the first part of user declarations.  */
 #line 1 "gram.y"
 
 /*-------------------------------------------------------------------------
@@ -184,9 +372,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 189 "pl_gram.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -205,115 +390,10 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     IDENT = 258,
-     FCONST = 259,
-     SCONST = 260,
-     BCONST = 261,
-     XCONST = 262,
-     Op = 263,
-     ICONST = 264,
-     PARAM = 265,
-     TYPECAST = 266,
-     DOT_DOT = 267,
-     COLON_EQUALS = 268,
-     T_WORD = 269,
-     T_CWORD = 270,
-     T_DATUM = 271,
-     LESS_LESS = 272,
-     GREATER_GREATER = 273,
-     K_ABSOLUTE = 274,
-     K_ALIAS = 275,
-     K_ALL = 276,
-     K_BACKWARD = 277,
-     K_BEGIN = 278,
-     K_BY = 279,
-     K_CASE = 280,
-     K_CLOSE = 281,
-     K_CONSTANT = 282,
-     K_CONTINUE = 283,
-     K_CURSOR = 284,
-     K_DEBUG = 285,
-     K_DECLARE = 286,
-     K_DEFAULT = 287,
-     K_DETAIL = 288,
-     K_DIAGNOSTICS = 289,
-     K_DUMP = 290,
-     K_ELSE = 291,
-     K_ELSIF = 292,
-     K_END = 293,
-     K_ERRCODE = 294,
-     K_ERROR = 295,
-     K_EXCEPTION = 296,
-     K_EXECUTE = 297,
-     K_EXIT = 298,
-     K_FETCH = 299,
-     K_FIRST = 300,
-     K_FOR = 301,
-     K_FORWARD = 302,
-     K_FROM = 303,
-     K_GET = 304,
-     K_HINT = 305,
-     K_IF = 306,
-     K_IN = 307,
-     K_INFO = 308,
-     K_INSERT = 309,
-     K_INTO = 310,
-     K_IS = 311,
-     K_LAST = 312,
-     K_LOG = 313,
-     K_LOOP = 314,
-     K_MESSAGE = 315,
-     K_MOVE = 316,
-     K_NEXT = 317,
-     K_NO = 318,
-     K_NOT = 319,
-     K_NOTICE = 320,
-     K_NULL = 321,
-     K_OPEN = 322,
-     K_OPTION = 323,
-     K_OR = 324,
-     K_PERFORM = 325,
-     K_PRIOR = 326,
-     K_QUERY = 327,
-     K_RAISE = 328,
-     K_RELATIVE = 329,
-     K_RESULT_OID = 330,
-     K_RETURN = 331,
-     K_REVERSE = 332,
-     K_ROWTYPE = 333,
-     K_ROW_COUNT = 334,
-     K_SCROLL = 335,
-     K_SQLSTATE = 336,
-     K_STRICT = 337,
-     K_THEN = 338,
-     K_TO = 339,
-     K_TYPE = 340,
-     K_USE_COLUMN = 341,
-     K_USE_VARIABLE = 342,
-     K_USING = 343,
-     K_VARIABLE_CONFLICT = 344,
-     K_WARNING = 345,
-     K_WHEN = 346,
-     K_WHILE = 347
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 114 "gram.y"
-
+{
 		core_YYSTYPE			core_yystype;
 		/* these fields must match core_YYSTYPE: */
 		int						ival;
@@ -362,15 +442,13 @@
 		PLpgSQL_diag_item		*diagitem;
 		PLpgSQL_stmt_fetch		*fetch;
 		PLpgSQL_case_when		*casewhen;
-
-
-
-/* Line 293 of yacc.c  */
-#line 370 "pl_gram.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 448 "gram.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
@@ -390,8 +468,8 @@
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 395 "pl_gram.c"
+/* Line 216 of yacc.c.  */
+#line 473 "gram.tab.c"
 
 #ifdef short
 # undef short
@@ -466,14 +544,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -494,11 +572,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -521,24 +599,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -555,9 +633,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-  YYLTYPE yyls_alloc;
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+    YYLTYPE yyls;
 };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
@@ -569,27 +647,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
       + 2 * YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -607,7 +664,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
@@ -792,7 +866,7 @@
   "K_WARNING", "K_WHEN", "K_WHILE", "'#'", "';'", "'('", "')'", "','",
   "'='", "'['", "$accept", "pl_function", "comp_options", "comp_option",
   "opt_semi", "pl_block", "decl_sect", "decl_start", "decl_stmts",
-  "decl_stmt", "decl_statement", "$@1", "opt_scrollable",
+  "decl_stmt", "decl_statement", "@1", "opt_scrollable",
   "decl_cursor_query", "decl_cursor_args", "decl_cursor_arglist",
   "decl_cursor_arg", "decl_is_for", "decl_aliasitem", "decl_varname",
   "decl_const", "decl_datatype", "decl_notnull", "decl_defval",
@@ -877,8 +951,8 @@
        1,     1,     1,     1,     1,     1,     1,     1,     1,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -969,7 +1043,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -137
 static const yytype_int16 yytable[] =
 {
@@ -1023,12 +1098,6 @@
       39,     0,     0,    40,     0,     0,    41,     0,     0,    42
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-190))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int16 yycheck[] =
 {
        4,    17,    13,    39,    13,    13,    68,    17,    14,    15,
@@ -1124,18 +1193,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -1145,6 +1205,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -1307,20 +1368,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -1355,11 +1413,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -1396,6 +1454,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -1498,142 +1557,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1667,9 +1699,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1685,17 +1718,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
-/* Location data for the lookahead symbol.  */
-YYLTYPE yylloc;
-
 /* Number of syntax errors so far.  */
 int yynerrs;
+/* Location data for the look-ahead symbol.  */
+YYLTYPE yylloc;
+
 
 
 /*----------.
@@ -1724,47 +1758,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-       `yyls': related to locations.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    /* The location stack.  */
-    YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls;
-    YYLTYPE *yylsp;
-
-    /* The locations where the error started and ended.  */
-    YYLTYPE yyerror_range[3];
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-  YYLTYPE yyloc;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1772,37 +1773,63 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+  /* The location stack.  */
+  YYLTYPE yylsa[YYINITDEPTH];
+  YYLTYPE *yyls = yylsa;
+  YYLTYPE *yylsp;
+  /* The locations where the error started and ended.  */
+  YYLTYPE yyerror_range[2];
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+  YYLTYPE yyloc;
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yyls = yylsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
   yylsp = yyls;
-
 #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
   /* Initialize the default location before parsing starts.  */
   yylloc.first_line   = yylloc.last_line   = 1;
-  yylloc.first_column = yylloc.last_column = 1;
+  yylloc.first_column = yylloc.last_column = 0;
 #endif
 
   goto yysetstate;
@@ -1841,7 +1868,6 @@
 		    &yyvs1, yysize * sizeof (*yyvsp),
 		    &yyls1, yysize * sizeof (*yylsp),
 		    &yystacksize);
-
 	yyls = yyls1;
 	yyss = yyss1;
 	yyvs = yyvs1;
@@ -1863,9 +1889,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
-	YYSTACK_RELOCATE (yyls_alloc, yyls);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+	YYSTACK_RELOCATE (yyls);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1886,9 +1912,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1897,16 +1920,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1932,22 +1955,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1988,53 +2015,41 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 317 "gram.y"
     {
 						plpgsql_parse_result = (PLpgSQL_stmt_block *) (yyvsp[(2) - (3)].stmt);
-					}
+					;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 327 "gram.y"
     {
 						plpgsql_DumpExecTree = true;
-					}
+					;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 331 "gram.y"
     {
 						plpgsql_curr_compile->resolve_option = PLPGSQL_RESOLVE_ERROR;
-					}
+					;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 335 "gram.y"
     {
 						plpgsql_curr_compile->resolve_option = PLPGSQL_RESOLVE_VARIABLE;
-					}
+					;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 339 "gram.y"
     {
 						plpgsql_curr_compile->resolve_option = PLPGSQL_RESOLVE_COLUMN;
-					}
+					;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 349 "gram.y"
     {
 						PLpgSQL_stmt_block *new;
@@ -2053,12 +2068,10 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 371 "gram.y"
     {
 						/* done with decls, so resume identifier lookup */
@@ -2066,36 +2079,30 @@
 						(yyval.declhdr).label	  = (yyvsp[(1) - (1)].str);
 						(yyval.declhdr).n_initvars = 0;
 						(yyval.declhdr).initvarnos = NULL;
-					}
+					;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 379 "gram.y"
     {
 						plpgsql_IdentifierLookup = IDENTIFIER_LOOKUP_NORMAL;
 						(yyval.declhdr).label	  = (yyvsp[(1) - (2)].str);
 						(yyval.declhdr).n_initvars = 0;
 						(yyval.declhdr).initvarnos = NULL;
-					}
+					;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 386 "gram.y"
     {
 						plpgsql_IdentifierLookup = IDENTIFIER_LOOKUP_NORMAL;
 						(yyval.declhdr).label	  = (yyvsp[(1) - (3)].str);
 						/* Remember variables declared in decl_stmts */
 						(yyval.declhdr).n_initvars = plpgsql_add_initdatums(&((yyval.declhdr).initvarnos));
-					}
+					;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 395 "gram.y"
     {
 						/* Forget any variables created before block */
@@ -2105,21 +2112,17 @@
 						 * we process the decl_stmts
 						 */
 						plpgsql_IdentifierLookup = IDENTIFIER_LOOKUP_DECLARE;
-					}
+					;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 412 "gram.y"
     {
 						/* We allow useless extra DECLAREs */
-					}
+					;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 416 "gram.y"
     {
 						/*
@@ -2130,12 +2133,10 @@
 								(errcode(ERRCODE_SYNTAX_ERROR),
 								 errmsg("block label must be placed before DECLARE, not after"),
 								 parser_errposition((yylsp[(1) - (3)]))));
-					}
+					;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 429 "gram.y"
     {
 						PLpgSQL_variable	*var;
@@ -2173,29 +2174,23 @@
 										 errmsg("default value for row or record variable is not supported"),
 										 parser_errposition((yylsp[(5) - (5)]))));
 						}
-					}
+					;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 467 "gram.y"
     {
 						plpgsql_ns_additem((yyvsp[(4) - (5)].nsitem)->itemtype,
 										   (yyvsp[(4) - (5)].nsitem)->itemno, (yyvsp[(1) - (5)].varname).name);
-					}
+					;}
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 472 "gram.y"
-    { plpgsql_ns_push((yyvsp[(1) - (3)].varname).name); }
+    { plpgsql_ns_push((yyvsp[(1) - (3)].varname).name); ;}
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 474 "gram.y"
     {
 						PLpgSQL_var *new;
@@ -2242,57 +2237,45 @@
 						else
 							new->cursor_explicit_argrow = (yyvsp[(5) - (7)].datum)->dno;
 						new->cursor_options = CURSOR_OPT_FAST_PLAN | (yyvsp[(2) - (7)].ival);
-					}
+					;}
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 523 "gram.y"
     {
 						(yyval.ival) = 0;
-					}
+					;}
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 527 "gram.y"
     {
 						(yyval.ival) = CURSOR_OPT_NO_SCROLL;
-					}
+					;}
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 531 "gram.y"
     {
 						(yyval.ival) = CURSOR_OPT_SCROLL;
-					}
+					;}
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 537 "gram.y"
     {
 						(yyval.expr) = read_sql_stmt("");
-					}
+					;}
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 543 "gram.y"
     {
 						(yyval.datum) = NULL;
-					}
+					;}
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 547 "gram.y"
     {
 						PLpgSQL_row *new;
@@ -2319,41 +2302,33 @@
 
 						plpgsql_adddatum((PLpgSQL_datum *) new);
 						(yyval.datum) = (PLpgSQL_datum *) new;
-					}
+					;}
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 576 "gram.y"
     {
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].datum));
-					}
+					;}
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 580 "gram.y"
     {
 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].datum));
-					}
+					;}
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 586 "gram.y"
     {
 						(yyval.datum) = (PLpgSQL_datum *)
 							plpgsql_build_variable((yyvsp[(1) - (2)].varname).name, (yyvsp[(1) - (2)].varname).lineno,
 												   (yyvsp[(2) - (2)].dtype), true);
-					}
+					;}
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 597 "gram.y"
     {
 						PLpgSQL_nsitem *nsi;
@@ -2368,12 +2343,10 @@
 											(yyvsp[(1) - (1)].word).ident),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.nsitem) = nsi;
-					}
+					;}
     break;
 
   case 37:
-
-/* Line 1806 of yacc.c  */
 #line 612 "gram.y"
     {
 						PLpgSQL_nsitem *nsi;
@@ -2399,12 +2372,10 @@
 											NameListToString((yyvsp[(1) - (1)].cword).idents)),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.nsitem) = nsi;
-					}
+					;}
     break;
 
   case 38:
-
-/* Line 1806 of yacc.c  */
 #line 640 "gram.y"
     {
 						(yyval.varname).name = (yyvsp[(1) - (1)].word).ident;
@@ -2417,12 +2388,10 @@
 											  (yyvsp[(1) - (1)].word).ident, NULL, NULL,
 											  NULL) != NULL)
 							yyerror("duplicate declaration");
-					}
+					;}
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 653 "gram.y"
     {
 						(yyval.varname).name = pstrdup((yyvsp[(1) - (1)].keyword));
@@ -2435,26 +2404,20 @@
 											  (yyvsp[(1) - (1)].keyword), NULL, NULL,
 											  NULL) != NULL)
 							yyerror("duplicate declaration");
-					}
+					;}
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 668 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 670 "gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 674 "gram.y"
     {
 						/*
@@ -2463,213 +2426,157 @@
 						 */
 						(yyval.dtype) = read_datatype(yychar);
 						yyclearin;
-					}
+					;}
     break;
 
   case 43:
-
-/* Line 1806 of yacc.c  */
 #line 685 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 44:
-
-/* Line 1806 of yacc.c  */
 #line 687 "gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 45:
-
-/* Line 1806 of yacc.c  */
 #line 691 "gram.y"
-    { (yyval.expr) = NULL; }
+    { (yyval.expr) = NULL; ;}
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 693 "gram.y"
     {
 						(yyval.expr) = read_sql_expression(';', ";");
-					}
+					;}
     break;
 
   case 51:
-
-/* Line 1806 of yacc.c  */
 #line 707 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 52:
-
-/* Line 1806 of yacc.c  */
 #line 709 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 53:
-
-/* Line 1806 of yacc.c  */
 #line 713 "gram.y"
     {
 							if ((yyvsp[(2) - (2)].stmt) == NULL)
 								(yyval.list) = (yyvsp[(1) - (2)].list);
 							else
 								(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].stmt));
-						}
+						;}
     break;
 
   case 54:
-
-/* Line 1806 of yacc.c  */
 #line 720 "gram.y"
     {
 							if ((yyvsp[(1) - (1)].stmt) == NULL)
 								(yyval.list) = NIL;
 							else
 								(yyval.list) = list_make1((yyvsp[(1) - (1)].stmt));
-						}
+						;}
     break;
 
   case 55:
-
-/* Line 1806 of yacc.c  */
 #line 729 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (2)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (2)].stmt); ;}
     break;
 
   case 56:
-
-/* Line 1806 of yacc.c  */
 #line 731 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 57:
-
-/* Line 1806 of yacc.c  */
 #line 733 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 58:
-
-/* Line 1806 of yacc.c  */
 #line 735 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 59:
-
-/* Line 1806 of yacc.c  */
 #line 737 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 60:
-
-/* Line 1806 of yacc.c  */
 #line 739 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 61:
-
-/* Line 1806 of yacc.c  */
 #line 741 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 62:
-
-/* Line 1806 of yacc.c  */
 #line 743 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 63:
-
-/* Line 1806 of yacc.c  */
 #line 745 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 64:
-
-/* Line 1806 of yacc.c  */
 #line 747 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 65:
-
-/* Line 1806 of yacc.c  */
 #line 749 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 66:
-
-/* Line 1806 of yacc.c  */
 #line 751 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 67:
-
-/* Line 1806 of yacc.c  */
 #line 753 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 68:
-
-/* Line 1806 of yacc.c  */
 #line 755 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 69:
-
-/* Line 1806 of yacc.c  */
 #line 757 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 70:
-
-/* Line 1806 of yacc.c  */
 #line 759 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 71:
-
-/* Line 1806 of yacc.c  */
 #line 761 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 72:
-
-/* Line 1806 of yacc.c  */
 #line 763 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 73:
-
-/* Line 1806 of yacc.c  */
 #line 765 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 74:
-
-/* Line 1806 of yacc.c  */
 #line 769 "gram.y"
     {
 						PLpgSQL_stmt_perform *new;
@@ -2680,12 +2587,10 @@
 						new->expr  = (yyvsp[(2) - (2)].expr);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 75:
-
-/* Line 1806 of yacc.c  */
 #line 782 "gram.y"
     {
 						PLpgSQL_stmt_assign *new;
@@ -2697,12 +2602,10 @@
 						new->expr  = (yyvsp[(3) - (3)].expr);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 76:
-
-/* Line 1806 of yacc.c  */
 #line 796 "gram.y"
     {
 						PLpgSQL_stmt_getdiag	 *new;
@@ -2713,30 +2616,24 @@
 						new->diag_items  = (yyvsp[(3) - (4)].list);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 77:
-
-/* Line 1806 of yacc.c  */
 #line 809 "gram.y"
     {
 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].diagitem));
-					}
+					;}
     break;
 
   case 78:
-
-/* Line 1806 of yacc.c  */
 #line 813 "gram.y"
     {
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].diagitem));
-					}
+					;}
     break;
 
   case 79:
-
-/* Line 1806 of yacc.c  */
 #line 819 "gram.y"
     {
 						PLpgSQL_diag_item *new;
@@ -2746,12 +2643,10 @@
 						new->kind = (yyvsp[(3) - (3)].ival);
 
 						(yyval.diagitem) = new;
-					}
+					;}
     break;
 
   case 80:
-
-/* Line 1806 of yacc.c  */
 #line 831 "gram.y"
     {
 						int	tok = yylex();
@@ -2764,12 +2659,10 @@
 							(yyval.ival) = PLPGSQL_GETDIAG_RESULT_OID;
 						else
 							yyerror("unrecognized GET DIAGNOSTICS item");
-					}
+					;}
     break;
 
   case 81:
-
-/* Line 1806 of yacc.c  */
 #line 846 "gram.y"
     {
 						check_assignable((yyvsp[(1) - (1)].wdatum).datum, (yylsp[(1) - (1)]));
@@ -2781,42 +2674,34 @@
 											NameOfDatum(&((yyvsp[(1) - (1)].wdatum)))),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.ival) = (yyvsp[(1) - (1)].wdatum).datum->dno;
-					}
+					;}
     break;
 
   case 82:
-
-/* Line 1806 of yacc.c  */
 #line 858 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 83:
-
-/* Line 1806 of yacc.c  */
 #line 863 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 84:
-
-/* Line 1806 of yacc.c  */
 #line 871 "gram.y"
     {
 						check_assignable((yyvsp[(1) - (1)].wdatum).datum, (yylsp[(1) - (1)]));
 						(yyval.ival) = (yyvsp[(1) - (1)].wdatum).datum->dno;
-					}
+					;}
     break;
 
   case 85:
-
-/* Line 1806 of yacc.c  */
 #line 876 "gram.y"
     {
 						PLpgSQL_arrayelem	*new;
@@ -2829,12 +2714,10 @@
 						plpgsql_adddatum((PLpgSQL_datum *) new);
 
 						(yyval.ival) = new->dno;
-					}
+					;}
     break;
 
   case 86:
-
-/* Line 1806 of yacc.c  */
 #line 891 "gram.y"
     {
 						PLpgSQL_stmt_if *new;
@@ -2847,21 +2730,17 @@
 						new->false_body = (yyvsp[(4) - (7)].list);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 87:
-
-/* Line 1806 of yacc.c  */
 #line 906 "gram.y"
     {
 						(yyval.list) = NIL;
-					}
+					;}
     break;
 
   case 88:
-
-/* Line 1806 of yacc.c  */
 #line 910 "gram.y"
     {
 						/*----------
@@ -2890,30 +2769,24 @@
 
 						/* wrap the if-statement in a "container" list */
 						(yyval.list) = list_make1(new_if);
-					}
+					;}
     break;
 
   case 89:
-
-/* Line 1806 of yacc.c  */
 #line 940 "gram.y"
     {
 						(yyval.list) = (yyvsp[(2) - (2)].list);
-					}
+					;}
     break;
 
   case 90:
-
-/* Line 1806 of yacc.c  */
 #line 946 "gram.y"
     {
 						(yyval.stmt) = make_case((yylsp[(1) - (7)]), (yyvsp[(2) - (7)].expr), (yyvsp[(3) - (7)].list), (yyvsp[(4) - (7)].list));
-					}
+					;}
     break;
 
   case 91:
-
-/* Line 1806 of yacc.c  */
 #line 952 "gram.y"
     {
 						PLpgSQL_expr *expr = NULL;
@@ -2926,30 +2799,24 @@
 						}
 						plpgsql_push_back_token(K_WHEN);
 						(yyval.expr) = expr;
-					}
+					;}
     break;
 
   case 92:
-
-/* Line 1806 of yacc.c  */
 #line 967 "gram.y"
     {
 						(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].casewhen));
-					}
+					;}
     break;
 
   case 93:
-
-/* Line 1806 of yacc.c  */
 #line 971 "gram.y"
     {
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].casewhen));
-					}
+					;}
     break;
 
   case 94:
-
-/* Line 1806 of yacc.c  */
 #line 977 "gram.y"
     {
 						PLpgSQL_case_when *new = palloc(sizeof(PLpgSQL_case_when));
@@ -2958,21 +2825,17 @@
 						new->expr	= (yyvsp[(2) - (3)].expr);
 						new->stmts	= (yyvsp[(3) - (3)].list);
 						(yyval.casewhen) = new;
-					}
+					;}
     break;
 
   case 95:
-
-/* Line 1806 of yacc.c  */
 #line 988 "gram.y"
     {
 						(yyval.list) = NIL;
-					}
+					;}
     break;
 
   case 96:
-
-/* Line 1806 of yacc.c  */
 #line 992 "gram.y"
     {
 						/*
@@ -2985,12 +2848,10 @@
 							(yyval.list) = (yyvsp[(2) - (2)].list);
 						else
 							(yyval.list) = list_make1(NULL);
-					}
+					;}
     break;
 
   case 97:
-
-/* Line 1806 of yacc.c  */
 #line 1007 "gram.y"
     {
 						PLpgSQL_stmt_loop *new;
@@ -3005,12 +2866,10 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 98:
-
-/* Line 1806 of yacc.c  */
 #line 1024 "gram.y"
     {
 						PLpgSQL_stmt_while *new;
@@ -3026,12 +2885,10 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 99:
-
-/* Line 1806 of yacc.c  */
 #line 1042 "gram.y"
     {
 						/* This runs after we've scanned the loop body */
@@ -3063,12 +2920,10 @@
 						check_labels((yyvsp[(1) - (4)].str), (yyvsp[(4) - (4)].loop_body).end_label, (yyvsp[(4) - (4)].loop_body).end_label_location);
 						/* close namespace started in opt_block_label */
 						plpgsql_ns_pop();
-					}
+					;}
     break;
 
   case 100:
-
-/* Line 1806 of yacc.c  */
 #line 1076 "gram.y"
     {
 						int			tok = yylex();
@@ -3308,12 +3163,10 @@
 								(yyval.stmt) = (PLpgSQL_stmt *) new;
 							}
 						}
-					}
+					;}
     break;
 
   case 101:
-
-/* Line 1806 of yacc.c  */
 #line 1336 "gram.y"
     {
 						(yyval.forvariable).name = NameOfDatum(&((yyvsp[(1) - (1)].wdatum)));
@@ -3345,12 +3198,10 @@
 															   (yyval.forvariable).scalar,
 															   (yylsp[(1) - (1)]));
 						}
-					}
+					;}
     break;
 
   case 102:
-
-/* Line 1806 of yacc.c  */
 #line 1368 "gram.y"
     {
 						int			tok;
@@ -3365,22 +3216,18 @@
 						plpgsql_push_back_token(tok);
 						if (tok == ',')
 							word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 103:
-
-/* Line 1806 of yacc.c  */
 #line 1383 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 104:
-
-/* Line 1806 of yacc.c  */
 #line 1390 "gram.y"
     {
 						PLpgSQL_stmt_exit *new;
@@ -3393,30 +3240,24 @@
 						new->cond	  = (yyvsp[(3) - (3)].expr);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 105:
-
-/* Line 1806 of yacc.c  */
 #line 1405 "gram.y"
     {
 						(yyval.boolean) = true;
-					}
+					;}
     break;
 
   case 106:
-
-/* Line 1806 of yacc.c  */
 #line 1409 "gram.y"
     {
 						(yyval.boolean) = false;
-					}
+					;}
     break;
 
   case 107:
-
-/* Line 1806 of yacc.c  */
 #line 1415 "gram.y"
     {
 						int	tok;
@@ -3440,12 +3281,10 @@
 							plpgsql_push_back_token(tok);
 							(yyval.stmt) = make_return_stmt((yylsp[(1) - (1)]));
 						}
-					}
+					;}
     break;
 
   case 108:
-
-/* Line 1806 of yacc.c  */
 #line 1441 "gram.y"
     {
 						PLpgSQL_stmt_raise		*new;
@@ -3582,32 +3421,26 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 109:
-
-/* Line 1806 of yacc.c  */
 #line 1580 "gram.y"
     {
 						(yyval.loop_body).stmts = (yyvsp[(1) - (5)].list);
 						(yyval.loop_body).end_label = (yyvsp[(4) - (5)].str);
 						(yyval.loop_body).end_label_location = (yylsp[(4) - (5)]);
-					}
+					;}
     break;
 
   case 110:
-
-/* Line 1806 of yacc.c  */
 #line 1598 "gram.y"
     {
 						(yyval.stmt) = make_execsql_stmt(K_INSERT, (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 111:
-
-/* Line 1806 of yacc.c  */
 #line 1602 "gram.y"
     {
 						int			tok;
@@ -3617,12 +3450,10 @@
 						if (tok == '=' || tok == COLON_EQUALS || tok == '[')
 							word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
 						(yyval.stmt) = make_execsql_stmt(T_WORD, (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 112:
-
-/* Line 1806 of yacc.c  */
 #line 1612 "gram.y"
     {
 						int			tok;
@@ -3632,12 +3463,10 @@
 						if (tok == '=' || tok == COLON_EQUALS || tok == '[')
 							cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
 						(yyval.stmt) = make_execsql_stmt(T_CWORD, (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 113:
-
-/* Line 1806 of yacc.c  */
 #line 1624 "gram.y"
     {
 						PLpgSQL_stmt_dynexecute *new;
@@ -3698,12 +3527,10 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 114:
-
-/* Line 1806 of yacc.c  */
 #line 1688 "gram.y"
     {
 						PLpgSQL_stmt_open *new;
@@ -3778,12 +3605,10 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 115:
-
-/* Line 1806 of yacc.c  */
 #line 1765 "gram.y"
     {
 						PLpgSQL_stmt_fetch *fetch = (yyvsp[(2) - (4)].fetch);
@@ -3813,12 +3638,10 @@
 						fetch->is_move	= false;
 
 						(yyval.stmt) = (PLpgSQL_stmt *)fetch;
-					}
+					;}
     break;
 
   case 116:
-
-/* Line 1806 of yacc.c  */
 #line 1797 "gram.y"
     {
 						PLpgSQL_stmt_fetch *fetch = (yyvsp[(2) - (4)].fetch);
@@ -3828,21 +3651,17 @@
 						fetch->is_move	= true;
 
 						(yyval.stmt) = (PLpgSQL_stmt *)fetch;
-					}
+					;}
     break;
 
   case 117:
-
-/* Line 1806 of yacc.c  */
 #line 1809 "gram.y"
     {
 						(yyval.fetch) = read_fetch_direction();
-					}
+					;}
     break;
 
   case 118:
-
-/* Line 1806 of yacc.c  */
 #line 1815 "gram.y"
     {
 						PLpgSQL_stmt_close *new;
@@ -3853,22 +3672,18 @@
 						new->curvar = (yyvsp[(2) - (3)].var)->dno;
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 119:
-
-/* Line 1806 of yacc.c  */
 #line 1828 "gram.y"
     {
 						/* We do not bother building a node for NULL */
 						(yyval.stmt) = NULL;
-					}
+					;}
     break;
 
   case 120:
-
-/* Line 1806 of yacc.c  */
 #line 1835 "gram.y"
     {
 						if ((yyvsp[(1) - (1)].wdatum).datum->dtype != PLPGSQL_DTYPE_VAR)
@@ -3884,39 +3699,31 @@
 											((PLpgSQL_var *) (yyvsp[(1) - (1)].wdatum).datum)->refname),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.var) = (PLpgSQL_var *) (yyvsp[(1) - (1)].wdatum).datum;
-					}
+					;}
     break;
 
   case 121:
-
-/* Line 1806 of yacc.c  */
 #line 1851 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 122:
-
-/* Line 1806 of yacc.c  */
 #line 1856 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 123:
-
-/* Line 1806 of yacc.c  */
 #line 1863 "gram.y"
-    { (yyval.exception_block) = NULL; }
+    { (yyval.exception_block) = NULL; ;}
     break;
 
   case 124:
-
-/* Line 1806 of yacc.c  */
 #line 1865 "gram.y"
     {
 						/*
@@ -3943,42 +3750,34 @@
 						new->sqlerrm_varno = var->dno;
 
 						(yyval.exception_block) = new;
-					}
+					;}
     break;
 
   case 125:
-
-/* Line 1806 of yacc.c  */
 #line 1892 "gram.y"
     {
 						PLpgSQL_exception_block *new = (yyvsp[(2) - (3)].exception_block);
 						new->exc_list = (yyvsp[(3) - (3)].list);
 
 						(yyval.exception_block) = new;
-					}
+					;}
     break;
 
   case 126:
-
-/* Line 1806 of yacc.c  */
 #line 1901 "gram.y"
     {
 							(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].exception));
-						}
+						;}
     break;
 
   case 127:
-
-/* Line 1806 of yacc.c  */
 #line 1905 "gram.y"
     {
 							(yyval.list) = list_make1((yyvsp[(1) - (1)].exception));
-						}
+						;}
     break;
 
   case 128:
-
-/* Line 1806 of yacc.c  */
 #line 1911 "gram.y"
     {
 						PLpgSQL_exception *new;
@@ -3989,12 +3788,10 @@
 						new->action	    = (yyvsp[(4) - (4)].list);
 
 						(yyval.exception) = new;
-					}
+					;}
     break;
 
   case 129:
-
-/* Line 1806 of yacc.c  */
 #line 1924 "gram.y"
     {
 							PLpgSQL_condition	*old;
@@ -4003,21 +3800,17 @@
 								/* skip */ ;
 							old->next = (yyvsp[(3) - (3)].condition);
 							(yyval.condition) = (yyvsp[(1) - (3)].condition);
-						}
+						;}
     break;
 
   case 130:
-
-/* Line 1806 of yacc.c  */
 #line 1933 "gram.y"
     {
 							(yyval.condition) = (yyvsp[(1) - (1)].condition);
-						}
+						;}
     break;
 
   case 131:
-
-/* Line 1806 of yacc.c  */
 #line 1939 "gram.y"
     {
 							if (strcmp((yyvsp[(1) - (1)].str), "sqlstate") != 0)
@@ -4051,128 +3844,92 @@
 
 								(yyval.condition) = new;
 							}
-						}
+						;}
     break;
 
   case 132:
-
-/* Line 1806 of yacc.c  */
 #line 1975 "gram.y"
-    { (yyval.expr) = read_sql_expression(';', ";"); }
+    { (yyval.expr) = read_sql_expression(';', ";"); ;}
     break;
 
   case 133:
-
-/* Line 1806 of yacc.c  */
 #line 1979 "gram.y"
-    { (yyval.expr) = read_sql_expression(']', "]"); }
+    { (yyval.expr) = read_sql_expression(']', "]"); ;}
     break;
 
   case 134:
-
-/* Line 1806 of yacc.c  */
 #line 1983 "gram.y"
-    { (yyval.expr) = read_sql_expression(K_THEN, "THEN"); }
+    { (yyval.expr) = read_sql_expression(K_THEN, "THEN"); ;}
     break;
 
   case 135:
-
-/* Line 1806 of yacc.c  */
 #line 1987 "gram.y"
-    { (yyval.expr) = read_sql_expression(K_LOOP, "LOOP"); }
+    { (yyval.expr) = read_sql_expression(K_LOOP, "LOOP"); ;}
     break;
 
   case 136:
-
-/* Line 1806 of yacc.c  */
 #line 1991 "gram.y"
     {
 						plpgsql_ns_push(NULL);
 						(yyval.str) = NULL;
-					}
+					;}
     break;
 
   case 137:
-
-/* Line 1806 of yacc.c  */
 #line 1996 "gram.y"
     {
 						plpgsql_ns_push((yyvsp[(2) - (3)].str));
 						(yyval.str) = (yyvsp[(2) - (3)].str);
-					}
+					;}
     break;
 
   case 138:
-
-/* Line 1806 of yacc.c  */
 #line 2003 "gram.y"
     {
 						(yyval.str) = NULL;
-					}
+					;}
     break;
 
   case 139:
-
-/* Line 1806 of yacc.c  */
 #line 2007 "gram.y"
     {
 						if (plpgsql_ns_lookup_label(plpgsql_ns_top(), (yyvsp[(1) - (1)].str)) == NULL)
 							yyerror("label does not exist");
 						(yyval.str) = (yyvsp[(1) - (1)].str);
-					}
+					;}
     break;
 
   case 140:
-
-/* Line 1806 of yacc.c  */
 #line 2015 "gram.y"
-    { (yyval.expr) = NULL; }
+    { (yyval.expr) = NULL; ;}
     break;
 
   case 141:
-
-/* Line 1806 of yacc.c  */
 #line 2017 "gram.y"
-    { (yyval.expr) = (yyvsp[(2) - (2)].expr); }
+    { (yyval.expr) = (yyvsp[(2) - (2)].expr); ;}
     break;
 
   case 142:
-
-/* Line 1806 of yacc.c  */
 #line 2024 "gram.y"
     {
 						(yyval.str) = (yyvsp[(1) - (1)].word).ident;
-					}
+					;}
     break;
 
   case 143:
-
-/* Line 1806 of yacc.c  */
 #line 2028 "gram.y"
     {
 						if ((yyvsp[(1) - (1)].wdatum).ident == NULL) /* composite name not OK */
 							yyerror("syntax error");
 						(yyval.str) = (yyvsp[(1) - (1)].wdatum).ident;
-					}
+					;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 4163 "pl_gram.c"
+/* Line 1267 of yacc.c.  */
+#line 3931 "gram.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -4201,10 +3958,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -4212,44 +3965,45 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
-  yyerror_range[1] = yylloc;
+  yyerror_range[0] = yylloc;
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -4266,7 +4020,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -4282,7 +4036,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  yyerror_range[1] = yylsp[1-yylen];
+  yyerror_range[0] = yylsp[1-yylen];
   /* Do not reclaim the symbols of the rule which action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
@@ -4301,7 +4055,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -4316,7 +4070,7 @@
       if (yyssp == yyss)
 	YYABORT;
 
-      yyerror_range[1] = *yylsp;
+      yyerror_range[0] = *yylsp;
       yydestruct ("Error: popping",
 		  yystos[yystate], yyvsp, yylsp);
       YYPOPSTACK (1);
@@ -4324,12 +4078,15 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
-  yyerror_range[2] = yylloc;
+  yyerror_range[1] = yylloc;
   /* Using YYLLOC is tempting, but would change the location of
-     the lookahead.  YYLOC is available though.  */
-  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+     the look-ahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
   *++yylsp = yyloc;
 
   /* Shift the error token.  */
@@ -4353,7 +4110,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -4364,14 +4121,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, &yylloc);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, &yylloc);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -4395,8 +4147,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 2074 "gram.y"
 
 
diff -Naur postgresql-9.0.17/src/pl/plpgsql/src/pl_gram.h postgresql/src/pl/plpgsql/src/pl_gram.h
--- postgresql-9.0.17/src/pl/plpgsql/src/pl_gram.h	2014-03-17 12:55:48.000000000 -0700
+++ postgresql/src/pl/plpgsql/src/pl_gram.h	2014-03-31 18:06:31.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -129,16 +131,105 @@
      K_WHILE = 347
    };
 #endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define T_WORD 269
+#define T_CWORD 270
+#define T_DATUM 271
+#define LESS_LESS 272
+#define GREATER_GREATER 273
+#define K_ABSOLUTE 274
+#define K_ALIAS 275
+#define K_ALL 276
+#define K_BACKWARD 277
+#define K_BEGIN 278
+#define K_BY 279
+#define K_CASE 280
+#define K_CLOSE 281
+#define K_CONSTANT 282
+#define K_CONTINUE 283
+#define K_CURSOR 284
+#define K_DEBUG 285
+#define K_DECLARE 286
+#define K_DEFAULT 287
+#define K_DETAIL 288
+#define K_DIAGNOSTICS 289
+#define K_DUMP 290
+#define K_ELSE 291
+#define K_ELSIF 292
+#define K_END 293
+#define K_ERRCODE 294
+#define K_ERROR 295
+#define K_EXCEPTION 296
+#define K_EXECUTE 297
+#define K_EXIT 298
+#define K_FETCH 299
+#define K_FIRST 300
+#define K_FOR 301
+#define K_FORWARD 302
+#define K_FROM 303
+#define K_GET 304
+#define K_HINT 305
+#define K_IF 306
+#define K_IN 307
+#define K_INFO 308
+#define K_INSERT 309
+#define K_INTO 310
+#define K_IS 311
+#define K_LAST 312
+#define K_LOG 313
+#define K_LOOP 314
+#define K_MESSAGE 315
+#define K_MOVE 316
+#define K_NEXT 317
+#define K_NO 318
+#define K_NOT 319
+#define K_NOTICE 320
+#define K_NULL 321
+#define K_OPEN 322
+#define K_OPTION 323
+#define K_OR 324
+#define K_PERFORM 325
+#define K_PRIOR 326
+#define K_QUERY 327
+#define K_RAISE 328
+#define K_RELATIVE 329
+#define K_RESULT_OID 330
+#define K_RETURN 331
+#define K_REVERSE 332
+#define K_ROWTYPE 333
+#define K_ROW_COUNT 334
+#define K_SCROLL 335
+#define K_SQLSTATE 336
+#define K_STRICT 337
+#define K_THEN 338
+#define K_TO 339
+#define K_TYPE 340
+#define K_USE_COLUMN 341
+#define K_USE_VARIABLE 342
+#define K_USING 343
+#define K_VARIABLE_CONFLICT 344
+#define K_WARNING 345
+#define K_WHEN 346
+#define K_WHILE 347
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 114 "gram.y"
-
+{
 		core_YYSTYPE			core_yystype;
 		/* these fields must match core_YYSTYPE: */
 		int						ival;
@@ -187,15 +278,13 @@
 		PLpgSQL_diag_item		*diagitem;
 		PLpgSQL_stmt_fetch		*fetch;
 		PLpgSQL_case_when		*casewhen;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 195 "pl_gram.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 284 "gram.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE plpgsql_yylval;
@@ -214,4 +303,3 @@
 #endif
 
 extern YYLTYPE plpgsql_yylloc;
-
