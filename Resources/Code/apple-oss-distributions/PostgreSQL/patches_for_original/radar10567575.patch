diff -Naur postgresql-9.3.4/contrib/cube/cubeparse.c postgresql/contrib/cube/cubeparse.c
--- postgresql-9.3.4/contrib/cube/cubeparse.c	2014-03-17 12:44:43.000000000 -0700
+++ postgresql/contrib/cube/cubeparse.c	2014-03-31 15:37:26.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,45 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         cube_yyparse
-#define yylex           cube_yylex
-#define yyerror         cube_yyerror
-#define yylval          cube_yylval
-#define yychar          cube_yychar
-#define yydebug         cube_yydebug
-#define yynerrs         cube_yynerrs
+#define yyparse cube_yyparse
+#define yylex   cube_yylex
+#define yyerror cube_yyerror
+#define yylval  cube_yylval
+#define yychar  cube_yychar
+#define yydebug cube_yydebug
+#define yynerrs cube_yynerrs
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     CUBEFLOAT = 258,
+     O_PAREN = 259,
+     C_PAREN = 260,
+     O_BRACKET = 261,
+     C_BRACKET = 262,
+     COMMA = 263
+   };
+#endif
+/* Tokens.  */
+#define CUBEFLOAT 258
+#define O_PAREN 259
+#define C_PAREN 260
+#define O_BRACKET 261
+#define C_BRACKET 262
+#define COMMA 263
 
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+/* Copy the first part of user declarations.  */
 #line 1 "cubeparse.y"
 
 /* contrib/cube/cubeparse.y */
@@ -113,9 +133,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 118 "cubeparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -134,37 +151,20 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     CUBEFLOAT = 258,
-     O_PAREN = 259,
-     C_PAREN = 260,
-     O_BRACKET = 261,
-     C_BRACKET = 262,
-     COMMA = 263
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef int YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 168 "cubeparse.c"
+/* Line 216 of yacc.c.  */
+#line 168 "cubeparse.tab.c"
 
 #ifdef short
 # undef short
@@ -239,14 +239,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -267,11 +267,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -294,24 +294,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -327,9 +327,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -340,27 +340,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -378,7 +357,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  9
@@ -488,8 +484,8 @@
        0,     2,     5,     3,     1,     1,     3,     1,     3
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -520,7 +516,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -528,12 +525,6 @@
       16,    15,    10,    11,    13,     7,     0,    17
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-4))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        3,     3,     4,     4,     6,     5,     3,    10,     8,     0,
@@ -560,18 +551,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -581,6 +563,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -622,10 +605,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -732,20 +724,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -780,11 +769,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       , result);
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -821,6 +810,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -923,142 +913,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1092,9 +1055,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1110,16 +1074,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1146,37 +1112,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1184,28 +1127,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1235,6 +1201,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1242,6 +1209,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1264,8 +1232,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1276,6 +1245,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1285,9 +1255,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1296,16 +1263,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1331,22 +1298,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1386,8 +1357,6 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 51 "cubeparse.y"
     {
 		int dim;
@@ -1413,12 +1382,10 @@
 
 		*result = write_box( dim, (yyvsp[(2) - (5)]), (yyvsp[(4) - (5)]) );
 
-	}
+	;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 78 "cubeparse.y"
     {
 		int dim;
@@ -1443,12 +1410,10 @@
 		}
 
 		*result = write_box( dim, (yyvsp[(1) - (3)]), (yyvsp[(3) - (3)]) );
-	}
+	;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 104 "cubeparse.y"
     {
 		int dim;
@@ -1464,12 +1429,10 @@
 		}
 
 		*result = write_point_as_box((yyvsp[(1) - (1)]), dim);
-	}
+	;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 121 "cubeparse.y"
     {
 		int dim;
@@ -1484,57 +1447,39 @@
 			YYABORT;
 		}
 		*result = write_point_as_box((yyvsp[(1) - (1)]), dim);
-	}
+	;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 138 "cubeparse.y"
     {
 		(yyval) = (yyvsp[(2) - (3)]);
-	}
+	;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 144 "cubeparse.y"
     {
 		/* alloc enough space to be sure whole list will fit */
 		(yyval) = palloc(scanbuflen + 1);
 		strcpy((yyval), (yyvsp[(1) - (1)]));
-	}
+	;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 150 "cubeparse.y"
     {
 		(yyval) = (yyvsp[(1) - (3)]);
 		strcat((yyval), ",");
 		strcat((yyval), (yyvsp[(3) - (3)]));
-	}
+	;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1525 "cubeparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1481 "cubeparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1543,6 +1488,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1562,10 +1508,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1573,36 +1515,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (result, YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (result, yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (result, yymsg);
+	  }
+	else
+	  {
+	    yyerror (result, YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1610,7 +1553,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1627,7 +1570,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1661,7 +1604,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1684,6 +1627,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1708,7 +1654,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1719,14 +1665,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, result);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, result);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1750,8 +1691,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 157 "cubeparse.y"
 
 
diff -Naur postgresql-9.3.4/contrib/seg/segparse.c postgresql/contrib/seg/segparse.c
--- postgresql-9.3.4/contrib/seg/segparse.c	2014-03-17 12:44:44.000000000 -0700
+++ postgresql/contrib/seg/segparse.c	2014-03-31 15:38:07.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,41 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         seg_yyparse
-#define yylex           seg_yylex
-#define yyerror         seg_yyerror
-#define yylval          seg_yylval
-#define yychar          seg_yychar
-#define yydebug         seg_yydebug
-#define yynerrs         seg_yynerrs
+#define yyparse seg_yyparse
+#define yylex   seg_yylex
+#define yyerror seg_yyerror
+#define yylval  seg_yylval
+#define yychar  seg_yychar
+#define yydebug seg_yydebug
+#define yynerrs seg_yynerrs
 
 
-/* Copy the first part of user declarations.  */
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     SEGFLOAT = 258,
+     RANGE = 259,
+     PLUMIN = 260,
+     EXTENSION = 261
+   };
+#endif
+/* Tokens.  */
+#define SEGFLOAT 258
+#define RANGE 259
+#define PLUMIN 260
+#define EXTENSION 261
+
 
-/* Line 268 of yacc.c  */
+
+
+/* Copy the first part of user declarations.  */
 #line 1 "segparse.y"
 
 /* contrib/seg/segparse.y */
@@ -116,9 +132,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 121 "segparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -137,52 +150,32 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     SEGFLOAT = 258,
-     RANGE = 259,
-     PLUMIN = 260,
-     EXTENSION = 261
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 47 "segparse.y"
-
+{
 	struct BND {
 		float val;
 		char  ext;
 		char  sigd;
 	} bnd;
 	char * text;
-
-
-
-/* Line 293 of yacc.c  */
-#line 174 "segparse.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 166 "segparse.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 186 "segparse.c"
+/* Line 216 of yacc.c.  */
+#line 179 "segparse.tab.c"
 
 #ifdef short
 # undef short
@@ -257,14 +250,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -285,11 +278,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -312,24 +305,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -345,9 +338,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -358,27 +351,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -396,7 +368,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  8
@@ -505,8 +494,8 @@
        0,     2,     3,     3,     2,     2,     1,     1,     2,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -537,7 +526,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -545,12 +535,6 @@
        9,    10,    12
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-3))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        2,    -1,     3,     4,     3,     6,     3,     9,     0,     6,
@@ -577,18 +561,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -598,6 +573,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -639,10 +615,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -749,20 +734,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -797,11 +779,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       , result);
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -838,6 +820,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -940,142 +923,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1109,9 +1065,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1127,16 +1084,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1163,37 +1122,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1201,28 +1137,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1252,6 +1211,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1259,6 +1219,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1281,8 +1242,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1293,6 +1255,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1302,9 +1265,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1313,16 +1273,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1348,22 +1308,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1403,8 +1367,6 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 68 "segparse.y"
     {
 		result->lower = (yyvsp[(1) - (3)].bnd).val - (yyvsp[(3) - (3)].bnd).val;
@@ -1415,12 +1377,10 @@
 		result->u_sigd = Max(Min(6, significant_digits(strbuf)), Max((yyvsp[(1) - (3)].bnd).sigd, (yyvsp[(3) - (3)].bnd).sigd));
 		result->l_ext = '\0';
 		result->u_ext = '\0';
-	}
+	;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 80 "segparse.y"
     {
 		result->lower = (yyvsp[(1) - (3)].bnd).val;
@@ -1437,12 +1397,10 @@
 		result->u_sigd = (yyvsp[(3) - (3)].bnd).sigd;
 		result->l_ext = ( (yyvsp[(1) - (3)].bnd).ext ? (yyvsp[(1) - (3)].bnd).ext : '\0' );
 		result->u_ext = ( (yyvsp[(3) - (3)].bnd).ext ? (yyvsp[(3) - (3)].bnd).ext : '\0' );
-	}
+	;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 98 "segparse.y"
     {
 		result->lower = (yyvsp[(1) - (2)].bnd).val;
@@ -1451,12 +1409,10 @@
 		result->u_sigd = 0;
 		result->l_ext = ( (yyvsp[(1) - (2)].bnd).ext ? (yyvsp[(1) - (2)].bnd).ext : '\0' );
 		result->u_ext = '-';
-	}
+	;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 108 "segparse.y"
     {
 		result->lower = -HUGE_VAL;
@@ -1465,23 +1421,19 @@
 		result->u_sigd = (yyvsp[(2) - (2)].bnd).sigd;
 		result->l_ext = '-';
 		result->u_ext = ( (yyvsp[(2) - (2)].bnd).ext ? (yyvsp[(2) - (2)].bnd).ext : '\0' );
-	}
+	;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 118 "segparse.y"
     {
 		result->lower = result->upper = (yyvsp[(1) - (1)].bnd).val;
 		result->l_sigd = result->u_sigd = (yyvsp[(1) - (1)].bnd).sigd;
 		result->l_ext = result->u_ext = ( (yyvsp[(1) - (1)].bnd).ext ? (yyvsp[(1) - (1)].bnd).ext : '\0' );
-	}
+	;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 126 "segparse.y"
     {
 		/* temp variable avoids a gcc 3.3.x bug on Sparc64 */
@@ -1490,12 +1442,10 @@
 		(yyval.bnd).ext = '\0';
 		(yyval.bnd).sigd = significant_digits((yyvsp[(1) - (1)].text));
 		(yyval.bnd).val = val;
-	}
+	;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 135 "segparse.y"
     {
 		/* temp variable avoids a gcc 3.3.x bug on Sparc64 */
@@ -1504,12 +1454,10 @@
 		(yyval.bnd).ext = (yyvsp[(1) - (2)].text)[0];
 		(yyval.bnd).sigd = significant_digits((yyvsp[(2) - (2)].text));
 		(yyval.bnd).val = val;
-	}
+	;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 146 "segparse.y"
     {
 		/* temp variable avoids a gcc 3.3.x bug on Sparc64 */
@@ -1518,26 +1466,14 @@
 		(yyval.bnd).ext = '\0';
 		(yyval.bnd).sigd = significant_digits((yyvsp[(1) - (1)].text));
 		(yyval.bnd).val = val;
-	}
+	;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1528 "segparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1475 "segparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1546,6 +1482,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1565,10 +1502,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1576,36 +1509,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (result, YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (result, yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (result, yymsg);
+	  }
+	else
+	  {
+	    yyerror (result, YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1613,7 +1547,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1630,7 +1564,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1664,7 +1598,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1687,6 +1621,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1711,7 +1648,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1722,14 +1659,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, result);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, result);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1753,8 +1685,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 156 "segparse.y"
 
 
diff -Naur postgresql-9.3.4/src/backend/bootstrap/bootparse.c postgresql/src/backend/bootstrap/bootparse.c
--- postgresql-9.3.4/src/backend/bootstrap/bootparse.c	2014-03-17 12:44:41.000000000 -0700
+++ postgresql/src/backend/bootstrap/bootparse.c	2014-03-31 15:39:05.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,85 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         boot_yyparse
-#define yylex           boot_yylex
-#define yyerror         boot_yyerror
-#define yylval          boot_yylval
-#define yychar          boot_yychar
-#define yydebug         boot_yydebug
-#define yynerrs         boot_yynerrs
+#define yyparse boot_yyparse
+#define yylex   boot_yylex
+#define yyerror boot_yyerror
+#define yylval  boot_yylval
+#define yychar  boot_yychar
+#define yydebug boot_yydebug
+#define yynerrs boot_yynerrs
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     CONST_P = 258,
+     ID = 259,
+     OPEN = 260,
+     XCLOSE = 261,
+     XCREATE = 262,
+     INSERT_TUPLE = 263,
+     XDECLARE = 264,
+     INDEX = 265,
+     ON = 266,
+     USING = 267,
+     XBUILD = 268,
+     INDICES = 269,
+     UNIQUE = 270,
+     XTOAST = 271,
+     COMMA = 272,
+     EQUALS = 273,
+     LPAREN = 274,
+     RPAREN = 275,
+     OBJ_ID = 276,
+     XBOOTSTRAP = 277,
+     XSHARED_RELATION = 278,
+     XWITHOUT_OIDS = 279,
+     XROWTYPE_OID = 280,
+     NULLVAL = 281,
+     low = 282,
+     high = 283
+   };
+#endif
+/* Tokens.  */
+#define CONST_P 258
+#define ID 259
+#define OPEN 260
+#define XCLOSE 261
+#define XCREATE 262
+#define INSERT_TUPLE 263
+#define XDECLARE 264
+#define INDEX 265
+#define ON 266
+#define USING 267
+#define XBUILD 268
+#define INDICES 269
+#define UNIQUE 270
+#define XTOAST 271
+#define COMMA 272
+#define EQUALS 273
+#define LPAREN 274
+#define RPAREN 275
+#define OBJ_ID 276
+#define XBOOTSTRAP 277
+#define XSHARED_RELATION 278
+#define XWITHOUT_OIDS 279
+#define XROWTYPE_OID 280
+#define NULLVAL 281
+#define low 282
+#define high 283
 
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+/* Copy the first part of user declarations.  */
 #line 1 "bootparse.y"
 
 /*-------------------------------------------------------------------------
@@ -169,9 +229,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 174 "bootparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -190,73 +247,31 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     CONST_P = 258,
-     ID = 259,
-     OPEN = 260,
-     XCLOSE = 261,
-     XCREATE = 262,
-     INSERT_TUPLE = 263,
-     XDECLARE = 264,
-     INDEX = 265,
-     ON = 266,
-     USING = 267,
-     XBUILD = 268,
-     INDICES = 269,
-     UNIQUE = 270,
-     XTOAST = 271,
-     COMMA = 272,
-     EQUALS = 273,
-     LPAREN = 274,
-     RPAREN = 275,
-     OBJ_ID = 276,
-     XBOOTSTRAP = 277,
-     XSHARED_RELATION = 278,
-     XWITHOUT_OIDS = 279,
-     XROWTYPE_OID = 280,
-     NULLVAL = 281,
-     low = 282,
-     high = 283
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 99 "bootparse.y"
-
+{
 	List		*list;
 	IndexElem	*ielem;
 	char		*str;
 	int			ival;
 	Oid			oidval;
-
-
-
-/* Line 293 of yacc.c  */
-#line 248 "bootparse.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 262 "bootparse.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 260 "bootparse.c"
+/* Line 216 of yacc.c.  */
+#line 275 "bootparse.tab.c"
 
 #ifdef short
 # undef short
@@ -331,14 +346,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -359,11 +374,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -386,24 +401,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -419,9 +434,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -432,27 +447,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -470,7 +464,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  28
@@ -584,7 +595,7 @@
   "OBJ_ID", "XBOOTSTRAP", "XSHARED_RELATION", "XWITHOUT_OIDS",
   "XROWTYPE_OID", "NULLVAL", "low", "high", "$accept", "TopLevel",
   "Boot_Queries", "Boot_Query", "Boot_OpenStmt", "Boot_CloseStmt",
-  "Boot_CreateStmt", "$@1", "$@2", "Boot_InsertStmt", "$@3",
+  "Boot_CreateStmt", "@1", "@2", "Boot_InsertStmt", "@3",
   "Boot_DeclareIndexStmt", "Boot_DeclareUniqueIndexStmt",
   "Boot_DeclareToastStmt", "Boot_BuildIndsStmt", "boot_index_params",
   "boot_index_param", "optbootstrap", "optsharedrelation",
@@ -627,8 +638,8 @@
        1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -679,7 +690,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -694,12 +706,6 @@
       80,    77,     0,    91,    80
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-41))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        1,     2,     3,    26,     3,     4,     3,     4,    48,    32,
@@ -741,18 +747,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -762,6 +759,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -803,10 +801,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -910,20 +917,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -957,11 +961,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -998,6 +1002,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -1100,142 +1105,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1267,9 +1245,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1285,16 +1264,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1321,37 +1302,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1359,28 +1317,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1410,6 +1391,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1417,6 +1399,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1439,8 +1422,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1451,6 +1435,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1460,9 +1445,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1471,16 +1453,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1506,22 +1488,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1561,41 +1547,33 @@
   switch (yyn)
     {
         case 14:
-
-/* Line 1806 of yacc.c  */
 #line 149 "bootparse.y"
     {
 					do_start();
 					boot_openrel((yyvsp[(2) - (2)].str));
 					do_end();
-				}
+				;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 158 "bootparse.y"
     {
 					do_start();
 					closerel((yyvsp[(2) - (2)].str));
 					do_end();
-				}
+				;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 164 "bootparse.y"
     {
 					do_start();
 					closerel(NULL);
 					do_end();
-				}
+				;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 173 "bootparse.y"
     {
 					do_start();
@@ -1605,21 +1583,17 @@
 						 (yyvsp[(5) - (8)].ival) ? " shared" : "",
 						 (yyvsp[(2) - (8)].str),
 						 (yyvsp[(3) - (8)].oidval));
-				}
+				;}
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 183 "bootparse.y"
     {
 					do_end();
-				}
+				;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 187 "bootparse.y"
     {
 					TupleDesc tupdesc;
@@ -1691,12 +1665,10 @@
 						elog(DEBUG4, "relation created with OID %u", id);
 					}
 					do_end();
-				}
+				;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 262 "bootparse.y"
     {
 					do_start();
@@ -1705,12 +1677,10 @@
 					else
 						elog(DEBUG4, "inserting row");
 					num_columns_read = 0;
-				}
+				;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 271 "bootparse.y"
     {
 					if (num_columns_read != numattr)
@@ -1720,12 +1690,10 @@
 						elog(FATAL, "relation not open");
 					InsertOneTuple((yyvsp[(2) - (6)].oidval));
 					do_end();
-				}
+				;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 284 "bootparse.y"
     {
 					IndexStmt *stmt = makeNode(IndexStmt);
@@ -1763,12 +1731,10 @@
 								true, /* skip_build */
 								false);
 					do_end();
-				}
+				;}
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 325 "bootparse.y"
     {
 					IndexStmt *stmt = makeNode(IndexStmt);
@@ -1806,49 +1772,39 @@
 								true, /* skip_build */
 								false);
 					do_end();
-				}
+				;}
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 366 "bootparse.y"
     {
 					do_start();
 
 					BootstrapToastTable((yyvsp[(6) - (6)].str), (yyvsp[(3) - (6)].oidval), (yyvsp[(4) - (6)].oidval));
 					do_end();
-				}
+				;}
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 376 "bootparse.y"
     {
 					do_start();
 					build_indices();
 					do_end();
-				}
+				;}
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 385 "bootparse.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 386 "bootparse.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 391 "bootparse.y"
     {
 					IndexElem *n = makeNode(IndexElem);
@@ -1860,149 +1816,103 @@
 					n->ordering = SORTBY_DEFAULT;
 					n->nulls_ordering = SORTBY_NULLS_DEFAULT;
 					(yyval.ielem) = n;
-				}
+				;}
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 405 "bootparse.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 406 "bootparse.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 410 "bootparse.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 411 "bootparse.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 415 "bootparse.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 34:
-
-/* Line 1806 of yacc.c  */
 #line 416 "bootparse.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 35:
-
-/* Line 1806 of yacc.c  */
 #line 420 "bootparse.y"
-    { (yyval.oidval) = (yyvsp[(2) - (2)].oidval); }
+    { (yyval.oidval) = (yyvsp[(2) - (2)].oidval); ;}
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 421 "bootparse.y"
-    { (yyval.oidval) = InvalidOid; }
+    { (yyval.oidval) = InvalidOid; ;}
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 431 "bootparse.y"
     {
 				   if (++numattr > MAXATTR)
 						elog(FATAL, "too many columns");
 				   DefineAttr((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), numattr-1);
-				}
+				;}
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 439 "bootparse.y"
-    { (yyval.oidval) = atooid((yyvsp[(1) - (1)].str)); }
+    { (yyval.oidval) = atooid((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 443 "bootparse.y"
-    { (yyval.oidval) = (yyvsp[(3) - (3)].oidval); }
+    { (yyval.oidval) = (yyvsp[(3) - (3)].oidval); ;}
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 444 "bootparse.y"
-    { (yyval.oidval) = InvalidOid; }
+    { (yyval.oidval) = InvalidOid; ;}
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 455 "bootparse.y"
-    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); }
+    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); ;}
     break;
 
   case 47:
-
-/* Line 1806 of yacc.c  */
 #line 457 "bootparse.y"
-    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); }
+    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); ;}
     break;
 
   case 48:
-
-/* Line 1806 of yacc.c  */
 #line 459 "bootparse.y"
-    { InsertOneNull(num_columns_read++); }
+    { InsertOneNull(num_columns_read++); ;}
     break;
 
   case 49:
-
-/* Line 1806 of yacc.c  */
 #line 463 "bootparse.y"
-    { (yyval.str) = yylval.str; }
+    { (yyval.str) = yylval.str; ;}
     break;
 
   case 50:
-
-/* Line 1806 of yacc.c  */
 #line 467 "bootparse.y"
-    { (yyval.str) = yylval.str; }
+    { (yyval.str) = yylval.str; ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1993 "bootparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1914 "bootparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -2011,6 +1921,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -2030,10 +1941,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -2041,36 +1948,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -2078,7 +1986,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -2095,7 +2003,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -2129,7 +2037,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -2152,6 +2060,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -2176,7 +2087,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -2187,14 +2098,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -2218,8 +2124,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 469 "bootparse.y"
 
 
diff -Naur postgresql-9.3.4/src/backend/parser/gram.c postgresql/src/backend/parser/gram.c
--- postgresql-9.3.4/src/backend/parser/gram.c	2014-03-17 12:44:41.000000000 -0700
+++ postgresql/src/backend/parser/gram.c	2014-03-31 15:42:32.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,216 +55,18 @@
 /* Pure parsers.  */
 #define YYPURE 1
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 1
 
 /* Substitute the variable and function names.  */
-#define yyparse         base_yyparse
-#define yylex           base_yylex
-#define yyerror         base_yyerror
-#define yylval          base_yylval
-#define yychar          base_yychar
-#define yydebug         base_yydebug
-#define yynerrs         base_yynerrs
-#define yylloc          base_yylloc
-
-/* Copy the first part of user declarations.  */
-
-/* Line 268 of yacc.c  */
-#line 1 "gram.y"
-
-
-/*#define YYDEBUG 1*/
-/*-------------------------------------------------------------------------
- *
- * gram.y
- *	  POSTGRESQL BISON rules/actions
- *
- * Portions Copyright (c) 1996-2013, PostgreSQL Global Development Group
- * Portions Copyright (c) 1994, Regents of the University of California
- *
- *
- * IDENTIFICATION
- *	  src/backend/parser/gram.y
- *
- * HISTORY
- *	  AUTHOR			DATE			MAJOR EVENT
- *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
- *	  Andrew Yu			Oct, 1994		lispy code conversion
- *
- * NOTES
- *	  CAPITALS are used to represent terminal symbols.
- *	  non-capitals are used to represent non-terminals.
- *
- *	  In general, nothing in this file should initiate database accesses
- *	  nor depend on changeable state (such as SET variables).  If you do
- *	  database accesses, your code will fail when we have aborted the
- *	  current transaction and are just parsing commands to find the next
- *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
- *	  will do the wrong thing in multi-query strings like this:
- *			SET SQL_inheritance TO off; SELECT * FROM foo;
- *	  because the entire string is parsed by gram.y before the SET gets
- *	  executed.  Anything that depends on the database or changeable state
- *	  should be handled during parse analysis so that it happens at the
- *	  right time not the wrong time.  The handling of SQL_inheritance is
- *	  a good example.
- *
- * WARNINGS
- *	  If you use a list, make sure the datum is a node so that the printing
- *	  routines work.
- *
- *	  Sometimes we assign constants to makeStrings. Make sure we don't free
- *	  those.
- *
- *-------------------------------------------------------------------------
- */
-#include "postgres.h"
-
-#include <ctype.h>
-#include <limits.h>
-
-#include "catalog/index.h"
-#include "catalog/namespace.h"
-#include "catalog/pg_trigger.h"
-#include "commands/defrem.h"
-#include "commands/trigger.h"
-#include "nodes/makefuncs.h"
-#include "nodes/nodeFuncs.h"
-#include "parser/gramparse.h"
-#include "parser/parser.h"
-#include "storage/lmgr.h"
-#include "utils/date.h"
-#include "utils/datetime.h"
-#include "utils/numeric.h"
-#include "utils/xml.h"
-
-
-/*
- * Location tracking support --- simpler than bison's default, since we only
- * want to track the start position not the end position of each nonterminal.
- */
-#define YYLLOC_DEFAULT(Current, Rhs, N) \
-	do { \
-		if ((N) > 0) \
-			(Current) = (Rhs)[1]; \
-		else \
-			(Current) = (-1); \
-	} while (0)
-
-/*
- * The above macro assigns -1 (unknown) as the parse location of any
- * nonterminal that was reduced from an empty rule.  This is problematic
- * for nonterminals defined like
- *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
- * because we'll set -1 as the location during the first reduction and then
- * copy it during each subsequent reduction, leaving us with -1 for the
- * location even when the list is not empty.  To fix that, do this in the
- * action for the nonempty rule(s):
- *		if (@$ < 0) @$ = @2;
- * (Although we have many nonterminals that follow this pattern, we only
- * bother with fixing @$ like this when the nonterminal's parse location
- * is actually referenced in some rule.)
- */
-
-/*
- * Bison doesn't allocate anything that needs to live across parser calls,
- * so we can easily have it use palloc instead of malloc.  This prevents
- * memory leaks if we error out during parsing.  Note this only works with
- * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
- * if possible, so there's not really much problem anyhow, at least if
- * you're building with gcc.
- */
-#define YYMALLOC palloc
-#define YYFREE   pfree
-
-/* Private struct for the result of privilege_target production */
-typedef struct PrivTarget
-{
-	GrantTargetType targtype;
-	GrantObjectType objtype;
-	List	   *objs;
-} PrivTarget;
-
-/* ConstraintAttributeSpec yields an integer bitmask of these flags: */
-#define CAS_NOT_DEFERRABLE			0x01
-#define CAS_DEFERRABLE				0x02
-#define CAS_INITIALLY_IMMEDIATE		0x04
-#define CAS_INITIALLY_DEFERRED		0x08
-#define CAS_NOT_VALID				0x10
-#define CAS_NO_INHERIT				0x20
-
-
-#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
-#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)
-
-static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
-						 const char *msg);
-static Node *makeColumnRef(char *colname, List *indirection,
-						   int location, core_yyscan_t yyscanner);
-static Node *makeTypeCast(Node *arg, TypeName *typename, int location);
-static Node *makeStringConst(char *str, int location);
-static Node *makeStringConstCast(char *str, int location, TypeName *typename);
-static Node *makeIntConst(int val, int location);
-static Node *makeFloatConst(char *str, int location);
-static Node *makeBitStringConst(char *str, int location);
-static Node *makeNullAConst(int location);
-static Node *makeAConst(Value *v, int location);
-static Node *makeBoolAConst(bool state, int location);
-static void check_qualified_name(List *names, core_yyscan_t yyscanner);
-static List *check_func_name(List *names, core_yyscan_t yyscanner);
-static List *check_indirection(List *indirection, core_yyscan_t yyscanner);
-static List *extractArgTypes(List *parameters);
-static void insertSelectOptions(SelectStmt *stmt,
-								List *sortClause, List *lockingClause,
-								Node *limitOffset, Node *limitCount,
-								WithClause *withClause,
-								core_yyscan_t yyscanner);
-static Node *makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg);
-static Node *doNegate(Node *n, int location);
-static void doNegateFloat(Value *v);
-static Node *makeAArrayExpr(List *elements, int location);
-static Node *makeXmlExpr(XmlExprOp op, char *name, List *named_args,
-						 List *args, int location);
-static List *mergeTableFuncParameters(List *func_args, List *columns);
-static TypeName *TableFuncTypeName(List *columns);
-static RangeVar *makeRangeVarFromAnyName(List *names, int position, core_yyscan_t yyscanner);
-static void SplitColQualList(List *qualList,
-							 List **constraintList, CollateClause **collClause,
-							 core_yyscan_t yyscanner);
-static void processCASbits(int cas_bits, int location, const char *constrType,
-			   bool *deferrable, bool *initdeferred, bool *not_valid,
-			   bool *no_inherit, core_yyscan_t yyscanner);
-static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);
-
-
-
-/* Line 268 of yacc.c  */
-#line 246 "gram.c"
-
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-
-/* Enabling verbose error messages.  */
-#ifdef YYERROR_VERBOSE
-# undef YYERROR_VERBOSE
-# define YYERROR_VERBOSE 1
-#else
-# define YYERROR_VERBOSE 0
-#endif
-
-/* Enabling the token table.  */
-#ifndef YYTOKEN_TABLE
-# define YYTOKEN_TABLE 0
-#endif
-
+#define yyparse base_yyparse
+#define yylex   base_yylex
+#define yyerror base_yyerror
+#define yylval  base_yylval
+#define yychar  base_yychar
+#define yydebug base_yydebug
+#define yynerrs base_yynerrs
+#define yylloc base_yylloc
 
 /* Tokens.  */
 #ifndef YYTOKENTYPE
@@ -688,16 +493,618 @@
      UMINUS = 674
    };
 #endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define ABORT_P 269
+#define ABSOLUTE_P 270
+#define ACCESS 271
+#define ACTION 272
+#define ADD_P 273
+#define ADMIN 274
+#define AFTER 275
+#define AGGREGATE 276
+#define ALL 277
+#define ALSO 278
+#define ALTER 279
+#define ALWAYS 280
+#define ANALYSE 281
+#define ANALYZE 282
+#define AND 283
+#define ANY 284
+#define ARRAY 285
+#define AS 286
+#define ASC 287
+#define ASSERTION 288
+#define ASSIGNMENT 289
+#define ASYMMETRIC 290
+#define AT 291
+#define ATTRIBUTE 292
+#define AUTHORIZATION 293
+#define BACKWARD 294
+#define BEFORE 295
+#define BEGIN_P 296
+#define BETWEEN 297
+#define BIGINT 298
+#define BINARY 299
+#define BIT 300
+#define BOOLEAN_P 301
+#define BOTH 302
+#define BY 303
+#define CACHE 304
+#define CALLED 305
+#define CASCADE 306
+#define CASCADED 307
+#define CASE 308
+#define CAST 309
+#define CATALOG_P 310
+#define CHAIN 311
+#define CHAR_P 312
+#define CHARACTER 313
+#define CHARACTERISTICS 314
+#define CHECK 315
+#define CHECKPOINT 316
+#define CLASS 317
+#define CLOSE 318
+#define CLUSTER 319
+#define COALESCE 320
+#define COLLATE 321
+#define COLLATION 322
+#define COLUMN 323
+#define COMMENT 324
+#define COMMENTS 325
+#define COMMIT 326
+#define COMMITTED 327
+#define CONCURRENTLY 328
+#define CONFIGURATION 329
+#define CONNECTION 330
+#define CONSTRAINT 331
+#define CONSTRAINTS 332
+#define CONTENT_P 333
+#define CONTINUE_P 334
+#define CONVERSION_P 335
+#define COPY 336
+#define COST 337
+#define CREATE 338
+#define CROSS 339
+#define CSV 340
+#define CURRENT_P 341
+#define CURRENT_CATALOG 342
+#define CURRENT_DATE 343
+#define CURRENT_ROLE 344
+#define CURRENT_SCHEMA 345
+#define CURRENT_TIME 346
+#define CURRENT_TIMESTAMP 347
+#define CURRENT_USER 348
+#define CURSOR 349
+#define CYCLE 350
+#define DATA_P 351
+#define DATABASE 352
+#define DAY_P 353
+#define DEALLOCATE 354
+#define DEC 355
+#define DECIMAL_P 356
+#define DECLARE 357
+#define DEFAULT 358
+#define DEFAULTS 359
+#define DEFERRABLE 360
+#define DEFERRED 361
+#define DEFINER 362
+#define DELETE_P 363
+#define DELIMITER 364
+#define DELIMITERS 365
+#define DESC 366
+#define DICTIONARY 367
+#define DISABLE_P 368
+#define DISCARD 369
+#define DISTINCT 370
+#define DO 371
+#define DOCUMENT_P 372
+#define DOMAIN_P 373
+#define DOUBLE_P 374
+#define DROP 375
+#define EACH 376
+#define ELSE 377
+#define ENABLE_P 378
+#define ENCODING 379
+#define ENCRYPTED 380
+#define END_P 381
+#define ENUM_P 382
+#define ESCAPE 383
+#define EVENT 384
+#define EXCEPT 385
+#define EXCLUDE 386
+#define EXCLUDING 387
+#define EXCLUSIVE 388
+#define EXECUTE 389
+#define EXISTS 390
+#define EXPLAIN 391
+#define EXTENSION 392
+#define EXTERNAL 393
+#define EXTRACT 394
+#define FALSE_P 395
+#define FAMILY 396
+#define FETCH 397
+#define FIRST_P 398
+#define FLOAT_P 399
+#define FOLLOWING 400
+#define FOR 401
+#define FORCE 402
+#define FOREIGN 403
+#define FORWARD 404
+#define FREEZE 405
+#define FROM 406
+#define FULL 407
+#define FUNCTION 408
+#define FUNCTIONS 409
+#define GLOBAL 410
+#define GRANT 411
+#define GRANTED 412
+#define GREATEST 413
+#define GROUP_P 414
+#define HANDLER 415
+#define HAVING 416
+#define HEADER_P 417
+#define HOLD 418
+#define HOUR_P 419
+#define IDENTITY_P 420
+#define IF_P 421
+#define ILIKE 422
+#define IMMEDIATE 423
+#define IMMUTABLE 424
+#define IMPLICIT_P 425
+#define IN_P 426
+#define INCLUDING 427
+#define INCREMENT 428
+#define INDEX 429
+#define INDEXES 430
+#define INHERIT 431
+#define INHERITS 432
+#define INITIALLY 433
+#define INLINE_P 434
+#define INNER_P 435
+#define INOUT 436
+#define INPUT_P 437
+#define INSENSITIVE 438
+#define INSERT 439
+#define INSTEAD 440
+#define INT_P 441
+#define INTEGER 442
+#define INTERSECT 443
+#define INTERVAL 444
+#define INTO 445
+#define INVOKER 446
+#define IS 447
+#define ISNULL 448
+#define ISOLATION 449
+#define JOIN 450
+#define KEY 451
+#define LABEL 452
+#define LANGUAGE 453
+#define LARGE_P 454
+#define LAST_P 455
+#define LATERAL_P 456
+#define LC_COLLATE_P 457
+#define LC_CTYPE_P 458
+#define LEADING 459
+#define LEAKPROOF 460
+#define LEAST 461
+#define LEFT 462
+#define LEVEL 463
+#define LIKE 464
+#define LIMIT 465
+#define LISTEN 466
+#define LOAD 467
+#define LOCAL 468
+#define LOCALTIME 469
+#define LOCALTIMESTAMP 470
+#define LOCATION 471
+#define LOCK_P 472
+#define MAPPING 473
+#define MATCH 474
+#define MATERIALIZED 475
+#define MAXVALUE 476
+#define MINUTE_P 477
+#define MINVALUE 478
+#define MODE 479
+#define MONTH_P 480
+#define MOVE 481
+#define NAME_P 482
+#define NAMES 483
+#define NATIONAL 484
+#define NATURAL 485
+#define NCHAR 486
+#define NEXT 487
+#define NO 488
+#define NONE 489
+#define NOT 490
+#define NOTHING 491
+#define NOTIFY 492
+#define NOTNULL 493
+#define NOWAIT 494
+#define NULL_P 495
+#define NULLIF 496
+#define NULLS_P 497
+#define NUMERIC 498
+#define OBJECT_P 499
+#define OF 500
+#define OFF 501
+#define OFFSET 502
+#define OIDS 503
+#define ON 504
+#define ONLY 505
+#define OPERATOR 506
+#define OPTION 507
+#define OPTIONS 508
+#define OR 509
+#define ORDER 510
+#define OUT_P 511
+#define OUTER_P 512
+#define OVER 513
+#define OVERLAPS 514
+#define OVERLAY 515
+#define OWNED 516
+#define OWNER 517
+#define PARSER 518
+#define PARTIAL 519
+#define PARTITION 520
+#define PASSING 521
+#define PASSWORD 522
+#define PLACING 523
+#define PLANS 524
+#define POSITION 525
+#define PRECEDING 526
+#define PRECISION 527
+#define PRESERVE 528
+#define PREPARE 529
+#define PREPARED 530
+#define PRIMARY 531
+#define PRIOR 532
+#define PRIVILEGES 533
+#define PROCEDURAL 534
+#define PROCEDURE 535
+#define PROGRAM 536
+#define QUOTE 537
+#define RANGE 538
+#define READ 539
+#define REAL 540
+#define REASSIGN 541
+#define RECHECK 542
+#define RECURSIVE 543
+#define REF 544
+#define REFERENCES 545
+#define REFRESH 546
+#define REINDEX 547
+#define RELATIVE_P 548
+#define RELEASE 549
+#define RENAME 550
+#define REPEATABLE 551
+#define REPLACE 552
+#define REPLICA 553
+#define RESET 554
+#define RESTART 555
+#define RESTRICT 556
+#define RETURNING 557
+#define RETURNS 558
+#define REVOKE 559
+#define RIGHT 560
+#define ROLE 561
+#define ROLLBACK 562
+#define ROW 563
+#define ROWS 564
+#define RULE 565
+#define SAVEPOINT 566
+#define SCHEMA 567
+#define SCROLL 568
+#define SEARCH 569
+#define SECOND_P 570
+#define SECURITY 571
+#define SELECT 572
+#define SEQUENCE 573
+#define SEQUENCES 574
+#define SERIALIZABLE 575
+#define SERVER 576
+#define SESSION 577
+#define SESSION_USER 578
+#define SET 579
+#define SETOF 580
+#define SHARE 581
+#define SHOW 582
+#define SIMILAR 583
+#define SIMPLE 584
+#define SMALLINT 585
+#define SNAPSHOT 586
+#define SOME 587
+#define STABLE 588
+#define STANDALONE_P 589
+#define START 590
+#define STATEMENT 591
+#define STATISTICS 592
+#define STDIN 593
+#define STDOUT 594
+#define STORAGE 595
+#define STRICT_P 596
+#define STRIP_P 597
+#define SUBSTRING 598
+#define SYMMETRIC 599
+#define SYSID 600
+#define SYSTEM_P 601
+#define TABLE 602
+#define TABLES 603
+#define TABLESPACE 604
+#define TEMP 605
+#define TEMPLATE 606
+#define TEMPORARY 607
+#define TEXT_P 608
+#define THEN 609
+#define TIME 610
+#define TIMESTAMP 611
+#define TO 612
+#define TRAILING 613
+#define TRANSACTION 614
+#define TREAT 615
+#define TRIGGER 616
+#define TRIM 617
+#define TRUE_P 618
+#define TRUNCATE 619
+#define TRUSTED 620
+#define TYPE_P 621
+#define TYPES_P 622
+#define UNBOUNDED 623
+#define UNCOMMITTED 624
+#define UNENCRYPTED 625
+#define UNION 626
+#define UNIQUE 627
+#define UNKNOWN 628
+#define UNLISTEN 629
+#define UNLOGGED 630
+#define UNTIL 631
+#define UPDATE 632
+#define USER 633
+#define USING 634
+#define VACUUM 635
+#define VALID 636
+#define VALIDATE 637
+#define VALIDATOR 638
+#define VALUE_P 639
+#define VALUES 640
+#define VARCHAR 641
+#define VARIADIC 642
+#define VARYING 643
+#define VERBOSE 644
+#define VERSION_P 645
+#define VIEW 646
+#define VOLATILE 647
+#define WHEN 648
+#define WHERE 649
+#define WHITESPACE_P 650
+#define WINDOW 651
+#define WITH 652
+#define WITHOUT 653
+#define WORK 654
+#define WRAPPER 655
+#define WRITE 656
+#define XML_P 657
+#define XMLATTRIBUTES 658
+#define XMLCONCAT 659
+#define XMLELEMENT 660
+#define XMLEXISTS 661
+#define XMLFOREST 662
+#define XMLPARSE 663
+#define XMLPI 664
+#define XMLROOT 665
+#define XMLSERIALIZE 666
+#define YEAR_P 667
+#define YES_P 668
+#define ZONE 669
+#define NULLS_FIRST 670
+#define NULLS_LAST 671
+#define WITH_TIME 672
+#define POSTFIXOP 673
+#define UMINUS 674
 
 
 
-#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE
+
+/* Copy the first part of user declarations.  */
+#line 1 "gram.y"
+
+
+/*#define YYDEBUG 1*/
+/*-------------------------------------------------------------------------
+ *
+ * gram.y
+ *	  POSTGRESQL BISON rules/actions
+ *
+ * Portions Copyright (c) 1996-2013, PostgreSQL Global Development Group
+ * Portions Copyright (c) 1994, Regents of the University of California
+ *
+ *
+ * IDENTIFICATION
+ *	  src/backend/parser/gram.y
+ *
+ * HISTORY
+ *	  AUTHOR			DATE			MAJOR EVENT
+ *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
+ *	  Andrew Yu			Oct, 1994		lispy code conversion
+ *
+ * NOTES
+ *	  CAPITALS are used to represent terminal symbols.
+ *	  non-capitals are used to represent non-terminals.
+ *
+ *	  In general, nothing in this file should initiate database accesses
+ *	  nor depend on changeable state (such as SET variables).  If you do
+ *	  database accesses, your code will fail when we have aborted the
+ *	  current transaction and are just parsing commands to find the next
+ *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
+ *	  will do the wrong thing in multi-query strings like this:
+ *			SET SQL_inheritance TO off; SELECT * FROM foo;
+ *	  because the entire string is parsed by gram.y before the SET gets
+ *	  executed.  Anything that depends on the database or changeable state
+ *	  should be handled during parse analysis so that it happens at the
+ *	  right time not the wrong time.  The handling of SQL_inheritance is
+ *	  a good example.
+ *
+ * WARNINGS
+ *	  If you use a list, make sure the datum is a node so that the printing
+ *	  routines work.
+ *
+ *	  Sometimes we assign constants to makeStrings. Make sure we don't free
+ *	  those.
+ *
+ *-------------------------------------------------------------------------
+ */
+#include "postgres.h"
+
+#include <ctype.h>
+#include <limits.h>
+
+#include "catalog/index.h"
+#include "catalog/namespace.h"
+#include "catalog/pg_trigger.h"
+#include "commands/defrem.h"
+#include "commands/trigger.h"
+#include "nodes/makefuncs.h"
+#include "nodes/nodeFuncs.h"
+#include "parser/gramparse.h"
+#include "parser/parser.h"
+#include "storage/lmgr.h"
+#include "utils/date.h"
+#include "utils/datetime.h"
+#include "utils/numeric.h"
+#include "utils/xml.h"
+
+
+/*
+ * Location tracking support --- simpler than bison's default, since we only
+ * want to track the start position not the end position of each nonterminal.
+ */
+#define YYLLOC_DEFAULT(Current, Rhs, N) \
+	do { \
+		if ((N) > 0) \
+			(Current) = (Rhs)[1]; \
+		else \
+			(Current) = (-1); \
+	} while (0)
+
+/*
+ * The above macro assigns -1 (unknown) as the parse location of any
+ * nonterminal that was reduced from an empty rule.  This is problematic
+ * for nonterminals defined like
+ *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
+ * because we'll set -1 as the location during the first reduction and then
+ * copy it during each subsequent reduction, leaving us with -1 for the
+ * location even when the list is not empty.  To fix that, do this in the
+ * action for the nonempty rule(s):
+ *		if (@$ < 0) @$ = @2;
+ * (Although we have many nonterminals that follow this pattern, we only
+ * bother with fixing @$ like this when the nonterminal's parse location
+ * is actually referenced in some rule.)
+ */
+
+/*
+ * Bison doesn't allocate anything that needs to live across parser calls,
+ * so we can easily have it use palloc instead of malloc.  This prevents
+ * memory leaks if we error out during parsing.  Note this only works with
+ * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
+ * if possible, so there's not really much problem anyhow, at least if
+ * you're building with gcc.
+ */
+#define YYMALLOC palloc
+#define YYFREE   pfree
+
+/* Private struct for the result of privilege_target production */
+typedef struct PrivTarget
 {
+	GrantTargetType targtype;
+	GrantObjectType objtype;
+	List	   *objs;
+} PrivTarget;
 
-/* Line 293 of yacc.c  */
-#line 176 "gram.y"
+/* ConstraintAttributeSpec yields an integer bitmask of these flags: */
+#define CAS_NOT_DEFERRABLE			0x01
+#define CAS_DEFERRABLE				0x02
+#define CAS_INITIALLY_IMMEDIATE		0x04
+#define CAS_INITIALLY_DEFERRED		0x08
+#define CAS_NOT_VALID				0x10
+#define CAS_NO_INHERIT				0x20
+
+
+#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
+#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)
+
+static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
+						 const char *msg);
+static Node *makeColumnRef(char *colname, List *indirection,
+						   int location, core_yyscan_t yyscanner);
+static Node *makeTypeCast(Node *arg, TypeName *typename, int location);
+static Node *makeStringConst(char *str, int location);
+static Node *makeStringConstCast(char *str, int location, TypeName *typename);
+static Node *makeIntConst(int val, int location);
+static Node *makeFloatConst(char *str, int location);
+static Node *makeBitStringConst(char *str, int location);
+static Node *makeNullAConst(int location);
+static Node *makeAConst(Value *v, int location);
+static Node *makeBoolAConst(bool state, int location);
+static void check_qualified_name(List *names, core_yyscan_t yyscanner);
+static List *check_func_name(List *names, core_yyscan_t yyscanner);
+static List *check_indirection(List *indirection, core_yyscan_t yyscanner);
+static List *extractArgTypes(List *parameters);
+static void insertSelectOptions(SelectStmt *stmt,
+								List *sortClause, List *lockingClause,
+								Node *limitOffset, Node *limitCount,
+								WithClause *withClause,
+								core_yyscan_t yyscanner);
+static Node *makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg);
+static Node *doNegate(Node *n, int location);
+static void doNegateFloat(Value *v);
+static Node *makeAArrayExpr(List *elements, int location);
+static Node *makeXmlExpr(XmlExprOp op, char *name, List *named_args,
+						 List *args, int location);
+static List *mergeTableFuncParameters(List *func_args, List *columns);
+static TypeName *TableFuncTypeName(List *columns);
+static RangeVar *makeRangeVarFromAnyName(List *names, int position, core_yyscan_t yyscanner);
+static void SplitColQualList(List *qualList,
+							 List **constraintList, CollateClause **collClause,
+							 core_yyscan_t yyscanner);
+static void processCASbits(int cas_bits, int location, const char *constrType,
+			   bool *deferrable, bool *initdeferred, bool *not_valid,
+			   bool *no_inherit, core_yyscan_t yyscanner);
+static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);
+
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
 
+#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
+typedef union YYSTYPE
+#line 176 "gram.y"
+{
 	core_YYSTYPE		core_yystype;
 	/* these fields must match core_YYSTYPE: */
 	int					ival;
@@ -732,15 +1139,13 @@
 	AccessPriv			*accesspriv;
 	InsertStmt			*istmt;
 	VariableSetStmt		*vsetstmt;
-
-
-
-/* Line 293 of yacc.c  */
-#line 740 "gram.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 1145 "gram.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
@@ -760,8 +1165,8 @@
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 765 "gram.c"
+/* Line 216 of yacc.c.  */
+#line 1170 "gram.tab.c"
 
 #ifdef short
 # undef short
@@ -836,14 +1241,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -864,11 +1269,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -891,24 +1296,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -925,9 +1330,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-  YYLTYPE yyls_alloc;
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+    YYLTYPE yyls;
 };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
@@ -939,27 +1344,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
       + 2 * YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -977,7 +1361,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  715
@@ -3134,8 +3535,8 @@
        1,     1,     1,     1,     1,     1,     1,     1,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint16 yydefact[] =
 {
@@ -4164,7 +4565,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -2225
 static const yytype_int16 yytable[] =
 {
@@ -11793,12 +12195,6 @@
        0,     0,   507,   508,   509
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-4044))
-
-#define yytable_value_is_error(yytable_value) \
-  ((yytable_value) == (-2225))
-
 static const yytype_int16 yycheck[] =
 {
        0,     0,     0,     0,     0,     0,    16,    48,   169,   922,
@@ -19890,18 +20286,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -19911,6 +20298,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -20076,20 +20464,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -20125,11 +20510,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -20166,6 +20551,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -20268,142 +20654,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -20439,9 +20798,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -20457,6 +20817,10 @@
 #endif /* ! YYPARSE_PARAM */
 
 
+
+
+
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -20483,59 +20847,24 @@
 #endif
 #endif
 {
-/* The lookahead symbol.  */
+  /* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
-/* Location data for the lookahead symbol.  */
+/* Number of syntax errors so far.  */
+int yynerrs;
+/* Location data for the look-ahead symbol.  */
 YYLTYPE yylloc;
 
-    /* Number of syntax errors so far.  */
-    int yynerrs;
-
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-       `yyls': related to locations.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    /* The location stack.  */
-    YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls;
-    YYLTYPE *yylsp;
-
-    /* The locations where the error started and ended.  */
-    YYLTYPE yyerror_range[3];
-
-    YYSIZE_T yystacksize;
-
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-  YYLTYPE yyloc;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -20543,37 +20872,63 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+  /* The location stack.  */
+  YYLTYPE yylsa[YYINITDEPTH];
+  YYLTYPE *yyls = yylsa;
+  YYLTYPE *yylsp;
+  /* The locations where the error started and ended.  */
+  YYLTYPE yyerror_range[2];
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+  YYLTYPE yyloc;
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yyls = yylsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
   yylsp = yyls;
-
 #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
   /* Initialize the default location before parsing starts.  */
   yylloc.first_line   = yylloc.last_line   = 1;
-  yylloc.first_column = yylloc.last_column = 1;
+  yylloc.first_column = yylloc.last_column = 0;
 #endif
 
   goto yysetstate;
@@ -20612,7 +20967,6 @@
 		    &yyvs1, yysize * sizeof (*yyvsp),
 		    &yyls1, yysize * sizeof (*yylsp),
 		    &yystacksize);
-
 	yyls = yyls1;
 	yyss = yyss1;
 	yyvs = yyvs1;
@@ -20634,9 +20988,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
-	YYSTACK_RELOCATE (yyls_alloc, yyls);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+	YYSTACK_RELOCATE (yyls);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -20657,9 +21011,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -20668,16 +21019,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -20703,22 +21054,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -20759,48 +21114,38 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 679 "gram.y"
     {
 				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
-			}
+			;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 686 "gram.y"
     {
 					if ((yyvsp[(3) - (3)].node) != NULL)
 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
 					else
 						(yyval.list) = (yyvsp[(1) - (3)].list);
-				}
+				;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 693 "gram.y"
     {
 					if ((yyvsp[(1) - (1)].node) != NULL)
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
 					else
 						(yyval.list) = NIL;
-				}
+				;}
     break;
 
   case 119:
-
-/* Line 1806 of yacc.c  */
 #line 817 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 120:
-
-/* Line 1806 of yacc.c  */
 #line 828 "gram.y"
     {
 					CreateRoleStmt *n = makeNode(CreateRoleStmt);
@@ -20808,129 +21153,99 @@
 					n->role = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 121:
-
-/* Line 1806 of yacc.c  */
 #line 838 "gram.y"
-    {}
+    {;}
     break;
 
   case 122:
-
-/* Line 1806 of yacc.c  */
 #line 839 "gram.y"
-    {}
+    {;}
     break;
 
   case 123:
-
-/* Line 1806 of yacc.c  */
 #line 848 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 124:
-
-/* Line 1806 of yacc.c  */
 #line 849 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 125:
-
-/* Line 1806 of yacc.c  */
 #line 853 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 126:
-
-/* Line 1806 of yacc.c  */
 #line 854 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 127:
-
-/* Line 1806 of yacc.c  */
 #line 859 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("password",
 									 (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 128:
-
-/* Line 1806 of yacc.c  */
 #line 864 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("password", NULL);
-				}
+				;}
     break;
 
   case 129:
-
-/* Line 1806 of yacc.c  */
 #line 868 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encryptedPassword",
 									 (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 130:
-
-/* Line 1806 of yacc.c  */
 #line 873 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("unencryptedPassword",
 									 (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 131:
-
-/* Line 1806 of yacc.c  */
 #line 878 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("inherit", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 132:
-
-/* Line 1806 of yacc.c  */
 #line 882 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[(3) - (3)].ival)));
-				}
+				;}
     break;
 
   case 133:
-
-/* Line 1806 of yacc.c  */
 #line 886 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("validUntil", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 134:
-
-/* Line 1806 of yacc.c  */
 #line 891 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 135:
-
-/* Line 1806 of yacc.c  */
 #line 895 "gram.y"
     {
 					/*
@@ -20981,64 +21296,50 @@
 								(errcode(ERRCODE_SYNTAX_ERROR),
 								 errmsg("unrecognized role option \"%s\"", (yyvsp[(1) - (1)].str)),
 									 parser_errposition((yylsp[(1) - (1)]))));
-				}
+				;}
     break;
 
   case 136:
-
-/* Line 1806 of yacc.c  */
 #line 948 "gram.y"
-    { (yyval.defelt) = (yyvsp[(1) - (1)].defelt); }
+    { (yyval.defelt) = (yyvsp[(1) - (1)].defelt); ;}
     break;
 
   case 137:
-
-/* Line 1806 of yacc.c  */
 #line 951 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("sysid", (Node *)makeInteger((yyvsp[(2) - (2)].ival)));
-				}
+				;}
     break;
 
   case 138:
-
-/* Line 1806 of yacc.c  */
 #line 955 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("adminmembers", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 139:
-
-/* Line 1806 of yacc.c  */
 #line 959 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 140:
-
-/* Line 1806 of yacc.c  */
 #line 963 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 141:
-
-/* Line 1806 of yacc.c  */
 #line 967 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 142:
-
-/* Line 1806 of yacc.c  */
 #line 981 "gram.y"
     {
 					CreateRoleStmt *n = makeNode(CreateRoleStmt);
@@ -21046,12 +21347,10 @@
 					n->role = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 143:
-
-/* Line 1806 of yacc.c  */
 #line 999 "gram.y"
     {
 					AlterRoleStmt *n = makeNode(AlterRoleStmt);
@@ -21059,26 +21358,20 @@
 					n->action = +1;	/* add, if there are members */
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 144:
-
-/* Line 1806 of yacc.c  */
 #line 1009 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 145:
-
-/* Line 1806 of yacc.c  */
 #line 1010 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 146:
-
-/* Line 1806 of yacc.c  */
 #line 1015 "gram.y"
     {
 					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
@@ -21086,12 +21379,10 @@
 					n->database = (yyvsp[(4) - (5)].str);
 					n->setstmt = (yyvsp[(5) - (5)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 147:
-
-/* Line 1806 of yacc.c  */
 #line 1023 "gram.y"
     {
 					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
@@ -21099,12 +21390,10 @@
 					n->database = (yyvsp[(4) - (5)].str);
 					n->setstmt = (yyvsp[(5) - (5)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 148:
-
-/* Line 1806 of yacc.c  */
 #line 1041 "gram.y"
     {
 					AlterRoleStmt *n = makeNode(AlterRoleStmt);
@@ -21112,12 +21401,10 @@
 					n->action = +1;	/* add, if there are members */
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 149:
-
-/* Line 1806 of yacc.c  */
 #line 1053 "gram.y"
     {
 					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
@@ -21125,60 +21412,50 @@
 					n->database = NULL;
 					n->setstmt = (yyvsp[(4) - (4)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 150:
-
-/* Line 1806 of yacc.c  */
 #line 1074 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = FALSE;
 					n->roles = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 151:
-
-/* Line 1806 of yacc.c  */
 #line 1081 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = TRUE;
 					n->roles = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 152:
-
-/* Line 1806 of yacc.c  */
 #line 1100 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = FALSE;
 					n->roles = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 153:
-
-/* Line 1806 of yacc.c  */
 #line 1107 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->roles = (yyvsp[(5) - (5)].list);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 154:
-
-/* Line 1806 of yacc.c  */
 #line 1124 "gram.y"
     {
 					CreateRoleStmt *n = makeNode(CreateRoleStmt);
@@ -21186,12 +21463,10 @@
 					n->role = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 155:
-
-/* Line 1806 of yacc.c  */
 #line 1142 "gram.y"
     {
 					AlterRoleStmt *n = makeNode(AlterRoleStmt);
@@ -21200,50 +21475,40 @@
 					n->options = list_make1(makeDefElem("rolemembers",
 														(Node *)(yyvsp[(6) - (6)].list)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 156:
-
-/* Line 1806 of yacc.c  */
 #line 1152 "gram.y"
-    { (yyval.ival) = +1; }
+    { (yyval.ival) = +1; ;}
     break;
 
   case 157:
-
-/* Line 1806 of yacc.c  */
 #line 1153 "gram.y"
-    { (yyval.ival) = -1; }
+    { (yyval.ival) = -1; ;}
     break;
 
   case 158:
-
-/* Line 1806 of yacc.c  */
 #line 1166 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = FALSE;
 					n->roles = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 159:
-
-/* Line 1806 of yacc.c  */
 #line 1173 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = TRUE;
 					n->roles = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 160:
-
-/* Line 1806 of yacc.c  */
 #line 1190 "gram.y"
     {
 					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
@@ -21256,12 +21521,10 @@
 					n->schemaElts = (yyvsp[(6) - (6)].list);
 					n->if_not_exists = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 161:
-
-/* Line 1806 of yacc.c  */
 #line 1203 "gram.y"
     {
 					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
@@ -21271,12 +21534,10 @@
 					n->schemaElts = (yyvsp[(4) - (4)].list);
 					n->if_not_exists = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 162:
-
-/* Line 1806 of yacc.c  */
 #line 1213 "gram.y"
     {
 					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
@@ -21294,12 +21555,10 @@
 					n->schemaElts = (yyvsp[(9) - (9)].list);
 					n->if_not_exists = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 163:
-
-/* Line 1806 of yacc.c  */
 #line 1231 "gram.y"
     {
 					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
@@ -21314,77 +21573,61 @@
 					n->schemaElts = (yyvsp[(7) - (7)].list);
 					n->if_not_exists = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 164:
-
-/* Line 1806 of yacc.c  */
 #line 1248 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 165:
-
-/* Line 1806 of yacc.c  */
 #line 1249 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 166:
-
-/* Line 1806 of yacc.c  */
 #line 1254 "gram.y"
     {
 					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
 						(yyloc) = (yylsp[(2) - (2)]);
 					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 167:
-
-/* Line 1806 of yacc.c  */
 #line 1260 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 174:
-
-/* Line 1806 of yacc.c  */
 #line 1288 "gram.y"
     {
 					VariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
 					n->is_local = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 175:
-
-/* Line 1806 of yacc.c  */
 #line 1294 "gram.y"
     {
 					VariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
 					n->is_local = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 176:
-
-/* Line 1806 of yacc.c  */
 #line 1300 "gram.y"
     {
 					VariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
 					n->is_local = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 177:
-
-/* Line 1806 of yacc.c  */
 #line 1309 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21392,12 +21635,10 @@
 					n->name = "TRANSACTION";
 					n->args = (yyvsp[(2) - (2)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 178:
-
-/* Line 1806 of yacc.c  */
 #line 1317 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21405,12 +21646,10 @@
 					n->name = "SESSION CHARACTERISTICS";
 					n->args = (yyvsp[(5) - (5)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 180:
-
-/* Line 1806 of yacc.c  */
 #line 1329 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21418,12 +21657,10 @@
 					n->name = (yyvsp[(1) - (3)].str);
 					n->args = (yyvsp[(3) - (3)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 181:
-
-/* Line 1806 of yacc.c  */
 #line 1337 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21431,48 +21668,40 @@
 					n->name = (yyvsp[(1) - (3)].str);
 					n->args = (yyvsp[(3) - (3)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 182:
-
-/* Line 1806 of yacc.c  */
 #line 1345 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_DEFAULT;
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 183:
-
-/* Line 1806 of yacc.c  */
 #line 1352 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_DEFAULT;
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 184:
-
-/* Line 1806 of yacc.c  */
 #line 1359 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_CURRENT;
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 185:
-
-/* Line 1806 of yacc.c  */
 #line 1367 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21483,12 +21712,10 @@
 					else
 						n->kind = VAR_SET_DEFAULT;
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 186:
-
-/* Line 1806 of yacc.c  */
 #line 1378 "gram.y"
     {
 					ereport(ERROR,
@@ -21496,12 +21723,10 @@
 							 errmsg("current database cannot be changed"),
 							 parser_errposition((yylsp[(2) - (2)]))));
 					(yyval.vsetstmt) = NULL; /*not reached*/
-				}
+				;}
     break;
 
   case 187:
-
-/* Line 1806 of yacc.c  */
 #line 1386 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21509,12 +21734,10 @@
 					n->name = "search_path";
 					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 188:
-
-/* Line 1806 of yacc.c  */
 #line 1394 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21525,12 +21748,10 @@
 					else
 						n->kind = VAR_SET_DEFAULT;
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 189:
-
-/* Line 1806 of yacc.c  */
 #line 1405 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21538,12 +21759,10 @@
 					n->name = "role";
 					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 190:
-
-/* Line 1806 of yacc.c  */
 #line 1413 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21551,24 +21770,20 @@
 					n->name = "session_authorization";
 					n->args = list_make1(makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 191:
-
-/* Line 1806 of yacc.c  */
 #line 1421 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_DEFAULT;
 					n->name = "session_authorization";
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 192:
-
-/* Line 1806 of yacc.c  */
 #line 1428 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21576,12 +21791,10 @@
 					n->name = "xmloption";
 					n->args = list_make1(makeStringConst((yyvsp[(3) - (3)].ival) == XMLOPTION_DOCUMENT ? "DOCUMENT" : "CONTENT", (yylsp[(3) - (3)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 193:
-
-/* Line 1806 of yacc.c  */
 #line 1437 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21589,131 +21802,97 @@
 					n->name = "TRANSACTION SNAPSHOT";
 					n->args = list_make1(makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 194:
-
-/* Line 1806 of yacc.c  */
 #line 1446 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 195:
-
-/* Line 1806 of yacc.c  */
 #line 1448 "gram.y"
     {
 					(yyval.str) = palloc(strlen((yyvsp[(1) - (3)].str)) + strlen((yyvsp[(3) - (3)].str)) + 2);
 					sprintf((yyval.str), "%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str));
-				}
+				;}
     break;
 
   case 196:
-
-/* Line 1806 of yacc.c  */
 #line 1454 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 197:
-
-/* Line 1806 of yacc.c  */
 #line 1455 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 198:
-
-/* Line 1806 of yacc.c  */
 #line 1459 "gram.y"
-    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
     break;
 
   case 199:
-
-/* Line 1806 of yacc.c  */
 #line 1461 "gram.y"
-    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
     break;
 
   case 200:
-
-/* Line 1806 of yacc.c  */
 #line 1464 "gram.y"
-    { (yyval.str) = "read uncommitted"; }
+    { (yyval.str) = "read uncommitted"; ;}
     break;
 
   case 201:
-
-/* Line 1806 of yacc.c  */
 #line 1465 "gram.y"
-    { (yyval.str) = "read committed"; }
+    { (yyval.str) = "read committed"; ;}
     break;
 
   case 202:
-
-/* Line 1806 of yacc.c  */
 #line 1466 "gram.y"
-    { (yyval.str) = "repeatable read"; }
+    { (yyval.str) = "repeatable read"; ;}
     break;
 
   case 203:
-
-/* Line 1806 of yacc.c  */
 #line 1467 "gram.y"
-    { (yyval.str) = "serializable"; }
+    { (yyval.str) = "serializable"; ;}
     break;
 
   case 204:
-
-/* Line 1806 of yacc.c  */
 #line 1471 "gram.y"
-    { (yyval.str) = "true"; }
+    { (yyval.str) = "true"; ;}
     break;
 
   case 205:
-
-/* Line 1806 of yacc.c  */
 #line 1472 "gram.y"
-    { (yyval.str) = "false"; }
+    { (yyval.str) = "false"; ;}
     break;
 
   case 206:
-
-/* Line 1806 of yacc.c  */
 #line 1473 "gram.y"
-    { (yyval.str) = "on"; }
+    { (yyval.str) = "on"; ;}
     break;
 
   case 207:
-
-/* Line 1806 of yacc.c  */
 #line 1479 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 208:
-
-/* Line 1806 of yacc.c  */
 #line 1492 "gram.y"
     {
 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 209:
-
-/* Line 1806 of yacc.c  */
 #line 1496 "gram.y"
     {
 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 210:
-
-/* Line 1806 of yacc.c  */
 #line 1500 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (3)].typnam);
@@ -21728,12 +21907,10 @@
 					}
 					t->typmods = (yyvsp[(3) - (3)].list);
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
-				}
+				;}
     break;
 
   case 211:
-
-/* Line 1806 of yacc.c  */
 #line 1515 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (6)].typnam);
@@ -21756,304 +21933,238 @@
 						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 												makeIntConst((yyvsp[(3) - (6)].ival), (yylsp[(3) - (6)])));
 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (6)].str), (yylsp[(5) - (6)]), t);
-				}
+				;}
     break;
 
   case 212:
-
-/* Line 1806 of yacc.c  */
 #line 1537 "gram.y"
-    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
     break;
 
   case 213:
-
-/* Line 1806 of yacc.c  */
 #line 1538 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 214:
-
-/* Line 1806 of yacc.c  */
 #line 1539 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 215:
-
-/* Line 1806 of yacc.c  */
 #line 1543 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 216:
-
-/* Line 1806 of yacc.c  */
 #line 1544 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 217:
-
-/* Line 1806 of yacc.c  */
 #line 1545 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 218:
-
-/* Line 1806 of yacc.c  */
 #line 1549 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 219:
-
-/* Line 1806 of yacc.c  */
 #line 1550 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 220:
-
-/* Line 1806 of yacc.c  */
 #line 1555 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 221:
-
-/* Line 1806 of yacc.c  */
 #line 1562 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = "timezone";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 222:
-
-/* Line 1806 of yacc.c  */
 #line 1569 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = "transaction_isolation";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 223:
-
-/* Line 1806 of yacc.c  */
 #line 1576 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = "session_authorization";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 224:
-
-/* Line 1806 of yacc.c  */
 #line 1583 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET_ALL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 225:
-
-/* Line 1806 of yacc.c  */
 #line 1592 "gram.y"
-    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); }
+    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); ;}
     break;
 
   case 226:
-
-/* Line 1806 of yacc.c  */
 #line 1593 "gram.y"
-    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); }
+    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 227:
-
-/* Line 1806 of yacc.c  */
 #line 1598 "gram.y"
-    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); }
+    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); ;}
     break;
 
   case 228:
-
-/* Line 1806 of yacc.c  */
 #line 1599 "gram.y"
-    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); }
+    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 229:
-
-/* Line 1806 of yacc.c  */
 #line 1605 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 230:
-
-/* Line 1806 of yacc.c  */
 #line 1611 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "timezone";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 231:
-
-/* Line 1806 of yacc.c  */
 #line 1617 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "transaction_isolation";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 232:
-
-/* Line 1806 of yacc.c  */
 #line 1623 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "session_authorization";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 233:
-
-/* Line 1806 of yacc.c  */
 #line 1629 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "all";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 234:
-
-/* Line 1806 of yacc.c  */
 #line 1639 "gram.y"
     {
 					ConstraintsSetStmt *n = makeNode(ConstraintsSetStmt);
 					n->constraints = (yyvsp[(3) - (4)].list);
 					n->deferred = (yyvsp[(4) - (4)].boolean);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 235:
-
-/* Line 1806 of yacc.c  */
 #line 1648 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 236:
-
-/* Line 1806 of yacc.c  */
 #line 1649 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 237:
-
-/* Line 1806 of yacc.c  */
 #line 1653 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 238:
-
-/* Line 1806 of yacc.c  */
 #line 1654 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 239:
-
-/* Line 1806 of yacc.c  */
 #line 1663 "gram.y"
     {
 					CheckPointStmt *n = makeNode(CheckPointStmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 240:
-
-/* Line 1806 of yacc.c  */
 #line 1678 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_ALL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 241:
-
-/* Line 1806 of yacc.c  */
 #line 1684 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_TEMP;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 242:
-
-/* Line 1806 of yacc.c  */
 #line 1690 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_TEMP;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 243:
-
-/* Line 1806 of yacc.c  */
 #line 1696 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_PLANS;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 244:
-
-/* Line 1806 of yacc.c  */
 #line 1714 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22062,12 +22173,10 @@
 					n->relkind = OBJECT_TABLE;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 245:
-
-/* Line 1806 of yacc.c  */
 #line 1723 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22076,12 +22185,10 @@
 					n->relkind = OBJECT_TABLE;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 246:
-
-/* Line 1806 of yacc.c  */
 #line 1732 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22090,12 +22197,10 @@
 					n->relkind = OBJECT_INDEX;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 247:
-
-/* Line 1806 of yacc.c  */
 #line 1741 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22104,12 +22209,10 @@
 					n->relkind = OBJECT_INDEX;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 248:
-
-/* Line 1806 of yacc.c  */
 #line 1750 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22118,12 +22221,10 @@
 					n->relkind = OBJECT_SEQUENCE;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 249:
-
-/* Line 1806 of yacc.c  */
 #line 1759 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22132,12 +22233,10 @@
 					n->relkind = OBJECT_SEQUENCE;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 250:
-
-/* Line 1806 of yacc.c  */
 #line 1768 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22146,12 +22245,10 @@
 					n->relkind = OBJECT_VIEW;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 251:
-
-/* Line 1806 of yacc.c  */
 #line 1777 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22160,12 +22257,10 @@
 					n->relkind = OBJECT_VIEW;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 252:
-
-/* Line 1806 of yacc.c  */
 #line 1786 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22174,12 +22269,10 @@
 					n->relkind = OBJECT_MATVIEW;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 253:
-
-/* Line 1806 of yacc.c  */
 #line 1795 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22188,50 +22281,40 @@
 					n->relkind = OBJECT_MATVIEW;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 254:
-
-/* Line 1806 of yacc.c  */
 #line 1806 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 255:
-
-/* Line 1806 of yacc.c  */
 #line 1807 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 256:
-
-/* Line 1806 of yacc.c  */
 #line 1813 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddColumn;
 					n->def = (yyvsp[(2) - (2)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 257:
-
-/* Line 1806 of yacc.c  */
 #line 1821 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddColumn;
 					n->def = (yyvsp[(3) - (3)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 258:
-
-/* Line 1806 of yacc.c  */
 #line 1829 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22239,36 +22322,30 @@
 					n->name = (yyvsp[(3) - (4)].str);
 					n->def = (yyvsp[(4) - (4)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 259:
-
-/* Line 1806 of yacc.c  */
 #line 1838 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropNotNull;
 					n->name = (yyvsp[(3) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 260:
-
-/* Line 1806 of yacc.c  */
 #line 1846 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_SetNotNull;
 					n->name = (yyvsp[(3) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 261:
-
-/* Line 1806 of yacc.c  */
 #line 1854 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22276,12 +22353,10 @@
 					n->name = (yyvsp[(3) - (6)].str);
 					n->def = (Node *) makeInteger((yyvsp[(6) - (6)].ival));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 262:
-
-/* Line 1806 of yacc.c  */
 #line 1863 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22289,12 +22364,10 @@
 					n->name = (yyvsp[(3) - (5)].str);
 					n->def = (Node *) (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 263:
-
-/* Line 1806 of yacc.c  */
 #line 1872 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22302,12 +22375,10 @@
 					n->name = (yyvsp[(3) - (5)].str);
 					n->def = (Node *) (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 264:
-
-/* Line 1806 of yacc.c  */
 #line 1881 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22315,12 +22386,10 @@
 					n->name = (yyvsp[(3) - (6)].str);
 					n->def = (Node *) makeString((yyvsp[(6) - (6)].str));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 265:
-
-/* Line 1806 of yacc.c  */
 #line 1890 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22329,12 +22398,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 266:
-
-/* Line 1806 of yacc.c  */
 #line 1900 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22343,12 +22410,10 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 267:
-
-/* Line 1806 of yacc.c  */
 #line 1913 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22361,12 +22426,10 @@
 					def->collClause = (CollateClause *) (yyvsp[(7) - (8)].node);
 					def->raw_default = (yyvsp[(8) - (8)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 268:
-
-/* Line 1806 of yacc.c  */
 #line 1927 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22374,36 +22437,30 @@
 					n->name = (yyvsp[(3) - (4)].str);
 					n->def = (Node *) (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 269:
-
-/* Line 1806 of yacc.c  */
 #line 1936 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddConstraint;
 					n->def = (yyvsp[(2) - (2)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 270:
-
-/* Line 1806 of yacc.c  */
 #line 1944 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ValidateConstraint;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 271:
-
-/* Line 1806 of yacc.c  */
 #line 1952 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22412,12 +22469,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 272:
-
-/* Line 1806 of yacc.c  */
 #line 1962 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22426,222 +22481,184 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 273:
-
-/* Line 1806 of yacc.c  */
 #line 1972 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddOids;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 274:
-
-/* Line 1806 of yacc.c  */
 #line 1979 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropOids;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 275:
-
-/* Line 1806 of yacc.c  */
 #line 1986 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ClusterOn;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 276:
-
-/* Line 1806 of yacc.c  */
 #line 1994 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropCluster;
 					n->name = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 277:
-
-/* Line 1806 of yacc.c  */
 #line 2002 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableTrig;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 278:
-
-/* Line 1806 of yacc.c  */
 #line 2010 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableAlwaysTrig;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 279:
-
-/* Line 1806 of yacc.c  */
 #line 2018 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableReplicaTrig;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 280:
-
-/* Line 1806 of yacc.c  */
 #line 2026 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableTrigAll;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 281:
-
-/* Line 1806 of yacc.c  */
 #line 2033 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableTrigUser;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 282:
-
-/* Line 1806 of yacc.c  */
 #line 2040 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableTrig;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 283:
-
-/* Line 1806 of yacc.c  */
 #line 2048 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableTrigAll;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 284:
-
-/* Line 1806 of yacc.c  */
 #line 2055 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableTrigUser;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 285:
-
-/* Line 1806 of yacc.c  */
 #line 2062 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableRule;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 286:
-
-/* Line 1806 of yacc.c  */
 #line 2070 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableAlwaysRule;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 287:
-
-/* Line 1806 of yacc.c  */
 #line 2078 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableReplicaRule;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 288:
-
-/* Line 1806 of yacc.c  */
 #line 2086 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableRule;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 289:
-
-/* Line 1806 of yacc.c  */
 #line 2094 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddInherit;
 					n->def = (Node *) (yyvsp[(2) - (2)].range);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 290:
-
-/* Line 1806 of yacc.c  */
 #line 2102 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropInherit;
 					n->def = (Node *) (yyvsp[(3) - (3)].range);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 291:
-
-/* Line 1806 of yacc.c  */
 #line 2110 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22650,118 +22667,94 @@
 					n->subtype = AT_AddOf;
 					n->def = (Node *) def;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 292:
-
-/* Line 1806 of yacc.c  */
 #line 2120 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropOf;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 293:
-
-/* Line 1806 of yacc.c  */
 #line 2127 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ChangeOwner;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 294:
-
-/* Line 1806 of yacc.c  */
 #line 2135 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_SetTableSpace;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 295:
-
-/* Line 1806 of yacc.c  */
 #line 2143 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_SetRelOptions;
 					n->def = (Node *)(yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 296:
-
-/* Line 1806 of yacc.c  */
 #line 2151 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ResetRelOptions;
 					n->def = (Node *)(yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 297:
-
-/* Line 1806 of yacc.c  */
 #line 2158 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_GenericOptions;
 					n->def = (Node *)(yyvsp[(1) - (1)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 298:
-
-/* Line 1806 of yacc.c  */
 #line 2167 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (3)].node); }
+    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
     break;
 
   case 299:
-
-/* Line 1806 of yacc.c  */
 #line 2168 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 300:
-
-/* Line 1806 of yacc.c  */
 #line 2172 "gram.y"
-    { (yyval.dbehavior) = DROP_CASCADE; }
+    { (yyval.dbehavior) = DROP_CASCADE; ;}
     break;
 
   case 301:
-
-/* Line 1806 of yacc.c  */
 #line 2173 "gram.y"
-    { (yyval.dbehavior) = DROP_RESTRICT; }
+    { (yyval.dbehavior) = DROP_RESTRICT; ;}
     break;
 
   case 302:
-
-/* Line 1806 of yacc.c  */
 #line 2174 "gram.y"
-    { (yyval.dbehavior) = DROP_RESTRICT; /* default */ }
+    { (yyval.dbehavior) = DROP_RESTRICT; /* default */ ;}
     break;
 
   case 303:
-
-/* Line 1806 of yacc.c  */
 #line 2179 "gram.y"
     {
 					CollateClause *n = makeNode(CollateClause);
@@ -22769,105 +22762,79 @@
 					n->collname = (yyvsp[(2) - (2)].list);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 304:
-
-/* Line 1806 of yacc.c  */
 #line 2186 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 305:
-
-/* Line 1806 of yacc.c  */
 #line 2190 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 306:
-
-/* Line 1806 of yacc.c  */
 #line 2191 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 307:
-
-/* Line 1806 of yacc.c  */
 #line 2195 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 308:
-
-/* Line 1806 of yacc.c  */
 #line 2198 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 309:
-
-/* Line 1806 of yacc.c  */
 #line 2199 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 310:
-
-/* Line 1806 of yacc.c  */
 #line 2203 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 311:
-
-/* Line 1806 of yacc.c  */
 #line 2204 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 312:
-
-/* Line 1806 of yacc.c  */
 #line 2210 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (Node *) (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 313:
-
-/* Line 1806 of yacc.c  */
 #line 2214 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL);
-				}
+				;}
     break;
 
   case 314:
-
-/* Line 1806 of yacc.c  */
 #line 2218 "gram.y"
     {
 					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (Node *) (yyvsp[(5) - (5)].node),
 											 DEFELEM_UNSPEC);
-				}
+				;}
     break;
 
   case 315:
-
-/* Line 1806 of yacc.c  */
 #line 2223 "gram.y"
     {
 					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, DEFELEM_UNSPEC);
-				}
+				;}
     break;
 
   case 316:
-
-/* Line 1806 of yacc.c  */
 #line 2238 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22877,26 +22844,20 @@
 					n->cmds = (yyvsp[(4) - (4)].list);
 					n->relkind = OBJECT_TYPE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 317:
-
-/* Line 1806 of yacc.c  */
 #line 2250 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 318:
-
-/* Line 1806 of yacc.c  */
 #line 2251 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 319:
-
-/* Line 1806 of yacc.c  */
 #line 2257 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22904,12 +22865,10 @@
 					n->def = (yyvsp[(3) - (4)].node);
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 320:
-
-/* Line 1806 of yacc.c  */
 #line 2266 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22918,12 +22877,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 321:
-
-/* Line 1806 of yacc.c  */
 #line 2276 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22932,12 +22889,10 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 322:
-
-/* Line 1806 of yacc.c  */
 #line 2286 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22951,34 +22906,28 @@
 					def->collClause = (CollateClause *) (yyvsp[(7) - (8)].node);
 					def->raw_default = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 323:
-
-/* Line 1806 of yacc.c  */
 #line 2311 "gram.y"
     {
 					ClosePortalStmt *n = makeNode(ClosePortalStmt);
 					n->portalname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 324:
-
-/* Line 1806 of yacc.c  */
 #line 2317 "gram.y"
     {
 					ClosePortalStmt *n = makeNode(ClosePortalStmt);
 					n->portalname = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 325:
-
-/* Line 1806 of yacc.c  */
 #line 2348 "gram.y"
     {
 					CopyStmt *n = makeNode(CopyStmt);
@@ -23006,12 +22955,10 @@
 					if ((yyvsp[(11) - (11)].list))
 						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 326:
-
-/* Line 1806 of yacc.c  */
 #line 2376 "gram.y"
     {
 					CopyStmt *n = makeNode(CopyStmt);
@@ -23030,355 +22977,267 @@
 								 parser_errposition((yylsp[(5) - (7)]))));
 
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 327:
-
-/* Line 1806 of yacc.c  */
 #line 2397 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 328:
-
-/* Line 1806 of yacc.c  */
 #line 2398 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 329:
-
-/* Line 1806 of yacc.c  */
 #line 2402 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 330:
-
-/* Line 1806 of yacc.c  */
 #line 2403 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 331:
-
-/* Line 1806 of yacc.c  */
 #line 2412 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 332:
-
-/* Line 1806 of yacc.c  */
 #line 2413 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 333:
-
-/* Line 1806 of yacc.c  */
 #line 2414 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 334:
-
-/* Line 1806 of yacc.c  */
 #line 2417 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 335:
-
-/* Line 1806 of yacc.c  */
 #line 2418 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 336:
-
-/* Line 1806 of yacc.c  */
 #line 2423 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 337:
-
-/* Line 1806 of yacc.c  */
 #line 2424 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 338:
-
-/* Line 1806 of yacc.c  */
 #line 2429 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
-				}
+				;}
     break;
 
   case 339:
-
-/* Line 1806 of yacc.c  */
 #line 2433 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 340:
-
-/* Line 1806 of yacc.c  */
 #line 2437 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("freeze", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 341:
-
-/* Line 1806 of yacc.c  */
 #line 2441 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 342:
-
-/* Line 1806 of yacc.c  */
 #line 2445 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("null", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 343:
-
-/* Line 1806 of yacc.c  */
 #line 2449 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("format", (Node *)makeString("csv"));
-				}
+				;}
     break;
 
   case 344:
-
-/* Line 1806 of yacc.c  */
 #line 2453 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("header", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 345:
-
-/* Line 1806 of yacc.c  */
 #line 2457 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("quote", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 346:
-
-/* Line 1806 of yacc.c  */
 #line 2461 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("escape", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 347:
-
-/* Line 1806 of yacc.c  */
 #line 2465 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("force_quote", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 348:
-
-/* Line 1806 of yacc.c  */
 #line 2469 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("force_quote", (Node *)makeNode(A_Star));
-				}
+				;}
     break;
 
   case 349:
-
-/* Line 1806 of yacc.c  */
 #line 2473 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("force_not_null", (Node *)(yyvsp[(4) - (4)].list));
-				}
+				;}
     break;
 
   case 350:
-
-/* Line 1806 of yacc.c  */
 #line 2477 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 351:
-
-/* Line 1806 of yacc.c  */
 #line 2486 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
-				}
+				;}
     break;
 
   case 352:
-
-/* Line 1806 of yacc.c  */
 #line 2489 "gram.y"
-    { (yyval.defelt) = NULL; }
+    { (yyval.defelt) = NULL; ;}
     break;
 
   case 353:
-
-/* Line 1806 of yacc.c  */
 #line 2494 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 354:
-
-/* Line 1806 of yacc.c  */
 #line 2497 "gram.y"
-    { (yyval.defelt) = NULL; }
+    { (yyval.defelt) = NULL; ;}
     break;
 
   case 355:
-
-/* Line 1806 of yacc.c  */
 #line 2502 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 356:
-
-/* Line 1806 of yacc.c  */
 #line 2505 "gram.y"
-    { (yyval.defelt) = NULL; }
+    { (yyval.defelt) = NULL; ;}
     break;
 
   case 357:
-
-/* Line 1806 of yacc.c  */
 #line 2509 "gram.y"
-    {}
+    {;}
     break;
 
   case 358:
-
-/* Line 1806 of yacc.c  */
 #line 2510 "gram.y"
-    {}
+    {;}
     break;
 
   case 359:
-
-/* Line 1806 of yacc.c  */
 #line 2516 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 360:
-
-/* Line 1806 of yacc.c  */
 #line 2520 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 361:
-
-/* Line 1806 of yacc.c  */
 #line 2527 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 362:
-
-/* Line 1806 of yacc.c  */
 #line 2533 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 363:
-
-/* Line 1806 of yacc.c  */
 #line 2534 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); }
+    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); ;}
     break;
 
   case 364:
-
-/* Line 1806 of yacc.c  */
 #line 2535 "gram.y"
-    { (yyval.node) = (Node *) makeNode(A_Star); }
+    { (yyval.node) = (Node *) makeNode(A_Star); ;}
     break;
 
   case 365:
-
-/* Line 1806 of yacc.c  */
 #line 2536 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(2) - (3)].list); }
+    { (yyval.node) = (Node *) (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 366:
-
-/* Line 1806 of yacc.c  */
 #line 2537 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 367:
-
-/* Line 1806 of yacc.c  */
 #line 2542 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 368:
-
-/* Line 1806 of yacc.c  */
 #line 2546 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 369:
-
-/* Line 1806 of yacc.c  */
 #line 2553 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 370:
-
-/* Line 1806 of yacc.c  */
 #line 2566 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -23392,12 +23251,10 @@
 					n->tablespacename = (yyvsp[(11) - (11)].str);
 					n->if_not_exists = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 371:
-
-/* Line 1806 of yacc.c  */
 #line 2582 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -23411,12 +23268,10 @@
 					n->tablespacename = (yyvsp[(14) - (14)].str);
 					n->if_not_exists = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 372:
-
-/* Line 1806 of yacc.c  */
 #line 2597 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -23431,12 +23286,10 @@
 					n->tablespacename = (yyvsp[(10) - (10)].str);
 					n->if_not_exists = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 373:
-
-/* Line 1806 of yacc.c  */
 #line 2613 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -23451,177 +23304,133 @@
 					n->tablespacename = (yyvsp[(13) - (13)].str);
 					n->if_not_exists = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 374:
-
-/* Line 1806 of yacc.c  */
 #line 2640 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_TEMP; }
+    { (yyval.ival) = RELPERSISTENCE_TEMP; ;}
     break;
 
   case 375:
-
-/* Line 1806 of yacc.c  */
 #line 2641 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_TEMP; }
+    { (yyval.ival) = RELPERSISTENCE_TEMP; ;}
     break;
 
   case 376:
-
-/* Line 1806 of yacc.c  */
 #line 2642 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_TEMP; }
+    { (yyval.ival) = RELPERSISTENCE_TEMP; ;}
     break;
 
   case 377:
-
-/* Line 1806 of yacc.c  */
 #line 2643 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_TEMP; }
+    { (yyval.ival) = RELPERSISTENCE_TEMP; ;}
     break;
 
   case 378:
-
-/* Line 1806 of yacc.c  */
 #line 2645 "gram.y"
     {
 					ereport(WARNING,
 							(errmsg("GLOBAL is deprecated in temporary table creation"),
 							 parser_errposition((yylsp[(1) - (2)]))));
 					(yyval.ival) = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 379:
-
-/* Line 1806 of yacc.c  */
 #line 2652 "gram.y"
     {
 					ereport(WARNING,
 							(errmsg("GLOBAL is deprecated in temporary table creation"),
 							 parser_errposition((yylsp[(1) - (2)]))));
 					(yyval.ival) = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 380:
-
-/* Line 1806 of yacc.c  */
 #line 2658 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_UNLOGGED; }
+    { (yyval.ival) = RELPERSISTENCE_UNLOGGED; ;}
     break;
 
   case 381:
-
-/* Line 1806 of yacc.c  */
 #line 2659 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
+    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
     break;
 
   case 382:
-
-/* Line 1806 of yacc.c  */
 #line 2663 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 383:
-
-/* Line 1806 of yacc.c  */
 #line 2664 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 384:
-
-/* Line 1806 of yacc.c  */
 #line 2668 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 385:
-
-/* Line 1806 of yacc.c  */
 #line 2669 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 386:
-
-/* Line 1806 of yacc.c  */
 #line 2674 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 387:
-
-/* Line 1806 of yacc.c  */
 #line 2678 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 388:
-
-/* Line 1806 of yacc.c  */
 #line 2685 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 389:
-
-/* Line 1806 of yacc.c  */
 #line 2689 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 390:
-
-/* Line 1806 of yacc.c  */
 #line 2695 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 391:
-
-/* Line 1806 of yacc.c  */
 #line 2696 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 392:
-
-/* Line 1806 of yacc.c  */
 #line 2697 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 393:
-
-/* Line 1806 of yacc.c  */
 #line 2701 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 394:
-
-/* Line 1806 of yacc.c  */
 #line 2702 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 395:
-
-/* Line 1806 of yacc.c  */
 #line 2706 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -23639,12 +23448,10 @@
 					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
 									 yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 396:
-
-/* Line 1806 of yacc.c  */
 #line 2726 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -23661,26 +23468,20 @@
 					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
 									 yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 397:
-
-/* Line 1806 of yacc.c  */
 #line 2745 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 398:
-
-/* Line 1806 of yacc.c  */
 #line 2746 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 399:
-
-/* Line 1806 of yacc.c  */
 #line 2751 "gram.y"
     {
 					Constraint *n = (Constraint *) (yyvsp[(3) - (3)].node);
@@ -23688,26 +23489,20 @@
 					n->conname = (yyvsp[(2) - (3)].str);
 					n->location = (yylsp[(1) - (3)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 400:
-
-/* Line 1806 of yacc.c  */
 #line 2758 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 401:
-
-/* Line 1806 of yacc.c  */
 #line 2759 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 402:
-
-/* Line 1806 of yacc.c  */
 #line 2761 "gram.y"
     {
 					/*
@@ -23720,36 +23515,30 @@
 					n->collname = (yyvsp[(2) - (2)].list);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 403:
-
-/* Line 1806 of yacc.c  */
 #line 2792 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_NOTNULL;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 404:
-
-/* Line 1806 of yacc.c  */
 #line 2799 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 405:
-
-/* Line 1806 of yacc.c  */
 #line 2806 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23760,12 +23549,10 @@
 					n->indexname = NULL;
 					n->indexspace = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 406:
-
-/* Line 1806 of yacc.c  */
 #line 2817 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23776,12 +23563,10 @@
 					n->indexname = NULL;
 					n->indexspace = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 407:
-
-/* Line 1806 of yacc.c  */
 #line 2828 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23791,12 +23576,10 @@
 					n->raw_expr = (yyvsp[(3) - (5)].node);
 					n->cooked_expr = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 408:
-
-/* Line 1806 of yacc.c  */
 #line 2838 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23805,12 +23588,10 @@
 					n->raw_expr = (yyvsp[(2) - (2)].node);
 					n->cooked_expr = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 409:
-
-/* Line 1806 of yacc.c  */
 #line 2847 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23825,135 +23606,105 @@
 					n->skip_validation  = false;
 					n->initially_valid  = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 410:
-
-/* Line 1806 of yacc.c  */
 #line 2880 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_DEFERRABLE;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 411:
-
-/* Line 1806 of yacc.c  */
 #line 2887 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_NOT_DEFERRABLE;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 412:
-
-/* Line 1806 of yacc.c  */
 #line 2894 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_DEFERRED;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 413:
-
-/* Line 1806 of yacc.c  */
 #line 2901 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_IMMEDIATE;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 414:
-
-/* Line 1806 of yacc.c  */
 #line 2912 "gram.y"
     {
 					TableLikeClause *n = makeNode(TableLikeClause);
 					n->relation = (yyvsp[(2) - (3)].range);
 					n->options = (yyvsp[(3) - (3)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 415:
-
-/* Line 1806 of yacc.c  */
 #line 2921 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 416:
-
-/* Line 1806 of yacc.c  */
 #line 2922 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 417:
-
-/* Line 1806 of yacc.c  */
 #line 2923 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 418:
-
-/* Line 1806 of yacc.c  */
 #line 2927 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_DEFAULTS; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_DEFAULTS; ;}
     break;
 
   case 419:
-
-/* Line 1806 of yacc.c  */
 #line 2928 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_CONSTRAINTS; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_CONSTRAINTS; ;}
     break;
 
   case 420:
-
-/* Line 1806 of yacc.c  */
 #line 2929 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_INDEXES; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_INDEXES; ;}
     break;
 
   case 421:
-
-/* Line 1806 of yacc.c  */
 #line 2930 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_STORAGE; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_STORAGE; ;}
     break;
 
   case 422:
-
-/* Line 1806 of yacc.c  */
 #line 2931 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_COMMENTS; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_COMMENTS; ;}
     break;
 
   case 423:
-
-/* Line 1806 of yacc.c  */
 #line 2932 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_ALL; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_ALL; ;}
     break;
 
   case 424:
-
-/* Line 1806 of yacc.c  */
 #line 2942 "gram.y"
     {
 					Constraint *n = (Constraint *) (yyvsp[(3) - (3)].node);
@@ -23961,19 +23712,15 @@
 					n->conname = (yyvsp[(2) - (3)].str);
 					n->location = (yylsp[(1) - (3)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 425:
-
-/* Line 1806 of yacc.c  */
 #line 2949 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 426:
-
-/* Line 1806 of yacc.c  */
 #line 2954 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23986,12 +23733,10 @@
 								   &n->is_no_inherit, yyscanner);
 					n->initially_valid = !n->skip_validation;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 427:
-
-/* Line 1806 of yacc.c  */
 #line 2968 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -24005,12 +23750,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 428:
-
-/* Line 1806 of yacc.c  */
 #line 2982 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -24024,12 +23767,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 429:
-
-/* Line 1806 of yacc.c  */
 #line 2997 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -24043,12 +23784,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 430:
-
-/* Line 1806 of yacc.c  */
 #line 3011 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -24062,12 +23801,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 431:
-
-/* Line 1806 of yacc.c  */
 #line 3027 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -24083,12 +23820,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 432:
-
-/* Line 1806 of yacc.c  */
 #line 3044 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -24106,72 +23841,54 @@
 								   yyscanner);
 					n->initially_valid = !n->skip_validation;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 433:
-
-/* Line 1806 of yacc.c  */
 #line 3063 "gram.y"
-    {  (yyval.boolean) = TRUE; }
+    {  (yyval.boolean) = TRUE; ;}
     break;
 
   case 434:
-
-/* Line 1806 of yacc.c  */
 #line 3064 "gram.y"
-    {  (yyval.boolean) = FALSE; }
+    {  (yyval.boolean) = FALSE; ;}
     break;
 
   case 435:
-
-/* Line 1806 of yacc.c  */
 #line 3068 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 436:
-
-/* Line 1806 of yacc.c  */
 #line 3069 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 437:
-
-/* Line 1806 of yacc.c  */
 #line 3073 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 438:
-
-/* Line 1806 of yacc.c  */
 #line 3074 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 439:
-
-/* Line 1806 of yacc.c  */
 #line 3078 "gram.y"
     {
 					(yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str));
-				}
+				;}
     break;
 
   case 440:
-
-/* Line 1806 of yacc.c  */
 #line 3084 "gram.y"
     {
 				(yyval.ival) = FKCONSTR_MATCH_FULL;
-			}
+			;}
     break;
 
   case 441:
-
-/* Line 1806 of yacc.c  */
 #line 3088 "gram.y"
     {
 				ereport(ERROR,
@@ -24179,265 +23896,193 @@
 						 errmsg("MATCH PARTIAL not yet implemented"),
 						 parser_errposition((yylsp[(1) - (2)]))));
 				(yyval.ival) = FKCONSTR_MATCH_PARTIAL;
-			}
+			;}
     break;
 
   case 442:
-
-/* Line 1806 of yacc.c  */
 #line 3096 "gram.y"
     {
 				(yyval.ival) = FKCONSTR_MATCH_SIMPLE;
-			}
+			;}
     break;
 
   case 443:
-
-/* Line 1806 of yacc.c  */
 #line 3100 "gram.y"
     {
 				(yyval.ival) = FKCONSTR_MATCH_SIMPLE;
-			}
+			;}
     break;
 
   case 444:
-
-/* Line 1806 of yacc.c  */
 #line 3106 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
     break;
 
   case 445:
-
-/* Line 1806 of yacc.c  */
 #line 3108 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 446:
-
-/* Line 1806 of yacc.c  */
 #line 3112 "gram.y"
     {
 				(yyval.list) = list_make2((yyvsp[(1) - (3)].ielem), (yyvsp[(3) - (3)].list));
-			}
+			;}
     break;
 
   case 447:
-
-/* Line 1806 of yacc.c  */
 #line 3117 "gram.y"
     {
 				(yyval.list) = list_make2((yyvsp[(1) - (6)].ielem), (yyvsp[(5) - (6)].list));
-			}
+			;}
     break;
 
   case 448:
-
-/* Line 1806 of yacc.c  */
 #line 3123 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (4)].node); }
+    { (yyval.node) = (yyvsp[(3) - (4)].node); ;}
     break;
 
   case 449:
-
-/* Line 1806 of yacc.c  */
 #line 3124 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 450:
-
-/* Line 1806 of yacc.c  */
 #line 3135 "gram.y"
-    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
+    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); ;}
     break;
 
   case 451:
-
-/* Line 1806 of yacc.c  */
 #line 3137 "gram.y"
-    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); }
+    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
     break;
 
   case 452:
-
-/* Line 1806 of yacc.c  */
 #line 3139 "gram.y"
-    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); }
+    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
     break;
 
   case 453:
-
-/* Line 1806 of yacc.c  */
 #line 3141 "gram.y"
-    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); }
+    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
     break;
 
   case 454:
-
-/* Line 1806 of yacc.c  */
 #line 3143 "gram.y"
-    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
+    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); ;}
     break;
 
   case 455:
-
-/* Line 1806 of yacc.c  */
 #line 3146 "gram.y"
-    { (yyval.ival) = (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 456:
-
-/* Line 1806 of yacc.c  */
 #line 3149 "gram.y"
-    { (yyval.ival) = (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 457:
-
-/* Line 1806 of yacc.c  */
 #line 3153 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_NOACTION; }
+    { (yyval.ival) = FKCONSTR_ACTION_NOACTION; ;}
     break;
 
   case 458:
-
-/* Line 1806 of yacc.c  */
 #line 3154 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_RESTRICT; }
+    { (yyval.ival) = FKCONSTR_ACTION_RESTRICT; ;}
     break;
 
   case 459:
-
-/* Line 1806 of yacc.c  */
 #line 3155 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_CASCADE; }
+    { (yyval.ival) = FKCONSTR_ACTION_CASCADE; ;}
     break;
 
   case 460:
-
-/* Line 1806 of yacc.c  */
 #line 3156 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_SETNULL; }
+    { (yyval.ival) = FKCONSTR_ACTION_SETNULL; ;}
     break;
 
   case 461:
-
-/* Line 1806 of yacc.c  */
 #line 3157 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_SETDEFAULT; }
+    { (yyval.ival) = FKCONSTR_ACTION_SETDEFAULT; ;}
     break;
 
   case 462:
-
-/* Line 1806 of yacc.c  */
 #line 3160 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 463:
-
-/* Line 1806 of yacc.c  */
 #line 3161 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 464:
-
-/* Line 1806 of yacc.c  */
 #line 3166 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 465:
-
-/* Line 1806 of yacc.c  */
 #line 3167 "gram.y"
-    { (yyval.list) = list_make1(defWithOids(true)); }
+    { (yyval.list) = list_make1(defWithOids(true)); ;}
     break;
 
   case 466:
-
-/* Line 1806 of yacc.c  */
 #line 3168 "gram.y"
-    { (yyval.list) = list_make1(defWithOids(false)); }
+    { (yyval.list) = list_make1(defWithOids(false)); ;}
     break;
 
   case 467:
-
-/* Line 1806 of yacc.c  */
 #line 3169 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 468:
-
-/* Line 1806 of yacc.c  */
 #line 3172 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_DROP; }
+    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
     break;
 
   case 469:
-
-/* Line 1806 of yacc.c  */
 #line 3173 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_DELETE_ROWS; }
+    { (yyval.oncommit) = ONCOMMIT_DELETE_ROWS; ;}
     break;
 
   case 470:
-
-/* Line 1806 of yacc.c  */
 #line 3174 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_PRESERVE_ROWS; }
+    { (yyval.oncommit) = ONCOMMIT_PRESERVE_ROWS; ;}
     break;
 
   case 471:
-
-/* Line 1806 of yacc.c  */
 #line 3175 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_NOOP; }
+    { (yyval.oncommit) = ONCOMMIT_NOOP; ;}
     break;
 
   case 472:
-
-/* Line 1806 of yacc.c  */
 #line 3178 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 473:
-
-/* Line 1806 of yacc.c  */
 #line 3179 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 474:
-
-/* Line 1806 of yacc.c  */
 #line 3182 "gram.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 475:
-
-/* Line 1806 of yacc.c  */
 #line 3183 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 476:
-
-/* Line 1806 of yacc.c  */
 #line 3186 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 477:
-
-/* Line 1806 of yacc.c  */
 #line 3202 "gram.y"
     {
 					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
@@ -24449,12 +24094,10 @@
 					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
 					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
 					(yyval.node) = (Node *) ctas;
-				}
+				;}
     break;
 
   case 478:
-
-/* Line 1806 of yacc.c  */
 #line 3217 "gram.y"
     {
 					(yyval.into) = makeNode(IntoClause);
@@ -24465,33 +24108,25 @@
 					(yyval.into)->tableSpaceName = (yyvsp[(5) - (5)].str);
 					(yyval.into)->viewQuery = NULL;
 					(yyval.into)->skipData = false;		/* might get changed later */
-				}
+				;}
     break;
 
   case 479:
-
-/* Line 1806 of yacc.c  */
 #line 3230 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 480:
-
-/* Line 1806 of yacc.c  */
 #line 3231 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 481:
-
-/* Line 1806 of yacc.c  */
 #line 3232 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 482:
-
-/* Line 1806 of yacc.c  */
 #line 3245 "gram.y"
     {
 					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
@@ -24503,12 +24138,10 @@
 					(yyvsp[(5) - (8)].into)->rel->relpersistence = (yyvsp[(2) - (8)].ival);
 					(yyvsp[(5) - (8)].into)->skipData = !((yyvsp[(8) - (8)].boolean));
 					(yyval.node) = (Node *) ctas;
-				}
+				;}
     break;
 
   case 483:
-
-/* Line 1806 of yacc.c  */
 #line 3260 "gram.y"
     {
 					(yyval.into) = makeNode(IntoClause);
@@ -24519,38 +24152,30 @@
 					(yyval.into)->tableSpaceName = (yyvsp[(4) - (4)].str);
 					(yyval.into)->viewQuery = NULL;		/* filled at analysis time */
 					(yyval.into)->skipData = false;		/* might get changed later */
-				}
+				;}
     break;
 
   case 484:
-
-/* Line 1806 of yacc.c  */
 #line 3272 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_UNLOGGED; }
+    { (yyval.ival) = RELPERSISTENCE_UNLOGGED; ;}
     break;
 
   case 485:
-
-/* Line 1806 of yacc.c  */
 #line 3273 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
+    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
     break;
 
   case 486:
-
-/* Line 1806 of yacc.c  */
 #line 3286 "gram.y"
     {
 					RefreshMatViewStmt *n = makeNode(RefreshMatViewStmt);
 					n->relation = (yyvsp[(4) - (5)].range);
 					n->skipData = !((yyvsp[(5) - (5)].boolean));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 487:
-
-/* Line 1806 of yacc.c  */
 #line 3305 "gram.y"
     {
 					CreateSeqStmt *n = makeNode(CreateSeqStmt);
@@ -24559,12 +24184,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->ownerId = InvalidOid;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 488:
-
-/* Line 1806 of yacc.c  */
 #line 3317 "gram.y"
     {
 					AlterSeqStmt *n = makeNode(AlterSeqStmt);
@@ -24572,12 +24195,10 @@
 					n->options = (yyvsp[(4) - (4)].list);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 489:
-
-/* Line 1806 of yacc.c  */
 #line 3325 "gram.y"
     {
 					AlterSeqStmt *n = makeNode(AlterSeqStmt);
@@ -24585,200 +24206,152 @@
 					n->options = (yyvsp[(6) - (6)].list);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 490:
-
-/* Line 1806 of yacc.c  */
 #line 3335 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 491:
-
-/* Line 1806 of yacc.c  */
 #line 3336 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 492:
-
-/* Line 1806 of yacc.c  */
 #line 3339 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 493:
-
-/* Line 1806 of yacc.c  */
 #line 3340 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 494:
-
-/* Line 1806 of yacc.c  */
 #line 3344 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cache", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 495:
-
-/* Line 1806 of yacc.c  */
 #line 3348 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 496:
-
-/* Line 1806 of yacc.c  */
 #line 3352 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 497:
-
-/* Line 1806 of yacc.c  */
 #line 3356 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("increment", (Node *)(yyvsp[(3) - (3)].value));
-				}
+				;}
     break;
 
   case 498:
-
-/* Line 1806 of yacc.c  */
 #line 3360 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("maxvalue", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 499:
-
-/* Line 1806 of yacc.c  */
 #line 3364 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("minvalue", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 500:
-
-/* Line 1806 of yacc.c  */
 #line 3368 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("maxvalue", NULL);
-				}
+				;}
     break;
 
   case 501:
-
-/* Line 1806 of yacc.c  */
 #line 3372 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("minvalue", NULL);
-				}
+				;}
     break;
 
   case 502:
-
-/* Line 1806 of yacc.c  */
 #line 3376 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("owned_by", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 503:
-
-/* Line 1806 of yacc.c  */
 #line 3380 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("start", (Node *)(yyvsp[(3) - (3)].value));
-				}
+				;}
     break;
 
   case 504:
-
-/* Line 1806 of yacc.c  */
 #line 3384 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("restart", NULL);
-				}
+				;}
     break;
 
   case 505:
-
-/* Line 1806 of yacc.c  */
 #line 3388 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("restart", (Node *)(yyvsp[(3) - (3)].value));
-				}
+				;}
     break;
 
   case 506:
-
-/* Line 1806 of yacc.c  */
 #line 3393 "gram.y"
-    {}
+    {;}
     break;
 
   case 507:
-
-/* Line 1806 of yacc.c  */
 #line 3394 "gram.y"
-    {}
+    {;}
     break;
 
   case 508:
-
-/* Line 1806 of yacc.c  */
 #line 3398 "gram.y"
-    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 509:
-
-/* Line 1806 of yacc.c  */
 #line 3400 "gram.y"
     {
 					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
 					doNegateFloat((yyval.value));
-				}
+				;}
     break;
 
   case 510:
-
-/* Line 1806 of yacc.c  */
 #line 3404 "gram.y"
-    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); }
+    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
     break;
 
   case 511:
-
-/* Line 1806 of yacc.c  */
 #line 3407 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); ;}
     break;
 
   case 512:
-
-/* Line 1806 of yacc.c  */
 #line 3408 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); ;}
     break;
 
   case 513:
-
-/* Line 1806 of yacc.c  */
 #line 3421 "gram.y"
     {
 				CreatePLangStmt *n = makeNode(CreatePLangStmt);
@@ -24790,12 +24363,10 @@
 				n->plvalidator = NIL;
 				n->pltrusted = false;
 				(yyval.node) = (Node *)n;
-			}
+			;}
     break;
 
   case 514:
-
-/* Line 1806 of yacc.c  */
 #line 3434 "gram.y"
     {
 				CreatePLangStmt *n = makeNode(CreatePLangStmt);
@@ -24806,82 +24377,60 @@
 				n->plvalidator = (yyvsp[(10) - (10)].list);
 				n->pltrusted = (yyvsp[(3) - (10)].boolean);
 				(yyval.node) = (Node *)n;
-			}
+			;}
     break;
 
   case 515:
-
-/* Line 1806 of yacc.c  */
 #line 3447 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 516:
-
-/* Line 1806 of yacc.c  */
 #line 3448 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 517:
-
-/* Line 1806 of yacc.c  */
 #line 3456 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 518:
-
-/* Line 1806 of yacc.c  */
 #line 3457 "gram.y"
-    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); }
+    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 519:
-
-/* Line 1806 of yacc.c  */
 #line 3461 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 520:
-
-/* Line 1806 of yacc.c  */
 #line 3462 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 521:
-
-/* Line 1806 of yacc.c  */
 #line 3466 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 522:
-
-/* Line 1806 of yacc.c  */
 #line 3467 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 523:
-
-/* Line 1806 of yacc.c  */
 #line 3471 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 524:
-
-/* Line 1806 of yacc.c  */
 #line 3472 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 525:
-
-/* Line 1806 of yacc.c  */
 #line 3477 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -24892,12 +24441,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 526:
-
-/* Line 1806 of yacc.c  */
 #line 3488 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -24907,26 +24454,20 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 527:
-
-/* Line 1806 of yacc.c  */
 #line 3500 "gram.y"
-    {}
+    {;}
     break;
 
   case 528:
-
-/* Line 1806 of yacc.c  */
 #line 3501 "gram.y"
-    {}
+    {;}
     break;
 
   case 529:
-
-/* Line 1806 of yacc.c  */
 #line 3512 "gram.y"
     {
 					CreateTableSpaceStmt *n = makeNode(CreateTableSpaceStmt);
@@ -24934,50 +24475,40 @@
 					n->owner = (yyvsp[(4) - (6)].str);
 					n->location = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 530:
-
-/* Line 1806 of yacc.c  */
 #line 3521 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 531:
-
-/* Line 1806 of yacc.c  */
 #line 3522 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 532:
-
-/* Line 1806 of yacc.c  */
 #line 3536 "gram.y"
     {
 					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
 					n->tablespacename = (yyvsp[(3) - (3)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 533:
-
-/* Line 1806 of yacc.c  */
 #line 3543 "gram.y"
     {
 					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
 					n->tablespacename = (yyvsp[(5) - (5)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 534:
-
-/* Line 1806 of yacc.c  */
 #line 3560 "gram.y"
     {
 					CreateExtensionStmt *n = makeNode(CreateExtensionStmt);
@@ -24985,12 +24516,10 @@
 					n->if_not_exists = false;
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 535:
-
-/* Line 1806 of yacc.c  */
 #line 3568 "gram.y"
     {
 					CreateExtensionStmt *n = makeNode(CreateExtensionStmt);
@@ -24998,88 +24527,68 @@
 					n->if_not_exists = true;
 					n->options = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 536:
-
-/* Line 1806 of yacc.c  */
 #line 3579 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 537:
-
-/* Line 1806 of yacc.c  */
 #line 3581 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 538:
-
-/* Line 1806 of yacc.c  */
 #line 3586 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("schema", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 539:
-
-/* Line 1806 of yacc.c  */
 #line 3590 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("new_version", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 540:
-
-/* Line 1806 of yacc.c  */
 #line 3594 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("old_version", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 541:
-
-/* Line 1806 of yacc.c  */
 #line 3606 "gram.y"
     {
 					AlterExtensionStmt *n = makeNode(AlterExtensionStmt);
 					n->extname = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 542:
-
-/* Line 1806 of yacc.c  */
 #line 3616 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 543:
-
-/* Line 1806 of yacc.c  */
 #line 3618 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 544:
-
-/* Line 1806 of yacc.c  */
 #line 3623 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("new_version", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 545:
-
-/* Line 1806 of yacc.c  */
 #line 3636 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25089,12 +24598,10 @@
 					n->objname = (yyvsp[(6) - (7)].list);
 					n->objargs = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 546:
-
-/* Line 1806 of yacc.c  */
 #line 3646 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25104,12 +24611,10 @@
 					n->objname = list_make1((yyvsp[(7) - (10)].typnam));
 					n->objargs = list_make1((yyvsp[(9) - (10)].typnam));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 547:
-
-/* Line 1806 of yacc.c  */
 #line 3656 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25118,12 +24623,10 @@
 					n->objtype = OBJECT_COLLATION;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 548:
-
-/* Line 1806 of yacc.c  */
 #line 3665 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25132,12 +24635,10 @@
 					n->objtype = OBJECT_CONVERSION;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 549:
-
-/* Line 1806 of yacc.c  */
 #line 3674 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25146,12 +24647,10 @@
 					n->objtype = OBJECT_DOMAIN;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 550:
-
-/* Line 1806 of yacc.c  */
 #line 3683 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25161,12 +24660,10 @@
 					n->objname = (yyvsp[(6) - (6)].funwithargs)->funcname;
 					n->objargs = (yyvsp[(6) - (6)].funwithargs)->funcargs;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 551:
-
-/* Line 1806 of yacc.c  */
 #line 3693 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25175,12 +24672,10 @@
 					n->objtype = OBJECT_LANGUAGE;
 					n->objname = list_make1(makeString((yyvsp[(7) - (7)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 552:
-
-/* Line 1806 of yacc.c  */
 #line 3702 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25190,12 +24685,10 @@
 					n->objname = (yyvsp[(6) - (7)].list);
 					n->objargs = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 553:
-
-/* Line 1806 of yacc.c  */
 #line 3712 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25205,12 +24698,10 @@
 					n->objname = (yyvsp[(7) - (9)].list);
 					n->objargs = list_make1(makeString((yyvsp[(9) - (9)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 554:
-
-/* Line 1806 of yacc.c  */
 #line 3722 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25220,12 +24711,10 @@
 					n->objname = (yyvsp[(7) - (9)].list);
 					n->objargs = list_make1(makeString((yyvsp[(9) - (9)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 555:
-
-/* Line 1806 of yacc.c  */
 #line 3732 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25234,12 +24723,10 @@
 					n->objtype = OBJECT_SCHEMA;
 					n->objname = list_make1(makeString((yyvsp[(6) - (6)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 556:
-
-/* Line 1806 of yacc.c  */
 #line 3741 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25248,12 +24735,10 @@
 					n->objtype = OBJECT_EVENT_TRIGGER;
 					n->objname = list_make1(makeString((yyvsp[(7) - (7)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 557:
-
-/* Line 1806 of yacc.c  */
 #line 3750 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25262,12 +24747,10 @@
 					n->objtype = OBJECT_TABLE;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 558:
-
-/* Line 1806 of yacc.c  */
 #line 3759 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25276,12 +24759,10 @@
 					n->objtype = OBJECT_TSPARSER;
 					n->objname = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 559:
-
-/* Line 1806 of yacc.c  */
 #line 3768 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25290,12 +24771,10 @@
 					n->objtype = OBJECT_TSDICTIONARY;
 					n->objname = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 560:
-
-/* Line 1806 of yacc.c  */
 #line 3777 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25304,12 +24783,10 @@
 					n->objtype = OBJECT_TSTEMPLATE;
 					n->objname = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 561:
-
-/* Line 1806 of yacc.c  */
 #line 3786 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25318,12 +24795,10 @@
 					n->objtype = OBJECT_TSCONFIGURATION;
 					n->objname = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 562:
-
-/* Line 1806 of yacc.c  */
 #line 3795 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25332,12 +24807,10 @@
 					n->objtype = OBJECT_SEQUENCE;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 563:
-
-/* Line 1806 of yacc.c  */
 #line 3804 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25346,12 +24819,10 @@
 					n->objtype = OBJECT_VIEW;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 564:
-
-/* Line 1806 of yacc.c  */
 #line 3813 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25360,12 +24831,10 @@
 					n->objtype = OBJECT_MATVIEW;
 					n->objname = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 565:
-
-/* Line 1806 of yacc.c  */
 #line 3822 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25374,12 +24843,10 @@
 					n->objtype = OBJECT_FOREIGN_TABLE;
 					n->objname = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 566:
-
-/* Line 1806 of yacc.c  */
 #line 3831 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25388,12 +24855,10 @@
 					n->objtype = OBJECT_FDW;
 					n->objname = list_make1(makeString((yyvsp[(8) - (8)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 567:
-
-/* Line 1806 of yacc.c  */
 #line 3840 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25402,12 +24867,10 @@
 					n->objtype = OBJECT_FOREIGN_SERVER;
 					n->objname = list_make1(makeString((yyvsp[(6) - (6)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 568:
-
-/* Line 1806 of yacc.c  */
 #line 3849 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -25416,12 +24879,10 @@
 					n->objtype = OBJECT_TYPE;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 569:
-
-/* Line 1806 of yacc.c  */
 #line 3867 "gram.y"
     {
 					CreateFdwStmt *n = makeNode(CreateFdwStmt);
@@ -25429,68 +24890,50 @@
 					n->func_options = (yyvsp[(6) - (7)].list);
 					n->options = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 570:
-
-/* Line 1806 of yacc.c  */
 #line 3877 "gram.y"
-    { (yyval.defelt) = makeDefElem("handler", (Node *)(yyvsp[(2) - (2)].list)); }
+    { (yyval.defelt) = makeDefElem("handler", (Node *)(yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 571:
-
-/* Line 1806 of yacc.c  */
 #line 3878 "gram.y"
-    { (yyval.defelt) = makeDefElem("handler", NULL); }
+    { (yyval.defelt) = makeDefElem("handler", NULL); ;}
     break;
 
   case 572:
-
-/* Line 1806 of yacc.c  */
 #line 3879 "gram.y"
-    { (yyval.defelt) = makeDefElem("validator", (Node *)(yyvsp[(2) - (2)].list)); }
+    { (yyval.defelt) = makeDefElem("validator", (Node *)(yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 573:
-
-/* Line 1806 of yacc.c  */
 #line 3880 "gram.y"
-    { (yyval.defelt) = makeDefElem("validator", NULL); }
+    { (yyval.defelt) = makeDefElem("validator", NULL); ;}
     break;
 
   case 574:
-
-/* Line 1806 of yacc.c  */
 #line 3884 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 575:
-
-/* Line 1806 of yacc.c  */
 #line 3885 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 576:
-
-/* Line 1806 of yacc.c  */
 #line 3889 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 577:
-
-/* Line 1806 of yacc.c  */
 #line 3890 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 578:
-
-/* Line 1806 of yacc.c  */
 #line 3901 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -25501,12 +24944,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 579:
-
-/* Line 1806 of yacc.c  */
 #line 3912 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -25517,12 +24958,10 @@
 					n->behavior = (yyvsp[(8) - (8)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 580:
-
-/* Line 1806 of yacc.c  */
 #line 3932 "gram.y"
     {
 					AlterFdwStmt *n = makeNode(AlterFdwStmt);
@@ -25530,12 +24969,10 @@
 					n->func_options = (yyvsp[(6) - (7)].list);
 					n->options = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 581:
-
-/* Line 1806 of yacc.c  */
 #line 3940 "gram.y"
     {
 					AlterFdwStmt *n = makeNode(AlterFdwStmt);
@@ -25543,130 +24980,100 @@
 					n->func_options = (yyvsp[(6) - (6)].list);
 					n->options = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 582:
-
-/* Line 1806 of yacc.c  */
 #line 3951 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 583:
-
-/* Line 1806 of yacc.c  */
 #line 3952 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 584:
-
-/* Line 1806 of yacc.c  */
 #line 3957 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 585:
-
-/* Line 1806 of yacc.c  */
 #line 3961 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 586:
-
-/* Line 1806 of yacc.c  */
 #line 3968 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 587:
-
-/* Line 1806 of yacc.c  */
 #line 3973 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 588:
-
-/* Line 1806 of yacc.c  */
 #line 3977 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 589:
-
-/* Line 1806 of yacc.c  */
 #line 3984 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
-				}
+				;}
     break;
 
   case 590:
-
-/* Line 1806 of yacc.c  */
 #line 3988 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
 					(yyval.defelt)->defaction = DEFELEM_SET;
-				}
+				;}
     break;
 
   case 591:
-
-/* Line 1806 of yacc.c  */
 #line 3993 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
 					(yyval.defelt)->defaction = DEFELEM_ADD;
-				}
+				;}
     break;
 
   case 592:
-
-/* Line 1806 of yacc.c  */
 #line 3998 "gram.y"
     {
 					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP);
-				}
+				;}
     break;
 
   case 593:
-
-/* Line 1806 of yacc.c  */
 #line 4005 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 594:
-
-/* Line 1806 of yacc.c  */
 #line 4011 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 595:
-
-/* Line 1806 of yacc.c  */
 #line 4016 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 596:
-
-/* Line 1806 of yacc.c  */
 #line 4028 "gram.y"
     {
 					CreateForeignServerStmt *n = makeNode(CreateForeignServerStmt);
@@ -25676,54 +25083,40 @@
 					n->fdwname = (yyvsp[(9) - (10)].str);
 					n->options = (yyvsp[(10) - (10)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 597:
-
-/* Line 1806 of yacc.c  */
 #line 4040 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 598:
-
-/* Line 1806 of yacc.c  */
 #line 4041 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 599:
-
-/* Line 1806 of yacc.c  */
 #line 4046 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 600:
-
-/* Line 1806 of yacc.c  */
 #line 4047 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 601:
-
-/* Line 1806 of yacc.c  */
 #line 4051 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 602:
-
-/* Line 1806 of yacc.c  */
 #line 4052 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 603:
-
-/* Line 1806 of yacc.c  */
 #line 4063 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -25734,12 +25127,10 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 604:
-
-/* Line 1806 of yacc.c  */
 #line 4074 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -25750,12 +25141,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 605:
-
-/* Line 1806 of yacc.c  */
 #line 4094 "gram.y"
     {
 					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
@@ -25764,12 +25153,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->has_version = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 606:
-
-/* Line 1806 of yacc.c  */
 #line 4103 "gram.y"
     {
 					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
@@ -25777,24 +25164,20 @@
 					n->version = (yyvsp[(4) - (4)].str);
 					n->has_version = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 607:
-
-/* Line 1806 of yacc.c  */
 #line 4111 "gram.y"
     {
 					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
 					n->servername = (yyvsp[(3) - (4)].str);
 					n->options = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 608:
-
-/* Line 1806 of yacc.c  */
 #line 4130 "gram.y"
     {
 					CreateForeignTableStmt *n = makeNode(CreateForeignTableStmt);
@@ -25807,12 +25190,10 @@
 					n->servername = (yyvsp[(9) - (10)].str);
 					n->options = (yyvsp[(10) - (10)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 609:
-
-/* Line 1806 of yacc.c  */
 #line 4145 "gram.y"
     {
 					CreateForeignTableStmt *n = makeNode(CreateForeignTableStmt);
@@ -25825,12 +25206,10 @@
 					n->servername = (yyvsp[(12) - (13)].str);
 					n->options = (yyvsp[(13) - (13)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 610:
-
-/* Line 1806 of yacc.c  */
 #line 4168 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -25839,12 +25218,10 @@
 					n->relkind = OBJECT_FOREIGN_TABLE;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 611:
-
-/* Line 1806 of yacc.c  */
 #line 4177 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -25853,12 +25230,10 @@
 					n->relkind = OBJECT_FOREIGN_TABLE;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 612:
-
-/* Line 1806 of yacc.c  */
 #line 4195 "gram.y"
     {
 					CreateUserMappingStmt *n = makeNode(CreateUserMappingStmt);
@@ -25866,33 +25241,25 @@
 					n->servername = (yyvsp[(7) - (8)].str);
 					n->options = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 613:
-
-/* Line 1806 of yacc.c  */
 #line 4206 "gram.y"
-    { (yyval.str) = "current_user"; }
+    { (yyval.str) = "current_user"; ;}
     break;
 
   case 614:
-
-/* Line 1806 of yacc.c  */
 #line 4207 "gram.y"
-    { (yyval.str) = "current_user"; }
+    { (yyval.str) = "current_user"; ;}
     break;
 
   case 615:
-
-/* Line 1806 of yacc.c  */
 #line 4208 "gram.y"
-    { (yyval.str) = (strcmp((yyvsp[(1) - (1)].str), "public") == 0) ? NULL : (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (strcmp((yyvsp[(1) - (1)].str), "public") == 0) ? NULL : (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 616:
-
-/* Line 1806 of yacc.c  */
 #line 4219 "gram.y"
     {
 					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
@@ -25900,12 +25267,10 @@
 					n->servername = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 617:
-
-/* Line 1806 of yacc.c  */
 #line 4227 "gram.y"
     {
 					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
@@ -25913,12 +25278,10 @@
 					n->servername = (yyvsp[(9) - (9)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 618:
-
-/* Line 1806 of yacc.c  */
 #line 4244 "gram.y"
     {
 					AlterUserMappingStmt *n = makeNode(AlterUserMappingStmt);
@@ -25926,12 +25289,10 @@
 					n->servername = (yyvsp[(7) - (8)].str);
 					n->options = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 619:
-
-/* Line 1806 of yacc.c  */
 #line 4265 "gram.y"
     {
 					CreateTrigStmt *n = makeNode(CreateTrigStmt);
@@ -25949,12 +25310,10 @@
 					n->initdeferred  = FALSE;
 					n->constrrel = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 620:
-
-/* Line 1806 of yacc.c  */
 #line 4286 "gram.y"
     {
 					CreateTrigStmt *n = makeNode(CreateTrigStmt);
@@ -25973,40 +25332,30 @@
 								   NULL, yyscanner);
 					n->constrrel = (yyvsp[(9) - (20)].range);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 621:
-
-/* Line 1806 of yacc.c  */
 #line 4307 "gram.y"
-    { (yyval.ival) = TRIGGER_TYPE_BEFORE; }
+    { (yyval.ival) = TRIGGER_TYPE_BEFORE; ;}
     break;
 
   case 622:
-
-/* Line 1806 of yacc.c  */
 #line 4308 "gram.y"
-    { (yyval.ival) = TRIGGER_TYPE_AFTER; }
+    { (yyval.ival) = TRIGGER_TYPE_AFTER; ;}
     break;
 
   case 623:
-
-/* Line 1806 of yacc.c  */
 #line 4309 "gram.y"
-    { (yyval.ival) = TRIGGER_TYPE_INSTEAD; }
+    { (yyval.ival) = TRIGGER_TYPE_INSTEAD; ;}
     break;
 
   case 624:
-
-/* Line 1806 of yacc.c  */
 #line 4314 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 625:
-
-/* Line 1806 of yacc.c  */
 #line 4316 "gram.y"
     {
 					int		events1 = intVal(linitial((yyvsp[(1) - (3)].list)));
@@ -26025,56 +25374,42 @@
 					 */
 					(yyval.list) = list_make2(makeInteger(events1 | events2),
 									list_concat(columns1, columns2));
-				}
+				;}
     break;
 
   case 626:
-
-/* Line 1806 of yacc.c  */
 #line 4338 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_INSERT), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_INSERT), NIL); ;}
     break;
 
   case 627:
-
-/* Line 1806 of yacc.c  */
 #line 4340 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_DELETE), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_DELETE), NIL); ;}
     break;
 
   case 628:
-
-/* Line 1806 of yacc.c  */
 #line 4342 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), NIL); ;}
     break;
 
   case 629:
-
-/* Line 1806 of yacc.c  */
 #line 4344 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 630:
-
-/* Line 1806 of yacc.c  */
 #line 4346 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_TRUNCATE), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_TRUNCATE), NIL); ;}
     break;
 
   case 631:
-
-/* Line 1806 of yacc.c  */
 #line 4351 "gram.y"
     {
 					(yyval.boolean) = (yyvsp[(3) - (3)].boolean);
-				}
+				;}
     break;
 
   case 632:
-
-/* Line 1806 of yacc.c  */
 #line 4355 "gram.y"
     {
 					/*
@@ -26082,128 +25417,94 @@
 					 * STATEMENT, per SQL
 					 */
 					(yyval.boolean) = FALSE;
-				}
+				;}
     break;
 
   case 633:
-
-/* Line 1806 of yacc.c  */
 #line 4365 "gram.y"
-    {}
+    {;}
     break;
 
   case 634:
-
-/* Line 1806 of yacc.c  */
 #line 4366 "gram.y"
-    {}
+    {;}
     break;
 
   case 635:
-
-/* Line 1806 of yacc.c  */
 #line 4370 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 636:
-
-/* Line 1806 of yacc.c  */
 #line 4371 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 637:
-
-/* Line 1806 of yacc.c  */
 #line 4375 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (4)].node); }
+    { (yyval.node) = (yyvsp[(3) - (4)].node); ;}
     break;
 
   case 638:
-
-/* Line 1806 of yacc.c  */
 #line 4376 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 639:
-
-/* Line 1806 of yacc.c  */
 #line 4380 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); ;}
     break;
 
   case 640:
-
-/* Line 1806 of yacc.c  */
 #line 4381 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); ;}
     break;
 
   case 641:
-
-/* Line 1806 of yacc.c  */
 #line 4382 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 642:
-
-/* Line 1806 of yacc.c  */
 #line 4387 "gram.y"
     {
 					char buf[64];
 					snprintf(buf, sizeof(buf), "%d", (yyvsp[(1) - (1)].ival));
 					(yyval.value) = makeString(pstrdup(buf));
-				}
+				;}
     break;
 
   case 643:
-
-/* Line 1806 of yacc.c  */
 #line 4392 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 644:
-
-/* Line 1806 of yacc.c  */
 #line 4393 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 645:
-
-/* Line 1806 of yacc.c  */
 #line 4394 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 646:
-
-/* Line 1806 of yacc.c  */
 #line 4398 "gram.y"
-    { (yyval.range) = (yyvsp[(2) - (2)].range); }
+    { (yyval.range) = (yyvsp[(2) - (2)].range); ;}
     break;
 
   case 647:
-
-/* Line 1806 of yacc.c  */
 #line 4399 "gram.y"
-    { (yyval.range) = NULL; }
+    { (yyval.range) = NULL; ;}
     break;
 
   case 648:
-
-/* Line 1806 of yacc.c  */
 #line 4404 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 649:
-
-/* Line 1806 of yacc.c  */
 #line 4406 "gram.y"
     {
 					/*
@@ -26227,54 +25528,40 @@
 								 errmsg("conflicting constraint properties"),
 								 parser_errposition((yylsp[(2) - (2)]))));
 					(yyval.ival) = newspec;
-				}
+				;}
     break;
 
   case 650:
-
-/* Line 1806 of yacc.c  */
 #line 4432 "gram.y"
-    { (yyval.ival) = CAS_NOT_DEFERRABLE; }
+    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
     break;
 
   case 651:
-
-/* Line 1806 of yacc.c  */
 #line 4433 "gram.y"
-    { (yyval.ival) = CAS_DEFERRABLE; }
+    { (yyval.ival) = CAS_DEFERRABLE; ;}
     break;
 
   case 652:
-
-/* Line 1806 of yacc.c  */
 #line 4434 "gram.y"
-    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; }
+    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
     break;
 
   case 653:
-
-/* Line 1806 of yacc.c  */
 #line 4435 "gram.y"
-    { (yyval.ival) = CAS_INITIALLY_DEFERRED; }
+    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
     break;
 
   case 654:
-
-/* Line 1806 of yacc.c  */
 #line 4436 "gram.y"
-    { (yyval.ival) = CAS_NOT_VALID; }
+    { (yyval.ival) = CAS_NOT_VALID; ;}
     break;
 
   case 655:
-
-/* Line 1806 of yacc.c  */
 #line 4437 "gram.y"
-    { (yyval.ival) = CAS_NO_INHERIT; }
+    { (yyval.ival) = CAS_NO_INHERIT; ;}
     break;
 
   case 656:
-
-/* Line 1806 of yacc.c  */
 #line 4443 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26285,12 +25572,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 657:
-
-/* Line 1806 of yacc.c  */
 #line 4454 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26301,12 +25586,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 658:
-
-/* Line 1806 of yacc.c  */
 #line 4478 "gram.y"
     {
 					CreateEventTrigStmt *n = makeNode(CreateEventTrigStmt);
@@ -26315,12 +25598,10 @@
 					n->whenclause = NULL;
 					n->funcname = (yyvsp[(9) - (11)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 659:
-
-/* Line 1806 of yacc.c  */
 #line 4489 "gram.y"
     {
 					CreateEventTrigStmt *n = makeNode(CreateEventTrigStmt);
@@ -26329,87 +25610,65 @@
 					n->whenclause = (yyvsp[(8) - (13)].list);
 					n->funcname = (yyvsp[(11) - (13)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 660:
-
-/* Line 1806 of yacc.c  */
 #line 4501 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 661:
-
-/* Line 1806 of yacc.c  */
 #line 4503 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 662:
-
-/* Line 1806 of yacc.c  */
 #line 4508 "gram.y"
-    { (yyval.defelt) = makeDefElem((yyvsp[(1) - (5)].str), (Node *) (yyvsp[(4) - (5)].list)); }
+    { (yyval.defelt) = makeDefElem((yyvsp[(1) - (5)].str), (Node *) (yyvsp[(4) - (5)].list)); ;}
     break;
 
   case 663:
-
-/* Line 1806 of yacc.c  */
 #line 4513 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 664:
-
-/* Line 1806 of yacc.c  */
 #line 4515 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 665:
-
-/* Line 1806 of yacc.c  */
 #line 4520 "gram.y"
     {
 					AlterEventTrigStmt *n = makeNode(AlterEventTrigStmt);
 					n->trigname = (yyvsp[(4) - (5)].str);
 					n->tgenabled = (yyvsp[(5) - (5)].chr);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 666:
-
-/* Line 1806 of yacc.c  */
 #line 4529 "gram.y"
-    { (yyval.chr) = TRIGGER_FIRES_ON_ORIGIN; }
+    { (yyval.chr) = TRIGGER_FIRES_ON_ORIGIN; ;}
     break;
 
   case 667:
-
-/* Line 1806 of yacc.c  */
 #line 4530 "gram.y"
-    { (yyval.chr) = TRIGGER_FIRES_ON_REPLICA; }
+    { (yyval.chr) = TRIGGER_FIRES_ON_REPLICA; ;}
     break;
 
   case 668:
-
-/* Line 1806 of yacc.c  */
 #line 4531 "gram.y"
-    { (yyval.chr) = TRIGGER_FIRES_ALWAYS; }
+    { (yyval.chr) = TRIGGER_FIRES_ALWAYS; ;}
     break;
 
   case 669:
-
-/* Line 1806 of yacc.c  */
 #line 4532 "gram.y"
-    { (yyval.chr) = TRIGGER_DISABLED; }
+    { (yyval.chr) = TRIGGER_DISABLED; ;}
     break;
 
   case 670:
-
-/* Line 1806 of yacc.c  */
 #line 4546 "gram.y"
     {
 					CreateTrigStmt *n = makeNode(CreateTrigStmt);
@@ -26425,12 +25684,10 @@
 							 errmsg("CREATE ASSERTION is not yet implemented")));
 
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 671:
-
-/* Line 1806 of yacc.c  */
 #line 4565 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26442,12 +25699,10 @@
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("DROP ASSERTION is not yet implemented")));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 672:
-
-/* Line 1806 of yacc.c  */
 #line 4588 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -26457,12 +25712,10 @@
 					n->args = (yyvsp[(4) - (5)].list);
 					n->definition = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 673:
-
-/* Line 1806 of yacc.c  */
 #line 4598 "gram.y"
     {
 					/* old-style (pre-8.2) syntax for CREATE AGGREGATE */
@@ -26473,12 +25726,10 @@
 					n->args = NIL;
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 674:
-
-/* Line 1806 of yacc.c  */
 #line 4609 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -26488,12 +25739,10 @@
 					n->args = NIL;
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 675:
-
-/* Line 1806 of yacc.c  */
 #line 4619 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -26503,12 +25752,10 @@
 					n->args = NIL;
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 676:
-
-/* Line 1806 of yacc.c  */
 #line 4629 "gram.y"
     {
 					/* Shell type (identified by lack of definition) */
@@ -26519,12 +25766,10 @@
 					n->args = NIL;
 					n->definition = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 677:
-
-/* Line 1806 of yacc.c  */
 #line 4640 "gram.y"
     {
 					CompositeTypeStmt *n = makeNode(CompositeTypeStmt);
@@ -26533,36 +25778,30 @@
 					n->typevar = makeRangeVarFromAnyName((yyvsp[(3) - (7)].list), (yylsp[(3) - (7)]), yyscanner);
 					n->coldeflist = (yyvsp[(6) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 678:
-
-/* Line 1806 of yacc.c  */
 #line 4649 "gram.y"
     {
 					CreateEnumStmt *n = makeNode(CreateEnumStmt);
 					n->typeName = (yyvsp[(3) - (8)].list);
 					n->vals = (yyvsp[(7) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 679:
-
-/* Line 1806 of yacc.c  */
 #line 4656 "gram.y"
     {
 					CreateRangeStmt *n = makeNode(CreateRangeStmt);
 					n->typeName = (yyvsp[(3) - (6)].list);
 					n->params	= (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 680:
-
-/* Line 1806 of yacc.c  */
 #line 4663 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -26571,12 +25810,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 681:
-
-/* Line 1806 of yacc.c  */
 #line 4672 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -26585,12 +25822,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 682:
-
-/* Line 1806 of yacc.c  */
 #line 4681 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -26599,12 +25834,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 683:
-
-/* Line 1806 of yacc.c  */
 #line 4690 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -26613,12 +25846,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 684:
-
-/* Line 1806 of yacc.c  */
 #line 4699 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -26627,12 +25858,10 @@
 					n->defnames = (yyvsp[(3) - (4)].list);
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 685:
-
-/* Line 1806 of yacc.c  */
 #line 4708 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -26641,158 +25870,116 @@
 					n->defnames = (yyvsp[(3) - (5)].list);
 					n->definition = list_make1(makeDefElem("from", (Node *) (yyvsp[(5) - (5)].list)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 686:
-
-/* Line 1806 of yacc.c  */
 #line 4718 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 687:
-
-/* Line 1806 of yacc.c  */
 #line 4721 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 688:
-
-/* Line 1806 of yacc.c  */
 #line 4722 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 689:
-
-/* Line 1806 of yacc.c  */
 #line 4726 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (Node *) (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 690:
-
-/* Line 1806 of yacc.c  */
 #line 4730 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL);
-				}
+				;}
     break;
 
   case 691:
-
-/* Line 1806 of yacc.c  */
 #line 4736 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].typnam); }
+    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 692:
-
-/* Line 1806 of yacc.c  */
 #line 4737 "gram.y"
-    { (yyval.node) = (Node *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); }
+    { (yyval.node) = (Node *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
     break;
 
   case 693:
-
-/* Line 1806 of yacc.c  */
 #line 4738 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].list); }
+    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].list); ;}
     break;
 
   case 694:
-
-/* Line 1806 of yacc.c  */
 #line 4739 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].value); }
+    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].value); ;}
     break;
 
   case 695:
-
-/* Line 1806 of yacc.c  */
 #line 4740 "gram.y"
-    { (yyval.node) = (Node *)makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *)makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 696:
-
-/* Line 1806 of yacc.c  */
 #line 4743 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 697:
-
-/* Line 1806 of yacc.c  */
 #line 4744 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 698:
-
-/* Line 1806 of yacc.c  */
 #line 4747 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 699:
-
-/* Line 1806 of yacc.c  */
 #line 4750 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 700:
-
-/* Line 1806 of yacc.c  */
 #line 4751 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 701:
-
-/* Line 1806 of yacc.c  */
 #line 4760 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (Node *)(yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 702:
-
-/* Line 1806 of yacc.c  */
 #line 4766 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 703:
-
-/* Line 1806 of yacc.c  */
 #line 4767 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 704:
-
-/* Line 1806 of yacc.c  */
 #line 4771 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 705:
-
-/* Line 1806 of yacc.c  */
 #line 4773 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 706:
-
-/* Line 1806 of yacc.c  */
 #line 4784 "gram.y"
     {
 				AlterEnumStmt *n = makeNode(AlterEnumStmt);
@@ -26802,12 +25989,10 @@
 				n->newValIsAfter = true;
 				n->skipIfExists = (yyvsp[(6) - (7)].boolean);
 				(yyval.node) = (Node *) n;
-			}
+			;}
     break;
 
   case 707:
-
-/* Line 1806 of yacc.c  */
 #line 4794 "gram.y"
     {
 				AlterEnumStmt *n = makeNode(AlterEnumStmt);
@@ -26817,12 +26002,10 @@
 				n->newValIsAfter = false;
 				n->skipIfExists = (yyvsp[(6) - (9)].boolean);
 				(yyval.node) = (Node *) n;
-			}
+			;}
     break;
 
   case 708:
-
-/* Line 1806 of yacc.c  */
 #line 4804 "gram.y"
     {
 				AlterEnumStmt *n = makeNode(AlterEnumStmt);
@@ -26832,26 +26015,20 @@
 				n->newValIsAfter = true;
 				n->skipIfExists = (yyvsp[(6) - (9)].boolean);
 				(yyval.node) = (Node *) n;
-			}
+			;}
     break;
 
   case 709:
-
-/* Line 1806 of yacc.c  */
 #line 4815 "gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 710:
-
-/* Line 1806 of yacc.c  */
 #line 4816 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 711:
-
-/* Line 1806 of yacc.c  */
 #line 4834 "gram.y"
     {
 					CreateOpClassStmt *n = makeNode(CreateOpClassStmt);
@@ -26862,26 +26039,20 @@
 					n->opfamilyname = (yyvsp[(11) - (13)].list);
 					n->items = (yyvsp[(13) - (13)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 712:
-
-/* Line 1806 of yacc.c  */
 #line 4847 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 713:
-
-/* Line 1806 of yacc.c  */
 #line 4848 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 714:
-
-/* Line 1806 of yacc.c  */
 #line 4853 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26891,12 +26062,10 @@
 					n->number = (yyvsp[(2) - (5)].ival);
 					n->order_family = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 715:
-
-/* Line 1806 of yacc.c  */
 #line 4864 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26906,12 +26075,10 @@
 					n->number = (yyvsp[(2) - (6)].ival);
 					n->order_family = (yyvsp[(5) - (6)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 716:
-
-/* Line 1806 of yacc.c  */
 #line 4874 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26920,12 +26087,10 @@
 					n->args = extractArgTypes((yyvsp[(4) - (4)].list));
 					n->number = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 717:
-
-/* Line 1806 of yacc.c  */
 #line 4883 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26935,73 +26100,55 @@
 					n->number = (yyvsp[(2) - (7)].ival);
 					n->class_args = (yyvsp[(4) - (7)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 718:
-
-/* Line 1806 of yacc.c  */
 #line 4893 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
 					n->itemtype = OPCLASS_ITEM_STORAGETYPE;
 					n->storedtype = (yyvsp[(2) - (2)].typnam);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 719:
-
-/* Line 1806 of yacc.c  */
 #line 4901 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 720:
-
-/* Line 1806 of yacc.c  */
 #line 4902 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 721:
-
-/* Line 1806 of yacc.c  */
 #line 4905 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 722:
-
-/* Line 1806 of yacc.c  */
 #line 4906 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 723:
-
-/* Line 1806 of yacc.c  */
 #line 4909 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 724:
-
-/* Line 1806 of yacc.c  */
 #line 4910 "gram.y"
-    { (yyval.list) = (yyvsp[(4) - (4)].list); }
+    { (yyval.list) = (yyvsp[(4) - (4)].list); ;}
     break;
 
   case 725:
-
-/* Line 1806 of yacc.c  */
 #line 4911 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 726:
-
-/* Line 1806 of yacc.c  */
 #line 4915 "gram.y"
     {
 					/*
@@ -27015,31 +26162,25 @@
 							 errhint("Update your data type."),
 							 parser_errposition((yylsp[(1) - (1)]))));
 					(yyval.boolean) = TRUE;
-				}
+				;}
     break;
 
   case 727:
-
-/* Line 1806 of yacc.c  */
 #line 4928 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 728:
-
-/* Line 1806 of yacc.c  */
 #line 4934 "gram.y"
     {
 					CreateOpFamilyStmt *n = makeNode(CreateOpFamilyStmt);
 					n->opfamilyname = (yyvsp[(4) - (6)].list);
 					n->amname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 729:
-
-/* Line 1806 of yacc.c  */
 #line 4944 "gram.y"
     {
 					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
@@ -27048,12 +26189,10 @@
 					n->isDrop = false;
 					n->items = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 730:
-
-/* Line 1806 of yacc.c  */
 #line 4953 "gram.y"
     {
 					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
@@ -27062,26 +26201,20 @@
 					n->isDrop = true;
 					n->items = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 731:
-
-/* Line 1806 of yacc.c  */
 #line 4964 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 732:
-
-/* Line 1806 of yacc.c  */
 #line 4965 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 733:
-
-/* Line 1806 of yacc.c  */
 #line 4970 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -27089,12 +26222,10 @@
 					n->number = (yyvsp[(2) - (5)].ival);
 					n->args = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 734:
-
-/* Line 1806 of yacc.c  */
 #line 4978 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -27102,12 +26233,10 @@
 					n->number = (yyvsp[(2) - (5)].ival);
 					n->args = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 735:
-
-/* Line 1806 of yacc.c  */
 #line 4990 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -27118,12 +26247,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 736:
-
-/* Line 1806 of yacc.c  */
 #line 5001 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -27134,12 +26261,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 737:
-
-/* Line 1806 of yacc.c  */
 #line 5015 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -27150,12 +26275,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 738:
-
-/* Line 1806 of yacc.c  */
 #line 5026 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -27166,36 +26289,30 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 739:
-
-/* Line 1806 of yacc.c  */
 #line 5049 "gram.y"
     {
 					DropOwnedStmt *n = makeNode(DropOwnedStmt);
 					n->roles = (yyvsp[(4) - (5)].list);
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 740:
-
-/* Line 1806 of yacc.c  */
 #line 5059 "gram.y"
     {
 					ReassignOwnedStmt *n = makeNode(ReassignOwnedStmt);
 					n->roles = (yyvsp[(4) - (6)].list);
 					n->newrole = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 741:
-
-/* Line 1806 of yacc.c  */
 #line 5077 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -27206,12 +26323,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 742:
-
-/* Line 1806 of yacc.c  */
 #line 5088 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -27222,12 +26337,10 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 743:
-
-/* Line 1806 of yacc.c  */
 #line 5099 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -27238,12 +26351,10 @@
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					n->concurrent = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 744:
-
-/* Line 1806 of yacc.c  */
 #line 5110 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -27254,173 +26365,125 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->concurrent = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 745:
-
-/* Line 1806 of yacc.c  */
 #line 5123 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 746:
-
-/* Line 1806 of yacc.c  */
 #line 5124 "gram.y"
-    { (yyval.objtype) = OBJECT_SEQUENCE; }
+    { (yyval.objtype) = OBJECT_SEQUENCE; ;}
     break;
 
   case 747:
-
-/* Line 1806 of yacc.c  */
 #line 5125 "gram.y"
-    { (yyval.objtype) = OBJECT_VIEW; }
+    { (yyval.objtype) = OBJECT_VIEW; ;}
     break;
 
   case 748:
-
-/* Line 1806 of yacc.c  */
 #line 5126 "gram.y"
-    { (yyval.objtype) = OBJECT_MATVIEW; }
+    { (yyval.objtype) = OBJECT_MATVIEW; ;}
     break;
 
   case 749:
-
-/* Line 1806 of yacc.c  */
 #line 5127 "gram.y"
-    { (yyval.objtype) = OBJECT_INDEX; }
+    { (yyval.objtype) = OBJECT_INDEX; ;}
     break;
 
   case 750:
-
-/* Line 1806 of yacc.c  */
 #line 5128 "gram.y"
-    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
+    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; ;}
     break;
 
   case 751:
-
-/* Line 1806 of yacc.c  */
 #line 5129 "gram.y"
-    { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
+    { (yyval.objtype) = OBJECT_EVENT_TRIGGER; ;}
     break;
 
   case 752:
-
-/* Line 1806 of yacc.c  */
 #line 5130 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 753:
-
-/* Line 1806 of yacc.c  */
 #line 5131 "gram.y"
-    { (yyval.objtype) = OBJECT_DOMAIN; }
+    { (yyval.objtype) = OBJECT_DOMAIN; ;}
     break;
 
   case 754:
-
-/* Line 1806 of yacc.c  */
 #line 5132 "gram.y"
-    { (yyval.objtype) = OBJECT_COLLATION; }
+    { (yyval.objtype) = OBJECT_COLLATION; ;}
     break;
 
   case 755:
-
-/* Line 1806 of yacc.c  */
 #line 5133 "gram.y"
-    { (yyval.objtype) = OBJECT_CONVERSION; }
+    { (yyval.objtype) = OBJECT_CONVERSION; ;}
     break;
 
   case 756:
-
-/* Line 1806 of yacc.c  */
 #line 5134 "gram.y"
-    { (yyval.objtype) = OBJECT_SCHEMA; }
+    { (yyval.objtype) = OBJECT_SCHEMA; ;}
     break;
 
   case 757:
-
-/* Line 1806 of yacc.c  */
 #line 5135 "gram.y"
-    { (yyval.objtype) = OBJECT_EXTENSION; }
+    { (yyval.objtype) = OBJECT_EXTENSION; ;}
     break;
 
   case 758:
-
-/* Line 1806 of yacc.c  */
 #line 5136 "gram.y"
-    { (yyval.objtype) = OBJECT_TSPARSER; }
+    { (yyval.objtype) = OBJECT_TSPARSER; ;}
     break;
 
   case 759:
-
-/* Line 1806 of yacc.c  */
 #line 5137 "gram.y"
-    { (yyval.objtype) = OBJECT_TSDICTIONARY; }
+    { (yyval.objtype) = OBJECT_TSDICTIONARY; ;}
     break;
 
   case 760:
-
-/* Line 1806 of yacc.c  */
 #line 5138 "gram.y"
-    { (yyval.objtype) = OBJECT_TSTEMPLATE; }
+    { (yyval.objtype) = OBJECT_TSTEMPLATE; ;}
     break;
 
   case 761:
-
-/* Line 1806 of yacc.c  */
 #line 5139 "gram.y"
-    { (yyval.objtype) = OBJECT_TSCONFIGURATION; }
+    { (yyval.objtype) = OBJECT_TSCONFIGURATION; ;}
     break;
 
   case 762:
-
-/* Line 1806 of yacc.c  */
 #line 5143 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
     break;
 
   case 763:
-
-/* Line 1806 of yacc.c  */
 #line 5144 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 764:
-
-/* Line 1806 of yacc.c  */
 #line 5147 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 765:
-
-/* Line 1806 of yacc.c  */
 #line 5148 "gram.y"
-    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); }
+    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 766:
-
-/* Line 1806 of yacc.c  */
 #line 5152 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
     break;
 
   case 767:
-
-/* Line 1806 of yacc.c  */
 #line 5154 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 768:
-
-/* Line 1806 of yacc.c  */
 #line 5167 "gram.y"
     {
 					TruncateStmt *n = makeNode(TruncateStmt);
@@ -27428,33 +26491,25 @@
 					n->restart_seqs = (yyvsp[(4) - (5)].boolean);
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 769:
-
-/* Line 1806 of yacc.c  */
 #line 5177 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 770:
-
-/* Line 1806 of yacc.c  */
 #line 5178 "gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 771:
-
-/* Line 1806 of yacc.c  */
 #line 5179 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 772:
-
-/* Line 1806 of yacc.c  */
 #line 5212 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27463,12 +26518,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 773:
-
-/* Line 1806 of yacc.c  */
 #line 5221 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27477,12 +26530,10 @@
 					n->objargs = (yyvsp[(5) - (7)].list);
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 774:
-
-/* Line 1806 of yacc.c  */
 #line 5230 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27491,12 +26542,10 @@
 					n->objargs = extractArgTypes((yyvsp[(5) - (7)].list));
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 775:
-
-/* Line 1806 of yacc.c  */
 #line 5239 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27505,12 +26554,10 @@
 					n->objargs = (yyvsp[(5) - (7)].list);
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 776:
-
-/* Line 1806 of yacc.c  */
 #line 5248 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27519,12 +26566,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 777:
-
-/* Line 1806 of yacc.c  */
 #line 5257 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27533,12 +26578,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 778:
-
-/* Line 1806 of yacc.c  */
 #line 5266 "gram.y"
     {
 					/* Obsolete syntax supported for awhile for compatibility */
@@ -27548,12 +26591,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 779:
-
-/* Line 1806 of yacc.c  */
 #line 5276 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27562,12 +26603,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 780:
-
-/* Line 1806 of yacc.c  */
 #line 5285 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27576,12 +26615,10 @@
 					n->objargs = list_make1(makeString((yyvsp[(7) - (9)].str)));
 					n->comment = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 781:
-
-/* Line 1806 of yacc.c  */
 #line 5294 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27590,12 +26627,10 @@
 					n->objargs = list_make1(makeString((yyvsp[(7) - (9)].str)));
 					n->comment = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 782:
-
-/* Line 1806 of yacc.c  */
 #line 5303 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27604,12 +26639,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 783:
-
-/* Line 1806 of yacc.c  */
 #line 5312 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27618,12 +26651,10 @@
 					n->objargs = list_make1((yyvsp[(7) - (10)].typnam));
 					n->comment = (yyvsp[(10) - (10)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 784:
-
-/* Line 1806 of yacc.c  */
 #line 5321 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -27632,187 +26663,135 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 785:
-
-/* Line 1806 of yacc.c  */
 #line 5332 "gram.y"
-    { (yyval.objtype) = OBJECT_COLUMN; }
+    { (yyval.objtype) = OBJECT_COLUMN; ;}
     break;
 
   case 786:
-
-/* Line 1806 of yacc.c  */
 #line 5333 "gram.y"
-    { (yyval.objtype) = OBJECT_DATABASE; }
+    { (yyval.objtype) = OBJECT_DATABASE; ;}
     break;
 
   case 787:
-
-/* Line 1806 of yacc.c  */
 #line 5334 "gram.y"
-    { (yyval.objtype) = OBJECT_SCHEMA; }
+    { (yyval.objtype) = OBJECT_SCHEMA; ;}
     break;
 
   case 788:
-
-/* Line 1806 of yacc.c  */
 #line 5335 "gram.y"
-    { (yyval.objtype) = OBJECT_INDEX; }
+    { (yyval.objtype) = OBJECT_INDEX; ;}
     break;
 
   case 789:
-
-/* Line 1806 of yacc.c  */
 #line 5336 "gram.y"
-    { (yyval.objtype) = OBJECT_SEQUENCE; }
+    { (yyval.objtype) = OBJECT_SEQUENCE; ;}
     break;
 
   case 790:
-
-/* Line 1806 of yacc.c  */
 #line 5337 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 791:
-
-/* Line 1806 of yacc.c  */
 #line 5338 "gram.y"
-    { (yyval.objtype) = OBJECT_DOMAIN; }
+    { (yyval.objtype) = OBJECT_DOMAIN; ;}
     break;
 
   case 792:
-
-/* Line 1806 of yacc.c  */
 #line 5339 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 793:
-
-/* Line 1806 of yacc.c  */
 #line 5340 "gram.y"
-    { (yyval.objtype) = OBJECT_VIEW; }
+    { (yyval.objtype) = OBJECT_VIEW; ;}
     break;
 
   case 794:
-
-/* Line 1806 of yacc.c  */
 #line 5341 "gram.y"
-    { (yyval.objtype) = OBJECT_MATVIEW; }
+    { (yyval.objtype) = OBJECT_MATVIEW; ;}
     break;
 
   case 795:
-
-/* Line 1806 of yacc.c  */
 #line 5342 "gram.y"
-    { (yyval.objtype) = OBJECT_COLLATION; }
+    { (yyval.objtype) = OBJECT_COLLATION; ;}
     break;
 
   case 796:
-
-/* Line 1806 of yacc.c  */
 #line 5343 "gram.y"
-    { (yyval.objtype) = OBJECT_CONVERSION; }
+    { (yyval.objtype) = OBJECT_CONVERSION; ;}
     break;
 
   case 797:
-
-/* Line 1806 of yacc.c  */
 #line 5344 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLESPACE; }
+    { (yyval.objtype) = OBJECT_TABLESPACE; ;}
     break;
 
   case 798:
-
-/* Line 1806 of yacc.c  */
 #line 5345 "gram.y"
-    { (yyval.objtype) = OBJECT_EXTENSION; }
+    { (yyval.objtype) = OBJECT_EXTENSION; ;}
     break;
 
   case 799:
-
-/* Line 1806 of yacc.c  */
 #line 5346 "gram.y"
-    { (yyval.objtype) = OBJECT_ROLE; }
+    { (yyval.objtype) = OBJECT_ROLE; ;}
     break;
 
   case 800:
-
-/* Line 1806 of yacc.c  */
 #line 5347 "gram.y"
-    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
+    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; ;}
     break;
 
   case 801:
-
-/* Line 1806 of yacc.c  */
 #line 5348 "gram.y"
-    { (yyval.objtype) = OBJECT_FOREIGN_SERVER; }
+    { (yyval.objtype) = OBJECT_FOREIGN_SERVER; ;}
     break;
 
   case 802:
-
-/* Line 1806 of yacc.c  */
 #line 5349 "gram.y"
-    { (yyval.objtype) = OBJECT_FDW; }
+    { (yyval.objtype) = OBJECT_FDW; ;}
     break;
 
   case 803:
-
-/* Line 1806 of yacc.c  */
 #line 5350 "gram.y"
-    { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
+    { (yyval.objtype) = OBJECT_EVENT_TRIGGER; ;}
     break;
 
   case 804:
-
-/* Line 1806 of yacc.c  */
 #line 5351 "gram.y"
-    { (yyval.objtype) = OBJECT_TSCONFIGURATION; }
+    { (yyval.objtype) = OBJECT_TSCONFIGURATION; ;}
     break;
 
   case 805:
-
-/* Line 1806 of yacc.c  */
 #line 5352 "gram.y"
-    { (yyval.objtype) = OBJECT_TSDICTIONARY; }
+    { (yyval.objtype) = OBJECT_TSDICTIONARY; ;}
     break;
 
   case 806:
-
-/* Line 1806 of yacc.c  */
 #line 5353 "gram.y"
-    { (yyval.objtype) = OBJECT_TSPARSER; }
+    { (yyval.objtype) = OBJECT_TSPARSER; ;}
     break;
 
   case 807:
-
-/* Line 1806 of yacc.c  */
 #line 5354 "gram.y"
-    { (yyval.objtype) = OBJECT_TSTEMPLATE; }
+    { (yyval.objtype) = OBJECT_TSTEMPLATE; ;}
     break;
 
   case 808:
-
-/* Line 1806 of yacc.c  */
 #line 5358 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 809:
-
-/* Line 1806 of yacc.c  */
 #line 5359 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 810:
-
-/* Line 1806 of yacc.c  */
 #line 5375 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27822,12 +26801,10 @@
 					n->objargs = NIL;
 					n->label = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 811:
-
-/* Line 1806 of yacc.c  */
 #line 5386 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27837,12 +26814,10 @@
 					n->objargs = (yyvsp[(7) - (9)].list);
 					n->label = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 812:
-
-/* Line 1806 of yacc.c  */
 #line 5397 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27852,12 +26827,10 @@
 					n->objargs = extractArgTypes((yyvsp[(7) - (9)].list));
 					n->label = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 813:
-
-/* Line 1806 of yacc.c  */
 #line 5408 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27867,12 +26840,10 @@
 					n->objargs = NIL;
 					n->label = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 814:
-
-/* Line 1806 of yacc.c  */
 #line 5419 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27882,153 +26853,113 @@
 					n->objargs = NIL;
 					n->label = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 815:
-
-/* Line 1806 of yacc.c  */
 #line 5430 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 816:
-
-/* Line 1806 of yacc.c  */
 #line 5431 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 817:
-
-/* Line 1806 of yacc.c  */
 #line 5435 "gram.y"
-    { (yyval.objtype) = OBJECT_COLUMN; }
+    { (yyval.objtype) = OBJECT_COLUMN; ;}
     break;
 
   case 818:
-
-/* Line 1806 of yacc.c  */
 #line 5436 "gram.y"
-    { (yyval.objtype) = OBJECT_DATABASE; }
+    { (yyval.objtype) = OBJECT_DATABASE; ;}
     break;
 
   case 819:
-
-/* Line 1806 of yacc.c  */
 #line 5437 "gram.y"
-    { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
+    { (yyval.objtype) = OBJECT_EVENT_TRIGGER; ;}
     break;
 
   case 820:
-
-/* Line 1806 of yacc.c  */
 #line 5438 "gram.y"
-    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
+    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; ;}
     break;
 
   case 821:
-
-/* Line 1806 of yacc.c  */
 #line 5439 "gram.y"
-    { (yyval.objtype) = OBJECT_SCHEMA; }
+    { (yyval.objtype) = OBJECT_SCHEMA; ;}
     break;
 
   case 822:
-
-/* Line 1806 of yacc.c  */
 #line 5440 "gram.y"
-    { (yyval.objtype) = OBJECT_SEQUENCE; }
+    { (yyval.objtype) = OBJECT_SEQUENCE; ;}
     break;
 
   case 823:
-
-/* Line 1806 of yacc.c  */
 #line 5441 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 824:
-
-/* Line 1806 of yacc.c  */
 #line 5442 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 825:
-
-/* Line 1806 of yacc.c  */
 #line 5443 "gram.y"
-    { (yyval.objtype) = OBJECT_ROLE; }
+    { (yyval.objtype) = OBJECT_ROLE; ;}
     break;
 
   case 826:
-
-/* Line 1806 of yacc.c  */
 #line 5444 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLESPACE; }
+    { (yyval.objtype) = OBJECT_TABLESPACE; ;}
     break;
 
   case 827:
-
-/* Line 1806 of yacc.c  */
 #line 5445 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 828:
-
-/* Line 1806 of yacc.c  */
 #line 5446 "gram.y"
-    { (yyval.objtype) = OBJECT_VIEW; }
+    { (yyval.objtype) = OBJECT_VIEW; ;}
     break;
 
   case 829:
-
-/* Line 1806 of yacc.c  */
 #line 5447 "gram.y"
-    { (yyval.objtype) = OBJECT_MATVIEW; }
+    { (yyval.objtype) = OBJECT_MATVIEW; ;}
     break;
 
   case 830:
-
-/* Line 1806 of yacc.c  */
 #line 5450 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 831:
-
-/* Line 1806 of yacc.c  */
 #line 5451 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 832:
-
-/* Line 1806 of yacc.c  */
 #line 5462 "gram.y"
     {
 					FetchStmt *n = (FetchStmt *) (yyvsp[(2) - (2)].node);
 					n->ismove = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 833:
-
-/* Line 1806 of yacc.c  */
 #line 5468 "gram.y"
     {
 					FetchStmt *n = (FetchStmt *) (yyvsp[(2) - (2)].node);
 					n->ismove = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 834:
-
-/* Line 1806 of yacc.c  */
 #line 5476 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28036,12 +26967,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 835:
-
-/* Line 1806 of yacc.c  */
 #line 5484 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28049,12 +26978,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 836:
-
-/* Line 1806 of yacc.c  */
 #line 5492 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28062,12 +26989,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 837:
-
-/* Line 1806 of yacc.c  */
 #line 5500 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28075,12 +27000,10 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 838:
-
-/* Line 1806 of yacc.c  */
 #line 5508 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28088,12 +27011,10 @@
 					n->direction = FETCH_ABSOLUTE;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 839:
-
-/* Line 1806 of yacc.c  */
 #line 5516 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28101,12 +27022,10 @@
 					n->direction = FETCH_ABSOLUTE;
 					n->howMany = -1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 840:
-
-/* Line 1806 of yacc.c  */
 #line 5524 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28114,12 +27033,10 @@
 					n->direction = FETCH_ABSOLUTE;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 841:
-
-/* Line 1806 of yacc.c  */
 #line 5532 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28127,12 +27044,10 @@
 					n->direction = FETCH_RELATIVE;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 842:
-
-/* Line 1806 of yacc.c  */
 #line 5540 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28140,12 +27055,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = (yyvsp[(1) - (3)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 843:
-
-/* Line 1806 of yacc.c  */
 #line 5548 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28153,12 +27066,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 844:
-
-/* Line 1806 of yacc.c  */
 #line 5556 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28166,12 +27077,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 845:
-
-/* Line 1806 of yacc.c  */
 #line 5564 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28179,12 +27088,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 846:
-
-/* Line 1806 of yacc.c  */
 #line 5572 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28192,12 +27099,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 847:
-
-/* Line 1806 of yacc.c  */
 #line 5580 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28205,12 +27110,10 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 848:
-
-/* Line 1806 of yacc.c  */
 #line 5588 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28218,12 +27121,10 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 849:
-
-/* Line 1806 of yacc.c  */
 #line 5596 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -28231,40 +27132,30 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 850:
-
-/* Line 1806 of yacc.c  */
 #line 5605 "gram.y"
-    {}
+    {;}
     break;
 
   case 851:
-
-/* Line 1806 of yacc.c  */
 #line 5606 "gram.y"
-    {}
+    {;}
     break;
 
   case 852:
-
-/* Line 1806 of yacc.c  */
 #line 5609 "gram.y"
-    {}
+    {;}
     break;
 
   case 853:
-
-/* Line 1806 of yacc.c  */
 #line 5610 "gram.y"
-    {}
+    {;}
     break;
 
   case 854:
-
-/* Line 1806 of yacc.c  */
 #line 5622 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -28276,12 +27167,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->grant_option = (yyvsp[(7) - (7)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 855:
-
-/* Line 1806 of yacc.c  */
 #line 5638 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -28294,12 +27183,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 856:
-
-/* Line 1806 of yacc.c  */
 #line 5652 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -28312,119 +27199,95 @@
 					n->grantees = (yyvsp[(9) - (10)].list);
 					n->behavior = (yyvsp[(10) - (10)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 857:
-
-/* Line 1806 of yacc.c  */
 #line 5677 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 858:
-
-/* Line 1806 of yacc.c  */
 #line 5679 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 859:
-
-/* Line 1806 of yacc.c  */
 #line 5681 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 860:
-
-/* Line 1806 of yacc.c  */
 #line 5683 "gram.y"
     {
 					AccessPriv *n = makeNode(AccessPriv);
 					n->priv_name = NULL;
 					n->cols = (yyvsp[(3) - (4)].list);
 					(yyval.list) = list_make1(n);
-				}
+				;}
     break;
 
   case 861:
-
-/* Line 1806 of yacc.c  */
 #line 5690 "gram.y"
     {
 					AccessPriv *n = makeNode(AccessPriv);
 					n->priv_name = NULL;
 					n->cols = (yyvsp[(4) - (5)].list);
 					(yyval.list) = list_make1(n);
-				}
+				;}
     break;
 
   case 862:
-
-/* Line 1806 of yacc.c  */
 #line 5698 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].accesspriv)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].accesspriv)); ;}
     break;
 
   case 863:
-
-/* Line 1806 of yacc.c  */
 #line 5699 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].accesspriv)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].accesspriv)); ;}
     break;
 
   case 864:
-
-/* Line 1806 of yacc.c  */
 #line 5703 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = pstrdup((yyvsp[(1) - (2)].keyword));
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 865:
-
-/* Line 1806 of yacc.c  */
 #line 5710 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = pstrdup((yyvsp[(1) - (2)].keyword));
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 866:
-
-/* Line 1806 of yacc.c  */
 #line 5717 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = pstrdup((yyvsp[(1) - (2)].keyword));
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 867:
-
-/* Line 1806 of yacc.c  */
 #line 5724 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = (yyvsp[(1) - (2)].str);
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 868:
-
-/* Line 1806 of yacc.c  */
 #line 5738 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28432,12 +27295,10 @@
 					n->objtype = ACL_OBJECT_RELATION;
 					n->objs = (yyvsp[(1) - (1)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 869:
-
-/* Line 1806 of yacc.c  */
 #line 5746 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28445,12 +27306,10 @@
 					n->objtype = ACL_OBJECT_RELATION;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 870:
-
-/* Line 1806 of yacc.c  */
 #line 5754 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28458,12 +27317,10 @@
 					n->objtype = ACL_OBJECT_SEQUENCE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 871:
-
-/* Line 1806 of yacc.c  */
 #line 5762 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28471,12 +27328,10 @@
 					n->objtype = ACL_OBJECT_FDW;
 					n->objs = (yyvsp[(4) - (4)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 872:
-
-/* Line 1806 of yacc.c  */
 #line 5770 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28484,12 +27339,10 @@
 					n->objtype = ACL_OBJECT_FOREIGN_SERVER;
 					n->objs = (yyvsp[(3) - (3)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 873:
-
-/* Line 1806 of yacc.c  */
 #line 5778 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28497,12 +27350,10 @@
 					n->objtype = ACL_OBJECT_FUNCTION;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 874:
-
-/* Line 1806 of yacc.c  */
 #line 5786 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28510,12 +27361,10 @@
 					n->objtype = ACL_OBJECT_DATABASE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 875:
-
-/* Line 1806 of yacc.c  */
 #line 5794 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28523,12 +27372,10 @@
 					n->objtype = ACL_OBJECT_DOMAIN;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 876:
-
-/* Line 1806 of yacc.c  */
 #line 5802 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28536,12 +27383,10 @@
 					n->objtype = ACL_OBJECT_LANGUAGE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 877:
-
-/* Line 1806 of yacc.c  */
 #line 5810 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28549,12 +27394,10 @@
 					n->objtype = ACL_OBJECT_LARGEOBJECT;
 					n->objs = (yyvsp[(3) - (3)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 878:
-
-/* Line 1806 of yacc.c  */
 #line 5818 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28562,12 +27405,10 @@
 					n->objtype = ACL_OBJECT_NAMESPACE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 879:
-
-/* Line 1806 of yacc.c  */
 #line 5826 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28575,12 +27416,10 @@
 					n->objtype = ACL_OBJECT_TABLESPACE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 880:
-
-/* Line 1806 of yacc.c  */
 #line 5834 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28588,12 +27427,10 @@
 					n->objtype = ACL_OBJECT_TYPE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 881:
-
-/* Line 1806 of yacc.c  */
 #line 5842 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28601,12 +27438,10 @@
 					n->objtype = ACL_OBJECT_RELATION;
 					n->objs = (yyvsp[(5) - (5)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 882:
-
-/* Line 1806 of yacc.c  */
 #line 5850 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28614,12 +27449,10 @@
 					n->objtype = ACL_OBJECT_SEQUENCE;
 					n->objs = (yyvsp[(5) - (5)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 883:
-
-/* Line 1806 of yacc.c  */
 #line 5858 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -28627,26 +27460,20 @@
 					n->objtype = ACL_OBJECT_FUNCTION;
 					n->objs = (yyvsp[(5) - (5)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 884:
-
-/* Line 1806 of yacc.c  */
 #line 5869 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 885:
-
-/* Line 1806 of yacc.c  */
 #line 5870 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 886:
-
-/* Line 1806 of yacc.c  */
 #line 5874 "gram.y"
     {
 					PrivGrantee *n = makeNode(PrivGrantee);
@@ -28656,12 +27483,10 @@
 					else
 						n->rolname = (yyvsp[(1) - (1)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 887:
-
-/* Line 1806 of yacc.c  */
 #line 5884 "gram.y"
     {
 					PrivGrantee *n = makeNode(PrivGrantee);
@@ -28671,52 +27496,40 @@
 					else
 						n->rolname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 888:
-
-/* Line 1806 of yacc.c  */
 #line 5897 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 889:
-
-/* Line 1806 of yacc.c  */
 #line 5898 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 890:
-
-/* Line 1806 of yacc.c  */
 #line 5902 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].funwithargs)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].funwithargs)); ;}
     break;
 
   case 891:
-
-/* Line 1806 of yacc.c  */
 #line 5904 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].funwithargs)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].funwithargs)); ;}
     break;
 
   case 892:
-
-/* Line 1806 of yacc.c  */
 #line 5909 "gram.y"
     {
 					FuncWithArgs *n = makeNode(FuncWithArgs);
 					n->funcname = (yyvsp[(1) - (2)].list);
 					n->funcargs = extractArgTypes((yyvsp[(2) - (2)].list));
 					(yyval.funwithargs) = n;
-				}
+				;}
     break;
 
   case 893:
-
-/* Line 1806 of yacc.c  */
 #line 5925 "gram.y"
     {
 					GrantRoleStmt *n = makeNode(GrantRoleStmt);
@@ -28726,12 +27539,10 @@
 					n->admin_opt = (yyvsp[(5) - (6)].boolean);
 					n->grantor = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 894:
-
-/* Line 1806 of yacc.c  */
 #line 5938 "gram.y"
     {
 					GrantRoleStmt *n = makeNode(GrantRoleStmt);
@@ -28741,12 +27552,10 @@
 					n->grantee_roles = (yyvsp[(4) - (6)].list);
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 895:
-
-/* Line 1806 of yacc.c  */
 #line 5948 "gram.y"
     {
 					GrantRoleStmt *n = makeNode(GrantRoleStmt);
@@ -28756,93 +27565,71 @@
 					n->grantee_roles = (yyvsp[(7) - (9)].list);
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 896:
-
-/* Line 1806 of yacc.c  */
 #line 5959 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 897:
-
-/* Line 1806 of yacc.c  */
 #line 5960 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 898:
-
-/* Line 1806 of yacc.c  */
 #line 5963 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 899:
-
-/* Line 1806 of yacc.c  */
 #line 5964 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 900:
-
-/* Line 1806 of yacc.c  */
 #line 5975 "gram.y"
     {
 					AlterDefaultPrivilegesStmt *n = makeNode(AlterDefaultPrivilegesStmt);
 					n->options = (yyvsp[(4) - (5)].list);
 					n->action = (GrantStmt *) (yyvsp[(5) - (5)].node);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 901:
-
-/* Line 1806 of yacc.c  */
 #line 5984 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 902:
-
-/* Line 1806 of yacc.c  */
 #line 5985 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 903:
-
-/* Line 1806 of yacc.c  */
 #line 5990 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("schemas", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 904:
-
-/* Line 1806 of yacc.c  */
 #line 5994 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 905:
-
-/* Line 1806 of yacc.c  */
 #line 5998 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 906:
-
-/* Line 1806 of yacc.c  */
 #line 6010 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -28854,12 +27641,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->grant_option = (yyvsp[(7) - (7)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 907:
-
-/* Line 1806 of yacc.c  */
 #line 6023 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -28872,12 +27657,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 908:
-
-/* Line 1806 of yacc.c  */
 #line 6037 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -28890,40 +27673,30 @@
 					n->grantees = (yyvsp[(9) - (10)].list);
 					n->behavior = (yyvsp[(10) - (10)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 909:
-
-/* Line 1806 of yacc.c  */
 #line 6052 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_RELATION; }
+    { (yyval.ival) = ACL_OBJECT_RELATION; ;}
     break;
 
   case 910:
-
-/* Line 1806 of yacc.c  */
 #line 6053 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_FUNCTION; }
+    { (yyval.ival) = ACL_OBJECT_FUNCTION; ;}
     break;
 
   case 911:
-
-/* Line 1806 of yacc.c  */
 #line 6054 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_SEQUENCE; }
+    { (yyval.ival) = ACL_OBJECT_SEQUENCE; ;}
     break;
 
   case 912:
-
-/* Line 1806 of yacc.c  */
 #line 6055 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_TYPE; }
+    { (yyval.ival) = ACL_OBJECT_TYPE; ;}
     break;
 
   case 913:
-
-/* Line 1806 of yacc.c  */
 #line 6070 "gram.y"
     {
 					IndexStmt *n = makeNode(IndexStmt);
@@ -28945,82 +27718,60 @@
 					n->deferrable = false;
 					n->initdeferred = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 914:
-
-/* Line 1806 of yacc.c  */
 #line 6094 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 915:
-
-/* Line 1806 of yacc.c  */
 #line 6095 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 916:
-
-/* Line 1806 of yacc.c  */
 #line 6099 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 917:
-
-/* Line 1806 of yacc.c  */
 #line 6100 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 918:
-
-/* Line 1806 of yacc.c  */
 #line 6104 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 919:
-
-/* Line 1806 of yacc.c  */
 #line 6105 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 920:
-
-/* Line 1806 of yacc.c  */
 #line 6109 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 921:
-
-/* Line 1806 of yacc.c  */
 #line 6110 "gram.y"
-    { (yyval.str) = DEFAULT_INDEX_TYPE; }
+    { (yyval.str) = DEFAULT_INDEX_TYPE; ;}
     break;
 
   case 922:
-
-/* Line 1806 of yacc.c  */
 #line 6113 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
     break;
 
   case 923:
-
-/* Line 1806 of yacc.c  */
 #line 6114 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
     break;
 
   case 924:
-
-/* Line 1806 of yacc.c  */
 #line 6123 "gram.y"
     {
 					(yyval.ielem) = makeNode(IndexElem);
@@ -29031,12 +27782,10 @@
 					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
 					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].ival);
 					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].ival);
-				}
+				;}
     break;
 
   case 925:
-
-/* Line 1806 of yacc.c  */
 #line 6134 "gram.y"
     {
 					(yyval.ielem) = makeNode(IndexElem);
@@ -29047,12 +27796,10 @@
 					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
 					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].ival);
 					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].ival);
-				}
+				;}
     break;
 
   case 926:
-
-/* Line 1806 of yacc.c  */
 #line 6145 "gram.y"
     {
 					(yyval.ielem) = makeNode(IndexElem);
@@ -29063,89 +27810,65 @@
 					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
 					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].ival);
 					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].ival);
-				}
+				;}
     break;
 
   case 927:
-
-/* Line 1806 of yacc.c  */
 #line 6157 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 928:
-
-/* Line 1806 of yacc.c  */
 #line 6158 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 929:
-
-/* Line 1806 of yacc.c  */
 #line 6161 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 930:
-
-/* Line 1806 of yacc.c  */
 #line 6162 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 931:
-
-/* Line 1806 of yacc.c  */
 #line 6163 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 932:
-
-/* Line 1806 of yacc.c  */
 #line 6166 "gram.y"
-    { (yyval.ival) = SORTBY_ASC; }
+    { (yyval.ival) = SORTBY_ASC; ;}
     break;
 
   case 933:
-
-/* Line 1806 of yacc.c  */
 #line 6167 "gram.y"
-    { (yyval.ival) = SORTBY_DESC; }
+    { (yyval.ival) = SORTBY_DESC; ;}
     break;
 
   case 934:
-
-/* Line 1806 of yacc.c  */
 #line 6168 "gram.y"
-    { (yyval.ival) = SORTBY_DEFAULT; }
+    { (yyval.ival) = SORTBY_DEFAULT; ;}
     break;
 
   case 935:
-
-/* Line 1806 of yacc.c  */
 #line 6171 "gram.y"
-    { (yyval.ival) = SORTBY_NULLS_FIRST; }
+    { (yyval.ival) = SORTBY_NULLS_FIRST; ;}
     break;
 
   case 936:
-
-/* Line 1806 of yacc.c  */
 #line 6172 "gram.y"
-    { (yyval.ival) = SORTBY_NULLS_LAST; }
+    { (yyval.ival) = SORTBY_NULLS_LAST; ;}
     break;
 
   case 937:
-
-/* Line 1806 of yacc.c  */
 #line 6173 "gram.y"
-    { (yyval.ival) = SORTBY_NULLS_DEFAULT; }
+    { (yyval.ival) = SORTBY_NULLS_DEFAULT; ;}
     break;
 
   case 938:
-
-/* Line 1806 of yacc.c  */
 #line 6191 "gram.y"
     {
 					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
@@ -29156,12 +27879,10 @@
 					n->options = (yyvsp[(8) - (9)].list);
 					n->withClause = (yyvsp[(9) - (9)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 939:
-
-/* Line 1806 of yacc.c  */
 #line 6203 "gram.y"
     {
 					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
@@ -29173,12 +27894,10 @@
 					n->options = (yyvsp[(11) - (12)].list);
 					n->withClause = (yyvsp[(12) - (12)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 940:
-
-/* Line 1806 of yacc.c  */
 #line 6216 "gram.y"
     {
 					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
@@ -29189,82 +27908,60 @@
 					n->options = (yyvsp[(6) - (7)].list);
 					n->withClause = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 941:
-
-/* Line 1806 of yacc.c  */
 #line 6229 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 942:
-
-/* Line 1806 of yacc.c  */
 #line 6230 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 943:
-
-/* Line 1806 of yacc.c  */
 #line 6233 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 944:
-
-/* Line 1806 of yacc.c  */
 #line 6234 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 945:
-
-/* Line 1806 of yacc.c  */
 #line 6238 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); ;}
     break;
 
   case 946:
-
-/* Line 1806 of yacc.c  */
 #line 6239 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); ;}
     break;
 
   case 947:
-
-/* Line 1806 of yacc.c  */
 #line 6247 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 948:
-
-/* Line 1806 of yacc.c  */
 #line 6248 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 949:
-
-/* Line 1806 of yacc.c  */
 #line 6252 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); ;}
     break;
 
   case 950:
-
-/* Line 1806 of yacc.c  */
 #line 6254 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); ;}
     break;
 
   case 951:
-
-/* Line 1806 of yacc.c  */
 #line 6269 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -29273,12 +27970,10 @@
 					n->mode = (yyvsp[(1) - (3)].fun_param_mode);
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 952:
-
-/* Line 1806 of yacc.c  */
 #line 6278 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -29287,12 +27982,10 @@
 					n->mode = (yyvsp[(2) - (3)].fun_param_mode);
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 953:
-
-/* Line 1806 of yacc.c  */
 #line 6287 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -29301,12 +27994,10 @@
 					n->mode = FUNC_PARAM_IN;
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 954:
-
-/* Line 1806 of yacc.c  */
 #line 6296 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -29315,12 +28006,10 @@
 					n->mode = (yyvsp[(1) - (2)].fun_param_mode);
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 955:
-
-/* Line 1806 of yacc.c  */
 #line 6305 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -29329,47 +28018,35 @@
 					n->mode = FUNC_PARAM_IN;
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 956:
-
-/* Line 1806 of yacc.c  */
 #line 6316 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_IN; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_IN; ;}
     break;
 
   case 957:
-
-/* Line 1806 of yacc.c  */
 #line 6317 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_OUT; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_OUT; ;}
     break;
 
   case 958:
-
-/* Line 1806 of yacc.c  */
 #line 6318 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; ;}
     break;
 
   case 959:
-
-/* Line 1806 of yacc.c  */
 #line 6319 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; ;}
     break;
 
   case 960:
-
-/* Line 1806 of yacc.c  */
 #line 6320 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_VARIADIC; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_VARIADIC; ;}
     break;
 
   case 962:
-
-/* Line 1806 of yacc.c  */
 #line 6331 "gram.y"
     {
 					/* We can catch over-specified results here if we want to,
@@ -29377,287 +28054,223 @@
 					 * - thomas 2000-03-22
 					 */
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 963:
-
-/* Line 1806 of yacc.c  */
 #line 6345 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 964:
-
-/* Line 1806 of yacc.c  */
 #line 6347 "gram.y"
     {
 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
 					(yyval.typnam)->pct_type = true;
 					(yyval.typnam)->location = (yylsp[(1) - (4)]);
-				}
+				;}
     break;
 
   case 965:
-
-/* Line 1806 of yacc.c  */
 #line 6353 "gram.y"
     {
 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
 					(yyval.typnam)->pct_type = true;
 					(yyval.typnam)->setof = TRUE;
 					(yyval.typnam)->location = (yylsp[(2) - (5)]);
-				}
+				;}
     break;
 
   case 966:
-
-/* Line 1806 of yacc.c  */
 #line 6363 "gram.y"
     {
 					(yyval.fun_param) = (yyvsp[(1) - (1)].fun_param);
-				}
+				;}
     break;
 
   case 967:
-
-/* Line 1806 of yacc.c  */
 #line 6367 "gram.y"
     {
 					(yyval.fun_param) = (yyvsp[(1) - (3)].fun_param);
 					(yyval.fun_param)->defexpr = (yyvsp[(3) - (3)].node);
-				}
+				;}
     break;
 
   case 968:
-
-/* Line 1806 of yacc.c  */
 #line 6372 "gram.y"
     {
 					(yyval.fun_param) = (yyvsp[(1) - (3)].fun_param);
 					(yyval.fun_param)->defexpr = (yyvsp[(3) - (3)].node);
-				}
+				;}
     break;
 
   case 969:
-
-/* Line 1806 of yacc.c  */
 #line 6381 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 970:
-
-/* Line 1806 of yacc.c  */
 #line 6382 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 971:
-
-/* Line 1806 of yacc.c  */
 #line 6390 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 972:
-
-/* Line 1806 of yacc.c  */
 #line 6394 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 973:
-
-/* Line 1806 of yacc.c  */
 #line 6398 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 974:
-
-/* Line 1806 of yacc.c  */
 #line 6402 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("immutable"));
-				}
+				;}
     break;
 
   case 975:
-
-/* Line 1806 of yacc.c  */
 #line 6406 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("stable"));
-				}
+				;}
     break;
 
   case 976:
-
-/* Line 1806 of yacc.c  */
 #line 6410 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("volatile"));
-				}
+				;}
     break;
 
   case 977:
-
-/* Line 1806 of yacc.c  */
 #line 6414 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 978:
-
-/* Line 1806 of yacc.c  */
 #line 6418 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 979:
-
-/* Line 1806 of yacc.c  */
 #line 6422 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 980:
-
-/* Line 1806 of yacc.c  */
 #line 6426 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 981:
-
-/* Line 1806 of yacc.c  */
 #line 6430 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("leakproof", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 982:
-
-/* Line 1806 of yacc.c  */
 #line 6434 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("leakproof", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 983:
-
-/* Line 1806 of yacc.c  */
 #line 6438 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cost", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 984:
-
-/* Line 1806 of yacc.c  */
 #line 6442 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("rows", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 985:
-
-/* Line 1806 of yacc.c  */
 #line 6446 "gram.y"
     {
 					/* we abuse the normal content of a DefElem here */
 					(yyval.defelt) = makeDefElem("set", (Node *)(yyvsp[(1) - (1)].vsetstmt));
-				}
+				;}
     break;
 
   case 986:
-
-/* Line 1806 of yacc.c  */
 #line 6454 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("as", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 987:
-
-/* Line 1806 of yacc.c  */
 #line 6458 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 988:
-
-/* Line 1806 of yacc.c  */
 #line 6462 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("window", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 989:
-
-/* Line 1806 of yacc.c  */
 #line 6466 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
-				}
+				;}
     break;
 
   case 990:
-
-/* Line 1806 of yacc.c  */
 #line 6471 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 991:
-
-/* Line 1806 of yacc.c  */
 #line 6473 "gram.y"
     {
 					(yyval.list) = list_make2(makeString((yyvsp[(1) - (3)].str)), makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 992:
-
-/* Line 1806 of yacc.c  */
 #line 6479 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 993:
-
-/* Line 1806 of yacc.c  */
 #line 6480 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 994:
-
-/* Line 1806 of yacc.c  */
 #line 6484 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -29666,56 +28279,44 @@
 					n->mode = FUNC_PARAM_TABLE;
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 995:
-
-/* Line 1806 of yacc.c  */
 #line 6496 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param));
-				}
+				;}
     break;
 
   case 996:
-
-/* Line 1806 of yacc.c  */
 #line 6500 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param));
-				}
+				;}
     break;
 
   case 997:
-
-/* Line 1806 of yacc.c  */
 #line 6515 "gram.y"
     {
 					AlterFunctionStmt *n = makeNode(AlterFunctionStmt);
 					n->func = (yyvsp[(3) - (5)].funwithargs);
 					n->actions = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 998:
-
-/* Line 1806 of yacc.c  */
 #line 6525 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 999:
-
-/* Line 1806 of yacc.c  */
 #line 6526 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 1002:
-
-/* Line 1806 of yacc.c  */
 #line 6548 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29726,12 +28327,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1003:
-
-/* Line 1806 of yacc.c  */
 #line 6559 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29742,12 +28341,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1004:
-
-/* Line 1806 of yacc.c  */
 #line 6573 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29758,12 +28355,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1005:
-
-/* Line 1806 of yacc.c  */
 #line 6584 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29774,12 +28369,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1006:
-
-/* Line 1806 of yacc.c  */
 #line 6598 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29790,12 +28383,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1007:
-
-/* Line 1806 of yacc.c  */
 #line 6609 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29806,12 +28397,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1008:
-
-/* Line 1806 of yacc.c  */
 #line 6623 "gram.y"
     {
 				   ereport(ERROR,
@@ -29819,90 +28408,68 @@
 							errmsg("missing argument"),
 							errhint("Use NONE to denote the missing argument of a unary operator."),
 							parser_errposition((yylsp[(3) - (3)]))));
-				}
+				;}
     break;
 
   case 1009:
-
-/* Line 1806 of yacc.c  */
 #line 6631 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), (yyvsp[(4) - (5)].typnam)); }
+    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), (yyvsp[(4) - (5)].typnam)); ;}
     break;
 
   case 1010:
-
-/* Line 1806 of yacc.c  */
 #line 6633 "gram.y"
-    { (yyval.list) = list_make2(NULL, (yyvsp[(4) - (5)].typnam)); }
+    { (yyval.list) = list_make2(NULL, (yyvsp[(4) - (5)].typnam)); ;}
     break;
 
   case 1011:
-
-/* Line 1806 of yacc.c  */
 #line 6635 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), NULL); }
+    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), NULL); ;}
     break;
 
   case 1012:
-
-/* Line 1806 of yacc.c  */
 #line 6640 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1013:
-
-/* Line 1806 of yacc.c  */
 #line 6642 "gram.y"
-    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 1014:
-
-/* Line 1806 of yacc.c  */
 #line 6655 "gram.y"
     {
 					DoStmt *n = makeNode(DoStmt);
 					n->args = (yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1015:
-
-/* Line 1806 of yacc.c  */
 #line 6663 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 1016:
-
-/* Line 1806 of yacc.c  */
 #line 6664 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 1017:
-
-/* Line 1806 of yacc.c  */
 #line 6669 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("as", (Node *)makeString((yyvsp[(1) - (1)].str)));
-				}
+				;}
     break;
 
   case 1018:
-
-/* Line 1806 of yacc.c  */
 #line 6673 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 1019:
-
-/* Line 1806 of yacc.c  */
 #line 6686 "gram.y"
     {
 					CreateCastStmt *n = makeNode(CreateCastStmt);
@@ -29912,12 +28479,10 @@
 					n->context = (CoercionContext) (yyvsp[(11) - (11)].ival);
 					n->inout = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1020:
-
-/* Line 1806 of yacc.c  */
 #line 6697 "gram.y"
     {
 					CreateCastStmt *n = makeNode(CreateCastStmt);
@@ -29927,12 +28492,10 @@
 					n->context = (CoercionContext) (yyvsp[(10) - (10)].ival);
 					n->inout = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1021:
-
-/* Line 1806 of yacc.c  */
 #line 6708 "gram.y"
     {
 					CreateCastStmt *n = makeNode(CreateCastStmt);
@@ -29942,33 +28505,25 @@
 					n->context = (CoercionContext) (yyvsp[(10) - (10)].ival);
 					n->inout = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1022:
-
-/* Line 1806 of yacc.c  */
 #line 6719 "gram.y"
-    { (yyval.ival) = COERCION_IMPLICIT; }
+    { (yyval.ival) = COERCION_IMPLICIT; ;}
     break;
 
   case 1023:
-
-/* Line 1806 of yacc.c  */
 #line 6720 "gram.y"
-    { (yyval.ival) = COERCION_ASSIGNMENT; }
+    { (yyval.ival) = COERCION_ASSIGNMENT; ;}
     break;
 
   case 1024:
-
-/* Line 1806 of yacc.c  */
 #line 6721 "gram.y"
-    { (yyval.ival) = COERCION_EXPLICIT; }
+    { (yyval.ival) = COERCION_EXPLICIT; ;}
     break;
 
   case 1025:
-
-/* Line 1806 of yacc.c  */
 #line 6726 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29979,26 +28534,20 @@
 					n->missing_ok = (yyvsp[(3) - (9)].boolean);
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1026:
-
-/* Line 1806 of yacc.c  */
 #line 6738 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1027:
-
-/* Line 1806 of yacc.c  */
 #line 6739 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1028:
-
-/* Line 1806 of yacc.c  */
 #line 6754 "gram.y"
     {
 					ReindexStmt *n = makeNode(ReindexStmt);
@@ -30006,12 +28555,10 @@
 					n->relation = (yyvsp[(3) - (4)].range);
 					n->name = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1029:
-
-/* Line 1806 of yacc.c  */
 #line 6762 "gram.y"
     {
 					ReindexStmt *n = makeNode(ReindexStmt);
@@ -30021,12 +28568,10 @@
 					n->do_system = true;
 					n->do_user = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1030:
-
-/* Line 1806 of yacc.c  */
 #line 6772 "gram.y"
     {
 					ReindexStmt *n = makeNode(ReindexStmt);
@@ -30036,40 +28581,30 @@
 					n->do_system = true;
 					n->do_user = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1031:
-
-/* Line 1806 of yacc.c  */
 #line 6784 "gram.y"
-    { (yyval.objtype) = OBJECT_INDEX; }
+    { (yyval.objtype) = OBJECT_INDEX; ;}
     break;
 
   case 1032:
-
-/* Line 1806 of yacc.c  */
 #line 6785 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 1033:
-
-/* Line 1806 of yacc.c  */
 #line 6788 "gram.y"
-    {  (yyval.boolean) = TRUE; }
+    {  (yyval.boolean) = TRUE; ;}
     break;
 
   case 1034:
-
-/* Line 1806 of yacc.c  */
 #line 6789 "gram.y"
-    {  (yyval.boolean) = FALSE; }
+    {  (yyval.boolean) = FALSE; ;}
     break;
 
   case 1035:
-
-/* Line 1806 of yacc.c  */
 #line 6800 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30079,12 +28614,10 @@
 					n->newname = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1036:
-
-/* Line 1806 of yacc.c  */
 #line 6810 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30093,12 +28626,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1037:
-
-/* Line 1806 of yacc.c  */
 #line 6819 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30107,12 +28638,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1038:
-
-/* Line 1806 of yacc.c  */
 #line 6828 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30121,12 +28650,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1039:
-
-/* Line 1806 of yacc.c  */
 #line 6837 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30135,12 +28662,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1040:
-
-/* Line 1806 of yacc.c  */
 #line 6846 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30150,12 +28675,10 @@
 					n->subname = (yyvsp[(6) - (8)].str);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1041:
-
-/* Line 1806 of yacc.c  */
 #line 6856 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30164,12 +28687,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1042:
-
-/* Line 1806 of yacc.c  */
 #line 6865 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30179,12 +28700,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1043:
-
-/* Line 1806 of yacc.c  */
 #line 6875 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30193,12 +28712,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1044:
-
-/* Line 1806 of yacc.c  */
 #line 6884 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30207,12 +28724,10 @@
 					n->newname = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1045:
-
-/* Line 1806 of yacc.c  */
 #line 6893 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30222,12 +28737,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1046:
-
-/* Line 1806 of yacc.c  */
 #line 6903 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30237,12 +28750,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1047:
-
-/* Line 1806 of yacc.c  */
 #line 6913 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30251,12 +28762,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1048:
-
-/* Line 1806 of yacc.c  */
 #line 6922 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30265,12 +28774,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1049:
-
-/* Line 1806 of yacc.c  */
 #line 6931 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30280,12 +28787,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1050:
-
-/* Line 1806 of yacc.c  */
 #line 6941 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30295,12 +28800,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1051:
-
-/* Line 1806 of yacc.c  */
 #line 6951 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30310,12 +28813,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1052:
-
-/* Line 1806 of yacc.c  */
 #line 6961 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30325,12 +28826,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1053:
-
-/* Line 1806 of yacc.c  */
 #line 6971 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30340,12 +28839,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1054:
-
-/* Line 1806 of yacc.c  */
 #line 6981 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30355,12 +28852,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1055:
-
-/* Line 1806 of yacc.c  */
 #line 6991 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30370,12 +28865,10 @@
 					n->newname = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1056:
-
-/* Line 1806 of yacc.c  */
 #line 7001 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30385,12 +28878,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1057:
-
-/* Line 1806 of yacc.c  */
 #line 7011 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30400,12 +28891,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1058:
-
-/* Line 1806 of yacc.c  */
 #line 7021 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30415,12 +28904,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1059:
-
-/* Line 1806 of yacc.c  */
 #line 7031 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30430,12 +28917,10 @@
 					n->newname = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1060:
-
-/* Line 1806 of yacc.c  */
 #line 7041 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30445,12 +28930,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1061:
-
-/* Line 1806 of yacc.c  */
 #line 7051 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30461,12 +28944,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1062:
-
-/* Line 1806 of yacc.c  */
 #line 7062 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30477,12 +28958,10 @@
 					n->newname = (yyvsp[(10) - (10)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1063:
-
-/* Line 1806 of yacc.c  */
 #line 7073 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30493,12 +28972,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1064:
-
-/* Line 1806 of yacc.c  */
 #line 7084 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30509,12 +28986,10 @@
 					n->newname = (yyvsp[(11) - (11)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1065:
-
-/* Line 1806 of yacc.c  */
 #line 7095 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30524,12 +28999,10 @@
 					n->subname = (yyvsp[(6) - (8)].str);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1066:
-
-/* Line 1806 of yacc.c  */
 #line 7105 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30540,12 +29013,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1067:
-
-/* Line 1806 of yacc.c  */
 #line 7116 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30556,12 +29027,10 @@
 					n->newname = (yyvsp[(11) - (11)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1068:
-
-/* Line 1806 of yacc.c  */
 #line 7127 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30571,12 +29040,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1069:
-
-/* Line 1806 of yacc.c  */
 #line 7137 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30586,12 +29053,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1070:
-
-/* Line 1806 of yacc.c  */
 #line 7147 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30599,12 +29064,10 @@
 					n->object = list_make1(makeString((yyvsp[(4) - (7)].str)));
 					n->newname = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1071:
-
-/* Line 1806 of yacc.c  */
 #line 7155 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30613,12 +29076,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1072:
-
-/* Line 1806 of yacc.c  */
 #line 7164 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30627,12 +29088,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1073:
-
-/* Line 1806 of yacc.c  */
 #line 7173 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30641,12 +29100,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1074:
-
-/* Line 1806 of yacc.c  */
 #line 7182 "gram.y"
     {
 					AlterTableSpaceOptionsStmt *n =
@@ -30655,12 +29112,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->isReset = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1075:
-
-/* Line 1806 of yacc.c  */
 #line 7191 "gram.y"
     {
 					AlterTableSpaceOptionsStmt *n =
@@ -30669,12 +29124,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->isReset = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1076:
-
-/* Line 1806 of yacc.c  */
 #line 7200 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30683,12 +29136,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1077:
-
-/* Line 1806 of yacc.c  */
 #line 7209 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30697,12 +29148,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1078:
-
-/* Line 1806 of yacc.c  */
 #line 7218 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30711,12 +29160,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1079:
-
-/* Line 1806 of yacc.c  */
 #line 7227 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30725,12 +29172,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1080:
-
-/* Line 1806 of yacc.c  */
 #line 7236 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30739,12 +29184,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1081:
-
-/* Line 1806 of yacc.c  */
 #line 7245 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -30756,40 +29199,30 @@
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1082:
-
-/* Line 1806 of yacc.c  */
 #line 7258 "gram.y"
-    { (yyval.ival) = COLUMN; }
+    { (yyval.ival) = COLUMN; ;}
     break;
 
   case 1083:
-
-/* Line 1806 of yacc.c  */
 #line 7259 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1084:
-
-/* Line 1806 of yacc.c  */
 #line 7262 "gram.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 1085:
-
-/* Line 1806 of yacc.c  */
 #line 7263 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1086:
-
-/* Line 1806 of yacc.c  */
 #line 7274 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30799,12 +29232,10 @@
 					n->newschema = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1087:
-
-/* Line 1806 of yacc.c  */
 #line 7284 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30813,12 +29244,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1088:
-
-/* Line 1806 of yacc.c  */
 #line 7293 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30827,12 +29256,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1089:
-
-/* Line 1806 of yacc.c  */
 #line 7302 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30841,12 +29268,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1090:
-
-/* Line 1806 of yacc.c  */
 #line 7311 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30855,12 +29280,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1091:
-
-/* Line 1806 of yacc.c  */
 #line 7320 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30870,12 +29293,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1092:
-
-/* Line 1806 of yacc.c  */
 #line 7330 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30885,12 +29306,10 @@
 					n->newschema = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1093:
-
-/* Line 1806 of yacc.c  */
 #line 7340 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30900,12 +29319,10 @@
 					n->newschema = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1094:
-
-/* Line 1806 of yacc.c  */
 #line 7350 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30915,12 +29332,10 @@
 					n->newschema = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1095:
-
-/* Line 1806 of yacc.c  */
 #line 7360 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30929,12 +29344,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1096:
-
-/* Line 1806 of yacc.c  */
 #line 7369 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30943,12 +29356,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1097:
-
-/* Line 1806 of yacc.c  */
 #line 7378 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30957,12 +29368,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1098:
-
-/* Line 1806 of yacc.c  */
 #line 7387 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30971,12 +29380,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1099:
-
-/* Line 1806 of yacc.c  */
 #line 7396 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30985,12 +29392,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1100:
-
-/* Line 1806 of yacc.c  */
 #line 7405 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30999,12 +29404,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1101:
-
-/* Line 1806 of yacc.c  */
 #line 7414 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -31013,12 +29416,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1102:
-
-/* Line 1806 of yacc.c  */
 #line 7423 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -31027,12 +29428,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1103:
-
-/* Line 1806 of yacc.c  */
 #line 7432 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -31041,12 +29440,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1104:
-
-/* Line 1806 of yacc.c  */
 #line 7441 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -31055,12 +29452,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1105:
-
-/* Line 1806 of yacc.c  */
 #line 7450 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -31069,12 +29464,10 @@
 					n->newschema = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1106:
-
-/* Line 1806 of yacc.c  */
 #line 7459 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -31083,12 +29476,10 @@
 					n->newschema = (yyvsp[(9) - (9)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1107:
-
-/* Line 1806 of yacc.c  */
 #line 7468 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -31097,12 +29488,10 @@
 					n->newschema = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1108:
-
-/* Line 1806 of yacc.c  */
 #line 7477 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -31111,12 +29500,10 @@
 					n->newschema = (yyvsp[(9) - (9)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1109:
-
-/* Line 1806 of yacc.c  */
 #line 7486 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -31125,12 +29512,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1110:
-
-/* Line 1806 of yacc.c  */
 #line 7503 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31139,12 +29524,10 @@
 					n->objarg = (yyvsp[(4) - (7)].list);
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1111:
-
-/* Line 1806 of yacc.c  */
 #line 7512 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31152,12 +29535,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1112:
-
-/* Line 1806 of yacc.c  */
 #line 7520 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31165,12 +29546,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1113:
-
-/* Line 1806 of yacc.c  */
 #line 7528 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31178,12 +29557,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1114:
-
-/* Line 1806 of yacc.c  */
 #line 7536 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31191,12 +29568,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1115:
-
-/* Line 1806 of yacc.c  */
 #line 7544 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31205,12 +29580,10 @@
 					n->objarg = (yyvsp[(3) - (6)].funwithargs)->funcargs;
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1116:
-
-/* Line 1806 of yacc.c  */
 #line 7553 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31218,12 +29591,10 @@
 					n->object = list_make1(makeString((yyvsp[(4) - (7)].str)));
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1117:
-
-/* Line 1806 of yacc.c  */
 #line 7561 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31231,12 +29602,10 @@
 					n->object = list_make1((yyvsp[(4) - (7)].value));
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1118:
-
-/* Line 1806 of yacc.c  */
 #line 7569 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31245,12 +29614,10 @@
 					n->objarg = (yyvsp[(4) - (7)].list);
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1119:
-
-/* Line 1806 of yacc.c  */
 #line 7578 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31259,12 +29626,10 @@
 					n->objarg = list_make1(makeString((yyvsp[(6) - (9)].str)));
 					n->newowner = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1120:
-
-/* Line 1806 of yacc.c  */
 #line 7587 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31273,12 +29638,10 @@
 					n->objarg = list_make1(makeString((yyvsp[(6) - (9)].str)));
 					n->newowner = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1121:
-
-/* Line 1806 of yacc.c  */
 #line 7596 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31286,12 +29649,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1122:
-
-/* Line 1806 of yacc.c  */
 #line 7604 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31299,12 +29660,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1123:
-
-/* Line 1806 of yacc.c  */
 #line 7612 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31312,12 +29671,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1124:
-
-/* Line 1806 of yacc.c  */
 #line 7620 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31325,12 +29682,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newowner = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1125:
-
-/* Line 1806 of yacc.c  */
 #line 7628 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31338,12 +29693,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newowner = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1126:
-
-/* Line 1806 of yacc.c  */
 #line 7636 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31351,12 +29704,10 @@
 					n->object = list_make1(makeString((yyvsp[(5) - (8)].str)));
 					n->newowner = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1127:
-
-/* Line 1806 of yacc.c  */
 #line 7644 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31364,12 +29715,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1128:
-
-/* Line 1806 of yacc.c  */
 #line 7652 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -31377,12 +29726,10 @@
 					n->object = list_make1(makeString((yyvsp[(4) - (7)].str)));
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1129:
-
-/* Line 1806 of yacc.c  */
 #line 7671 "gram.y"
     {
 					RuleStmt *n = makeNode(RuleStmt);
@@ -31394,118 +29741,88 @@
 					n->instead = (yyvsp[(12) - (13)].boolean);
 					n->actions = (yyvsp[(13) - (13)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1130:
-
-/* Line 1806 of yacc.c  */
 #line 7685 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1131:
-
-/* Line 1806 of yacc.c  */
 #line 7686 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1132:
-
-/* Line 1806 of yacc.c  */
 #line 7687 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1133:
-
-/* Line 1806 of yacc.c  */
 #line 7693 "gram.y"
     { if ((yyvsp[(3) - (3)].node) != NULL)
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
 				  else
 					(yyval.list) = (yyvsp[(1) - (3)].list);
-				}
+				;}
     break;
 
   case 1134:
-
-/* Line 1806 of yacc.c  */
 #line 7699 "gram.y"
     { if ((yyvsp[(1) - (1)].node) != NULL)
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
 				  else
 					(yyval.list) = NIL;
-				}
+				;}
     break;
 
   case 1140:
-
-/* Line 1806 of yacc.c  */
 #line 7715 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1141:
-
-/* Line 1806 of yacc.c  */
 #line 7716 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1142:
-
-/* Line 1806 of yacc.c  */
 #line 7719 "gram.y"
-    { (yyval.ival) = CMD_SELECT; }
+    { (yyval.ival) = CMD_SELECT; ;}
     break;
 
   case 1143:
-
-/* Line 1806 of yacc.c  */
 #line 7720 "gram.y"
-    { (yyval.ival) = CMD_UPDATE; }
+    { (yyval.ival) = CMD_UPDATE; ;}
     break;
 
   case 1144:
-
-/* Line 1806 of yacc.c  */
 #line 7721 "gram.y"
-    { (yyval.ival) = CMD_DELETE; }
+    { (yyval.ival) = CMD_DELETE; ;}
     break;
 
   case 1145:
-
-/* Line 1806 of yacc.c  */
 #line 7722 "gram.y"
-    { (yyval.ival) = CMD_INSERT; }
+    { (yyval.ival) = CMD_INSERT; ;}
     break;
 
   case 1146:
-
-/* Line 1806 of yacc.c  */
 #line 7726 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1147:
-
-/* Line 1806 of yacc.c  */
 #line 7727 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1148:
-
-/* Line 1806 of yacc.c  */
 #line 7728 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1149:
-
-/* Line 1806 of yacc.c  */
 #line 7734 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -31516,12 +29833,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1150:
-
-/* Line 1806 of yacc.c  */
 #line 7745 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -31532,143 +29847,117 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1151:
-
-/* Line 1806 of yacc.c  */
 #line 7767 "gram.y"
     {
 					NotifyStmt *n = makeNode(NotifyStmt);
 					n->conditionname = (yyvsp[(2) - (3)].str);
 					n->payload = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1152:
-
-/* Line 1806 of yacc.c  */
 #line 7776 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 1153:
-
-/* Line 1806 of yacc.c  */
 #line 7777 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1154:
-
-/* Line 1806 of yacc.c  */
 #line 7781 "gram.y"
     {
 					ListenStmt *n = makeNode(ListenStmt);
 					n->conditionname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1155:
-
-/* Line 1806 of yacc.c  */
 #line 7790 "gram.y"
     {
 					UnlistenStmt *n = makeNode(UnlistenStmt);
 					n->conditionname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1156:
-
-/* Line 1806 of yacc.c  */
 #line 7796 "gram.y"
     {
 					UnlistenStmt *n = makeNode(UnlistenStmt);
 					n->conditionname = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1157:
-
-/* Line 1806 of yacc.c  */
 #line 7815 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_ROLLBACK;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1158:
-
-/* Line 1806 of yacc.c  */
 #line 7822 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_BEGIN;
 					n->options = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1159:
-
-/* Line 1806 of yacc.c  */
 #line 7829 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_START;
 					n->options = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1160:
-
-/* Line 1806 of yacc.c  */
 #line 7836 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_COMMIT;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1161:
-
-/* Line 1806 of yacc.c  */
 #line 7843 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_COMMIT;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1162:
-
-/* Line 1806 of yacc.c  */
 #line 7850 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_ROLLBACK;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1163:
-
-/* Line 1806 of yacc.c  */
 #line 7857 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -31676,12 +29965,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(2) - (2)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1164:
-
-/* Line 1806 of yacc.c  */
 #line 7865 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -31689,12 +29976,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(3) - (3)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1165:
-
-/* Line 1806 of yacc.c  */
 #line 7873 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -31702,12 +29987,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(2) - (2)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1166:
-
-/* Line 1806 of yacc.c  */
 #line 7881 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -31715,12 +29998,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(5) - (5)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1167:
-
-/* Line 1806 of yacc.c  */
 #line 7889 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -31728,137 +30009,105 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(4) - (4)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1168:
-
-/* Line 1806 of yacc.c  */
 #line 7897 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_PREPARE;
 					n->gid = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1169:
-
-/* Line 1806 of yacc.c  */
 #line 7904 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_COMMIT_PREPARED;
 					n->gid = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1170:
-
-/* Line 1806 of yacc.c  */
 #line 7911 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_ROLLBACK_PREPARED;
 					n->gid = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1171:
-
-/* Line 1806 of yacc.c  */
 #line 7919 "gram.y"
-    {}
+    {;}
     break;
 
   case 1172:
-
-/* Line 1806 of yacc.c  */
 #line 7920 "gram.y"
-    {}
+    {;}
     break;
 
   case 1173:
-
-/* Line 1806 of yacc.c  */
 #line 7921 "gram.y"
-    {}
+    {;}
     break;
 
   case 1174:
-
-/* Line 1806 of yacc.c  */
 #line 7926 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_isolation",
-									   makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)]))); }
+									   makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)]))); ;}
     break;
 
   case 1175:
-
-/* Line 1806 of yacc.c  */
 #line 7929 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_read_only",
-									   makeIntConst(TRUE, (yylsp[(1) - (2)]))); }
+									   makeIntConst(TRUE, (yylsp[(1) - (2)]))); ;}
     break;
 
   case 1176:
-
-/* Line 1806 of yacc.c  */
 #line 7932 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_read_only",
-									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); }
+									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); ;}
     break;
 
   case 1177:
-
-/* Line 1806 of yacc.c  */
 #line 7935 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_deferrable",
-									   makeIntConst(TRUE, (yylsp[(1) - (1)]))); }
+									   makeIntConst(TRUE, (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1178:
-
-/* Line 1806 of yacc.c  */
 #line 7938 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_deferrable",
-									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); }
+									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); ;}
     break;
 
   case 1179:
-
-/* Line 1806 of yacc.c  */
 #line 7945 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 1180:
-
-/* Line 1806 of yacc.c  */
 #line 7947 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 1181:
-
-/* Line 1806 of yacc.c  */
 #line 7949 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 1183:
-
-/* Line 1806 of yacc.c  */
 #line 7955 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1184:
-
-/* Line 1806 of yacc.c  */
 #line 7969 "gram.y"
     {
 					ViewStmt *n = makeNode(ViewStmt);
@@ -31869,12 +30118,10 @@
 					n->replace = false;
 					n->options = (yyvsp[(6) - (9)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1185:
-
-/* Line 1806 of yacc.c  */
 #line 7981 "gram.y"
     {
 					ViewStmt *n = makeNode(ViewStmt);
@@ -31885,12 +30132,10 @@
 					n->replace = true;
 					n->options = (yyvsp[(8) - (11)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1186:
-
-/* Line 1806 of yacc.c  */
 #line 7993 "gram.y"
     {
 					ViewStmt *n = makeNode(ViewStmt);
@@ -31901,12 +30146,10 @@
 					n->replace = false;
 					n->options = (yyvsp[(9) - (11)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1187:
-
-/* Line 1806 of yacc.c  */
 #line 8005 "gram.y"
     {
 					ViewStmt *n = makeNode(ViewStmt);
@@ -31917,259 +30160,203 @@
 					n->replace = true;
 					n->options = (yyvsp[(11) - (13)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1188:
-
-/* Line 1806 of yacc.c  */
 #line 8019 "gram.y"
     {
 					ereport(ERROR,
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("WITH CHECK OPTION is not implemented")));
-				}
+				;}
     break;
 
   case 1189:
-
-/* Line 1806 of yacc.c  */
 #line 8025 "gram.y"
     {
 					ereport(ERROR,
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("WITH CHECK OPTION is not implemented")));
-				}
+				;}
     break;
 
   case 1190:
-
-/* Line 1806 of yacc.c  */
 #line 8031 "gram.y"
     {
 					ereport(ERROR,
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("WITH CHECK OPTION is not implemented")));
-				}
+				;}
     break;
 
   case 1191:
-
-/* Line 1806 of yacc.c  */
 #line 8036 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1192:
-
-/* Line 1806 of yacc.c  */
 #line 8047 "gram.y"
     {
 					LoadStmt *n = makeNode(LoadStmt);
 					n->filename = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1193:
-
-/* Line 1806 of yacc.c  */
 #line 8063 "gram.y"
     {
 					CreatedbStmt *n = makeNode(CreatedbStmt);
 					n->dbname = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1194:
-
-/* Line 1806 of yacc.c  */
 #line 8072 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 1195:
-
-/* Line 1806 of yacc.c  */
 #line 8073 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1196:
-
-/* Line 1806 of yacc.c  */
 #line 8078 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("tablespace", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1197:
-
-/* Line 1806 of yacc.c  */
 #line 8082 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("tablespace", NULL);
-				}
+				;}
     break;
 
   case 1198:
-
-/* Line 1806 of yacc.c  */
 #line 8086 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("location", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1199:
-
-/* Line 1806 of yacc.c  */
 #line 8090 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("location", NULL);
-				}
+				;}
     break;
 
   case 1200:
-
-/* Line 1806 of yacc.c  */
 #line 8094 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("template", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1201:
-
-/* Line 1806 of yacc.c  */
 #line 8098 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("template", NULL);
-				}
+				;}
     break;
 
   case 1202:
-
-/* Line 1806 of yacc.c  */
 #line 8102 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1203:
-
-/* Line 1806 of yacc.c  */
 #line 8106 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", (Node *)makeInteger((yyvsp[(3) - (3)].ival)));
-				}
+				;}
     break;
 
   case 1204:
-
-/* Line 1806 of yacc.c  */
 #line 8110 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", NULL);
-				}
+				;}
     break;
 
   case 1205:
-
-/* Line 1806 of yacc.c  */
 #line 8114 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_collate", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1206:
-
-/* Line 1806 of yacc.c  */
 #line 8118 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_collate", NULL);
-				}
+				;}
     break;
 
   case 1207:
-
-/* Line 1806 of yacc.c  */
 #line 8122 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_ctype", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1208:
-
-/* Line 1806 of yacc.c  */
 #line 8126 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_ctype", NULL);
-				}
+				;}
     break;
 
   case 1209:
-
-/* Line 1806 of yacc.c  */
 #line 8130 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[(4) - (4)].ival)));
-				}
+				;}
     break;
 
   case 1210:
-
-/* Line 1806 of yacc.c  */
 #line 8134 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("owner", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1211:
-
-/* Line 1806 of yacc.c  */
 #line 8138 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("owner", NULL);
-				}
+				;}
     break;
 
   case 1212:
-
-/* Line 1806 of yacc.c  */
 #line 8147 "gram.y"
-    {}
+    {;}
     break;
 
   case 1213:
-
-/* Line 1806 of yacc.c  */
 #line 8148 "gram.y"
-    {}
+    {;}
     break;
 
   case 1214:
-
-/* Line 1806 of yacc.c  */
 #line 8160 "gram.y"
     {
 					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
 					n->dbname = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 1215:
-
-/* Line 1806 of yacc.c  */
 #line 8167 "gram.y"
     {
 					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
@@ -32177,71 +30364,57 @@
 					n->options = list_make1(makeDefElem("tablespace",
 													(Node *)makeString((yyvsp[(6) - (6)].str))));
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 1216:
-
-/* Line 1806 of yacc.c  */
 #line 8178 "gram.y"
     {
 					AlterDatabaseSetStmt *n = makeNode(AlterDatabaseSetStmt);
 					n->dbname = (yyvsp[(3) - (4)].str);
 					n->setstmt = (yyvsp[(4) - (4)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1217:
-
-/* Line 1806 of yacc.c  */
 #line 8188 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 1218:
-
-/* Line 1806 of yacc.c  */
 #line 8189 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1219:
-
-/* Line 1806 of yacc.c  */
 #line 8194 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[(4) - (4)].ival)));
-				}
+				;}
     break;
 
   case 1220:
-
-/* Line 1806 of yacc.c  */
 #line 8208 "gram.y"
     {
 					DropdbStmt *n = makeNode(DropdbStmt);
 					n->dbname = (yyvsp[(3) - (3)].str);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1221:
-
-/* Line 1806 of yacc.c  */
 #line 8215 "gram.y"
     {
 					DropdbStmt *n = makeNode(DropdbStmt);
 					n->dbname = (yyvsp[(5) - (5)].str);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1222:
-
-/* Line 1806 of yacc.c  */
 #line 8232 "gram.y"
     {
 					CreateDomainStmt *n = makeNode(CreateDomainStmt);
@@ -32250,12 +30423,10 @@
 					SplitColQualList((yyvsp[(6) - (6)].list), &n->constraints, &n->collClause,
 									 yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1223:
-
-/* Line 1806 of yacc.c  */
 #line 8245 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -32263,36 +30434,30 @@
 					n->typeName = (yyvsp[(3) - (4)].list);
 					n->def = (yyvsp[(4) - (4)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1224:
-
-/* Line 1806 of yacc.c  */
 #line 8254 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
 					n->subtype = 'N';
 					n->typeName = (yyvsp[(3) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1225:
-
-/* Line 1806 of yacc.c  */
 #line 8262 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
 					n->subtype = 'O';
 					n->typeName = (yyvsp[(3) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1226:
-
-/* Line 1806 of yacc.c  */
 #line 8270 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -32300,12 +30465,10 @@
 					n->typeName = (yyvsp[(3) - (5)].list);
 					n->def = (yyvsp[(5) - (5)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1227:
-
-/* Line 1806 of yacc.c  */
 #line 8279 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -32315,12 +30478,10 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1228:
-
-/* Line 1806 of yacc.c  */
 #line 8290 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -32330,12 +30491,10 @@
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1229:
-
-/* Line 1806 of yacc.c  */
 #line 8301 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -32343,38 +30502,30 @@
 					n->typeName = (yyvsp[(3) - (6)].list);
 					n->name = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1230:
-
-/* Line 1806 of yacc.c  */
 #line 8310 "gram.y"
-    {}
+    {;}
     break;
 
   case 1231:
-
-/* Line 1806 of yacc.c  */
 #line 8311 "gram.y"
-    {}
+    {;}
     break;
 
   case 1232:
-
-/* Line 1806 of yacc.c  */
 #line 8323 "gram.y"
     {
 					AlterTSDictionaryStmt *n = makeNode(AlterTSDictionaryStmt);
 					n->dictname = (yyvsp[(5) - (6)].list);
 					n->options = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1233:
-
-/* Line 1806 of yacc.c  */
 #line 8333 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -32384,12 +30535,10 @@
 					n->override = false;
 					n->replace = false;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1234:
-
-/* Line 1806 of yacc.c  */
 #line 8343 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -32399,12 +30548,10 @@
 					n->override = true;
 					n->replace = false;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1235:
-
-/* Line 1806 of yacc.c  */
 #line 8353 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -32414,12 +30561,10 @@
 					n->override = false;
 					n->replace = true;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1236:
-
-/* Line 1806 of yacc.c  */
 #line 8363 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -32429,12 +30574,10 @@
 					n->override = false;
 					n->replace = true;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1237:
-
-/* Line 1806 of yacc.c  */
 #line 8373 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -32442,12 +30585,10 @@
 					n->tokentype = (yyvsp[(9) - (9)].list);
 					n->missing_ok = false;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1238:
-
-/* Line 1806 of yacc.c  */
 #line 8381 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -32455,12 +30596,10 @@
 					n->tokentype = (yyvsp[(11) - (11)].list);
 					n->missing_ok = true;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1239:
-
-/* Line 1806 of yacc.c  */
 #line 8403 "gram.y"
     {
 				CreateConversionStmt *n = makeNode(CreateConversionStmt);
@@ -32470,12 +30609,10 @@
 				n->func_name = (yyvsp[(10) - (10)].list);
 				n->def = (yyvsp[(2) - (10)].boolean);
 				(yyval.node) = (Node *)n;
-			}
+			;}
     break;
 
   case 1240:
-
-/* Line 1806 of yacc.c  */
 #line 8425 "gram.y"
     {
 					ClusterStmt *n = makeNode(ClusterStmt);
@@ -32483,12 +30620,10 @@
 					n->indexname = (yyvsp[(4) - (4)].str);
 					n->verbose = (yyvsp[(2) - (4)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1241:
-
-/* Line 1806 of yacc.c  */
 #line 8433 "gram.y"
     {
 					ClusterStmt *n = makeNode(ClusterStmt);
@@ -32496,12 +30631,10 @@
 					n->indexname = NULL;
 					n->verbose = (yyvsp[(2) - (2)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1242:
-
-/* Line 1806 of yacc.c  */
 #line 8442 "gram.y"
     {
 					ClusterStmt *n = makeNode(ClusterStmt);
@@ -32509,26 +30642,20 @@
 					n->indexname = (yyvsp[(3) - (5)].str);
 					n->verbose = (yyvsp[(2) - (5)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1243:
-
-/* Line 1806 of yacc.c  */
 #line 8452 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 1244:
-
-/* Line 1806 of yacc.c  */
 #line 8453 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1245:
-
-/* Line 1806 of yacc.c  */
 #line 8466 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -32544,12 +30671,10 @@
 					n->relation = NULL;
 					n->va_cols = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1246:
-
-/* Line 1806 of yacc.c  */
 #line 8482 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -32565,12 +30690,10 @@
 					n->relation = (yyvsp[(5) - (5)].range);
 					n->va_cols = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1247:
-
-/* Line 1806 of yacc.c  */
 #line 8498 "gram.y"
     {
 					VacuumStmt *n = (VacuumStmt *) (yyvsp[(5) - (5)].node);
@@ -32584,12 +30707,10 @@
 					n->multixact_freeze_min_age = (yyvsp[(3) - (5)].boolean) ? 0 : -1;
 					n->multixact_freeze_table_age = (yyvsp[(3) - (5)].boolean) ? 0 : -1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1248:
-
-/* Line 1806 of yacc.c  */
 #line 8512 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -32609,12 +30730,10 @@
 					n->relation = NULL;
 					n->va_cols = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1249:
-
-/* Line 1806 of yacc.c  */
 #line 8532 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -32636,54 +30755,40 @@
 					if (n->va_cols != NIL)	/* implies analyze */
 						n->options |= VACOPT_ANALYZE;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1250:
-
-/* Line 1806 of yacc.c  */
 #line 8556 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1251:
-
-/* Line 1806 of yacc.c  */
 #line 8557 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 1252:
-
-/* Line 1806 of yacc.c  */
 #line 8561 "gram.y"
-    { (yyval.ival) = VACOPT_ANALYZE; }
+    { (yyval.ival) = VACOPT_ANALYZE; ;}
     break;
 
   case 1253:
-
-/* Line 1806 of yacc.c  */
 #line 8562 "gram.y"
-    { (yyval.ival) = VACOPT_VERBOSE; }
+    { (yyval.ival) = VACOPT_VERBOSE; ;}
     break;
 
   case 1254:
-
-/* Line 1806 of yacc.c  */
 #line 8563 "gram.y"
-    { (yyval.ival) = VACOPT_FREEZE; }
+    { (yyval.ival) = VACOPT_FREEZE; ;}
     break;
 
   case 1255:
-
-/* Line 1806 of yacc.c  */
 #line 8564 "gram.y"
-    { (yyval.ival) = VACOPT_FULL; }
+    { (yyval.ival) = VACOPT_FULL; ;}
     break;
 
   case 1256:
-
-/* Line 1806 of yacc.c  */
 #line 8569 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -32697,12 +30802,10 @@
 					n->relation = NULL;
 					n->va_cols = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1257:
-
-/* Line 1806 of yacc.c  */
 #line 8583 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -32716,94 +30819,70 @@
 					n->relation = (yyvsp[(3) - (4)].range);
 					n->va_cols = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1258:
-
-/* Line 1806 of yacc.c  */
 #line 8599 "gram.y"
-    {}
+    {;}
     break;
 
   case 1259:
-
-/* Line 1806 of yacc.c  */
 #line 8600 "gram.y"
-    {}
+    {;}
     break;
 
   case 1260:
-
-/* Line 1806 of yacc.c  */
 #line 8604 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1261:
-
-/* Line 1806 of yacc.c  */
 #line 8605 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1262:
-
-/* Line 1806 of yacc.c  */
 #line 8608 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1263:
-
-/* Line 1806 of yacc.c  */
 #line 8609 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1264:
-
-/* Line 1806 of yacc.c  */
 #line 8612 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1265:
-
-/* Line 1806 of yacc.c  */
 #line 8613 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1266:
-
-/* Line 1806 of yacc.c  */
 #line 8617 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1267:
-
-/* Line 1806 of yacc.c  */
 #line 8618 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1268:
-
-/* Line 1806 of yacc.c  */
 #line 8632 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
 					n->query = (yyvsp[(2) - (2)].node);
 					n->options = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1269:
-
-/* Line 1806 of yacc.c  */
 #line 8639 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
@@ -32813,98 +30892,76 @@
 						n->options = lappend(n->options,
 											 makeDefElem("verbose", NULL));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1270:
-
-/* Line 1806 of yacc.c  */
 #line 8649 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
 					n->query = (yyvsp[(3) - (3)].node);
 					n->options = list_make1(makeDefElem("verbose", NULL));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1271:
-
-/* Line 1806 of yacc.c  */
 #line 8656 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
 					n->query = (yyvsp[(5) - (5)].node);
 					n->options = (yyvsp[(3) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1281:
-
-/* Line 1806 of yacc.c  */
 #line 8678 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 1282:
-
-/* Line 1806 of yacc.c  */
 #line 8682 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 1283:
-
-/* Line 1806 of yacc.c  */
 #line 8689 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 1284:
-
-/* Line 1806 of yacc.c  */
 #line 8695 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1285:
-
-/* Line 1806 of yacc.c  */
 #line 8696 "gram.y"
-    { (yyval.str) = "analyze"; }
+    { (yyval.str) = "analyze"; ;}
     break;
 
   case 1286:
-
-/* Line 1806 of yacc.c  */
 #line 8700 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 1287:
-
-/* Line 1806 of yacc.c  */
 #line 8701 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); }
+    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); ;}
     break;
 
   case 1288:
-
-/* Line 1806 of yacc.c  */
 #line 8702 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1289:
-
-/* Line 1806 of yacc.c  */
 #line 8713 "gram.y"
     {
 					PrepareStmt *n = makeNode(PrepareStmt);
@@ -32912,38 +30969,30 @@
 					n->argtypes = (yyvsp[(3) - (5)].list);
 					n->query = (yyvsp[(5) - (5)].node);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1290:
-
-/* Line 1806 of yacc.c  */
 #line 8722 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1291:
-
-/* Line 1806 of yacc.c  */
 #line 8723 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1296:
-
-/* Line 1806 of yacc.c  */
 #line 8741 "gram.y"
     {
 					ExecuteStmt *n = makeNode(ExecuteStmt);
 					n->name = (yyvsp[(2) - (3)].str);
 					n->params = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1297:
-
-/* Line 1806 of yacc.c  */
 #line 8749 "gram.y"
     {
 					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
@@ -32958,129 +31007,103 @@
 					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
 					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
 					(yyval.node) = (Node *) ctas;
-				}
+				;}
     break;
 
   case 1298:
-
-/* Line 1806 of yacc.c  */
 #line 8765 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1299:
-
-/* Line 1806 of yacc.c  */
 #line 8766 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1300:
-
-/* Line 1806 of yacc.c  */
 #line 8777 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = (yyvsp[(2) - (2)].str);
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1301:
-
-/* Line 1806 of yacc.c  */
 #line 8783 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = (yyvsp[(3) - (3)].str);
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1302:
-
-/* Line 1806 of yacc.c  */
 #line 8789 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = NULL;
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1303:
-
-/* Line 1806 of yacc.c  */
 #line 8795 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = NULL;
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1304:
-
-/* Line 1806 of yacc.c  */
 #line 8811 "gram.y"
     {
 					(yyvsp[(5) - (6)].istmt)->relation = (yyvsp[(4) - (6)].range);
 					(yyvsp[(5) - (6)].istmt)->returningList = (yyvsp[(6) - (6)].list);
 					(yyvsp[(5) - (6)].istmt)->withClause = (yyvsp[(1) - (6)].with);
 					(yyval.node) = (Node *) (yyvsp[(5) - (6)].istmt);
-				}
+				;}
     break;
 
   case 1305:
-
-/* Line 1806 of yacc.c  */
 #line 8821 "gram.y"
     {
 					(yyval.istmt) = makeNode(InsertStmt);
 					(yyval.istmt)->cols = NIL;
 					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
-				}
+				;}
     break;
 
   case 1306:
-
-/* Line 1806 of yacc.c  */
 #line 8827 "gram.y"
     {
 					(yyval.istmt) = makeNode(InsertStmt);
 					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
 					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
-				}
+				;}
     break;
 
   case 1307:
-
-/* Line 1806 of yacc.c  */
 #line 8833 "gram.y"
     {
 					(yyval.istmt) = makeNode(InsertStmt);
 					(yyval.istmt)->cols = NIL;
 					(yyval.istmt)->selectStmt = NULL;
-				}
+				;}
     break;
 
   case 1308:
-
-/* Line 1806 of yacc.c  */
 #line 8842 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1309:
-
-/* Line 1806 of yacc.c  */
 #line 8844 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1310:
-
-/* Line 1806 of yacc.c  */
 #line 8849 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -33088,26 +31111,20 @@
 					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.target)->val = NULL;
 					(yyval.target)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1311:
-
-/* Line 1806 of yacc.c  */
 #line 8859 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1312:
-
-/* Line 1806 of yacc.c  */
 #line 8860 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1313:
-
-/* Line 1806 of yacc.c  */
 #line 8873 "gram.y"
     {
 					DeleteStmt *n = makeNode(DeleteStmt);
@@ -33117,26 +31134,20 @@
 					n->returningList = (yyvsp[(7) - (7)].list);
 					n->withClause = (yyvsp[(1) - (7)].with);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1314:
-
-/* Line 1806 of yacc.c  */
 #line 8885 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1315:
-
-/* Line 1806 of yacc.c  */
 #line 8886 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1316:
-
-/* Line 1806 of yacc.c  */
 #line 8898 "gram.y"
     {
 					LockStmt *n = makeNode(LockStmt);
@@ -33145,96 +31156,70 @@
 					n->mode = (yyvsp[(4) - (5)].ival);
 					n->nowait = (yyvsp[(5) - (5)].boolean);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1317:
-
-/* Line 1806 of yacc.c  */
 #line 8908 "gram.y"
-    { (yyval.ival) = (yyvsp[(2) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(2) - (3)].ival); ;}
     break;
 
   case 1318:
-
-/* Line 1806 of yacc.c  */
 #line 8909 "gram.y"
-    { (yyval.ival) = AccessExclusiveLock; }
+    { (yyval.ival) = AccessExclusiveLock; ;}
     break;
 
   case 1319:
-
-/* Line 1806 of yacc.c  */
 #line 8912 "gram.y"
-    { (yyval.ival) = AccessShareLock; }
+    { (yyval.ival) = AccessShareLock; ;}
     break;
 
   case 1320:
-
-/* Line 1806 of yacc.c  */
 #line 8913 "gram.y"
-    { (yyval.ival) = RowShareLock; }
+    { (yyval.ival) = RowShareLock; ;}
     break;
 
   case 1321:
-
-/* Line 1806 of yacc.c  */
 #line 8914 "gram.y"
-    { (yyval.ival) = RowExclusiveLock; }
+    { (yyval.ival) = RowExclusiveLock; ;}
     break;
 
   case 1322:
-
-/* Line 1806 of yacc.c  */
 #line 8915 "gram.y"
-    { (yyval.ival) = ShareUpdateExclusiveLock; }
+    { (yyval.ival) = ShareUpdateExclusiveLock; ;}
     break;
 
   case 1323:
-
-/* Line 1806 of yacc.c  */
 #line 8916 "gram.y"
-    { (yyval.ival) = ShareLock; }
+    { (yyval.ival) = ShareLock; ;}
     break;
 
   case 1324:
-
-/* Line 1806 of yacc.c  */
 #line 8917 "gram.y"
-    { (yyval.ival) = ShareRowExclusiveLock; }
+    { (yyval.ival) = ShareRowExclusiveLock; ;}
     break;
 
   case 1325:
-
-/* Line 1806 of yacc.c  */
 #line 8918 "gram.y"
-    { (yyval.ival) = ExclusiveLock; }
+    { (yyval.ival) = ExclusiveLock; ;}
     break;
 
   case 1326:
-
-/* Line 1806 of yacc.c  */
 #line 8919 "gram.y"
-    { (yyval.ival) = AccessExclusiveLock; }
+    { (yyval.ival) = AccessExclusiveLock; ;}
     break;
 
   case 1327:
-
-/* Line 1806 of yacc.c  */
 #line 8922 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1328:
-
-/* Line 1806 of yacc.c  */
 #line 8923 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1329:
-
-/* Line 1806 of yacc.c  */
 #line 8939 "gram.y"
     {
 					UpdateStmt *n = makeNode(UpdateStmt);
@@ -33245,50 +31230,38 @@
 					n->returningList = (yyvsp[(8) - (8)].list);
 					n->withClause = (yyvsp[(1) - (8)].with);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1330:
-
-/* Line 1806 of yacc.c  */
 #line 8952 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1331:
-
-/* Line 1806 of yacc.c  */
 #line 8953 "gram.y"
-    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 1332:
-
-/* Line 1806 of yacc.c  */
 #line 8957 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1333:
-
-/* Line 1806 of yacc.c  */
 #line 8958 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1334:
-
-/* Line 1806 of yacc.c  */
 #line 8963 "gram.y"
     {
 					(yyval.target) = (yyvsp[(1) - (3)].target);
 					(yyval.target)->val = (Node *) (yyvsp[(3) - (3)].node);
-				}
+				;}
     break;
 
   case 1335:
-
-/* Line 1806 of yacc.c  */
 #line 8971 "gram.y"
     {
 					ListCell *col_cell;
@@ -33313,12 +31286,10 @@
 					}
 
 					(yyval.list) = (yyvsp[(2) - (5)].list);
-				}
+				;}
     break;
 
   case 1336:
-
-/* Line 1806 of yacc.c  */
 #line 8999 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -33326,26 +31297,20 @@
 					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.target)->val = NULL;	/* upper production sets this */
 					(yyval.target)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1337:
-
-/* Line 1806 of yacc.c  */
 #line 9009 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1338:
-
-/* Line 1806 of yacc.c  */
 #line 9010 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1339:
-
-/* Line 1806 of yacc.c  */
 #line 9021 "gram.y"
     {
 					DeclareCursorStmt *n = makeNode(DeclareCursorStmt);
@@ -33354,108 +31319,80 @@
 					n->options = (yyvsp[(3) - (7)].ival) | (yyvsp[(5) - (7)].ival) | CURSOR_OPT_FAST_PLAN;
 					n->query = (yyvsp[(7) - (7)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1340:
-
-/* Line 1806 of yacc.c  */
 #line 9031 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1341:
-
-/* Line 1806 of yacc.c  */
 #line 9034 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1342:
-
-/* Line 1806 of yacc.c  */
 #line 9035 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | CURSOR_OPT_NO_SCROLL; }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | CURSOR_OPT_NO_SCROLL; ;}
     break;
 
   case 1343:
-
-/* Line 1806 of yacc.c  */
 #line 9036 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_SCROLL; }
+    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_SCROLL; ;}
     break;
 
   case 1344:
-
-/* Line 1806 of yacc.c  */
 #line 9037 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_BINARY; }
+    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_BINARY; ;}
     break;
 
   case 1345:
-
-/* Line 1806 of yacc.c  */
 #line 9038 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_INSENSITIVE; }
+    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_INSENSITIVE; ;}
     break;
 
   case 1346:
-
-/* Line 1806 of yacc.c  */
 #line 9041 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1347:
-
-/* Line 1806 of yacc.c  */
 #line 9042 "gram.y"
-    { (yyval.ival) = CURSOR_OPT_HOLD; }
+    { (yyval.ival) = CURSOR_OPT_HOLD; ;}
     break;
 
   case 1348:
-
-/* Line 1806 of yacc.c  */
 #line 9043 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1351:
-
-/* Line 1806 of yacc.c  */
 #line 9096 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1352:
-
-/* Line 1806 of yacc.c  */
 #line 9097 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1353:
-
-/* Line 1806 of yacc.c  */
 #line 9112 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1354:
-
-/* Line 1806 of yacc.c  */
 #line 9114 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
 										NULL, NULL, NULL,
 										yyscanner);
 					(yyval.node) = (yyvsp[(1) - (2)].node);
-				}
+				;}
     break;
 
   case 1355:
-
-/* Line 1806 of yacc.c  */
 #line 9121 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
@@ -33463,12 +31400,10 @@
 										NULL,
 										yyscanner);
 					(yyval.node) = (yyvsp[(1) - (4)].node);
-				}
+				;}
     break;
 
   case 1356:
-
-/* Line 1806 of yacc.c  */
 #line 9129 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
@@ -33476,12 +31411,10 @@
 										NULL,
 										yyscanner);
 					(yyval.node) = (yyvsp[(1) - (4)].node);
-				}
+				;}
     break;
 
   case 1357:
-
-/* Line 1806 of yacc.c  */
 #line 9137 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
@@ -33489,12 +31422,10 @@
 										(yyvsp[(1) - (2)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (2)].node);
-				}
+				;}
     break;
 
   case 1358:
-
-/* Line 1806 of yacc.c  */
 #line 9145 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
@@ -33502,12 +31433,10 @@
 										(yyvsp[(1) - (3)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (3)].node);
-				}
+				;}
     break;
 
   case 1359:
-
-/* Line 1806 of yacc.c  */
 #line 9153 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
@@ -33515,12 +31444,10 @@
 										(yyvsp[(1) - (5)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (5)].node);
-				}
+				;}
     break;
 
   case 1360:
-
-/* Line 1806 of yacc.c  */
 #line 9161 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
@@ -33528,26 +31455,20 @@
 										(yyvsp[(1) - (5)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (5)].node);
-				}
+				;}
     break;
 
   case 1361:
-
-/* Line 1806 of yacc.c  */
 #line 9171 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1362:
-
-/* Line 1806 of yacc.c  */
 #line 9172 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1363:
-
-/* Line 1806 of yacc.c  */
 #line 9202 "gram.y"
     {
 					SelectStmt *n = makeNode(SelectStmt);
@@ -33560,19 +31481,15 @@
 					n->havingClause = (yyvsp[(8) - (9)].node);
 					n->windowClause = (yyvsp[(9) - (9)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1364:
-
-/* Line 1806 of yacc.c  */
 #line 9214 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1365:
-
-/* Line 1806 of yacc.c  */
 #line 9216 "gram.y"
     {
 					/* same as SELECT * FROM relation_expr */
@@ -33591,77 +31508,61 @@
 					n->targetList = list_make1(rt);
 					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1366:
-
-/* Line 1806 of yacc.c  */
 #line 9235 "gram.y"
     {
 					(yyval.node) = makeSetOp(SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1367:
-
-/* Line 1806 of yacc.c  */
 #line 9239 "gram.y"
     {
 					(yyval.node) = makeSetOp(SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1368:
-
-/* Line 1806 of yacc.c  */
 #line 9243 "gram.y"
     {
 					(yyval.node) = makeSetOp(SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1369:
-
-/* Line 1806 of yacc.c  */
 #line 9258 "gram.y"
     {
 				(yyval.with) = makeNode(WithClause);
 				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
 				(yyval.with)->recursive = false;
 				(yyval.with)->location = (yylsp[(1) - (2)]);
-			}
+			;}
     break;
 
   case 1370:
-
-/* Line 1806 of yacc.c  */
 #line 9265 "gram.y"
     {
 				(yyval.with) = makeNode(WithClause);
 				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
 				(yyval.with)->recursive = true;
 				(yyval.with)->location = (yylsp[(1) - (3)]);
-			}
+			;}
     break;
 
   case 1371:
-
-/* Line 1806 of yacc.c  */
 #line 9274 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1372:
-
-/* Line 1806 of yacc.c  */
 #line 9275 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1373:
-
-/* Line 1806 of yacc.c  */
 #line 9279 "gram.y"
     {
 				CommonTableExpr *n = makeNode(CommonTableExpr);
@@ -33670,26 +31571,20 @@
 				n->ctequery = (yyvsp[(5) - (6)].node);
 				n->location = (yylsp[(1) - (6)]);
 				(yyval.node) = (Node *) n;
-			}
+			;}
     break;
 
   case 1374:
-
-/* Line 1806 of yacc.c  */
 #line 9290 "gram.y"
-    { (yyval.with) = (yyvsp[(1) - (1)].with); }
+    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
     break;
 
   case 1375:
-
-/* Line 1806 of yacc.c  */
 #line 9291 "gram.y"
-    { (yyval.with) = NULL; }
+    { (yyval.with) = NULL; ;}
     break;
 
   case 1376:
-
-/* Line 1806 of yacc.c  */
 #line 9296 "gram.y"
     {
 					(yyval.into) = makeNode(IntoClause);
@@ -33700,59 +31595,47 @@
 					(yyval.into)->tableSpaceName = NULL;
 					(yyval.into)->viewQuery = NULL;
 					(yyval.into)->skipData = false;
-				}
+				;}
     break;
 
   case 1377:
-
-/* Line 1806 of yacc.c  */
 #line 9307 "gram.y"
-    { (yyval.into) = NULL; }
+    { (yyval.into) = NULL; ;}
     break;
 
   case 1378:
-
-/* Line 1806 of yacc.c  */
 #line 9316 "gram.y"
     {
 					(yyval.range) = (yyvsp[(3) - (3)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1379:
-
-/* Line 1806 of yacc.c  */
 #line 9321 "gram.y"
     {
 					(yyval.range) = (yyvsp[(3) - (3)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1380:
-
-/* Line 1806 of yacc.c  */
 #line 9326 "gram.y"
     {
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1381:
-
-/* Line 1806 of yacc.c  */
 #line 9331 "gram.y"
     {
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1382:
-
-/* Line 1806 of yacc.c  */
 #line 9336 "gram.y"
     {
 					ereport(WARNING,
@@ -33760,12 +31643,10 @@
 							 parser_errposition((yylsp[(1) - (4)]))));
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1383:
-
-/* Line 1806 of yacc.c  */
 #line 9344 "gram.y"
     {
 					ereport(WARNING,
@@ -33773,140 +31654,104 @@
 							 parser_errposition((yylsp[(1) - (4)]))));
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1384:
-
-/* Line 1806 of yacc.c  */
 #line 9352 "gram.y"
     {
 					(yyval.range) = (yyvsp[(3) - (3)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_UNLOGGED;
-				}
+				;}
     break;
 
   case 1385:
-
-/* Line 1806 of yacc.c  */
 #line 9357 "gram.y"
     {
 					(yyval.range) = (yyvsp[(2) - (2)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
-				}
+				;}
     break;
 
   case 1386:
-
-/* Line 1806 of yacc.c  */
 #line 9362 "gram.y"
     {
 					(yyval.range) = (yyvsp[(1) - (1)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
-				}
+				;}
     break;
 
   case 1387:
-
-/* Line 1806 of yacc.c  */
 #line 9368 "gram.y"
-    {}
+    {;}
     break;
 
   case 1388:
-
-/* Line 1806 of yacc.c  */
 #line 9369 "gram.y"
-    {}
+    {;}
     break;
 
   case 1389:
-
-/* Line 1806 of yacc.c  */
 #line 9372 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1390:
-
-/* Line 1806 of yacc.c  */
 #line 9373 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1391:
-
-/* Line 1806 of yacc.c  */
 #line 9374 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1392:
-
-/* Line 1806 of yacc.c  */
 #line 9381 "gram.y"
-    { (yyval.list) = list_make1(NIL); }
+    { (yyval.list) = list_make1(NIL); ;}
     break;
 
   case 1393:
-
-/* Line 1806 of yacc.c  */
 #line 9382 "gram.y"
-    { (yyval.list) = (yyvsp[(4) - (5)].list); }
+    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
     break;
 
   case 1394:
-
-/* Line 1806 of yacc.c  */
 #line 9383 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1395:
-
-/* Line 1806 of yacc.c  */
 #line 9384 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1396:
-
-/* Line 1806 of yacc.c  */
 #line 9388 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list);}
+    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
     break;
 
   case 1397:
-
-/* Line 1806 of yacc.c  */
 #line 9389 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1398:
-
-/* Line 1806 of yacc.c  */
 #line 9393 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (3)].list); }
+    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 1399:
-
-/* Line 1806 of yacc.c  */
 #line 9397 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
     break;
 
   case 1400:
-
-/* Line 1806 of yacc.c  */
 #line 9398 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
     break;
 
   case 1401:
-
-/* Line 1806 of yacc.c  */
 #line 9402 "gram.y"
     {
 					(yyval.sortby) = makeNode(SortBy);
@@ -33915,12 +31760,10 @@
 					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].ival);
 					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
 					(yyval.sortby)->location = (yylsp[(3) - (4)]);
-				}
+				;}
     break;
 
   case 1402:
-
-/* Line 1806 of yacc.c  */
 #line 9411 "gram.y"
     {
 					(yyval.sortby) = makeNode(SortBy);
@@ -33929,61 +31772,45 @@
 					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].ival);
 					(yyval.sortby)->useOp = NIL;
 					(yyval.sortby)->location = -1;		/* no operator */
-				}
+				;}
     break;
 
   case 1403:
-
-/* Line 1806 of yacc.c  */
 #line 9423 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); }
+    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
     break;
 
   case 1404:
-
-/* Line 1806 of yacc.c  */
 #line 9424 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1405:
-
-/* Line 1806 of yacc.c  */
 #line 9425 "gram.y"
-    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1406:
-
-/* Line 1806 of yacc.c  */
 #line 9426 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); }
+    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
     break;
 
   case 1407:
-
-/* Line 1806 of yacc.c  */
 #line 9430 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1408:
-
-/* Line 1806 of yacc.c  */
 #line 9431 "gram.y"
-    { (yyval.list) = list_make2(NULL,NULL); }
+    { (yyval.list) = list_make2(NULL,NULL); ;}
     break;
 
   case 1409:
-
-/* Line 1806 of yacc.c  */
 #line 9436 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1410:
-
-/* Line 1806 of yacc.c  */
 #line 9438 "gram.y"
     {
 					/* Disabled because it was too confusing, bjm 2002-02-18 */
@@ -33992,183 +31819,133 @@
 							 errmsg("LIMIT #,# syntax is not supported"),
 							 errhint("Use separate LIMIT and OFFSET clauses."),
 							 parser_errposition((yylsp[(1) - (4)]))));
-				}
+				;}
     break;
 
   case 1411:
-
-/* Line 1806 of yacc.c  */
 #line 9448 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (5)].node); }
+    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
     break;
 
   case 1412:
-
-/* Line 1806 of yacc.c  */
 #line 9453 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1413:
-
-/* Line 1806 of yacc.c  */
 #line 9456 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1414:
-
-/* Line 1806 of yacc.c  */
 #line 9460 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1415:
-
-/* Line 1806 of yacc.c  */
 #line 9462 "gram.y"
     {
 					/* LIMIT ALL is represented as a NULL constant */
 					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1416:
-
-/* Line 1806 of yacc.c  */
 #line 9469 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1417:
-
-/* Line 1806 of yacc.c  */
 #line 9479 "gram.y"
-    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)])); ;}
     break;
 
   case 1418:
-
-/* Line 1806 of yacc.c  */
 #line 9480 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1419:
-
-/* Line 1806 of yacc.c  */
 #line 9481 "gram.y"
-    { (yyval.node) = makeIntConst(1, -1); }
+    { (yyval.node) = makeIntConst(1, -1); ;}
     break;
 
   case 1420:
-
-/* Line 1806 of yacc.c  */
 #line 9489 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1421:
-
-/* Line 1806 of yacc.c  */
 #line 9493 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1422:
-
-/* Line 1806 of yacc.c  */
 #line 9494 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1423:
-
-/* Line 1806 of yacc.c  */
 #line 9497 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1424:
-
-/* Line 1806 of yacc.c  */
 #line 9498 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1425:
-
-/* Line 1806 of yacc.c  */
 #line 9503 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (3)].list); }
+    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 1426:
-
-/* Line 1806 of yacc.c  */
 #line 9504 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1427:
-
-/* Line 1806 of yacc.c  */
 #line 9508 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1428:
-
-/* Line 1806 of yacc.c  */
 #line 9509 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1429:
-
-/* Line 1806 of yacc.c  */
 #line 9513 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1430:
-
-/* Line 1806 of yacc.c  */
 #line 9514 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1431:
-
-/* Line 1806 of yacc.c  */
 #line 9518 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1432:
-
-/* Line 1806 of yacc.c  */
 #line 9519 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1433:
-
-/* Line 1806 of yacc.c  */
 #line 9523 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1434:
-
-/* Line 1806 of yacc.c  */
 #line 9524 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1435:
-
-/* Line 1806 of yacc.c  */
 #line 9529 "gram.y"
     {
 					LockingClause *n = makeNode(LockingClause);
@@ -34176,114 +31953,86 @@
 					n->strength = (yyvsp[(1) - (3)].ival);
 					n->noWait = (yyvsp[(3) - (3)].boolean);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1436:
-
-/* Line 1806 of yacc.c  */
 #line 9539 "gram.y"
-    { (yyval.ival) = LCS_FORUPDATE; }
+    { (yyval.ival) = LCS_FORUPDATE; ;}
     break;
 
   case 1437:
-
-/* Line 1806 of yacc.c  */
 #line 9540 "gram.y"
-    { (yyval.ival) = LCS_FORNOKEYUPDATE; }
+    { (yyval.ival) = LCS_FORNOKEYUPDATE; ;}
     break;
 
   case 1438:
-
-/* Line 1806 of yacc.c  */
 #line 9541 "gram.y"
-    { (yyval.ival) = LCS_FORSHARE; }
+    { (yyval.ival) = LCS_FORSHARE; ;}
     break;
 
   case 1439:
-
-/* Line 1806 of yacc.c  */
 #line 9542 "gram.y"
-    { (yyval.ival) = LCS_FORKEYSHARE; }
+    { (yyval.ival) = LCS_FORKEYSHARE; ;}
     break;
 
   case 1440:
-
-/* Line 1806 of yacc.c  */
 #line 9546 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1441:
-
-/* Line 1806 of yacc.c  */
 #line 9547 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1442:
-
-/* Line 1806 of yacc.c  */
 #line 9553 "gram.y"
     {
 					SelectStmt *n = makeNode(SelectStmt);
 					n->valuesLists = list_make1((yyvsp[(2) - (2)].list));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1443:
-
-/* Line 1806 of yacc.c  */
 #line 9559 "gram.y"
     {
 					SelectStmt *n = (SelectStmt *) (yyvsp[(1) - (3)].node);
 					n->valuesLists = lappend(n->valuesLists, (yyvsp[(3) - (3)].list));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1444:
-
-/* Line 1806 of yacc.c  */
 #line 9576 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1445:
-
-/* Line 1806 of yacc.c  */
 #line 9577 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1446:
-
-/* Line 1806 of yacc.c  */
 #line 9581 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1447:
-
-/* Line 1806 of yacc.c  */
 #line 9582 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1448:
-
-/* Line 1806 of yacc.c  */
 #line 9589 "gram.y"
     {
 					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
 					(yyval.node) = (Node *) (yyvsp[(1) - (2)].range);
-				}
+				;}
     break;
 
   case 1449:
-
-/* Line 1806 of yacc.c  */
 #line 9594 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
@@ -34292,12 +32041,10 @@
 					n->alias = linitial((yyvsp[(2) - (2)].list));
 					n->coldeflist = lsecond((yyvsp[(2) - (2)].list));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1450:
-
-/* Line 1806 of yacc.c  */
 #line 9603 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
@@ -34306,12 +32053,10 @@
 					n->alias = linitial((yyvsp[(3) - (3)].list));
 					n->coldeflist = lsecond((yyvsp[(3) - (3)].list));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1451:
-
-/* Line 1806 of yacc.c  */
 #line 9612 "gram.y"
     {
 					RangeSubselect *n = makeNode(RangeSubselect);
@@ -34346,12 +32091,10 @@
 									 parser_errposition((yylsp[(1) - (2)]))));
 					}
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1452:
-
-/* Line 1806 of yacc.c  */
 #line 9647 "gram.y"
     {
 					RangeSubselect *n = makeNode(RangeSubselect);
@@ -34376,40 +32119,32 @@
 									 parser_errposition((yylsp[(2) - (3)]))));
 					}
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1453:
-
-/* Line 1806 of yacc.c  */
 #line 9672 "gram.y"
     {
 					(yyval.node) = (Node *) (yyvsp[(1) - (1)].jexpr);
-				}
+				;}
     break;
 
   case 1454:
-
-/* Line 1806 of yacc.c  */
 #line 9676 "gram.y"
     {
 					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
 					(yyval.node) = (Node *) (yyvsp[(2) - (4)].jexpr);
-				}
+				;}
     break;
 
   case 1455:
-
-/* Line 1806 of yacc.c  */
 #line 9702 "gram.y"
     {
 					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
-				}
+				;}
     break;
 
   case 1456:
-
-/* Line 1806 of yacc.c  */
 #line 9706 "gram.y"
     {
 					/* CROSS JOIN is same as unqualified inner join */
@@ -34421,12 +32156,10 @@
 					n->usingClause = NIL;
 					n->quals = NULL;
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1457:
-
-/* Line 1806 of yacc.c  */
 #line 9718 "gram.y"
     {
 					JoinExpr *n = makeNode(JoinExpr);
@@ -34439,12 +32172,10 @@
 					else
 						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1458:
-
-/* Line 1806 of yacc.c  */
 #line 9731 "gram.y"
     {
 					/* letting join_type reduce to empty doesn't work */
@@ -34458,12 +32189,10 @@
 					else
 						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1459:
-
-/* Line 1806 of yacc.c  */
 #line 9745 "gram.y"
     {
 					JoinExpr *n = makeNode(JoinExpr);
@@ -34474,12 +32203,10 @@
 					n->usingClause = NIL; /* figure out which columns later... */
 					n->quals = NULL; /* fill later */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1460:
-
-/* Line 1806 of yacc.c  */
 #line 9756 "gram.y"
     {
 					/* letting join_type reduce to empty doesn't work */
@@ -34491,296 +32218,230 @@
 					n->usingClause = NIL; /* figure out which columns later... */
 					n->quals = NULL; /* fill later */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1461:
-
-/* Line 1806 of yacc.c  */
 #line 9771 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
 					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
-				}
+				;}
     break;
 
   case 1462:
-
-/* Line 1806 of yacc.c  */
 #line 9777 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
-				}
+				;}
     break;
 
   case 1463:
-
-/* Line 1806 of yacc.c  */
 #line 9782 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
 					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
-				}
+				;}
     break;
 
   case 1464:
-
-/* Line 1806 of yacc.c  */
 #line 9788 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
-				}
+				;}
     break;
 
   case 1465:
-
-/* Line 1806 of yacc.c  */
 #line 9794 "gram.y"
-    { (yyval.alias) = (yyvsp[(1) - (1)].alias); }
+    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
     break;
 
   case 1466:
-
-/* Line 1806 of yacc.c  */
 #line 9795 "gram.y"
-    { (yyval.alias) = NULL; }
+    { (yyval.alias) = NULL; ;}
     break;
 
   case 1467:
-
-/* Line 1806 of yacc.c  */
 #line 9804 "gram.y"
     {
 					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
-				}
+				;}
     break;
 
   case 1468:
-
-/* Line 1806 of yacc.c  */
 #line 9808 "gram.y"
     {
 					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
-				}
+				;}
     break;
 
   case 1469:
-
-/* Line 1806 of yacc.c  */
 #line 9812 "gram.y"
     {
 					Alias *a = makeNode(Alias);
 					a->aliasname = (yyvsp[(2) - (5)].str);
 					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
-				}
+				;}
     break;
 
   case 1470:
-
-/* Line 1806 of yacc.c  */
 #line 9818 "gram.y"
     {
 					Alias *a = makeNode(Alias);
 					a->aliasname = (yyvsp[(1) - (4)].str);
 					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
-				}
+				;}
     break;
 
   case 1471:
-
-/* Line 1806 of yacc.c  */
 #line 9824 "gram.y"
     {
 					(yyval.list) = list_make2(NULL, NIL);
-				}
+				;}
     break;
 
   case 1472:
-
-/* Line 1806 of yacc.c  */
 #line 9829 "gram.y"
-    { (yyval.jtype) = JOIN_FULL; }
+    { (yyval.jtype) = JOIN_FULL; ;}
     break;
 
   case 1473:
-
-/* Line 1806 of yacc.c  */
 #line 9830 "gram.y"
-    { (yyval.jtype) = JOIN_LEFT; }
+    { (yyval.jtype) = JOIN_LEFT; ;}
     break;
 
   case 1474:
-
-/* Line 1806 of yacc.c  */
 #line 9831 "gram.y"
-    { (yyval.jtype) = JOIN_RIGHT; }
+    { (yyval.jtype) = JOIN_RIGHT; ;}
     break;
 
   case 1475:
-
-/* Line 1806 of yacc.c  */
 #line 9832 "gram.y"
-    { (yyval.jtype) = JOIN_INNER; }
+    { (yyval.jtype) = JOIN_INNER; ;}
     break;
 
   case 1476:
-
-/* Line 1806 of yacc.c  */
 #line 9836 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1477:
-
-/* Line 1806 of yacc.c  */
 #line 9837 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1478:
-
-/* Line 1806 of yacc.c  */
 #line 9849 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(3) - (4)].list); }
+    { (yyval.node) = (Node *) (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1479:
-
-/* Line 1806 of yacc.c  */
 #line 9850 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1480:
-
-/* Line 1806 of yacc.c  */
 #line 9856 "gram.y"
     {
 					/* default inheritance */
 					(yyval.range) = (yyvsp[(1) - (1)].range);
 					(yyval.range)->inhOpt = INH_DEFAULT;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1481:
-
-/* Line 1806 of yacc.c  */
 #line 9863 "gram.y"
     {
 					/* inheritance query */
 					(yyval.range) = (yyvsp[(1) - (2)].range);
 					(yyval.range)->inhOpt = INH_YES;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1482:
-
-/* Line 1806 of yacc.c  */
 #line 9870 "gram.y"
     {
 					/* no inheritance */
 					(yyval.range) = (yyvsp[(2) - (2)].range);
 					(yyval.range)->inhOpt = INH_NO;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1483:
-
-/* Line 1806 of yacc.c  */
 #line 9877 "gram.y"
     {
 					/* no inheritance, SQL99-style syntax */
 					(yyval.range) = (yyvsp[(3) - (4)].range);
 					(yyval.range)->inhOpt = INH_NO;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1484:
-
-/* Line 1806 of yacc.c  */
 #line 9887 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
     break;
 
   case 1485:
-
-/* Line 1806 of yacc.c  */
 #line 9888 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
     break;
 
   case 1486:
-
-/* Line 1806 of yacc.c  */
 #line 9902 "gram.y"
     {
 					(yyval.range) = (yyvsp[(1) - (1)].range);
-				}
+				;}
     break;
 
   case 1487:
-
-/* Line 1806 of yacc.c  */
 #line 9906 "gram.y"
     {
 					Alias *alias = makeNode(Alias);
 					alias->aliasname = (yyvsp[(2) - (2)].str);
 					(yyvsp[(1) - (2)].range)->alias = alias;
 					(yyval.range) = (yyvsp[(1) - (2)].range);
-				}
+				;}
     break;
 
   case 1488:
-
-/* Line 1806 of yacc.c  */
 #line 9913 "gram.y"
     {
 					Alias *alias = makeNode(Alias);
 					alias->aliasname = (yyvsp[(3) - (3)].str);
 					(yyvsp[(1) - (3)].range)->alias = alias;
 					(yyval.range) = (yyvsp[(1) - (3)].range);
-				}
+				;}
     break;
 
   case 1489:
-
-/* Line 1806 of yacc.c  */
 #line 9922 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1490:
-
-/* Line 1806 of yacc.c  */
 #line 9927 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1491:
-
-/* Line 1806 of yacc.c  */
 #line 9928 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1492:
-
-/* Line 1806 of yacc.c  */
 #line 9933 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1493:
-
-/* Line 1806 of yacc.c  */
 #line 9935 "gram.y"
     {
 					CurrentOfExpr *n = makeNode(CurrentOfExpr);
@@ -34788,51 +32449,39 @@
 					n->cursor_name = (yyvsp[(4) - (4)].str);
 					n->cursor_param = 0;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1494:
-
-/* Line 1806 of yacc.c  */
 #line 9942 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1495:
-
-/* Line 1806 of yacc.c  */
 #line 9947 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1496:
-
-/* Line 1806 of yacc.c  */
 #line 9948 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1497:
-
-/* Line 1806 of yacc.c  */
 #line 9953 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 1498:
-
-/* Line 1806 of yacc.c  */
 #line 9957 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1499:
-
-/* Line 1806 of yacc.c  */
 #line 9963 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -34849,141 +32498,109 @@
 					n->collOid = InvalidOid;
 					n->constraints = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1500:
-
-/* Line 1806 of yacc.c  */
 #line 9992 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
 					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
-				}
+				;}
     break;
 
   case 1501:
-
-/* Line 1806 of yacc.c  */
 #line 9997 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
 					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
 					(yyval.typnam)->setof = TRUE;
-				}
+				;}
     break;
 
   case 1502:
-
-/* Line 1806 of yacc.c  */
 #line 10004 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
-				}
+				;}
     break;
 
   case 1503:
-
-/* Line 1806 of yacc.c  */
 #line 10009 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
 					(yyval.typnam)->setof = TRUE;
-				}
+				;}
     break;
 
   case 1504:
-
-/* Line 1806 of yacc.c  */
 #line 10015 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
-				}
+				;}
     break;
 
   case 1505:
-
-/* Line 1806 of yacc.c  */
 #line 10020 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
 					(yyval.typnam)->setof = TRUE;
-				}
+				;}
     break;
 
   case 1506:
-
-/* Line 1806 of yacc.c  */
 #line 10029 "gram.y"
-    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); }
+    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
     break;
 
   case 1507:
-
-/* Line 1806 of yacc.c  */
 #line 10031 "gram.y"
-    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); }
+    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
     break;
 
   case 1508:
-
-/* Line 1806 of yacc.c  */
 #line 10033 "gram.y"
-    {  (yyval.list) = NIL; }
+    {  (yyval.list) = NIL; ;}
     break;
 
   case 1509:
-
-/* Line 1806 of yacc.c  */
 #line 10037 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1510:
-
-/* Line 1806 of yacc.c  */
 #line 10038 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1511:
-
-/* Line 1806 of yacc.c  */
 #line 10039 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1512:
-
-/* Line 1806 of yacc.c  */
 #line 10040 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1513:
-
-/* Line 1806 of yacc.c  */
 #line 10041 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1514:
-
-/* Line 1806 of yacc.c  */
 #line 10043 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
-				}
+				;}
     break;
 
   case 1515:
-
-/* Line 1806 of yacc.c  */
 #line 10048 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
@@ -34999,189 +32616,149 @@
 					else
 						(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 												 makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
-				}
+				;}
     break;
 
   case 1516:
-
-/* Line 1806 of yacc.c  */
 #line 10077 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1517:
-
-/* Line 1806 of yacc.c  */
 #line 10078 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1518:
-
-/* Line 1806 of yacc.c  */
 #line 10079 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1519:
-
-/* Line 1806 of yacc.c  */
 #line 10080 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1520:
-
-/* Line 1806 of yacc.c  */
 #line 10092 "gram.y"
     {
 					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1521:
-
-/* Line 1806 of yacc.c  */
 #line 10098 "gram.y"
     {
 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
 					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (3)]);
-				}
+				;}
     break;
 
   case 1522:
-
-/* Line 1806 of yacc.c  */
 #line 10105 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1523:
-
-/* Line 1806 of yacc.c  */
 #line 10106 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1524:
-
-/* Line 1806 of yacc.c  */
 #line 10113 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int4");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1525:
-
-/* Line 1806 of yacc.c  */
 #line 10118 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int4");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1526:
-
-/* Line 1806 of yacc.c  */
 #line 10123 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int2");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1527:
-
-/* Line 1806 of yacc.c  */
 #line 10128 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int8");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1528:
-
-/* Line 1806 of yacc.c  */
 #line 10133 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("float4");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1529:
-
-/* Line 1806 of yacc.c  */
 #line 10138 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1530:
-
-/* Line 1806 of yacc.c  */
 #line 10143 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("float8");
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1531:
-
-/* Line 1806 of yacc.c  */
 #line 10148 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("numeric");
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1532:
-
-/* Line 1806 of yacc.c  */
 #line 10154 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("numeric");
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1533:
-
-/* Line 1806 of yacc.c  */
 #line 10160 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("numeric");
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1534:
-
-/* Line 1806 of yacc.c  */
 #line 10166 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("bool");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1535:
-
-/* Line 1806 of yacc.c  */
 #line 10173 "gram.y"
     {
 					/*
@@ -35202,58 +32779,46 @@
 								(errcode(ERRCODE_INVALID_PARAMETER_VALUE),
 								 errmsg("precision for type float must be less than 54 bits"),
 								 parser_errposition((yylsp[(2) - (3)]))));
-				}
+				;}
     break;
 
   case 1536:
-
-/* Line 1806 of yacc.c  */
 #line 10194 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("float8");
-				}
+				;}
     break;
 
   case 1537:
-
-/* Line 1806 of yacc.c  */
 #line 10204 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1538:
-
-/* Line 1806 of yacc.c  */
 #line 10208 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1539:
-
-/* Line 1806 of yacc.c  */
 #line 10216 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1540:
-
-/* Line 1806 of yacc.c  */
 #line 10220 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
 					(yyval.typnam)->typmods = NIL;
-				}
+				;}
     break;
 
   case 1541:
-
-/* Line 1806 of yacc.c  */
 #line 10228 "gram.y"
     {
 					char *typname;
@@ -35262,12 +32827,10 @@
 					(yyval.typnam) = SystemTypeName(typname);
 					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1542:
-
-/* Line 1806 of yacc.c  */
 #line 10240 "gram.y"
     {
 					/* bit defaults to bit(1), varbit to no limit */
@@ -35281,39 +32844,31 @@
 						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
 					}
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1543:
-
-/* Line 1806 of yacc.c  */
 #line 10261 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1544:
-
-/* Line 1806 of yacc.c  */
 #line 10265 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1545:
-
-/* Line 1806 of yacc.c  */
 #line 10271 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1546:
-
-/* Line 1806 of yacc.c  */
 #line 10275 "gram.y"
     {
 					/* Length was not specified so allow to be unrestricted.
@@ -35324,12 +32879,10 @@
 					 */
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
 					(yyval.typnam)->typmods = NIL;
-				}
+				;}
     break;
 
   case 1547:
-
-/* Line 1806 of yacc.c  */
 #line 10288 "gram.y"
     {
 					if (((yyvsp[(5) - (5)].str) != NULL) && (strcmp((yyvsp[(5) - (5)].str), "sql_text") != 0))
@@ -35346,12 +32899,10 @@
 					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (5)].str));
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1548:
-
-/* Line 1806 of yacc.c  */
 #line 10307 "gram.y"
     {
 					if (((yyvsp[(2) - (2)].str) != NULL) && (strcmp((yyvsp[(2) - (2)].str), "sql_text") != 0))
@@ -35372,82 +32923,60 @@
 						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
 
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1549:
-
-/* Line 1806 of yacc.c  */
 #line 10330 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1550:
-
-/* Line 1806 of yacc.c  */
 #line 10332 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1551:
-
-/* Line 1806 of yacc.c  */
 #line 10334 "gram.y"
-    { (yyval.str) = "varchar"; }
+    { (yyval.str) = "varchar"; ;}
     break;
 
   case 1552:
-
-/* Line 1806 of yacc.c  */
 #line 10336 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1553:
-
-/* Line 1806 of yacc.c  */
 #line 10338 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1554:
-
-/* Line 1806 of yacc.c  */
 #line 10340 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1555:
-
-/* Line 1806 of yacc.c  */
 #line 10344 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1556:
-
-/* Line 1806 of yacc.c  */
 #line 10345 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1557:
-
-/* Line 1806 of yacc.c  */
 #line 10349 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 1558:
-
-/* Line 1806 of yacc.c  */
 #line 10350 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1559:
-
-/* Line 1806 of yacc.c  */
 #line 10358 "gram.y"
     {
 					if ((yyvsp[(5) - (5)].boolean))
@@ -35456,12 +32985,10 @@
 						(yyval.typnam) = SystemTypeName("timestamp");
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1560:
-
-/* Line 1806 of yacc.c  */
 #line 10367 "gram.y"
     {
 					if ((yyvsp[(2) - (2)].boolean))
@@ -35469,12 +32996,10 @@
 					else
 						(yyval.typnam) = SystemTypeName("timestamp");
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1561:
-
-/* Line 1806 of yacc.c  */
 #line 10375 "gram.y"
     {
 					if ((yyvsp[(5) - (5)].boolean))
@@ -35483,12 +33008,10 @@
 						(yyval.typnam) = SystemTypeName("time");
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1562:
-
-/* Line 1806 of yacc.c  */
 #line 10384 "gram.y"
     {
 					if ((yyvsp[(2) - (2)].boolean))
@@ -35496,116 +33019,88 @@
 					else
 						(yyval.typnam) = SystemTypeName("time");
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1563:
-
-/* Line 1806 of yacc.c  */
 #line 10395 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("interval");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1564:
-
-/* Line 1806 of yacc.c  */
 #line 10402 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1565:
-
-/* Line 1806 of yacc.c  */
 #line 10403 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1566:
-
-/* Line 1806 of yacc.c  */
 #line 10404 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1567:
-
-/* Line 1806 of yacc.c  */
 #line 10409 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1568:
-
-/* Line 1806 of yacc.c  */
 #line 10411 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1569:
-
-/* Line 1806 of yacc.c  */
 #line 10413 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1570:
-
-/* Line 1806 of yacc.c  */
 #line 10415 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1571:
-
-/* Line 1806 of yacc.c  */
 #line 10417 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1572:
-
-/* Line 1806 of yacc.c  */
 #line 10419 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1573:
-
-/* Line 1806 of yacc.c  */
 #line 10421 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
 												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1574:
-
-/* Line 1806 of yacc.c  */
 #line 10426 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
 												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1575:
-
-/* Line 1806 of yacc.c  */
 #line 10431 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
 												 INTERVAL_MASK(HOUR) |
 												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1576:
-
-/* Line 1806 of yacc.c  */
 #line 10437 "gram.y"
     {
 					(yyval.list) = (yyvsp[(3) - (3)].list);
@@ -35613,85 +33108,67 @@
 												INTERVAL_MASK(HOUR) |
 												INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1577:
-
-/* Line 1806 of yacc.c  */
 #line 10445 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
 												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1578:
-
-/* Line 1806 of yacc.c  */
 #line 10450 "gram.y"
     {
 					(yyval.list) = (yyvsp[(3) - (3)].list);
 					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
 												INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1579:
-
-/* Line 1806 of yacc.c  */
 #line 10457 "gram.y"
     {
 					(yyval.list) = (yyvsp[(3) - (3)].list);
 					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1580:
-
-/* Line 1806 of yacc.c  */
 #line 10463 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1581:
-
-/* Line 1806 of yacc.c  */
 #line 10468 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
-				}
+				;}
     break;
 
   case 1582:
-
-/* Line 1806 of yacc.c  */
 #line 10472 "gram.y"
     {
 					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
 									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
-				}
+				;}
     break;
 
   case 1583:
-
-/* Line 1806 of yacc.c  */
 #line 10501 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1584:
-
-/* Line 1806 of yacc.c  */
 #line 10503 "gram.y"
-    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); }
+    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1585:
-
-/* Line 1806 of yacc.c  */
 #line 10505 "gram.y"
     {
 					CollateClause *n = makeNode(CollateClause);
@@ -35699,12 +33176,10 @@
 					n->collname = (yyvsp[(3) - (3)].list);
 					n->location = (yylsp[(2) - (3)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1586:
-
-/* Line 1806 of yacc.c  */
 #line 10513 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35717,138 +33192,100 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1587:
-
-/* Line 1806 of yacc.c  */
 #line 10535 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1588:
-
-/* Line 1806 of yacc.c  */
 #line 10537 "gram.y"
-    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1589:
-
-/* Line 1806 of yacc.c  */
 #line 10539 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1590:
-
-/* Line 1806 of yacc.c  */
 #line 10541 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1591:
-
-/* Line 1806 of yacc.c  */
 #line 10543 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1592:
-
-/* Line 1806 of yacc.c  */
 #line 10545 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1593:
-
-/* Line 1806 of yacc.c  */
 #line 10547 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1594:
-
-/* Line 1806 of yacc.c  */
 #line 10549 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1595:
-
-/* Line 1806 of yacc.c  */
 #line 10551 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1596:
-
-/* Line 1806 of yacc.c  */
 #line 10553 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1597:
-
-/* Line 1806 of yacc.c  */
 #line 10555 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1598:
-
-/* Line 1806 of yacc.c  */
 #line 10558 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1599:
-
-/* Line 1806 of yacc.c  */
 #line 10560 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1600:
-
-/* Line 1806 of yacc.c  */
 #line 10562 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
     break;
 
   case 1601:
-
-/* Line 1806 of yacc.c  */
 #line 10565 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1602:
-
-/* Line 1806 of yacc.c  */
 #line 10567 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1603:
-
-/* Line 1806 of yacc.c  */
 #line 10569 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1604:
-
-/* Line 1806 of yacc.c  */
 #line 10572 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1605:
-
-/* Line 1806 of yacc.c  */
 #line 10574 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35861,19 +33298,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[(1) - (5)].node), (Node *) n, (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1606:
-
-/* Line 1806 of yacc.c  */
 #line 10587 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); ;}
     break;
 
   case 1607:
-
-/* Line 1806 of yacc.c  */
 #line 10589 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35886,19 +33319,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (6)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[(1) - (6)].node), (Node *) n, (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1608:
-
-/* Line 1806 of yacc.c  */
 #line 10602 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1609:
-
-/* Line 1806 of yacc.c  */
 #line 10604 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35911,19 +33340,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[(1) - (5)].node), (Node *) n, (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1610:
-
-/* Line 1806 of yacc.c  */
 #line 10617 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); ;}
     break;
 
   case 1611:
-
-/* Line 1806 of yacc.c  */
 #line 10619 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35936,12 +33361,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (6)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[(1) - (6)].node), (Node *) n, (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1612:
-
-/* Line 1806 of yacc.c  */
 #line 10633 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35954,12 +33377,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (4)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[(1) - (4)].node), (Node *) n, (yylsp[(2) - (4)]));
-				}
+				;}
     break;
 
   case 1613:
-
-/* Line 1806 of yacc.c  */
 #line 10646 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35972,12 +33393,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (6)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[(1) - (6)].node), (Node *) n, (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1614:
-
-/* Line 1806 of yacc.c  */
 #line 10659 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35990,12 +33409,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[(1) - (5)].node), (Node *) n, (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1615:
-
-/* Line 1806 of yacc.c  */
 #line 10672 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36008,60 +33425,50 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (7)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[(1) - (7)].node), (Node *) n, (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1616:
-
-/* Line 1806 of yacc.c  */
 #line 10695 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					n->nulltesttype = IS_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1617:
-
-/* Line 1806 of yacc.c  */
 #line 10702 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (2)].node);
 					n->nulltesttype = IS_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1618:
-
-/* Line 1806 of yacc.c  */
 #line 10709 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					n->nulltesttype = IS_NOT_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1619:
-
-/* Line 1806 of yacc.c  */
 #line 10716 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (2)].node);
 					n->nulltesttype = IS_NOT_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1620:
-
-/* Line 1806 of yacc.c  */
 #line 10723 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36084,93 +33491,77 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (3)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1621:
-
-/* Line 1806 of yacc.c  */
 #line 10746 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					b->booltesttype = IS_TRUE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1622:
-
-/* Line 1806 of yacc.c  */
 #line 10753 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					b->booltesttype = IS_NOT_TRUE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1623:
-
-/* Line 1806 of yacc.c  */
 #line 10760 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					b->booltesttype = IS_FALSE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1624:
-
-/* Line 1806 of yacc.c  */
 #line 10767 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					b->booltesttype = IS_NOT_FALSE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1625:
-
-/* Line 1806 of yacc.c  */
 #line 10774 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					b->booltesttype = IS_UNKNOWN;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1626:
-
-/* Line 1806 of yacc.c  */
 #line 10781 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					b->booltesttype = IS_NOT_UNKNOWN;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1627:
-
-/* Line 1806 of yacc.c  */
 #line 10788 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1628:
-
-/* Line 1806 of yacc.c  */
 #line 10792 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
@@ -36178,54 +33569,44 @@
 															  "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)])),
 											 (yylsp[(2) - (6)]));
 
-				}
+				;}
     break;
 
   case 1629:
-
-/* Line 1806 of yacc.c  */
 #line 10800 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (Node *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1630:
-
-/* Line 1806 of yacc.c  */
 #line 10804 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (Node *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1631:
-
-/* Line 1806 of yacc.c  */
 #line 10814 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
 						(Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yylsp[(2) - (6)])),
 						(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)])),
 											 (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1632:
-
-/* Line 1806 of yacc.c  */
 #line 10821 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
 						(Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (7)].node), (yyvsp[(5) - (7)].node), (yylsp[(2) - (7)])),
 						(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (7)].node), (yyvsp[(7) - (7)].node), (yylsp[(2) - (7)])),
 											 (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1633:
-
-/* Line 1806 of yacc.c  */
 #line 10828 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
@@ -36238,12 +33619,10 @@
 							(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yylsp[(2) - (6)])),
 											(yylsp[(2) - (6)])),
 											 (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1634:
-
-/* Line 1806 of yacc.c  */
 #line 10841 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
@@ -36256,12 +33635,10 @@
 							(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (7)].node), (yyvsp[(5) - (7)].node), (yylsp[(2) - (7)])),
 											(yylsp[(2) - (7)])),
 											 (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1635:
-
-/* Line 1806 of yacc.c  */
 #line 10854 "gram.y"
     {
 					/* in_expr returns a SubLink or a list of a_exprs */
@@ -36280,12 +33657,10 @@
 						/* generate scalar IN expression */
 						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
 					}
-				}
+				;}
     break;
 
   case 1636:
-
-/* Line 1806 of yacc.c  */
 #line 10873 "gram.y"
     {
 					/* in_expr returns a SubLink or a list of a_exprs */
@@ -36306,12 +33681,10 @@
 						/* generate scalar NOT IN expression */
 						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
 					}
-				}
+				;}
     break;
 
   case 1637:
-
-/* Line 1806 of yacc.c  */
 #line 10894 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -36321,24 +33694,20 @@
 					n->subselect = (yyvsp[(4) - (4)].node);
 					n->location = (yylsp[(2) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1638:
-
-/* Line 1806 of yacc.c  */
 #line 10904 "gram.y"
     {
 					if ((yyvsp[(3) - (6)].ival) == ANY_SUBLINK)
 						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
 					else
 						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1639:
-
-/* Line 1806 of yacc.c  */
 #line 10911 "gram.y"
     {
 					/* Not sure how to get rid of the parentheses
@@ -36354,219 +33723,165 @@
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("UNIQUE predicate is not yet implemented"),
 							 parser_errposition((yylsp[(1) - (2)]))));
-				}
+				;}
     break;
 
   case 1640:
-
-/* Line 1806 of yacc.c  */
 #line 10927 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 									 list_make1((yyvsp[(1) - (3)].node)), (yylsp[(2) - (3)]));
-				}
+				;}
     break;
 
   case 1641:
-
-/* Line 1806 of yacc.c  */
 #line 10932 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
 											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 														 list_make1((yyvsp[(1) - (4)].node)), (yylsp[(2) - (4)])),
 											 (yylsp[(2) - (4)]));
-				}
+				;}
     break;
 
   case 1642:
-
-/* Line 1806 of yacc.c  */
 #line 10950 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1643:
-
-/* Line 1806 of yacc.c  */
 #line 10952 "gram.y"
-    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); }
+    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1644:
-
-/* Line 1806 of yacc.c  */
 #line 10954 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1645:
-
-/* Line 1806 of yacc.c  */
 #line 10956 "gram.y"
-    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1646:
-
-/* Line 1806 of yacc.c  */
 #line 10958 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1647:
-
-/* Line 1806 of yacc.c  */
 #line 10960 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1648:
-
-/* Line 1806 of yacc.c  */
 #line 10962 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1649:
-
-/* Line 1806 of yacc.c  */
 #line 10964 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1650:
-
-/* Line 1806 of yacc.c  */
 #line 10966 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1651:
-
-/* Line 1806 of yacc.c  */
 #line 10968 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1652:
-
-/* Line 1806 of yacc.c  */
 #line 10970 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1653:
-
-/* Line 1806 of yacc.c  */
 #line 10972 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1654:
-
-/* Line 1806 of yacc.c  */
 #line 10974 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1655:
-
-/* Line 1806 of yacc.c  */
 #line 10976 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1656:
-
-/* Line 1806 of yacc.c  */
 #line 10978 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1657:
-
-/* Line 1806 of yacc.c  */
 #line 10980 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
     break;
 
   case 1658:
-
-/* Line 1806 of yacc.c  */
 #line 10982 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1659:
-
-/* Line 1806 of yacc.c  */
 #line 10986 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL,
 						NULL, (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)])), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1660:
-
-/* Line 1806 of yacc.c  */
 #line 10991 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (Node *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1661:
-
-/* Line 1806 of yacc.c  */
 #line 10995 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (Node *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1662:
-
-/* Line 1806 of yacc.c  */
 #line 10999 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 									 list_make1((yyvsp[(1) - (3)].node)), (yylsp[(2) - (3)]));
-				}
+				;}
     break;
 
   case 1663:
-
-/* Line 1806 of yacc.c  */
 #line 11004 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
 											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 														 list_make1((yyvsp[(1) - (4)].node)), (yylsp[(2) - (4)])),
 											 (yylsp[(2) - (4)]));
-				}
+				;}
     break;
 
   case 1664:
-
-/* Line 1806 of yacc.c  */
 #line 11020 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1665:
-
-/* Line 1806 of yacc.c  */
 #line 11021 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1666:
-
-/* Line 1806 of yacc.c  */
 #line 11023 "gram.y"
     {
 					ParamRef *p = makeNode(ParamRef);
@@ -36581,12 +33896,10 @@
 					}
 					else
 						(yyval.node) = (Node *) p;
-				}
+				;}
     break;
 
   case 1667:
-
-/* Line 1806 of yacc.c  */
 #line 11038 "gram.y"
     {
 					if ((yyvsp[(4) - (4)].list))
@@ -36598,26 +33911,20 @@
 					}
 					else
 						(yyval.node) = (yyvsp[(2) - (4)].node);
-				}
+				;}
     break;
 
   case 1668:
-
-/* Line 1806 of yacc.c  */
 #line 11050 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1669:
-
-/* Line 1806 of yacc.c  */
 #line 11052 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1670:
-
-/* Line 1806 of yacc.c  */
 #line 11054 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -36627,12 +33934,10 @@
 					n->subselect = (yyvsp[(1) - (1)].node);
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1671:
-
-/* Line 1806 of yacc.c  */
 #line 11064 "gram.y"
     {
 					/*
@@ -36655,12 +33960,10 @@
 					a->arg = (Node *)n;
 					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.node) = (Node *)a;
-				}
+				;}
     break;
 
   case 1672:
-
-/* Line 1806 of yacc.c  */
 #line 11087 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -36670,12 +33973,10 @@
 					n->subselect = (yyvsp[(2) - (2)].node);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1673:
-
-/* Line 1806 of yacc.c  */
 #line 11097 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -36685,12 +33986,10 @@
 					n->subselect = (yyvsp[(2) - (2)].node);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1674:
-
-/* Line 1806 of yacc.c  */
 #line 11107 "gram.y"
     {
 					A_ArrayExpr *n = (A_ArrayExpr *) (yyvsp[(2) - (2)].node);
@@ -36698,12 +33997,10 @@
 					/* point outermost A_ArrayExpr to the ARRAY keyword */
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1675:
-
-/* Line 1806 of yacc.c  */
 #line 11115 "gram.y"
     {
 					RowExpr *r = makeNode(RowExpr);
@@ -36712,12 +34009,10 @@
 					r->colnames = NIL;	/* to be filled in during analysis */
 					r->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)r;
-				}
+				;}
     break;
 
   case 1676:
-
-/* Line 1806 of yacc.c  */
 #line 11134 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36730,12 +34025,10 @@
 					n->over = (yyvsp[(4) - (4)].windef);
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1677:
-
-/* Line 1806 of yacc.c  */
 #line 11147 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36748,12 +34041,10 @@
 					n->over = (yyvsp[(5) - (5)].windef);
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1678:
-
-/* Line 1806 of yacc.c  */
 #line 11160 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36766,12 +34057,10 @@
 					n->over = (yyvsp[(6) - (6)].windef);
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1679:
-
-/* Line 1806 of yacc.c  */
 #line 11173 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36784,12 +34073,10 @@
 					n->over = (yyvsp[(8) - (8)].windef);
 					n->location = (yylsp[(1) - (8)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1680:
-
-/* Line 1806 of yacc.c  */
 #line 11186 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36802,12 +34089,10 @@
 					n->over = (yyvsp[(6) - (6)].windef);
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1681:
-
-/* Line 1806 of yacc.c  */
 #line 11199 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36824,12 +34109,10 @@
 					n->over = (yyvsp[(7) - (7)].windef);
 					n->location = (yylsp[(1) - (7)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1682:
-
-/* Line 1806 of yacc.c  */
 #line 11216 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36842,12 +34125,10 @@
 					n->over = (yyvsp[(7) - (7)].windef);
 					n->location = (yylsp[(1) - (7)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1683:
-
-/* Line 1806 of yacc.c  */
 #line 11229 "gram.y"
     {
 					/*
@@ -36870,12 +34151,10 @@
 					n->over = (yyvsp[(5) - (5)].windef);
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1684:
-
-/* Line 1806 of yacc.c  */
 #line 11252 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36888,12 +34167,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1685:
-
-/* Line 1806 of yacc.c  */
 #line 11265 "gram.y"
     {
 					/*
@@ -36919,12 +34196,10 @@
 					Node *n;
 					n = makeStringConstCast("now", -1, SystemTypeName("text"));
 					(yyval.node) = makeTypeCast(n, SystemTypeName("date"), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1686:
-
-/* Line 1806 of yacc.c  */
 #line 11291 "gram.y"
     {
 					/*
@@ -36934,12 +34209,10 @@
 					Node *n;
 					n = makeStringConstCast("now", -1, SystemTypeName("text"));
 					(yyval.node) = makeTypeCast(n, SystemTypeName("timetz"), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1687:
-
-/* Line 1806 of yacc.c  */
 #line 11301 "gram.y"
     {
 					/*
@@ -36952,12 +34225,10 @@
 					d = SystemTypeName("timetz");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast(n, d, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1688:
-
-/* Line 1806 of yacc.c  */
 #line 11314 "gram.y"
     {
 					/*
@@ -36974,12 +34245,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1689:
-
-/* Line 1806 of yacc.c  */
 #line 11331 "gram.y"
     {
 					/*
@@ -36992,12 +34261,10 @@
 					d = SystemTypeName("timestamptz");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast(n, d, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1690:
-
-/* Line 1806 of yacc.c  */
 #line 11344 "gram.y"
     {
 					/*
@@ -37007,12 +34274,10 @@
 					Node *n;
 					n = makeStringConstCast("now", -1, SystemTypeName("text"));
 					(yyval.node) = makeTypeCast((Node *)n, SystemTypeName("time"), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1691:
-
-/* Line 1806 of yacc.c  */
 #line 11354 "gram.y"
     {
 					/*
@@ -37025,12 +34290,10 @@
 					d = SystemTypeName("time");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast((Node *)n, d, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1692:
-
-/* Line 1806 of yacc.c  */
 #line 11367 "gram.y"
     {
 					/*
@@ -37040,12 +34303,10 @@
 					Node *n;
 					n = makeStringConstCast("now", -1, SystemTypeName("text"));
 					(yyval.node) = makeTypeCast(n, SystemTypeName("timestamp"), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1693:
-
-/* Line 1806 of yacc.c  */
 #line 11377 "gram.y"
     {
 					/*
@@ -37058,12 +34319,10 @@
 					d = SystemTypeName("timestamp");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast(n, d, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1694:
-
-/* Line 1806 of yacc.c  */
 #line 11390 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37076,12 +34335,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1695:
-
-/* Line 1806 of yacc.c  */
 #line 11403 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37094,12 +34351,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1696:
-
-/* Line 1806 of yacc.c  */
 #line 11416 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37112,12 +34367,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1697:
-
-/* Line 1806 of yacc.c  */
 #line 11429 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37130,12 +34383,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1698:
-
-/* Line 1806 of yacc.c  */
 #line 11442 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37148,12 +34399,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1699:
-
-/* Line 1806 of yacc.c  */
 #line 11455 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37166,19 +34415,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1700:
-
-/* Line 1806 of yacc.c  */
 #line 11468 "gram.y"
-    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); }
+    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
     break;
 
   case 1701:
-
-/* Line 1806 of yacc.c  */
 #line 11470 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37191,12 +34436,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1702:
-
-/* Line 1806 of yacc.c  */
 #line 11483 "gram.y"
     {
 					/* overlay(A PLACING B FROM C FOR D) is converted to
@@ -37214,12 +34457,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1703:
-
-/* Line 1806 of yacc.c  */
 #line 11501 "gram.y"
     {
 					/* position(A in B) is converted to position(B, A) */
@@ -37233,12 +34474,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1704:
-
-/* Line 1806 of yacc.c  */
 #line 11515 "gram.y"
     {
 					/* substring(A from B for C) is converted to
@@ -37254,12 +34493,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1705:
-
-/* Line 1806 of yacc.c  */
 #line 11531 "gram.y"
     {
 					/* TREAT(expr AS target) converts expr of a particular type to target,
@@ -37281,12 +34518,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1706:
-
-/* Line 1806 of yacc.c  */
 #line 11553 "gram.y"
     {
 					/* various trim expressions are defined in SQL
@@ -37302,12 +34537,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1707:
-
-/* Line 1806 of yacc.c  */
 #line 11569 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37320,12 +34553,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1708:
-
-/* Line 1806 of yacc.c  */
 #line 11582 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37338,12 +34569,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1709:
-
-/* Line 1806 of yacc.c  */
 #line 11595 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -37356,33 +34585,27 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1710:
-
-/* Line 1806 of yacc.c  */
 #line 11608 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
-				}
+				;}
     break;
 
   case 1711:
-
-/* Line 1806 of yacc.c  */
 #line 11612 "gram.y"
     {
 					CoalesceExpr *c = makeNode(CoalesceExpr);
 					c->args = (yyvsp[(3) - (4)].list);
 					c->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)c;
-				}
+				;}
     break;
 
   case 1712:
-
-/* Line 1806 of yacc.c  */
 #line 11619 "gram.y"
     {
 					MinMaxExpr *v = makeNode(MinMaxExpr);
@@ -37390,12 +34613,10 @@
 					v->op = IS_GREATEST;
 					v->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)v;
-				}
+				;}
     break;
 
   case 1713:
-
-/* Line 1806 of yacc.c  */
 #line 11627 "gram.y"
     {
 					MinMaxExpr *v = makeNode(MinMaxExpr);
@@ -37403,57 +34624,45 @@
 					v->op = IS_LEAST;
 					v->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)v;
-				}
+				;}
     break;
 
   case 1714:
-
-/* Line 1806 of yacc.c  */
 #line 11635 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLCONCAT, NULL, NIL, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1715:
-
-/* Line 1806 of yacc.c  */
 #line 11639 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (5)].str), NIL, NIL, (yylsp[(1) - (5)]));
-				}
+				;}
     break;
 
   case 1716:
-
-/* Line 1806 of yacc.c  */
 #line 11643 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (7)].str), (yyvsp[(6) - (7)].list), NIL, (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1717:
-
-/* Line 1806 of yacc.c  */
 #line 11647 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (7)].str), NIL, (yyvsp[(6) - (7)].list), (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1718:
-
-/* Line 1806 of yacc.c  */
 #line 11651 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (9)].str), (yyvsp[(6) - (9)].list), (yyvsp[(8) - (9)].list), (yylsp[(1) - (9)]));
-				}
+				;}
     break;
 
   case 1719:
-
-/* Line 1806 of yacc.c  */
 #line 11655 "gram.y"
     {
 					/* xmlexists(A PASSING [BY REF] B [BY REF]) is
@@ -37468,21 +34677,17 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1720:
-
-/* Line 1806 of yacc.c  */
 #line 11670 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLFOREST, NULL, (yyvsp[(3) - (4)].list), NIL, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1721:
-
-/* Line 1806 of yacc.c  */
 #line 11674 "gram.y"
     {
 					XmlExpr *x = (XmlExpr *)
@@ -37491,40 +34696,32 @@
 									(yylsp[(1) - (6)]));
 					x->xmloption = (yyvsp[(3) - (6)].ival);
 					(yyval.node) = (Node *)x;
-				}
+				;}
     break;
 
   case 1722:
-
-/* Line 1806 of yacc.c  */
 #line 11683 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[(4) - (5)].str), NULL, NIL, (yylsp[(1) - (5)]));
-				}
+				;}
     break;
 
   case 1723:
-
-/* Line 1806 of yacc.c  */
 #line 11687 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[(4) - (7)].str), NULL, list_make1((yyvsp[(6) - (7)].node)), (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1724:
-
-/* Line 1806 of yacc.c  */
 #line 11691 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLROOT, NULL, NIL,
 									 list_make3((yyvsp[(3) - (7)].node), (yyvsp[(5) - (7)].node), (yyvsp[(6) - (7)].node)), (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1725:
-
-/* Line 1806 of yacc.c  */
 #line 11696 "gram.y"
     {
 					XmlSerialize *n = makeNode(XmlSerialize);
@@ -37533,75 +34730,55 @@
 					n->typeName = (yyvsp[(6) - (7)].typnam);
 					n->location = (yylsp[(1) - (7)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1726:
-
-/* Line 1806 of yacc.c  */
 #line 11710 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1727:
-
-/* Line 1806 of yacc.c  */
 #line 11712 "gram.y"
-    { (yyval.node) = makeNullAConst(-1); }
+    { (yyval.node) = makeNullAConst(-1); ;}
     break;
 
   case 1728:
-
-/* Line 1806 of yacc.c  */
 #line 11716 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_YES, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_YES, -1); ;}
     break;
 
   case 1729:
-
-/* Line 1806 of yacc.c  */
 #line 11718 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_NO, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_NO, -1); ;}
     break;
 
   case 1730:
-
-/* Line 1806 of yacc.c  */
 #line 11720 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_NO_VALUE, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_NO_VALUE, -1); ;}
     break;
 
   case 1731:
-
-/* Line 1806 of yacc.c  */
 #line 11722 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_OMITTED, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_OMITTED, -1); ;}
     break;
 
   case 1732:
-
-/* Line 1806 of yacc.c  */
 #line 11725 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1733:
-
-/* Line 1806 of yacc.c  */
 #line 11728 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1734:
-
-/* Line 1806 of yacc.c  */
 #line 11729 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1735:
-
-/* Line 1806 of yacc.c  */
 #line 11733 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -37609,12 +34786,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *) (yyvsp[(1) - (3)].node);
 					(yyval.target)->location = (yylsp[(1) - (3)]);
-				}
+				;}
     break;
 
   case 1736:
-
-/* Line 1806 of yacc.c  */
 #line 11741 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -37622,129 +34797,97 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *) (yyvsp[(1) - (1)].node);
 					(yyval.target)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1737:
-
-/* Line 1806 of yacc.c  */
 #line 11750 "gram.y"
-    { (yyval.ival) = XMLOPTION_DOCUMENT; }
+    { (yyval.ival) = XMLOPTION_DOCUMENT; ;}
     break;
 
   case 1738:
-
-/* Line 1806 of yacc.c  */
 #line 11751 "gram.y"
-    { (yyval.ival) = XMLOPTION_CONTENT; }
+    { (yyval.ival) = XMLOPTION_CONTENT; ;}
     break;
 
   case 1739:
-
-/* Line 1806 of yacc.c  */
 #line 11754 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1740:
-
-/* Line 1806 of yacc.c  */
 #line 11755 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1741:
-
-/* Line 1806 of yacc.c  */
 #line 11756 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1742:
-
-/* Line 1806 of yacc.c  */
 #line 11762 "gram.y"
     {
 					(yyval.node) = (yyvsp[(2) - (2)].node);
-				}
+				;}
     break;
 
   case 1743:
-
-/* Line 1806 of yacc.c  */
 #line 11766 "gram.y"
     {
 					(yyval.node) = (yyvsp[(2) - (4)].node);
-				}
+				;}
     break;
 
   case 1744:
-
-/* Line 1806 of yacc.c  */
 #line 11770 "gram.y"
     {
 					(yyval.node) = (yyvsp[(4) - (4)].node);
-				}
+				;}
     break;
 
   case 1745:
-
-/* Line 1806 of yacc.c  */
 #line 11774 "gram.y"
     {
 					(yyval.node) = (yyvsp[(4) - (6)].node);
-				}
+				;}
     break;
 
   case 1746:
-
-/* Line 1806 of yacc.c  */
 #line 11784 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1747:
-
-/* Line 1806 of yacc.c  */
 #line 11785 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1748:
-
-/* Line 1806 of yacc.c  */
 #line 11789 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
     break;
 
   case 1749:
-
-/* Line 1806 of yacc.c  */
 #line 11791 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
     break;
 
   case 1750:
-
-/* Line 1806 of yacc.c  */
 #line 11796 "gram.y"
     {
 					WindowDef *n = (yyvsp[(3) - (3)].windef);
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1751:
-
-/* Line 1806 of yacc.c  */
 #line 11804 "gram.y"
-    { (yyval.windef) = (yyvsp[(2) - (2)].windef); }
+    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
     break;
 
   case 1752:
-
-/* Line 1806 of yacc.c  */
 #line 11806 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -37757,19 +34900,15 @@
 					n->endOffset = NULL;
 					n->location = (yylsp[(2) - (2)]);
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1753:
-
-/* Line 1806 of yacc.c  */
 #line 11819 "gram.y"
-    { (yyval.windef) = NULL; }
+    { (yyval.windef) = NULL; ;}
     break;
 
   case 1754:
-
-/* Line 1806 of yacc.c  */
 #line 11824 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -37783,40 +34922,30 @@
 					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1755:
-
-/* Line 1806 of yacc.c  */
 #line 11849 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1756:
-
-/* Line 1806 of yacc.c  */
 #line 11850 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1757:
-
-/* Line 1806 of yacc.c  */
 #line 11853 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (3)].list); }
+    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 1758:
-
-/* Line 1806 of yacc.c  */
 #line 11854 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1759:
-
-/* Line 1806 of yacc.c  */
 #line 11866 "gram.y"
     {
 					WindowDef *n = (yyvsp[(2) - (2)].windef);
@@ -37834,23 +34963,19 @@
 								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
 								 parser_errposition((yylsp[(1) - (2)]))));
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1760:
-
-/* Line 1806 of yacc.c  */
 #line 11884 "gram.y"
     {
 					WindowDef *n = (yyvsp[(2) - (2)].windef);
 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1761:
-
-/* Line 1806 of yacc.c  */
 #line 11890 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -37858,12 +34983,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1762:
-
-/* Line 1806 of yacc.c  */
 #line 11900 "gram.y"
     {
 					WindowDef *n = (yyvsp[(1) - (1)].windef);
@@ -37880,12 +35003,10 @@
 								 parser_errposition((yylsp[(1) - (1)]))));
 					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1763:
-
-/* Line 1806 of yacc.c  */
 #line 11917 "gram.y"
     {
 					WindowDef *n1 = (yyvsp[(2) - (4)].windef);
@@ -37922,12 +35043,10 @@
 					n1->frameOptions = frameOptions;
 					n1->endOffset = n2->startOffset;
 					(yyval.windef) = n1;
-				}
+				;}
     break;
 
   case 1764:
-
-/* Line 1806 of yacc.c  */
 #line 11962 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -37935,12 +35054,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1765:
-
-/* Line 1806 of yacc.c  */
 #line 11970 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -37948,12 +35065,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1766:
-
-/* Line 1806 of yacc.c  */
 #line 11978 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -37961,12 +35076,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1767:
-
-/* Line 1806 of yacc.c  */
 #line 11986 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -37974,12 +35087,10 @@
 					n->startOffset = (yyvsp[(1) - (2)].node);
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1768:
-
-/* Line 1806 of yacc.c  */
 #line 11994 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -37987,246 +35098,180 @@
 					n->startOffset = (yyvsp[(1) - (2)].node);
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1769:
-
-/* Line 1806 of yacc.c  */
 #line 12014 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1770:
-
-/* Line 1806 of yacc.c  */
 #line 12015 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1771:
-
-/* Line 1806 of yacc.c  */
 #line 12016 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); }
+    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
     break;
 
   case 1772:
-
-/* Line 1806 of yacc.c  */
 #line 12019 "gram.y"
-    { (yyval.ival) = ANY_SUBLINK; }
+    { (yyval.ival) = ANY_SUBLINK; ;}
     break;
 
   case 1773:
-
-/* Line 1806 of yacc.c  */
 #line 12020 "gram.y"
-    { (yyval.ival) = ANY_SUBLINK; }
+    { (yyval.ival) = ANY_SUBLINK; ;}
     break;
 
   case 1774:
-
-/* Line 1806 of yacc.c  */
 #line 12021 "gram.y"
-    { (yyval.ival) = ALL_SUBLINK; }
+    { (yyval.ival) = ALL_SUBLINK; ;}
     break;
 
   case 1775:
-
-/* Line 1806 of yacc.c  */
 #line 12024 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1776:
-
-/* Line 1806 of yacc.c  */
 #line 12025 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1777:
-
-/* Line 1806 of yacc.c  */
 #line 12028 "gram.y"
-    { (yyval.str) = "+"; }
+    { (yyval.str) = "+"; ;}
     break;
 
   case 1778:
-
-/* Line 1806 of yacc.c  */
 #line 12029 "gram.y"
-    { (yyval.str) = "-"; }
+    { (yyval.str) = "-"; ;}
     break;
 
   case 1779:
-
-/* Line 1806 of yacc.c  */
 #line 12030 "gram.y"
-    { (yyval.str) = "*"; }
+    { (yyval.str) = "*"; ;}
     break;
 
   case 1780:
-
-/* Line 1806 of yacc.c  */
 #line 12031 "gram.y"
-    { (yyval.str) = "/"; }
+    { (yyval.str) = "/"; ;}
     break;
 
   case 1781:
-
-/* Line 1806 of yacc.c  */
 #line 12032 "gram.y"
-    { (yyval.str) = "%"; }
+    { (yyval.str) = "%"; ;}
     break;
 
   case 1782:
-
-/* Line 1806 of yacc.c  */
 #line 12033 "gram.y"
-    { (yyval.str) = "^"; }
+    { (yyval.str) = "^"; ;}
     break;
 
   case 1783:
-
-/* Line 1806 of yacc.c  */
 #line 12034 "gram.y"
-    { (yyval.str) = "<"; }
+    { (yyval.str) = "<"; ;}
     break;
 
   case 1784:
-
-/* Line 1806 of yacc.c  */
 #line 12035 "gram.y"
-    { (yyval.str) = ">"; }
+    { (yyval.str) = ">"; ;}
     break;
 
   case 1785:
-
-/* Line 1806 of yacc.c  */
 #line 12036 "gram.y"
-    { (yyval.str) = "="; }
+    { (yyval.str) = "="; ;}
     break;
 
   case 1786:
-
-/* Line 1806 of yacc.c  */
 #line 12040 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1787:
-
-/* Line 1806 of yacc.c  */
 #line 12042 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1788:
-
-/* Line 1806 of yacc.c  */
 #line 12047 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1789:
-
-/* Line 1806 of yacc.c  */
 #line 12049 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1790:
-
-/* Line 1806 of yacc.c  */
 #line 12054 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1791:
-
-/* Line 1806 of yacc.c  */
 #line 12056 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1792:
-
-/* Line 1806 of yacc.c  */
 #line 12058 "gram.y"
-    { (yyval.list) = list_make1(makeString("~~")); }
+    { (yyval.list) = list_make1(makeString("~~")); ;}
     break;
 
   case 1793:
-
-/* Line 1806 of yacc.c  */
 #line 12060 "gram.y"
-    { (yyval.list) = list_make1(makeString("!~~")); }
+    { (yyval.list) = list_make1(makeString("!~~")); ;}
     break;
 
   case 1794:
-
-/* Line 1806 of yacc.c  */
 #line 12062 "gram.y"
-    { (yyval.list) = list_make1(makeString("~~*")); }
+    { (yyval.list) = list_make1(makeString("~~*")); ;}
     break;
 
   case 1795:
-
-/* Line 1806 of yacc.c  */
 #line 12064 "gram.y"
-    { (yyval.list) = list_make1(makeString("!~~*")); }
+    { (yyval.list) = list_make1(makeString("!~~*")); ;}
     break;
 
   case 1796:
-
-/* Line 1806 of yacc.c  */
 #line 12076 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 1797:
-
-/* Line 1806 of yacc.c  */
 #line 12080 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1798:
-
-/* Line 1806 of yacc.c  */
 #line 12087 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 1799:
-
-/* Line 1806 of yacc.c  */
 #line 12091 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1800:
-
-/* Line 1806 of yacc.c  */
 #line 12097 "gram.y"
     {
 					(yyval.node) = (yyvsp[(1) - (1)].node);
-				}
+				;}
     break;
 
   case 1801:
-
-/* Line 1806 of yacc.c  */
 #line 12101 "gram.y"
     {
 					NamedArgExpr *na = makeNode(NamedArgExpr);
@@ -38235,206 +35280,154 @@
 					na->argnumber = -1;		/* until determined */
 					na->location = (yylsp[(1) - (3)]);
 					(yyval.node) = (Node *) na;
-				}
+				;}
     break;
 
   case 1802:
-
-/* Line 1806 of yacc.c  */
 #line 12111 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
     break;
 
   case 1803:
-
-/* Line 1806 of yacc.c  */
 #line 12112 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
     break;
 
   case 1804:
-
-/* Line 1806 of yacc.c  */
 #line 12116 "gram.y"
     {
 					(yyval.node) = makeAArrayExpr((yyvsp[(2) - (3)].list), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1805:
-
-/* Line 1806 of yacc.c  */
 #line 12120 "gram.y"
     {
 					(yyval.node) = makeAArrayExpr((yyvsp[(2) - (3)].list), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1806:
-
-/* Line 1806 of yacc.c  */
 #line 12124 "gram.y"
     {
 					(yyval.node) = makeAArrayExpr(NIL, (yylsp[(1) - (2)]));
-				}
+				;}
     break;
 
   case 1807:
-
-/* Line 1806 of yacc.c  */
 #line 12129 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1808:
-
-/* Line 1806 of yacc.c  */
 #line 12130 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1809:
-
-/* Line 1806 of yacc.c  */
 #line 12136 "gram.y"
     {
 					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1810:
-
-/* Line 1806 of yacc.c  */
 #line 12139 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1811:
-
-/* Line 1806 of yacc.c  */
 #line 12146 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1812:
-
-/* Line 1806 of yacc.c  */
 #line 12147 "gram.y"
-    { (yyval.str) = "year"; }
+    { (yyval.str) = "year"; ;}
     break;
 
   case 1813:
-
-/* Line 1806 of yacc.c  */
 #line 12148 "gram.y"
-    { (yyval.str) = "month"; }
+    { (yyval.str) = "month"; ;}
     break;
 
   case 1814:
-
-/* Line 1806 of yacc.c  */
 #line 12149 "gram.y"
-    { (yyval.str) = "day"; }
+    { (yyval.str) = "day"; ;}
     break;
 
   case 1815:
-
-/* Line 1806 of yacc.c  */
 #line 12150 "gram.y"
-    { (yyval.str) = "hour"; }
+    { (yyval.str) = "hour"; ;}
     break;
 
   case 1816:
-
-/* Line 1806 of yacc.c  */
 #line 12151 "gram.y"
-    { (yyval.str) = "minute"; }
+    { (yyval.str) = "minute"; ;}
     break;
 
   case 1817:
-
-/* Line 1806 of yacc.c  */
 #line 12152 "gram.y"
-    { (yyval.str) = "second"; }
+    { (yyval.str) = "second"; ;}
     break;
 
   case 1818:
-
-/* Line 1806 of yacc.c  */
 #line 12153 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1819:
-
-/* Line 1806 of yacc.c  */
 #line 12164 "gram.y"
     {
 					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1820:
-
-/* Line 1806 of yacc.c  */
 #line 12168 "gram.y"
     {
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1821:
-
-/* Line 1806 of yacc.c  */
 #line 12175 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1822:
-
-/* Line 1806 of yacc.c  */
 #line 12181 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); }
+    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
     break;
 
   case 1823:
-
-/* Line 1806 of yacc.c  */
 #line 12182 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1824:
-
-/* Line 1806 of yacc.c  */
 #line 12199 "gram.y"
     {
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1825:
-
-/* Line 1806 of yacc.c  */
 #line 12203 "gram.y"
     {
 					/* not legal per SQL99, but might as well allow it */
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
-				}
+				;}
     break;
 
   case 1826:
-
-/* Line 1806 of yacc.c  */
 #line 12208 "gram.y"
     {
 					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 1827:
-
-/* Line 1806 of yacc.c  */
 #line 12212 "gram.y"
     {
 					/*
@@ -38449,82 +35442,62 @@
 					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
 									makeTypeCast((yyvsp[(2) - (2)].node),
 												 SystemTypeName("int4"), -1));
-				}
+				;}
     break;
 
   case 1828:
-
-/* Line 1806 of yacc.c  */
 #line 12227 "gram.y"
     {
 					(yyval.list) = (yyvsp[(1) - (1)].list);
-				}
+				;}
     break;
 
   case 1829:
-
-/* Line 1806 of yacc.c  */
 #line 12231 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1830:
-
-/* Line 1806 of yacc.c  */
 #line 12235 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1831:
-
-/* Line 1806 of yacc.c  */
 #line 12238 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1832:
-
-/* Line 1806 of yacc.c  */
 #line 12241 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
     break;
 
   case 1833:
-
-/* Line 1806 of yacc.c  */
 #line 12242 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1834:
-
-/* Line 1806 of yacc.c  */
 #line 12243 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1835:
-
-/* Line 1806 of yacc.c  */
 #line 12247 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
 					n->subselect = (yyvsp[(1) - (1)].node);
 					/* other fields will be filled later */
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1836:
-
-/* Line 1806 of yacc.c  */
 #line 12253 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(2) - (3)].list); }
+    { (yyval.node) = (Node *)(yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1837:
-
-/* Line 1806 of yacc.c  */
 #line 12264 "gram.y"
     {
 					CaseExpr *c = makeNode(CaseExpr);
@@ -38534,26 +35507,20 @@
 					c->defresult = (Expr *) (yyvsp[(4) - (5)].node);
 					c->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)c;
-				}
+				;}
     break;
 
   case 1838:
-
-/* Line 1806 of yacc.c  */
 #line 12277 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1839:
-
-/* Line 1806 of yacc.c  */
 #line 12278 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1840:
-
-/* Line 1806 of yacc.c  */
 #line 12283 "gram.y"
     {
 					CaseWhen *w = makeNode(CaseWhen);
@@ -38561,181 +35528,137 @@
 					w->result = (Expr *) (yyvsp[(4) - (4)].node);
 					w->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)w;
-				}
+				;}
     break;
 
   case 1841:
-
-/* Line 1806 of yacc.c  */
 #line 12293 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1842:
-
-/* Line 1806 of yacc.c  */
 #line 12294 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1843:
-
-/* Line 1806 of yacc.c  */
 #line 12297 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1844:
-
-/* Line 1806 of yacc.c  */
 #line 12298 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1845:
-
-/* Line 1806 of yacc.c  */
 #line 12302 "gram.y"
     {
 					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
-				}
+				;}
     break;
 
   case 1846:
-
-/* Line 1806 of yacc.c  */
 #line 12306 "gram.y"
     {
 					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
-				}
+				;}
     break;
 
   case 1847:
-
-/* Line 1806 of yacc.c  */
 #line 12313 "gram.y"
     {
 					(yyval.node) = (Node *) makeString((yyvsp[(2) - (2)].str));
-				}
+				;}
     break;
 
   case 1848:
-
-/* Line 1806 of yacc.c  */
 #line 12317 "gram.y"
     {
 					(yyval.node) = (Node *) makeNode(A_Star);
-				}
+				;}
     break;
 
   case 1849:
-
-/* Line 1806 of yacc.c  */
 #line 12321 "gram.y"
     {
 					A_Indices *ai = makeNode(A_Indices);
 					ai->lidx = NULL;
 					ai->uidx = (yyvsp[(2) - (3)].node);
 					(yyval.node) = (Node *) ai;
-				}
+				;}
     break;
 
   case 1850:
-
-/* Line 1806 of yacc.c  */
 #line 12328 "gram.y"
     {
 					A_Indices *ai = makeNode(A_Indices);
 					ai->lidx = (yyvsp[(2) - (5)].node);
 					ai->uidx = (yyvsp[(4) - (5)].node);
 					(yyval.node) = (Node *) ai;
-				}
+				;}
     break;
 
   case 1851:
-
-/* Line 1806 of yacc.c  */
 #line 12337 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1852:
-
-/* Line 1806 of yacc.c  */
 #line 12338 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1853:
-
-/* Line 1806 of yacc.c  */
 #line 12342 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1854:
-
-/* Line 1806 of yacc.c  */
 #line 12343 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1857:
-
-/* Line 1806 of yacc.c  */
 #line 12358 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1858:
-
-/* Line 1806 of yacc.c  */
 #line 12360 "gram.y"
     {
 					SetToDefault *n = makeNode(SetToDefault);
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1859:
-
-/* Line 1806 of yacc.c  */
 #line 12368 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1860:
-
-/* Line 1806 of yacc.c  */
 #line 12369 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1861:
-
-/* Line 1806 of yacc.c  */
 #line 12377 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1862:
-
-/* Line 1806 of yacc.c  */
 #line 12388 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1863:
-
-/* Line 1806 of yacc.c  */
 #line 12389 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1864:
-
-/* Line 1806 of yacc.c  */
 #line 12393 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -38743,12 +35666,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)(yyvsp[(1) - (3)].node);
 					(yyval.target)->location = (yylsp[(1) - (3)]);
-				}
+				;}
     break;
 
   case 1865:
-
-/* Line 1806 of yacc.c  */
 #line 12409 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -38756,12 +35677,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)(yyvsp[(1) - (2)].node);
 					(yyval.target)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1866:
-
-/* Line 1806 of yacc.c  */
 #line 12417 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -38769,12 +35688,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)(yyvsp[(1) - (1)].node);
 					(yyval.target)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1867:
-
-/* Line 1806 of yacc.c  */
 #line 12425 "gram.y"
     {
 					ColumnRef *n = makeNode(ColumnRef);
@@ -38786,35 +35703,27 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)n;
 					(yyval.target)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1868:
-
-/* Line 1806 of yacc.c  */
 #line 12446 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
     break;
 
   case 1869:
-
-/* Line 1806 of yacc.c  */
 #line 12447 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
     break;
 
   case 1870:
-
-/* Line 1806 of yacc.c  */
 #line 12459 "gram.y"
     {
 					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1871:
-
-/* Line 1806 of yacc.c  */
 #line 12463 "gram.y"
     {
 					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
@@ -38839,121 +35748,91 @@
 									 parser_errposition((yylsp[(1) - (2)]))));
 							break;
 					}
-				}
+				;}
     break;
 
   case 1872:
-
-/* Line 1806 of yacc.c  */
 #line 12490 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1873:
-
-/* Line 1806 of yacc.c  */
 #line 12492 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 1874:
-
-/* Line 1806 of yacc.c  */
 #line 12496 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1875:
-
-/* Line 1806 of yacc.c  */
 #line 12499 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1876:
-
-/* Line 1806 of yacc.c  */
 #line 12502 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1877:
-
-/* Line 1806 of yacc.c  */
 #line 12504 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1878:
-
-/* Line 1806 of yacc.c  */
 #line 12506 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1879:
-
-/* Line 1806 of yacc.c  */
 #line 12508 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1880:
-
-/* Line 1806 of yacc.c  */
 #line 12519 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1881:
-
-/* Line 1806 of yacc.c  */
 #line 12521 "gram.y"
     {
 						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
 											 yyscanner);
-					}
+					;}
     break;
 
   case 1882:
-
-/* Line 1806 of yacc.c  */
 #line 12532 "gram.y"
     {
 					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1883:
-
-/* Line 1806 of yacc.c  */
 #line 12536 "gram.y"
     {
 					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1884:
-
-/* Line 1806 of yacc.c  */
 #line 12540 "gram.y"
     {
 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1885:
-
-/* Line 1806 of yacc.c  */
 #line 12544 "gram.y"
     {
 					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1886:
-
-/* Line 1806 of yacc.c  */
 #line 12548 "gram.y"
     {
 					/* This is a bit constant per SQL99:
@@ -38962,24 +35841,20 @@
 					 * <bit string literal> or a <hex string literal>.
 					 */
 					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1887:
-
-/* Line 1806 of yacc.c  */
 #line 12557 "gram.y"
     {
 					/* generic type 'literal' syntax */
 					TypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
 					t->location = (yylsp[(1) - (2)]);
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
-				}
+				;}
     break;
 
   case 1888:
-
-/* Line 1806 of yacc.c  */
 #line 12564 "gram.y"
     {
 					/* generic syntax with a type modifier */
@@ -39004,32 +35879,26 @@
 					t->typmods = (yyvsp[(3) - (5)].list);
 					t->location = (yylsp[(1) - (5)]);
 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
-				}
+				;}
     break;
 
   case 1889:
-
-/* Line 1806 of yacc.c  */
 #line 12589 "gram.y"
     {
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
-				}
+				;}
     break;
 
   case 1890:
-
-/* Line 1806 of yacc.c  */
 #line 12593 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (3)].typnam);
 					t->typmods = (yyvsp[(3) - (3)].list);
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
-				}
+				;}
     break;
 
   case 1891:
-
-/* Line 1806 of yacc.c  */
 #line 12599 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (6)].typnam);
@@ -39046,214 +35915,150 @@
 						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 												makeIntConst((yyvsp[(3) - (6)].ival), (yylsp[(3) - (6)])));
 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (6)].str), (yylsp[(5) - (6)]), t);
-				}
+				;}
     break;
 
   case 1892:
-
-/* Line 1806 of yacc.c  */
 #line 12616 "gram.y"
     {
 					(yyval.node) = makeBoolAConst(TRUE, (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1893:
-
-/* Line 1806 of yacc.c  */
 #line 12620 "gram.y"
     {
 					(yyval.node) = makeBoolAConst(FALSE, (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1894:
-
-/* Line 1806 of yacc.c  */
 #line 12624 "gram.y"
     {
 					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1895:
-
-/* Line 1806 of yacc.c  */
 #line 12629 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1896:
-
-/* Line 1806 of yacc.c  */
 #line 12630 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1897:
-
-/* Line 1806 of yacc.c  */
 #line 12631 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1898:
-
-/* Line 1806 of yacc.c  */
 #line 12634 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1899:
-
-/* Line 1806 of yacc.c  */
 #line 12636 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 1900:
-
-/* Line 1806 of yacc.c  */
 #line 12639 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1901:
-
-/* Line 1806 of yacc.c  */
 #line 12640 "gram.y"
-    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); }
+    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
     break;
 
   case 1902:
-
-/* Line 1806 of yacc.c  */
 #line 12641 "gram.y"
-    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); }
+    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
     break;
 
   case 1903:
-
-/* Line 1806 of yacc.c  */
 #line 12657 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1904:
-
-/* Line 1806 of yacc.c  */
 #line 12658 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1905:
-
-/* Line 1806 of yacc.c  */
 #line 12659 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1906:
-
-/* Line 1806 of yacc.c  */
 #line 12664 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1907:
-
-/* Line 1806 of yacc.c  */
 #line 12665 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1908:
-
-/* Line 1806 of yacc.c  */
 #line 12666 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1909:
-
-/* Line 1806 of yacc.c  */
 #line 12671 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1910:
-
-/* Line 1806 of yacc.c  */
 #line 12672 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1911:
-
-/* Line 1806 of yacc.c  */
 #line 12673 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1912:
-
-/* Line 1806 of yacc.c  */
 #line 12674 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1913:
-
-/* Line 1806 of yacc.c  */
 #line 12680 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1914:
-
-/* Line 1806 of yacc.c  */
 #line 12681 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1915:
-
-/* Line 1806 of yacc.c  */
 #line 12682 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1916:
-
-/* Line 1806 of yacc.c  */
 #line 12683 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1917:
-
-/* Line 1806 of yacc.c  */
 #line 12684 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 39244 "gram.c"
+/* Line 1267 of yacc.c.  */
+#line 36060 "gram.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -39282,10 +36087,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -39293,44 +36094,45 @@
 #if ! YYERROR_VERBOSE
       yyerror (&yylloc, yyscanner, YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (&yylloc, yyscanner, yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (&yylloc, yyscanner, yymsg);
+	  }
+	else
+	  {
+	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
-  yyerror_range[1] = yylloc;
+  yyerror_range[0] = yylloc;
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -39347,7 +36149,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -39363,7 +36165,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  yyerror_range[1] = yylsp[1-yylen];
+  yyerror_range[0] = yylsp[1-yylen];
   /* Do not reclaim the symbols of the rule which action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
@@ -39382,7 +36184,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -39397,7 +36199,7 @@
       if (yyssp == yyss)
 	YYABORT;
 
-      yyerror_range[1] = *yylsp;
+      yyerror_range[0] = *yylsp;
       yydestruct ("Error: popping",
 		  yystos[yystate], yyvsp, yylsp, yyscanner);
       YYPOPSTACK (1);
@@ -39405,12 +36207,15 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
-  yyerror_range[2] = yylloc;
+  yyerror_range[1] = yylloc;
   /* Using YYLLOC is tempting, but would change the location of
-     the lookahead.  YYLOC is available though.  */
-  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+     the look-ahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
   *++yylsp = yyloc;
 
   /* Shift the error token.  */
@@ -39434,7 +36239,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -39445,14 +36250,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, &yylloc, yyscanner);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, &yylloc, yyscanner);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -39476,8 +36276,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 13142 "gram.y"
 
 
diff -Naur postgresql-9.3.4/src/backend/parser/gram.h postgresql/src/backend/parser/gram.h
--- postgresql-9.3.4/src/backend/parser/gram.h	2014-03-17 12:44:41.000000000 -0700
+++ postgresql/src/backend/parser/gram.h	2014-03-31 15:42:33.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -456,16 +458,432 @@
      UMINUS = 674
    };
 #endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define ABORT_P 269
+#define ABSOLUTE_P 270
+#define ACCESS 271
+#define ACTION 272
+#define ADD_P 273
+#define ADMIN 274
+#define AFTER 275
+#define AGGREGATE 276
+#define ALL 277
+#define ALSO 278
+#define ALTER 279
+#define ALWAYS 280
+#define ANALYSE 281
+#define ANALYZE 282
+#define AND 283
+#define ANY 284
+#define ARRAY 285
+#define AS 286
+#define ASC 287
+#define ASSERTION 288
+#define ASSIGNMENT 289
+#define ASYMMETRIC 290
+#define AT 291
+#define ATTRIBUTE 292
+#define AUTHORIZATION 293
+#define BACKWARD 294
+#define BEFORE 295
+#define BEGIN_P 296
+#define BETWEEN 297
+#define BIGINT 298
+#define BINARY 299
+#define BIT 300
+#define BOOLEAN_P 301
+#define BOTH 302
+#define BY 303
+#define CACHE 304
+#define CALLED 305
+#define CASCADE 306
+#define CASCADED 307
+#define CASE 308
+#define CAST 309
+#define CATALOG_P 310
+#define CHAIN 311
+#define CHAR_P 312
+#define CHARACTER 313
+#define CHARACTERISTICS 314
+#define CHECK 315
+#define CHECKPOINT 316
+#define CLASS 317
+#define CLOSE 318
+#define CLUSTER 319
+#define COALESCE 320
+#define COLLATE 321
+#define COLLATION 322
+#define COLUMN 323
+#define COMMENT 324
+#define COMMENTS 325
+#define COMMIT 326
+#define COMMITTED 327
+#define CONCURRENTLY 328
+#define CONFIGURATION 329
+#define CONNECTION 330
+#define CONSTRAINT 331
+#define CONSTRAINTS 332
+#define CONTENT_P 333
+#define CONTINUE_P 334
+#define CONVERSION_P 335
+#define COPY 336
+#define COST 337
+#define CREATE 338
+#define CROSS 339
+#define CSV 340
+#define CURRENT_P 341
+#define CURRENT_CATALOG 342
+#define CURRENT_DATE 343
+#define CURRENT_ROLE 344
+#define CURRENT_SCHEMA 345
+#define CURRENT_TIME 346
+#define CURRENT_TIMESTAMP 347
+#define CURRENT_USER 348
+#define CURSOR 349
+#define CYCLE 350
+#define DATA_P 351
+#define DATABASE 352
+#define DAY_P 353
+#define DEALLOCATE 354
+#define DEC 355
+#define DECIMAL_P 356
+#define DECLARE 357
+#define DEFAULT 358
+#define DEFAULTS 359
+#define DEFERRABLE 360
+#define DEFERRED 361
+#define DEFINER 362
+#define DELETE_P 363
+#define DELIMITER 364
+#define DELIMITERS 365
+#define DESC 366
+#define DICTIONARY 367
+#define DISABLE_P 368
+#define DISCARD 369
+#define DISTINCT 370
+#define DO 371
+#define DOCUMENT_P 372
+#define DOMAIN_P 373
+#define DOUBLE_P 374
+#define DROP 375
+#define EACH 376
+#define ELSE 377
+#define ENABLE_P 378
+#define ENCODING 379
+#define ENCRYPTED 380
+#define END_P 381
+#define ENUM_P 382
+#define ESCAPE 383
+#define EVENT 384
+#define EXCEPT 385
+#define EXCLUDE 386
+#define EXCLUDING 387
+#define EXCLUSIVE 388
+#define EXECUTE 389
+#define EXISTS 390
+#define EXPLAIN 391
+#define EXTENSION 392
+#define EXTERNAL 393
+#define EXTRACT 394
+#define FALSE_P 395
+#define FAMILY 396
+#define FETCH 397
+#define FIRST_P 398
+#define FLOAT_P 399
+#define FOLLOWING 400
+#define FOR 401
+#define FORCE 402
+#define FOREIGN 403
+#define FORWARD 404
+#define FREEZE 405
+#define FROM 406
+#define FULL 407
+#define FUNCTION 408
+#define FUNCTIONS 409
+#define GLOBAL 410
+#define GRANT 411
+#define GRANTED 412
+#define GREATEST 413
+#define GROUP_P 414
+#define HANDLER 415
+#define HAVING 416
+#define HEADER_P 417
+#define HOLD 418
+#define HOUR_P 419
+#define IDENTITY_P 420
+#define IF_P 421
+#define ILIKE 422
+#define IMMEDIATE 423
+#define IMMUTABLE 424
+#define IMPLICIT_P 425
+#define IN_P 426
+#define INCLUDING 427
+#define INCREMENT 428
+#define INDEX 429
+#define INDEXES 430
+#define INHERIT 431
+#define INHERITS 432
+#define INITIALLY 433
+#define INLINE_P 434
+#define INNER_P 435
+#define INOUT 436
+#define INPUT_P 437
+#define INSENSITIVE 438
+#define INSERT 439
+#define INSTEAD 440
+#define INT_P 441
+#define INTEGER 442
+#define INTERSECT 443
+#define INTERVAL 444
+#define INTO 445
+#define INVOKER 446
+#define IS 447
+#define ISNULL 448
+#define ISOLATION 449
+#define JOIN 450
+#define KEY 451
+#define LABEL 452
+#define LANGUAGE 453
+#define LARGE_P 454
+#define LAST_P 455
+#define LATERAL_P 456
+#define LC_COLLATE_P 457
+#define LC_CTYPE_P 458
+#define LEADING 459
+#define LEAKPROOF 460
+#define LEAST 461
+#define LEFT 462
+#define LEVEL 463
+#define LIKE 464
+#define LIMIT 465
+#define LISTEN 466
+#define LOAD 467
+#define LOCAL 468
+#define LOCALTIME 469
+#define LOCALTIMESTAMP 470
+#define LOCATION 471
+#define LOCK_P 472
+#define MAPPING 473
+#define MATCH 474
+#define MATERIALIZED 475
+#define MAXVALUE 476
+#define MINUTE_P 477
+#define MINVALUE 478
+#define MODE 479
+#define MONTH_P 480
+#define MOVE 481
+#define NAME_P 482
+#define NAMES 483
+#define NATIONAL 484
+#define NATURAL 485
+#define NCHAR 486
+#define NEXT 487
+#define NO 488
+#define NONE 489
+#define NOT 490
+#define NOTHING 491
+#define NOTIFY 492
+#define NOTNULL 493
+#define NOWAIT 494
+#define NULL_P 495
+#define NULLIF 496
+#define NULLS_P 497
+#define NUMERIC 498
+#define OBJECT_P 499
+#define OF 500
+#define OFF 501
+#define OFFSET 502
+#define OIDS 503
+#define ON 504
+#define ONLY 505
+#define OPERATOR 506
+#define OPTION 507
+#define OPTIONS 508
+#define OR 509
+#define ORDER 510
+#define OUT_P 511
+#define OUTER_P 512
+#define OVER 513
+#define OVERLAPS 514
+#define OVERLAY 515
+#define OWNED 516
+#define OWNER 517
+#define PARSER 518
+#define PARTIAL 519
+#define PARTITION 520
+#define PASSING 521
+#define PASSWORD 522
+#define PLACING 523
+#define PLANS 524
+#define POSITION 525
+#define PRECEDING 526
+#define PRECISION 527
+#define PRESERVE 528
+#define PREPARE 529
+#define PREPARED 530
+#define PRIMARY 531
+#define PRIOR 532
+#define PRIVILEGES 533
+#define PROCEDURAL 534
+#define PROCEDURE 535
+#define PROGRAM 536
+#define QUOTE 537
+#define RANGE 538
+#define READ 539
+#define REAL 540
+#define REASSIGN 541
+#define RECHECK 542
+#define RECURSIVE 543
+#define REF 544
+#define REFERENCES 545
+#define REFRESH 546
+#define REINDEX 547
+#define RELATIVE_P 548
+#define RELEASE 549
+#define RENAME 550
+#define REPEATABLE 551
+#define REPLACE 552
+#define REPLICA 553
+#define RESET 554
+#define RESTART 555
+#define RESTRICT 556
+#define RETURNING 557
+#define RETURNS 558
+#define REVOKE 559
+#define RIGHT 560
+#define ROLE 561
+#define ROLLBACK 562
+#define ROW 563
+#define ROWS 564
+#define RULE 565
+#define SAVEPOINT 566
+#define SCHEMA 567
+#define SCROLL 568
+#define SEARCH 569
+#define SECOND_P 570
+#define SECURITY 571
+#define SELECT 572
+#define SEQUENCE 573
+#define SEQUENCES 574
+#define SERIALIZABLE 575
+#define SERVER 576
+#define SESSION 577
+#define SESSION_USER 578
+#define SET 579
+#define SETOF 580
+#define SHARE 581
+#define SHOW 582
+#define SIMILAR 583
+#define SIMPLE 584
+#define SMALLINT 585
+#define SNAPSHOT 586
+#define SOME 587
+#define STABLE 588
+#define STANDALONE_P 589
+#define START 590
+#define STATEMENT 591
+#define STATISTICS 592
+#define STDIN 593
+#define STDOUT 594
+#define STORAGE 595
+#define STRICT_P 596
+#define STRIP_P 597
+#define SUBSTRING 598
+#define SYMMETRIC 599
+#define SYSID 600
+#define SYSTEM_P 601
+#define TABLE 602
+#define TABLES 603
+#define TABLESPACE 604
+#define TEMP 605
+#define TEMPLATE 606
+#define TEMPORARY 607
+#define TEXT_P 608
+#define THEN 609
+#define TIME 610
+#define TIMESTAMP 611
+#define TO 612
+#define TRAILING 613
+#define TRANSACTION 614
+#define TREAT 615
+#define TRIGGER 616
+#define TRIM 617
+#define TRUE_P 618
+#define TRUNCATE 619
+#define TRUSTED 620
+#define TYPE_P 621
+#define TYPES_P 622
+#define UNBOUNDED 623
+#define UNCOMMITTED 624
+#define UNENCRYPTED 625
+#define UNION 626
+#define UNIQUE 627
+#define UNKNOWN 628
+#define UNLISTEN 629
+#define UNLOGGED 630
+#define UNTIL 631
+#define UPDATE 632
+#define USER 633
+#define USING 634
+#define VACUUM 635
+#define VALID 636
+#define VALIDATE 637
+#define VALIDATOR 638
+#define VALUE_P 639
+#define VALUES 640
+#define VARCHAR 641
+#define VARIADIC 642
+#define VARYING 643
+#define VERBOSE 644
+#define VERSION_P 645
+#define VIEW 646
+#define VOLATILE 647
+#define WHEN 648
+#define WHERE 649
+#define WHITESPACE_P 650
+#define WINDOW 651
+#define WITH 652
+#define WITHOUT 653
+#define WORK 654
+#define WRAPPER 655
+#define WRITE 656
+#define XML_P 657
+#define XMLATTRIBUTES 658
+#define XMLCONCAT 659
+#define XMLELEMENT 660
+#define XMLEXISTS 661
+#define XMLFOREST 662
+#define XMLPARSE 663
+#define XMLPI 664
+#define XMLROOT 665
+#define XMLSERIALIZE 666
+#define YEAR_P 667
+#define YES_P 668
+#define ZONE 669
+#define NULLS_FIRST 670
+#define NULLS_LAST 671
+#define WITH_TIME 672
+#define POSTFIXOP 673
+#define UMINUS 674
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 176 "gram.y"
-
+{
 	core_YYSTYPE		core_yystype;
 	/* these fields must match core_YYSTYPE: */
 	int					ival;
@@ -500,15 +918,13 @@
 	AccessPriv			*accesspriv;
 	InsertStmt			*istmt;
 	VariableSetStmt		*vsetstmt;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 508 "gram.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 924 "gram.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
@@ -527,4 +943,3 @@
 #endif
 
 
-
diff -Naur postgresql-9.3.4/src/backend/replication/repl_gram.c postgresql/src/backend/replication/repl_gram.c
--- postgresql-9.3.4/src/backend/replication/repl_gram.c	2014-03-17 12:44:41.000000000 -0700
+++ postgresql/src/backend/replication/repl_gram.c	2014-03-31 15:39:51.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,59 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         replication_yyparse
-#define yylex           replication_yylex
-#define yyerror         replication_yyerror
-#define yylval          replication_yylval
-#define yychar          replication_yychar
-#define yydebug         replication_yydebug
-#define yynerrs         replication_yynerrs
+#define yyparse replication_yyparse
+#define yylex   replication_yylex
+#define yyerror replication_yyerror
+#define yylval  replication_yylval
+#define yychar  replication_yychar
+#define yydebug replication_yydebug
+#define yynerrs replication_yynerrs
 
 
-/* Copy the first part of user declarations.  */
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     SCONST = 258,
+     UCONST = 259,
+     RECPTR = 260,
+     K_BASE_BACKUP = 261,
+     K_IDENTIFY_SYSTEM = 262,
+     K_START_REPLICATION = 263,
+     K_TIMELINE_HISTORY = 264,
+     K_LABEL = 265,
+     K_PROGRESS = 266,
+     K_FAST = 267,
+     K_NOWAIT = 268,
+     K_WAL = 269,
+     K_TIMELINE = 270
+   };
+#endif
+/* Tokens.  */
+#define SCONST 258
+#define UCONST 259
+#define RECPTR 260
+#define K_BASE_BACKUP 261
+#define K_IDENTIFY_SYSTEM 262
+#define K_START_REPLICATION 263
+#define K_TIMELINE_HISTORY 264
+#define K_LABEL 265
+#define K_PROGRESS 266
+#define K_FAST 267
+#define K_NOWAIT 268
+#define K_WAL 269
+#define K_TIMELINE 270
 
-/* Line 268 of yacc.c  */
+
+
+
+/* Copy the first part of user declarations.  */
 #line 1 "repl_gram.y"
 
 /*-------------------------------------------------------------------------
@@ -127,9 +161,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 132 "repl_gram.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -148,38 +179,10 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     SCONST = 258,
-     UCONST = 259,
-     RECPTR = 260,
-     K_BASE_BACKUP = 261,
-     K_IDENTIFY_SYSTEM = 262,
-     K_START_REPLICATION = 263,
-     K_TIMELINE_HISTORY = 264,
-     K_LABEL = 265,
-     K_PROGRESS = 266,
-     K_FAST = 267,
-     K_NOWAIT = 268,
-     K_WAL = 269,
-     K_TIMELINE = 270
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 56 "repl_gram.y"
-
+{
 		char					*str;
 		bool					boolval;
 		uint32					uintval;
@@ -188,23 +191,22 @@
 		Node					*node;
 		List					*list;
 		DefElem					*defelt;
-
-
-
-/* Line 293 of yacc.c  */
-#line 196 "repl_gram.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 197 "repl_gram.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 208 "repl_gram.c"
+/* Line 216 of yacc.c.  */
+#line 210 "repl_gram.tab.c"
 
 #ifdef short
 # undef short
@@ -279,14 +281,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -307,11 +309,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -334,24 +336,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -367,9 +369,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -380,27 +382,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -418,7 +399,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  14
@@ -544,8 +542,8 @@
        0,     2
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -580,7 +578,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -588,12 +587,6 @@
       13,    14,    15,    23,    26,    25
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-11))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_uint8 yycheck[] =
 {
       10,    11,    12,    13,    14,     6,     7,     8,     9,     5,
@@ -621,18 +614,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -642,6 +626,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -683,10 +668,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -790,20 +784,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -837,11 +828,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -878,6 +869,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -980,142 +972,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1147,9 +1112,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1165,16 +1131,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1201,37 +1169,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1239,28 +1184,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1290,6 +1258,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1297,6 +1266,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1319,8 +1289,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1331,6 +1302,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1340,9 +1312,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1351,16 +1320,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1386,22 +1355,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1441,101 +1414,79 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 92 "repl_gram.y"
     {
 					replication_parse_result = (yyvsp[(1) - (2)].node);
-				}
+				;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 113 "repl_gram.y"
     {
 					(yyval.node) = (Node *) makeNode(IdentifySystemCmd);
-				}
+				;}
     break;
 
   case 10:
-
-/* Line 1806 of yacc.c  */
 #line 123 "repl_gram.y"
     {
 					BaseBackupCmd *cmd = (BaseBackupCmd *) makeNode(BaseBackupCmd);
 					cmd->options = (yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *) cmd;
-				}
+				;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 130 "repl_gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 131 "repl_gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 135 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("label",
 						   (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 140 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("progress",
 						   (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 145 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("fast",
 						   (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 150 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("wal",
 						   (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 155 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("nowait",
 						   (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 166 "repl_gram.y"
     {
 					StartReplicationCmd *cmd;
@@ -1545,12 +1496,10 @@
 					cmd->timeline = (yyvsp[(3) - (3)].uintval);
 
 					(yyval.node) = (Node *) cmd;
-				}
+				;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 179 "repl_gram.y"
     {
 					if ((yyvsp[(2) - (2)].uintval) <= 0)
@@ -1558,19 +1507,15 @@
 								(errcode(ERRCODE_SYNTAX_ERROR),
 								 (errmsg("invalid timeline %u", (yyvsp[(2) - (2)].uintval)))));
 					(yyval.uintval) = (yyvsp[(2) - (2)].uintval);
-				}
+				;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 186 "repl_gram.y"
-    { (yyval.uintval) = 0; }
+    { (yyval.uintval) = 0; ;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 194 "repl_gram.y"
     {
 					TimeLineHistoryCmd *cmd;
@@ -1584,26 +1529,14 @@
 					cmd->timeline = (yyvsp[(2) - (2)].uintval);
 
 					(yyval.node) = (Node *) cmd;
-				}
+				;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1594 "repl_gram.c"
+/* Line 1267 of yacc.c.  */
+#line 1538 "repl_gram.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1612,6 +1545,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1631,10 +1565,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1642,36 +1572,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1679,7 +1610,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1696,7 +1627,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1730,7 +1661,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1753,6 +1684,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1777,7 +1711,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1788,14 +1722,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1819,8 +1748,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 208 "repl_gram.y"
 
 
diff -Naur postgresql-9.3.4/src/interfaces/ecpg/preproc/preproc.c postgresql/src/interfaces/ecpg/preproc/preproc.c
--- postgresql-9.3.4/src/interfaces/ecpg/preproc/preproc.c	2014-03-17 12:44:43.000000000 -0700
+++ postgresql/src/interfaces/ecpg/preproc/preproc.c	2014-03-31 15:42:01.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -43,614 +46,27 @@
 /* Identify Bison output.  */
 #define YYBISON 1
 
-/* Bison version.  */
-#define YYBISON_VERSION "2.5"
-
-/* Skeleton name.  */
-#define YYSKELETON_NAME "yacc.c"
-
-/* Pure parsers.  */
-#define YYPURE 0
-
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
-/* Using locations.  */
-#define YYLSP_NEEDED 1
-
-/* Substitute the variable and function names.  */
-#define yyparse         base_yyparse
-#define yylex           base_yylex
-#define yyerror         base_yyerror
-#define yylval          base_yylval
-#define yychar          base_yychar
-#define yydebug         base_yydebug
-#define yynerrs         base_yynerrs
-#define yylloc          base_yylloc
-
-/* Copy the first part of user declarations.  */
-
-/* Line 268 of yacc.c  */
-#line 5 "preproc.y"
-
-#include "postgres_fe.h"
-
-#include "extern.h"
-#include "ecpg_config.h"
-#include <unistd.h>
-
-/* Location tracking support --- simpler than bison's default */
-#define YYLLOC_DEFAULT(Current, Rhs, N) \
-	do { \
-		if (N)						\
-			(Current) = (Rhs)[1];	\
-		else						\
-			(Current) = (Rhs)[0];	\
-	} while (0)
-
-/*
- * The %name-prefix option below will make bison call base_yylex, but we
- * really want it to call filtered_base_yylex (see parser.c).
- */
-#define base_yylex filtered_base_yylex
-
-/*
- * This is only here so the string gets into the POT.  Bison uses it
- * internally.
- */
-#define bison_gettext_dummy gettext_noop("syntax error")
-
-/*
- * Variables containing simple states.
- */
-int struct_level = 0;
-int braces_open; /* brace level counter */
-char *current_function;
-int ecpg_internal_var = 0;
-char	*connection = NULL;
-char	*input_filename = NULL;
-
-static int	FoundInto = 0;
-static int	initializer = 0;
-static int	pacounter = 1;
-static char	pacounter_buffer[sizeof(int) * CHAR_BIT * 10 / 3]; /* a rough guess at the size we need */
-static struct this_type actual_type[STRUCT_DEPTH];
-static char *actual_startline[STRUCT_DEPTH];
-static int	varchar_counter = 1;
-
-/* temporarily store struct members while creating the data structure */
-struct ECPGstruct_member *struct_member_list[STRUCT_DEPTH] = { NULL };
-
-/* also store struct type so we can do a sizeof() later */
-static char *ECPGstruct_sizeof = NULL;
-
-/* for forward declarations we have to store some data as well */
-static char *forward_name = NULL;
-
-struct ECPGtype ecpg_no_indicator = {ECPGt_NO_INDICATOR, NULL, NULL, NULL, {NULL}, 0};
-struct variable no_indicator = {"no_indicator", &ecpg_no_indicator, 0, NULL};
-
-struct ECPGtype ecpg_query = {ECPGt_char_variable, NULL, NULL, NULL, {NULL}, 0};
-
-/*
- * Handle parsing errors and warnings
- */
-void
-mmerror(int error_code, enum errortype type, const char *error, ...)
-{
-	va_list ap;
-
-	/* internationalize the error message string */
-	error = _(error);
-
-	fprintf(stderr, "%s:%d: ", input_filename, yylineno);
-
-	switch(type)
-	{
-		case ET_WARNING:
-			fprintf(stderr, _("WARNING: "));
-			break;
-		case ET_ERROR:
-		case ET_FATAL:
-			fprintf(stderr, _("ERROR: "));
-			break;
-	}
-
-	va_start(ap, error);
-	vfprintf(stderr, error, ap);
-	va_end(ap);
-
-	fprintf(stderr, "\n");
-
-	switch(type)
-	{
-		case ET_WARNING:
-			break;
-		case ET_ERROR:
-			ret_value = error_code;
-			break;
-		case ET_FATAL:
-			if (yyin)
-				fclose(yyin);
-			if (yyout)
-				fclose(yyout);
-
-			if (strcmp(output_filename, "-") != 0 && unlink(output_filename) != 0)
-				fprintf(stderr, _("could not remove output file \"%s\"\n"), output_filename);
-			exit(error_code);
-	}
-}
-
-/*
- * string concatenation
- */
-
-static char *
-cat2_str(char *str1, char *str2)
-{
-	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 2);
-
-	strcpy(res_str, str1);
-	if (strlen(str1) != 0 && strlen(str2) != 0)
-		strcat(res_str, " ");
-	strcat(res_str, str2);
-	free(str1);
-	free(str2);
-	return(res_str);
-}
-
-static char *
-cat_str(int count, ...)
-{
-	va_list		args;
-	int			i;
-	char		*res_str;
-
-	va_start(args, count);
-
-	res_str = va_arg(args, char *);
-
-	/* now add all other strings */
-	for (i = 1; i < count; i++)
-		res_str = cat2_str(res_str, va_arg(args, char *));
-
-	va_end(args);
-
-	return(res_str);
-}
-
-static char *
-make2_str(char *str1, char *str2)
-{
-	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 1);
-
-	strcpy(res_str, str1);
-	strcat(res_str, str2);
-	free(str1);
-	free(str2);
-	return(res_str);
-}
-
-static char *
-make3_str(char *str1, char *str2, char *str3)
-{
-	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) +strlen(str3) + 1);
-
-	strcpy(res_str, str1);
-	strcat(res_str, str2);
-	strcat(res_str, str3);
-	free(str1);
-	free(str2);
-	free(str3);
-	return(res_str);
-}
-
-/* and the rest */
-static char *
-make_name(void)
-{
-	return mm_strdup(yytext);
-}
-
-static char *
-create_questionmarks(char *name, bool array)
-{
-	struct variable *p = find_variable(name);
-	int count;
-	char *result = EMPTY;
-
-	/* In case we have a struct, we have to print as many "?" as there are attributes in the struct
-	 * An array is only allowed together with an element argument
-	 * This is essantially only used for inserts, but using a struct as input parameter is an error anywhere else
-	 * so we don't have to worry here. */
-
-	if (p->type->type == ECPGt_struct || (array && p->type->type == ECPGt_array && p->type->u.element->type == ECPGt_struct))
-	{
-		struct ECPGstruct_member *m;
-
-		if (p->type->type == ECPGt_struct)
-			m = p->type->u.members;
-		else
-			m = p->type->u.element->u.members;
-
-		for (count = 0; m != NULL; m=m->next, count++);
-	}
-	else
-		count = 1;
-
-	for (; count > 0; count --)
-	{
-		sprintf(pacounter_buffer, "$%d", pacounter++);
-		result = cat_str(3, result, mm_strdup(pacounter_buffer), mm_strdup(" , "));
-	}
-
-	/* removed the trailing " ," */
-
-	result[strlen(result)-3] = '\0';
-	return(result);
-}
-
-static char *
-adjust_outofscope_cursor_vars(struct cursor *cur)
-{
-	/* Informix accepts DECLARE with variables that are out of scope when OPEN is called.
-	 * For instance you can DECLARE a cursor in one function, and OPEN/FETCH/CLOSE
-	 * it in another functions. This is very useful for e.g. event-driver programming,
-	 * but may also lead to dangerous programming. The limitation when this is allowed
-	 * and doesn't cause problems have to be documented, like the allocated variables
-	 * must not be realloc()'ed.
-	 *
-	 * We have to change the variables to our own struct and just store the pointer
-	 * instead of the variable. Do it only for local variables, not for globals.
-	 */
-
-	char *result = EMPTY;
-	int insert;
-
-	for (insert = 1; insert >= 0; insert--)
-	{
-		struct arguments *list;
-		struct arguments *ptr;
-		struct arguments *newlist = NULL;
-		struct variable *newvar, *newind;
-
-		list = (insert ? cur->argsinsert : cur->argsresult);
-
-		for (ptr = list; ptr != NULL; ptr = ptr->next)
-		{
-			char var_text[20];
-			char *original_var;
-			bool skip_set_var = false;
-			bool var_ptr = false;
-
-			/* change variable name to "ECPGget_var(<counter>)" */
-			original_var = ptr->variable->name;
-			sprintf(var_text, "%d))", ecpg_internal_var);
-
-			/* Don't emit ECPGset_var() calls for global variables */
-			if (ptr->variable->brace_level == 0)
-			{
-				newvar = ptr->variable;
-				skip_set_var = true;
-			}
-			else if ((ptr->variable->type->type == ECPGt_char_variable)
-					 && (strncmp(ptr->variable->name, "ECPGprepared_statement", strlen("ECPGprepared_statement")) == 0))
-			{
-				newvar = ptr->variable;
-				skip_set_var = true;
-			}
-			else if ((ptr->variable->type->type != ECPGt_varchar
-					  && ptr->variable->type->type != ECPGt_char
-					  && ptr->variable->type->type != ECPGt_unsigned_char
-					  && ptr->variable->type->type != ECPGt_string)
-					 && atoi(ptr->variable->type->size) > 1)
-			{
-				newvar = new_variable(cat_str(4, mm_strdup("("),
-											  mm_strdup(ecpg_type_name(ptr->variable->type->u.element->type)),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text)),
-									  ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type,
-																			   mm_strdup("1"),
-																			   ptr->variable->type->u.element->counter),
-														  ptr->variable->type->size),
-									  0);
-			}
-			else if ((ptr->variable->type->type == ECPGt_varchar
-					  || ptr->variable->type->type == ECPGt_char
-					  || ptr->variable->type->type == ECPGt_unsigned_char
-					  || ptr->variable->type->type == ECPGt_string)
-					 && atoi(ptr->variable->type->size) > 1)
-			{
-				newvar = new_variable(cat_str(4, mm_strdup("("),
-											  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text)),
-									  ECPGmake_simple_type(ptr->variable->type->type,
-														   ptr->variable->type->size,
-														   ptr->variable->type->counter),
-									  0);
-				if (ptr->variable->type->type == ECPGt_varchar)
-					var_ptr = true;
-			}
-			else if (ptr->variable->type->type == ECPGt_struct
-					 || ptr->variable->type->type == ECPGt_union)
-			{
-				newvar = new_variable(cat_str(5, mm_strdup("(*("),
-											  mm_strdup(ptr->variable->type->type_name),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text),
-											  mm_strdup(")")),
-									  ECPGmake_struct_type(ptr->variable->type->u.members,
-														   ptr->variable->type->type,
-														   ptr->variable->type->type_name,
-														   ptr->variable->type->struct_sizeof),
-									  0);
-				var_ptr = true;
-			}
-			else if (ptr->variable->type->type == ECPGt_array)
-			{
-				if (ptr->variable->type->u.element->type == ECPGt_struct
-					|| ptr->variable->type->u.element->type == ECPGt_union)
-				{
-					newvar = new_variable(cat_str(5, mm_strdup("(*("),
-											  mm_strdup(ptr->variable->type->u.element->type_name),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text),
-											  mm_strdup(")")),
-										  ECPGmake_struct_type(ptr->variable->type->u.element->u.members,
-															   ptr->variable->type->u.element->type,
-															   ptr->variable->type->u.element->type_name,
-															   ptr->variable->type->u.element->struct_sizeof),
-										  0);
-				}
-				else
-				{
-					newvar = new_variable(cat_str(4, mm_strdup("("),
-												  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
-												  mm_strdup(" *)(ECPGget_var("),
-												  mm_strdup(var_text)),
-										  ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type,
-																				   ptr->variable->type->u.element->size,
-																				   ptr->variable->type->u.element->counter),
-															  ptr->variable->type->size),
-										  0);
-					var_ptr = true;
-				}
-			}
-			else
-			{
-				newvar = new_variable(cat_str(4, mm_strdup("*("),
-											  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text)),
-									  ECPGmake_simple_type(ptr->variable->type->type,
-														   ptr->variable->type->size,
-														   ptr->variable->type->counter),
-									  0);
-				var_ptr = true;
-			}
-
-			/* create call to "ECPGset_var(<counter>, <connection>, <pointer>. <line number>)" */
-			if (!skip_set_var)
-			{
-				sprintf(var_text, "%d, %s", ecpg_internal_var++, var_ptr ? "&(" : "(");
-				result = cat_str(5, result, mm_strdup("ECPGset_var("),
-								 mm_strdup(var_text), mm_strdup(original_var),
-								 mm_strdup("), __LINE__);\n"));
-			}
-
-			/* now the indicator if there is one and it's not a global variable */
-			if ((ptr->indicator->type->type == ECPGt_NO_INDICATOR) || (ptr->indicator->brace_level == 0))
-			{
-				newind = ptr->indicator;
-			}
-			else
-			{
-				/* change variable name to "ECPGget_var(<counter>)" */
-				original_var = ptr->indicator->name;
-				sprintf(var_text, "%d))", ecpg_internal_var);
-				var_ptr = false;
-
-				if (ptr->indicator->type->type == ECPGt_struct
-					|| ptr->indicator->type->type == ECPGt_union)
-				{
-					newind = new_variable(cat_str(5, mm_strdup("(*("),
-											  mm_strdup(ptr->indicator->type->type_name),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text),
-											  mm_strdup(")")),
-										  ECPGmake_struct_type(ptr->indicator->type->u.members,
-															   ptr->indicator->type->type,
-															   ptr->indicator->type->type_name,
-															   ptr->indicator->type->struct_sizeof),
-										  0);
-					var_ptr = true;
-				}
-				else if (ptr->indicator->type->type == ECPGt_array)
-				{
-					if (ptr->indicator->type->u.element->type == ECPGt_struct
-						|| ptr->indicator->type->u.element->type == ECPGt_union)
-					{
-						newind = new_variable(cat_str(5, mm_strdup("(*("),
-											  mm_strdup(ptr->indicator->type->u.element->type_name),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text),
-											  mm_strdup(")")),
-											  ECPGmake_struct_type(ptr->indicator->type->u.element->u.members,
-																   ptr->indicator->type->u.element->type,
-																   ptr->indicator->type->u.element->type_name,
-																   ptr->indicator->type->u.element->struct_sizeof),
-											  0);
-					}
-					else
-					{
-						newind = new_variable(cat_str(4, mm_strdup("("),
-													  mm_strdup(ecpg_type_name(ptr->indicator->type->u.element->type)),
-													  mm_strdup(" *)(ECPGget_var("), mm_strdup(var_text)),
-											  ECPGmake_array_type(ECPGmake_simple_type(ptr->indicator->type->u.element->type,
-																					   ptr->indicator->type->u.element->size,
-																					   ptr->indicator->type->u.element->counter),
-																  ptr->indicator->type->size),
-											  0);
-						var_ptr = true;
-					}
-				}
-				else if (atoi(ptr->indicator->type->size) > 1)
-				{
-					newind = new_variable(cat_str(4, mm_strdup("("),
-												  mm_strdup(ecpg_type_name(ptr->indicator->type->type)),
-												  mm_strdup(" *)(ECPGget_var("),
-												  mm_strdup(var_text)),
-										  ECPGmake_simple_type(ptr->indicator->type->type,
-															   ptr->indicator->type->size,
-															   ptr->variable->type->counter),
-										  0);
-				}
-				else
-				{
-					newind = new_variable(cat_str(4, mm_strdup("*("),
-												  mm_strdup(ecpg_type_name(ptr->indicator->type->type)),
-												  mm_strdup(" *)(ECPGget_var("),
-												  mm_strdup(var_text)),
-										  ECPGmake_simple_type(ptr->indicator->type->type,
-															   ptr->indicator->type->size,
-															   ptr->variable->type->counter),
-										  0);
-					var_ptr = true;
-				}
-
-				/* create call to "ECPGset_var(<counter>, <pointer>. <line number>)" */
-				sprintf(var_text, "%d, %s", ecpg_internal_var++, var_ptr ? "&(" : "(");
-				result = cat_str(5, result, mm_strdup("ECPGset_var("),
-								 mm_strdup(var_text), mm_strdup(original_var),
-								 mm_strdup("), __LINE__);\n"));
-			}
-
-			add_variable_to_tail(&newlist, newvar, newind);
-		}
-
-		if (insert)
-			cur->argsinsert_oos = newlist;
-		else
-			cur->argsresult_oos = newlist;
-	}
-
-	return result;
-}
-
-/* This tests whether the cursor was declared and opened in the same function. */
-#define SAMEFUNC(cur)	\
-	((cur->function == NULL) ||		\
-	 (cur->function != NULL && strcmp(cur->function, current_function) == 0))
-
-static struct cursor *
-add_additional_variables(char *name, bool insert)
-{
-	struct cursor *ptr;
-	struct arguments *p;
-	int (* strcmp_fn)(const char *, const char *) = ((name[0] == ':' || name[0] == '"') ? strcmp : pg_strcasecmp);
-
-	for (ptr = cur; ptr != NULL; ptr=ptr->next)
-	{
-		if (strcmp_fn(ptr->name, name) == 0)
-			break;
-	}
-
-	if (ptr == NULL)
-	{
-		mmerror(PARSE_ERROR, ET_ERROR, "cursor \"%s\" does not exist", name);
-		return NULL;
-	}
-
-	if (insert)
-	{
-		/* add all those input variables that were given earlier
-		 * note that we have to append here but have to keep the existing order */
-		for (p = (SAMEFUNC(ptr) ? ptr->argsinsert : ptr->argsinsert_oos); p; p = p->next)
-			add_variable_to_tail(&argsinsert, p->variable, p->indicator);
-	}
-
-	/* add all those output variables that were given earlier */
-	for (p = (SAMEFUNC(ptr) ? ptr->argsresult : ptr->argsresult_oos); p; p = p->next)
-		add_variable_to_tail(&argsresult, p->variable, p->indicator);
-
-	return ptr;
-}
-
-static void
-add_typedef(char *name, char *dimension, char *length, enum ECPGttype type_enum,
-			char *type_dimension, char *type_index, int initializer, int array)
-{
-	/* add entry to list */
-	struct typedefs *ptr, *this;
-
-	if ((type_enum == ECPGt_struct ||
-		 type_enum == ECPGt_union) &&
-		initializer == 1)
-		mmerror(PARSE_ERROR, ET_ERROR, "initializer not allowed in type definition");
-	else if (INFORMIX_MODE && strcmp(name, "string") == 0)
-		mmerror(PARSE_ERROR, ET_ERROR, "type name \"string\" is reserved in Informix mode");
-	else
-	{
-		for (ptr = types; ptr != NULL; ptr = ptr->next)
-		{
-			if (strcmp(name, ptr->name) == 0)
-				/* re-definition is a bug */
-				mmerror(PARSE_ERROR, ET_ERROR, "type \"%s\" is already defined", name);
-		}
-		adjust_array(type_enum, &dimension, &length, type_dimension, type_index, array, true);
-
-		this = (struct typedefs *) mm_alloc(sizeof(struct typedefs));
-
-		/* initial definition */
-		this->next = types;
-		this->name = name;
-		this->brace_level = braces_open;
-		this->type = (struct this_type *) mm_alloc(sizeof(struct this_type));
-		this->type->type_enum = type_enum;
-		this->type->type_str = mm_strdup(name);
-		this->type->type_dimension = dimension; /* dimension of array */
-		this->type->type_index = length;	/* length of string */
-		this->type->type_sizeof = ECPGstruct_sizeof;
-		this->struct_member_list = (type_enum == ECPGt_struct || type_enum == ECPGt_union) ?
-		ECPGstruct_member_dup(struct_member_list[struct_level]) : NULL;
-
-		if (type_enum != ECPGt_varchar &&
-			type_enum != ECPGt_char &&
-			type_enum != ECPGt_unsigned_char &&
-			type_enum != ECPGt_string &&
-			atoi(this->type->type_index) >= 0)
-			mmerror(PARSE_ERROR, ET_ERROR, "multidimensional arrays for simple data types are not supported");
-
-		types = this;
-	}
-}
-
-
-/* Line 268 of yacc.c  */
-#line 635 "preproc.c"
-
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-
-/* Enabling verbose error messages.  */
-#ifdef YYERROR_VERBOSE
-# undef YYERROR_VERBOSE
-# define YYERROR_VERBOSE 1
-#else
-# define YYERROR_VERBOSE 0
-#endif
+/* Bison version.  */
+#define YYBISON_VERSION "2.3"
 
-/* Enabling the token table.  */
-#ifndef YYTOKEN_TABLE
-# define YYTOKEN_TABLE 0
-#endif
+/* Skeleton name.  */
+#define YYSKELETON_NAME "yacc.c"
+
+/* Pure parsers.  */
+#define YYPURE 0
+
+/* Using locations.  */
+#define YYLSP_NEEDED 1
 
+/* Substitute the variable and function names.  */
+#define yyparse base_yyparse
+#define yylex   base_yylex
+#define yyerror base_yyerror
+#define yylval  base_yylval
+#define yychar  base_yychar
+#define yydebug base_yydebug
+#define yynerrs base_yynerrs
+#define yylloc base_yylloc
 
 /* Tokens.  */
 #ifndef YYTOKENTYPE
@@ -1154,16 +570,1084 @@
      UMINUS = 751
    };
 #endif
+/* Tokens.  */
+#define SQL_ALLOCATE 258
+#define SQL_AUTOCOMMIT 259
+#define SQL_BOOL 260
+#define SQL_BREAK 261
+#define SQL_CALL 262
+#define SQL_CARDINALITY 263
+#define SQL_CONNECT 264
+#define SQL_COUNT 265
+#define SQL_DATETIME_INTERVAL_CODE 266
+#define SQL_DATETIME_INTERVAL_PRECISION 267
+#define SQL_DESCRIBE 268
+#define SQL_DESCRIPTOR 269
+#define SQL_DISCONNECT 270
+#define SQL_FOUND 271
+#define SQL_FREE 272
+#define SQL_GET 273
+#define SQL_GO 274
+#define SQL_GOTO 275
+#define SQL_IDENTIFIED 276
+#define SQL_INDICATOR 277
+#define SQL_KEY_MEMBER 278
+#define SQL_LENGTH 279
+#define SQL_LONG 280
+#define SQL_NULLABLE 281
+#define SQL_OCTET_LENGTH 282
+#define SQL_OPEN 283
+#define SQL_OUTPUT 284
+#define SQL_REFERENCE 285
+#define SQL_RETURNED_LENGTH 286
+#define SQL_RETURNED_OCTET_LENGTH 287
+#define SQL_SCALE 288
+#define SQL_SECTION 289
+#define SQL_SHORT 290
+#define SQL_SIGNED 291
+#define SQL_SQL 292
+#define SQL_SQLERROR 293
+#define SQL_SQLPRINT 294
+#define SQL_SQLWARNING 295
+#define SQL_START 296
+#define SQL_STOP 297
+#define SQL_STRUCT 298
+#define SQL_UNSIGNED 299
+#define SQL_VAR 300
+#define SQL_WHENEVER 301
+#define S_ADD 302
+#define S_AND 303
+#define S_ANYTHING 304
+#define S_AUTO 305
+#define S_CONST 306
+#define S_DEC 307
+#define S_DIV 308
+#define S_DOTPOINT 309
+#define S_EQUAL 310
+#define S_EXTERN 311
+#define S_INC 312
+#define S_LSHIFT 313
+#define S_MEMPOINT 314
+#define S_MEMBER 315
+#define S_MOD 316
+#define S_MUL 317
+#define S_NEQUAL 318
+#define S_OR 319
+#define S_REGISTER 320
+#define S_RSHIFT 321
+#define S_STATIC 322
+#define S_SUB 323
+#define S_VOLATILE 324
+#define S_TYPEDEF 325
+#define CSTRING 326
+#define CVARIABLE 327
+#define CPP_LINE 328
+#define IP 329
+#define DOLCONST 330
+#define ECONST 331
+#define NCONST 332
+#define UCONST 333
+#define UIDENT 334
+#define IDENT 335
+#define FCONST 336
+#define SCONST 337
+#define BCONST 338
+#define XCONST 339
+#define Op 340
+#define ICONST 341
+#define PARAM 342
+#define TYPECAST 343
+#define DOT_DOT 344
+#define COLON_EQUALS 345
+#define ABORT_P 346
+#define ABSOLUTE_P 347
+#define ACCESS 348
+#define ACTION 349
+#define ADD_P 350
+#define ADMIN 351
+#define AFTER 352
+#define AGGREGATE 353
+#define ALL 354
+#define ALSO 355
+#define ALTER 356
+#define ALWAYS 357
+#define ANALYSE 358
+#define ANALYZE 359
+#define AND 360
+#define ANY 361
+#define ARRAY 362
+#define AS 363
+#define ASC 364
+#define ASSERTION 365
+#define ASSIGNMENT 366
+#define ASYMMETRIC 367
+#define AT 368
+#define ATTRIBUTE 369
+#define AUTHORIZATION 370
+#define BACKWARD 371
+#define BEFORE 372
+#define BEGIN_P 373
+#define BETWEEN 374
+#define BIGINT 375
+#define BINARY 376
+#define BIT 377
+#define BOOLEAN_P 378
+#define BOTH 379
+#define BY 380
+#define CACHE 381
+#define CALLED 382
+#define CASCADE 383
+#define CASCADED 384
+#define CASE 385
+#define CAST 386
+#define CATALOG_P 387
+#define CHAIN 388
+#define CHAR_P 389
+#define CHARACTER 390
+#define CHARACTERISTICS 391
+#define CHECK 392
+#define CHECKPOINT 393
+#define CLASS 394
+#define CLOSE 395
+#define CLUSTER 396
+#define COALESCE 397
+#define COLLATE 398
+#define COLLATION 399
+#define COLUMN 400
+#define COMMENT 401
+#define COMMENTS 402
+#define COMMIT 403
+#define COMMITTED 404
+#define CONCURRENTLY 405
+#define CONFIGURATION 406
+#define CONNECTION 407
+#define CONSTRAINT 408
+#define CONSTRAINTS 409
+#define CONTENT_P 410
+#define CONTINUE_P 411
+#define CONVERSION_P 412
+#define COPY 413
+#define COST 414
+#define CREATE 415
+#define CROSS 416
+#define CSV 417
+#define CURRENT_P 418
+#define CURRENT_CATALOG 419
+#define CURRENT_DATE 420
+#define CURRENT_ROLE 421
+#define CURRENT_SCHEMA 422
+#define CURRENT_TIME 423
+#define CURRENT_TIMESTAMP 424
+#define CURRENT_USER 425
+#define CURSOR 426
+#define CYCLE 427
+#define DATA_P 428
+#define DATABASE 429
+#define DAY_P 430
+#define DEALLOCATE 431
+#define DEC 432
+#define DECIMAL_P 433
+#define DECLARE 434
+#define DEFAULT 435
+#define DEFAULTS 436
+#define DEFERRABLE 437
+#define DEFERRED 438
+#define DEFINER 439
+#define DELETE_P 440
+#define DELIMITER 441
+#define DELIMITERS 442
+#define DESC 443
+#define DICTIONARY 444
+#define DISABLE_P 445
+#define DISCARD 446
+#define DISTINCT 447
+#define DO 448
+#define DOCUMENT_P 449
+#define DOMAIN_P 450
+#define DOUBLE_P 451
+#define DROP 452
+#define EACH 453
+#define ELSE 454
+#define ENABLE_P 455
+#define ENCODING 456
+#define ENCRYPTED 457
+#define END_P 458
+#define ENUM_P 459
+#define ESCAPE 460
+#define EVENT 461
+#define EXCEPT 462
+#define EXCLUDE 463
+#define EXCLUDING 464
+#define EXCLUSIVE 465
+#define EXECUTE 466
+#define EXISTS 467
+#define EXPLAIN 468
+#define EXTENSION 469
+#define EXTERNAL 470
+#define EXTRACT 471
+#define FALSE_P 472
+#define FAMILY 473
+#define FETCH 474
+#define FIRST_P 475
+#define FLOAT_P 476
+#define FOLLOWING 477
+#define FOR 478
+#define FORCE 479
+#define FOREIGN 480
+#define FORWARD 481
+#define FREEZE 482
+#define FROM 483
+#define FULL 484
+#define FUNCTION 485
+#define FUNCTIONS 486
+#define GLOBAL 487
+#define GRANT 488
+#define GRANTED 489
+#define GREATEST 490
+#define GROUP_P 491
+#define HANDLER 492
+#define HAVING 493
+#define HEADER_P 494
+#define HOLD 495
+#define HOUR_P 496
+#define IDENTITY_P 497
+#define IF_P 498
+#define ILIKE 499
+#define IMMEDIATE 500
+#define IMMUTABLE 501
+#define IMPLICIT_P 502
+#define IN_P 503
+#define INCLUDING 504
+#define INCREMENT 505
+#define INDEX 506
+#define INDEXES 507
+#define INHERIT 508
+#define INHERITS 509
+#define INITIALLY 510
+#define INLINE_P 511
+#define INNER_P 512
+#define INOUT 513
+#define INPUT_P 514
+#define INSENSITIVE 515
+#define INSERT 516
+#define INSTEAD 517
+#define INT_P 518
+#define INTEGER 519
+#define INTERSECT 520
+#define INTERVAL 521
+#define INTO 522
+#define INVOKER 523
+#define IS 524
+#define ISNULL 525
+#define ISOLATION 526
+#define JOIN 527
+#define KEY 528
+#define LABEL 529
+#define LANGUAGE 530
+#define LARGE_P 531
+#define LAST_P 532
+#define LATERAL_P 533
+#define LC_COLLATE_P 534
+#define LC_CTYPE_P 535
+#define LEADING 536
+#define LEAKPROOF 537
+#define LEAST 538
+#define LEFT 539
+#define LEVEL 540
+#define LIKE 541
+#define LIMIT 542
+#define LISTEN 543
+#define LOAD 544
+#define LOCAL 545
+#define LOCALTIME 546
+#define LOCALTIMESTAMP 547
+#define LOCATION 548
+#define LOCK_P 549
+#define MAPPING 550
+#define MATCH 551
+#define MATERIALIZED 552
+#define MAXVALUE 553
+#define MINUTE_P 554
+#define MINVALUE 555
+#define MODE 556
+#define MONTH_P 557
+#define MOVE 558
+#define NAME_P 559
+#define NAMES 560
+#define NATIONAL 561
+#define NATURAL 562
+#define NCHAR 563
+#define NEXT 564
+#define NO 565
+#define NONE 566
+#define NOT 567
+#define NOTHING 568
+#define NOTIFY 569
+#define NOTNULL 570
+#define NOWAIT 571
+#define NULL_P 572
+#define NULLIF 573
+#define NULLS_P 574
+#define NUMERIC 575
+#define OBJECT_P 576
+#define OF 577
+#define OFF 578
+#define OFFSET 579
+#define OIDS 580
+#define ON 581
+#define ONLY 582
+#define OPERATOR 583
+#define OPTION 584
+#define OPTIONS 585
+#define OR 586
+#define ORDER 587
+#define OUT_P 588
+#define OUTER_P 589
+#define OVER 590
+#define OVERLAPS 591
+#define OVERLAY 592
+#define OWNED 593
+#define OWNER 594
+#define PARSER 595
+#define PARTIAL 596
+#define PARTITION 597
+#define PASSING 598
+#define PASSWORD 599
+#define PLACING 600
+#define PLANS 601
+#define POSITION 602
+#define PRECEDING 603
+#define PRECISION 604
+#define PRESERVE 605
+#define PREPARE 606
+#define PREPARED 607
+#define PRIMARY 608
+#define PRIOR 609
+#define PRIVILEGES 610
+#define PROCEDURAL 611
+#define PROCEDURE 612
+#define PROGRAM 613
+#define QUOTE 614
+#define RANGE 615
+#define READ 616
+#define REAL 617
+#define REASSIGN 618
+#define RECHECK 619
+#define RECURSIVE 620
+#define REF 621
+#define REFERENCES 622
+#define REFRESH 623
+#define REINDEX 624
+#define RELATIVE_P 625
+#define RELEASE 626
+#define RENAME 627
+#define REPEATABLE 628
+#define REPLACE 629
+#define REPLICA 630
+#define RESET 631
+#define RESTART 632
+#define RESTRICT 633
+#define RETURNING 634
+#define RETURNS 635
+#define REVOKE 636
+#define RIGHT 637
+#define ROLE 638
+#define ROLLBACK 639
+#define ROW 640
+#define ROWS 641
+#define RULE 642
+#define SAVEPOINT 643
+#define SCHEMA 644
+#define SCROLL 645
+#define SEARCH 646
+#define SECOND_P 647
+#define SECURITY 648
+#define SELECT 649
+#define SEQUENCE 650
+#define SEQUENCES 651
+#define SERIALIZABLE 652
+#define SERVER 653
+#define SESSION 654
+#define SESSION_USER 655
+#define SET 656
+#define SETOF 657
+#define SHARE 658
+#define SHOW 659
+#define SIMILAR 660
+#define SIMPLE 661
+#define SMALLINT 662
+#define SNAPSHOT 663
+#define SOME 664
+#define STABLE 665
+#define STANDALONE_P 666
+#define START 667
+#define STATEMENT 668
+#define STATISTICS 669
+#define STDIN 670
+#define STDOUT 671
+#define STORAGE 672
+#define STRICT_P 673
+#define STRIP_P 674
+#define SUBSTRING 675
+#define SYMMETRIC 676
+#define SYSID 677
+#define SYSTEM_P 678
+#define TABLE 679
+#define TABLES 680
+#define TABLESPACE 681
+#define TEMP 682
+#define TEMPLATE 683
+#define TEMPORARY 684
+#define TEXT_P 685
+#define THEN 686
+#define TIME 687
+#define TIMESTAMP 688
+#define TO 689
+#define TRAILING 690
+#define TRANSACTION 691
+#define TREAT 692
+#define TRIGGER 693
+#define TRIM 694
+#define TRUE_P 695
+#define TRUNCATE 696
+#define TRUSTED 697
+#define TYPE_P 698
+#define TYPES_P 699
+#define UNBOUNDED 700
+#define UNCOMMITTED 701
+#define UNENCRYPTED 702
+#define UNION 703
+#define UNIQUE 704
+#define UNKNOWN 705
+#define UNLISTEN 706
+#define UNLOGGED 707
+#define UNTIL 708
+#define UPDATE 709
+#define USER 710
+#define USING 711
+#define VACUUM 712
+#define VALID 713
+#define VALIDATE 714
+#define VALIDATOR 715
+#define VALUE_P 716
+#define VALUES 717
+#define VARCHAR 718
+#define VARIADIC 719
+#define VARYING 720
+#define VERBOSE 721
+#define VERSION_P 722
+#define VIEW 723
+#define VOLATILE 724
+#define WHEN 725
+#define WHERE 726
+#define WHITESPACE_P 727
+#define WINDOW 728
+#define WITH 729
+#define WITHOUT 730
+#define WORK 731
+#define WRAPPER 732
+#define WRITE 733
+#define XML_P 734
+#define XMLATTRIBUTES 735
+#define XMLCONCAT 736
+#define XMLELEMENT 737
+#define XMLEXISTS 738
+#define XMLFOREST 739
+#define XMLPARSE 740
+#define XMLPI 741
+#define XMLROOT 742
+#define XMLSERIALIZE 743
+#define YEAR_P 744
+#define YES_P 745
+#define ZONE 746
+#define NULLS_FIRST 747
+#define NULLS_LAST 748
+#define WITH_TIME 749
+#define POSTFIXOP 750
+#define UMINUS 751
+
+
+
+
+/* Copy the first part of user declarations.  */
+#line 5 "preproc.y"
+
+#include "postgres_fe.h"
+
+#include "extern.h"
+#include "ecpg_config.h"
+#include <unistd.h>
+
+/* Location tracking support --- simpler than bison's default */
+#define YYLLOC_DEFAULT(Current, Rhs, N) \
+	do { \
+		if (N)						\
+			(Current) = (Rhs)[1];	\
+		else						\
+			(Current) = (Rhs)[0];	\
+	} while (0)
+
+/*
+ * The %name-prefix option below will make bison call base_yylex, but we
+ * really want it to call filtered_base_yylex (see parser.c).
+ */
+#define base_yylex filtered_base_yylex
+
+/*
+ * This is only here so the string gets into the POT.  Bison uses it
+ * internally.
+ */
+#define bison_gettext_dummy gettext_noop("syntax error")
+
+/*
+ * Variables containing simple states.
+ */
+int struct_level = 0;
+int braces_open; /* brace level counter */
+char *current_function;
+int ecpg_internal_var = 0;
+char	*connection = NULL;
+char	*input_filename = NULL;
+
+static int	FoundInto = 0;
+static int	initializer = 0;
+static int	pacounter = 1;
+static char	pacounter_buffer[sizeof(int) * CHAR_BIT * 10 / 3]; /* a rough guess at the size we need */
+static struct this_type actual_type[STRUCT_DEPTH];
+static char *actual_startline[STRUCT_DEPTH];
+static int	varchar_counter = 1;
+
+/* temporarily store struct members while creating the data structure */
+struct ECPGstruct_member *struct_member_list[STRUCT_DEPTH] = { NULL };
+
+/* also store struct type so we can do a sizeof() later */
+static char *ECPGstruct_sizeof = NULL;
+
+/* for forward declarations we have to store some data as well */
+static char *forward_name = NULL;
+
+struct ECPGtype ecpg_no_indicator = {ECPGt_NO_INDICATOR, NULL, NULL, NULL, {NULL}, 0};
+struct variable no_indicator = {"no_indicator", &ecpg_no_indicator, 0, NULL};
+
+struct ECPGtype ecpg_query = {ECPGt_char_variable, NULL, NULL, NULL, {NULL}, 0};
+
+/*
+ * Handle parsing errors and warnings
+ */
+void
+mmerror(int error_code, enum errortype type, const char *error, ...)
+{
+	va_list ap;
+
+	/* internationalize the error message string */
+	error = _(error);
+
+	fprintf(stderr, "%s:%d: ", input_filename, yylineno);
+
+	switch(type)
+	{
+		case ET_WARNING:
+			fprintf(stderr, _("WARNING: "));
+			break;
+		case ET_ERROR:
+		case ET_FATAL:
+			fprintf(stderr, _("ERROR: "));
+			break;
+	}
+
+	va_start(ap, error);
+	vfprintf(stderr, error, ap);
+	va_end(ap);
+
+	fprintf(stderr, "\n");
+
+	switch(type)
+	{
+		case ET_WARNING:
+			break;
+		case ET_ERROR:
+			ret_value = error_code;
+			break;
+		case ET_FATAL:
+			if (yyin)
+				fclose(yyin);
+			if (yyout)
+				fclose(yyout);
+
+			if (strcmp(output_filename, "-") != 0 && unlink(output_filename) != 0)
+				fprintf(stderr, _("could not remove output file \"%s\"\n"), output_filename);
+			exit(error_code);
+	}
+}
+
+/*
+ * string concatenation
+ */
+
+static char *
+cat2_str(char *str1, char *str2)
+{
+	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 2);
+
+	strcpy(res_str, str1);
+	if (strlen(str1) != 0 && strlen(str2) != 0)
+		strcat(res_str, " ");
+	strcat(res_str, str2);
+	free(str1);
+	free(str2);
+	return(res_str);
+}
+
+static char *
+cat_str(int count, ...)
+{
+	va_list		args;
+	int			i;
+	char		*res_str;
+
+	va_start(args, count);
+
+	res_str = va_arg(args, char *);
+
+	/* now add all other strings */
+	for (i = 1; i < count; i++)
+		res_str = cat2_str(res_str, va_arg(args, char *));
+
+	va_end(args);
+
+	return(res_str);
+}
+
+static char *
+make2_str(char *str1, char *str2)
+{
+	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 1);
+
+	strcpy(res_str, str1);
+	strcat(res_str, str2);
+	free(str1);
+	free(str2);
+	return(res_str);
+}
+
+static char *
+make3_str(char *str1, char *str2, char *str3)
+{
+	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) +strlen(str3) + 1);
+
+	strcpy(res_str, str1);
+	strcat(res_str, str2);
+	strcat(res_str, str3);
+	free(str1);
+	free(str2);
+	free(str3);
+	return(res_str);
+}
+
+/* and the rest */
+static char *
+make_name(void)
+{
+	return mm_strdup(yytext);
+}
+
+static char *
+create_questionmarks(char *name, bool array)
+{
+	struct variable *p = find_variable(name);
+	int count;
+	char *result = EMPTY;
+
+	/* In case we have a struct, we have to print as many "?" as there are attributes in the struct
+	 * An array is only allowed together with an element argument
+	 * This is essantially only used for inserts, but using a struct as input parameter is an error anywhere else
+	 * so we don't have to worry here. */
+
+	if (p->type->type == ECPGt_struct || (array && p->type->type == ECPGt_array && p->type->u.element->type == ECPGt_struct))
+	{
+		struct ECPGstruct_member *m;
+
+		if (p->type->type == ECPGt_struct)
+			m = p->type->u.members;
+		else
+			m = p->type->u.element->u.members;
+
+		for (count = 0; m != NULL; m=m->next, count++);
+	}
+	else
+		count = 1;
+
+	for (; count > 0; count --)
+	{
+		sprintf(pacounter_buffer, "$%d", pacounter++);
+		result = cat_str(3, result, mm_strdup(pacounter_buffer), mm_strdup(" , "));
+	}
+
+	/* removed the trailing " ," */
+
+	result[strlen(result)-3] = '\0';
+	return(result);
+}
+
+static char *
+adjust_outofscope_cursor_vars(struct cursor *cur)
+{
+	/* Informix accepts DECLARE with variables that are out of scope when OPEN is called.
+	 * For instance you can DECLARE a cursor in one function, and OPEN/FETCH/CLOSE
+	 * it in another functions. This is very useful for e.g. event-driver programming,
+	 * but may also lead to dangerous programming. The limitation when this is allowed
+	 * and doesn't cause problems have to be documented, like the allocated variables
+	 * must not be realloc()'ed.
+	 *
+	 * We have to change the variables to our own struct and just store the pointer
+	 * instead of the variable. Do it only for local variables, not for globals.
+	 */
+
+	char *result = EMPTY;
+	int insert;
+
+	for (insert = 1; insert >= 0; insert--)
+	{
+		struct arguments *list;
+		struct arguments *ptr;
+		struct arguments *newlist = NULL;
+		struct variable *newvar, *newind;
+
+		list = (insert ? cur->argsinsert : cur->argsresult);
+
+		for (ptr = list; ptr != NULL; ptr = ptr->next)
+		{
+			char var_text[20];
+			char *original_var;
+			bool skip_set_var = false;
+			bool var_ptr = false;
+
+			/* change variable name to "ECPGget_var(<counter>)" */
+			original_var = ptr->variable->name;
+			sprintf(var_text, "%d))", ecpg_internal_var);
+
+			/* Don't emit ECPGset_var() calls for global variables */
+			if (ptr->variable->brace_level == 0)
+			{
+				newvar = ptr->variable;
+				skip_set_var = true;
+			}
+			else if ((ptr->variable->type->type == ECPGt_char_variable)
+					 && (strncmp(ptr->variable->name, "ECPGprepared_statement", strlen("ECPGprepared_statement")) == 0))
+			{
+				newvar = ptr->variable;
+				skip_set_var = true;
+			}
+			else if ((ptr->variable->type->type != ECPGt_varchar
+					  && ptr->variable->type->type != ECPGt_char
+					  && ptr->variable->type->type != ECPGt_unsigned_char
+					  && ptr->variable->type->type != ECPGt_string)
+					 && atoi(ptr->variable->type->size) > 1)
+			{
+				newvar = new_variable(cat_str(4, mm_strdup("("),
+											  mm_strdup(ecpg_type_name(ptr->variable->type->u.element->type)),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text)),
+									  ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type,
+																			   mm_strdup("1"),
+																			   ptr->variable->type->u.element->counter),
+														  ptr->variable->type->size),
+									  0);
+			}
+			else if ((ptr->variable->type->type == ECPGt_varchar
+					  || ptr->variable->type->type == ECPGt_char
+					  || ptr->variable->type->type == ECPGt_unsigned_char
+					  || ptr->variable->type->type == ECPGt_string)
+					 && atoi(ptr->variable->type->size) > 1)
+			{
+				newvar = new_variable(cat_str(4, mm_strdup("("),
+											  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text)),
+									  ECPGmake_simple_type(ptr->variable->type->type,
+														   ptr->variable->type->size,
+														   ptr->variable->type->counter),
+									  0);
+				if (ptr->variable->type->type == ECPGt_varchar)
+					var_ptr = true;
+			}
+			else if (ptr->variable->type->type == ECPGt_struct
+					 || ptr->variable->type->type == ECPGt_union)
+			{
+				newvar = new_variable(cat_str(5, mm_strdup("(*("),
+											  mm_strdup(ptr->variable->type->type_name),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text),
+											  mm_strdup(")")),
+									  ECPGmake_struct_type(ptr->variable->type->u.members,
+														   ptr->variable->type->type,
+														   ptr->variable->type->type_name,
+														   ptr->variable->type->struct_sizeof),
+									  0);
+				var_ptr = true;
+			}
+			else if (ptr->variable->type->type == ECPGt_array)
+			{
+				if (ptr->variable->type->u.element->type == ECPGt_struct
+					|| ptr->variable->type->u.element->type == ECPGt_union)
+				{
+					newvar = new_variable(cat_str(5, mm_strdup("(*("),
+											  mm_strdup(ptr->variable->type->u.element->type_name),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text),
+											  mm_strdup(")")),
+										  ECPGmake_struct_type(ptr->variable->type->u.element->u.members,
+															   ptr->variable->type->u.element->type,
+															   ptr->variable->type->u.element->type_name,
+															   ptr->variable->type->u.element->struct_sizeof),
+										  0);
+				}
+				else
+				{
+					newvar = new_variable(cat_str(4, mm_strdup("("),
+												  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
+												  mm_strdup(" *)(ECPGget_var("),
+												  mm_strdup(var_text)),
+										  ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type,
+																				   ptr->variable->type->u.element->size,
+																				   ptr->variable->type->u.element->counter),
+															  ptr->variable->type->size),
+										  0);
+					var_ptr = true;
+				}
+			}
+			else
+			{
+				newvar = new_variable(cat_str(4, mm_strdup("*("),
+											  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text)),
+									  ECPGmake_simple_type(ptr->variable->type->type,
+														   ptr->variable->type->size,
+														   ptr->variable->type->counter),
+									  0);
+				var_ptr = true;
+			}
+
+			/* create call to "ECPGset_var(<counter>, <connection>, <pointer>. <line number>)" */
+			if (!skip_set_var)
+			{
+				sprintf(var_text, "%d, %s", ecpg_internal_var++, var_ptr ? "&(" : "(");
+				result = cat_str(5, result, mm_strdup("ECPGset_var("),
+								 mm_strdup(var_text), mm_strdup(original_var),
+								 mm_strdup("), __LINE__);\n"));
+			}
+
+			/* now the indicator if there is one and it's not a global variable */
+			if ((ptr->indicator->type->type == ECPGt_NO_INDICATOR) || (ptr->indicator->brace_level == 0))
+			{
+				newind = ptr->indicator;
+			}
+			else
+			{
+				/* change variable name to "ECPGget_var(<counter>)" */
+				original_var = ptr->indicator->name;
+				sprintf(var_text, "%d))", ecpg_internal_var);
+				var_ptr = false;
+
+				if (ptr->indicator->type->type == ECPGt_struct
+					|| ptr->indicator->type->type == ECPGt_union)
+				{
+					newind = new_variable(cat_str(5, mm_strdup("(*("),
+											  mm_strdup(ptr->indicator->type->type_name),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text),
+											  mm_strdup(")")),
+										  ECPGmake_struct_type(ptr->indicator->type->u.members,
+															   ptr->indicator->type->type,
+															   ptr->indicator->type->type_name,
+															   ptr->indicator->type->struct_sizeof),
+										  0);
+					var_ptr = true;
+				}
+				else if (ptr->indicator->type->type == ECPGt_array)
+				{
+					if (ptr->indicator->type->u.element->type == ECPGt_struct
+						|| ptr->indicator->type->u.element->type == ECPGt_union)
+					{
+						newind = new_variable(cat_str(5, mm_strdup("(*("),
+											  mm_strdup(ptr->indicator->type->u.element->type_name),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text),
+											  mm_strdup(")")),
+											  ECPGmake_struct_type(ptr->indicator->type->u.element->u.members,
+																   ptr->indicator->type->u.element->type,
+																   ptr->indicator->type->u.element->type_name,
+																   ptr->indicator->type->u.element->struct_sizeof),
+											  0);
+					}
+					else
+					{
+						newind = new_variable(cat_str(4, mm_strdup("("),
+													  mm_strdup(ecpg_type_name(ptr->indicator->type->u.element->type)),
+													  mm_strdup(" *)(ECPGget_var("), mm_strdup(var_text)),
+											  ECPGmake_array_type(ECPGmake_simple_type(ptr->indicator->type->u.element->type,
+																					   ptr->indicator->type->u.element->size,
+																					   ptr->indicator->type->u.element->counter),
+																  ptr->indicator->type->size),
+											  0);
+						var_ptr = true;
+					}
+				}
+				else if (atoi(ptr->indicator->type->size) > 1)
+				{
+					newind = new_variable(cat_str(4, mm_strdup("("),
+												  mm_strdup(ecpg_type_name(ptr->indicator->type->type)),
+												  mm_strdup(" *)(ECPGget_var("),
+												  mm_strdup(var_text)),
+										  ECPGmake_simple_type(ptr->indicator->type->type,
+															   ptr->indicator->type->size,
+															   ptr->variable->type->counter),
+										  0);
+				}
+				else
+				{
+					newind = new_variable(cat_str(4, mm_strdup("*("),
+												  mm_strdup(ecpg_type_name(ptr->indicator->type->type)),
+												  mm_strdup(" *)(ECPGget_var("),
+												  mm_strdup(var_text)),
+										  ECPGmake_simple_type(ptr->indicator->type->type,
+															   ptr->indicator->type->size,
+															   ptr->variable->type->counter),
+										  0);
+					var_ptr = true;
+				}
+
+				/* create call to "ECPGset_var(<counter>, <pointer>. <line number>)" */
+				sprintf(var_text, "%d, %s", ecpg_internal_var++, var_ptr ? "&(" : "(");
+				result = cat_str(5, result, mm_strdup("ECPGset_var("),
+								 mm_strdup(var_text), mm_strdup(original_var),
+								 mm_strdup("), __LINE__);\n"));
+			}
+
+			add_variable_to_tail(&newlist, newvar, newind);
+		}
+
+		if (insert)
+			cur->argsinsert_oos = newlist;
+		else
+			cur->argsresult_oos = newlist;
+	}
+
+	return result;
+}
+
+/* This tests whether the cursor was declared and opened in the same function. */
+#define SAMEFUNC(cur)	\
+	((cur->function == NULL) ||		\
+	 (cur->function != NULL && strcmp(cur->function, current_function) == 0))
+
+static struct cursor *
+add_additional_variables(char *name, bool insert)
+{
+	struct cursor *ptr;
+	struct arguments *p;
+	int (* strcmp_fn)(const char *, const char *) = ((name[0] == ':' || name[0] == '"') ? strcmp : pg_strcasecmp);
+
+	for (ptr = cur; ptr != NULL; ptr=ptr->next)
+	{
+		if (strcmp_fn(ptr->name, name) == 0)
+			break;
+	}
+
+	if (ptr == NULL)
+	{
+		mmerror(PARSE_ERROR, ET_ERROR, "cursor \"%s\" does not exist", name);
+		return NULL;
+	}
+
+	if (insert)
+	{
+		/* add all those input variables that were given earlier
+		 * note that we have to append here but have to keep the existing order */
+		for (p = (SAMEFUNC(ptr) ? ptr->argsinsert : ptr->argsinsert_oos); p; p = p->next)
+			add_variable_to_tail(&argsinsert, p->variable, p->indicator);
+	}
+
+	/* add all those output variables that were given earlier */
+	for (p = (SAMEFUNC(ptr) ? ptr->argsresult : ptr->argsresult_oos); p; p = p->next)
+		add_variable_to_tail(&argsresult, p->variable, p->indicator);
+
+	return ptr;
+}
+
+static void
+add_typedef(char *name, char *dimension, char *length, enum ECPGttype type_enum,
+			char *type_dimension, char *type_index, int initializer, int array)
+{
+	/* add entry to list */
+	struct typedefs *ptr, *this;
+
+	if ((type_enum == ECPGt_struct ||
+		 type_enum == ECPGt_union) &&
+		initializer == 1)
+		mmerror(PARSE_ERROR, ET_ERROR, "initializer not allowed in type definition");
+	else if (INFORMIX_MODE && strcmp(name, "string") == 0)
+		mmerror(PARSE_ERROR, ET_ERROR, "type name \"string\" is reserved in Informix mode");
+	else
+	{
+		for (ptr = types; ptr != NULL; ptr = ptr->next)
+		{
+			if (strcmp(name, ptr->name) == 0)
+				/* re-definition is a bug */
+				mmerror(PARSE_ERROR, ET_ERROR, "type \"%s\" is already defined", name);
+		}
+		adjust_array(type_enum, &dimension, &length, type_dimension, type_index, array, true);
+
+		this = (struct typedefs *) mm_alloc(sizeof(struct typedefs));
+
+		/* initial definition */
+		this->next = types;
+		this->name = name;
+		this->brace_level = braces_open;
+		this->type = (struct this_type *) mm_alloc(sizeof(struct this_type));
+		this->type->type_enum = type_enum;
+		this->type->type_str = mm_strdup(name);
+		this->type->type_dimension = dimension; /* dimension of array */
+		this->type->type_index = length;	/* length of string */
+		this->type->type_sizeof = ECPGstruct_sizeof;
+		this->struct_member_list = (type_enum == ECPGt_struct || type_enum == ECPGt_union) ?
+		ECPGstruct_member_dup(struct_member_list[struct_level]) : NULL;
+
+		if (type_enum != ECPGt_varchar &&
+			type_enum != ECPGt_char &&
+			type_enum != ECPGt_unsigned_char &&
+			type_enum != ECPGt_string &&
+			atoi(this->type->type_index) >= 0)
+			mmerror(PARSE_ERROR, ET_ERROR, "multidimensional arrays for simple data types are not supported");
+
+		types = this;
+	}
+}
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
 
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
 
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 564 "preproc.y"
-
+{
 	double	dval;
 	char	*str;
 	int		ival;
@@ -1176,15 +1660,13 @@
 	struct	fetch_desc	descriptor;
 	struct  su_symbol	struct_union;
 	struct	prep		prep;
-
-
-
-/* Line 293 of yacc.c  */
-#line 1184 "preproc.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 1666 "preproc.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
@@ -1204,8 +1686,8 @@
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 1209 "preproc.c"
+/* Line 216 of yacc.c.  */
+#line 1691 "preproc.tab.c"
 
 #ifdef short
 # undef short
@@ -1280,14 +1762,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -1308,11 +1790,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -1335,24 +1817,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -1369,9 +1851,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-  YYLTYPE yyls_alloc;
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+    YYLTYPE yyls;
 };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
@@ -1383,27 +1865,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
       + 2 * YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -1421,7 +1882,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
@@ -3291,19 +3769,19 @@
   "attr_name", "index_name", "file_name", "func_name", "AexprConst",
   "Iconst", "RoleId", "role_list", "SignedIconst", "NonReservedWord",
   "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
-  "reserved_keyword", "statements", "statement", "CreateAsStmt", "$@1",
+  "reserved_keyword", "statements", "statement", "CreateAsStmt", "@1",
   "at", "ECPGConnect", "connection_target", "opt_database_name",
   "db_prefix", "server", "opt_server", "server_name", "opt_port",
   "opt_connection_name", "opt_user", "ora_user", "user_name",
   "char_variable", "opt_options", "connect_options", "opt_opt_value",
   "prepared_name", "ECPGCursorStmt", "ECPGExecuteImmediateStmt",
   "ECPGVarDeclaration", "single_vt_declaration", "precision", "opt_scale",
-  "ecpg_interval", "ECPGDeclaration", "$@2", "sql_startdeclare",
+  "ecpg_interval", "ECPGDeclaration", "@2", "sql_startdeclare",
   "sql_enddeclare", "var_type_declarations", "vt_declarations",
-  "variable_declarations", "type_declaration", "$@3", "var_declaration",
-  "$@4", "$@5", "opt_bit_field", "storage_declaration", "storage_clause",
+  "variable_declarations", "type_declaration", "@3", "var_declaration",
+  "@4", "@5", "opt_bit_field", "storage_declaration", "storage_clause",
   "storage_modifier", "var_type", "enum_type", "enum_definition",
-  "struct_union_type_with_symbol", "$@6", "struct_union_type", "$@7",
+  "struct_union_type_with_symbol", "@6", "struct_union_type", "@7",
   "s_struct_union_symbol", "s_struct_union", "simple_type",
   "unsigned_type", "signed_type", "opt_signed", "variable_list",
   "variable", "opt_initializer", "opt_pointer", "ECPGDeclare",
@@ -3318,8 +3796,8 @@
   "ECPGGetDescriptor", "ECPGGetDescItems", "ECPGGetDescItem",
   "ECPGSetDescriptor", "ECPGSetDescItems", "ECPGSetDescItem",
   "AllConstVar", "descriptor_item", "ECPGSetAutocommit", "on_off",
-  "ECPGSetConnection", "ECPGTypedef", "$@8", "opt_reference", "ECPGVar",
-  "$@9", "ECPGWhenever", "action", "ECPGKeywords", "ECPGKeywords_vanames",
+  "ECPGSetConnection", "ECPGTypedef", "@8", "opt_reference", "ECPGVar",
+  "@9", "ECPGWhenever", "action", "ECPGKeywords", "ECPGKeywords_vanames",
   "ECPGKeywords_rest", "ECPGTypeName", "symbol", "ECPGColId", "ColId",
   "type_function_name", "ColLabel", "ECPGColLabel", "ECPGColLabelCommon",
   "ECPGCKeywords", "all_unreserved_keyword", "ECPGunreserved_interval",
@@ -3962,8 +4440,8 @@
        1,     1,     0,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint16 yydefact[] =
 {
@@ -5150,7 +5628,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -2635
 static const yytype_int16 yytable[] =
 {
@@ -15954,12 +16433,6 @@
      240,   241,   242,   243,   244,   245,   246,     0,   662,   663
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-4473))
-
-#define yytable_value_is_error(yytable_value) \
-  ((yytable_value) == (-2635))
-
 static const yytype_int16 yycheck[] =
 {
        2,    78,   364,  1065,    78,  1113,    78,  1361,  1118,    78,
@@ -27291,18 +27764,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -27312,6 +27776,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -27474,20 +27939,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -27522,11 +27984,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -27563,6 +28025,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -27665,142 +28128,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -27834,9 +28270,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -27852,17 +28289,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
-/* Location data for the lookahead symbol.  */
-YYLTYPE yylloc;
-
 /* Number of syntax errors so far.  */
 int yynerrs;
+/* Location data for the look-ahead symbol.  */
+YYLTYPE yylloc;
+
 
 
 /*----------.
@@ -27891,47 +28329,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-       `yyls': related to locations.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    /* The location stack.  */
-    YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls;
-    YYLTYPE *yylsp;
-
-    /* The locations where the error started and ended.  */
-    YYLTYPE yyerror_range[3];
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-  YYLTYPE yyloc;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -27939,37 +28344,63 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+  /* The location stack.  */
+  YYLTYPE yylsa[YYINITDEPTH];
+  YYLTYPE *yyls = yylsa;
+  YYLTYPE *yylsp;
+  /* The locations where the error started and ended.  */
+  YYLTYPE yyerror_range[2];
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+  YYLTYPE yyloc;
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yyls = yylsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
   yylsp = yyls;
-
 #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
   /* Initialize the default location before parsing starts.  */
   yylloc.first_line   = yylloc.last_line   = 1;
-  yylloc.first_column = yylloc.last_column = 1;
+  yylloc.first_column = yylloc.last_column = 0;
 #endif
 
   goto yysetstate;
@@ -28008,7 +28439,6 @@
 		    &yyvs1, yysize * sizeof (*yyvsp),
 		    &yyls1, yysize * sizeof (*yylsp),
 		    &yystacksize);
-
 	yyls = yyls1;
 	yyss = yyss1;
 	yyvs = yyvs1;
@@ -28030,9 +28460,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
-	YYSTACK_RELOCATE (yyls_alloc, yyls);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+	YYSTACK_RELOCATE (yyls);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -28053,9 +28483,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -28064,16 +28491,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -28099,22 +28526,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -28155,197 +28586,141 @@
   switch (yyn)
     {
         case 3:
-
-/* Line 1806 of yacc.c  */
 #line 1482 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 1484 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 1486 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 1488 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 1490 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 1492 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 1494 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 10:
-
-/* Line 1806 of yacc.c  */
 #line 1496 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 1498 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 1500 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 1502 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 1504 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 1506 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 1508 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 1510 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 1512 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 1514 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 1516 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 1518 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 1520 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 1522 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 1524 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 1526 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 1528 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 1530 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 1532 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 1534 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 1536 "preproc.y"
     {
 		if (INFORMIX_MODE)
@@ -28363,636 +28738,460 @@
 		}
 
 		output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal);
-	}
+	;}
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 1554 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 1556 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 1558 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 34:
-
-/* Line 1806 of yacc.c  */
 #line 1560 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 35:
-
-/* Line 1806 of yacc.c  */
 #line 1562 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 1564 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 37:
-
-/* Line 1806 of yacc.c  */
 #line 1566 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 38:
-
-/* Line 1806 of yacc.c  */
 #line 1568 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 1570 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 1572 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 1574 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 1576 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 43:
-
-/* Line 1806 of yacc.c  */
 #line 1578 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 44:
-
-/* Line 1806 of yacc.c  */
 #line 1580 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 45:
-
-/* Line 1806 of yacc.c  */
 #line 1582 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 1584 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 47:
-
-/* Line 1806 of yacc.c  */
 #line 1586 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 48:
-
-/* Line 1806 of yacc.c  */
 #line 1588 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 49:
-
-/* Line 1806 of yacc.c  */
 #line 1590 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 50:
-
-/* Line 1806 of yacc.c  */
 #line 1592 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 51:
-
-/* Line 1806 of yacc.c  */
 #line 1594 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 52:
-
-/* Line 1806 of yacc.c  */
 #line 1596 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 53:
-
-/* Line 1806 of yacc.c  */
 #line 1598 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 54:
-
-/* Line 1806 of yacc.c  */
 #line 1600 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 55:
-
-/* Line 1806 of yacc.c  */
 #line 1602 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 56:
-
-/* Line 1806 of yacc.c  */
 #line 1604 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 57:
-
-/* Line 1806 of yacc.c  */
 #line 1606 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 58:
-
-/* Line 1806 of yacc.c  */
 #line 1608 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 59:
-
-/* Line 1806 of yacc.c  */
 #line 1610 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 60:
-
-/* Line 1806 of yacc.c  */
 #line 1612 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 61:
-
-/* Line 1806 of yacc.c  */
 #line 1614 "preproc.y"
     {
 		output_deallocate_prepare_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 62:
-
-/* Line 1806 of yacc.c  */
 #line 1618 "preproc.y"
-    { output_simple_statement((yyvsp[(1) - (1)].str)); }
+    { output_simple_statement((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 63:
-
-/* Line 1806 of yacc.c  */
 #line 1620 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 64:
-
-/* Line 1806 of yacc.c  */
 #line 1622 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 65:
-
-/* Line 1806 of yacc.c  */
 #line 1624 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); ;}
     break;
 
   case 66:
-
-/* Line 1806 of yacc.c  */
 #line 1626 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 67:
-
-/* Line 1806 of yacc.c  */
 #line 1628 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 68:
-
-/* Line 1806 of yacc.c  */
 #line 1630 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 69:
-
-/* Line 1806 of yacc.c  */
 #line 1632 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 70:
-
-/* Line 1806 of yacc.c  */
 #line 1634 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 71:
-
-/* Line 1806 of yacc.c  */
 #line 1636 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 72:
-
-/* Line 1806 of yacc.c  */
 #line 1638 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 73:
-
-/* Line 1806 of yacc.c  */
 #line 1640 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 74:
-
-/* Line 1806 of yacc.c  */
 #line 1642 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 75:
-
-/* Line 1806 of yacc.c  */
 #line 1644 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 76:
-
-/* Line 1806 of yacc.c  */
 #line 1646 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 77:
-
-/* Line 1806 of yacc.c  */
 #line 1648 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 78:
-
-/* Line 1806 of yacc.c  */
 #line 1650 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 79:
-
-/* Line 1806 of yacc.c  */
 #line 1652 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 80:
-
-/* Line 1806 of yacc.c  */
 #line 1654 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 81:
-
-/* Line 1806 of yacc.c  */
 #line 1656 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 82:
-
-/* Line 1806 of yacc.c  */
 #line 1658 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 83:
-
-/* Line 1806 of yacc.c  */
 #line 1660 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 84:
-
-/* Line 1806 of yacc.c  */
 #line 1662 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_execute); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_execute); ;}
     break;
 
   case 85:
-
-/* Line 1806 of yacc.c  */
 #line 1664 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 86:
-
-/* Line 1806 of yacc.c  */
 #line 1666 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); ;}
     break;
 
   case 87:
-
-/* Line 1806 of yacc.c  */
 #line 1668 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 88:
-
-/* Line 1806 of yacc.c  */
 #line 1670 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 89:
-
-/* Line 1806 of yacc.c  */
 #line 1672 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 90:
-
-/* Line 1806 of yacc.c  */
 #line 1674 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 91:
-
-/* Line 1806 of yacc.c  */
 #line 1676 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 92:
-
-/* Line 1806 of yacc.c  */
 #line 1678 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 93:
-
-/* Line 1806 of yacc.c  */
 #line 1680 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 94:
-
-/* Line 1806 of yacc.c  */
 #line 1682 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 95:
-
-/* Line 1806 of yacc.c  */
 #line 1684 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 96:
-
-/* Line 1806 of yacc.c  */
 #line 1686 "preproc.y"
     {
 		if ((yyvsp[(1) - (1)].prep).type == NULL || strlen((yyvsp[(1) - (1)].prep).type) == 0)
 			output_prepare_statement((yyvsp[(1) - (1)].prep).name, (yyvsp[(1) - (1)].prep).stmt);
 		else
 			output_statement(cat_str(5, mm_strdup("prepare"), (yyvsp[(1) - (1)].prep).name, (yyvsp[(1) - (1)].prep).type, mm_strdup("as"), (yyvsp[(1) - (1)].prep).stmt), 0, ECPGst_normal);
-	}
+	;}
     break;
 
   case 97:
-
-/* Line 1806 of yacc.c  */
 #line 1693 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 98:
-
-/* Line 1806 of yacc.c  */
 #line 1695 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 99:
-
-/* Line 1806 of yacc.c  */
 #line 1697 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 100:
-
-/* Line 1806 of yacc.c  */
 #line 1699 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 101:
-
-/* Line 1806 of yacc.c  */
 #line 1701 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 102:
-
-/* Line 1806 of yacc.c  */
 #line 1703 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 103:
-
-/* Line 1806 of yacc.c  */
 #line 1705 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 104:
-
-/* Line 1806 of yacc.c  */
 #line 1707 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 105:
-
-/* Line 1806 of yacc.c  */
 #line 1709 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 106:
-
-/* Line 1806 of yacc.c  */
 #line 1711 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 107:
-
-/* Line 1806 of yacc.c  */
 #line 1713 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 108:
-
-/* Line 1806 of yacc.c  */
 #line 1715 "preproc.y"
     {
 		fprintf(yyout, "{ ECPGtrans(__LINE__, %s, \"%s\");", connection ? connection : "NULL", (yyvsp[(1) - (1)].str));
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 109:
-
-/* Line 1806 of yacc.c  */
 #line 1721 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 110:
-
-/* Line 1806 of yacc.c  */
 #line 1723 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 111:
-
-/* Line 1806 of yacc.c  */
 #line 1725 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 112:
-
-/* Line 1806 of yacc.c  */
 #line 1727 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 113:
-
-/* Line 1806 of yacc.c  */
 #line 1729 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 114:
-
-/* Line 1806 of yacc.c  */
 #line 1731 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 115:
-
-/* Line 1806 of yacc.c  */
 #line 1733 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 116:
-
-/* Line 1806 of yacc.c  */
 #line 1735 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 117:
-
-/* Line 1806 of yacc.c  */
 #line 1737 "preproc.y"
     {
 		fprintf(yyout,"ECPGallocate_desc(__LINE__, %s);",(yyvsp[(1) - (1)].str));
 		whenever_action(0);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 118:
-
-/* Line 1806 of yacc.c  */
 #line 1743 "preproc.y"
     {
 		if (connection)
@@ -29002,41 +29201,33 @@
 		reset_variables();
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 119:
-
-/* Line 1806 of yacc.c  */
 #line 1753 "preproc.y"
     {
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 120:
-
-/* Line 1806 of yacc.c  */
 #line 1757 "preproc.y"
     {
 		fprintf(yyout,"ECPGdeallocate_desc(__LINE__, %s);",(yyvsp[(1) - (1)].str));
 		whenever_action(0);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 121:
-
-/* Line 1806 of yacc.c  */
 #line 1763 "preproc.y"
     {
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 122:
-
-/* Line 1806 of yacc.c  */
 #line 1767 "preproc.y"
     {
 		fprintf(yyout, "{ ECPGdescribe(__LINE__, %d, %s,", compat, (yyvsp[(1) - (1)].str));
@@ -29046,12 +29237,10 @@
 		output_line_number();
 
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 123:
-
-/* Line 1806 of yacc.c  */
 #line 1777 "preproc.y"
     {
 		if (connection)
@@ -29061,19 +29250,15 @@
 				(yyvsp[(1) - (1)].str) ? (yyvsp[(1) - (1)].str) : "\"CURRENT\"");
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 124:
-
-/* Line 1806 of yacc.c  */
 #line 1786 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_exec_immediate); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_exec_immediate); ;}
     break;
 
   case 125:
-
-/* Line 1806 of yacc.c  */
 #line 1788 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
@@ -29087,35 +29272,29 @@
 
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 126:
-
-/* Line 1806 of yacc.c  */
 #line 1802 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].descriptor).name, connection);
 		output_get_descr((yyvsp[(1) - (1)].descriptor).name, (yyvsp[(1) - (1)].descriptor).str);
 		free((yyvsp[(1) - (1)].descriptor).name);
 		free((yyvsp[(1) - (1)].descriptor).str);
-	}
+	;}
     break;
 
   case 127:
-
-/* Line 1806 of yacc.c  */
 #line 1809 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].str), connection);
 		output_get_descr_header((yyvsp[(1) - (1)].str));
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 128:
-
-/* Line 1806 of yacc.c  */
 #line 1815 "preproc.y"
     {
 		struct cursor *ptr;
@@ -29126,23 +29305,19 @@
 			output_statement(mm_strdup(ptr->command), 0, ECPGst_normal);
 			ptr->opened = true;
 		}
-	}
+	;}
     break;
 
   case 129:
-
-/* Line 1806 of yacc.c  */
 #line 1826 "preproc.y"
     {
 		fprintf(yyout, "{ ECPGsetcommit(__LINE__, \"%s\", %s);", (yyvsp[(1) - (1)].str), connection ? connection : "NULL");
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 130:
-
-/* Line 1806 of yacc.c  */
 #line 1832 "preproc.y"
     {
 		if (connection)
@@ -29151,35 +29326,29 @@
 		fprintf(yyout, "{ ECPGsetconn(__LINE__, %s);", (yyvsp[(1) - (1)].str));
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 131:
-
-/* Line 1806 of yacc.c  */
 #line 1841 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].descriptor).name, connection);
 		output_set_descr((yyvsp[(1) - (1)].descriptor).name, (yyvsp[(1) - (1)].descriptor).str);
 		free((yyvsp[(1) - (1)].descriptor).name);
 		free((yyvsp[(1) - (1)].descriptor).str);
-	}
+	;}
     break;
 
   case 132:
-
-/* Line 1806 of yacc.c  */
 #line 1848 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].str), connection);
 		output_set_descr_header((yyvsp[(1) - (1)].str));
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 133:
-
-/* Line 1806 of yacc.c  */
 #line 1854 "preproc.y"
     {
 		if (connection)
@@ -29188,751 +29357,585 @@
 		fprintf(yyout, "%s", (yyvsp[(1) - (1)].str));
 		free((yyvsp[(1) - (1)].str));
 		output_line_number();
-	}
+	;}
     break;
 
   case 134:
-
-/* Line 1806 of yacc.c  */
 #line 1863 "preproc.y"
     {
 		if (connection)
 			mmerror(PARSE_ERROR, ET_ERROR, "AT option not allowed in VAR statement");
 
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 135:
-
-/* Line 1806 of yacc.c  */
 #line 1870 "preproc.y"
     {
 		if (connection)
 			mmerror(PARSE_ERROR, ET_ERROR, "AT option not allowed in WHENEVER statement");
 
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 136:
-
-/* Line 1806 of yacc.c  */
 #line 1877 "preproc.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 137:
-
-/* Line 1806 of yacc.c  */
 #line 1883 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create role"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 138:
-
-/* Line 1806 of yacc.c  */
 #line 1891 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with");
-}
+;}
     break;
 
   case 139:
-
-/* Line 1806 of yacc.c  */
 #line 1895 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 140:
-
-/* Line 1806 of yacc.c  */
 #line 1902 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 141:
-
-/* Line 1806 of yacc.c  */
 #line 1906 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 142:
-
-/* Line 1806 of yacc.c  */
 #line 1913 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 143:
-
-/* Line 1806 of yacc.c  */
 #line 1917 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 144:
-
-/* Line 1806 of yacc.c  */
 #line 1924 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("password"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 145:
-
-/* Line 1806 of yacc.c  */
 #line 1928 "preproc.y"
     { 
  (yyval.str) = mm_strdup("password null");
-}
+;}
     break;
 
   case 146:
-
-/* Line 1806 of yacc.c  */
 #line 1932 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("encrypted password"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 147:
-
-/* Line 1806 of yacc.c  */
 #line 1936 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("unencrypted password"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 148:
-
-/* Line 1806 of yacc.c  */
 #line 1940 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inherit");
-}
+;}
     break;
 
   case 149:
-
-/* Line 1806 of yacc.c  */
 #line 1944 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("connection limit"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 150:
-
-/* Line 1806 of yacc.c  */
 #line 1948 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("valid until"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 151:
-
-/* Line 1806 of yacc.c  */
 #line 1952 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("user"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 152:
-
-/* Line 1806 of yacc.c  */
 #line 1956 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 153:
-
-/* Line 1806 of yacc.c  */
 #line 1964 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 154:
-
-/* Line 1806 of yacc.c  */
 #line 1968 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("sysid"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 155:
-
-/* Line 1806 of yacc.c  */
 #line 1972 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("admin"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 156:
-
-/* Line 1806 of yacc.c  */
 #line 1976 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("role"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 157:
-
-/* Line 1806 of yacc.c  */
 #line 1980 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("in role"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 158:
-
-/* Line 1806 of yacc.c  */
 #line 1984 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("in group"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 159:
-
-/* Line 1806 of yacc.c  */
 #line 1992 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create user"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 160:
-
-/* Line 1806 of yacc.c  */
 #line 2000 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter role"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 161:
-
-/* Line 1806 of yacc.c  */
 #line 2008 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 162:
-
-/* Line 1806 of yacc.c  */
 #line 2011 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("in database"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 163:
-
-/* Line 1806 of yacc.c  */
 #line 2019 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter role"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 164:
-
-/* Line 1806 of yacc.c  */
 #line 2023 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter role all"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 165:
-
-/* Line 1806 of yacc.c  */
 #line 2031 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter user"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 166:
-
-/* Line 1806 of yacc.c  */
 #line 2039 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter user"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 167:
-
-/* Line 1806 of yacc.c  */
 #line 2047 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop role"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 168:
-
-/* Line 1806 of yacc.c  */
 #line 2051 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop role if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 169:
-
-/* Line 1806 of yacc.c  */
 #line 2059 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop user"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 170:
-
-/* Line 1806 of yacc.c  */
 #line 2063 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop user if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 171:
-
-/* Line 1806 of yacc.c  */
 #line 2071 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create group"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 172:
-
-/* Line 1806 of yacc.c  */
 #line 2079 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter group"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("user"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 173:
-
-/* Line 1806 of yacc.c  */
 #line 2087 "preproc.y"
     { 
  (yyval.str) = mm_strdup("add");
-}
+;}
     break;
 
   case 174:
-
-/* Line 1806 of yacc.c  */
 #line 2091 "preproc.y"
     { 
  (yyval.str) = mm_strdup("drop");
-}
+;}
     break;
 
   case 175:
-
-/* Line 1806 of yacc.c  */
 #line 2099 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop group"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 176:
-
-/* Line 1806 of yacc.c  */
 #line 2103 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop group if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 177:
-
-/* Line 1806 of yacc.c  */
 #line 2111 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create schema"),(yyvsp[(3) - (6)].str),mm_strdup("authorization"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 178:
-
-/* Line 1806 of yacc.c  */
 #line 2115 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create schema"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 179:
-
-/* Line 1806 of yacc.c  */
 #line 2119 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(5,mm_strdup("create schema if not exists"),(yyvsp[(6) - (9)].str),mm_strdup("authorization"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 180:
-
-/* Line 1806 of yacc.c  */
 #line 2124 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(3,mm_strdup("create schema if not exists"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 181:
-
-/* Line 1806 of yacc.c  */
 #line 2133 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 182:
-
-/* Line 1806 of yacc.c  */
 #line 2137 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 183:
-
-/* Line 1806 of yacc.c  */
 #line 2144 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 184:
-
-/* Line 1806 of yacc.c  */
 #line 2148 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 185:
-
-/* Line 1806 of yacc.c  */
 #line 2155 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 186:
-
-/* Line 1806 of yacc.c  */
 #line 2159 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 187:
-
-/* Line 1806 of yacc.c  */
 #line 2163 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 188:
-
-/* Line 1806 of yacc.c  */
 #line 2167 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 189:
-
-/* Line 1806 of yacc.c  */
 #line 2171 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 190:
-
-/* Line 1806 of yacc.c  */
 #line 2175 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 191:
-
-/* Line 1806 of yacc.c  */
 #line 2183 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 192:
-
-/* Line 1806 of yacc.c  */
 #line 2187 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set local"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 193:
-
-/* Line 1806 of yacc.c  */
 #line 2191 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set session"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 194:
-
-/* Line 1806 of yacc.c  */
 #line 2199 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("transaction"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 195:
-
-/* Line 1806 of yacc.c  */
 #line 2203 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("session characteristics as transaction"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 196:
-
-/* Line 1806 of yacc.c  */
 #line 2207 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 197:
-
-/* Line 1806 of yacc.c  */
 #line 2215 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 198:
-
-/* Line 1806 of yacc.c  */
 #line 2219 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 199:
-
-/* Line 1806 of yacc.c  */
 #line 2223 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("to default"));
-}
+;}
     break;
 
   case 200:
-
-/* Line 1806 of yacc.c  */
 #line 2227 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("= default"));
-}
+;}
     break;
 
   case 201:
-
-/* Line 1806 of yacc.c  */
 #line 2231 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("from current"));
-}
+;}
     break;
 
   case 202:
-
-/* Line 1806 of yacc.c  */
 #line 2235 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("time zone"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 203:
-
-/* Line 1806 of yacc.c  */
 #line 2239 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("catalog"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 204:
-
-/* Line 1806 of yacc.c  */
 #line 2244 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("schema"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 205:
-
-/* Line 1806 of yacc.c  */
 #line 2248 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("names"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 206:
-
-/* Line 1806 of yacc.c  */
 #line 2252 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("role"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 207:
-
-/* Line 1806 of yacc.c  */
 #line 2256 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("session authorization"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 208:
-
-/* Line 1806 of yacc.c  */
 #line 2260 "preproc.y"
     { 
  (yyval.str) = mm_strdup("session authorization default");
-}
+;}
     break;
 
   case 209:
-
-/* Line 1806 of yacc.c  */
 #line 2264 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("xml option"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 210:
-
-/* Line 1806 of yacc.c  */
 #line 2268 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("transaction snapshot"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 211:
-
-/* Line 1806 of yacc.c  */
 #line 2276 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 212:
-
-/* Line 1806 of yacc.c  */
 #line 2280 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 213:
-
-/* Line 1806 of yacc.c  */
 #line 2288 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 214:
-
-/* Line 1806 of yacc.c  */
 #line 2292 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 215:
-
-/* Line 1806 of yacc.c  */
 #line 2300 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 216:
-
-/* Line 1806 of yacc.c  */
 #line 2304 "preproc.y"
     { 
 		if ((yyvsp[(1) - (1)].str)[0] == '$')
@@ -29942,1134 +29945,882 @@
 		}
 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 217:
-
-/* Line 1806 of yacc.c  */
 #line 2318 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read uncommitted");
-}
+;}
     break;
 
   case 218:
-
-/* Line 1806 of yacc.c  */
 #line 2322 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read committed");
-}
+;}
     break;
 
   case 219:
-
-/* Line 1806 of yacc.c  */
 #line 2326 "preproc.y"
     { 
  (yyval.str) = mm_strdup("repeatable read");
-}
+;}
     break;
 
   case 220:
-
-/* Line 1806 of yacc.c  */
 #line 2330 "preproc.y"
     { 
  (yyval.str) = mm_strdup("serializable");
-}
+;}
     break;
 
   case 221:
-
-/* Line 1806 of yacc.c  */
 #line 2338 "preproc.y"
     { 
  (yyval.str) = mm_strdup("true");
-}
+;}
     break;
 
   case 222:
-
-/* Line 1806 of yacc.c  */
 #line 2342 "preproc.y"
     { 
  (yyval.str) = mm_strdup("false");
-}
+;}
     break;
 
   case 223:
-
-/* Line 1806 of yacc.c  */
 #line 2346 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on");
-}
+;}
     break;
 
   case 224:
-
-/* Line 1806 of yacc.c  */
 #line 2350 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 225:
-
-/* Line 1806 of yacc.c  */
 #line 2358 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 226:
-
-/* Line 1806 of yacc.c  */
 #line 2362 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 227:
-
-/* Line 1806 of yacc.c  */
 #line 2366 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 228:
-
-/* Line 1806 of yacc.c  */
 #line 2370 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),mm_strdup("("),(yyvsp[(3) - (6)].str),mm_strdup(")"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 229:
-
-/* Line 1806 of yacc.c  */
 #line 2374 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 230:
-
-/* Line 1806 of yacc.c  */
 #line 2378 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 231:
-
-/* Line 1806 of yacc.c  */
 #line 2382 "preproc.y"
     { 
  (yyval.str) = mm_strdup("local");
-}
+;}
     break;
 
   case 232:
-
-/* Line 1806 of yacc.c  */
 #line 2390 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 233:
-
-/* Line 1806 of yacc.c  */
 #line 2394 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 234:
-
-/* Line 1806 of yacc.c  */
 #line 2398 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 235:
-
-/* Line 1806 of yacc.c  */
 #line 2405 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 236:
-
-/* Line 1806 of yacc.c  */
 #line 2409 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 237:
-
-/* Line 1806 of yacc.c  */
 #line 2417 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("reset"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 238:
-
-/* Line 1806 of yacc.c  */
 #line 2421 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset time zone");
-}
+;}
     break;
 
   case 239:
-
-/* Line 1806 of yacc.c  */
 #line 2425 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset transaction isolation level");
-}
+;}
     break;
 
   case 240:
-
-/* Line 1806 of yacc.c  */
 #line 2429 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset session authorization");
-}
+;}
     break;
 
   case 241:
-
-/* Line 1806 of yacc.c  */
 #line 2433 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset all");
-}
+;}
     break;
 
   case 242:
-
-/* Line 1806 of yacc.c  */
 #line 2441 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 243:
-
-/* Line 1806 of yacc.c  */
 #line 2445 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 244:
-
-/* Line 1806 of yacc.c  */
 #line 2453 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 245:
-
-/* Line 1806 of yacc.c  */
 #line 2457 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 246:
-
-/* Line 1806 of yacc.c  */
 #line 2465 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("show"),(yyvsp[(2) - (3)].str));
-}
+;}
     break;
 
   case 247:
-
-/* Line 1806 of yacc.c  */
 #line 2469 "preproc.y"
     { 
  (yyval.str) = mm_strdup("show time zone");
-}
+;}
     break;
 
   case 248:
-
-/* Line 1806 of yacc.c  */
 #line 2473 "preproc.y"
     { 
  (yyval.str) = mm_strdup("show transaction isolation level");
-}
+;}
     break;
 
   case 249:
-
-/* Line 1806 of yacc.c  */
 #line 2477 "preproc.y"
     { 
  (yyval.str) = mm_strdup("show session authorization");
-}
+;}
     break;
 
   case 250:
-
-/* Line 1806 of yacc.c  */
 #line 2481 "preproc.y"
     {
 		mmerror(PARSE_ERROR, ET_ERROR, "SHOW ALL is not implemented");
 		(yyval.str) = EMPTY;
-	}
+	;}
     break;
 
   case 251:
-
-/* Line 1806 of yacc.c  */
 #line 2490 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("set constraints"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 252:
-
-/* Line 1806 of yacc.c  */
 #line 2498 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 253:
-
-/* Line 1806 of yacc.c  */
 #line 2502 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 254:
-
-/* Line 1806 of yacc.c  */
 #line 2510 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferred");
-}
+;}
     break;
 
   case 255:
-
-/* Line 1806 of yacc.c  */
 #line 2514 "preproc.y"
     { 
  (yyval.str) = mm_strdup("immediate");
-}
+;}
     break;
 
   case 256:
-
-/* Line 1806 of yacc.c  */
 #line 2522 "preproc.y"
     { 
  (yyval.str) = mm_strdup("checkpoint");
-}
+;}
     break;
 
   case 257:
-
-/* Line 1806 of yacc.c  */
 #line 2530 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard all");
-}
+;}
     break;
 
   case 258:
-
-/* Line 1806 of yacc.c  */
 #line 2534 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard temp");
-}
+;}
     break;
 
   case 259:
-
-/* Line 1806 of yacc.c  */
 #line 2538 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard temporary");
-}
+;}
     break;
 
   case 260:
-
-/* Line 1806 of yacc.c  */
 #line 2542 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard plans");
-}
+;}
     break;
 
   case 261:
-
-/* Line 1806 of yacc.c  */
 #line 2550 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter table"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 262:
-
-/* Line 1806 of yacc.c  */
 #line 2554 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter table if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 263:
-
-/* Line 1806 of yacc.c  */
 #line 2558 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter index"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 264:
-
-/* Line 1806 of yacc.c  */
 #line 2562 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter index if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 265:
-
-/* Line 1806 of yacc.c  */
 #line 2566 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 266:
-
-/* Line 1806 of yacc.c  */
 #line 2570 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 267:
-
-/* Line 1806 of yacc.c  */
 #line 2574 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter view"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 268:
-
-/* Line 1806 of yacc.c  */
 #line 2578 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter view if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 269:
-
-/* Line 1806 of yacc.c  */
 #line 2582 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter materialized view"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 270:
-
-/* Line 1806 of yacc.c  */
 #line 2586 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter materialized view if exists"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 271:
-
-/* Line 1806 of yacc.c  */
 #line 2594 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 272:
-
-/* Line 1806 of yacc.c  */
 #line 2598 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 273:
-
-/* Line 1806 of yacc.c  */
 #line 2606 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("add"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 274:
-
-/* Line 1806 of yacc.c  */
 #line 2610 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("add column"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 275:
-
-/* Line 1806 of yacc.c  */
 #line 2614 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 276:
-
-/* Line 1806 of yacc.c  */
 #line 2618 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("drop not null"));
-}
+;}
     break;
 
   case 277:
-
-/* Line 1806 of yacc.c  */
 #line 2622 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("set not null"));
-}
+;}
     break;
 
   case 278:
-
-/* Line 1806 of yacc.c  */
 #line 2626 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("set statistics"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 279:
-
-/* Line 1806 of yacc.c  */
 #line 2630 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),mm_strdup("set"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 280:
-
-/* Line 1806 of yacc.c  */
 #line 2634 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),mm_strdup("reset"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 281:
-
-/* Line 1806 of yacc.c  */
 #line 2638 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("set storage"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 282:
-
-/* Line 1806 of yacc.c  */
 #line 2642 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[(2) - (6)].str),mm_strdup("if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 283:
-
-/* Line 1806 of yacc.c  */
 #line 2646 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 284:
-
-/* Line 1806 of yacc.c  */
 #line 2650 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("alter"),(yyvsp[(2) - (8)].str),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("type"),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 285:
-
-/* Line 1806 of yacc.c  */
 #line 2654 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 286:
-
-/* Line 1806 of yacc.c  */
 #line 2658 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("add"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 287:
-
-/* Line 1806 of yacc.c  */
 #line 2662 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("validate constraint"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 288:
-
-/* Line 1806 of yacc.c  */
 #line 2666 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop constraint if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 289:
-
-/* Line 1806 of yacc.c  */
 #line 2670 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop constraint"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 290:
-
-/* Line 1806 of yacc.c  */
 #line 2674 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set with oids");
-}
+;}
     break;
 
   case 291:
-
-/* Line 1806 of yacc.c  */
 #line 2678 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set without oids");
-}
+;}
     break;
 
   case 292:
-
-/* Line 1806 of yacc.c  */
 #line 2682 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("cluster on"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 293:
-
-/* Line 1806 of yacc.c  */
 #line 2686 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set without cluster");
-}
+;}
     break;
 
   case 294:
-
-/* Line 1806 of yacc.c  */
 #line 2690 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable trigger"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 295:
-
-/* Line 1806 of yacc.c  */
 #line 2694 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable always trigger"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 296:
-
-/* Line 1806 of yacc.c  */
 #line 2698 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable replica trigger"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 297:
-
-/* Line 1806 of yacc.c  */
 #line 2702 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enable trigger all");
-}
+;}
     break;
 
   case 298:
-
-/* Line 1806 of yacc.c  */
 #line 2706 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enable trigger user");
-}
+;}
     break;
 
   case 299:
-
-/* Line 1806 of yacc.c  */
 #line 2710 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("disable trigger"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 300:
-
-/* Line 1806 of yacc.c  */
 #line 2714 "preproc.y"
     { 
  (yyval.str) = mm_strdup("disable trigger all");
-}
+;}
     break;
 
   case 301:
-
-/* Line 1806 of yacc.c  */
 #line 2718 "preproc.y"
     { 
  (yyval.str) = mm_strdup("disable trigger user");
-}
+;}
     break;
 
   case 302:
-
-/* Line 1806 of yacc.c  */
 #line 2722 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable rule"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 303:
-
-/* Line 1806 of yacc.c  */
 #line 2726 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable always rule"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 304:
-
-/* Line 1806 of yacc.c  */
 #line 2730 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable replica rule"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 305:
-
-/* Line 1806 of yacc.c  */
 #line 2734 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("disable rule"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 306:
-
-/* Line 1806 of yacc.c  */
 #line 2738 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("inherit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 307:
-
-/* Line 1806 of yacc.c  */
 #line 2742 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("no inherit"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 308:
-
-/* Line 1806 of yacc.c  */
 #line 2746 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("of"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 309:
-
-/* Line 1806 of yacc.c  */
 #line 2750 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not of");
-}
+;}
     break;
 
   case 310:
-
-/* Line 1806 of yacc.c  */
 #line 2754 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("owner to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 311:
-
-/* Line 1806 of yacc.c  */
 #line 2758 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set tablespace"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 312:
-
-/* Line 1806 of yacc.c  */
 #line 2762 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 313:
-
-/* Line 1806 of yacc.c  */
 #line 2766 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("reset"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 314:
-
-/* Line 1806 of yacc.c  */
 #line 2770 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 315:
-
-/* Line 1806 of yacc.c  */
 #line 2778 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set default"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 316:
-
-/* Line 1806 of yacc.c  */
 #line 2782 "preproc.y"
     { 
  (yyval.str) = mm_strdup("drop default");
-}
+;}
     break;
 
   case 317:
-
-/* Line 1806 of yacc.c  */
 #line 2790 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cascade");
-}
+;}
     break;
 
   case 318:
-
-/* Line 1806 of yacc.c  */
 #line 2794 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restrict");
-}
+;}
     break;
 
   case 319:
-
-/* Line 1806 of yacc.c  */
 #line 2798 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 320:
-
-/* Line 1806 of yacc.c  */
 #line 2805 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("collate"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 321:
-
-/* Line 1806 of yacc.c  */
 #line 2809 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 322:
-
-/* Line 1806 of yacc.c  */
 #line 2816 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 323:
-
-/* Line 1806 of yacc.c  */
 #line 2820 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 324:
-
-/* Line 1806 of yacc.c  */
 #line 2827 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 325:
-
-/* Line 1806 of yacc.c  */
 #line 2835 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 326:
-
-/* Line 1806 of yacc.c  */
 #line 2839 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 327:
-
-/* Line 1806 of yacc.c  */
 #line 2846 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 328:
-
-/* Line 1806 of yacc.c  */
 #line 2850 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 329:
-
-/* Line 1806 of yacc.c  */
 #line 2858 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 330:
-
-/* Line 1806 of yacc.c  */
 #line 2862 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 331:
-
-/* Line 1806 of yacc.c  */
 #line 2866 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("."),(yyvsp[(3) - (5)].str),mm_strdup("="),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 332:
-
-/* Line 1806 of yacc.c  */
 #line 2870 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 333:
-
-/* Line 1806 of yacc.c  */
 #line 2878 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter type"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 334:
-
-/* Line 1806 of yacc.c  */
 #line 2886 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 335:
-
-/* Line 1806 of yacc.c  */
 #line 2890 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 336:
-
-/* Line 1806 of yacc.c  */
 #line 2898 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("add attribute"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 337:
-
-/* Line 1806 of yacc.c  */
 #line 2902 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop attribute if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 338:
-
-/* Line 1806 of yacc.c  */
 #line 2906 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop attribute"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 339:
-
-/* Line 1806 of yacc.c  */
 #line 2910 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter attribute"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("type"),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 340:
-
-/* Line 1806 of yacc.c  */
 #line 2918 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(2) - (2)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(2) - (2)].str);
 		(yyval.str) = cat2_str(mm_strdup("close"), cursor_marker);
-	}
+	;}
     break;
 
   case 341:
-
-/* Line 1806 of yacc.c  */
 #line 2923 "preproc.y"
     { 
  (yyval.str) = mm_strdup("close all");
-}
+;}
     break;
 
   case 342:
-
-/* Line 1806 of yacc.c  */
 #line 2931 "preproc.y"
     { 
 			if (strcmp((yyvsp[(6) - (11)].str), "from") == 0 &&
@@ -31077,4625 +30828,3591 @@
 				mmerror(PARSE_ERROR, ET_WARNING, "COPY FROM STDIN is not implemented");
 
  (yyval.str) = cat_str(11,mm_strdup("copy"),(yyvsp[(2) - (11)].str),(yyvsp[(3) - (11)].str),(yyvsp[(4) - (11)].str),(yyvsp[(5) - (11)].str),(yyvsp[(6) - (11)].str),(yyvsp[(7) - (11)].str),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 343:
-
-/* Line 1806 of yacc.c  */
 #line 2939 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("copy"),(yyvsp[(2) - (7)].str),mm_strdup("to"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 344:
-
-/* Line 1806 of yacc.c  */
 #line 2947 "preproc.y"
     { 
  (yyval.str) = mm_strdup("from");
-}
+;}
     break;
 
   case 345:
-
-/* Line 1806 of yacc.c  */
 #line 2951 "preproc.y"
     { 
  (yyval.str) = mm_strdup("to");
-}
+;}
     break;
 
   case 346:
-
-/* Line 1806 of yacc.c  */
 #line 2959 "preproc.y"
     { 
  (yyval.str) = mm_strdup("program");
-}
+;}
     break;
 
   case 347:
-
-/* Line 1806 of yacc.c  */
 #line 2963 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 348:
-
-/* Line 1806 of yacc.c  */
 #line 2970 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 349:
-
-/* Line 1806 of yacc.c  */
 #line 2974 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stdin");
-}
+;}
     break;
 
   case 350:
-
-/* Line 1806 of yacc.c  */
 #line 2978 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stdout");
-}
+;}
     break;
 
   case 351:
-
-/* Line 1806 of yacc.c  */
 #line 2986 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 352:
-
-/* Line 1806 of yacc.c  */
 #line 2990 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 353:
-
-/* Line 1806 of yacc.c  */
 #line 2998 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 354:
-
-/* Line 1806 of yacc.c  */
 #line 3002 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 355:
-
-/* Line 1806 of yacc.c  */
 #line 3009 "preproc.y"
     { 
  (yyval.str) = mm_strdup("binary");
-}
+;}
     break;
 
   case 356:
-
-/* Line 1806 of yacc.c  */
 #line 3013 "preproc.y"
     { 
  (yyval.str) = mm_strdup("oids");
-}
+;}
     break;
 
   case 357:
-
-/* Line 1806 of yacc.c  */
 #line 3017 "preproc.y"
     { 
  (yyval.str) = mm_strdup("freeze");
-}
+;}
     break;
 
   case 358:
-
-/* Line 1806 of yacc.c  */
 #line 3021 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("delimiter"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 359:
-
-/* Line 1806 of yacc.c  */
 #line 3025 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("null"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 360:
-
-/* Line 1806 of yacc.c  */
 #line 3029 "preproc.y"
     { 
  (yyval.str) = mm_strdup("csv");
-}
+;}
     break;
 
   case 361:
-
-/* Line 1806 of yacc.c  */
 #line 3033 "preproc.y"
     { 
  (yyval.str) = mm_strdup("header");
-}
+;}
     break;
 
   case 362:
-
-/* Line 1806 of yacc.c  */
 #line 3037 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("quote"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 363:
-
-/* Line 1806 of yacc.c  */
 #line 3041 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("escape"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 364:
-
-/* Line 1806 of yacc.c  */
 #line 3045 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("force quote"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 365:
-
-/* Line 1806 of yacc.c  */
 #line 3049 "preproc.y"
     { 
  (yyval.str) = mm_strdup("force quote *");
-}
+;}
     break;
 
   case 366:
-
-/* Line 1806 of yacc.c  */
 #line 3053 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("force not null"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 367:
-
-/* Line 1806 of yacc.c  */
 #line 3057 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("encoding"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 368:
-
-/* Line 1806 of yacc.c  */
 #line 3065 "preproc.y"
     { 
  (yyval.str) = mm_strdup("binary");
-}
+;}
     break;
 
   case 369:
-
-/* Line 1806 of yacc.c  */
 #line 3069 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 370:
-
-/* Line 1806 of yacc.c  */
 #line 3076 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with oids");
-}
+;}
     break;
 
   case 371:
-
-/* Line 1806 of yacc.c  */
 #line 3080 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 372:
-
-/* Line 1806 of yacc.c  */
 #line 3087 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("delimiters"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 373:
-
-/* Line 1806 of yacc.c  */
 #line 3091 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 374:
-
-/* Line 1806 of yacc.c  */
 #line 3098 "preproc.y"
     { 
  (yyval.str) = mm_strdup("using");
-}
+;}
     break;
 
   case 375:
-
-/* Line 1806 of yacc.c  */
 #line 3102 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 376:
-
-/* Line 1806 of yacc.c  */
 #line 3109 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 377:
-
-/* Line 1806 of yacc.c  */
 #line 3113 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 378:
-
-/* Line 1806 of yacc.c  */
 #line 3121 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 379:
-
-/* Line 1806 of yacc.c  */
 #line 3129 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 380:
-
-/* Line 1806 of yacc.c  */
 #line 3133 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 381:
-
-/* Line 1806 of yacc.c  */
 #line 3137 "preproc.y"
     { 
  (yyval.str) = mm_strdup("*");
-}
+;}
     break;
 
   case 382:
-
-/* Line 1806 of yacc.c  */
 #line 3141 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 383:
-
-/* Line 1806 of yacc.c  */
 #line 3145 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 384:
-
-/* Line 1806 of yacc.c  */
 #line 3152 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 385:
-
-/* Line 1806 of yacc.c  */
 #line 3156 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 386:
-
-/* Line 1806 of yacc.c  */
 #line 3164 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 387:
-
-/* Line 1806 of yacc.c  */
 #line 3172 "preproc.y"
     { 
  (yyval.str) = cat_str(11,mm_strdup("create"),(yyvsp[(2) - (11)].str),mm_strdup("table"),(yyvsp[(4) - (11)].str),mm_strdup("("),(yyvsp[(6) - (11)].str),mm_strdup(")"),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 388:
-
-/* Line 1806 of yacc.c  */
 #line 3176 "preproc.y"
     { 
  (yyval.str) = cat_str(11,mm_strdup("create"),(yyvsp[(2) - (14)].str),mm_strdup("table if not exists"),(yyvsp[(7) - (14)].str),mm_strdup("("),(yyvsp[(9) - (14)].str),mm_strdup(")"),(yyvsp[(11) - (14)].str),(yyvsp[(12) - (14)].str),(yyvsp[(13) - (14)].str),(yyvsp[(14) - (14)].str));
-}
+;}
     break;
 
   case 389:
-
-/* Line 1806 of yacc.c  */
 #line 3180 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (10)].str),mm_strdup("table"),(yyvsp[(4) - (10)].str),mm_strdup("of"),(yyvsp[(6) - (10)].str),(yyvsp[(7) - (10)].str),(yyvsp[(8) - (10)].str),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 390:
-
-/* Line 1806 of yacc.c  */
 #line 3184 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (13)].str),mm_strdup("table if not exists"),(yyvsp[(7) - (13)].str),mm_strdup("of"),(yyvsp[(9) - (13)].str),(yyvsp[(10) - (13)].str),(yyvsp[(11) - (13)].str),(yyvsp[(12) - (13)].str),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 391:
-
-/* Line 1806 of yacc.c  */
 #line 3192 "preproc.y"
     { 
  (yyval.str) = mm_strdup("temporary");
-}
+;}
     break;
 
   case 392:
-
-/* Line 1806 of yacc.c  */
 #line 3196 "preproc.y"
     { 
  (yyval.str) = mm_strdup("temp");
-}
+;}
     break;
 
   case 393:
-
-/* Line 1806 of yacc.c  */
 #line 3200 "preproc.y"
     { 
  (yyval.str) = mm_strdup("local temporary");
-}
+;}
     break;
 
   case 394:
-
-/* Line 1806 of yacc.c  */
 #line 3204 "preproc.y"
     { 
  (yyval.str) = mm_strdup("local temp");
-}
+;}
     break;
 
   case 395:
-
-/* Line 1806 of yacc.c  */
 #line 3208 "preproc.y"
     { 
  (yyval.str) = mm_strdup("global temporary");
-}
+;}
     break;
 
   case 396:
-
-/* Line 1806 of yacc.c  */
 #line 3212 "preproc.y"
     { 
  (yyval.str) = mm_strdup("global temp");
-}
+;}
     break;
 
   case 397:
-
-/* Line 1806 of yacc.c  */
 #line 3216 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unlogged");
-}
+;}
     break;
 
   case 398:
-
-/* Line 1806 of yacc.c  */
 #line 3220 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 399:
-
-/* Line 1806 of yacc.c  */
 #line 3227 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 400:
-
-/* Line 1806 of yacc.c  */
 #line 3231 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 401:
-
-/* Line 1806 of yacc.c  */
 #line 3238 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 402:
-
-/* Line 1806 of yacc.c  */
 #line 3242 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 403:
-
-/* Line 1806 of yacc.c  */
 #line 3249 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 404:
-
-/* Line 1806 of yacc.c  */
 #line 3253 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 405:
-
-/* Line 1806 of yacc.c  */
 #line 3261 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 406:
-
-/* Line 1806 of yacc.c  */
 #line 3265 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 407:
-
-/* Line 1806 of yacc.c  */
 #line 3273 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 408:
-
-/* Line 1806 of yacc.c  */
 #line 3277 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 409:
-
-/* Line 1806 of yacc.c  */
 #line 3281 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 410:
-
-/* Line 1806 of yacc.c  */
 #line 3289 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 411:
-
-/* Line 1806 of yacc.c  */
 #line 3293 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 412:
-
-/* Line 1806 of yacc.c  */
 #line 3301 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 413:
-
-/* Line 1806 of yacc.c  */
 #line 3309 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("with options"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 414:
-
-/* Line 1806 of yacc.c  */
 #line 3317 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 415:
-
-/* Line 1806 of yacc.c  */
 #line 3321 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 416:
-
-/* Line 1806 of yacc.c  */
 #line 3328 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("constraint"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 417:
-
-/* Line 1806 of yacc.c  */
 #line 3332 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 418:
-
-/* Line 1806 of yacc.c  */
 #line 3336 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 419:
-
-/* Line 1806 of yacc.c  */
 #line 3340 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("collate"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 420:
-
-/* Line 1806 of yacc.c  */
 #line 3348 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not null");
-}
+;}
     break;
 
   case 421:
-
-/* Line 1806 of yacc.c  */
 #line 3352 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 422:
-
-/* Line 1806 of yacc.c  */
 #line 3356 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("unique"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 423:
-
-/* Line 1806 of yacc.c  */
 #line 3360 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("primary key"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 424:
-
-/* Line 1806 of yacc.c  */
 #line 3364 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("check ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 425:
-
-/* Line 1806 of yacc.c  */
 #line 3368 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("default"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 426:
-
-/* Line 1806 of yacc.c  */
 #line 3372 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("references"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 427:
-
-/* Line 1806 of yacc.c  */
 #line 3380 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferrable");
-}
+;}
     break;
 
   case 428:
-
-/* Line 1806 of yacc.c  */
 #line 3384 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not deferrable");
-}
+;}
     break;
 
   case 429:
-
-/* Line 1806 of yacc.c  */
 #line 3388 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially deferred");
-}
+;}
     break;
 
   case 430:
-
-/* Line 1806 of yacc.c  */
 #line 3392 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially immediate");
-}
+;}
     break;
 
   case 431:
-
-/* Line 1806 of yacc.c  */
 #line 3400 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("like"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 432:
-
-/* Line 1806 of yacc.c  */
 #line 3408 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("including"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 433:
-
-/* Line 1806 of yacc.c  */
 #line 3412 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("excluding"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 434:
-
-/* Line 1806 of yacc.c  */
 #line 3416 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 435:
-
-/* Line 1806 of yacc.c  */
 #line 3423 "preproc.y"
     { 
  (yyval.str) = mm_strdup("defaults");
-}
+;}
     break;
 
   case 436:
-
-/* Line 1806 of yacc.c  */
 #line 3427 "preproc.y"
     { 
  (yyval.str) = mm_strdup("constraints");
-}
+;}
     break;
 
   case 437:
-
-/* Line 1806 of yacc.c  */
 #line 3431 "preproc.y"
     { 
  (yyval.str) = mm_strdup("indexes");
-}
+;}
     break;
 
   case 438:
-
-/* Line 1806 of yacc.c  */
 #line 3435 "preproc.y"
     { 
  (yyval.str) = mm_strdup("storage");
-}
+;}
     break;
 
   case 439:
-
-/* Line 1806 of yacc.c  */
 #line 3439 "preproc.y"
     { 
  (yyval.str) = mm_strdup("comments");
-}
+;}
     break;
 
   case 440:
-
-/* Line 1806 of yacc.c  */
 #line 3443 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 441:
-
-/* Line 1806 of yacc.c  */
 #line 3451 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("constraint"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 442:
-
-/* Line 1806 of yacc.c  */
 #line 3455 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 443:
-
-/* Line 1806 of yacc.c  */
 #line 3463 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("check ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 444:
-
-/* Line 1806 of yacc.c  */
 #line 3467 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("unique ("),(yyvsp[(3) - (7)].str),mm_strdup(")"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 445:
-
-/* Line 1806 of yacc.c  */
 #line 3471 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("unique"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 446:
-
-/* Line 1806 of yacc.c  */
 #line 3475 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("primary key ("),(yyvsp[(4) - (8)].str),mm_strdup(")"),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 447:
-
-/* Line 1806 of yacc.c  */
 #line 3479 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("primary key"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 448:
-
-/* Line 1806 of yacc.c  */
 #line 3483 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("exclude"),(yyvsp[(2) - (9)].str),mm_strdup("("),(yyvsp[(4) - (9)].str),mm_strdup(")"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 449:
-
-/* Line 1806 of yacc.c  */
 #line 3487 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("foreign key ("),(yyvsp[(4) - (11)].str),mm_strdup(") references"),(yyvsp[(7) - (11)].str),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 450:
-
-/* Line 1806 of yacc.c  */
 #line 3495 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no inherit");
-}
+;}
     break;
 
   case 451:
-
-/* Line 1806 of yacc.c  */
 #line 3499 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 452:
-
-/* Line 1806 of yacc.c  */
 #line 3506 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 453:
-
-/* Line 1806 of yacc.c  */
 #line 3510 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 454:
-
-/* Line 1806 of yacc.c  */
 #line 3517 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 455:
-
-/* Line 1806 of yacc.c  */
 #line 3521 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 456:
-
-/* Line 1806 of yacc.c  */
 #line 3529 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 457:
-
-/* Line 1806 of yacc.c  */
 #line 3537 "preproc.y"
     { 
  (yyval.str) = mm_strdup("match full");
-}
+;}
     break;
 
   case 458:
-
-/* Line 1806 of yacc.c  */
 #line 3541 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("match partial");
-}
+;}
     break;
 
   case 459:
-
-/* Line 1806 of yacc.c  */
 #line 3546 "preproc.y"
     { 
  (yyval.str) = mm_strdup("match simple");
-}
+;}
     break;
 
   case 460:
-
-/* Line 1806 of yacc.c  */
 #line 3550 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 461:
-
-/* Line 1806 of yacc.c  */
 #line 3557 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 462:
-
-/* Line 1806 of yacc.c  */
 #line 3561 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 463:
-
-/* Line 1806 of yacc.c  */
 #line 3569 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("with"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 464:
-
-/* Line 1806 of yacc.c  */
 #line 3573 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (6)].str),mm_strdup("with operator ("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 465:
-
-/* Line 1806 of yacc.c  */
 #line 3581 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("where ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 466:
-
-/* Line 1806 of yacc.c  */
 #line 3585 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 467:
-
-/* Line 1806 of yacc.c  */
 #line 3592 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 468:
-
-/* Line 1806 of yacc.c  */
 #line 3596 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 469:
-
-/* Line 1806 of yacc.c  */
 #line 3600 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 470:
-
-/* Line 1806 of yacc.c  */
 #line 3604 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 471:
-
-/* Line 1806 of yacc.c  */
 #line 3608 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 472:
-
-/* Line 1806 of yacc.c  */
 #line 3615 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("on update"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 473:
-
-/* Line 1806 of yacc.c  */
 #line 3623 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("on delete"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 474:
-
-/* Line 1806 of yacc.c  */
 #line 3631 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no action");
-}
+;}
     break;
 
   case 475:
-
-/* Line 1806 of yacc.c  */
 #line 3635 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restrict");
-}
+;}
     break;
 
   case 476:
-
-/* Line 1806 of yacc.c  */
 #line 3639 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cascade");
-}
+;}
     break;
 
   case 477:
-
-/* Line 1806 of yacc.c  */
 #line 3643 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set null");
-}
+;}
     break;
 
   case 478:
-
-/* Line 1806 of yacc.c  */
 #line 3647 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set default");
-}
+;}
     break;
 
   case 479:
-
-/* Line 1806 of yacc.c  */
 #line 3655 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("inherits ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 480:
-
-/* Line 1806 of yacc.c  */
 #line 3659 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 481:
-
-/* Line 1806 of yacc.c  */
 #line 3666 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 482:
-
-/* Line 1806 of yacc.c  */
 #line 3670 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with oids");
-}
+;}
     break;
 
   case 483:
-
-/* Line 1806 of yacc.c  */
 #line 3674 "preproc.y"
     { 
  (yyval.str) = mm_strdup("without oids");
-}
+;}
     break;
 
   case 484:
-
-/* Line 1806 of yacc.c  */
 #line 3678 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 485:
-
-/* Line 1806 of yacc.c  */
 #line 3685 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on commit drop");
-}
+;}
     break;
 
   case 486:
-
-/* Line 1806 of yacc.c  */
 #line 3689 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on commit delete rows");
-}
+;}
     break;
 
   case 487:
-
-/* Line 1806 of yacc.c  */
 #line 3693 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on commit preserve rows");
-}
+;}
     break;
 
   case 488:
-
-/* Line 1806 of yacc.c  */
 #line 3697 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 489:
-
-/* Line 1806 of yacc.c  */
 #line 3704 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("tablespace"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 490:
-
-/* Line 1806 of yacc.c  */
 #line 3708 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 491:
-
-/* Line 1806 of yacc.c  */
 #line 3715 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using index tablespace"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 492:
-
-/* Line 1806 of yacc.c  */
 #line 3719 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 493:
-
-/* Line 1806 of yacc.c  */
 #line 3726 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using index"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 494:
-
-/* Line 1806 of yacc.c  */
 #line 3734 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 495:
-
-/* Line 1806 of yacc.c  */
 #line 3742 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with data");
-}
+;}
     break;
 
   case 496:
-
-/* Line 1806 of yacc.c  */
 #line 3746 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with no data");
-}
+;}
     break;
 
   case 497:
-
-/* Line 1806 of yacc.c  */
 #line 3750 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 498:
-
-/* Line 1806 of yacc.c  */
 #line 3757 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create"),(yyvsp[(2) - (8)].str),mm_strdup("materialized view"),(yyvsp[(5) - (8)].str),mm_strdup("as"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 499:
-
-/* Line 1806 of yacc.c  */
 #line 3765 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 500:
-
-/* Line 1806 of yacc.c  */
 #line 3773 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unlogged");
-}
+;}
     break;
 
   case 501:
-
-/* Line 1806 of yacc.c  */
 #line 3777 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 502:
-
-/* Line 1806 of yacc.c  */
 #line 3784 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("refresh materialized view"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 503:
-
-/* Line 1806 of yacc.c  */
 #line 3792 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create"),(yyvsp[(2) - (5)].str),mm_strdup("sequence"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 504:
-
-/* Line 1806 of yacc.c  */
 #line 3800 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 505:
-
-/* Line 1806 of yacc.c  */
 #line 3804 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 506:
-
-/* Line 1806 of yacc.c  */
 #line 3812 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 507:
-
-/* Line 1806 of yacc.c  */
 #line 3816 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 508:
-
-/* Line 1806 of yacc.c  */
 #line 3823 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 509:
-
-/* Line 1806 of yacc.c  */
 #line 3827 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 510:
-
-/* Line 1806 of yacc.c  */
 #line 3835 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("cache"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 511:
-
-/* Line 1806 of yacc.c  */
 #line 3839 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cycle");
-}
+;}
     break;
 
   case 512:
-
-/* Line 1806 of yacc.c  */
 #line 3843 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no cycle");
-}
+;}
     break;
 
   case 513:
-
-/* Line 1806 of yacc.c  */
 #line 3847 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("increment"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 514:
-
-/* Line 1806 of yacc.c  */
 #line 3851 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("maxvalue"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 515:
-
-/* Line 1806 of yacc.c  */
 #line 3855 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("minvalue"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 516:
-
-/* Line 1806 of yacc.c  */
 #line 3859 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no maxvalue");
-}
+;}
     break;
 
   case 517:
-
-/* Line 1806 of yacc.c  */
 #line 3863 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no minvalue");
-}
+;}
     break;
 
   case 518:
-
-/* Line 1806 of yacc.c  */
 #line 3867 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("owned by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 519:
-
-/* Line 1806 of yacc.c  */
 #line 3871 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("start"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 520:
-
-/* Line 1806 of yacc.c  */
 #line 3875 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restart");
-}
+;}
     break;
 
   case 521:
-
-/* Line 1806 of yacc.c  */
 #line 3879 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("restart"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 522:
-
-/* Line 1806 of yacc.c  */
 #line 3887 "preproc.y"
     { 
  (yyval.str) = mm_strdup("by");
-}
+;}
     break;
 
   case 523:
-
-/* Line 1806 of yacc.c  */
 #line 3891 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 524:
-
-/* Line 1806 of yacc.c  */
 #line 3898 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 525:
-
-/* Line 1806 of yacc.c  */
 #line 3902 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 526:
-
-/* Line 1806 of yacc.c  */
 #line 3906 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 527:
-
-/* Line 1806 of yacc.c  */
 #line 3914 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 528:
-
-/* Line 1806 of yacc.c  */
 #line 3918 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 529:
-
-/* Line 1806 of yacc.c  */
 #line 3926 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("create"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("language"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 530:
-
-/* Line 1806 of yacc.c  */
 #line 3930 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (10)].str),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),mm_strdup("language"),(yyvsp[(6) - (10)].str),mm_strdup("handler"),(yyvsp[(8) - (10)].str),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 531:
-
-/* Line 1806 of yacc.c  */
 #line 3938 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trusted");
-}
+;}
     break;
 
   case 532:
-
-/* Line 1806 of yacc.c  */
 #line 3942 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 533:
-
-/* Line 1806 of yacc.c  */
 #line 3949 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 534:
-
-/* Line 1806 of yacc.c  */
 #line 3953 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 535:
-
-/* Line 1806 of yacc.c  */
 #line 3961 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("inline"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 536:
-
-/* Line 1806 of yacc.c  */
 #line 3965 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 537:
-
-/* Line 1806 of yacc.c  */
 #line 3972 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("validator"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 538:
-
-/* Line 1806 of yacc.c  */
 #line 3976 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no validator");
-}
+;}
     break;
 
   case 539:
-
-/* Line 1806 of yacc.c  */
 #line 3984 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 540:
-
-/* Line 1806 of yacc.c  */
 #line 3988 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 541:
-
-/* Line 1806 of yacc.c  */
 #line 3995 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[(2) - (5)].str),mm_strdup("language"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 542:
-
-/* Line 1806 of yacc.c  */
 #line 3999 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[(2) - (7)].str),mm_strdup("language if exists"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 543:
-
-/* Line 1806 of yacc.c  */
 #line 4007 "preproc.y"
     { 
  (yyval.str) = mm_strdup("procedural");
-}
+;}
     break;
 
   case 544:
-
-/* Line 1806 of yacc.c  */
 #line 4011 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 545:
-
-/* Line 1806 of yacc.c  */
 #line 4018 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create tablespace"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("location"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 546:
-
-/* Line 1806 of yacc.c  */
 #line 4026 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("owner"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 547:
-
-/* Line 1806 of yacc.c  */
 #line 4030 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 548:
-
-/* Line 1806 of yacc.c  */
 #line 4037 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop tablespace"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 549:
-
-/* Line 1806 of yacc.c  */
 #line 4041 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop tablespace if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 550:
-
-/* Line 1806 of yacc.c  */
 #line 4049 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create extension"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 551:
-
-/* Line 1806 of yacc.c  */
 #line 4053 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create extension if not exists"),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 552:
-
-/* Line 1806 of yacc.c  */
 #line 4061 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 553:
-
-/* Line 1806 of yacc.c  */
 #line 4065 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 554:
-
-/* Line 1806 of yacc.c  */
 #line 4072 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("schema"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 555:
-
-/* Line 1806 of yacc.c  */
 #line 4076 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("version"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 556:
-
-/* Line 1806 of yacc.c  */
 #line 4080 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 557:
-
-/* Line 1806 of yacc.c  */
 #line 4088 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter extension"),(yyvsp[(3) - (5)].str),mm_strdup("update"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 558:
-
-/* Line 1806 of yacc.c  */
 #line 4096 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 559:
-
-/* Line 1806 of yacc.c  */
 #line 4100 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 560:
-
-/* Line 1806 of yacc.c  */
 #line 4107 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("to"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 561:
-
-/* Line 1806 of yacc.c  */
 #line 4115 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("aggregate"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 562:
-
-/* Line 1806 of yacc.c  */
 #line 4119 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("alter extension"),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),mm_strdup("cast ("),(yyvsp[(7) - (10)].str),mm_strdup("as"),(yyvsp[(9) - (10)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 563:
-
-/* Line 1806 of yacc.c  */
 #line 4123 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("collation"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 564:
-
-/* Line 1806 of yacc.c  */
 #line 4127 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("conversion"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 565:
-
-/* Line 1806 of yacc.c  */
 #line 4131 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("domain"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 566:
-
-/* Line 1806 of yacc.c  */
 #line 4135 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("function"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 567:
-
-/* Line 1806 of yacc.c  */
 #line 4139 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("language"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 568:
-
-/* Line 1806 of yacc.c  */
 #line 4143 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("operator"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 569:
-
-/* Line 1806 of yacc.c  */
 #line 4147 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter extension"),(yyvsp[(3) - (9)].str),(yyvsp[(4) - (9)].str),mm_strdup("operator class"),(yyvsp[(7) - (9)].str),mm_strdup("using"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 570:
-
-/* Line 1806 of yacc.c  */
 #line 4151 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter extension"),(yyvsp[(3) - (9)].str),(yyvsp[(4) - (9)].str),mm_strdup("operator family"),(yyvsp[(7) - (9)].str),mm_strdup("using"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 571:
-
-/* Line 1806 of yacc.c  */
 #line 4155 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 572:
-
-/* Line 1806 of yacc.c  */
 #line 4159 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("event trigger"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 573:
-
-/* Line 1806 of yacc.c  */
 #line 4163 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("table"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 574:
-
-/* Line 1806 of yacc.c  */
 #line 4167 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("text search parser"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 575:
-
-/* Line 1806 of yacc.c  */
 #line 4171 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("text search dictionary"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 576:
-
-/* Line 1806 of yacc.c  */
 #line 4175 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("text search template"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 577:
-
-/* Line 1806 of yacc.c  */
 #line 4179 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("text search configuration"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 578:
-
-/* Line 1806 of yacc.c  */
 #line 4183 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("sequence"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 579:
-
-/* Line 1806 of yacc.c  */
 #line 4187 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("view"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 580:
-
-/* Line 1806 of yacc.c  */
 #line 4191 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("materialized view"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 581:
-
-/* Line 1806 of yacc.c  */
 #line 4195 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("foreign table"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 582:
-
-/* Line 1806 of yacc.c  */
 #line 4199 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("foreign data wrapper"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 583:
-
-/* Line 1806 of yacc.c  */
 #line 4203 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("server"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 584:
-
-/* Line 1806 of yacc.c  */
 #line 4207 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("type"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 585:
-
-/* Line 1806 of yacc.c  */
 #line 4215 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create foreign data wrapper"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 586:
-
-/* Line 1806 of yacc.c  */
 #line 4223 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("handler"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 587:
-
-/* Line 1806 of yacc.c  */
 #line 4227 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no handler");
-}
+;}
     break;
 
   case 588:
-
-/* Line 1806 of yacc.c  */
 #line 4231 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("validator"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 589:
-
-/* Line 1806 of yacc.c  */
 #line 4235 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no validator");
-}
+;}
     break;
 
   case 590:
-
-/* Line 1806 of yacc.c  */
 #line 4243 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 591:
-
-/* Line 1806 of yacc.c  */
 #line 4247 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 592:
-
-/* Line 1806 of yacc.c  */
 #line 4255 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 593:
-
-/* Line 1806 of yacc.c  */
 #line 4259 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 594:
-
-/* Line 1806 of yacc.c  */
 #line 4266 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop foreign data wrapper"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 595:
-
-/* Line 1806 of yacc.c  */
 #line 4270 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop foreign data wrapper if exists"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 596:
-
-/* Line 1806 of yacc.c  */
 #line 4278 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign data wrapper"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 597:
-
-/* Line 1806 of yacc.c  */
 #line 4282 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter foreign data wrapper"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 598:
-
-/* Line 1806 of yacc.c  */
 #line 4290 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("options ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 599:
-
-/* Line 1806 of yacc.c  */
 #line 4294 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 600:
-
-/* Line 1806 of yacc.c  */
 #line 4301 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 601:
-
-/* Line 1806 of yacc.c  */
 #line 4305 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 602:
-
-/* Line 1806 of yacc.c  */
 #line 4313 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("options ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 603:
-
-/* Line 1806 of yacc.c  */
 #line 4321 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 604:
-
-/* Line 1806 of yacc.c  */
 #line 4325 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 605:
-
-/* Line 1806 of yacc.c  */
 #line 4333 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 606:
-
-/* Line 1806 of yacc.c  */
 #line 4337 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 607:
-
-/* Line 1806 of yacc.c  */
 #line 4341 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("add"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 608:
-
-/* Line 1806 of yacc.c  */
 #line 4345 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 609:
-
-/* Line 1806 of yacc.c  */
 #line 4353 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 610:
-
-/* Line 1806 of yacc.c  */
 #line 4361 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 611:
-
-/* Line 1806 of yacc.c  */
 #line 4369 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 612:
-
-/* Line 1806 of yacc.c  */
 #line 4377 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create server"),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),(yyvsp[(5) - (10)].str),mm_strdup("foreign data wrapper"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 613:
-
-/* Line 1806 of yacc.c  */
 #line 4385 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("type"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 614:
-
-/* Line 1806 of yacc.c  */
 #line 4389 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 615:
-
-/* Line 1806 of yacc.c  */
 #line 4396 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("version"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 616:
-
-/* Line 1806 of yacc.c  */
 #line 4400 "preproc.y"
     { 
  (yyval.str) = mm_strdup("version null");
-}
+;}
     break;
 
   case 617:
-
-/* Line 1806 of yacc.c  */
 #line 4408 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 618:
-
-/* Line 1806 of yacc.c  */
 #line 4412 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 619:
-
-/* Line 1806 of yacc.c  */
 #line 4419 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop server"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 620:
-
-/* Line 1806 of yacc.c  */
 #line 4423 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop server if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 621:
-
-/* Line 1806 of yacc.c  */
 #line 4431 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter server"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 622:
-
-/* Line 1806 of yacc.c  */
 #line 4435 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter server"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 623:
-
-/* Line 1806 of yacc.c  */
 #line 4439 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter server"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 624:
-
-/* Line 1806 of yacc.c  */
 #line 4447 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create foreign table"),(yyvsp[(4) - (10)].str),mm_strdup("("),(yyvsp[(6) - (10)].str),mm_strdup(") server"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 625:
-
-/* Line 1806 of yacc.c  */
 #line 4451 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create foreign table if not exists"),(yyvsp[(7) - (13)].str),mm_strdup("("),(yyvsp[(9) - (13)].str),mm_strdup(") server"),(yyvsp[(12) - (13)].str),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 626:
-
-/* Line 1806 of yacc.c  */
 #line 4459 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter foreign table"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 627:
-
-/* Line 1806 of yacc.c  */
 #line 4463 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter foreign table if exists"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 628:
-
-/* Line 1806 of yacc.c  */
 #line 4471 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create user mapping for"),(yyvsp[(5) - (8)].str),mm_strdup("server"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 629:
-
-/* Line 1806 of yacc.c  */
 #line 4479 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_user");
-}
+;}
     break;
 
   case 630:
-
-/* Line 1806 of yacc.c  */
 #line 4483 "preproc.y"
     { 
  (yyval.str) = mm_strdup("user");
-}
+;}
     break;
 
   case 631:
-
-/* Line 1806 of yacc.c  */
 #line 4487 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 632:
-
-/* Line 1806 of yacc.c  */
 #line 4495 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop user mapping for"),(yyvsp[(5) - (7)].str),mm_strdup("server"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 633:
-
-/* Line 1806 of yacc.c  */
 #line 4499 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop user mapping if exists for"),(yyvsp[(7) - (9)].str),mm_strdup("server"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 634:
-
-/* Line 1806 of yacc.c  */
 #line 4507 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter user mapping for"),(yyvsp[(5) - (8)].str),mm_strdup("server"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 635:
-
-/* Line 1806 of yacc.c  */
 #line 4515 "preproc.y"
     { 
  (yyval.str) = cat_str(13,mm_strdup("create trigger"),(yyvsp[(3) - (15)].str),(yyvsp[(4) - (15)].str),(yyvsp[(5) - (15)].str),mm_strdup("on"),(yyvsp[(7) - (15)].str),(yyvsp[(8) - (15)].str),(yyvsp[(9) - (15)].str),mm_strdup("execute procedure"),(yyvsp[(12) - (15)].str),mm_strdup("("),(yyvsp[(14) - (15)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 636:
-
-/* Line 1806 of yacc.c  */
 #line 4519 "preproc.y"
     { 
  (yyval.str) = cat_str(15,mm_strdup("create constraint trigger"),(yyvsp[(4) - (20)].str),mm_strdup("after"),(yyvsp[(6) - (20)].str),mm_strdup("on"),(yyvsp[(8) - (20)].str),(yyvsp[(9) - (20)].str),(yyvsp[(10) - (20)].str),mm_strdup("for each row"),(yyvsp[(14) - (20)].str),mm_strdup("execute procedure"),(yyvsp[(17) - (20)].str),mm_strdup("("),(yyvsp[(19) - (20)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 637:
-
-/* Line 1806 of yacc.c  */
 #line 4527 "preproc.y"
     { 
  (yyval.str) = mm_strdup("before");
-}
+;}
     break;
 
   case 638:
-
-/* Line 1806 of yacc.c  */
 #line 4531 "preproc.y"
     { 
  (yyval.str) = mm_strdup("after");
-}
+;}
     break;
 
   case 639:
-
-/* Line 1806 of yacc.c  */
 #line 4535 "preproc.y"
     { 
  (yyval.str) = mm_strdup("instead of");
-}
+;}
     break;
 
   case 640:
-
-/* Line 1806 of yacc.c  */
 #line 4543 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 641:
-
-/* Line 1806 of yacc.c  */
 #line 4547 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("or"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 642:
-
-/* Line 1806 of yacc.c  */
 #line 4555 "preproc.y"
     { 
  (yyval.str) = mm_strdup("insert");
-}
+;}
     break;
 
   case 643:
-
-/* Line 1806 of yacc.c  */
 #line 4559 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delete");
-}
+;}
     break;
 
   case 644:
-
-/* Line 1806 of yacc.c  */
 #line 4563 "preproc.y"
     { 
  (yyval.str) = mm_strdup("update");
-}
+;}
     break;
 
   case 645:
-
-/* Line 1806 of yacc.c  */
 #line 4567 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("update of"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 646:
-
-/* Line 1806 of yacc.c  */
 #line 4571 "preproc.y"
     { 
  (yyval.str) = mm_strdup("truncate");
-}
+;}
     break;
 
   case 647:
-
-/* Line 1806 of yacc.c  */
 #line 4579 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("for"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 648:
-
-/* Line 1806 of yacc.c  */
 #line 4583 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 649:
-
-/* Line 1806 of yacc.c  */
 #line 4590 "preproc.y"
     { 
  (yyval.str) = mm_strdup("each");
-}
+;}
     break;
 
   case 650:
-
-/* Line 1806 of yacc.c  */
 #line 4594 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 651:
-
-/* Line 1806 of yacc.c  */
 #line 4601 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row");
-}
+;}
     break;
 
   case 652:
-
-/* Line 1806 of yacc.c  */
 #line 4605 "preproc.y"
     { 
  (yyval.str) = mm_strdup("statement");
-}
+;}
     break;
 
   case 653:
-
-/* Line 1806 of yacc.c  */
 #line 4613 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("when ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 654:
-
-/* Line 1806 of yacc.c  */
 #line 4617 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 655:
-
-/* Line 1806 of yacc.c  */
 #line 4624 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 656:
-
-/* Line 1806 of yacc.c  */
 #line 4628 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 657:
-
-/* Line 1806 of yacc.c  */
 #line 4632 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 658:
-
-/* Line 1806 of yacc.c  */
 #line 4639 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 659:
-
-/* Line 1806 of yacc.c  */
 #line 4643 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 660:
-
-/* Line 1806 of yacc.c  */
 #line 4647 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 661:
-
-/* Line 1806 of yacc.c  */
 #line 4651 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 662:
-
-/* Line 1806 of yacc.c  */
 #line 4659 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 663:
-
-/* Line 1806 of yacc.c  */
 #line 4663 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 664:
-
-/* Line 1806 of yacc.c  */
 #line 4670 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 665:
-
-/* Line 1806 of yacc.c  */
 #line 4673 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 666:
-
-/* Line 1806 of yacc.c  */
 #line 4681 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not deferrable");
-}
+;}
     break;
 
   case 667:
-
-/* Line 1806 of yacc.c  */
 #line 4685 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferrable");
-}
+;}
     break;
 
   case 668:
-
-/* Line 1806 of yacc.c  */
 #line 4689 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially immediate");
-}
+;}
     break;
 
   case 669:
-
-/* Line 1806 of yacc.c  */
 #line 4693 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially deferred");
-}
+;}
     break;
 
   case 670:
-
-/* Line 1806 of yacc.c  */
 #line 4697 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not valid");
-}
+;}
     break;
 
   case 671:
-
-/* Line 1806 of yacc.c  */
 #line 4701 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no inherit");
-}
+;}
     break;
 
   case 672:
-
-/* Line 1806 of yacc.c  */
 #line 4709 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop trigger"),(yyvsp[(3) - (6)].str),mm_strdup("on"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 673:
-
-/* Line 1806 of yacc.c  */
 #line 4713 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop trigger if exists"),(yyvsp[(5) - (8)].str),mm_strdup("on"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 674:
-
-/* Line 1806 of yacc.c  */
 #line 4721 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create event trigger"),(yyvsp[(4) - (11)].str),mm_strdup("on"),(yyvsp[(6) - (11)].str),mm_strdup("execute procedure"),(yyvsp[(9) - (11)].str),mm_strdup("( )"));
-}
+;}
     break;
 
   case 675:
-
-/* Line 1806 of yacc.c  */
 #line 4725 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("create event trigger"),(yyvsp[(4) - (13)].str),mm_strdup("on"),(yyvsp[(6) - (13)].str),mm_strdup("when"),(yyvsp[(8) - (13)].str),mm_strdup("execute procedure"),(yyvsp[(11) - (13)].str),mm_strdup("( )"));
-}
+;}
     break;
 
   case 676:
-
-/* Line 1806 of yacc.c  */
 #line 4733 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 677:
-
-/* Line 1806 of yacc.c  */
 #line 4737 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("and"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 678:
-
-/* Line 1806 of yacc.c  */
 #line 4745 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (5)].str),mm_strdup("in ("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 679:
-
-/* Line 1806 of yacc.c  */
 #line 4753 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sconst");
-}
+;}
     break;
 
   case 680:
-
-/* Line 1806 of yacc.c  */
 #line 4757 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup(", sconst"));
-}
+;}
     break;
 
   case 681:
-
-/* Line 1806 of yacc.c  */
 #line 4765 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter event trigger"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 682:
-
-/* Line 1806 of yacc.c  */
 #line 4773 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enable");
-}
+;}
     break;
 
   case 683:
-
-/* Line 1806 of yacc.c  */
 #line 4777 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enable replica");
-}
+;}
     break;
 
   case 684:
-
-/* Line 1806 of yacc.c  */
 #line 4781 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enable always");
-}
+;}
     break;
 
   case 685:
-
-/* Line 1806 of yacc.c  */
 #line 4785 "preproc.y"
     { 
  (yyval.str) = mm_strdup("disable");
-}
+;}
     break;
 
   case 686:
-
-/* Line 1806 of yacc.c  */
 #line 4793 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(6,mm_strdup("create assertion"),(yyvsp[(3) - (8)].str),mm_strdup("check ("),(yyvsp[(6) - (8)].str),mm_strdup(")"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 687:
-
-/* Line 1806 of yacc.c  */
 #line 4802 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(3,mm_strdup("drop assertion"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 688:
-
-/* Line 1806 of yacc.c  */
 #line 4811 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create aggregate"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 689:
-
-/* Line 1806 of yacc.c  */
 #line 4815 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create aggregate"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 690:
-
-/* Line 1806 of yacc.c  */
 #line 4819 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create operator"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 691:
-
-/* Line 1806 of yacc.c  */
 #line 4823 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create type"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 692:
-
-/* Line 1806 of yacc.c  */
 #line 4827 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("create type"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 693:
-
-/* Line 1806 of yacc.c  */
 #line 4831 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create type"),(yyvsp[(3) - (7)].str),mm_strdup("as ("),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 694:
-
-/* Line 1806 of yacc.c  */
 #line 4835 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create type"),(yyvsp[(3) - (8)].str),mm_strdup("as enum ("),(yyvsp[(7) - (8)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 695:
-
-/* Line 1806 of yacc.c  */
 #line 4839 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create type"),(yyvsp[(3) - (6)].str),mm_strdup("as range"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 696:
-
-/* Line 1806 of yacc.c  */
 #line 4843 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create text search parser"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 697:
-
-/* Line 1806 of yacc.c  */
 #line 4847 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create text search dictionary"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 698:
-
-/* Line 1806 of yacc.c  */
 #line 4851 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create text search template"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 699:
-
-/* Line 1806 of yacc.c  */
 #line 4855 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create text search configuration"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 700:
-
-/* Line 1806 of yacc.c  */
 #line 4859 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create collation"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 701:
-
-/* Line 1806 of yacc.c  */
 #line 4863 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create collation"),(yyvsp[(3) - (5)].str),mm_strdup("from"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 702:
-
-/* Line 1806 of yacc.c  */
 #line 4871 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 703:
-
-/* Line 1806 of yacc.c  */
 #line 4879 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 704:
-
-/* Line 1806 of yacc.c  */
 #line 4883 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 705:
-
-/* Line 1806 of yacc.c  */
 #line 4891 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 706:
-
-/* Line 1806 of yacc.c  */
 #line 4895 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 707:
-
-/* Line 1806 of yacc.c  */
 #line 4903 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 708:
-
-/* Line 1806 of yacc.c  */
 #line 4907 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 709:
-
-/* Line 1806 of yacc.c  */
 #line 4911 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 710:
-
-/* Line 1806 of yacc.c  */
 #line 4915 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 711:
-
-/* Line 1806 of yacc.c  */
 #line 4919 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 712:
-
-/* Line 1806 of yacc.c  */
 #line 4927 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 713:
-
-/* Line 1806 of yacc.c  */
 #line 4931 "preproc.y"
     { 
  (yyval.str) = mm_strdup("( * )");
-}
+;}
     break;
 
   case 714:
-
-/* Line 1806 of yacc.c  */
 #line 4939 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 715:
-
-/* Line 1806 of yacc.c  */
 #line 4947 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 716:
-
-/* Line 1806 of yacc.c  */
 #line 4951 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 717:
-
-/* Line 1806 of yacc.c  */
 #line 4959 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 718:
-
-/* Line 1806 of yacc.c  */
 #line 4967 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 719:
-
-/* Line 1806 of yacc.c  */
 #line 4971 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 720:
-
-/* Line 1806 of yacc.c  */
 #line 4978 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 721:
-
-/* Line 1806 of yacc.c  */
 #line 4982 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 722:
-
-/* Line 1806 of yacc.c  */
 #line 4990 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter type"),(yyvsp[(3) - (7)].str),mm_strdup("add value"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 723:
-
-/* Line 1806 of yacc.c  */
 #line 4994 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter type"),(yyvsp[(3) - (9)].str),mm_strdup("add value"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),mm_strdup("before"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 724:
-
-/* Line 1806 of yacc.c  */
 #line 4998 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter type"),(yyvsp[(3) - (9)].str),mm_strdup("add value"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),mm_strdup("after"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 725:
-
-/* Line 1806 of yacc.c  */
 #line 5006 "preproc.y"
     { 
  (yyval.str) = mm_strdup("if not exists");
-}
+;}
     break;
 
   case 726:
-
-/* Line 1806 of yacc.c  */
 #line 5010 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 727:
-
-/* Line 1806 of yacc.c  */
 #line 5017 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create operator class"),(yyvsp[(4) - (13)].str),(yyvsp[(5) - (13)].str),mm_strdup("for type"),(yyvsp[(8) - (13)].str),mm_strdup("using"),(yyvsp[(10) - (13)].str),(yyvsp[(11) - (13)].str),mm_strdup("as"),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 728:
-
-/* Line 1806 of yacc.c  */
 #line 5025 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 729:
-
-/* Line 1806 of yacc.c  */
 #line 5029 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 730:
-
-/* Line 1806 of yacc.c  */
 #line 5037 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("operator"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 731:
-
-/* Line 1806 of yacc.c  */
 #line 5041 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("operator"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 732:
-
-/* Line 1806 of yacc.c  */
 #line 5045 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("function"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 733:
-
-/* Line 1806 of yacc.c  */
 #line 5049 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("function"),(yyvsp[(2) - (7)].str),mm_strdup("("),(yyvsp[(4) - (7)].str),mm_strdup(")"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 734:
-
-/* Line 1806 of yacc.c  */
 #line 5053 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("storage"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 735:
-
-/* Line 1806 of yacc.c  */
 #line 5061 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 736:
-
-/* Line 1806 of yacc.c  */
 #line 5065 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 737:
-
-/* Line 1806 of yacc.c  */
 #line 5072 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("family"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 738:
-
-/* Line 1806 of yacc.c  */
 #line 5076 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 739:
-
-/* Line 1806 of yacc.c  */
 #line 5083 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for search");
-}
+;}
     break;
 
   case 740:
-
-/* Line 1806 of yacc.c  */
 #line 5087 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for order by"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 741:
-
-/* Line 1806 of yacc.c  */
 #line 5091 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 742:
-
-/* Line 1806 of yacc.c  */
 #line 5098 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("recheck");
-}
+;}
     break;
 
   case 743:
-
-/* Line 1806 of yacc.c  */
 #line 5103 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 744:
-
-/* Line 1806 of yacc.c  */
 #line 5110 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create operator family"),(yyvsp[(4) - (6)].str),mm_strdup("using"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 745:
-
-/* Line 1806 of yacc.c  */
 #line 5118 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (8)].str),mm_strdup("using"),(yyvsp[(6) - (8)].str),mm_strdup("add"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 746:
-
-/* Line 1806 of yacc.c  */
 #line 5122 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (8)].str),mm_strdup("using"),(yyvsp[(6) - (8)].str),mm_strdup("drop"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 747:
-
-/* Line 1806 of yacc.c  */
 #line 5130 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 748:
-
-/* Line 1806 of yacc.c  */
 #line 5134 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 749:
-
-/* Line 1806 of yacc.c  */
 #line 5142 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("operator"),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 750:
-
-/* Line 1806 of yacc.c  */
 #line 5146 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("function"),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 751:
-
-/* Line 1806 of yacc.c  */
 #line 5154 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator class"),(yyvsp[(4) - (7)].str),mm_strdup("using"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 752:
-
-/* Line 1806 of yacc.c  */
 #line 5158 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator class if exists"),(yyvsp[(6) - (9)].str),mm_strdup("using"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 753:
-
-/* Line 1806 of yacc.c  */
 #line 5166 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator family"),(yyvsp[(4) - (7)].str),mm_strdup("using"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 754:
-
-/* Line 1806 of yacc.c  */
 #line 5170 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator family if exists"),(yyvsp[(6) - (9)].str),mm_strdup("using"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 755:
-
-/* Line 1806 of yacc.c  */
 #line 5178 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop owned by"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 756:
-
-/* Line 1806 of yacc.c  */
 #line 5186 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("reassign owned by"),(yyvsp[(4) - (6)].str),mm_strdup("to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 757:
-
-/* Line 1806 of yacc.c  */
 #line 5194 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[(2) - (6)].str),mm_strdup("if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 758:
-
-/* Line 1806 of yacc.c  */
 #line 5198 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 759:
-
-/* Line 1806 of yacc.c  */
 #line 5202 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop index concurrently"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 760:
-
-/* Line 1806 of yacc.c  */
 #line 5206 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop index concurrently if exists"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 761:
-
-/* Line 1806 of yacc.c  */
 #line 5214 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 762:
-
-/* Line 1806 of yacc.c  */
 #line 5218 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequence");
-}
+;}
     break;
 
   case 763:
-
-/* Line 1806 of yacc.c  */
 #line 5222 "preproc.y"
     { 
  (yyval.str) = mm_strdup("view");
-}
+;}
     break;
 
   case 764:
-
-/* Line 1806 of yacc.c  */
 #line 5226 "preproc.y"
     { 
  (yyval.str) = mm_strdup("materialized view");
-}
+;}
     break;
 
   case 765:
-
-/* Line 1806 of yacc.c  */
 #line 5230 "preproc.y"
     { 
  (yyval.str) = mm_strdup("index");
-}
+;}
     break;
 
   case 766:
-
-/* Line 1806 of yacc.c  */
 #line 5234 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign table");
-}
+;}
     break;
 
   case 767:
-
-/* Line 1806 of yacc.c  */
 #line 5238 "preproc.y"
     { 
  (yyval.str) = mm_strdup("event trigger");
-}
+;}
     break;
 
   case 768:
-
-/* Line 1806 of yacc.c  */
 #line 5242 "preproc.y"
     { 
  (yyval.str) = mm_strdup("type");
-}
+;}
     break;
 
   case 769:
-
-/* Line 1806 of yacc.c  */
 #line 5246 "preproc.y"
     { 
  (yyval.str) = mm_strdup("domain");
-}
+;}
     break;
 
   case 770:
-
-/* Line 1806 of yacc.c  */
 #line 5250 "preproc.y"
     { 
  (yyval.str) = mm_strdup("collation");
-}
+;}
     break;
 
   case 771:
-
-/* Line 1806 of yacc.c  */
 #line 5254 "preproc.y"
     { 
  (yyval.str) = mm_strdup("conversion");
-}
+;}
     break;
 
   case 772:
-
-/* Line 1806 of yacc.c  */
 #line 5258 "preproc.y"
     { 
  (yyval.str) = mm_strdup("schema");
-}
+;}
     break;
 
   case 773:
-
-/* Line 1806 of yacc.c  */
 #line 5262 "preproc.y"
     { 
  (yyval.str) = mm_strdup("extension");
-}
+;}
     break;
 
   case 774:
-
-/* Line 1806 of yacc.c  */
 #line 5266 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search parser");
-}
+;}
     break;
 
   case 775:
-
-/* Line 1806 of yacc.c  */
 #line 5270 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search dictionary");
-}
+;}
     break;
 
   case 776:
-
-/* Line 1806 of yacc.c  */
 #line 5274 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search template");
-}
+;}
     break;
 
   case 777:
-
-/* Line 1806 of yacc.c  */
 #line 5278 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search configuration");
-}
+;}
     break;
 
   case 778:
-
-/* Line 1806 of yacc.c  */
 #line 5286 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 779:
-
-/* Line 1806 of yacc.c  */
 #line 5290 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 780:
-
-/* Line 1806 of yacc.c  */
 #line 5298 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 781:
-
-/* Line 1806 of yacc.c  */
 #line 5302 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 782:
-
-/* Line 1806 of yacc.c  */
 #line 5310 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("."),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 783:
-
-/* Line 1806 of yacc.c  */
 #line 5314 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 784:
-
-/* Line 1806 of yacc.c  */
 #line 5322 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("truncate"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 785:
-
-/* Line 1806 of yacc.c  */
 #line 5330 "preproc.y"
     { 
  (yyval.str) = mm_strdup("continue identity");
-}
+;}
     break;
 
   case 786:
-
-/* Line 1806 of yacc.c  */
 #line 5334 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restart identity");
-}
+;}
     break;
 
   case 787:
-
-/* Line 1806 of yacc.c  */
 #line 5338 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 788:
-
-/* Line 1806 of yacc.c  */
 #line 5345 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("comment on"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("is"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 789:
-
-/* Line 1806 of yacc.c  */
 #line 5349 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("comment on aggregate"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 790:
-
-/* Line 1806 of yacc.c  */
 #line 5353 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("comment on function"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 791:
-
-/* Line 1806 of yacc.c  */
 #line 5357 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("comment on operator"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 792:
-
-/* Line 1806 of yacc.c  */
 #line 5361 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on constraint"),(yyvsp[(4) - (8)].str),mm_strdup("on"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 793:
-
-/* Line 1806 of yacc.c  */
 #line 5365 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on rule"),(yyvsp[(4) - (8)].str),mm_strdup("on"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 794:
-
-/* Line 1806 of yacc.c  */
 #line 5369 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("comment on rule"),(yyvsp[(4) - (6)].str),mm_strdup("is"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 795:
-
-/* Line 1806 of yacc.c  */
 #line 5373 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on trigger"),(yyvsp[(4) - (8)].str),mm_strdup("on"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 796:
-
-/* Line 1806 of yacc.c  */
 #line 5377 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on operator class"),(yyvsp[(5) - (9)].str),mm_strdup("using"),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 797:
-
-/* Line 1806 of yacc.c  */
 #line 5381 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on operator family"),(yyvsp[(5) - (9)].str),mm_strdup("using"),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 798:
-
-/* Line 1806 of yacc.c  */
 #line 5385 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("comment on large object"),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 799:
-
-/* Line 1806 of yacc.c  */
 #line 5389 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on cast ("),(yyvsp[(5) - (10)].str),mm_strdup("as"),(yyvsp[(7) - (10)].str),mm_strdup(") is"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 800:
-
-/* Line 1806 of yacc.c  */
 #line 5393 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on"),(yyvsp[(3) - (7)].str),mm_strdup("language"),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 801:
-
-/* Line 1806 of yacc.c  */
 #line 5401 "preproc.y"
     { 
  (yyval.str) = mm_strdup("column");
-}
+;}
     break;
 
   case 802:
-
-/* Line 1806 of yacc.c  */
 #line 5405 "preproc.y"
     { 
  (yyval.str) = mm_strdup("database");
-}
+;}
     break;
 
   case 803:
-
-/* Line 1806 of yacc.c  */
 #line 5409 "preproc.y"
     { 
  (yyval.str) = mm_strdup("schema");
-}
+;}
     break;
 
   case 804:
-
-/* Line 1806 of yacc.c  */
 #line 5413 "preproc.y"
     { 
  (yyval.str) = mm_strdup("index");
-}
+;}
     break;
 
   case 805:
-
-/* Line 1806 of yacc.c  */
 #line 5417 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequence");
-}
+;}
     break;
 
   case 806:
-
-/* Line 1806 of yacc.c  */
 #line 5421 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 807:
-
-/* Line 1806 of yacc.c  */
 #line 5425 "preproc.y"
     { 
  (yyval.str) = mm_strdup("domain");
-}
+;}
     break;
 
   case 808:
-
-/* Line 1806 of yacc.c  */
 #line 5429 "preproc.y"
     { 
  (yyval.str) = mm_strdup("type");
-}
+;}
     break;
 
   case 809:
-
-/* Line 1806 of yacc.c  */
 #line 5433 "preproc.y"
     { 
  (yyval.str) = mm_strdup("view");
-}
+;}
     break;
 
   case 810:
-
-/* Line 1806 of yacc.c  */
 #line 5437 "preproc.y"
     { 
  (yyval.str) = mm_strdup("materialized view");
-}
+;}
     break;
 
   case 811:
-
-/* Line 1806 of yacc.c  */
 #line 5441 "preproc.y"
     { 
  (yyval.str) = mm_strdup("collation");
-}
+;}
     break;
 
   case 812:
-
-/* Line 1806 of yacc.c  */
 #line 5445 "preproc.y"
     { 
  (yyval.str) = mm_strdup("conversion");
-}
+;}
     break;
 
   case 813:
-
-/* Line 1806 of yacc.c  */
 #line 5449 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tablespace");
-}
+;}
     break;
 
   case 814:
-
-/* Line 1806 of yacc.c  */
 #line 5453 "preproc.y"
     { 
  (yyval.str) = mm_strdup("extension");
-}
+;}
     break;
 
   case 815:
-
-/* Line 1806 of yacc.c  */
 #line 5457 "preproc.y"
     { 
  (yyval.str) = mm_strdup("role");
-}
+;}
     break;
 
   case 816:
-
-/* Line 1806 of yacc.c  */
 #line 5461 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign table");
-}
+;}
     break;
 
   case 817:
-
-/* Line 1806 of yacc.c  */
 #line 5465 "preproc.y"
     { 
  (yyval.str) = mm_strdup("server");
-}
+;}
     break;
 
   case 818:
-
-/* Line 1806 of yacc.c  */
 #line 5469 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign data wrapper");
-}
+;}
     break;
 
   case 819:
-
-/* Line 1806 of yacc.c  */
 #line 5473 "preproc.y"
     { 
  (yyval.str) = mm_strdup("event trigger");
-}
+;}
     break;
 
   case 820:
-
-/* Line 1806 of yacc.c  */
 #line 5477 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search configuration");
-}
+;}
     break;
 
   case 821:
-
-/* Line 1806 of yacc.c  */
 #line 5481 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search dictionary");
-}
+;}
     break;
 
   case 822:
-
-/* Line 1806 of yacc.c  */
 #line 5485 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search parser");
-}
+;}
     break;
 
   case 823:
-
-/* Line 1806 of yacc.c  */
 #line 5489 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search template");
-}
+;}
     break;
 
   case 824:
-
-/* Line 1806 of yacc.c  */
 #line 5497 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 825:
-
-/* Line 1806 of yacc.c  */
 #line 5501 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 826:
-
-/* Line 1806 of yacc.c  */
 #line 5509 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("security label"),(yyvsp[(3) - (8)].str),mm_strdup("on"),(yyvsp[(5) - (8)].str),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 827:
-
-/* Line 1806 of yacc.c  */
 #line 5513 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("security label"),(yyvsp[(3) - (9)].str),mm_strdup("on aggregate"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 828:
-
-/* Line 1806 of yacc.c  */
 #line 5517 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("security label"),(yyvsp[(3) - (9)].str),mm_strdup("on function"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 829:
-
-/* Line 1806 of yacc.c  */
 #line 5521 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[(3) - (9)].str),mm_strdup("on large object"),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 830:
-
-/* Line 1806 of yacc.c  */
 #line 5525 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("security label"),(yyvsp[(3) - (9)].str),mm_strdup("on"),(yyvsp[(5) - (9)].str),mm_strdup("language"),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 831:
-
-/* Line 1806 of yacc.c  */
 #line 5533 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 832:
-
-/* Line 1806 of yacc.c  */
 #line 5537 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 833:
-
-/* Line 1806 of yacc.c  */
 #line 5544 "preproc.y"
     { 
  (yyval.str) = mm_strdup("column");
-}
+;}
     break;
 
   case 834:
-
-/* Line 1806 of yacc.c  */
 #line 5548 "preproc.y"
     { 
  (yyval.str) = mm_strdup("database");
-}
+;}
     break;
 
   case 835:
-
-/* Line 1806 of yacc.c  */
 #line 5552 "preproc.y"
     { 
  (yyval.str) = mm_strdup("event trigger");
-}
+;}
     break;
 
   case 836:
-
-/* Line 1806 of yacc.c  */
 #line 5556 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign table");
-}
+;}
     break;
 
   case 837:
-
-/* Line 1806 of yacc.c  */
 #line 5560 "preproc.y"
     { 
  (yyval.str) = mm_strdup("schema");
-}
+;}
     break;
 
   case 838:
-
-/* Line 1806 of yacc.c  */
 #line 5564 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequence");
-}
+;}
     break;
 
   case 839:
-
-/* Line 1806 of yacc.c  */
 #line 5568 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 840:
-
-/* Line 1806 of yacc.c  */
 #line 5572 "preproc.y"
     { 
  (yyval.str) = mm_strdup("domain");
-}
+;}
     break;
 
   case 841:
-
-/* Line 1806 of yacc.c  */
 #line 5576 "preproc.y"
     { 
  (yyval.str) = mm_strdup("role");
-}
+;}
     break;
 
   case 842:
-
-/* Line 1806 of yacc.c  */
 #line 5580 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tablespace");
-}
+;}
     break;
 
   case 843:
-
-/* Line 1806 of yacc.c  */
 #line 5584 "preproc.y"
     { 
  (yyval.str) = mm_strdup("type");
-}
+;}
     break;
 
   case 844:
-
-/* Line 1806 of yacc.c  */
 #line 5588 "preproc.y"
     { 
  (yyval.str) = mm_strdup("view");
-}
+;}
     break;
 
   case 845:
-
-/* Line 1806 of yacc.c  */
 #line 5592 "preproc.y"
     { 
  (yyval.str) = mm_strdup("materialized view");
-}
+;}
     break;
 
   case 846:
-
-/* Line 1806 of yacc.c  */
 #line 5600 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 847:
-
-/* Line 1806 of yacc.c  */
 #line 5604 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 848:
-
-/* Line 1806 of yacc.c  */
 #line 5612 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("fetch"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 849:
-
-/* Line 1806 of yacc.c  */
 #line 5616 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("move"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 850:
-
-/* Line 1806 of yacc.c  */
 #line 5620 "preproc.y"
     {
 		(yyval.str) = cat2_str(mm_strdup("fetch"), (yyvsp[(2) - (3)].str));
-	}
+	;}
     break;
 
   case 851:
-
-/* Line 1806 of yacc.c  */
 #line 5624 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(3) - (4)].str);
 		add_additional_variables((yyvsp[(3) - (4)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("fetch forward"), cursor_marker);
-	}
+	;}
     break;
 
   case 852:
-
-/* Line 1806 of yacc.c  */
 #line 5630 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (5)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (5)].str);
 		add_additional_variables((yyvsp[(4) - (5)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("fetch forward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 853:
-
-/* Line 1806 of yacc.c  */
 #line 5636 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(3) - (4)].str);
 		add_additional_variables((yyvsp[(3) - (4)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("fetch backward"), cursor_marker);
-	}
+	;}
     break;
 
   case 854:
-
-/* Line 1806 of yacc.c  */
 #line 5642 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (5)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (5)].str);
 		add_additional_variables((yyvsp[(4) - (5)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("fetch backward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 855:
-
-/* Line 1806 of yacc.c  */
 #line 5648 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (3)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(3) - (3)].str);
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("move forward"), cursor_marker);
-	}
+	;}
     break;
 
   case 856:
-
-/* Line 1806 of yacc.c  */
 #line 5654 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (4)].str);
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("move forward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 857:
-
-/* Line 1806 of yacc.c  */
 #line 5660 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (3)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(3) - (3)].str);
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("move backward"), cursor_marker);
-	}
+	;}
     break;
 
   case 858:
-
-/* Line 1806 of yacc.c  */
 #line 5666 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (4)].str);
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("move backward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 859:
-
-/* Line 1806 of yacc.c  */
 #line 5676 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(1) - (1)].str), false);
@@ -35706,12 +34423,10 @@
 		}
 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 860:
-
-/* Line 1806 of yacc.c  */
 #line 5687 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(2) - (2)].str), false);
@@ -35722,12 +34437,10 @@
 		}
 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 861:
-
-/* Line 1806 of yacc.c  */
 #line 5698 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -35738,12 +34451,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("next"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 862:
-
-/* Line 1806 of yacc.c  */
 #line 5709 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -35754,12 +34465,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("prior"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 863:
-
-/* Line 1806 of yacc.c  */
 #line 5720 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -35770,12 +34479,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("first"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 864:
-
-/* Line 1806 of yacc.c  */
 #line 5731 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -35786,12 +34493,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("last"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 865:
-
-/* Line 1806 of yacc.c  */
 #line 5742 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -35807,12 +34512,10 @@
 		}
 
  (yyval.str) = cat_str(4,mm_strdup("absolute"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 866:
-
-/* Line 1806 of yacc.c  */
 #line 5758 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -35828,12 +34531,10 @@
 		}
 
  (yyval.str) = cat_str(4,mm_strdup("relative"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 867:
-
-/* Line 1806 of yacc.c  */
 #line 5774 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -35849,12 +34550,10 @@
 		}
 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 868:
-
-/* Line 1806 of yacc.c  */
 #line 5790 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -35865,12 +34564,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("all"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 869:
-
-/* Line 1806 of yacc.c  */
 #line 5801 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -35886,12 +34583,10 @@
 		}
 
  (yyval.str) = cat_str(4,mm_strdup("forward"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 870:
-
-/* Line 1806 of yacc.c  */
 #line 5817 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -35902,12 +34597,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("forward all"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 871:
-
-/* Line 1806 of yacc.c  */
 #line 5828 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -35923,12 +34616,10 @@
 		}
 
  (yyval.str) = cat_str(4,mm_strdup("backward"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 872:
-
-/* Line 1806 of yacc.c  */
 #line 5844 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -35939,4348 +34630,3374 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("backward all"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 873:
-
-/* Line 1806 of yacc.c  */
 #line 5859 "preproc.y"
     { 
  (yyval.str) = mm_strdup("from");
-}
+;}
     break;
 
   case 874:
-
-/* Line 1806 of yacc.c  */
 #line 5863 "preproc.y"
     { 
  (yyval.str) = mm_strdup("in");
-}
+;}
     break;
 
   case 875:
-
-/* Line 1806 of yacc.c  */
 #line 5871 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 876:
-
-/* Line 1806 of yacc.c  */
 #line 5875 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 877:
-
-/* Line 1806 of yacc.c  */
 #line 5882 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("grant"),(yyvsp[(2) - (7)].str),mm_strdup("on"),(yyvsp[(4) - (7)].str),mm_strdup("to"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 878:
-
-/* Line 1806 of yacc.c  */
 #line 5890 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("revoke"),(yyvsp[(2) - (7)].str),mm_strdup("on"),(yyvsp[(4) - (7)].str),mm_strdup("from"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 879:
-
-/* Line 1806 of yacc.c  */
 #line 5894 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("revoke grant option for"),(yyvsp[(5) - (10)].str),mm_strdup("on"),(yyvsp[(7) - (10)].str),mm_strdup("from"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 880:
-
-/* Line 1806 of yacc.c  */
 #line 5902 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 881:
-
-/* Line 1806 of yacc.c  */
 #line 5906 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 882:
-
-/* Line 1806 of yacc.c  */
 #line 5910 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all privileges");
-}
+;}
     break;
 
   case 883:
-
-/* Line 1806 of yacc.c  */
 #line 5914 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("all ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 884:
-
-/* Line 1806 of yacc.c  */
 #line 5918 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("all privileges ("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 885:
-
-/* Line 1806 of yacc.c  */
 #line 5926 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 886:
-
-/* Line 1806 of yacc.c  */
 #line 5930 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 887:
-
-/* Line 1806 of yacc.c  */
 #line 5938 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("select"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 888:
-
-/* Line 1806 of yacc.c  */
 #line 5942 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("references"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 889:
-
-/* Line 1806 of yacc.c  */
 #line 5946 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("create"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 890:
-
-/* Line 1806 of yacc.c  */
 #line 5950 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 891:
-
-/* Line 1806 of yacc.c  */
 #line 5958 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 892:
-
-/* Line 1806 of yacc.c  */
 #line 5962 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("table"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 893:
-
-/* Line 1806 of yacc.c  */
 #line 5966 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("sequence"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 894:
-
-/* Line 1806 of yacc.c  */
 #line 5970 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("foreign data wrapper"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 895:
-
-/* Line 1806 of yacc.c  */
 #line 5974 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("foreign server"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 896:
-
-/* Line 1806 of yacc.c  */
 #line 5978 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("function"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 897:
-
-/* Line 1806 of yacc.c  */
 #line 5982 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("database"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 898:
-
-/* Line 1806 of yacc.c  */
 #line 5986 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("domain"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 899:
-
-/* Line 1806 of yacc.c  */
 #line 5990 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("language"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 900:
-
-/* Line 1806 of yacc.c  */
 #line 5994 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("large object"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 901:
-
-/* Line 1806 of yacc.c  */
 #line 5998 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("schema"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 902:
-
-/* Line 1806 of yacc.c  */
 #line 6002 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("tablespace"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 903:
-
-/* Line 1806 of yacc.c  */
 #line 6006 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("type"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 904:
-
-/* Line 1806 of yacc.c  */
 #line 6010 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("all tables in schema"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 905:
-
-/* Line 1806 of yacc.c  */
 #line 6014 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("all sequences in schema"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 906:
-
-/* Line 1806 of yacc.c  */
 #line 6018 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("all functions in schema"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 907:
-
-/* Line 1806 of yacc.c  */
 #line 6026 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 908:
-
-/* Line 1806 of yacc.c  */
 #line 6030 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 909:
-
-/* Line 1806 of yacc.c  */
 #line 6038 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 910:
-
-/* Line 1806 of yacc.c  */
 #line 6042 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("group"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 911:
-
-/* Line 1806 of yacc.c  */
 #line 6050 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with grant option");
-}
+;}
     break;
 
   case 912:
-
-/* Line 1806 of yacc.c  */
 #line 6054 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 913:
-
-/* Line 1806 of yacc.c  */
 #line 6061 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 914:
-
-/* Line 1806 of yacc.c  */
 #line 6065 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 915:
-
-/* Line 1806 of yacc.c  */
 #line 6073 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 916:
-
-/* Line 1806 of yacc.c  */
 #line 6081 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("grant"),(yyvsp[(2) - (6)].str),mm_strdup("to"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 917:
-
-/* Line 1806 of yacc.c  */
 #line 6089 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("revoke"),(yyvsp[(2) - (6)].str),mm_strdup("from"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 918:
-
-/* Line 1806 of yacc.c  */
 #line 6093 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("revoke admin option for"),(yyvsp[(5) - (9)].str),mm_strdup("from"),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 919:
-
-/* Line 1806 of yacc.c  */
 #line 6101 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with admin option");
-}
+;}
     break;
 
   case 920:
-
-/* Line 1806 of yacc.c  */
 #line 6105 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 921:
-
-/* Line 1806 of yacc.c  */
 #line 6112 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("granted by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 922:
-
-/* Line 1806 of yacc.c  */
 #line 6116 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 923:
-
-/* Line 1806 of yacc.c  */
 #line 6123 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter default privileges"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 924:
-
-/* Line 1806 of yacc.c  */
 #line 6131 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 925:
-
-/* Line 1806 of yacc.c  */
 #line 6135 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 926:
-
-/* Line 1806 of yacc.c  */
 #line 6142 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("in schema"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 927:
-
-/* Line 1806 of yacc.c  */
 #line 6146 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for role"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 928:
-
-/* Line 1806 of yacc.c  */
 #line 6150 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for user"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 929:
-
-/* Line 1806 of yacc.c  */
 #line 6158 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("grant"),(yyvsp[(2) - (7)].str),mm_strdup("on"),(yyvsp[(4) - (7)].str),mm_strdup("to"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 930:
-
-/* Line 1806 of yacc.c  */
 #line 6162 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("revoke"),(yyvsp[(2) - (7)].str),mm_strdup("on"),(yyvsp[(4) - (7)].str),mm_strdup("from"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 931:
-
-/* Line 1806 of yacc.c  */
 #line 6166 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("revoke grant option for"),(yyvsp[(5) - (10)].str),mm_strdup("on"),(yyvsp[(7) - (10)].str),mm_strdup("from"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 932:
-
-/* Line 1806 of yacc.c  */
 #line 6174 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tables");
-}
+;}
     break;
 
   case 933:
-
-/* Line 1806 of yacc.c  */
 #line 6178 "preproc.y"
     { 
  (yyval.str) = mm_strdup("functions");
-}
+;}
     break;
 
   case 934:
-
-/* Line 1806 of yacc.c  */
 #line 6182 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequences");
-}
+;}
     break;
 
   case 935:
-
-/* Line 1806 of yacc.c  */
 #line 6186 "preproc.y"
     { 
  (yyval.str) = mm_strdup("types");
-}
+;}
     break;
 
   case 936:
-
-/* Line 1806 of yacc.c  */
 #line 6194 "preproc.y"
     { 
  (yyval.str) = cat_str(14,mm_strdup("create"),(yyvsp[(2) - (14)].str),mm_strdup("index"),(yyvsp[(4) - (14)].str),(yyvsp[(5) - (14)].str),mm_strdup("on"),(yyvsp[(7) - (14)].str),(yyvsp[(8) - (14)].str),mm_strdup("("),(yyvsp[(10) - (14)].str),mm_strdup(")"),(yyvsp[(12) - (14)].str),(yyvsp[(13) - (14)].str),(yyvsp[(14) - (14)].str));
-}
+;}
     break;
 
   case 937:
-
-/* Line 1806 of yacc.c  */
 #line 6202 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unique");
-}
+;}
     break;
 
   case 938:
-
-/* Line 1806 of yacc.c  */
 #line 6206 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 939:
-
-/* Line 1806 of yacc.c  */
 #line 6213 "preproc.y"
     { 
  (yyval.str) = mm_strdup("concurrently");
-}
+;}
     break;
 
   case 940:
-
-/* Line 1806 of yacc.c  */
 #line 6217 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 941:
-
-/* Line 1806 of yacc.c  */
 #line 6224 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 942:
-
-/* Line 1806 of yacc.c  */
 #line 6228 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 943:
-
-/* Line 1806 of yacc.c  */
 #line 6235 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 944:
-
-/* Line 1806 of yacc.c  */
 #line 6239 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 945:
-
-/* Line 1806 of yacc.c  */
 #line 6246 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 946:
-
-/* Line 1806 of yacc.c  */
 #line 6250 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 947:
-
-/* Line 1806 of yacc.c  */
 #line 6258 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 948:
-
-/* Line 1806 of yacc.c  */
 #line 6262 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 949:
-
-/* Line 1806 of yacc.c  */
 #line 6266 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("("),(yyvsp[(2) - (7)].str),mm_strdup(")"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 950:
-
-/* Line 1806 of yacc.c  */
 #line 6274 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("collate"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 951:
-
-/* Line 1806 of yacc.c  */
 #line 6278 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 952:
-
-/* Line 1806 of yacc.c  */
 #line 6285 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 953:
-
-/* Line 1806 of yacc.c  */
 #line 6289 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 954:
-
-/* Line 1806 of yacc.c  */
 #line 6293 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 955:
-
-/* Line 1806 of yacc.c  */
 #line 6300 "preproc.y"
     { 
  (yyval.str) = mm_strdup("asc");
-}
+;}
     break;
 
   case 956:
-
-/* Line 1806 of yacc.c  */
 #line 6304 "preproc.y"
     { 
  (yyval.str) = mm_strdup("desc");
-}
+;}
     break;
 
   case 957:
-
-/* Line 1806 of yacc.c  */
 #line 6308 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 958:
-
-/* Line 1806 of yacc.c  */
 #line 6315 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nulls first");
-}
+;}
     break;
 
   case 959:
-
-/* Line 1806 of yacc.c  */
 #line 6319 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nulls last");
-}
+;}
     break;
 
   case 960:
-
-/* Line 1806 of yacc.c  */
 #line 6323 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 961:
-
-/* Line 1806 of yacc.c  */
 #line 6330 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("create"),(yyvsp[(2) - (9)].str),mm_strdup("function"),(yyvsp[(4) - (9)].str),(yyvsp[(5) - (9)].str),mm_strdup("returns"),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 962:
-
-/* Line 1806 of yacc.c  */
 #line 6334 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (12)].str),mm_strdup("function"),(yyvsp[(4) - (12)].str),(yyvsp[(5) - (12)].str),mm_strdup("returns table ("),(yyvsp[(9) - (12)].str),mm_strdup(")"),(yyvsp[(11) - (12)].str),(yyvsp[(12) - (12)].str));
-}
+;}
     break;
 
   case 963:
-
-/* Line 1806 of yacc.c  */
 #line 6338 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create"),(yyvsp[(2) - (7)].str),mm_strdup("function"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 964:
-
-/* Line 1806 of yacc.c  */
 #line 6346 "preproc.y"
     { 
  (yyval.str) = mm_strdup("or replace");
-}
+;}
     break;
 
   case 965:
-
-/* Line 1806 of yacc.c  */
 #line 6350 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 966:
-
-/* Line 1806 of yacc.c  */
 #line 6357 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 967:
-
-/* Line 1806 of yacc.c  */
 #line 6361 "preproc.y"
     { 
  (yyval.str) = mm_strdup("( )");
-}
+;}
     break;
 
   case 968:
-
-/* Line 1806 of yacc.c  */
 #line 6369 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 969:
-
-/* Line 1806 of yacc.c  */
 #line 6373 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 970:
-
-/* Line 1806 of yacc.c  */
 #line 6381 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 971:
-
-/* Line 1806 of yacc.c  */
 #line 6385 "preproc.y"
     { 
  (yyval.str) = mm_strdup("( )");
-}
+;}
     break;
 
   case 972:
-
-/* Line 1806 of yacc.c  */
 #line 6393 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 973:
-
-/* Line 1806 of yacc.c  */
 #line 6397 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 974:
-
-/* Line 1806 of yacc.c  */
 #line 6405 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 975:
-
-/* Line 1806 of yacc.c  */
 #line 6409 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 976:
-
-/* Line 1806 of yacc.c  */
 #line 6413 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 977:
-
-/* Line 1806 of yacc.c  */
 #line 6417 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 978:
-
-/* Line 1806 of yacc.c  */
 #line 6421 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 979:
-
-/* Line 1806 of yacc.c  */
 #line 6429 "preproc.y"
     { 
  (yyval.str) = mm_strdup("in");
-}
+;}
     break;
 
   case 980:
-
-/* Line 1806 of yacc.c  */
 #line 6433 "preproc.y"
     { 
  (yyval.str) = mm_strdup("out");
-}
+;}
     break;
 
   case 981:
-
-/* Line 1806 of yacc.c  */
 #line 6437 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inout");
-}
+;}
     break;
 
   case 982:
-
-/* Line 1806 of yacc.c  */
 #line 6441 "preproc.y"
     { 
  (yyval.str) = mm_strdup("in out");
-}
+;}
     break;
 
   case 983:
-
-/* Line 1806 of yacc.c  */
 #line 6445 "preproc.y"
     { 
  (yyval.str) = mm_strdup("variadic");
-}
+;}
     break;
 
   case 984:
-
-/* Line 1806 of yacc.c  */
 #line 6453 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 985:
-
-/* Line 1806 of yacc.c  */
 #line 6461 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 986:
-
-/* Line 1806 of yacc.c  */
 #line 6469 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 987:
-
-/* Line 1806 of yacc.c  */
 #line 6473 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),mm_strdup("% type"));
-}
+;}
     break;
 
   case 988:
-
-/* Line 1806 of yacc.c  */
 #line 6477 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("setof"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),mm_strdup("% type"));
-}
+;}
     break;
 
   case 989:
-
-/* Line 1806 of yacc.c  */
 #line 6485 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 990:
-
-/* Line 1806 of yacc.c  */
 #line 6489 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("default"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 991:
-
-/* Line 1806 of yacc.c  */
 #line 6493 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 992:
-
-/* Line 1806 of yacc.c  */
 #line 6501 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 993:
-
-/* Line 1806 of yacc.c  */
 #line 6505 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 994:
-
-/* Line 1806 of yacc.c  */
 #line 6513 "preproc.y"
     { 
  (yyval.str) = mm_strdup("called on null input");
-}
+;}
     break;
 
   case 995:
-
-/* Line 1806 of yacc.c  */
 #line 6517 "preproc.y"
     { 
  (yyval.str) = mm_strdup("returns null on null input");
-}
+;}
     break;
 
   case 996:
-
-/* Line 1806 of yacc.c  */
 #line 6521 "preproc.y"
     { 
  (yyval.str) = mm_strdup("strict");
-}
+;}
     break;
 
   case 997:
-
-/* Line 1806 of yacc.c  */
 #line 6525 "preproc.y"
     { 
  (yyval.str) = mm_strdup("immutable");
-}
+;}
     break;
 
   case 998:
-
-/* Line 1806 of yacc.c  */
 #line 6529 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stable");
-}
+;}
     break;
 
   case 999:
-
-/* Line 1806 of yacc.c  */
 #line 6533 "preproc.y"
     { 
  (yyval.str) = mm_strdup("volatile");
-}
+;}
     break;
 
   case 1000:
-
-/* Line 1806 of yacc.c  */
 #line 6537 "preproc.y"
     { 
  (yyval.str) = mm_strdup("external security definer");
-}
+;}
     break;
 
   case 1001:
-
-/* Line 1806 of yacc.c  */
 #line 6541 "preproc.y"
     { 
  (yyval.str) = mm_strdup("external security invoker");
-}
+;}
     break;
 
   case 1002:
-
-/* Line 1806 of yacc.c  */
 #line 6545 "preproc.y"
     { 
  (yyval.str) = mm_strdup("security definer");
-}
+;}
     break;
 
   case 1003:
-
-/* Line 1806 of yacc.c  */
 #line 6549 "preproc.y"
     { 
  (yyval.str) = mm_strdup("security invoker");
-}
+;}
     break;
 
   case 1004:
-
-/* Line 1806 of yacc.c  */
 #line 6553 "preproc.y"
     { 
  (yyval.str) = mm_strdup("leakproof");
-}
+;}
     break;
 
   case 1005:
-
-/* Line 1806 of yacc.c  */
 #line 6557 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not leakproof");
-}
+;}
     break;
 
   case 1006:
-
-/* Line 1806 of yacc.c  */
 #line 6561 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("cost"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1007:
-
-/* Line 1806 of yacc.c  */
 #line 6565 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("rows"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1008:
-
-/* Line 1806 of yacc.c  */
 #line 6569 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1009:
-
-/* Line 1806 of yacc.c  */
 #line 6577 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("as"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1010:
-
-/* Line 1806 of yacc.c  */
 #line 6581 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("language"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1011:
-
-/* Line 1806 of yacc.c  */
 #line 6585 "preproc.y"
     { 
  (yyval.str) = mm_strdup("window");
-}
+;}
     break;
 
   case 1012:
-
-/* Line 1806 of yacc.c  */
 #line 6589 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1013:
-
-/* Line 1806 of yacc.c  */
 #line 6597 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1014:
-
-/* Line 1806 of yacc.c  */
 #line 6601 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1015:
-
-/* Line 1806 of yacc.c  */
 #line 6609 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1016:
-
-/* Line 1806 of yacc.c  */
 #line 6613 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1017:
-
-/* Line 1806 of yacc.c  */
 #line 6620 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1018:
-
-/* Line 1806 of yacc.c  */
 #line 6628 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1019:
-
-/* Line 1806 of yacc.c  */
 #line 6632 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1020:
-
-/* Line 1806 of yacc.c  */
 #line 6640 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1021:
-
-/* Line 1806 of yacc.c  */
 #line 6648 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1022:
-
-/* Line 1806 of yacc.c  */
 #line 6652 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1023:
-
-/* Line 1806 of yacc.c  */
 #line 6660 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restrict");
-}
+;}
     break;
 
   case 1024:
-
-/* Line 1806 of yacc.c  */
 #line 6664 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1025:
-
-/* Line 1806 of yacc.c  */
 #line 6671 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop function"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1026:
-
-/* Line 1806 of yacc.c  */
 #line 6675 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop function if exists"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1027:
-
-/* Line 1806 of yacc.c  */
 #line 6683 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop aggregate"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1028:
-
-/* Line 1806 of yacc.c  */
 #line 6687 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop aggregate if exists"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1029:
-
-/* Line 1806 of yacc.c  */
 #line 6695 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop operator"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1030:
-
-/* Line 1806 of yacc.c  */
 #line 6699 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop operator if exists"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1031:
-
-/* Line 1806 of yacc.c  */
 #line 6707 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1032:
-
-/* Line 1806 of yacc.c  */
 #line 6711 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("("),(yyvsp[(2) - (5)].str),mm_strdup(","),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1033:
-
-/* Line 1806 of yacc.c  */
 #line 6715 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("( none ,"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1034:
-
-/* Line 1806 of yacc.c  */
 #line 6719 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (5)].str),mm_strdup(", none )"));
-}
+;}
     break;
 
   case 1035:
-
-/* Line 1806 of yacc.c  */
 #line 6727 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1036:
-
-/* Line 1806 of yacc.c  */
 #line 6731 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1037:
-
-/* Line 1806 of yacc.c  */
 #line 6739 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("do"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1038:
-
-/* Line 1806 of yacc.c  */
 #line 6747 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1039:
-
-/* Line 1806 of yacc.c  */
 #line 6751 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1040:
-
-/* Line 1806 of yacc.c  */
 #line 6759 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1041:
-
-/* Line 1806 of yacc.c  */
 #line 6763 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("language"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1042:
-
-/* Line 1806 of yacc.c  */
 #line 6771 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create cast ("),(yyvsp[(4) - (11)].str),mm_strdup("as"),(yyvsp[(6) - (11)].str),mm_strdup(") with function"),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1043:
-
-/* Line 1806 of yacc.c  */
 #line 6775 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("create cast ("),(yyvsp[(4) - (10)].str),mm_strdup("as"),(yyvsp[(6) - (10)].str),mm_strdup(") without function"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1044:
-
-/* Line 1806 of yacc.c  */
 #line 6779 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("create cast ("),(yyvsp[(4) - (10)].str),mm_strdup("as"),(yyvsp[(6) - (10)].str),mm_strdup(") with inout"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1045:
-
-/* Line 1806 of yacc.c  */
 #line 6787 "preproc.y"
     { 
  (yyval.str) = mm_strdup("as implicit");
-}
+;}
     break;
 
   case 1046:
-
-/* Line 1806 of yacc.c  */
 #line 6791 "preproc.y"
     { 
  (yyval.str) = mm_strdup("as assignment");
-}
+;}
     break;
 
   case 1047:
-
-/* Line 1806 of yacc.c  */
 #line 6795 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1048:
-
-/* Line 1806 of yacc.c  */
 #line 6802 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("drop cast"),(yyvsp[(3) - (9)].str),mm_strdup("("),(yyvsp[(5) - (9)].str),mm_strdup("as"),(yyvsp[(7) - (9)].str),mm_strdup(")"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1049:
-
-/* Line 1806 of yacc.c  */
 #line 6810 "preproc.y"
     { 
  (yyval.str) = mm_strdup("if exists");
-}
+;}
     break;
 
   case 1050:
-
-/* Line 1806 of yacc.c  */
 #line 6814 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1051:
-
-/* Line 1806 of yacc.c  */
 #line 6821 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("reindex"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1052:
-
-/* Line 1806 of yacc.c  */
 #line 6825 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("reindex system"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1053:
-
-/* Line 1806 of yacc.c  */
 #line 6829 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("reindex database"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1054:
-
-/* Line 1806 of yacc.c  */
 #line 6837 "preproc.y"
     { 
  (yyval.str) = mm_strdup("index");
-}
+;}
     break;
 
   case 1055:
-
-/* Line 1806 of yacc.c  */
 #line 6841 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 1056:
-
-/* Line 1806 of yacc.c  */
 #line 6849 "preproc.y"
     { 
  (yyval.str) = mm_strdup("force");
-}
+;}
     break;
 
   case 1057:
-
-/* Line 1806 of yacc.c  */
 #line 6853 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1058:
-
-/* Line 1806 of yacc.c  */
 #line 6860 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter aggregate"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1059:
-
-/* Line 1806 of yacc.c  */
 #line 6864 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter collation"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1060:
-
-/* Line 1806 of yacc.c  */
 #line 6868 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter conversion"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1061:
-
-/* Line 1806 of yacc.c  */
 #line 6872 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1062:
-
-/* Line 1806 of yacc.c  */
 #line 6876 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1063:
-
-/* Line 1806 of yacc.c  */
 #line 6880 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter domain"),(yyvsp[(3) - (8)].str),mm_strdup("rename constraint"),(yyvsp[(6) - (8)].str),mm_strdup("to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1064:
-
-/* Line 1806 of yacc.c  */
 #line 6884 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign data wrapper"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1065:
-
-/* Line 1806 of yacc.c  */
 #line 6888 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1066:
-
-/* Line 1806 of yacc.c  */
 #line 6892 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter group"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1067:
-
-/* Line 1806 of yacc.c  */
 #line 6896 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter"),(yyvsp[(2) - (7)].str),mm_strdup("language"),(yyvsp[(4) - (7)].str),mm_strdup("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1068:
-
-/* Line 1806 of yacc.c  */
 #line 6900 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator class"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("rename to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1069:
-
-/* Line 1806 of yacc.c  */
 #line 6904 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("rename to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1070:
-
-/* Line 1806 of yacc.c  */
 #line 6908 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter schema"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1071:
-
-/* Line 1806 of yacc.c  */
 #line 6912 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter server"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1072:
-
-/* Line 1806 of yacc.c  */
 #line 6916 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter table"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1073:
-
-/* Line 1806 of yacc.c  */
 #line 6920 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter table if exists"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1074:
-
-/* Line 1806 of yacc.c  */
 #line 6924 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1075:
-
-/* Line 1806 of yacc.c  */
 #line 6928 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence if exists"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1076:
-
-/* Line 1806 of yacc.c  */
 #line 6932 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter view"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1077:
-
-/* Line 1806 of yacc.c  */
 #line 6936 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter view if exists"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1078:
-
-/* Line 1806 of yacc.c  */
 #line 6940 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter materialized view"),(yyvsp[(4) - (7)].str),mm_strdup("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1079:
-
-/* Line 1806 of yacc.c  */
 #line 6944 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter materialized view if exists"),(yyvsp[(6) - (9)].str),mm_strdup("rename to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1080:
-
-/* Line 1806 of yacc.c  */
 #line 6948 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter index"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1081:
-
-/* Line 1806 of yacc.c  */
 #line 6952 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter index if exists"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1082:
-
-/* Line 1806 of yacc.c  */
 #line 6956 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table"),(yyvsp[(4) - (7)].str),mm_strdup("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1083:
-
-/* Line 1806 of yacc.c  */
 #line 6960 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table if exists"),(yyvsp[(6) - (9)].str),mm_strdup("rename to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1084:
-
-/* Line 1806 of yacc.c  */
 #line 6964 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter table"),(yyvsp[(3) - (8)].str),mm_strdup("rename"),(yyvsp[(5) - (8)].str),(yyvsp[(6) - (8)].str),mm_strdup("to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1085:
-
-/* Line 1806 of yacc.c  */
 #line 6968 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter table if exists"),(yyvsp[(5) - (10)].str),mm_strdup("rename"),(yyvsp[(7) - (10)].str),(yyvsp[(8) - (10)].str),mm_strdup("to"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1086:
-
-/* Line 1806 of yacc.c  */
 #line 6972 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter materialized view"),(yyvsp[(4) - (9)].str),mm_strdup("rename"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),mm_strdup("to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1087:
-
-/* Line 1806 of yacc.c  */
 #line 6976 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter materialized view if exists"),(yyvsp[(6) - (11)].str),mm_strdup("rename"),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),mm_strdup("to"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1088:
-
-/* Line 1806 of yacc.c  */
 #line 6980 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter table"),(yyvsp[(3) - (8)].str),mm_strdup("rename constraint"),(yyvsp[(6) - (8)].str),mm_strdup("to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1089:
-
-/* Line 1806 of yacc.c  */
 #line 6984 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter foreign table"),(yyvsp[(4) - (9)].str),mm_strdup("rename"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),mm_strdup("to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1090:
-
-/* Line 1806 of yacc.c  */
 #line 6988 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter foreign table if exists"),(yyvsp[(6) - (11)].str),mm_strdup("rename"),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),mm_strdup("to"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1091:
-
-/* Line 1806 of yacc.c  */
 #line 6992 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter rule"),(yyvsp[(3) - (8)].str),mm_strdup("on"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1092:
-
-/* Line 1806 of yacc.c  */
 #line 6996 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter trigger"),(yyvsp[(3) - (8)].str),mm_strdup("on"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1093:
-
-/* Line 1806 of yacc.c  */
 #line 7000 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter event trigger"),(yyvsp[(4) - (7)].str),mm_strdup("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1094:
-
-/* Line 1806 of yacc.c  */
 #line 7004 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter role"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1095:
-
-/* Line 1806 of yacc.c  */
 #line 7008 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter user"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1096:
-
-/* Line 1806 of yacc.c  */
 #line 7012 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1097:
-
-/* Line 1806 of yacc.c  */
 #line 7016 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[(3) - (5)].str),mm_strdup("set"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1098:
-
-/* Line 1806 of yacc.c  */
 #line 7020 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[(3) - (5)].str),mm_strdup("reset"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1099:
-
-/* Line 1806 of yacc.c  */
 #line 7024 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search parser"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1100:
-
-/* Line 1806 of yacc.c  */
 #line 7028 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search dictionary"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1101:
-
-/* Line 1806 of yacc.c  */
 #line 7032 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search template"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1102:
-
-/* Line 1806 of yacc.c  */
 #line 7036 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1103:
-
-/* Line 1806 of yacc.c  */
 #line 7040 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1104:
-
-/* Line 1806 of yacc.c  */
 #line 7044 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter type"),(yyvsp[(3) - (9)].str),mm_strdup("rename attribute"),(yyvsp[(6) - (9)].str),mm_strdup("to"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1105:
-
-/* Line 1806 of yacc.c  */
 #line 7052 "preproc.y"
     { 
  (yyval.str) = mm_strdup("column");
-}
+;}
     break;
 
   case 1106:
-
-/* Line 1806 of yacc.c  */
 #line 7056 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1107:
-
-/* Line 1806 of yacc.c  */
 #line 7063 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set data");
-}
+;}
     break;
 
   case 1108:
-
-/* Line 1806 of yacc.c  */
 #line 7067 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1109:
-
-/* Line 1806 of yacc.c  */
 #line 7074 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter aggregate"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("set schema"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1110:
-
-/* Line 1806 of yacc.c  */
 #line 7078 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter collation"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1111:
-
-/* Line 1806 of yacc.c  */
 #line 7082 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter conversion"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1112:
-
-/* Line 1806 of yacc.c  */
 #line 7086 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1113:
-
-/* Line 1806 of yacc.c  */
 #line 7090 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1114:
-
-/* Line 1806 of yacc.c  */
 #line 7094 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1115:
-
-/* Line 1806 of yacc.c  */
 #line 7098 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter operator"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("set schema"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1116:
-
-/* Line 1806 of yacc.c  */
 #line 7102 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator class"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("set schema"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1117:
-
-/* Line 1806 of yacc.c  */
 #line 7106 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("set schema"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1118:
-
-/* Line 1806 of yacc.c  */
 #line 7110 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter table"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1119:
-
-/* Line 1806 of yacc.c  */
 #line 7114 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter table if exists"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1120:
-
-/* Line 1806 of yacc.c  */
 #line 7118 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search parser"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1121:
-
-/* Line 1806 of yacc.c  */
 #line 7122 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search dictionary"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1122:
-
-/* Line 1806 of yacc.c  */
 #line 7126 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search template"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1123:
-
-/* Line 1806 of yacc.c  */
 #line 7130 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1124:
-
-/* Line 1806 of yacc.c  */
 #line 7134 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1125:
-
-/* Line 1806 of yacc.c  */
 #line 7138 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence if exists"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1126:
-
-/* Line 1806 of yacc.c  */
 #line 7142 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter view"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1127:
-
-/* Line 1806 of yacc.c  */
 #line 7146 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter view if exists"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1128:
-
-/* Line 1806 of yacc.c  */
 #line 7150 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter materialized view"),(yyvsp[(4) - (7)].str),mm_strdup("set schema"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1129:
-
-/* Line 1806 of yacc.c  */
 #line 7154 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter materialized view if exists"),(yyvsp[(6) - (9)].str),mm_strdup("set schema"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1130:
-
-/* Line 1806 of yacc.c  */
 #line 7158 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table"),(yyvsp[(4) - (7)].str),mm_strdup("set schema"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1131:
-
-/* Line 1806 of yacc.c  */
 #line 7162 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table if exists"),(yyvsp[(6) - (9)].str),mm_strdup("set schema"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1132:
-
-/* Line 1806 of yacc.c  */
 #line 7166 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1133:
-
-/* Line 1806 of yacc.c  */
 #line 7174 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter aggregate"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1134:
-
-/* Line 1806 of yacc.c  */
 #line 7178 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter collation"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1135:
-
-/* Line 1806 of yacc.c  */
 #line 7182 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter conversion"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1136:
-
-/* Line 1806 of yacc.c  */
 #line 7186 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1137:
-
-/* Line 1806 of yacc.c  */
 #line 7190 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1138:
-
-/* Line 1806 of yacc.c  */
 #line 7194 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1139:
-
-/* Line 1806 of yacc.c  */
 #line 7198 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter"),(yyvsp[(2) - (7)].str),mm_strdup("language"),(yyvsp[(4) - (7)].str),mm_strdup("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1140:
-
-/* Line 1806 of yacc.c  */
 #line 7202 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter large object"),(yyvsp[(4) - (7)].str),mm_strdup("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1141:
-
-/* Line 1806 of yacc.c  */
 #line 7206 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter operator"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1142:
-
-/* Line 1806 of yacc.c  */
 #line 7210 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator class"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("owner to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1143:
-
-/* Line 1806 of yacc.c  */
 #line 7214 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("owner to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1144:
-
-/* Line 1806 of yacc.c  */
 #line 7218 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter schema"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1145:
-
-/* Line 1806 of yacc.c  */
 #line 7222 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1146:
-
-/* Line 1806 of yacc.c  */
 #line 7226 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1147:
-
-/* Line 1806 of yacc.c  */
 #line 7230 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search dictionary"),(yyvsp[(5) - (8)].str),mm_strdup("owner to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1148:
-
-/* Line 1806 of yacc.c  */
 #line 7234 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (8)].str),mm_strdup("owner to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1149:
-
-/* Line 1806 of yacc.c  */
 #line 7238 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign data wrapper"),(yyvsp[(5) - (8)].str),mm_strdup("owner to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1150:
-
-/* Line 1806 of yacc.c  */
 #line 7242 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter server"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1151:
-
-/* Line 1806 of yacc.c  */
 #line 7246 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter event trigger"),(yyvsp[(4) - (7)].str),mm_strdup("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1152:
-
-/* Line 1806 of yacc.c  */
 #line 7254 "preproc.y"
     { 
  (yyval.str) = cat_str(12,mm_strdup("create"),(yyvsp[(2) - (13)].str),mm_strdup("rule"),(yyvsp[(4) - (13)].str),mm_strdup("as on"),(yyvsp[(7) - (13)].str),mm_strdup("to"),(yyvsp[(9) - (13)].str),(yyvsp[(10) - (13)].str),mm_strdup("do"),(yyvsp[(12) - (13)].str),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 1153:
-
-/* Line 1806 of yacc.c  */
 #line 7262 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nothing");
-}
+;}
     break;
 
   case 1154:
-
-/* Line 1806 of yacc.c  */
 #line 7266 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1155:
-
-/* Line 1806 of yacc.c  */
 #line 7270 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1156:
-
-/* Line 1806 of yacc.c  */
 #line 7278 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(";"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1157:
-
-/* Line 1806 of yacc.c  */
 #line 7282 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1158:
-
-/* Line 1806 of yacc.c  */
 #line 7290 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1159:
-
-/* Line 1806 of yacc.c  */
 #line 7294 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1160:
-
-/* Line 1806 of yacc.c  */
 #line 7298 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1161:
-
-/* Line 1806 of yacc.c  */
 #line 7302 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1162:
-
-/* Line 1806 of yacc.c  */
 #line 7306 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1163:
-
-/* Line 1806 of yacc.c  */
 #line 7314 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1164:
-
-/* Line 1806 of yacc.c  */
 #line 7318 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1165:
-
-/* Line 1806 of yacc.c  */
 #line 7325 "preproc.y"
     { 
  (yyval.str) = mm_strdup("select");
-}
+;}
     break;
 
   case 1166:
-
-/* Line 1806 of yacc.c  */
 #line 7329 "preproc.y"
     { 
  (yyval.str) = mm_strdup("update");
-}
+;}
     break;
 
   case 1167:
-
-/* Line 1806 of yacc.c  */
 #line 7333 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delete");
-}
+;}
     break;
 
   case 1168:
-
-/* Line 1806 of yacc.c  */
 #line 7337 "preproc.y"
     { 
  (yyval.str) = mm_strdup("insert");
-}
+;}
     break;
 
   case 1169:
-
-/* Line 1806 of yacc.c  */
 #line 7345 "preproc.y"
     { 
  (yyval.str) = mm_strdup("instead");
-}
+;}
     break;
 
   case 1170:
-
-/* Line 1806 of yacc.c  */
 #line 7349 "preproc.y"
     { 
  (yyval.str) = mm_strdup("also");
-}
+;}
     break;
 
   case 1171:
-
-/* Line 1806 of yacc.c  */
 #line 7353 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1172:
-
-/* Line 1806 of yacc.c  */
 #line 7360 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop rule"),(yyvsp[(3) - (6)].str),mm_strdup("on"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1173:
-
-/* Line 1806 of yacc.c  */
 #line 7364 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop rule if exists"),(yyvsp[(5) - (8)].str),mm_strdup("on"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1174:
-
-/* Line 1806 of yacc.c  */
 #line 7372 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("notify"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1175:
-
-/* Line 1806 of yacc.c  */
 #line 7380 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup(","),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1176:
-
-/* Line 1806 of yacc.c  */
 #line 7384 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1177:
-
-/* Line 1806 of yacc.c  */
 #line 7391 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("listen"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1178:
-
-/* Line 1806 of yacc.c  */
 #line 7399 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("unlisten"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1179:
-
-/* Line 1806 of yacc.c  */
 #line 7403 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unlisten *");
-}
+;}
     break;
 
   case 1180:
-
-/* Line 1806 of yacc.c  */
 #line 7411 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("abort"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1181:
-
-/* Line 1806 of yacc.c  */
 #line 7415 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("begin"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1182:
-
-/* Line 1806 of yacc.c  */
 #line 7419 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("start transaction"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1183:
-
-/* Line 1806 of yacc.c  */
 #line 7423 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("commit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1184:
-
-/* Line 1806 of yacc.c  */
 #line 7427 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("end"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1185:
-
-/* Line 1806 of yacc.c  */
 #line 7431 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("rollback"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1186:
-
-/* Line 1806 of yacc.c  */
 #line 7435 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("savepoint"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1187:
-
-/* Line 1806 of yacc.c  */
 #line 7439 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("release savepoint"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1188:
-
-/* Line 1806 of yacc.c  */
 #line 7443 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("release"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1189:
-
-/* Line 1806 of yacc.c  */
 #line 7447 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("rollback"),(yyvsp[(2) - (5)].str),mm_strdup("to savepoint"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1190:
-
-/* Line 1806 of yacc.c  */
 #line 7451 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("rollback"),(yyvsp[(2) - (4)].str),mm_strdup("to"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1191:
-
-/* Line 1806 of yacc.c  */
 #line 7455 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("prepare transaction"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1192:
-
-/* Line 1806 of yacc.c  */
 #line 7459 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("commit prepared"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1193:
-
-/* Line 1806 of yacc.c  */
 #line 7463 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("rollback prepared"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1194:
-
-/* Line 1806 of yacc.c  */
 #line 7471 "preproc.y"
     { 
  (yyval.str) = mm_strdup("work");
-}
+;}
     break;
 
   case 1195:
-
-/* Line 1806 of yacc.c  */
 #line 7475 "preproc.y"
     { 
  (yyval.str) = mm_strdup("transaction");
-}
+;}
     break;
 
   case 1196:
-
-/* Line 1806 of yacc.c  */
 #line 7479 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1197:
-
-/* Line 1806 of yacc.c  */
 #line 7486 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("isolation level"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1198:
-
-/* Line 1806 of yacc.c  */
 #line 7490 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read only");
-}
+;}
     break;
 
   case 1199:
-
-/* Line 1806 of yacc.c  */
 #line 7494 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read write");
-}
+;}
     break;
 
   case 1200:
-
-/* Line 1806 of yacc.c  */
 #line 7498 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferrable");
-}
+;}
     break;
 
   case 1201:
-
-/* Line 1806 of yacc.c  */
 #line 7502 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not deferrable");
-}
+;}
     break;
 
   case 1202:
-
-/* Line 1806 of yacc.c  */
 #line 7510 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1203:
-
-/* Line 1806 of yacc.c  */
 #line 7514 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1204:
-
-/* Line 1806 of yacc.c  */
 #line 7518 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1205:
-
-/* Line 1806 of yacc.c  */
 #line 7526 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1206:
-
-/* Line 1806 of yacc.c  */
 #line 7530 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1207:
-
-/* Line 1806 of yacc.c  */
 #line 7537 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("create"),(yyvsp[(2) - (9)].str),mm_strdup("view"),(yyvsp[(4) - (9)].str),(yyvsp[(5) - (9)].str),(yyvsp[(6) - (9)].str),mm_strdup("as"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1208:
-
-/* Line 1806 of yacc.c  */
 #line 7541 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("create or replace"),(yyvsp[(4) - (11)].str),mm_strdup("view"),(yyvsp[(6) - (11)].str),(yyvsp[(7) - (11)].str),(yyvsp[(8) - (11)].str),mm_strdup("as"),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1209:
-
-/* Line 1806 of yacc.c  */
 #line 7545 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (11)].str),mm_strdup("recursive view"),(yyvsp[(5) - (11)].str),mm_strdup("("),(yyvsp[(7) - (11)].str),mm_strdup(")"),(yyvsp[(9) - (11)].str),mm_strdup("as"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1210:
-
-/* Line 1806 of yacc.c  */
 #line 7549 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create or replace"),(yyvsp[(4) - (13)].str),mm_strdup("recursive view"),(yyvsp[(7) - (13)].str),mm_strdup("("),(yyvsp[(9) - (13)].str),mm_strdup(")"),(yyvsp[(11) - (13)].str),mm_strdup("as"),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 1211:
-
-/* Line 1806 of yacc.c  */
 #line 7557 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("with check option");
-}
+;}
     break;
 
   case 1212:
-
-/* Line 1806 of yacc.c  */
 #line 7562 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("with cascaded check option");
-}
+;}
     break;
 
   case 1213:
-
-/* Line 1806 of yacc.c  */
 #line 7567 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("with local check option");
-}
+;}
     break;
 
   case 1214:
-
-/* Line 1806 of yacc.c  */
 #line 7572 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1215:
-
-/* Line 1806 of yacc.c  */
 #line 7579 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("load"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1216:
-
-/* Line 1806 of yacc.c  */
 #line 7587 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create database"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1217:
-
-/* Line 1806 of yacc.c  */
 #line 7595 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1218:
-
-/* Line 1806 of yacc.c  */
 #line 7599 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1219:
-
-/* Line 1806 of yacc.c  */
 #line 7606 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("tablespace"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1220:
-
-/* Line 1806 of yacc.c  */
 #line 7610 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("tablespace"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1221:
-
-/* Line 1806 of yacc.c  */
 #line 7614 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("location"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1222:
-
-/* Line 1806 of yacc.c  */
 #line 7618 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("location"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1223:
-
-/* Line 1806 of yacc.c  */
 #line 7622 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("template"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1224:
-
-/* Line 1806 of yacc.c  */
 #line 7626 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("template"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1225:
-
-/* Line 1806 of yacc.c  */
 #line 7630 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("encoding"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1226:
-
-/* Line 1806 of yacc.c  */
 #line 7634 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("encoding"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1227:
-
-/* Line 1806 of yacc.c  */
 #line 7638 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("encoding"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1228:
-
-/* Line 1806 of yacc.c  */
 #line 7642 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("lc_collate"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1229:
-
-/* Line 1806 of yacc.c  */
 #line 7646 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("lc_collate"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1230:
-
-/* Line 1806 of yacc.c  */
 #line 7650 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("lc_ctype"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1231:
-
-/* Line 1806 of yacc.c  */
 #line 7654 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("lc_ctype"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1232:
-
-/* Line 1806 of yacc.c  */
 #line 7658 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("connection limit"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1233:
-
-/* Line 1806 of yacc.c  */
 #line 7662 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("owner"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1234:
-
-/* Line 1806 of yacc.c  */
 #line 7666 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("owner"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1235:
-
-/* Line 1806 of yacc.c  */
 #line 7674 "preproc.y"
     { 
  (yyval.str) = mm_strdup("=");
-}
+;}
     break;
 
   case 1236:
-
-/* Line 1806 of yacc.c  */
 #line 7678 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1237:
-
-/* Line 1806 of yacc.c  */
 #line 7685 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1238:
-
-/* Line 1806 of yacc.c  */
 #line 7689 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[(3) - (6)].str),mm_strdup("set tablespace"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1239:
-
-/* Line 1806 of yacc.c  */
 #line 7697 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter database"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1240:
-
-/* Line 1806 of yacc.c  */
 #line 7705 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1241:
-
-/* Line 1806 of yacc.c  */
 #line 7709 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1242:
-
-/* Line 1806 of yacc.c  */
 #line 7716 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("connection limit"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1243:
-
-/* Line 1806 of yacc.c  */
 #line 7724 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop database"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1244:
-
-/* Line 1806 of yacc.c  */
 #line 7728 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop database if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1245:
-
-/* Line 1806 of yacc.c  */
 #line 7736 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create domain"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1246:
-
-/* Line 1806 of yacc.c  */
 #line 7744 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter domain"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1247:
-
-/* Line 1806 of yacc.c  */
 #line 7748 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("drop not null"));
-}
+;}
     break;
 
   case 1248:
-
-/* Line 1806 of yacc.c  */
 #line 7752 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("set not null"));
-}
+;}
     break;
 
   case 1249:
-
-/* Line 1806 of yacc.c  */
 #line 7756 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (5)].str),mm_strdup("add"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1250:
-
-/* Line 1806 of yacc.c  */
 #line 7760 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter domain"),(yyvsp[(3) - (7)].str),mm_strdup("drop constraint"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1251:
-
-/* Line 1806 of yacc.c  */
 #line 7764 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter domain"),(yyvsp[(3) - (9)].str),mm_strdup("drop constraint if exists"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1252:
-
-/* Line 1806 of yacc.c  */
 #line 7768 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("validate constraint"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1253:
-
-/* Line 1806 of yacc.c  */
 #line 7776 "preproc.y"
     { 
  (yyval.str) = mm_strdup("as");
-}
+;}
     break;
 
   case 1254:
-
-/* Line 1806 of yacc.c  */
 #line 7780 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1255:
-
-/* Line 1806 of yacc.c  */
 #line 7787 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter text search dictionary"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1256:
-
-/* Line 1806 of yacc.c  */
 #line 7795 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter text search configuration"),(yyvsp[(5) - (11)].str),mm_strdup("add mapping for"),(yyvsp[(9) - (11)].str),mm_strdup("with"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1257:
-
-/* Line 1806 of yacc.c  */
 #line 7799 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter text search configuration"),(yyvsp[(5) - (11)].str),mm_strdup("alter mapping for"),(yyvsp[(9) - (11)].str),mm_strdup("with"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1258:
-
-/* Line 1806 of yacc.c  */
 #line 7803 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter text search configuration"),(yyvsp[(5) - (11)].str),mm_strdup("alter mapping replace"),(yyvsp[(9) - (11)].str),mm_strdup("with"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1259:
-
-/* Line 1806 of yacc.c  */
 #line 7807 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("alter text search configuration"),(yyvsp[(5) - (13)].str),mm_strdup("alter mapping for"),(yyvsp[(9) - (13)].str),mm_strdup("replace"),(yyvsp[(11) - (13)].str),mm_strdup("with"),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 1260:
-
-/* Line 1806 of yacc.c  */
 #line 7811 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (9)].str),mm_strdup("drop mapping for"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1261:
-
-/* Line 1806 of yacc.c  */
 #line 7815 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (11)].str),mm_strdup("drop mapping if exists for"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1262:
-
-/* Line 1806 of yacc.c  */
 #line 7823 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (10)].str),mm_strdup("conversion"),(yyvsp[(4) - (10)].str),mm_strdup("for"),(yyvsp[(6) - (10)].str),mm_strdup("to"),(yyvsp[(8) - (10)].str),mm_strdup("from"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1263:
-
-/* Line 1806 of yacc.c  */
 #line 7831 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("cluster"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1264:
-
-/* Line 1806 of yacc.c  */
 #line 7835 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("cluster"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1265:
-
-/* Line 1806 of yacc.c  */
 #line 7839 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("cluster"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),mm_strdup("on"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1266:
-
-/* Line 1806 of yacc.c  */
 #line 7847 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1267:
-
-/* Line 1806 of yacc.c  */
 #line 7851 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1268:
-
-/* Line 1806 of yacc.c  */
 #line 7858 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("vacuum"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1269:
-
-/* Line 1806 of yacc.c  */
 #line 7862 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("vacuum"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1270:
-
-/* Line 1806 of yacc.c  */
 #line 7866 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("vacuum"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1271:
-
-/* Line 1806 of yacc.c  */
 #line 7870 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("vacuum ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1272:
-
-/* Line 1806 of yacc.c  */
 #line 7874 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("vacuum ("),(yyvsp[(3) - (6)].str),mm_strdup(")"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1273:
-
-/* Line 1806 of yacc.c  */
 #line 7882 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1274:
-
-/* Line 1806 of yacc.c  */
 #line 7886 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1275:
-
-/* Line 1806 of yacc.c  */
 #line 7894 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1276:
-
-/* Line 1806 of yacc.c  */
 #line 7898 "preproc.y"
     { 
  (yyval.str) = mm_strdup("verbose");
-}
+;}
     break;
 
   case 1277:
-
-/* Line 1806 of yacc.c  */
 #line 7902 "preproc.y"
     { 
  (yyval.str) = mm_strdup("freeze");
-}
+;}
     break;
 
   case 1278:
-
-/* Line 1806 of yacc.c  */
 #line 7906 "preproc.y"
     { 
  (yyval.str) = mm_strdup("full");
-}
+;}
     break;
 
   case 1279:
-
-/* Line 1806 of yacc.c  */
 #line 7914 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1280:
-
-/* Line 1806 of yacc.c  */
 #line 7918 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1281:
-
-/* Line 1806 of yacc.c  */
 #line 7926 "preproc.y"
     { 
  (yyval.str) = mm_strdup("analyze");
-}
+;}
     break;
 
   case 1282:
-
-/* Line 1806 of yacc.c  */
 #line 7930 "preproc.y"
     { 
  (yyval.str) = mm_strdup("analyse");
-}
+;}
     break;
 
   case 1283:
-
-/* Line 1806 of yacc.c  */
 #line 7938 "preproc.y"
     { 
  (yyval.str) = mm_strdup("verbose");
-}
+;}
     break;
 
   case 1284:
-
-/* Line 1806 of yacc.c  */
 #line 7942 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1285:
-
-/* Line 1806 of yacc.c  */
 #line 7949 "preproc.y"
     { 
  (yyval.str) = mm_strdup("full");
-}
+;}
     break;
 
   case 1286:
-
-/* Line 1806 of yacc.c  */
 #line 7953 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1287:
-
-/* Line 1806 of yacc.c  */
 #line 7960 "preproc.y"
     { 
  (yyval.str) = mm_strdup("freeze");
-}
+;}
     break;
 
   case 1288:
-
-/* Line 1806 of yacc.c  */
 #line 7964 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1289:
-
-/* Line 1806 of yacc.c  */
 #line 7971 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1290:
-
-/* Line 1806 of yacc.c  */
 #line 7975 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1291:
-
-/* Line 1806 of yacc.c  */
 #line 7982 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("explain"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1292:
-
-/* Line 1806 of yacc.c  */
 #line 7986 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("explain"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1293:
-
-/* Line 1806 of yacc.c  */
 #line 7990 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("explain verbose"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1294:
-
-/* Line 1806 of yacc.c  */
 #line 7994 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("explain ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1295:
-
-/* Line 1806 of yacc.c  */
 #line 8002 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1296:
-
-/* Line 1806 of yacc.c  */
 #line 8006 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1297:
-
-/* Line 1806 of yacc.c  */
 #line 8010 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1298:
-
-/* Line 1806 of yacc.c  */
 #line 8014 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1299:
-
-/* Line 1806 of yacc.c  */
 #line 8018 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1300:
-
-/* Line 1806 of yacc.c  */
 #line 8022 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1301:
-
-/* Line 1806 of yacc.c  */
 #line 8026 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1302:
-
-/* Line 1806 of yacc.c  */
 #line 8030 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1303:
-
-/* Line 1806 of yacc.c  */
 #line 8034 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1304:
-
-/* Line 1806 of yacc.c  */
 #line 8042 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1305:
-
-/* Line 1806 of yacc.c  */
 #line 8046 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1306:
-
-/* Line 1806 of yacc.c  */
 #line 8054 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1307:
-
-/* Line 1806 of yacc.c  */
 #line 8062 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1308:
-
-/* Line 1806 of yacc.c  */
 #line 8066 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1309:
-
-/* Line 1806 of yacc.c  */
 #line 8074 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1310:
-
-/* Line 1806 of yacc.c  */
 #line 8078 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1311:
-
-/* Line 1806 of yacc.c  */
 #line 8082 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1312:
-
-/* Line 1806 of yacc.c  */
 #line 8089 "preproc.y"
     {
 		(yyval.prep).name = (yyvsp[(2) - (5)].str);
 		(yyval.prep).type = (yyvsp[(3) - (5)].str);
 		(yyval.prep).stmt = cat_str(3, mm_strdup("\""), (yyvsp[(5) - (5)].str), mm_strdup("\""));
-	}
+	;}
     break;
 
   case 1313:
-
-/* Line 1806 of yacc.c  */
 #line 8095 "preproc.y"
     {
 		(yyval.prep).name = (yyvsp[(2) - (4)].str);
 		(yyval.prep).type = NULL;
 		(yyval.prep).stmt = (yyvsp[(4) - (4)].str);
-	}
+	;}
     break;
 
   case 1314:
-
-/* Line 1806 of yacc.c  */
 #line 8105 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1315:
-
-/* Line 1806 of yacc.c  */
 #line 8109 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1316:
-
-/* Line 1806 of yacc.c  */
 #line 8116 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1317:
-
-/* Line 1806 of yacc.c  */
 #line 8120 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1318:
-
-/* Line 1806 of yacc.c  */
 #line 8124 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1319:
-
-/* Line 1806 of yacc.c  */
 #line 8128 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1320:
-
-/* Line 1806 of yacc.c  */
 #line 8136 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (4)].str); }
+    { (yyval.str) = (yyvsp[(2) - (4)].str); ;}
     break;
 
   case 1321:
-
-/* Line 1806 of yacc.c  */
 #line 8138 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("create"),(yyvsp[(2) - (9)].str),mm_strdup("table"),(yyvsp[(4) - (9)].str),mm_strdup("as execute"),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1322:
-
-/* Line 1806 of yacc.c  */
 #line 8146 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1323:
-
-/* Line 1806 of yacc.c  */
 #line 8150 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1324:
-
-/* Line 1806 of yacc.c  */
 #line 8157 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("insert into"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1325:
-
-/* Line 1806 of yacc.c  */
 #line 8165 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1326:
-
-/* Line 1806 of yacc.c  */
 #line 8169 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[(2) - (4)].str),mm_strdup(")"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1327:
-
-/* Line 1806 of yacc.c  */
 #line 8173 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default values");
-}
+;}
     break;
 
   case 1328:
-
-/* Line 1806 of yacc.c  */
 #line 8181 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1329:
-
-/* Line 1806 of yacc.c  */
 #line 8185 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1330:
-
-/* Line 1806 of yacc.c  */
 #line 8193 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1331:
-
-/* Line 1806 of yacc.c  */
 #line 8201 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("returning"),(yyvsp[(2) - (3)].str));
-}
+;}
     break;
 
   case 1332:
-
-/* Line 1806 of yacc.c  */
 #line 8205 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1333:
-
-/* Line 1806 of yacc.c  */
 #line 8212 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),mm_strdup("delete from"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1334:
-
-/* Line 1806 of yacc.c  */
 #line 8220 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1335:
-
-/* Line 1806 of yacc.c  */
 #line 8224 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1336:
-
-/* Line 1806 of yacc.c  */
 #line 8231 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("lock"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1337:
-
-/* Line 1806 of yacc.c  */
 #line 8239 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("in"),(yyvsp[(2) - (3)].str),mm_strdup("mode"));
-}
+;}
     break;
 
   case 1338:
-
-/* Line 1806 of yacc.c  */
 #line 8243 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1339:
-
-/* Line 1806 of yacc.c  */
 #line 8250 "preproc.y"
     { 
  (yyval.str) = mm_strdup("access share");
-}
+;}
     break;
 
   case 1340:
-
-/* Line 1806 of yacc.c  */
 #line 8254 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row share");
-}
+;}
     break;
 
   case 1341:
-
-/* Line 1806 of yacc.c  */
 #line 8258 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row exclusive");
-}
+;}
     break;
 
   case 1342:
-
-/* Line 1806 of yacc.c  */
 #line 8262 "preproc.y"
     { 
  (yyval.str) = mm_strdup("share update exclusive");
-}
+;}
     break;
 
   case 1343:
-
-/* Line 1806 of yacc.c  */
 #line 8266 "preproc.y"
     { 
  (yyval.str) = mm_strdup("share");
-}
+;}
     break;
 
   case 1344:
-
-/* Line 1806 of yacc.c  */
 #line 8270 "preproc.y"
     { 
  (yyval.str) = mm_strdup("share row exclusive");
-}
+;}
     break;
 
   case 1345:
-
-/* Line 1806 of yacc.c  */
 #line 8274 "preproc.y"
     { 
  (yyval.str) = mm_strdup("exclusive");
-}
+;}
     break;
 
   case 1346:
-
-/* Line 1806 of yacc.c  */
 #line 8278 "preproc.y"
     { 
  (yyval.str) = mm_strdup("access exclusive");
-}
+;}
     break;
 
   case 1347:
-
-/* Line 1806 of yacc.c  */
 #line 8286 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nowait");
-}
+;}
     break;
 
   case 1348:
-
-/* Line 1806 of yacc.c  */
 #line 8290 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1349:
-
-/* Line 1806 of yacc.c  */
 #line 8297 "preproc.y"
     { 
  (yyval.str) = cat_str(8,(yyvsp[(1) - (8)].str),mm_strdup("update"),(yyvsp[(3) - (8)].str),mm_strdup("set"),(yyvsp[(5) - (8)].str),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1350:
-
-/* Line 1806 of yacc.c  */
 #line 8305 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1351:
-
-/* Line 1806 of yacc.c  */
 #line 8309 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1352:
-
-/* Line 1806 of yacc.c  */
 #line 8317 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1353:
-
-/* Line 1806 of yacc.c  */
 #line 8321 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1354:
-
-/* Line 1806 of yacc.c  */
 #line 8329 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1355:
-
-/* Line 1806 of yacc.c  */
 #line 8337 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[(2) - (5)].str),mm_strdup(") ="),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1356:
-
-/* Line 1806 of yacc.c  */
 #line 8345 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1357:
-
-/* Line 1806 of yacc.c  */
 #line 8353 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1358:
-
-/* Line 1806 of yacc.c  */
 #line 8357 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1359:
-
-/* Line 1806 of yacc.c  */
 #line 8365 "preproc.y"
     {
 		struct cursor *ptr, *this;
@@ -40329,21 +38046,17 @@
 				comment);
 		else
 			(yyval.str) = cat2_str(adjust_outofscope_cursor_vars(this), comment);
-	}
+	;}
     break;
 
   case 1360:
-
-/* Line 1806 of yacc.c  */
 #line 8418 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1361:
-
-/* Line 1806 of yacc.c  */
 #line 8422 "preproc.y"
     {
 			char *curname = mm_alloc(strlen((yyvsp[(1) - (1)].str)) + 2);
@@ -40351,1492 +38064,1158 @@
 			free((yyvsp[(1) - (1)].str));
 			(yyvsp[(1) - (1)].str) = curname;
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 1362:
-
-/* Line 1806 of yacc.c  */
 #line 8434 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1363:
-
-/* Line 1806 of yacc.c  */
 #line 8437 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("no scroll"));
-}
+;}
     break;
 
   case 1364:
-
-/* Line 1806 of yacc.c  */
 #line 8441 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("scroll"));
-}
+;}
     break;
 
   case 1365:
-
-/* Line 1806 of yacc.c  */
 #line 8445 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("binary"));
-}
+;}
     break;
 
   case 1366:
-
-/* Line 1806 of yacc.c  */
 #line 8449 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("insensitive"));
-}
+;}
     break;
 
   case 1367:
-
-/* Line 1806 of yacc.c  */
 #line 8457 "preproc.y"
     {
 		if (compat == ECPG_COMPAT_INFORMIX_SE && autocommit)
 			(yyval.str) = mm_strdup("with hold");
 		else
 			(yyval.str) = EMPTY;
-	}
+	;}
     break;
 
   case 1368:
-
-/* Line 1806 of yacc.c  */
 #line 8464 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with hold");
-}
+;}
     break;
 
   case 1369:
-
-/* Line 1806 of yacc.c  */
 #line 8468 "preproc.y"
     { 
  (yyval.str) = mm_strdup("without hold");
-}
+;}
     break;
 
   case 1370:
-
-/* Line 1806 of yacc.c  */
 #line 8476 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1371:
-
-/* Line 1806 of yacc.c  */
 #line 8480 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1372:
-
-/* Line 1806 of yacc.c  */
 #line 8488 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1373:
-
-/* Line 1806 of yacc.c  */
 #line 8492 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1374:
-
-/* Line 1806 of yacc.c  */
 #line 8500 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1375:
-
-/* Line 1806 of yacc.c  */
 #line 8504 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1376:
-
-/* Line 1806 of yacc.c  */
 #line 8508 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1377:
-
-/* Line 1806 of yacc.c  */
 #line 8512 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1378:
-
-/* Line 1806 of yacc.c  */
 #line 8516 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1379:
-
-/* Line 1806 of yacc.c  */
 #line 8520 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1380:
-
-/* Line 1806 of yacc.c  */
 #line 8524 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1381:
-
-/* Line 1806 of yacc.c  */
 #line 8528 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1382:
-
-/* Line 1806 of yacc.c  */
 #line 8536 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1383:
-
-/* Line 1806 of yacc.c  */
 #line 8540 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1384:
-
-/* Line 1806 of yacc.c  */
 #line 8548 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("select"),(yyvsp[(2) - (9)].str),(yyvsp[(3) - (9)].str),(yyvsp[(4) - (9)].str),(yyvsp[(5) - (9)].str),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1385:
-
-/* Line 1806 of yacc.c  */
 #line 8552 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1386:
-
-/* Line 1806 of yacc.c  */
 #line 8556 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("table"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1387:
-
-/* Line 1806 of yacc.c  */
 #line 8560 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("union"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1388:
-
-/* Line 1806 of yacc.c  */
 #line 8564 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("intersect"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1389:
-
-/* Line 1806 of yacc.c  */
 #line 8568 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("except"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1390:
-
-/* Line 1806 of yacc.c  */
 #line 8576 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1391:
-
-/* Line 1806 of yacc.c  */
 #line 8580 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with recursive"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1392:
-
-/* Line 1806 of yacc.c  */
 #line 8588 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1393:
-
-/* Line 1806 of yacc.c  */
 #line 8592 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1394:
-
-/* Line 1806 of yacc.c  */
 #line 8600 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),(yyvsp[(2) - (6)].str),mm_strdup("as ("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1395:
-
-/* Line 1806 of yacc.c  */
 #line 8608 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1396:
-
-/* Line 1806 of yacc.c  */
 #line 8612 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1397:
-
-/* Line 1806 of yacc.c  */
 #line 8619 "preproc.y"
     {
 						FoundInto = 1;
 						(yyval.str)= cat2_str(mm_strdup("into"), (yyvsp[(2) - (2)].str));
-					}
+					;}
     break;
 
   case 1398:
-
-/* Line 1806 of yacc.c  */
 #line 8623 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 1399:
-
-/* Line 1806 of yacc.c  */
 #line 8625 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1400:
-
-/* Line 1806 of yacc.c  */
 #line 8632 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("temporary"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1401:
-
-/* Line 1806 of yacc.c  */
 #line 8636 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("temp"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1402:
-
-/* Line 1806 of yacc.c  */
 #line 8640 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("local temporary"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1403:
-
-/* Line 1806 of yacc.c  */
 #line 8644 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("local temp"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1404:
-
-/* Line 1806 of yacc.c  */
 #line 8648 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("global temporary"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1405:
-
-/* Line 1806 of yacc.c  */
 #line 8652 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("global temp"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1406:
-
-/* Line 1806 of yacc.c  */
 #line 8656 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("unlogged"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1407:
-
-/* Line 1806 of yacc.c  */
 #line 8660 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("table"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1408:
-
-/* Line 1806 of yacc.c  */
 #line 8664 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1409:
-
-/* Line 1806 of yacc.c  */
 #line 8672 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 1410:
-
-/* Line 1806 of yacc.c  */
 #line 8676 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1411:
-
-/* Line 1806 of yacc.c  */
 #line 8683 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 1412:
-
-/* Line 1806 of yacc.c  */
 #line 8687 "preproc.y"
     { 
  (yyval.str) = mm_strdup("distinct");
-}
+;}
     break;
 
   case 1413:
-
-/* Line 1806 of yacc.c  */
 #line 8691 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1414:
-
-/* Line 1806 of yacc.c  */
 #line 8698 "preproc.y"
     { 
  (yyval.str) = mm_strdup("distinct");
-}
+;}
     break;
 
   case 1415:
-
-/* Line 1806 of yacc.c  */
 #line 8702 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("distinct on ("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1416:
-
-/* Line 1806 of yacc.c  */
 #line 8706 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 1417:
-
-/* Line 1806 of yacc.c  */
 #line 8710 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1418:
-
-/* Line 1806 of yacc.c  */
 #line 8717 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1419:
-
-/* Line 1806 of yacc.c  */
 #line 8721 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1420:
-
-/* Line 1806 of yacc.c  */
 #line 8728 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("order by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1421:
-
-/* Line 1806 of yacc.c  */
 #line 8736 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1422:
-
-/* Line 1806 of yacc.c  */
 #line 8740 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1423:
-
-/* Line 1806 of yacc.c  */
 #line 8748 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("using"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1424:
-
-/* Line 1806 of yacc.c  */
 #line 8752 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1425:
-
-/* Line 1806 of yacc.c  */
 #line 8760 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1426:
-
-/* Line 1806 of yacc.c  */
 #line 8764 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1427:
-
-/* Line 1806 of yacc.c  */
 #line 8768 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1428:
-
-/* Line 1806 of yacc.c  */
 #line 8772 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1429:
-
-/* Line 1806 of yacc.c  */
 #line 8780 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1430:
-
-/* Line 1806 of yacc.c  */
 #line 8784 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1431:
-
-/* Line 1806 of yacc.c  */
 #line 8791 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("limit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1432:
-
-/* Line 1806 of yacc.c  */
 #line 8795 "preproc.y"
     {
 		mmerror(PARSE_ERROR, ET_WARNING, "no longer supported LIMIT #,# syntax passed to server");
 		(yyval.str) = cat_str(4, mm_strdup("limit"), (yyvsp[(2) - (4)].str), mm_strdup(","), (yyvsp[(4) - (4)].str));
-	}
+	;}
     break;
 
   case 1433:
-
-/* Line 1806 of yacc.c  */
 #line 8800 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("fetch"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),mm_strdup("only"));
-}
+;}
     break;
 
   case 1434:
-
-/* Line 1806 of yacc.c  */
 #line 8808 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("offset"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1435:
-
-/* Line 1806 of yacc.c  */
 #line 8812 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("offset"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1436:
-
-/* Line 1806 of yacc.c  */
 #line 8820 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1437:
-
-/* Line 1806 of yacc.c  */
 #line 8824 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 1438:
-
-/* Line 1806 of yacc.c  */
 #line 8832 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1439:
-
-/* Line 1806 of yacc.c  */
 #line 8840 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1440:
-
-/* Line 1806 of yacc.c  */
 #line 8844 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1441:
-
-/* Line 1806 of yacc.c  */
 #line 8848 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1442:
-
-/* Line 1806 of yacc.c  */
 #line 8855 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1443:
-
-/* Line 1806 of yacc.c  */
 #line 8863 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row");
-}
+;}
     break;
 
   case 1444:
-
-/* Line 1806 of yacc.c  */
 #line 8867 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rows");
-}
+;}
     break;
 
   case 1445:
-
-/* Line 1806 of yacc.c  */
 #line 8875 "preproc.y"
     { 
  (yyval.str) = mm_strdup("first");
-}
+;}
     break;
 
   case 1446:
-
-/* Line 1806 of yacc.c  */
 #line 8879 "preproc.y"
     { 
  (yyval.str) = mm_strdup("next");
-}
+;}
     break;
 
   case 1447:
-
-/* Line 1806 of yacc.c  */
 #line 8887 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("group by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1448:
-
-/* Line 1806 of yacc.c  */
 #line 8891 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1449:
-
-/* Line 1806 of yacc.c  */
 #line 8898 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("having"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1450:
-
-/* Line 1806 of yacc.c  */
 #line 8902 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1451:
-
-/* Line 1806 of yacc.c  */
 #line 8909 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1452:
-
-/* Line 1806 of yacc.c  */
 #line 8913 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for read only");
-}
+;}
     break;
 
   case 1453:
-
-/* Line 1806 of yacc.c  */
 #line 8921 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1454:
-
-/* Line 1806 of yacc.c  */
 #line 8925 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1455:
-
-/* Line 1806 of yacc.c  */
 #line 8932 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1456:
-
-/* Line 1806 of yacc.c  */
 #line 8936 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1457:
-
-/* Line 1806 of yacc.c  */
 #line 8944 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1458:
-
-/* Line 1806 of yacc.c  */
 #line 8952 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for update");
-}
+;}
     break;
 
   case 1459:
-
-/* Line 1806 of yacc.c  */
 #line 8956 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for no key update");
-}
+;}
     break;
 
   case 1460:
-
-/* Line 1806 of yacc.c  */
 #line 8960 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for share");
-}
+;}
     break;
 
   case 1461:
-
-/* Line 1806 of yacc.c  */
 #line 8964 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for key share");
-}
+;}
     break;
 
   case 1462:
-
-/* Line 1806 of yacc.c  */
 #line 8972 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("of"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1463:
-
-/* Line 1806 of yacc.c  */
 #line 8976 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1464:
-
-/* Line 1806 of yacc.c  */
 #line 8983 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("values"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1465:
-
-/* Line 1806 of yacc.c  */
 #line 8987 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1466:
-
-/* Line 1806 of yacc.c  */
 #line 8995 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1467:
-
-/* Line 1806 of yacc.c  */
 #line 8999 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1468:
-
-/* Line 1806 of yacc.c  */
 #line 9006 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1469:
-
-/* Line 1806 of yacc.c  */
 #line 9010 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1470:
-
-/* Line 1806 of yacc.c  */
 #line 9018 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1471:
-
-/* Line 1806 of yacc.c  */
 #line 9022 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1472:
-
-/* Line 1806 of yacc.c  */
 #line 9026 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("lateral"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1473:
-
-/* Line 1806 of yacc.c  */
 #line 9030 "preproc.y"
     { 
 	if ((yyvsp[(2) - (2)].str) == NULL)
 		mmerror(PARSE_ERROR, ET_ERROR, "subquery in FROM must have an alias");
 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1474:
-
-/* Line 1806 of yacc.c  */
 #line 9037 "preproc.y"
     { 
 	if ((yyvsp[(3) - (3)].str) == NULL)
 		mmerror(PARSE_ERROR, ET_ERROR, "subquery in FROM must have an alias");
 
  (yyval.str) = cat_str(3,mm_strdup("lateral"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1475:
-
-/* Line 1806 of yacc.c  */
 #line 9044 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1476:
-
-/* Line 1806 of yacc.c  */
 #line 9048 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[(2) - (4)].str),mm_strdup(")"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1477:
-
-/* Line 1806 of yacc.c  */
 #line 9056 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1478:
-
-/* Line 1806 of yacc.c  */
 #line 9060 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("cross join"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1479:
-
-/* Line 1806 of yacc.c  */
 #line 9064 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),mm_strdup("join"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1480:
-
-/* Line 1806 of yacc.c  */
 #line 9068 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("join"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1481:
-
-/* Line 1806 of yacc.c  */
 #line 9072 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("natural"),(yyvsp[(3) - (5)].str),mm_strdup("join"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1482:
-
-/* Line 1806 of yacc.c  */
 #line 9076 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("natural join"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1483:
-
-/* Line 1806 of yacc.c  */
 #line 9084 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("as"),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1484:
-
-/* Line 1806 of yacc.c  */
 #line 9088 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("as"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1485:
-
-/* Line 1806 of yacc.c  */
 #line 9092 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1486:
-
-/* Line 1806 of yacc.c  */
 #line 9096 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1487:
-
-/* Line 1806 of yacc.c  */
 #line 9104 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1488:
-
-/* Line 1806 of yacc.c  */
 #line 9108 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1489:
-
-/* Line 1806 of yacc.c  */
 #line 9115 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1490:
-
-/* Line 1806 of yacc.c  */
 #line 9119 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("as ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1491:
-
-/* Line 1806 of yacc.c  */
 #line 9123 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("as"),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1492:
-
-/* Line 1806 of yacc.c  */
 #line 9127 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1493:
-
-/* Line 1806 of yacc.c  */
 #line 9131 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1494:
-
-/* Line 1806 of yacc.c  */
 #line 9138 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("full"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1495:
-
-/* Line 1806 of yacc.c  */
 #line 9142 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("left"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1496:
-
-/* Line 1806 of yacc.c  */
 #line 9146 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("right"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1497:
-
-/* Line 1806 of yacc.c  */
 #line 9150 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inner");
-}
+;}
     break;
 
   case 1498:
-
-/* Line 1806 of yacc.c  */
 #line 9158 "preproc.y"
     { 
  (yyval.str) = mm_strdup("outer");
-}
+;}
     break;
 
   case 1499:
-
-/* Line 1806 of yacc.c  */
 #line 9162 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1500:
-
-/* Line 1806 of yacc.c  */
 #line 9169 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("using ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1501:
-
-/* Line 1806 of yacc.c  */
 #line 9173 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("on"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1502:
-
-/* Line 1806 of yacc.c  */
 #line 9181 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1503:
-
-/* Line 1806 of yacc.c  */
 #line 9185 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("*"));
-}
+;}
     break;
 
   case 1504:
-
-/* Line 1806 of yacc.c  */
 #line 9189 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("only"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1505:
-
-/* Line 1806 of yacc.c  */
 #line 9193 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("only ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1506:
-
-/* Line 1806 of yacc.c  */
 #line 9201 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1507:
-
-/* Line 1806 of yacc.c  */
 #line 9205 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1508:
-
-/* Line 1806 of yacc.c  */
 #line 9213 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1509:
-
-/* Line 1806 of yacc.c  */
 #line 9217 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1510:
-
-/* Line 1806 of yacc.c  */
 #line 9221 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1511:
-
-/* Line 1806 of yacc.c  */
 #line 9229 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1512:
-
-/* Line 1806 of yacc.c  */
 #line 9237 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("where"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1513:
-
-/* Line 1806 of yacc.c  */
 #line 9241 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1514:
-
-/* Line 1806 of yacc.c  */
 #line 9248 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("where"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1515:
-
-/* Line 1806 of yacc.c  */
 #line 9252 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (4)].str);
 		(yyval.str) = cat_str(2,mm_strdup("where current of"), cursor_marker);
-	}
+	;}
     break;
 
   case 1516:
-
-/* Line 1806 of yacc.c  */
 #line 9257 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1517:
-
-/* Line 1806 of yacc.c  */
 #line 9264 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1518:
-
-/* Line 1806 of yacc.c  */
 #line 9268 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1519:
-
-/* Line 1806 of yacc.c  */
 #line 9275 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1520:
-
-/* Line 1806 of yacc.c  */
 #line 9279 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1521:
-
-/* Line 1806 of yacc.c  */
 #line 9287 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1522:
-
-/* Line 1806 of yacc.c  */
 #line 9295 "preproc.y"
-    {	(yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].index).str); }
+    {	(yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].index).str); ;}
     break;
 
   case 1523:
-
-/* Line 1806 of yacc.c  */
 #line 9297 "preproc.y"
-    {	(yyval.str) = cat_str(3, mm_strdup("setof"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].index).str); }
+    {	(yyval.str) = cat_str(3, mm_strdup("setof"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].index).str); ;}
     break;
 
   case 1524:
-
-/* Line 1806 of yacc.c  */
 #line 9299 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (5)].str),mm_strdup("array ["),(yyvsp[(4) - (5)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1525:
-
-/* Line 1806 of yacc.c  */
 #line 9303 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("setof"),(yyvsp[(2) - (6)].str),mm_strdup("array ["),(yyvsp[(5) - (6)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1526:
-
-/* Line 1806 of yacc.c  */
 #line 9307 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("array"));
-}
+;}
     break;
 
   case 1527:
-
-/* Line 1806 of yacc.c  */
 #line 9311 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("setof"),(yyvsp[(2) - (3)].str),mm_strdup("array"));
-}
+;}
     break;
 
   case 1528:
-
-/* Line 1806 of yacc.c  */
 #line 9319 "preproc.y"
     {
 		(yyval.index).index1 = (yyvsp[(1) - (3)].index).index1;
@@ -41846,12 +39225,10 @@
 		else if (strcmp((yyvsp[(1) - (3)].index).index2, "-1") == 0)
 			(yyval.index).index2 = mm_strdup("0");
 		(yyval.index).str = cat_str(2, (yyvsp[(1) - (3)].index).str, mm_strdup("[]"));
-	}
+	;}
     break;
 
   case 1529:
-
-/* Line 1806 of yacc.c  */
 #line 9329 "preproc.y"
     {
 		(yyval.index).index1 = (yyvsp[(1) - (4)].index).index1;
@@ -41861,7119 +39238,5531 @@
 		else if (strcmp((yyvsp[(1) - (4)].index).index2, "-1") == 0)
 			(yyval.index).index2 = strdup((yyvsp[(3) - (4)].str));
 		(yyval.index).str = cat_str(4, (yyvsp[(1) - (4)].index).str, mm_strdup("["), (yyvsp[(3) - (4)].str), mm_strdup("]"));
-	}
+	;}
     break;
 
   case 1530:
-
-/* Line 1806 of yacc.c  */
 #line 9339 "preproc.y"
     {
 		(yyval.index).index1 = mm_strdup("-1");
 		(yyval.index).index2 = mm_strdup("-1");
 		(yyval.index).str= EMPTY;
-	}
+	;}
     break;
 
   case 1531:
-
-/* Line 1806 of yacc.c  */
 #line 9349 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1532:
-
-/* Line 1806 of yacc.c  */
 #line 9353 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1533:
-
-/* Line 1806 of yacc.c  */
 #line 9357 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1534:
-
-/* Line 1806 of yacc.c  */
 #line 9361 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1535:
-
-/* Line 1806 of yacc.c  */
 #line 9365 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1536:
-
-/* Line 1806 of yacc.c  */
 #line 9369 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1537:
-
-/* Line 1806 of yacc.c  */
 #line 9373 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1538:
-
-/* Line 1806 of yacc.c  */
 #line 9381 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1539:
-
-/* Line 1806 of yacc.c  */
 #line 9385 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1540:
-
-/* Line 1806 of yacc.c  */
 #line 9389 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1541:
-
-/* Line 1806 of yacc.c  */
 #line 9393 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1542:
-
-/* Line 1806 of yacc.c  */
 #line 9401 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1543:
-
-/* Line 1806 of yacc.c  */
 #line 9405 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1544:
-
-/* Line 1806 of yacc.c  */
 #line 9413 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1545:
-
-/* Line 1806 of yacc.c  */
 #line 9417 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1546:
-
-/* Line 1806 of yacc.c  */
 #line 9424 "preproc.y"
     { 
  (yyval.str) = mm_strdup("int");
-}
+;}
     break;
 
   case 1547:
-
-/* Line 1806 of yacc.c  */
 #line 9428 "preproc.y"
     { 
  (yyval.str) = mm_strdup("integer");
-}
+;}
     break;
 
   case 1548:
-
-/* Line 1806 of yacc.c  */
 #line 9432 "preproc.y"
     { 
  (yyval.str) = mm_strdup("smallint");
-}
+;}
     break;
 
   case 1549:
-
-/* Line 1806 of yacc.c  */
 #line 9436 "preproc.y"
     { 
  (yyval.str) = mm_strdup("bigint");
-}
+;}
     break;
 
   case 1550:
-
-/* Line 1806 of yacc.c  */
 #line 9440 "preproc.y"
     { 
  (yyval.str) = mm_strdup("real");
-}
+;}
     break;
 
   case 1551:
-
-/* Line 1806 of yacc.c  */
 #line 9444 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("float"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1552:
-
-/* Line 1806 of yacc.c  */
 #line 9448 "preproc.y"
     { 
  (yyval.str) = mm_strdup("double precision");
-}
+;}
     break;
 
   case 1553:
-
-/* Line 1806 of yacc.c  */
 #line 9452 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("decimal"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1554:
-
-/* Line 1806 of yacc.c  */
 #line 9456 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("dec"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1555:
-
-/* Line 1806 of yacc.c  */
 #line 9460 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("numeric"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1556:
-
-/* Line 1806 of yacc.c  */
 #line 9464 "preproc.y"
     { 
  (yyval.str) = mm_strdup("boolean");
-}
+;}
     break;
 
   case 1557:
-
-/* Line 1806 of yacc.c  */
 #line 9472 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1558:
-
-/* Line 1806 of yacc.c  */
 #line 9476 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1559:
-
-/* Line 1806 of yacc.c  */
 #line 9483 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1560:
-
-/* Line 1806 of yacc.c  */
 #line 9487 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1561:
-
-/* Line 1806 of yacc.c  */
 #line 9495 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1562:
-
-/* Line 1806 of yacc.c  */
 #line 9499 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1563:
-
-/* Line 1806 of yacc.c  */
 #line 9507 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("bit"),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1564:
-
-/* Line 1806 of yacc.c  */
 #line 9515 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("bit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1565:
-
-/* Line 1806 of yacc.c  */
 #line 9523 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1566:
-
-/* Line 1806 of yacc.c  */
 #line 9527 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1567:
-
-/* Line 1806 of yacc.c  */
 #line 9535 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1568:
-
-/* Line 1806 of yacc.c  */
 #line 9539 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1569:
-
-/* Line 1806 of yacc.c  */
 #line 9547 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1570:
-
-/* Line 1806 of yacc.c  */
 #line 9555 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1571:
-
-/* Line 1806 of yacc.c  */
 #line 9563 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("character"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1572:
-
-/* Line 1806 of yacc.c  */
 #line 9567 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("char"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1573:
-
-/* Line 1806 of yacc.c  */
 #line 9571 "preproc.y"
     { 
  (yyval.str) = mm_strdup("varchar");
-}
+;}
     break;
 
   case 1574:
-
-/* Line 1806 of yacc.c  */
 #line 9575 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("national character"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1575:
-
-/* Line 1806 of yacc.c  */
 #line 9579 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("national char"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1576:
-
-/* Line 1806 of yacc.c  */
 #line 9583 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("nchar"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1577:
-
-/* Line 1806 of yacc.c  */
 #line 9591 "preproc.y"
     { 
  (yyval.str) = mm_strdup("varying");
-}
+;}
     break;
 
   case 1578:
-
-/* Line 1806 of yacc.c  */
 #line 9595 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1579:
-
-/* Line 1806 of yacc.c  */
 #line 9602 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("character set"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1580:
-
-/* Line 1806 of yacc.c  */
 #line 9606 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1581:
-
-/* Line 1806 of yacc.c  */
 #line 9613 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("timestamp ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1582:
-
-/* Line 1806 of yacc.c  */
 #line 9617 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("timestamp"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1583:
-
-/* Line 1806 of yacc.c  */
 #line 9621 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("time ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1584:
-
-/* Line 1806 of yacc.c  */
 #line 9625 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("time"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1585:
-
-/* Line 1806 of yacc.c  */
 #line 9633 "preproc.y"
     { 
  (yyval.str) = mm_strdup("interval");
-}
+;}
     break;
 
   case 1586:
-
-/* Line 1806 of yacc.c  */
 #line 9641 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with time zone");
-}
+;}
     break;
 
   case 1587:
-
-/* Line 1806 of yacc.c  */
 #line 9645 "preproc.y"
     { 
  (yyval.str) = mm_strdup("without time zone");
-}
+;}
     break;
 
   case 1588:
-
-/* Line 1806 of yacc.c  */
 #line 9649 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1589:
-
-/* Line 1806 of yacc.c  */
 #line 9656 "preproc.y"
     { 
  (yyval.str) = mm_strdup("year");
-}
+;}
     break;
 
   case 1590:
-
-/* Line 1806 of yacc.c  */
 #line 9660 "preproc.y"
     { 
  (yyval.str) = mm_strdup("month");
-}
+;}
     break;
 
   case 1591:
-
-/* Line 1806 of yacc.c  */
 #line 9664 "preproc.y"
     { 
  (yyval.str) = mm_strdup("day");
-}
+;}
     break;
 
   case 1592:
-
-/* Line 1806 of yacc.c  */
 #line 9668 "preproc.y"
     { 
  (yyval.str) = mm_strdup("hour");
-}
+;}
     break;
 
   case 1593:
-
-/* Line 1806 of yacc.c  */
 #line 9672 "preproc.y"
     { 
  (yyval.str) = mm_strdup("minute");
-}
+;}
     break;
 
   case 1594:
-
-/* Line 1806 of yacc.c  */
 #line 9676 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1595:
-
-/* Line 1806 of yacc.c  */
 #line 9680 "preproc.y"
     { 
  (yyval.str) = mm_strdup("year to month");
-}
+;}
     break;
 
   case 1596:
-
-/* Line 1806 of yacc.c  */
 #line 9684 "preproc.y"
     { 
  (yyval.str) = mm_strdup("day to hour");
-}
+;}
     break;
 
   case 1597:
-
-/* Line 1806 of yacc.c  */
 #line 9688 "preproc.y"
     { 
  (yyval.str) = mm_strdup("day to minute");
-}
+;}
     break;
 
   case 1598:
-
-/* Line 1806 of yacc.c  */
 #line 9692 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("day to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1599:
-
-/* Line 1806 of yacc.c  */
 #line 9696 "preproc.y"
     { 
  (yyval.str) = mm_strdup("hour to minute");
-}
+;}
     break;
 
   case 1600:
-
-/* Line 1806 of yacc.c  */
 #line 9700 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("hour to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1601:
-
-/* Line 1806 of yacc.c  */
 #line 9704 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("minute to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1602:
-
-/* Line 1806 of yacc.c  */
 #line 9708 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1603:
-
-/* Line 1806 of yacc.c  */
 #line 9715 "preproc.y"
     { 
  (yyval.str) = mm_strdup("second");
-}
+;}
     break;
 
   case 1604:
-
-/* Line 1806 of yacc.c  */
 #line 9719 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("second ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1605:
-
-/* Line 1806 of yacc.c  */
 #line 9727 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1606:
-
-/* Line 1806 of yacc.c  */
 #line 9731 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("::"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1607:
-
-/* Line 1806 of yacc.c  */
 #line 9735 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("collate"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1608:
-
-/* Line 1806 of yacc.c  */
 #line 9739 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("at time zone"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1609:
-
-/* Line 1806 of yacc.c  */
 #line 9743 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1610:
-
-/* Line 1806 of yacc.c  */
 #line 9747 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1611:
-
-/* Line 1806 of yacc.c  */
 #line 9751 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("+"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1612:
-
-/* Line 1806 of yacc.c  */
 #line 9755 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("-"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1613:
-
-/* Line 1806 of yacc.c  */
 #line 9759 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("*"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1614:
-
-/* Line 1806 of yacc.c  */
 #line 9763 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("/"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1615:
-
-/* Line 1806 of yacc.c  */
 #line 9767 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("%"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1616:
-
-/* Line 1806 of yacc.c  */
 #line 9771 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("^"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1617:
-
-/* Line 1806 of yacc.c  */
 #line 9775 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("<"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1618:
-
-/* Line 1806 of yacc.c  */
 #line 9779 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(">"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1619:
-
-/* Line 1806 of yacc.c  */
 #line 9783 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1620:
-
-/* Line 1806 of yacc.c  */
 #line 9787 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1621:
-
-/* Line 1806 of yacc.c  */
 #line 9791 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1622:
-
-/* Line 1806 of yacc.c  */
 #line 9795 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1623:
-
-/* Line 1806 of yacc.c  */
 #line 9799 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("and"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1624:
-
-/* Line 1806 of yacc.c  */
 #line 9803 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("or"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1625:
-
-/* Line 1806 of yacc.c  */
 #line 9807 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("not"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1626:
-
-/* Line 1806 of yacc.c  */
 #line 9811 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("like"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1627:
-
-/* Line 1806 of yacc.c  */
 #line 9815 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("like"),(yyvsp[(3) - (5)].str),mm_strdup("escape"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1628:
-
-/* Line 1806 of yacc.c  */
 #line 9819 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("not like"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1629:
-
-/* Line 1806 of yacc.c  */
 #line 9823 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("not like"),(yyvsp[(4) - (6)].str),mm_strdup("escape"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1630:
-
-/* Line 1806 of yacc.c  */
 #line 9827 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("ilike"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1631:
-
-/* Line 1806 of yacc.c  */
 #line 9831 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("ilike"),(yyvsp[(3) - (5)].str),mm_strdup("escape"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1632:
-
-/* Line 1806 of yacc.c  */
 #line 9835 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("not ilike"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1633:
-
-/* Line 1806 of yacc.c  */
 #line 9839 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("not ilike"),(yyvsp[(4) - (6)].str),mm_strdup("escape"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1634:
-
-/* Line 1806 of yacc.c  */
 #line 9843 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("similar to"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1635:
-
-/* Line 1806 of yacc.c  */
 #line 9847 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("similar to"),(yyvsp[(4) - (6)].str),mm_strdup("escape"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1636:
-
-/* Line 1806 of yacc.c  */
 #line 9851 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("not similar to"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1637:
-
-/* Line 1806 of yacc.c  */
 #line 9855 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (7)].str),mm_strdup("not similar to"),(yyvsp[(5) - (7)].str),mm_strdup("escape"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1638:
-
-/* Line 1806 of yacc.c  */
 #line 9859 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is null"));
-}
+;}
     break;
 
   case 1639:
-
-/* Line 1806 of yacc.c  */
 #line 9863 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("isnull"));
-}
+;}
     break;
 
   case 1640:
-
-/* Line 1806 of yacc.c  */
 #line 9867 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not null"));
-}
+;}
     break;
 
   case 1641:
-
-/* Line 1806 of yacc.c  */
 #line 9871 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("notnull"));
-}
+;}
     break;
 
   case 1642:
-
-/* Line 1806 of yacc.c  */
 #line 9875 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("overlaps"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1643:
-
-/* Line 1806 of yacc.c  */
 #line 9879 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is true"));
-}
+;}
     break;
 
   case 1644:
-
-/* Line 1806 of yacc.c  */
 #line 9883 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not true"));
-}
+;}
     break;
 
   case 1645:
-
-/* Line 1806 of yacc.c  */
 #line 9887 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is false"));
-}
+;}
     break;
 
   case 1646:
-
-/* Line 1806 of yacc.c  */
 #line 9891 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not false"));
-}
+;}
     break;
 
   case 1647:
-
-/* Line 1806 of yacc.c  */
 #line 9895 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is unknown"));
-}
+;}
     break;
 
   case 1648:
-
-/* Line 1806 of yacc.c  */
 #line 9899 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not unknown"));
-}
+;}
     break;
 
   case 1649:
-
-/* Line 1806 of yacc.c  */
 #line 9903 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("is distinct from"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1650:
-
-/* Line 1806 of yacc.c  */
 #line 9907 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (6)].str),mm_strdup("is not distinct from"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1651:
-
-/* Line 1806 of yacc.c  */
 #line 9911 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (6)].str),mm_strdup("is of ("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1652:
-
-/* Line 1806 of yacc.c  */
 #line 9915 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (7)].str),mm_strdup("is not of ("),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1653:
-
-/* Line 1806 of yacc.c  */
 #line 9919 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),mm_strdup("between"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("and"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1654:
-
-/* Line 1806 of yacc.c  */
 #line 9923 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),mm_strdup("not between"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("and"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1655:
-
-/* Line 1806 of yacc.c  */
 #line 9927 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("between symmetric"),(yyvsp[(4) - (6)].str),mm_strdup("and"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1656:
-
-/* Line 1806 of yacc.c  */
 #line 9931 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (7)].str),mm_strdup("not between symmetric"),(yyvsp[(5) - (7)].str),mm_strdup("and"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1657:
-
-/* Line 1806 of yacc.c  */
 #line 9935 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("in"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1658:
-
-/* Line 1806 of yacc.c  */
 #line 9939 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("not in"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1659:
-
-/* Line 1806 of yacc.c  */
 #line 9943 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1660:
-
-/* Line 1806 of yacc.c  */
 #line 9947 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1661:
-
-/* Line 1806 of yacc.c  */
 #line 9951 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("unique"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1662:
-
-/* Line 1806 of yacc.c  */
 #line 9956 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is document"));
-}
+;}
     break;
 
   case 1663:
-
-/* Line 1806 of yacc.c  */
 #line 9960 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not document"));
-}
+;}
     break;
 
   case 1664:
-
-/* Line 1806 of yacc.c  */
 #line 9968 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1665:
-
-/* Line 1806 of yacc.c  */
 #line 9972 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("::"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1666:
-
-/* Line 1806 of yacc.c  */
 #line 9976 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1667:
-
-/* Line 1806 of yacc.c  */
 #line 9980 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1668:
-
-/* Line 1806 of yacc.c  */
 #line 9984 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("+"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1669:
-
-/* Line 1806 of yacc.c  */
 #line 9988 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("-"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1670:
-
-/* Line 1806 of yacc.c  */
 #line 9992 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("*"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1671:
-
-/* Line 1806 of yacc.c  */
 #line 9996 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("/"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1672:
-
-/* Line 1806 of yacc.c  */
 #line 10000 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("%"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1673:
-
-/* Line 1806 of yacc.c  */
 #line 10004 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("^"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1674:
-
-/* Line 1806 of yacc.c  */
 #line 10008 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("<"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1675:
-
-/* Line 1806 of yacc.c  */
 #line 10012 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(">"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1676:
-
-/* Line 1806 of yacc.c  */
 #line 10016 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1677:
-
-/* Line 1806 of yacc.c  */
 #line 10020 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1678:
-
-/* Line 1806 of yacc.c  */
 #line 10024 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1679:
-
-/* Line 1806 of yacc.c  */
 #line 10028 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1680:
-
-/* Line 1806 of yacc.c  */
 #line 10032 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("is distinct from"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1681:
-
-/* Line 1806 of yacc.c  */
 #line 10036 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (6)].str),mm_strdup("is not distinct from"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1682:
-
-/* Line 1806 of yacc.c  */
 #line 10040 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (6)].str),mm_strdup("is of ("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1683:
-
-/* Line 1806 of yacc.c  */
 #line 10044 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (7)].str),mm_strdup("is not of ("),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1684:
-
-/* Line 1806 of yacc.c  */
 #line 10048 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is document"));
-}
+;}
     break;
 
   case 1685:
-
-/* Line 1806 of yacc.c  */
 #line 10052 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not document"));
-}
+;}
     break;
 
   case 1686:
-
-/* Line 1806 of yacc.c  */
 #line 10060 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1687:
-
-/* Line 1806 of yacc.c  */
 #line 10064 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1688:
-
-/* Line 1806 of yacc.c  */
 #line 10068 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1689:
-
-/* Line 1806 of yacc.c  */
 #line 10072 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[(2) - (4)].str),mm_strdup(")"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1690:
-
-/* Line 1806 of yacc.c  */
 #line 10076 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1691:
-
-/* Line 1806 of yacc.c  */
 #line 10080 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1692:
-
-/* Line 1806 of yacc.c  */
 #line 10084 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1693:
-
-/* Line 1806 of yacc.c  */
 #line 10088 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1694:
-
-/* Line 1806 of yacc.c  */
 #line 10092 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("exists"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1695:
-
-/* Line 1806 of yacc.c  */
 #line 10096 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("array"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1696:
-
-/* Line 1806 of yacc.c  */
 #line 10100 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("array"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1697:
-
-/* Line 1806 of yacc.c  */
 #line 10104 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1698:
-
-/* Line 1806 of yacc.c  */
 #line 10112 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("( )"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1699:
-
-/* Line 1806 of yacc.c  */
 #line 10116 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1700:
-
-/* Line 1806 of yacc.c  */
 #line 10120 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("( variadic"),(yyvsp[(4) - (6)].str),mm_strdup(")"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1701:
-
-/* Line 1806 of yacc.c  */
 #line 10124 "preproc.y"
     { 
  (yyval.str) = cat_str(7,(yyvsp[(1) - (8)].str),mm_strdup("("),(yyvsp[(3) - (8)].str),mm_strdup(", variadic"),(yyvsp[(6) - (8)].str),mm_strdup(")"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1702:
-
-/* Line 1806 of yacc.c  */
 #line 10128 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),mm_strdup("("),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup(")"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1703:
-
-/* Line 1806 of yacc.c  */
 #line 10132 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),mm_strdup("( all"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup(")"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1704:
-
-/* Line 1806 of yacc.c  */
 #line 10136 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),mm_strdup("( distinct"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup(")"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1705:
-
-/* Line 1806 of yacc.c  */
 #line 10140 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("( * )"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1706:
-
-/* Line 1806 of yacc.c  */
 #line 10144 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("collation for ("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1707:
-
-/* Line 1806 of yacc.c  */
 #line 10148 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_date");
-}
+;}
     break;
 
   case 1708:
-
-/* Line 1806 of yacc.c  */
 #line 10152 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_time");
-}
+;}
     break;
 
   case 1709:
-
-/* Line 1806 of yacc.c  */
 #line 10156 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("current_time ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1710:
-
-/* Line 1806 of yacc.c  */
 #line 10160 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_timestamp");
-}
+;}
     break;
 
   case 1711:
-
-/* Line 1806 of yacc.c  */
 #line 10164 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("current_timestamp ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1712:
-
-/* Line 1806 of yacc.c  */
 #line 10168 "preproc.y"
     { 
  (yyval.str) = mm_strdup("localtime");
-}
+;}
     break;
 
   case 1713:
-
-/* Line 1806 of yacc.c  */
 #line 10172 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("localtime ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1714:
-
-/* Line 1806 of yacc.c  */
 #line 10176 "preproc.y"
     { 
  (yyval.str) = mm_strdup("localtimestamp");
-}
+;}
     break;
 
   case 1715:
-
-/* Line 1806 of yacc.c  */
 #line 10180 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("localtimestamp ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1716:
-
-/* Line 1806 of yacc.c  */
 #line 10184 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_role");
-}
+;}
     break;
 
   case 1717:
-
-/* Line 1806 of yacc.c  */
 #line 10188 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_user");
-}
+;}
     break;
 
   case 1718:
-
-/* Line 1806 of yacc.c  */
 #line 10192 "preproc.y"
     { 
  (yyval.str) = mm_strdup("session_user");
-}
+;}
     break;
 
   case 1719:
-
-/* Line 1806 of yacc.c  */
 #line 10196 "preproc.y"
     { 
  (yyval.str) = mm_strdup("user");
-}
+;}
     break;
 
   case 1720:
-
-/* Line 1806 of yacc.c  */
 #line 10200 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_catalog");
-}
+;}
     break;
 
   case 1721:
-
-/* Line 1806 of yacc.c  */
 #line 10204 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_schema");
-}
+;}
     break;
 
   case 1722:
-
-/* Line 1806 of yacc.c  */
 #line 10208 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("cast ("),(yyvsp[(3) - (6)].str),mm_strdup("as"),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1723:
-
-/* Line 1806 of yacc.c  */
 #line 10212 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("extract ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1724:
-
-/* Line 1806 of yacc.c  */
 #line 10216 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("overlay ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1725:
-
-/* Line 1806 of yacc.c  */
 #line 10220 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("position ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1726:
-
-/* Line 1806 of yacc.c  */
 #line 10224 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("substring ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1727:
-
-/* Line 1806 of yacc.c  */
 #line 10228 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("treat ("),(yyvsp[(3) - (6)].str),mm_strdup("as"),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1728:
-
-/* Line 1806 of yacc.c  */
 #line 10232 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("trim ( both"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1729:
-
-/* Line 1806 of yacc.c  */
 #line 10236 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("trim ( leading"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1730:
-
-/* Line 1806 of yacc.c  */
 #line 10240 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("trim ( trailing"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1731:
-
-/* Line 1806 of yacc.c  */
 #line 10244 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("trim ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1732:
-
-/* Line 1806 of yacc.c  */
 #line 10248 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("nullif ("),(yyvsp[(3) - (6)].str),mm_strdup(","),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1733:
-
-/* Line 1806 of yacc.c  */
 #line 10252 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("coalesce ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1734:
-
-/* Line 1806 of yacc.c  */
 #line 10256 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("greatest ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1735:
-
-/* Line 1806 of yacc.c  */
 #line 10260 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("least ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1736:
-
-/* Line 1806 of yacc.c  */
 #line 10264 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlconcat ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1737:
-
-/* Line 1806 of yacc.c  */
 #line 10268 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlelement ( name"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1738:
-
-/* Line 1806 of yacc.c  */
 #line 10272 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("xmlelement ( name"),(yyvsp[(4) - (7)].str),mm_strdup(","),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1739:
-
-/* Line 1806 of yacc.c  */
 #line 10276 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("xmlelement ( name"),(yyvsp[(4) - (7)].str),mm_strdup(","),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1740:
-
-/* Line 1806 of yacc.c  */
 #line 10280 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("xmlelement ( name"),(yyvsp[(4) - (9)].str),mm_strdup(","),(yyvsp[(6) - (9)].str),mm_strdup(","),(yyvsp[(8) - (9)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1741:
-
-/* Line 1806 of yacc.c  */
 #line 10284 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("xmlexists ("),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1742:
-
-/* Line 1806 of yacc.c  */
 #line 10288 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlforest ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1743:
-
-/* Line 1806 of yacc.c  */
 #line 10292 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("xmlparse ("),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1744:
-
-/* Line 1806 of yacc.c  */
 #line 10296 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlpi ( name"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1745:
-
-/* Line 1806 of yacc.c  */
 #line 10300 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("xmlpi ( name"),(yyvsp[(4) - (7)].str),mm_strdup(","),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1746:
-
-/* Line 1806 of yacc.c  */
 #line 10304 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("xmlroot ("),(yyvsp[(3) - (7)].str),mm_strdup(","),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1747:
-
-/* Line 1806 of yacc.c  */
 #line 10308 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("xmlserialize ("),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("as"),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1748:
-
-/* Line 1806 of yacc.c  */
 #line 10316 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("version"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1749:
-
-/* Line 1806 of yacc.c  */
 #line 10320 "preproc.y"
     { 
  (yyval.str) = mm_strdup("version no value");
-}
+;}
     break;
 
   case 1750:
-
-/* Line 1806 of yacc.c  */
 #line 10328 "preproc.y"
     { 
  (yyval.str) = mm_strdup(", standalone yes");
-}
+;}
     break;
 
   case 1751:
-
-/* Line 1806 of yacc.c  */
 #line 10332 "preproc.y"
     { 
  (yyval.str) = mm_strdup(", standalone no");
-}
+;}
     break;
 
   case 1752:
-
-/* Line 1806 of yacc.c  */
 #line 10336 "preproc.y"
     { 
  (yyval.str) = mm_strdup(", standalone no value");
-}
+;}
     break;
 
   case 1753:
-
-/* Line 1806 of yacc.c  */
 #line 10340 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1754:
-
-/* Line 1806 of yacc.c  */
 #line 10347 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlattributes ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1755:
-
-/* Line 1806 of yacc.c  */
 #line 10355 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1756:
-
-/* Line 1806 of yacc.c  */
 #line 10359 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1757:
-
-/* Line 1806 of yacc.c  */
 #line 10367 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1758:
-
-/* Line 1806 of yacc.c  */
 #line 10371 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1759:
-
-/* Line 1806 of yacc.c  */
 #line 10379 "preproc.y"
     { 
  (yyval.str) = mm_strdup("document");
-}
+;}
     break;
 
   case 1760:
-
-/* Line 1806 of yacc.c  */
 #line 10383 "preproc.y"
     { 
  (yyval.str) = mm_strdup("content");
-}
+;}
     break;
 
   case 1761:
-
-/* Line 1806 of yacc.c  */
 #line 10391 "preproc.y"
     { 
  (yyval.str) = mm_strdup("preserve whitespace");
-}
+;}
     break;
 
   case 1762:
-
-/* Line 1806 of yacc.c  */
 #line 10395 "preproc.y"
     { 
  (yyval.str) = mm_strdup("strip whitespace");
-}
+;}
     break;
 
   case 1763:
-
-/* Line 1806 of yacc.c  */
 #line 10399 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1764:
-
-/* Line 1806 of yacc.c  */
 #line 10406 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("passing"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1765:
-
-/* Line 1806 of yacc.c  */
 #line 10410 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("passing"),(yyvsp[(2) - (4)].str),mm_strdup("by ref"));
-}
+;}
     break;
 
   case 1766:
-
-/* Line 1806 of yacc.c  */
 #line 10414 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("passing by ref"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1767:
-
-/* Line 1806 of yacc.c  */
 #line 10418 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("passing by ref"),(yyvsp[(4) - (6)].str),mm_strdup("by ref"));
-}
+;}
     break;
 
   case 1768:
-
-/* Line 1806 of yacc.c  */
 #line 10426 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("window"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1769:
-
-/* Line 1806 of yacc.c  */
 #line 10430 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1770:
-
-/* Line 1806 of yacc.c  */
 #line 10437 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1771:
-
-/* Line 1806 of yacc.c  */
 #line 10441 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1772:
-
-/* Line 1806 of yacc.c  */
 #line 10449 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1773:
-
-/* Line 1806 of yacc.c  */
 #line 10457 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("over"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1774:
-
-/* Line 1806 of yacc.c  */
 #line 10461 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("over"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1775:
-
-/* Line 1806 of yacc.c  */
 #line 10465 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1776:
-
-/* Line 1806 of yacc.c  */
 #line 10472 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("("),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1777:
-
-/* Line 1806 of yacc.c  */
 #line 10480 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1778:
-
-/* Line 1806 of yacc.c  */
 #line 10484 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1779:
-
-/* Line 1806 of yacc.c  */
 #line 10491 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("partition by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1780:
-
-/* Line 1806 of yacc.c  */
 #line 10495 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1781:
-
-/* Line 1806 of yacc.c  */
 #line 10502 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("range"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1782:
-
-/* Line 1806 of yacc.c  */
 #line 10507 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("rows"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1783:
-
-/* Line 1806 of yacc.c  */
 #line 10511 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1784:
-
-/* Line 1806 of yacc.c  */
 #line 10518 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1785:
-
-/* Line 1806 of yacc.c  */
 #line 10522 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("between"),(yyvsp[(2) - (4)].str),mm_strdup("and"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1786:
-
-/* Line 1806 of yacc.c  */
 #line 10530 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unbounded preceding");
-}
+;}
     break;
 
   case 1787:
-
-/* Line 1806 of yacc.c  */
 #line 10534 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unbounded following");
-}
+;}
     break;
 
   case 1788:
-
-/* Line 1806 of yacc.c  */
 #line 10538 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current row");
-}
+;}
     break;
 
   case 1789:
-
-/* Line 1806 of yacc.c  */
 #line 10542 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("preceding"));
-}
+;}
     break;
 
   case 1790:
-
-/* Line 1806 of yacc.c  */
 #line 10546 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("following"));
-}
+;}
     break;
 
   case 1791:
-
-/* Line 1806 of yacc.c  */
 #line 10554 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("row ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1792:
-
-/* Line 1806 of yacc.c  */
 #line 10558 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row ( )");
-}
+;}
     break;
 
   case 1793:
-
-/* Line 1806 of yacc.c  */
 #line 10562 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("("),(yyvsp[(2) - (5)].str),mm_strdup(","),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1794:
-
-/* Line 1806 of yacc.c  */
 #line 10570 "preproc.y"
     { 
  (yyval.str) = mm_strdup("any");
-}
+;}
     break;
 
   case 1795:
-
-/* Line 1806 of yacc.c  */
 #line 10574 "preproc.y"
     { 
  (yyval.str) = mm_strdup("some");
-}
+;}
     break;
 
   case 1796:
-
-/* Line 1806 of yacc.c  */
 #line 10578 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 1797:
-
-/* Line 1806 of yacc.c  */
 #line 10586 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1798:
-
-/* Line 1806 of yacc.c  */
 #line 10590 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1799:
-
-/* Line 1806 of yacc.c  */
 #line 10598 "preproc.y"
     { 
  (yyval.str) = mm_strdup("+");
-}
+;}
     break;
 
   case 1800:
-
-/* Line 1806 of yacc.c  */
 #line 10602 "preproc.y"
     { 
  (yyval.str) = mm_strdup("-");
-}
+;}
     break;
 
   case 1801:
-
-/* Line 1806 of yacc.c  */
 #line 10606 "preproc.y"
     { 
  (yyval.str) = mm_strdup("*");
-}
+;}
     break;
 
   case 1802:
-
-/* Line 1806 of yacc.c  */
 #line 10610 "preproc.y"
     { 
  (yyval.str) = mm_strdup("/");
-}
+;}
     break;
 
   case 1803:
-
-/* Line 1806 of yacc.c  */
 #line 10614 "preproc.y"
     { 
  (yyval.str) = mm_strdup("%");
-}
+;}
     break;
 
   case 1804:
-
-/* Line 1806 of yacc.c  */
 #line 10618 "preproc.y"
     { 
  (yyval.str) = mm_strdup("^");
-}
+;}
     break;
 
   case 1805:
-
-/* Line 1806 of yacc.c  */
 #line 10622 "preproc.y"
     { 
  (yyval.str) = mm_strdup("<");
-}
+;}
     break;
 
   case 1806:
-
-/* Line 1806 of yacc.c  */
 #line 10626 "preproc.y"
     { 
  (yyval.str) = mm_strdup(">");
-}
+;}
     break;
 
   case 1807:
-
-/* Line 1806 of yacc.c  */
 #line 10630 "preproc.y"
     { 
  (yyval.str) = mm_strdup("=");
-}
+;}
     break;
 
   case 1808:
-
-/* Line 1806 of yacc.c  */
 #line 10638 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1809:
-
-/* Line 1806 of yacc.c  */
 #line 10642 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("operator ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1810:
-
-/* Line 1806 of yacc.c  */
 #line 10650 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1811:
-
-/* Line 1806 of yacc.c  */
 #line 10654 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("operator ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1812:
-
-/* Line 1806 of yacc.c  */
 #line 10662 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1813:
-
-/* Line 1806 of yacc.c  */
 #line 10666 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("operator ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1814:
-
-/* Line 1806 of yacc.c  */
 #line 10670 "preproc.y"
     { 
  (yyval.str) = mm_strdup("like");
-}
+;}
     break;
 
   case 1815:
-
-/* Line 1806 of yacc.c  */
 #line 10674 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not like");
-}
+;}
     break;
 
   case 1816:
-
-/* Line 1806 of yacc.c  */
 #line 10678 "preproc.y"
     { 
  (yyval.str) = mm_strdup("ilike");
-}
+;}
     break;
 
   case 1817:
-
-/* Line 1806 of yacc.c  */
 #line 10682 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not ilike");
-}
+;}
     break;
 
   case 1818:
-
-/* Line 1806 of yacc.c  */
 #line 10690 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1819:
-
-/* Line 1806 of yacc.c  */
 #line 10694 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1820:
-
-/* Line 1806 of yacc.c  */
 #line 10702 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1821:
-
-/* Line 1806 of yacc.c  */
 #line 10706 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1822:
-
-/* Line 1806 of yacc.c  */
 #line 10714 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1823:
-
-/* Line 1806 of yacc.c  */
 #line 10718 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(":="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1824:
-
-/* Line 1806 of yacc.c  */
 #line 10726 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1825:
-
-/* Line 1806 of yacc.c  */
 #line 10730 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1826:
-
-/* Line 1806 of yacc.c  */
 #line 10738 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("["),(yyvsp[(2) - (3)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1827:
-
-/* Line 1806 of yacc.c  */
 #line 10742 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("["),(yyvsp[(2) - (3)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1828:
-
-/* Line 1806 of yacc.c  */
 #line 10746 "preproc.y"
     { 
  (yyval.str) = mm_strdup("[ ]");
-}
+;}
     break;
 
   case 1829:
-
-/* Line 1806 of yacc.c  */
 #line 10754 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1830:
-
-/* Line 1806 of yacc.c  */
 #line 10758 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1831:
-
-/* Line 1806 of yacc.c  */
 #line 10766 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("from"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1832:
-
-/* Line 1806 of yacc.c  */
 #line 10770 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1833:
-
-/* Line 1806 of yacc.c  */
 #line 10777 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1834:
-
-/* Line 1806 of yacc.c  */
 #line 10781 "preproc.y"
     { 
  (yyval.str) = mm_strdup("year");
-}
+;}
     break;
 
   case 1835:
-
-/* Line 1806 of yacc.c  */
 #line 10785 "preproc.y"
     { 
  (yyval.str) = mm_strdup("month");
-}
+;}
     break;
 
   case 1836:
-
-/* Line 1806 of yacc.c  */
 #line 10789 "preproc.y"
     { 
  (yyval.str) = mm_strdup("day");
-}
+;}
     break;
 
   case 1837:
-
-/* Line 1806 of yacc.c  */
 #line 10793 "preproc.y"
     { 
  (yyval.str) = mm_strdup("hour");
-}
+;}
     break;
 
   case 1838:
-
-/* Line 1806 of yacc.c  */
 #line 10797 "preproc.y"
     { 
  (yyval.str) = mm_strdup("minute");
-}
+;}
     break;
 
   case 1839:
-
-/* Line 1806 of yacc.c  */
 #line 10801 "preproc.y"
     { 
  (yyval.str) = mm_strdup("second");
-}
+;}
     break;
 
   case 1840:
-
-/* Line 1806 of yacc.c  */
 #line 10805 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1841:
-
-/* Line 1806 of yacc.c  */
 #line 10813 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1842:
-
-/* Line 1806 of yacc.c  */
 #line 10817 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1843:
-
-/* Line 1806 of yacc.c  */
 #line 10825 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("placing"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1844:
-
-/* Line 1806 of yacc.c  */
 #line 10833 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("in"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1845:
-
-/* Line 1806 of yacc.c  */
 #line 10837 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1846:
-
-/* Line 1806 of yacc.c  */
 #line 10844 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1847:
-
-/* Line 1806 of yacc.c  */
 #line 10848 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1848:
-
-/* Line 1806 of yacc.c  */
 #line 10852 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1849:
-
-/* Line 1806 of yacc.c  */
 #line 10856 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1850:
-
-/* Line 1806 of yacc.c  */
 #line 10860 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1851:
-
-/* Line 1806 of yacc.c  */
 #line 10864 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1852:
-
-/* Line 1806 of yacc.c  */
 #line 10871 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1853:
-
-/* Line 1806 of yacc.c  */
 #line 10879 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1854:
-
-/* Line 1806 of yacc.c  */
 #line 10887 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("from"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1855:
-
-/* Line 1806 of yacc.c  */
 #line 10891 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1856:
-
-/* Line 1806 of yacc.c  */
 #line 10895 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1857:
-
-/* Line 1806 of yacc.c  */
 #line 10903 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1858:
-
-/* Line 1806 of yacc.c  */
 #line 10907 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1859:
-
-/* Line 1806 of yacc.c  */
 #line 10915 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("case"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),mm_strdup("end"));
-}
+;}
     break;
 
   case 1860:
-
-/* Line 1806 of yacc.c  */
 #line 10923 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1861:
-
-/* Line 1806 of yacc.c  */
 #line 10927 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1862:
-
-/* Line 1806 of yacc.c  */
 #line 10935 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("when"),(yyvsp[(2) - (4)].str),mm_strdup("then"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1863:
-
-/* Line 1806 of yacc.c  */
 #line 10943 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("else"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1864:
-
-/* Line 1806 of yacc.c  */
 #line 10947 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1865:
-
-/* Line 1806 of yacc.c  */
 #line 10954 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1866:
-
-/* Line 1806 of yacc.c  */
 #line 10958 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1867:
-
-/* Line 1806 of yacc.c  */
 #line 10965 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1868:
-
-/* Line 1806 of yacc.c  */
 #line 10969 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1869:
-
-/* Line 1806 of yacc.c  */
 #line 10977 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("."),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1870:
-
-/* Line 1806 of yacc.c  */
 #line 10981 "preproc.y"
     { 
  (yyval.str) = mm_strdup(". *");
-}
+;}
     break;
 
   case 1871:
-
-/* Line 1806 of yacc.c  */
 #line 10985 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("["),(yyvsp[(2) - (3)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1872:
-
-/* Line 1806 of yacc.c  */
 #line 10989 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("["),(yyvsp[(2) - (5)].str),mm_strdup(":"),(yyvsp[(4) - (5)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1873:
-
-/* Line 1806 of yacc.c  */
 #line 10997 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1874:
-
-/* Line 1806 of yacc.c  */
 #line 11001 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1875:
-
-/* Line 1806 of yacc.c  */
 #line 11009 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1876:
-
-/* Line 1806 of yacc.c  */
 #line 11012 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1877:
-
-/* Line 1806 of yacc.c  */
 #line 11020 "preproc.y"
     { 
  (yyval.str) = mm_strdup("asymmetric");
-}
+;}
     break;
 
   case 1878:
-
-/* Line 1806 of yacc.c  */
 #line 11024 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1879:
-
-/* Line 1806 of yacc.c  */
 #line 11031 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1880:
-
-/* Line 1806 of yacc.c  */
 #line 11035 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 1881:
-
-/* Line 1806 of yacc.c  */
 #line 11043 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1882:
-
-/* Line 1806 of yacc.c  */
 #line 11047 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1883:
-
-/* Line 1806 of yacc.c  */
 #line 11055 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1884:
-
-/* Line 1806 of yacc.c  */
 #line 11063 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1885:
-
-/* Line 1806 of yacc.c  */
 #line 11067 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1886:
-
-/* Line 1806 of yacc.c  */
 #line 11075 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1887:
-
-/* Line 1806 of yacc.c  */
 #line 11079 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1888:
-
-/* Line 1806 of yacc.c  */
 #line 11083 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1889:
-
-/* Line 1806 of yacc.c  */
 #line 11087 "preproc.y"
     { 
  (yyval.str) = mm_strdup("*");
-}
+;}
     break;
 
   case 1890:
-
-/* Line 1806 of yacc.c  */
 #line 11095 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1891:
-
-/* Line 1806 of yacc.c  */
 #line 11099 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1892:
-
-/* Line 1806 of yacc.c  */
 #line 11107 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1893:
-
-/* Line 1806 of yacc.c  */
 #line 11111 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1894:
-
-/* Line 1806 of yacc.c  */
 #line 11119 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1895:
-
-/* Line 1806 of yacc.c  */
 #line 11123 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1896:
-
-/* Line 1806 of yacc.c  */
 #line 11131 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1897:
-
-/* Line 1806 of yacc.c  */
 #line 11139 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1898:
-
-/* Line 1806 of yacc.c  */
 #line 11147 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1899:
-
-/* Line 1806 of yacc.c  */
 #line 11155 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1900:
-
-/* Line 1806 of yacc.c  */
 #line 11163 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1901:
-
-/* Line 1806 of yacc.c  */
 #line 11171 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1902:
-
-/* Line 1806 of yacc.c  */
 #line 11179 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1903:
-
-/* Line 1806 of yacc.c  */
 #line 11183 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1904:
-
-/* Line 1806 of yacc.c  */
 #line 11191 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1905:
-
-/* Line 1806 of yacc.c  */
 #line 11195 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1906:
-
-/* Line 1806 of yacc.c  */
 #line 11199 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1907:
-
-/* Line 1806 of yacc.c  */
 #line 11203 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1908:
-
-/* Line 1806 of yacc.c  */
 #line 11207 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xconst");
-}
+;}
     break;
 
   case 1909:
-
-/* Line 1806 of yacc.c  */
 #line 11211 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1910:
-
-/* Line 1806 of yacc.c  */
 #line 11215 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1911:
-
-/* Line 1806 of yacc.c  */
 #line 11219 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1912:
-
-/* Line 1806 of yacc.c  */
 #line 11223 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1913:
-
-/* Line 1806 of yacc.c  */
 #line 11227 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),mm_strdup("("),(yyvsp[(3) - (6)].str),mm_strdup(")"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1914:
-
-/* Line 1806 of yacc.c  */
 #line 11231 "preproc.y"
     { 
  (yyval.str) = mm_strdup("true");
-}
+;}
     break;
 
   case 1915:
-
-/* Line 1806 of yacc.c  */
 #line 11235 "preproc.y"
     { 
  (yyval.str) = mm_strdup("false");
-}
+;}
     break;
 
   case 1916:
-
-/* Line 1806 of yacc.c  */
 #line 11239 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 1917:
-
-/* Line 1806 of yacc.c  */
 #line 11242 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1918:
-
-/* Line 1806 of yacc.c  */
 #line 11243 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1919:
-
-/* Line 1806 of yacc.c  */
 #line 11249 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 1920:
-
-/* Line 1806 of yacc.c  */
 #line 11255 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1921:
-
-/* Line 1806 of yacc.c  */
 #line 11263 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1922:
-
-/* Line 1806 of yacc.c  */
 #line 11267 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1923:
-
-/* Line 1806 of yacc.c  */
 #line 11275 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1924:
-
-/* Line 1806 of yacc.c  */
 #line 11278 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1925:
-
-/* Line 1806 of yacc.c  */
 #line 11280 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1926:
-
-/* Line 1806 of yacc.c  */
 #line 11284 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1927:
-
-/* Line 1806 of yacc.c  */
 #line 11292 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1928:
-
-/* Line 1806 of yacc.c  */
 #line 11296 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1929:
-
-/* Line 1806 of yacc.c  */
 #line 11300 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1930:
-
-/* Line 1806 of yacc.c  */
 #line 11304 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1931:
-
-/* Line 1806 of yacc.c  */
 #line 11312 "preproc.y"
     { 
  (yyval.str) = mm_strdup("abort");
-}
+;}
     break;
 
   case 1932:
-
-/* Line 1806 of yacc.c  */
 #line 11316 "preproc.y"
     { 
  (yyval.str) = mm_strdup("absolute");
-}
+;}
     break;
 
   case 1933:
-
-/* Line 1806 of yacc.c  */
 #line 11320 "preproc.y"
     { 
  (yyval.str) = mm_strdup("access");
-}
+;}
     break;
 
   case 1934:
-
-/* Line 1806 of yacc.c  */
 #line 11324 "preproc.y"
     { 
  (yyval.str) = mm_strdup("action");
-}
+;}
     break;
 
   case 1935:
-
-/* Line 1806 of yacc.c  */
 #line 11328 "preproc.y"
     { 
  (yyval.str) = mm_strdup("add");
-}
+;}
     break;
 
   case 1936:
-
-/* Line 1806 of yacc.c  */
 #line 11332 "preproc.y"
     { 
  (yyval.str) = mm_strdup("admin");
-}
+;}
     break;
 
   case 1937:
-
-/* Line 1806 of yacc.c  */
 #line 11336 "preproc.y"
     { 
  (yyval.str) = mm_strdup("after");
-}
+;}
     break;
 
   case 1938:
-
-/* Line 1806 of yacc.c  */
 #line 11340 "preproc.y"
     { 
  (yyval.str) = mm_strdup("aggregate");
-}
+;}
     break;
 
   case 1939:
-
-/* Line 1806 of yacc.c  */
 #line 11344 "preproc.y"
     { 
  (yyval.str) = mm_strdup("also");
-}
+;}
     break;
 
   case 1940:
-
-/* Line 1806 of yacc.c  */
 #line 11348 "preproc.y"
     { 
  (yyval.str) = mm_strdup("alter");
-}
+;}
     break;
 
   case 1941:
-
-/* Line 1806 of yacc.c  */
 #line 11352 "preproc.y"
     { 
  (yyval.str) = mm_strdup("always");
-}
+;}
     break;
 
   case 1942:
-
-/* Line 1806 of yacc.c  */
 #line 11356 "preproc.y"
     { 
  (yyval.str) = mm_strdup("assertion");
-}
+;}
     break;
 
   case 1943:
-
-/* Line 1806 of yacc.c  */
 #line 11360 "preproc.y"
     { 
  (yyval.str) = mm_strdup("assignment");
-}
+;}
     break;
 
   case 1944:
-
-/* Line 1806 of yacc.c  */
 #line 11364 "preproc.y"
     { 
  (yyval.str) = mm_strdup("at");
-}
+;}
     break;
 
   case 1945:
-
-/* Line 1806 of yacc.c  */
 #line 11368 "preproc.y"
     { 
  (yyval.str) = mm_strdup("attribute");
-}
+;}
     break;
 
   case 1946:
-
-/* Line 1806 of yacc.c  */
 #line 11372 "preproc.y"
     { 
  (yyval.str) = mm_strdup("backward");
-}
+;}
     break;
 
   case 1947:
-
-/* Line 1806 of yacc.c  */
 #line 11376 "preproc.y"
     { 
  (yyval.str) = mm_strdup("before");
-}
+;}
     break;
 
   case 1948:
-
-/* Line 1806 of yacc.c  */
 #line 11380 "preproc.y"
     { 
  (yyval.str) = mm_strdup("begin");
-}
+;}
     break;
 
   case 1949:
-
-/* Line 1806 of yacc.c  */
 #line 11384 "preproc.y"
     { 
  (yyval.str) = mm_strdup("by");
-}
+;}
     break;
 
   case 1950:
-
-/* Line 1806 of yacc.c  */
 #line 11388 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cache");
-}
+;}
     break;
 
   case 1951:
-
-/* Line 1806 of yacc.c  */
 #line 11392 "preproc.y"
     { 
  (yyval.str) = mm_strdup("called");
-}
+;}
     break;
 
   case 1952:
-
-/* Line 1806 of yacc.c  */
 #line 11396 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cascade");
-}
+;}
     break;
 
   case 1953:
-
-/* Line 1806 of yacc.c  */
 #line 11400 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cascaded");
-}
+;}
     break;
 
   case 1954:
-
-/* Line 1806 of yacc.c  */
 #line 11404 "preproc.y"
     { 
  (yyval.str) = mm_strdup("catalog");
-}
+;}
     break;
 
   case 1955:
-
-/* Line 1806 of yacc.c  */
 #line 11408 "preproc.y"
     { 
  (yyval.str) = mm_strdup("chain");
-}
+;}
     break;
 
   case 1956:
-
-/* Line 1806 of yacc.c  */
 #line 11412 "preproc.y"
     { 
  (yyval.str) = mm_strdup("characteristics");
-}
+;}
     break;
 
   case 1957:
-
-/* Line 1806 of yacc.c  */
 #line 11416 "preproc.y"
     { 
  (yyval.str) = mm_strdup("checkpoint");
-}
+;}
     break;
 
   case 1958:
-
-/* Line 1806 of yacc.c  */
 #line 11420 "preproc.y"
     { 
  (yyval.str) = mm_strdup("class");
-}
+;}
     break;
 
   case 1959:
-
-/* Line 1806 of yacc.c  */
 #line 11424 "preproc.y"
     { 
  (yyval.str) = mm_strdup("close");
-}
+;}
     break;
 
   case 1960:
-
-/* Line 1806 of yacc.c  */
 #line 11428 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cluster");
-}
+;}
     break;
 
   case 1961:
-
-/* Line 1806 of yacc.c  */
 #line 11432 "preproc.y"
     { 
  (yyval.str) = mm_strdup("comment");
-}
+;}
     break;
 
   case 1962:
-
-/* Line 1806 of yacc.c  */
 #line 11436 "preproc.y"
     { 
  (yyval.str) = mm_strdup("comments");
-}
+;}
     break;
 
   case 1963:
-
-/* Line 1806 of yacc.c  */
 #line 11440 "preproc.y"
     { 
  (yyval.str) = mm_strdup("commit");
-}
+;}
     break;
 
   case 1964:
-
-/* Line 1806 of yacc.c  */
 #line 11444 "preproc.y"
     { 
  (yyval.str) = mm_strdup("committed");
-}
+;}
     break;
 
   case 1965:
-
-/* Line 1806 of yacc.c  */
 #line 11448 "preproc.y"
     { 
  (yyval.str) = mm_strdup("configuration");
-}
+;}
     break;
 
   case 1966:
-
-/* Line 1806 of yacc.c  */
 #line 11452 "preproc.y"
     { 
  (yyval.str) = mm_strdup("constraints");
-}
+;}
     break;
 
   case 1967:
-
-/* Line 1806 of yacc.c  */
 #line 11456 "preproc.y"
     { 
  (yyval.str) = mm_strdup("content");
-}
+;}
     break;
 
   case 1968:
-
-/* Line 1806 of yacc.c  */
 #line 11460 "preproc.y"
     { 
  (yyval.str) = mm_strdup("continue");
-}
+;}
     break;
 
   case 1969:
-
-/* Line 1806 of yacc.c  */
 #line 11464 "preproc.y"
     { 
  (yyval.str) = mm_strdup("conversion");
-}
+;}
     break;
 
   case 1970:
-
-/* Line 1806 of yacc.c  */
 #line 11468 "preproc.y"
     { 
  (yyval.str) = mm_strdup("copy");
-}
+;}
     break;
 
   case 1971:
-
-/* Line 1806 of yacc.c  */
 #line 11472 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cost");
-}
+;}
     break;
 
   case 1972:
-
-/* Line 1806 of yacc.c  */
 #line 11476 "preproc.y"
     { 
  (yyval.str) = mm_strdup("csv");
-}
+;}
     break;
 
   case 1973:
-
-/* Line 1806 of yacc.c  */
 #line 11480 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cursor");
-}
+;}
     break;
 
   case 1974:
-
-/* Line 1806 of yacc.c  */
 #line 11484 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cycle");
-}
+;}
     break;
 
   case 1975:
-
-/* Line 1806 of yacc.c  */
 #line 11488 "preproc.y"
     { 
  (yyval.str) = mm_strdup("data");
-}
+;}
     break;
 
   case 1976:
-
-/* Line 1806 of yacc.c  */
 #line 11492 "preproc.y"
     { 
  (yyval.str) = mm_strdup("database");
-}
+;}
     break;
 
   case 1977:
-
-/* Line 1806 of yacc.c  */
 #line 11496 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deallocate");
-}
+;}
     break;
 
   case 1978:
-
-/* Line 1806 of yacc.c  */
 #line 11500 "preproc.y"
     { 
  (yyval.str) = mm_strdup("declare");
-}
+;}
     break;
 
   case 1979:
-
-/* Line 1806 of yacc.c  */
 #line 11504 "preproc.y"
     { 
  (yyval.str) = mm_strdup("defaults");
-}
+;}
     break;
 
   case 1980:
-
-/* Line 1806 of yacc.c  */
 #line 11508 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferred");
-}
+;}
     break;
 
   case 1981:
-
-/* Line 1806 of yacc.c  */
 #line 11512 "preproc.y"
     { 
  (yyval.str) = mm_strdup("definer");
-}
+;}
     break;
 
   case 1982:
-
-/* Line 1806 of yacc.c  */
 #line 11516 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delete");
-}
+;}
     break;
 
   case 1983:
-
-/* Line 1806 of yacc.c  */
 #line 11520 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delimiter");
-}
+;}
     break;
 
   case 1984:
-
-/* Line 1806 of yacc.c  */
 #line 11524 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delimiters");
-}
+;}
     break;
 
   case 1985:
-
-/* Line 1806 of yacc.c  */
 #line 11528 "preproc.y"
     { 
  (yyval.str) = mm_strdup("dictionary");
-}
+;}
     break;
 
   case 1986:
-
-/* Line 1806 of yacc.c  */
 #line 11532 "preproc.y"
     { 
  (yyval.str) = mm_strdup("disable");
-}
+;}
     break;
 
   case 1987:
-
-/* Line 1806 of yacc.c  */
 #line 11536 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard");
-}
+;}
     break;
 
   case 1988:
-
-/* Line 1806 of yacc.c  */
 #line 11540 "preproc.y"
     { 
  (yyval.str) = mm_strdup("document");
-}
+;}
     break;
 
   case 1989:
-
-/* Line 1806 of yacc.c  */
 #line 11544 "preproc.y"
     { 
  (yyval.str) = mm_strdup("domain");
-}
+;}
     break;
 
   case 1990:
-
-/* Line 1806 of yacc.c  */
 #line 11548 "preproc.y"
     { 
  (yyval.str) = mm_strdup("double");
-}
+;}
     break;
 
   case 1991:
-
-/* Line 1806 of yacc.c  */
 #line 11552 "preproc.y"
     { 
  (yyval.str) = mm_strdup("drop");
-}
+;}
     break;
 
   case 1992:
-
-/* Line 1806 of yacc.c  */
 #line 11556 "preproc.y"
     { 
  (yyval.str) = mm_strdup("each");
-}
+;}
     break;
 
   case 1993:
-
-/* Line 1806 of yacc.c  */
 #line 11560 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enable");
-}
+;}
     break;
 
   case 1994:
-
-/* Line 1806 of yacc.c  */
 #line 11564 "preproc.y"
     { 
  (yyval.str) = mm_strdup("encoding");
-}
+;}
     break;
 
   case 1995:
-
-/* Line 1806 of yacc.c  */
 #line 11568 "preproc.y"
     { 
  (yyval.str) = mm_strdup("encrypted");
-}
+;}
     break;
 
   case 1996:
-
-/* Line 1806 of yacc.c  */
 #line 11572 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enum");
-}
+;}
     break;
 
   case 1997:
-
-/* Line 1806 of yacc.c  */
 #line 11576 "preproc.y"
     { 
  (yyval.str) = mm_strdup("escape");
-}
+;}
     break;
 
   case 1998:
-
-/* Line 1806 of yacc.c  */
 #line 11580 "preproc.y"
     { 
  (yyval.str) = mm_strdup("event");
-}
+;}
     break;
 
   case 1999:
-
-/* Line 1806 of yacc.c  */
 #line 11584 "preproc.y"
     { 
  (yyval.str) = mm_strdup("exclude");
-}
+;}
     break;
 
   case 2000:
-
-/* Line 1806 of yacc.c  */
 #line 11588 "preproc.y"
     { 
  (yyval.str) = mm_strdup("excluding");
-}
+;}
     break;
 
   case 2001:
-
-/* Line 1806 of yacc.c  */
 #line 11592 "preproc.y"
     { 
  (yyval.str) = mm_strdup("exclusive");
-}
+;}
     break;
 
   case 2002:
-
-/* Line 1806 of yacc.c  */
 #line 11596 "preproc.y"
     { 
  (yyval.str) = mm_strdup("execute");
-}
+;}
     break;
 
   case 2003:
-
-/* Line 1806 of yacc.c  */
 #line 11600 "preproc.y"
     { 
  (yyval.str) = mm_strdup("explain");
-}
+;}
     break;
 
   case 2004:
-
-/* Line 1806 of yacc.c  */
 #line 11604 "preproc.y"
     { 
  (yyval.str) = mm_strdup("extension");
-}
+;}
     break;
 
   case 2005:
-
-/* Line 1806 of yacc.c  */
 #line 11608 "preproc.y"
     { 
  (yyval.str) = mm_strdup("external");
-}
+;}
     break;
 
   case 2006:
-
-/* Line 1806 of yacc.c  */
 #line 11612 "preproc.y"
     { 
  (yyval.str) = mm_strdup("family");
-}
+;}
     break;
 
   case 2007:
-
-/* Line 1806 of yacc.c  */
 #line 11616 "preproc.y"
     { 
  (yyval.str) = mm_strdup("first");
-}
+;}
     break;
 
   case 2008:
-
-/* Line 1806 of yacc.c  */
 #line 11620 "preproc.y"
     { 
  (yyval.str) = mm_strdup("following");
-}
+;}
     break;
 
   case 2009:
-
-/* Line 1806 of yacc.c  */
 #line 11624 "preproc.y"
     { 
  (yyval.str) = mm_strdup("force");
-}
+;}
     break;
 
   case 2010:
-
-/* Line 1806 of yacc.c  */
 #line 11628 "preproc.y"
     { 
  (yyval.str) = mm_strdup("forward");
-}
+;}
     break;
 
   case 2011:
-
-/* Line 1806 of yacc.c  */
 #line 11632 "preproc.y"
     { 
  (yyval.str) = mm_strdup("function");
-}
+;}
     break;
 
   case 2012:
-
-/* Line 1806 of yacc.c  */
 #line 11636 "preproc.y"
     { 
  (yyval.str) = mm_strdup("functions");
-}
+;}
     break;
 
   case 2013:
-
-/* Line 1806 of yacc.c  */
 #line 11640 "preproc.y"
     { 
  (yyval.str) = mm_strdup("global");
-}
+;}
     break;
 
   case 2014:
-
-/* Line 1806 of yacc.c  */
 #line 11644 "preproc.y"
     { 
  (yyval.str) = mm_strdup("granted");
-}
+;}
     break;
 
   case 2015:
-
-/* Line 1806 of yacc.c  */
 #line 11648 "preproc.y"
     { 
  (yyval.str) = mm_strdup("handler");
-}
+;}
     break;
 
   case 2016:
-
-/* Line 1806 of yacc.c  */
 #line 11652 "preproc.y"
     { 
  (yyval.str) = mm_strdup("header");
-}
+;}
     break;
 
   case 2017:
-
-/* Line 1806 of yacc.c  */
 #line 11656 "preproc.y"
     { 
  (yyval.str) = mm_strdup("hold");
-}
+;}
     break;
 
   case 2018:
-
-/* Line 1806 of yacc.c  */
 #line 11660 "preproc.y"
     { 
  (yyval.str) = mm_strdup("identity");
-}
+;}
     break;
 
   case 2019:
-
-/* Line 1806 of yacc.c  */
 #line 11664 "preproc.y"
     { 
  (yyval.str) = mm_strdup("if");
-}
+;}
     break;
 
   case 2020:
-
-/* Line 1806 of yacc.c  */
 #line 11668 "preproc.y"
     { 
  (yyval.str) = mm_strdup("immediate");
-}
+;}
     break;
 
   case 2021:
-
-/* Line 1806 of yacc.c  */
 #line 11672 "preproc.y"
     { 
  (yyval.str) = mm_strdup("immutable");
-}
+;}
     break;
 
   case 2022:
-
-/* Line 1806 of yacc.c  */
 #line 11676 "preproc.y"
     { 
  (yyval.str) = mm_strdup("implicit");
-}
+;}
     break;
 
   case 2023:
-
-/* Line 1806 of yacc.c  */
 #line 11680 "preproc.y"
     { 
  (yyval.str) = mm_strdup("including");
-}
+;}
     break;
 
   case 2024:
-
-/* Line 1806 of yacc.c  */
 #line 11684 "preproc.y"
     { 
  (yyval.str) = mm_strdup("increment");
-}
+;}
     break;
 
   case 2025:
-
-/* Line 1806 of yacc.c  */
 #line 11688 "preproc.y"
     { 
  (yyval.str) = mm_strdup("index");
-}
+;}
     break;
 
   case 2026:
-
-/* Line 1806 of yacc.c  */
 #line 11692 "preproc.y"
     { 
  (yyval.str) = mm_strdup("indexes");
-}
+;}
     break;
 
   case 2027:
-
-/* Line 1806 of yacc.c  */
 #line 11696 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inherit");
-}
+;}
     break;
 
   case 2028:
-
-/* Line 1806 of yacc.c  */
 #line 11700 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inherits");
-}
+;}
     break;
 
   case 2029:
-
-/* Line 1806 of yacc.c  */
 #line 11704 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inline");
-}
+;}
     break;
 
   case 2030:
-
-/* Line 1806 of yacc.c  */
 #line 11708 "preproc.y"
     { 
  (yyval.str) = mm_strdup("insensitive");
-}
+;}
     break;
 
   case 2031:
-
-/* Line 1806 of yacc.c  */
 #line 11712 "preproc.y"
     { 
  (yyval.str) = mm_strdup("insert");
-}
+;}
     break;
 
   case 2032:
-
-/* Line 1806 of yacc.c  */
 #line 11716 "preproc.y"
     { 
  (yyval.str) = mm_strdup("instead");
-}
+;}
     break;
 
   case 2033:
-
-/* Line 1806 of yacc.c  */
 #line 11720 "preproc.y"
     { 
  (yyval.str) = mm_strdup("invoker");
-}
+;}
     break;
 
   case 2034:
-
-/* Line 1806 of yacc.c  */
 #line 11724 "preproc.y"
     { 
  (yyval.str) = mm_strdup("isolation");
-}
+;}
     break;
 
   case 2035:
-
-/* Line 1806 of yacc.c  */
 #line 11728 "preproc.y"
     { 
  (yyval.str) = mm_strdup("key");
-}
+;}
     break;
 
   case 2036:
-
-/* Line 1806 of yacc.c  */
 #line 11732 "preproc.y"
     { 
  (yyval.str) = mm_strdup("label");
-}
+;}
     break;
 
   case 2037:
-
-/* Line 1806 of yacc.c  */
 #line 11736 "preproc.y"
     { 
  (yyval.str) = mm_strdup("language");
-}
+;}
     break;
 
   case 2038:
-
-/* Line 1806 of yacc.c  */
 #line 11740 "preproc.y"
     { 
  (yyval.str) = mm_strdup("large");
-}
+;}
     break;
 
   case 2039:
-
-/* Line 1806 of yacc.c  */
 #line 11744 "preproc.y"
     { 
  (yyval.str) = mm_strdup("last");
-}
+;}
     break;
 
   case 2040:
-
-/* Line 1806 of yacc.c  */
 #line 11748 "preproc.y"
     { 
  (yyval.str) = mm_strdup("lc_collate");
-}
+;}
     break;
 
   case 2041:
-
-/* Line 1806 of yacc.c  */
 #line 11752 "preproc.y"
     { 
  (yyval.str) = mm_strdup("lc_ctype");
-}
+;}
     break;
 
   case 2042:
-
-/* Line 1806 of yacc.c  */
 #line 11756 "preproc.y"
     { 
  (yyval.str) = mm_strdup("leakproof");
-}
+;}
     break;
 
   case 2043:
-
-/* Line 1806 of yacc.c  */
 #line 11760 "preproc.y"
     { 
  (yyval.str) = mm_strdup("level");
-}
+;}
     break;
 
   case 2044:
-
-/* Line 1806 of yacc.c  */
 #line 11764 "preproc.y"
     { 
  (yyval.str) = mm_strdup("listen");
-}
+;}
     break;
 
   case 2045:
-
-/* Line 1806 of yacc.c  */
 #line 11768 "preproc.y"
     { 
  (yyval.str) = mm_strdup("load");
-}
+;}
     break;
 
   case 2046:
-
-/* Line 1806 of yacc.c  */
 #line 11772 "preproc.y"
     { 
  (yyval.str) = mm_strdup("local");
-}
+;}
     break;
 
   case 2047:
-
-/* Line 1806 of yacc.c  */
 #line 11776 "preproc.y"
     { 
  (yyval.str) = mm_strdup("location");
-}
+;}
     break;
 
   case 2048:
-
-/* Line 1806 of yacc.c  */
 #line 11780 "preproc.y"
     { 
  (yyval.str) = mm_strdup("lock");
-}
+;}
     break;
 
   case 2049:
-
-/* Line 1806 of yacc.c  */
 #line 11784 "preproc.y"
     { 
  (yyval.str) = mm_strdup("mapping");
-}
+;}
     break;
 
   case 2050:
-
-/* Line 1806 of yacc.c  */
 #line 11788 "preproc.y"
     { 
  (yyval.str) = mm_strdup("match");
-}
+;}
     break;
 
   case 2051:
-
-/* Line 1806 of yacc.c  */
 #line 11792 "preproc.y"
     { 
  (yyval.str) = mm_strdup("materialized");
-}
+;}
     break;
 
   case 2052:
-
-/* Line 1806 of yacc.c  */
 #line 11796 "preproc.y"
     { 
  (yyval.str) = mm_strdup("maxvalue");
-}
+;}
     break;
 
   case 2053:
-
-/* Line 1806 of yacc.c  */
 #line 11800 "preproc.y"
     { 
  (yyval.str) = mm_strdup("minvalue");
-}
+;}
     break;
 
   case 2054:
-
-/* Line 1806 of yacc.c  */
 #line 11804 "preproc.y"
     { 
  (yyval.str) = mm_strdup("mode");
-}
+;}
     break;
 
   case 2055:
-
-/* Line 1806 of yacc.c  */
 #line 11808 "preproc.y"
     { 
  (yyval.str) = mm_strdup("move");
-}
+;}
     break;
 
   case 2056:
-
-/* Line 1806 of yacc.c  */
 #line 11812 "preproc.y"
     { 
  (yyval.str) = mm_strdup("name");
-}
+;}
     break;
 
   case 2057:
-
-/* Line 1806 of yacc.c  */
 #line 11816 "preproc.y"
     { 
  (yyval.str) = mm_strdup("names");
-}
+;}
     break;
 
   case 2058:
-
-/* Line 1806 of yacc.c  */
 #line 11820 "preproc.y"
     { 
  (yyval.str) = mm_strdup("next");
-}
+;}
     break;
 
   case 2059:
-
-/* Line 1806 of yacc.c  */
 #line 11824 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no");
-}
+;}
     break;
 
   case 2060:
-
-/* Line 1806 of yacc.c  */
 #line 11828 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nothing");
-}
+;}
     break;
 
   case 2061:
-
-/* Line 1806 of yacc.c  */
 #line 11832 "preproc.y"
     { 
  (yyval.str) = mm_strdup("notify");
-}
+;}
     break;
 
   case 2062:
-
-/* Line 1806 of yacc.c  */
 #line 11836 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nowait");
-}
+;}
     break;
 
   case 2063:
-
-/* Line 1806 of yacc.c  */
 #line 11840 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nulls");
-}
+;}
     break;
 
   case 2064:
-
-/* Line 1806 of yacc.c  */
 #line 11844 "preproc.y"
     { 
  (yyval.str) = mm_strdup("object");
-}
+;}
     break;
 
   case 2065:
-
-/* Line 1806 of yacc.c  */
 #line 11848 "preproc.y"
     { 
  (yyval.str) = mm_strdup("of");
-}
+;}
     break;
 
   case 2066:
-
-/* Line 1806 of yacc.c  */
 #line 11852 "preproc.y"
     { 
  (yyval.str) = mm_strdup("off");
-}
+;}
     break;
 
   case 2067:
-
-/* Line 1806 of yacc.c  */
 #line 11856 "preproc.y"
     { 
  (yyval.str) = mm_strdup("oids");
-}
+;}
     break;
 
   case 2068:
-
-/* Line 1806 of yacc.c  */
 #line 11860 "preproc.y"
     { 
  (yyval.str) = mm_strdup("operator");
-}
+;}
     break;
 
   case 2069:
-
-/* Line 1806 of yacc.c  */
 #line 11864 "preproc.y"
     { 
  (yyval.str) = mm_strdup("option");
-}
+;}
     break;
 
   case 2070:
-
-/* Line 1806 of yacc.c  */
 #line 11868 "preproc.y"
     { 
  (yyval.str) = mm_strdup("options");
-}
+;}
     break;
 
   case 2071:
-
-/* Line 1806 of yacc.c  */
 #line 11872 "preproc.y"
     { 
  (yyval.str) = mm_strdup("owned");
-}
+;}
     break;
 
   case 2072:
-
-/* Line 1806 of yacc.c  */
 #line 11876 "preproc.y"
     { 
  (yyval.str) = mm_strdup("owner");
-}
+;}
     break;
 
   case 2073:
-
-/* Line 1806 of yacc.c  */
 #line 11880 "preproc.y"
     { 
  (yyval.str) = mm_strdup("parser");
-}
+;}
     break;
 
   case 2074:
-
-/* Line 1806 of yacc.c  */
 #line 11884 "preproc.y"
     { 
  (yyval.str) = mm_strdup("partial");
-}
+;}
     break;
 
   case 2075:
-
-/* Line 1806 of yacc.c  */
 #line 11888 "preproc.y"
     { 
  (yyval.str) = mm_strdup("partition");
-}
+;}
     break;
 
   case 2076:
-
-/* Line 1806 of yacc.c  */
 #line 11892 "preproc.y"
     { 
  (yyval.str) = mm_strdup("passing");
-}
+;}
     break;
 
   case 2077:
-
-/* Line 1806 of yacc.c  */
 #line 11896 "preproc.y"
     { 
  (yyval.str) = mm_strdup("password");
-}
+;}
     break;
 
   case 2078:
-
-/* Line 1806 of yacc.c  */
 #line 11900 "preproc.y"
     { 
  (yyval.str) = mm_strdup("plans");
-}
+;}
     break;
 
   case 2079:
-
-/* Line 1806 of yacc.c  */
 #line 11904 "preproc.y"
     { 
  (yyval.str) = mm_strdup("preceding");
-}
+;}
     break;
 
   case 2080:
-
-/* Line 1806 of yacc.c  */
 #line 11908 "preproc.y"
     { 
  (yyval.str) = mm_strdup("prepare");
-}
+;}
     break;
 
   case 2081:
-
-/* Line 1806 of yacc.c  */
 #line 11912 "preproc.y"
     { 
  (yyval.str) = mm_strdup("prepared");
-}
+;}
     break;
 
   case 2082:
-
-/* Line 1806 of yacc.c  */
 #line 11916 "preproc.y"
     { 
  (yyval.str) = mm_strdup("preserve");
-}
+;}
     break;
 
   case 2083:
-
-/* Line 1806 of yacc.c  */
 #line 11920 "preproc.y"
     { 
  (yyval.str) = mm_strdup("prior");
-}
+;}
     break;
 
   case 2084:
-
-/* Line 1806 of yacc.c  */
 #line 11924 "preproc.y"
     { 
  (yyval.str) = mm_strdup("privileges");
-}
+;}
     break;
 
   case 2085:
-
-/* Line 1806 of yacc.c  */
 #line 11928 "preproc.y"
     { 
  (yyval.str) = mm_strdup("procedural");
-}
+;}
     break;
 
   case 2086:
-
-/* Line 1806 of yacc.c  */
 #line 11932 "preproc.y"
     { 
  (yyval.str) = mm_strdup("procedure");
-}
+;}
     break;
 
   case 2087:
-
-/* Line 1806 of yacc.c  */
 #line 11936 "preproc.y"
     { 
  (yyval.str) = mm_strdup("program");
-}
+;}
     break;
 
   case 2088:
-
-/* Line 1806 of yacc.c  */
 #line 11940 "preproc.y"
     { 
  (yyval.str) = mm_strdup("quote");
-}
+;}
     break;
 
   case 2089:
-
-/* Line 1806 of yacc.c  */
 #line 11944 "preproc.y"
     { 
  (yyval.str) = mm_strdup("range");
-}
+;}
     break;
 
   case 2090:
-
-/* Line 1806 of yacc.c  */
 #line 11948 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read");
-}
+;}
     break;
 
   case 2091:
-
-/* Line 1806 of yacc.c  */
 #line 11952 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reassign");
-}
+;}
     break;
 
   case 2092:
-
-/* Line 1806 of yacc.c  */
 #line 11956 "preproc.y"
     { 
  (yyval.str) = mm_strdup("recheck");
-}
+;}
     break;
 
   case 2093:
-
-/* Line 1806 of yacc.c  */
 #line 11960 "preproc.y"
     { 
  (yyval.str) = mm_strdup("recursive");
-}
+;}
     break;
 
   case 2094:
-
-/* Line 1806 of yacc.c  */
 #line 11964 "preproc.y"
     { 
  (yyval.str) = mm_strdup("ref");
-}
+;}
     break;
 
   case 2095:
-
-/* Line 1806 of yacc.c  */
 #line 11968 "preproc.y"
     { 
  (yyval.str) = mm_strdup("refresh");
-}
+;}
     break;
 
   case 2096:
-
-/* Line 1806 of yacc.c  */
 #line 11972 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reindex");
-}
+;}
     break;
 
   case 2097:
-
-/* Line 1806 of yacc.c  */
 #line 11976 "preproc.y"
     { 
  (yyval.str) = mm_strdup("relative");
-}
+;}
     break;
 
   case 2098:
-
-/* Line 1806 of yacc.c  */
 #line 11980 "preproc.y"
     { 
  (yyval.str) = mm_strdup("release");
-}
+;}
     break;
 
   case 2099:
-
-/* Line 1806 of yacc.c  */
 #line 11984 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rename");
-}
+;}
     break;
 
   case 2100:
-
-/* Line 1806 of yacc.c  */
 #line 11988 "preproc.y"
     { 
  (yyval.str) = mm_strdup("repeatable");
-}
+;}
     break;
 
   case 2101:
-
-/* Line 1806 of yacc.c  */
 #line 11992 "preproc.y"
     { 
  (yyval.str) = mm_strdup("replace");
-}
+;}
     break;
 
   case 2102:
-
-/* Line 1806 of yacc.c  */
 #line 11996 "preproc.y"
     { 
  (yyval.str) = mm_strdup("replica");
-}
+;}
     break;
 
   case 2103:
-
-/* Line 1806 of yacc.c  */
 #line 12000 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset");
-}
+;}
     break;
 
   case 2104:
-
-/* Line 1806 of yacc.c  */
 #line 12004 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restart");
-}
+;}
     break;
 
   case 2105:
-
-/* Line 1806 of yacc.c  */
 #line 12008 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restrict");
-}
+;}
     break;
 
   case 2106:
-
-/* Line 1806 of yacc.c  */
 #line 12012 "preproc.y"
     { 
  (yyval.str) = mm_strdup("returns");
-}
+;}
     break;
 
   case 2107:
-
-/* Line 1806 of yacc.c  */
 #line 12016 "preproc.y"
     { 
  (yyval.str) = mm_strdup("revoke");
-}
+;}
     break;
 
   case 2108:
-
-/* Line 1806 of yacc.c  */
 #line 12020 "preproc.y"
     { 
  (yyval.str) = mm_strdup("role");
-}
+;}
     break;
 
   case 2109:
-
-/* Line 1806 of yacc.c  */
 #line 12024 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rollback");
-}
+;}
     break;
 
   case 2110:
-
-/* Line 1806 of yacc.c  */
 #line 12028 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rows");
-}
+;}
     break;
 
   case 2111:
-
-/* Line 1806 of yacc.c  */
 #line 12032 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rule");
-}
+;}
     break;
 
   case 2112:
-
-/* Line 1806 of yacc.c  */
 #line 12036 "preproc.y"
     { 
  (yyval.str) = mm_strdup("savepoint");
-}
+;}
     break;
 
   case 2113:
-
-/* Line 1806 of yacc.c  */
 #line 12040 "preproc.y"
     { 
  (yyval.str) = mm_strdup("schema");
-}
+;}
     break;
 
   case 2114:
-
-/* Line 1806 of yacc.c  */
 #line 12044 "preproc.y"
     { 
  (yyval.str) = mm_strdup("scroll");
-}
+;}
     break;
 
   case 2115:
-
-/* Line 1806 of yacc.c  */
 #line 12048 "preproc.y"
     { 
  (yyval.str) = mm_strdup("search");
-}
+;}
     break;
 
   case 2116:
-
-/* Line 1806 of yacc.c  */
 #line 12052 "preproc.y"
     { 
  (yyval.str) = mm_strdup("security");
-}
+;}
     break;
 
   case 2117:
-
-/* Line 1806 of yacc.c  */
 #line 12056 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequence");
-}
+;}
     break;
 
   case 2118:
-
-/* Line 1806 of yacc.c  */
 #line 12060 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequences");
-}
+;}
     break;
 
   case 2119:
-
-/* Line 1806 of yacc.c  */
 #line 12064 "preproc.y"
     { 
  (yyval.str) = mm_strdup("serializable");
-}
+;}
     break;
 
   case 2120:
-
-/* Line 1806 of yacc.c  */
 #line 12068 "preproc.y"
     { 
  (yyval.str) = mm_strdup("server");
-}
+;}
     break;
 
   case 2121:
-
-/* Line 1806 of yacc.c  */
 #line 12072 "preproc.y"
     { 
  (yyval.str) = mm_strdup("session");
-}
+;}
     break;
 
   case 2122:
-
-/* Line 1806 of yacc.c  */
 #line 12076 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set");
-}
+;}
     break;
 
   case 2123:
-
-/* Line 1806 of yacc.c  */
 #line 12080 "preproc.y"
     { 
  (yyval.str) = mm_strdup("share");
-}
+;}
     break;
 
   case 2124:
-
-/* Line 1806 of yacc.c  */
 #line 12084 "preproc.y"
     { 
  (yyval.str) = mm_strdup("show");
-}
+;}
     break;
 
   case 2125:
-
-/* Line 1806 of yacc.c  */
 #line 12088 "preproc.y"
     { 
  (yyval.str) = mm_strdup("simple");
-}
+;}
     break;
 
   case 2126:
-
-/* Line 1806 of yacc.c  */
 #line 12092 "preproc.y"
     { 
  (yyval.str) = mm_strdup("snapshot");
-}
+;}
     break;
 
   case 2127:
-
-/* Line 1806 of yacc.c  */
 #line 12096 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stable");
-}
+;}
     break;
 
   case 2128:
-
-/* Line 1806 of yacc.c  */
 #line 12100 "preproc.y"
     { 
  (yyval.str) = mm_strdup("standalone");
-}
+;}
     break;
 
   case 2129:
-
-/* Line 1806 of yacc.c  */
 #line 12104 "preproc.y"
     { 
  (yyval.str) = mm_strdup("start");
-}
+;}
     break;
 
   case 2130:
-
-/* Line 1806 of yacc.c  */
 #line 12108 "preproc.y"
     { 
  (yyval.str) = mm_strdup("statement");
-}
+;}
     break;
 
   case 2131:
-
-/* Line 1806 of yacc.c  */
 #line 12112 "preproc.y"
     { 
  (yyval.str) = mm_strdup("statistics");
-}
+;}
     break;
 
   case 2132:
-
-/* Line 1806 of yacc.c  */
 #line 12116 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stdin");
-}
+;}
     break;
 
   case 2133:
-
-/* Line 1806 of yacc.c  */
 #line 12120 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stdout");
-}
+;}
     break;
 
   case 2134:
-
-/* Line 1806 of yacc.c  */
 #line 12124 "preproc.y"
     { 
  (yyval.str) = mm_strdup("storage");
-}
+;}
     break;
 
   case 2135:
-
-/* Line 1806 of yacc.c  */
 #line 12128 "preproc.y"
     { 
  (yyval.str) = mm_strdup("strict");
-}
+;}
     break;
 
   case 2136:
-
-/* Line 1806 of yacc.c  */
 #line 12132 "preproc.y"
     { 
  (yyval.str) = mm_strdup("strip");
-}
+;}
     break;
 
   case 2137:
-
-/* Line 1806 of yacc.c  */
 #line 12136 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sysid");
-}
+;}
     break;
 
   case 2138:
-
-/* Line 1806 of yacc.c  */
 #line 12140 "preproc.y"
     { 
  (yyval.str) = mm_strdup("system");
-}
+;}
     break;
 
   case 2139:
-
-/* Line 1806 of yacc.c  */
 #line 12144 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tables");
-}
+;}
     break;
 
   case 2140:
-
-/* Line 1806 of yacc.c  */
 #line 12148 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tablespace");
-}
+;}
     break;
 
   case 2141:
-
-/* Line 1806 of yacc.c  */
 #line 12152 "preproc.y"
     { 
  (yyval.str) = mm_strdup("temp");
-}
+;}
     break;
 
   case 2142:
-
-/* Line 1806 of yacc.c  */
 #line 12156 "preproc.y"
     { 
  (yyval.str) = mm_strdup("template");
-}
+;}
     break;
 
   case 2143:
-
-/* Line 1806 of yacc.c  */
 #line 12160 "preproc.y"
     { 
  (yyval.str) = mm_strdup("temporary");
-}
+;}
     break;
 
   case 2144:
-
-/* Line 1806 of yacc.c  */
 #line 12164 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text");
-}
+;}
     break;
 
   case 2145:
-
-/* Line 1806 of yacc.c  */
 #line 12168 "preproc.y"
     { 
  (yyval.str) = mm_strdup("transaction");
-}
+;}
     break;
 
   case 2146:
-
-/* Line 1806 of yacc.c  */
 #line 12172 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trigger");
-}
+;}
     break;
 
   case 2147:
-
-/* Line 1806 of yacc.c  */
 #line 12176 "preproc.y"
     { 
  (yyval.str) = mm_strdup("truncate");
-}
+;}
     break;
 
   case 2148:
-
-/* Line 1806 of yacc.c  */
 #line 12180 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trusted");
-}
+;}
     break;
 
   case 2149:
-
-/* Line 1806 of yacc.c  */
 #line 12184 "preproc.y"
     { 
  (yyval.str) = mm_strdup("type");
-}
+;}
     break;
 
   case 2150:
-
-/* Line 1806 of yacc.c  */
 #line 12188 "preproc.y"
     { 
  (yyval.str) = mm_strdup("types");
-}
+;}
     break;
 
   case 2151:
-
-/* Line 1806 of yacc.c  */
 #line 12192 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unbounded");
-}
+;}
     break;
 
   case 2152:
-
-/* Line 1806 of yacc.c  */
 #line 12196 "preproc.y"
     { 
  (yyval.str) = mm_strdup("uncommitted");
-}
+;}
     break;
 
   case 2153:
-
-/* Line 1806 of yacc.c  */
 #line 12200 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unencrypted");
-}
+;}
     break;
 
   case 2154:
-
-/* Line 1806 of yacc.c  */
 #line 12204 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unknown");
-}
+;}
     break;
 
   case 2155:
-
-/* Line 1806 of yacc.c  */
 #line 12208 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unlisten");
-}
+;}
     break;
 
   case 2156:
-
-/* Line 1806 of yacc.c  */
 #line 12212 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unlogged");
-}
+;}
     break;
 
   case 2157:
-
-/* Line 1806 of yacc.c  */
 #line 12216 "preproc.y"
     { 
  (yyval.str) = mm_strdup("until");
-}
+;}
     break;
 
   case 2158:
-
-/* Line 1806 of yacc.c  */
 #line 12220 "preproc.y"
     { 
  (yyval.str) = mm_strdup("update");
-}
+;}
     break;
 
   case 2159:
-
-/* Line 1806 of yacc.c  */
 #line 12224 "preproc.y"
     { 
  (yyval.str) = mm_strdup("vacuum");
-}
+;}
     break;
 
   case 2160:
-
-/* Line 1806 of yacc.c  */
 #line 12228 "preproc.y"
     { 
  (yyval.str) = mm_strdup("valid");
-}
+;}
     break;
 
   case 2161:
-
-/* Line 1806 of yacc.c  */
 #line 12232 "preproc.y"
     { 
  (yyval.str) = mm_strdup("validate");
-}
+;}
     break;
 
   case 2162:
-
-/* Line 1806 of yacc.c  */
 #line 12236 "preproc.y"
     { 
  (yyval.str) = mm_strdup("validator");
-}
+;}
     break;
 
   case 2163:
-
-/* Line 1806 of yacc.c  */
 #line 12240 "preproc.y"
     { 
  (yyval.str) = mm_strdup("value");
-}
+;}
     break;
 
   case 2164:
-
-/* Line 1806 of yacc.c  */
 #line 12244 "preproc.y"
     { 
  (yyval.str) = mm_strdup("varying");
-}
+;}
     break;
 
   case 2165:
-
-/* Line 1806 of yacc.c  */
 #line 12248 "preproc.y"
     { 
  (yyval.str) = mm_strdup("version");
-}
+;}
     break;
 
   case 2166:
-
-/* Line 1806 of yacc.c  */
 #line 12252 "preproc.y"
     { 
  (yyval.str) = mm_strdup("view");
-}
+;}
     break;
 
   case 2167:
-
-/* Line 1806 of yacc.c  */
 #line 12256 "preproc.y"
     { 
  (yyval.str) = mm_strdup("volatile");
-}
+;}
     break;
 
   case 2168:
-
-/* Line 1806 of yacc.c  */
 #line 12260 "preproc.y"
     { 
  (yyval.str) = mm_strdup("whitespace");
-}
+;}
     break;
 
   case 2169:
-
-/* Line 1806 of yacc.c  */
 #line 12264 "preproc.y"
     { 
  (yyval.str) = mm_strdup("without");
-}
+;}
     break;
 
   case 2170:
-
-/* Line 1806 of yacc.c  */
 #line 12268 "preproc.y"
     { 
  (yyval.str) = mm_strdup("work");
-}
+;}
     break;
 
   case 2171:
-
-/* Line 1806 of yacc.c  */
 #line 12272 "preproc.y"
     { 
  (yyval.str) = mm_strdup("wrapper");
-}
+;}
     break;
 
   case 2172:
-
-/* Line 1806 of yacc.c  */
 #line 12276 "preproc.y"
     { 
  (yyval.str) = mm_strdup("write");
-}
+;}
     break;
 
   case 2173:
-
-/* Line 1806 of yacc.c  */
 #line 12280 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xml");
-}
+;}
     break;
 
   case 2174:
-
-/* Line 1806 of yacc.c  */
 #line 12284 "preproc.y"
     { 
  (yyval.str) = mm_strdup("yes");
-}
+;}
     break;
 
   case 2175:
-
-/* Line 1806 of yacc.c  */
 #line 12288 "preproc.y"
     { 
  (yyval.str) = mm_strdup("zone");
-}
+;}
     break;
 
   case 2176:
-
-/* Line 1806 of yacc.c  */
 #line 12296 "preproc.y"
     { 
  (yyval.str) = mm_strdup("between");
-}
+;}
     break;
 
   case 2177:
-
-/* Line 1806 of yacc.c  */
 #line 12300 "preproc.y"
     { 
  (yyval.str) = mm_strdup("bigint");
-}
+;}
     break;
 
   case 2178:
-
-/* Line 1806 of yacc.c  */
 #line 12304 "preproc.y"
     { 
  (yyval.str) = mm_strdup("bit");
-}
+;}
     break;
 
   case 2179:
-
-/* Line 1806 of yacc.c  */
 #line 12308 "preproc.y"
     { 
  (yyval.str) = mm_strdup("boolean");
-}
+;}
     break;
 
   case 2180:
-
-/* Line 1806 of yacc.c  */
 #line 12312 "preproc.y"
     { 
  (yyval.str) = mm_strdup("character");
-}
+;}
     break;
 
   case 2181:
-
-/* Line 1806 of yacc.c  */
 #line 12316 "preproc.y"
     { 
  (yyval.str) = mm_strdup("coalesce");
-}
+;}
     break;
 
   case 2182:
-
-/* Line 1806 of yacc.c  */
 #line 12320 "preproc.y"
     { 
  (yyval.str) = mm_strdup("dec");
-}
+;}
     break;
 
   case 2183:
-
-/* Line 1806 of yacc.c  */
 #line 12324 "preproc.y"
     { 
  (yyval.str) = mm_strdup("decimal");
-}
+;}
     break;
 
   case 2184:
-
-/* Line 1806 of yacc.c  */
 #line 12328 "preproc.y"
     { 
  (yyval.str) = mm_strdup("exists");
-}
+;}
     break;
 
   case 2185:
-
-/* Line 1806 of yacc.c  */
 #line 12332 "preproc.y"
     { 
  (yyval.str) = mm_strdup("extract");
-}
+;}
     break;
 
   case 2186:
-
-/* Line 1806 of yacc.c  */
 #line 12336 "preproc.y"
     { 
  (yyval.str) = mm_strdup("float");
-}
+;}
     break;
 
   case 2187:
-
-/* Line 1806 of yacc.c  */
 #line 12340 "preproc.y"
     { 
  (yyval.str) = mm_strdup("greatest");
-}
+;}
     break;
 
   case 2188:
-
-/* Line 1806 of yacc.c  */
 #line 12344 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inout");
-}
+;}
     break;
 
   case 2189:
-
-/* Line 1806 of yacc.c  */
 #line 12348 "preproc.y"
     { 
  (yyval.str) = mm_strdup("integer");
-}
+;}
     break;
 
   case 2190:
-
-/* Line 1806 of yacc.c  */
 #line 12352 "preproc.y"
     { 
  (yyval.str) = mm_strdup("interval");
-}
+;}
     break;
 
   case 2191:
-
-/* Line 1806 of yacc.c  */
 #line 12356 "preproc.y"
     { 
  (yyval.str) = mm_strdup("least");
-}
+;}
     break;
 
   case 2192:
-
-/* Line 1806 of yacc.c  */
 #line 12360 "preproc.y"
     { 
  (yyval.str) = mm_strdup("national");
-}
+;}
     break;
 
   case 2193:
-
-/* Line 1806 of yacc.c  */
 #line 12364 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nchar");
-}
+;}
     break;
 
   case 2194:
-
-/* Line 1806 of yacc.c  */
 #line 12368 "preproc.y"
     { 
  (yyval.str) = mm_strdup("none");
-}
+;}
     break;
 
   case 2195:
-
-/* Line 1806 of yacc.c  */
 #line 12372 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nullif");
-}
+;}
     break;
 
   case 2196:
-
-/* Line 1806 of yacc.c  */
 #line 12376 "preproc.y"
     { 
  (yyval.str) = mm_strdup("numeric");
-}
+;}
     break;
 
   case 2197:
-
-/* Line 1806 of yacc.c  */
 #line 12380 "preproc.y"
     { 
  (yyval.str) = mm_strdup("out");
-}
+;}
     break;
 
   case 2198:
-
-/* Line 1806 of yacc.c  */
 #line 12384 "preproc.y"
     { 
  (yyval.str) = mm_strdup("overlay");
-}
+;}
     break;
 
   case 2199:
-
-/* Line 1806 of yacc.c  */
 #line 12388 "preproc.y"
     { 
  (yyval.str) = mm_strdup("position");
-}
+;}
     break;
 
   case 2200:
-
-/* Line 1806 of yacc.c  */
 #line 12392 "preproc.y"
     { 
  (yyval.str) = mm_strdup("precision");
-}
+;}
     break;
 
   case 2201:
-
-/* Line 1806 of yacc.c  */
 #line 12396 "preproc.y"
     { 
  (yyval.str) = mm_strdup("real");
-}
+;}
     break;
 
   case 2202:
-
-/* Line 1806 of yacc.c  */
 #line 12400 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row");
-}
+;}
     break;
 
   case 2203:
-
-/* Line 1806 of yacc.c  */
 #line 12404 "preproc.y"
     { 
  (yyval.str) = mm_strdup("setof");
-}
+;}
     break;
 
   case 2204:
-
-/* Line 1806 of yacc.c  */
 #line 12408 "preproc.y"
     { 
  (yyval.str) = mm_strdup("smallint");
-}
+;}
     break;
 
   case 2205:
-
-/* Line 1806 of yacc.c  */
 #line 12412 "preproc.y"
     { 
  (yyval.str) = mm_strdup("substring");
-}
+;}
     break;
 
   case 2206:
-
-/* Line 1806 of yacc.c  */
 #line 12416 "preproc.y"
     { 
  (yyval.str) = mm_strdup("time");
-}
+;}
     break;
 
   case 2207:
-
-/* Line 1806 of yacc.c  */
 #line 12420 "preproc.y"
     { 
  (yyval.str) = mm_strdup("timestamp");
-}
+;}
     break;
 
   case 2208:
-
-/* Line 1806 of yacc.c  */
 #line 12424 "preproc.y"
     { 
  (yyval.str) = mm_strdup("treat");
-}
+;}
     break;
 
   case 2209:
-
-/* Line 1806 of yacc.c  */
 #line 12428 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trim");
-}
+;}
     break;
 
   case 2210:
-
-/* Line 1806 of yacc.c  */
 #line 12432 "preproc.y"
     { 
  (yyval.str) = mm_strdup("varchar");
-}
+;}
     break;
 
   case 2211:
-
-/* Line 1806 of yacc.c  */
 #line 12436 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlattributes");
-}
+;}
     break;
 
   case 2212:
-
-/* Line 1806 of yacc.c  */
 #line 12440 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlconcat");
-}
+;}
     break;
 
   case 2213:
-
-/* Line 1806 of yacc.c  */
 #line 12444 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlelement");
-}
+;}
     break;
 
   case 2214:
-
-/* Line 1806 of yacc.c  */
 #line 12448 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlexists");
-}
+;}
     break;
 
   case 2215:
-
-/* Line 1806 of yacc.c  */
 #line 12452 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlforest");
-}
+;}
     break;
 
   case 2216:
-
-/* Line 1806 of yacc.c  */
 #line 12456 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlparse");
-}
+;}
     break;
 
   case 2217:
-
-/* Line 1806 of yacc.c  */
 #line 12460 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlpi");
-}
+;}
     break;
 
   case 2218:
-
-/* Line 1806 of yacc.c  */
 #line 12464 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlroot");
-}
+;}
     break;
 
   case 2219:
-
-/* Line 1806 of yacc.c  */
 #line 12468 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlserialize");
-}
+;}
     break;
 
   case 2220:
-
-/* Line 1806 of yacc.c  */
 #line 12476 "preproc.y"
     { 
  (yyval.str) = mm_strdup("authorization");
-}
+;}
     break;
 
   case 2221:
-
-/* Line 1806 of yacc.c  */
 #line 12480 "preproc.y"
     { 
  (yyval.str) = mm_strdup("binary");
-}
+;}
     break;
 
   case 2222:
-
-/* Line 1806 of yacc.c  */
 #line 12484 "preproc.y"
     { 
  (yyval.str) = mm_strdup("collation");
-}
+;}
     break;
 
   case 2223:
-
-/* Line 1806 of yacc.c  */
 #line 12488 "preproc.y"
     { 
  (yyval.str) = mm_strdup("concurrently");
-}
+;}
     break;
 
   case 2224:
-
-/* Line 1806 of yacc.c  */
 #line 12492 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cross");
-}
+;}
     break;
 
   case 2225:
-
-/* Line 1806 of yacc.c  */
 #line 12496 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_schema");
-}
+;}
     break;
 
   case 2226:
-
-/* Line 1806 of yacc.c  */
 #line 12500 "preproc.y"
     { 
  (yyval.str) = mm_strdup("freeze");
-}
+;}
     break;
 
   case 2227:
-
-/* Line 1806 of yacc.c  */
 #line 12504 "preproc.y"
     { 
  (yyval.str) = mm_strdup("full");
-}
+;}
     break;
 
   case 2228:
-
-/* Line 1806 of yacc.c  */
 #line 12508 "preproc.y"
     { 
  (yyval.str) = mm_strdup("ilike");
-}
+;}
     break;
 
   case 2229:
-
-/* Line 1806 of yacc.c  */
 #line 12512 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inner");
-}
+;}
     break;
 
   case 2230:
-
-/* Line 1806 of yacc.c  */
 #line 12516 "preproc.y"
     { 
  (yyval.str) = mm_strdup("is");
-}
+;}
     break;
 
   case 2231:
-
-/* Line 1806 of yacc.c  */
 #line 12520 "preproc.y"
     { 
  (yyval.str) = mm_strdup("isnull");
-}
+;}
     break;
 
   case 2232:
-
-/* Line 1806 of yacc.c  */
 #line 12524 "preproc.y"
     { 
  (yyval.str) = mm_strdup("join");
-}
+;}
     break;
 
   case 2233:
-
-/* Line 1806 of yacc.c  */
 #line 12528 "preproc.y"
     { 
  (yyval.str) = mm_strdup("left");
-}
+;}
     break;
 
   case 2234:
-
-/* Line 1806 of yacc.c  */
 #line 12532 "preproc.y"
     { 
  (yyval.str) = mm_strdup("like");
-}
+;}
     break;
 
   case 2235:
-
-/* Line 1806 of yacc.c  */
 #line 12536 "preproc.y"
     { 
  (yyval.str) = mm_strdup("natural");
-}
+;}
     break;
 
   case 2236:
-
-/* Line 1806 of yacc.c  */
 #line 12540 "preproc.y"
     { 
  (yyval.str) = mm_strdup("notnull");
-}
+;}
     break;
 
   case 2237:
-
-/* Line 1806 of yacc.c  */
 #line 12544 "preproc.y"
     { 
  (yyval.str) = mm_strdup("outer");
-}
+;}
     break;
 
   case 2238:
-
-/* Line 1806 of yacc.c  */
 #line 12548 "preproc.y"
     { 
  (yyval.str) = mm_strdup("over");
-}
+;}
     break;
 
   case 2239:
-
-/* Line 1806 of yacc.c  */
 #line 12552 "preproc.y"
     { 
  (yyval.str) = mm_strdup("overlaps");
-}
+;}
     break;
 
   case 2240:
-
-/* Line 1806 of yacc.c  */
 #line 12556 "preproc.y"
     { 
  (yyval.str) = mm_strdup("right");
-}
+;}
     break;
 
   case 2241:
-
-/* Line 1806 of yacc.c  */
 #line 12560 "preproc.y"
     { 
  (yyval.str) = mm_strdup("similar");
-}
+;}
     break;
 
   case 2242:
-
-/* Line 1806 of yacc.c  */
 #line 12564 "preproc.y"
     { 
  (yyval.str) = mm_strdup("verbose");
-}
+;}
     break;
 
   case 2243:
-
-/* Line 1806 of yacc.c  */
 #line 12572 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 2244:
-
-/* Line 1806 of yacc.c  */
 #line 12576 "preproc.y"
     { 
  (yyval.str) = mm_strdup("analyse");
-}
+;}
     break;
 
   case 2245:
-
-/* Line 1806 of yacc.c  */
 #line 12580 "preproc.y"
     { 
  (yyval.str) = mm_strdup("analyze");
-}
+;}
     break;
 
   case 2246:
-
-/* Line 1806 of yacc.c  */
 #line 12584 "preproc.y"
     { 
  (yyval.str) = mm_strdup("and");
-}
+;}
     break;
 
   case 2247:
-
-/* Line 1806 of yacc.c  */
 #line 12588 "preproc.y"
     { 
  (yyval.str) = mm_strdup("any");
-}
+;}
     break;
 
   case 2248:
-
-/* Line 1806 of yacc.c  */
 #line 12592 "preproc.y"
     { 
  (yyval.str) = mm_strdup("array");
-}
+;}
     break;
 
   case 2249:
-
-/* Line 1806 of yacc.c  */
 #line 12596 "preproc.y"
     { 
  (yyval.str) = mm_strdup("as");
-}
+;}
     break;
 
   case 2250:
-
-/* Line 1806 of yacc.c  */
 #line 12600 "preproc.y"
     { 
  (yyval.str) = mm_strdup("asc");
-}
+;}
     break;
 
   case 2251:
-
-/* Line 1806 of yacc.c  */
 #line 12604 "preproc.y"
     { 
  (yyval.str) = mm_strdup("asymmetric");
-}
+;}
     break;
 
   case 2252:
-
-/* Line 1806 of yacc.c  */
 #line 12608 "preproc.y"
     { 
  (yyval.str) = mm_strdup("both");
-}
+;}
     break;
 
   case 2253:
-
-/* Line 1806 of yacc.c  */
 #line 12612 "preproc.y"
     { 
  (yyval.str) = mm_strdup("case");
-}
+;}
     break;
 
   case 2254:
-
-/* Line 1806 of yacc.c  */
 #line 12616 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cast");
-}
+;}
     break;
 
   case 2255:
-
-/* Line 1806 of yacc.c  */
 #line 12620 "preproc.y"
     { 
  (yyval.str) = mm_strdup("check");
-}
+;}
     break;
 
   case 2256:
-
-/* Line 1806 of yacc.c  */
 #line 12624 "preproc.y"
     { 
  (yyval.str) = mm_strdup("collate");
-}
+;}
     break;
 
   case 2257:
-
-/* Line 1806 of yacc.c  */
 #line 12628 "preproc.y"
     { 
  (yyval.str) = mm_strdup("column");
-}
+;}
     break;
 
   case 2258:
-
-/* Line 1806 of yacc.c  */
 #line 12632 "preproc.y"
     { 
  (yyval.str) = mm_strdup("constraint");
-}
+;}
     break;
 
   case 2259:
-
-/* Line 1806 of yacc.c  */
 #line 12636 "preproc.y"
     { 
  (yyval.str) = mm_strdup("create");
-}
+;}
     break;
 
   case 2260:
-
-/* Line 1806 of yacc.c  */
 #line 12640 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_catalog");
-}
+;}
     break;
 
   case 2261:
-
-/* Line 1806 of yacc.c  */
 #line 12644 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_date");
-}
+;}
     break;
 
   case 2262:
-
-/* Line 1806 of yacc.c  */
 #line 12648 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_role");
-}
+;}
     break;
 
   case 2263:
-
-/* Line 1806 of yacc.c  */
 #line 12652 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_time");
-}
+;}
     break;
 
   case 2264:
-
-/* Line 1806 of yacc.c  */
 #line 12656 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_timestamp");
-}
+;}
     break;
 
   case 2265:
-
-/* Line 1806 of yacc.c  */
 #line 12660 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_user");
-}
+;}
     break;
 
   case 2266:
-
-/* Line 1806 of yacc.c  */
 #line 12664 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 2267:
-
-/* Line 1806 of yacc.c  */
 #line 12668 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferrable");
-}
+;}
     break;
 
   case 2268:
-
-/* Line 1806 of yacc.c  */
 #line 12672 "preproc.y"
     { 
  (yyval.str) = mm_strdup("desc");
-}
+;}
     break;
 
   case 2269:
-
-/* Line 1806 of yacc.c  */
 #line 12676 "preproc.y"
     { 
  (yyval.str) = mm_strdup("distinct");
-}
+;}
     break;
 
   case 2270:
-
-/* Line 1806 of yacc.c  */
 #line 12680 "preproc.y"
     { 
  (yyval.str) = mm_strdup("do");
-}
+;}
     break;
 
   case 2271:
-
-/* Line 1806 of yacc.c  */
 #line 12684 "preproc.y"
     { 
  (yyval.str) = mm_strdup("else");
-}
+;}
     break;
 
   case 2272:
-
-/* Line 1806 of yacc.c  */
 #line 12688 "preproc.y"
     { 
  (yyval.str) = mm_strdup("end");
-}
+;}
     break;
 
   case 2273:
-
-/* Line 1806 of yacc.c  */
 #line 12692 "preproc.y"
     { 
  (yyval.str) = mm_strdup("except");
-}
+;}
     break;
 
   case 2274:
-
-/* Line 1806 of yacc.c  */
 #line 12696 "preproc.y"
     { 
  (yyval.str) = mm_strdup("false");
-}
+;}
     break;
 
   case 2275:
-
-/* Line 1806 of yacc.c  */
 #line 12700 "preproc.y"
     { 
  (yyval.str) = mm_strdup("fetch");
-}
+;}
     break;
 
   case 2276:
-
-/* Line 1806 of yacc.c  */
 #line 12704 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for");
-}
+;}
     break;
 
   case 2277:
-
-/* Line 1806 of yacc.c  */
 #line 12708 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign");
-}
+;}
     break;
 
   case 2278:
-
-/* Line 1806 of yacc.c  */
 #line 12712 "preproc.y"
     { 
  (yyval.str) = mm_strdup("from");
-}
+;}
     break;
 
   case 2279:
-
-/* Line 1806 of yacc.c  */
 #line 12716 "preproc.y"
     { 
  (yyval.str) = mm_strdup("grant");
-}
+;}
     break;
 
   case 2280:
-
-/* Line 1806 of yacc.c  */
 #line 12720 "preproc.y"
     { 
  (yyval.str) = mm_strdup("group");
-}
+;}
     break;
 
   case 2281:
-
-/* Line 1806 of yacc.c  */
 #line 12724 "preproc.y"
     { 
  (yyval.str) = mm_strdup("having");
-}
+;}
     break;
 
   case 2282:
-
-/* Line 1806 of yacc.c  */
 #line 12728 "preproc.y"
     { 
  (yyval.str) = mm_strdup("in");
-}
+;}
     break;
 
   case 2283:
-
-/* Line 1806 of yacc.c  */
 #line 12732 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially");
-}
+;}
     break;
 
   case 2284:
-
-/* Line 1806 of yacc.c  */
 #line 12736 "preproc.y"
     { 
  (yyval.str) = mm_strdup("intersect");
-}
+;}
     break;
 
   case 2285:
-
-/* Line 1806 of yacc.c  */
 #line 12740 "preproc.y"
     { 
  (yyval.str) = mm_strdup("into");
-}
+;}
     break;
 
   case 2286:
-
-/* Line 1806 of yacc.c  */
 #line 12744 "preproc.y"
     { 
  (yyval.str) = mm_strdup("lateral");
-}
+;}
     break;
 
   case 2287:
-
-/* Line 1806 of yacc.c  */
 #line 12748 "preproc.y"
     { 
  (yyval.str) = mm_strdup("leading");
-}
+;}
     break;
 
   case 2288:
-
-/* Line 1806 of yacc.c  */
 #line 12752 "preproc.y"
     { 
  (yyval.str) = mm_strdup("limit");
-}
+;}
     break;
 
   case 2289:
-
-/* Line 1806 of yacc.c  */
 #line 12756 "preproc.y"
     { 
  (yyval.str) = mm_strdup("localtime");
-}
+;}
     break;
 
   case 2290:
-
-/* Line 1806 of yacc.c  */
 #line 12760 "preproc.y"
     { 
  (yyval.str) = mm_strdup("localtimestamp");
-}
+;}
     break;
 
   case 2291:
-
-/* Line 1806 of yacc.c  */
 #line 12764 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not");
-}
+;}
     break;
 
   case 2292:
-
-/* Line 1806 of yacc.c  */
 #line 12768 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 2293:
-
-/* Line 1806 of yacc.c  */
 #line 12772 "preproc.y"
     { 
  (yyval.str) = mm_strdup("offset");
-}
+;}
     break;
 
   case 2294:
-
-/* Line 1806 of yacc.c  */
 #line 12776 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on");
-}
+;}
     break;
 
   case 2295:
-
-/* Line 1806 of yacc.c  */
 #line 12780 "preproc.y"
     { 
  (yyval.str) = mm_strdup("only");
-}
+;}
     break;
 
   case 2296:
-
-/* Line 1806 of yacc.c  */
 #line 12784 "preproc.y"
     { 
  (yyval.str) = mm_strdup("or");
-}
+;}
     break;
 
   case 2297:
-
-/* Line 1806 of yacc.c  */
 #line 12788 "preproc.y"
     { 
  (yyval.str) = mm_strdup("order");
-}
+;}
     break;
 
   case 2298:
-
-/* Line 1806 of yacc.c  */
 #line 12792 "preproc.y"
     { 
  (yyval.str) = mm_strdup("placing");
-}
+;}
     break;
 
   case 2299:
-
-/* Line 1806 of yacc.c  */
 #line 12796 "preproc.y"
     { 
  (yyval.str) = mm_strdup("primary");
-}
+;}
     break;
 
   case 2300:
-
-/* Line 1806 of yacc.c  */
 #line 12800 "preproc.y"
     { 
  (yyval.str) = mm_strdup("references");
-}
+;}
     break;
 
   case 2301:
-
-/* Line 1806 of yacc.c  */
 #line 12804 "preproc.y"
     { 
  (yyval.str) = mm_strdup("returning");
-}
+;}
     break;
 
   case 2302:
-
-/* Line 1806 of yacc.c  */
 #line 12808 "preproc.y"
     { 
  (yyval.str) = mm_strdup("select");
-}
+;}
     break;
 
   case 2303:
-
-/* Line 1806 of yacc.c  */
 #line 12812 "preproc.y"
     { 
  (yyval.str) = mm_strdup("session_user");
-}
+;}
     break;
 
   case 2304:
-
-/* Line 1806 of yacc.c  */
 #line 12816 "preproc.y"
     { 
  (yyval.str) = mm_strdup("some");
-}
+;}
     break;
 
   case 2305:
-
-/* Line 1806 of yacc.c  */
 #line 12820 "preproc.y"
     { 
  (yyval.str) = mm_strdup("symmetric");
-}
+;}
     break;
 
   case 2306:
-
-/* Line 1806 of yacc.c  */
 #line 12824 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 2307:
-
-/* Line 1806 of yacc.c  */
 #line 12828 "preproc.y"
     { 
  (yyval.str) = mm_strdup("then");
-}
+;}
     break;
 
   case 2308:
-
-/* Line 1806 of yacc.c  */
 #line 12832 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trailing");
-}
+;}
     break;
 
   case 2309:
-
-/* Line 1806 of yacc.c  */
 #line 12836 "preproc.y"
     { 
  (yyval.str) = mm_strdup("true");
-}
+;}
     break;
 
   case 2310:
-
-/* Line 1806 of yacc.c  */
 #line 12840 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unique");
-}
+;}
     break;
 
   case 2311:
-
-/* Line 1806 of yacc.c  */
 #line 12844 "preproc.y"
     { 
  (yyval.str) = mm_strdup("user");
-}
+;}
     break;
 
   case 2312:
-
-/* Line 1806 of yacc.c  */
 #line 12848 "preproc.y"
     { 
  (yyval.str) = mm_strdup("using");
-}
+;}
     break;
 
   case 2313:
-
-/* Line 1806 of yacc.c  */
 #line 12852 "preproc.y"
     { 
  (yyval.str) = mm_strdup("variadic");
-}
+;}
     break;
 
   case 2314:
-
-/* Line 1806 of yacc.c  */
 #line 12856 "preproc.y"
     { 
  (yyval.str) = mm_strdup("when");
-}
+;}
     break;
 
   case 2315:
-
-/* Line 1806 of yacc.c  */
 #line 12860 "preproc.y"
     { 
  (yyval.str) = mm_strdup("where");
-}
+;}
     break;
 
   case 2316:
-
-/* Line 1806 of yacc.c  */
 #line 12864 "preproc.y"
     { 
  (yyval.str) = mm_strdup("window");
-}
+;}
     break;
 
   case 2317:
-
-/* Line 1806 of yacc.c  */
 #line 12868 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with");
-}
+;}
     break;
 
   case 2320:
-
-/* Line 1806 of yacc.c  */
 #line 12881 "preproc.y"
-    { connection = NULL; }
+    { connection = NULL; ;}
     break;
 
   case 2322:
-
-/* Line 1806 of yacc.c  */
 #line 12884 "preproc.y"
     {
 					fprintf(yyout, "%s", (yyvsp[(2) - (2)].str));
 					free((yyvsp[(2) - (2)].str));
 					output_line_number();
-				}
+				;}
     break;
 
   case 2324:
-
-/* Line 1806 of yacc.c  */
 #line 12890 "preproc.y"
-    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); }
+    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 2325:
-
-/* Line 1806 of yacc.c  */
 #line 12891 "preproc.y"
-    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); }
+    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 2326:
-
-/* Line 1806 of yacc.c  */
 #line 12892 "preproc.y"
-    { braces_open++; fputs("{", yyout); }
+    { braces_open++; fputs("{", yyout); ;}
     break;
 
   case 2327:
-
-/* Line 1806 of yacc.c  */
 #line 12894 "preproc.y"
     {
 			remove_typedefs(braces_open);
@@ -48984,31 +44773,25 @@
 				current_function = NULL;
 			}
 			fputs("}", yyout);
-		}
+		;}
     break;
 
   case 2328:
-
-/* Line 1806 of yacc.c  */
 #line 12906 "preproc.y"
-    {FoundInto = 0;}
+    {FoundInto = 0;;}
     break;
 
   case 2329:
-
-/* Line 1806 of yacc.c  */
 #line 12907 "preproc.y"
     {
 			if (FoundInto == 1)
 				mmerror(PARSE_ERROR, ET_ERROR, "CREATE TABLE AS cannot specify INTO");
 
 			(yyval.str) = cat_str(6, mm_strdup("create"), (yyvsp[(2) - (8)].str), mm_strdup("table"), (yyvsp[(4) - (8)].str), mm_strdup("as"), (yyvsp[(7) - (8)].str));
-		}
+		;}
     break;
 
   case 2330:
-
-/* Line 1806 of yacc.c  */
 #line 12916 "preproc.y"
     {
 			connection = (yyvsp[(2) - (2)].str);
@@ -49018,40 +44801,30 @@
 			 */
 			if (argsinsert != NULL)
 				argsinsert = NULL;
-		}
+		;}
     break;
 
   case 2331:
-
-/* Line 1806 of yacc.c  */
 #line 12931 "preproc.y"
-    { (yyval.str) = cat_str(5, (yyvsp[(3) - (5)].str), mm_strdup(","), (yyvsp[(5) - (5)].str), mm_strdup(","), (yyvsp[(4) - (5)].str)); }
+    { (yyval.str) = cat_str(5, (yyvsp[(3) - (5)].str), mm_strdup(","), (yyvsp[(5) - (5)].str), mm_strdup(","), (yyvsp[(4) - (5)].str)); ;}
     break;
 
   case 2332:
-
-/* Line 1806 of yacc.c  */
 #line 12933 "preproc.y"
-    { (yyval.str) = mm_strdup("NULL, NULL, NULL, \"DEFAULT\""); }
+    { (yyval.str) = mm_strdup("NULL, NULL, NULL, \"DEFAULT\""); ;}
     break;
 
   case 2333:
-
-/* Line 1806 of yacc.c  */
 #line 12936 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("NULL,"), (yyvsp[(2) - (2)].str), mm_strdup(", NULL")); }
+    { (yyval.str) = cat_str(3, mm_strdup("NULL,"), (yyvsp[(2) - (2)].str), mm_strdup(", NULL")); ;}
     break;
 
   case 2334:
-
-/* Line 1806 of yacc.c  */
 #line 12938 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(2) - (2)].str), mm_strdup(", NULL, NULL, NULL")); }
+    { (yyval.str) = cat2_str((yyvsp[(2) - (2)].str), mm_strdup(", NULL, NULL, NULL")); ;}
     break;
 
   case 2335:
-
-/* Line 1806 of yacc.c  */
 #line 12942 "preproc.y"
     {
 			/* old style: dbname[@server][:port] */
@@ -49063,12 +44836,10 @@
 				(yyval.str) = (yyvsp[(1) - (3)].str);
 			else
 				(yyval.str) = make3_str(mm_strdup("\""), make3_str((yyvsp[(1) - (3)].str), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str)), mm_strdup("\""));
-		}
+		;}
     break;
 
   case 2336:
-
-/* Line 1806 of yacc.c  */
 #line 12954 "preproc.y"
     {
 			/* new style: <tcp|unix>:postgresql://server[:port][/dbname] */
@@ -49084,21 +44855,17 @@
 				mmerror(PARSE_ERROR, ET_ERROR, "Unix-domain sockets only work on \"localhost\" but not on \"%s\"", (yyvsp[(3) - (7)].str) + strlen("//"));
 
 			(yyval.str) = make3_str(make3_str(mm_strdup("\""), (yyvsp[(1) - (7)].str), mm_strdup(":")), (yyvsp[(3) - (7)].str), make3_str(make3_str((yyvsp[(4) - (7)].str), mm_strdup("/"), (yyvsp[(6) - (7)].str)),	(yyvsp[(7) - (7)].str), mm_strdup("\"")));
-		}
+		;}
     break;
 
   case 2337:
-
-/* Line 1806 of yacc.c  */
 #line 12970 "preproc.y"
     {
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2338:
-
-/* Line 1806 of yacc.c  */
 #line 12974 "preproc.y"
     {
 			/* We can only process double quoted strings not single quotes ones,
@@ -49107,26 +44874,20 @@
 			(yyvsp[(1) - (1)].str)[0] = '\"';
 			(yyvsp[(1) - (1)].str)[strlen((yyvsp[(1) - (1)].str))-1] = '\"';
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2339:
-
-/* Line 1806 of yacc.c  */
 #line 12984 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2340:
-
-/* Line 1806 of yacc.c  */
 #line 12985 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2341:
-
-/* Line 1806 of yacc.c  */
 #line 12989 "preproc.y"
     {
 			if (strcmp((yyvsp[(2) - (2)].str), "postgresql") != 0 && strcmp((yyvsp[(2) - (2)].str), "postgres") != 0)
@@ -49136,153 +44897,115 @@
 				mmerror(PARSE_ERROR, ET_ERROR, "invalid connection type: %s", (yyvsp[(1) - (2)].str));
 
 			(yyval.str) = make3_str((yyvsp[(1) - (2)].str), mm_strdup(":"), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2342:
-
-/* Line 1806 of yacc.c  */
 #line 13001 "preproc.y"
     {
 			if (strcmp((yyvsp[(1) - (2)].str), "@") != 0 && strcmp((yyvsp[(1) - (2)].str), "//") != 0)
 				mmerror(PARSE_ERROR, ET_ERROR, "expected \"@\" or \"://\", found \"%s\"", (yyvsp[(1) - (2)].str));
 
 			(yyval.str) = make2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2343:
-
-/* Line 1806 of yacc.c  */
 #line 13009 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2344:
-
-/* Line 1806 of yacc.c  */
 #line 13010 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2345:
-
-/* Line 1806 of yacc.c  */
 #line 13013 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2346:
-
-/* Line 1806 of yacc.c  */
 #line 13014 "preproc.y"
-    { (yyval.str) = make3_str((yyvsp[(1) - (3)].str), mm_strdup("."), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = make3_str((yyvsp[(1) - (3)].str), mm_strdup("."), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2347:
-
-/* Line 1806 of yacc.c  */
 #line 13015 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2348:
-
-/* Line 1806 of yacc.c  */
 #line 13018 "preproc.y"
-    { (yyval.str) = make2_str(mm_strdup(":"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(mm_strdup(":"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2349:
-
-/* Line 1806 of yacc.c  */
 #line 13019 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2350:
-
-/* Line 1806 of yacc.c  */
 #line 13022 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2351:
-
-/* Line 1806 of yacc.c  */
 #line 13023 "preproc.y"
-    { (yyval.str) = mm_strdup("NULL"); }
+    { (yyval.str) = mm_strdup("NULL"); ;}
     break;
 
   case 2352:
-
-/* Line 1806 of yacc.c  */
 #line 13026 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2353:
-
-/* Line 1806 of yacc.c  */
 #line 13027 "preproc.y"
-    { (yyval.str) = mm_strdup("NULL, NULL"); }
+    { (yyval.str) = mm_strdup("NULL, NULL"); ;}
     break;
 
   case 2354:
-
-/* Line 1806 of yacc.c  */
 #line 13031 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (1)].str), mm_strdup(", NULL")); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (1)].str), mm_strdup(", NULL")); ;}
     break;
 
   case 2355:
-
-/* Line 1806 of yacc.c  */
 #line 13033 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2356:
-
-/* Line 1806 of yacc.c  */
 #line 13035 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (4)].str), mm_strdup(","), (yyvsp[(4) - (4)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (4)].str), mm_strdup(","), (yyvsp[(4) - (4)].str)); ;}
     break;
 
   case 2357:
-
-/* Line 1806 of yacc.c  */
 #line 13037 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2358:
-
-/* Line 1806 of yacc.c  */
 #line 13041 "preproc.y"
     {
 			if ((yyvsp[(1) - (1)].str)[0] == '\"')
 				(yyval.str) = (yyvsp[(1) - (1)].str);
 			else
 				(yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\""));
-		}
+		;}
     break;
 
   case 2359:
-
-/* Line 1806 of yacc.c  */
 #line 13048 "preproc.y"
     {
 			if ((yyvsp[(1) - (1)].str)[0] == '\"')
 				(yyval.str) = (yyvsp[(1) - (1)].str);
 			else
 				(yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\""));
-		}
+		;}
     break;
 
   case 2360:
-
-/* Line 1806 of yacc.c  */
 #line 13055 "preproc.y"
     {
 			enum ECPGttype type = argsinsert->variable->type->type;
@@ -49296,12 +45019,10 @@
 				(yyval.str) = make2_str(mm_strdup(argsinsert->variable->name), mm_strdup(".arr"));
 			else
 				(yyval.str) = mm_strdup(argsinsert->variable->name);
-		}
+		;}
     break;
 
   case 2361:
-
-/* Line 1806 of yacc.c  */
 #line 13071 "preproc.y"
     {
 			/* check if we have a string variable */
@@ -49333,12 +45054,10 @@
 						break;
 				}
 			}
-		}
+		;}
     break;
 
   case 2362:
-
-/* Line 1806 of yacc.c  */
 #line 13105 "preproc.y"
     {
 			if (strlen((yyvsp[(1) - (2)].str)) == 0)
@@ -49348,28 +45067,22 @@
 				mmerror(PARSE_ERROR, ET_ERROR, "unrecognized token \"%s\"", (yyvsp[(1) - (2)].str));
 
 			(yyval.str) = make2_str(mm_strdup("?"), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2363:
-
-/* Line 1806 of yacc.c  */
 #line 13114 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2364:
-
-/* Line 1806 of yacc.c  */
 #line 13118 "preproc.y"
     {
 				(yyval.str) = make2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str));
-			}
+			;}
     break;
 
   case 2365:
-
-/* Line 1806 of yacc.c  */
 #line 13122 "preproc.y"
     {
 				if (strlen((yyvsp[(3) - (4)].str)) == 0)
@@ -49379,40 +45092,30 @@
 					mmerror(PARSE_ERROR, ET_ERROR, "unrecognized token \"%s\"", (yyvsp[(3) - (4)].str));
 
 				(yyval.str) = cat_str(3, make2_str((yyvsp[(1) - (4)].str), (yyvsp[(2) - (4)].str)), (yyvsp[(3) - (4)].str), (yyvsp[(4) - (4)].str));
-			}
+			;}
     break;
 
   case 2366:
-
-/* Line 1806 of yacc.c  */
 #line 13134 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2367:
-
-/* Line 1806 of yacc.c  */
 #line 13136 "preproc.y"
-    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2368:
-
-/* Line 1806 of yacc.c  */
 #line 13138 "preproc.y"
-    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2369:
-
-/* Line 1806 of yacc.c  */
 #line 13140 "preproc.y"
-    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2370:
-
-/* Line 1806 of yacc.c  */
 #line 13144 "preproc.y"
     {
 			if ((yyvsp[(1) - (1)].str)[0] == '\"' && (yyvsp[(1) - (1)].str)[strlen((yyvsp[(1) - (1)].str))-1] == '\"') /* already quoted? */
@@ -49426,19 +45129,15 @@
 
 				(yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\""));
 			}
-		}
+		;}
     break;
 
   case 2371:
-
-/* Line 1806 of yacc.c  */
 #line 13157 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2372:
-
-/* Line 1806 of yacc.c  */
 #line 13165 "preproc.y"
     {
 			struct cursor *ptr, *this;
@@ -49497,192 +45196,142 @@
 					comment);
 			else
 				(yyval.str) = cat2_str(adjust_outofscope_cursor_vars(this), comment);
-		}
+		;}
     break;
 
   case 2373:
-
-/* Line 1806 of yacc.c  */
 #line 13226 "preproc.y"
     {
 			  /* execute immediate means prepare the statement and
 			   * immediately execute it */
 			  (yyval.str) = (yyvsp[(3) - (3)].str);
-			}
+			;}
     break;
 
   case 2375:
-
-/* Line 1806 of yacc.c  */
 #line 13236 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2376:
-
-/* Line 1806 of yacc.c  */
 #line 13237 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2377:
-
-/* Line 1806 of yacc.c  */
 #line 13240 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2378:
-
-/* Line 1806 of yacc.c  */
 #line 13242 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2379:
-
-/* Line 1806 of yacc.c  */
 #line 13243 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2380:
-
-/* Line 1806 of yacc.c  */
 #line 13246 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2381:
-
-/* Line 1806 of yacc.c  */
 #line 13247 "preproc.y"
-    { (yyval.str) = mm_strdup("year to minute"); }
+    { (yyval.str) = mm_strdup("year to minute"); ;}
     break;
 
   case 2382:
-
-/* Line 1806 of yacc.c  */
 #line 13248 "preproc.y"
-    { (yyval.str) = mm_strdup("year to second"); }
+    { (yyval.str) = mm_strdup("year to second"); ;}
     break;
 
   case 2383:
-
-/* Line 1806 of yacc.c  */
 #line 13249 "preproc.y"
-    { (yyval.str) = mm_strdup("day to day"); }
+    { (yyval.str) = mm_strdup("day to day"); ;}
     break;
 
   case 2384:
-
-/* Line 1806 of yacc.c  */
 #line 13250 "preproc.y"
-    { (yyval.str) = mm_strdup("month to month"); }
+    { (yyval.str) = mm_strdup("month to month"); ;}
     break;
 
   case 2385:
-
-/* Line 1806 of yacc.c  */
 #line 13257 "preproc.y"
-    { fputs("/* exec sql begin declare section */", yyout); }
+    { fputs("/* exec sql begin declare section */", yyout); ;}
     break;
 
   case 2386:
-
-/* Line 1806 of yacc.c  */
 #line 13259 "preproc.y"
     {
 			fprintf(yyout, "%s/* exec sql end declare section */", (yyvsp[(3) - (4)].str));
 			free((yyvsp[(3) - (4)].str));
 			output_line_number();
-		}
+		;}
     break;
 
   case 2387:
-
-/* Line 1806 of yacc.c  */
 #line 13266 "preproc.y"
-    {}
+    {;}
     break;
 
   case 2388:
-
-/* Line 1806 of yacc.c  */
 #line 13268 "preproc.y"
-    {}
+    {;}
     break;
 
   case 2389:
-
-/* Line 1806 of yacc.c  */
 #line 13270 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2390:
-
-/* Line 1806 of yacc.c  */
 #line 13271 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2391:
-
-/* Line 1806 of yacc.c  */
 #line 13274 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2392:
-
-/* Line 1806 of yacc.c  */
 #line 13275 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2393:
-
-/* Line 1806 of yacc.c  */
 #line 13276 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2394:
-
-/* Line 1806 of yacc.c  */
 #line 13277 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2395:
-
-/* Line 1806 of yacc.c  */
 #line 13280 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2396:
-
-/* Line 1806 of yacc.c  */
 #line 13281 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2397:
-
-/* Line 1806 of yacc.c  */
 #line 13285 "preproc.y"
     {
 		/* reset this variable so we see if there was */
 		/* an initializer specified */
 		initializer = 0;
-	}
+	;}
     break;
 
   case 2398:
-
-/* Line 1806 of yacc.c  */
 #line 13291 "preproc.y"
     {
 		add_typedef((yyvsp[(5) - (7)].str), (yyvsp[(6) - (7)].index).index1, (yyvsp[(6) - (7)].index).index2, (yyvsp[(3) - (7)].type).type_enum, (yyvsp[(3) - (7)].type).type_dimension, (yyvsp[(3) - (7)].type).type_index, initializer, *(yyvsp[(4) - (7)].str) ? 1 : 0);
@@ -49690,12 +45339,10 @@
 		fprintf(yyout, "typedef %s %s %s %s;\n", (yyvsp[(3) - (7)].type).type_str, *(yyvsp[(4) - (7)].str) ? "*" : "", (yyvsp[(5) - (7)].str), (yyvsp[(6) - (7)].index).str);
 		output_line_number();
 		(yyval.str) = mm_strdup("");
-	}
+	;}
     break;
 
   case 2399:
-
-/* Line 1806 of yacc.c  */
 #line 13301 "preproc.y"
     {
 			actual_type[struct_level].type_enum = (yyvsp[(2) - (2)].type).type_enum;
@@ -49705,21 +45352,17 @@
 			actual_type[struct_level].type_sizeof = (yyvsp[(2) - (2)].type).type_sizeof;
 
 			actual_startline[struct_level] = hashline_number();
-		}
+		;}
     break;
 
   case 2400:
-
-/* Line 1806 of yacc.c  */
 #line 13311 "preproc.y"
     {
 			(yyval.str) = cat_str(5, actual_startline[struct_level], (yyvsp[(1) - (5)].str), (yyvsp[(2) - (5)].type).type_str, (yyvsp[(4) - (5)].str), mm_strdup(";\n"));
-		}
+		;}
     break;
 
   case 2401:
-
-/* Line 1806 of yacc.c  */
 #line 13315 "preproc.y"
     {
 			actual_type[struct_level].type_enum = (yyvsp[(1) - (1)].type).type_enum;
@@ -49729,107 +45372,79 @@
 			actual_type[struct_level].type_sizeof = (yyvsp[(1) - (1)].type).type_sizeof;
 
 			actual_startline[struct_level] = hashline_number();
-		}
+		;}
     break;
 
   case 2402:
-
-/* Line 1806 of yacc.c  */
 #line 13325 "preproc.y"
     {
 			(yyval.str) = cat_str(4, actual_startline[struct_level], (yyvsp[(1) - (4)].type).type_str, (yyvsp[(3) - (4)].str), mm_strdup(";\n"));
-		}
+		;}
     break;
 
   case 2403:
-
-/* Line 1806 of yacc.c  */
 #line 13329 "preproc.y"
     {
 			(yyval.str) = cat2_str((yyvsp[(1) - (2)].str), mm_strdup(";"));
-		}
+		;}
     break;
 
   case 2404:
-
-/* Line 1806 of yacc.c  */
 #line 13334 "preproc.y"
-    { (yyval.str) =cat2_str(mm_strdup(":"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) =cat2_str(mm_strdup(":"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2405:
-
-/* Line 1806 of yacc.c  */
 #line 13335 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2406:
-
-/* Line 1806 of yacc.c  */
 #line 13339 "preproc.y"
-    {(yyval.str) = cat2_str ((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    {(yyval.str) = cat2_str ((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2407:
-
-/* Line 1806 of yacc.c  */
 #line 13340 "preproc.y"
-    {(yyval.str) = (yyvsp[(1) - (1)].str); }
+    {(yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2408:
-
-/* Line 1806 of yacc.c  */
 #line 13341 "preproc.y"
-    {(yyval.str) = (yyvsp[(1) - (1)].str); }
+    {(yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2409:
-
-/* Line 1806 of yacc.c  */
 #line 13344 "preproc.y"
-    { (yyval.str) = mm_strdup("extern"); }
+    { (yyval.str) = mm_strdup("extern"); ;}
     break;
 
   case 2410:
-
-/* Line 1806 of yacc.c  */
 #line 13345 "preproc.y"
-    { (yyval.str) = mm_strdup("static"); }
+    { (yyval.str) = mm_strdup("static"); ;}
     break;
 
   case 2411:
-
-/* Line 1806 of yacc.c  */
 #line 13346 "preproc.y"
-    { (yyval.str) = mm_strdup("register"); }
+    { (yyval.str) = mm_strdup("register"); ;}
     break;
 
   case 2412:
-
-/* Line 1806 of yacc.c  */
 #line 13347 "preproc.y"
-    { (yyval.str) = mm_strdup("auto"); }
+    { (yyval.str) = mm_strdup("auto"); ;}
     break;
 
   case 2413:
-
-/* Line 1806 of yacc.c  */
 #line 13350 "preproc.y"
-    { (yyval.str) = mm_strdup("const"); }
+    { (yyval.str) = mm_strdup("const"); ;}
     break;
 
   case 2414:
-
-/* Line 1806 of yacc.c  */
 #line 13351 "preproc.y"
-    { (yyval.str) = mm_strdup("volatile"); }
+    { (yyval.str) = mm_strdup("volatile"); ;}
     break;
 
   case 2415:
-
-/* Line 1806 of yacc.c  */
 #line 13355 "preproc.y"
     {
 			(yyval.type).type_enum = (yyvsp[(1) - (1)].type_enum);
@@ -49837,12 +45452,10 @@
 			(yyval.type).type_dimension = mm_strdup("-1");
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
-		}
+		;}
     break;
 
   case 2416:
-
-/* Line 1806 of yacc.c  */
 #line 13363 "preproc.y"
     {
 			(yyval.type).type_str = (yyvsp[(1) - (1)].str);
@@ -49859,12 +45472,10 @@
 				(yyval.type).type_enum = ECPGt_union;
 				(yyval.type).type_sizeof = NULL;
 			}
-		}
+		;}
     break;
 
   case 2417:
-
-/* Line 1806 of yacc.c  */
 #line 13380 "preproc.y"
     {
 			(yyval.type).type_str = (yyvsp[(1) - (1)].str);
@@ -49872,12 +45483,10 @@
 			(yyval.type).type_dimension = mm_strdup("-1");
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
-		}
+		;}
     break;
 
   case 2418:
-
-/* Line 1806 of yacc.c  */
 #line 13388 "preproc.y"
     {
 			if (strcmp((yyvsp[(1) - (5)].str), "numeric") == 0)
@@ -49900,12 +45509,10 @@
 			(yyval.type).type_dimension = mm_strdup("-1");
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
-		}
+		;}
     break;
 
   case 2419:
-
-/* Line 1806 of yacc.c  */
 #line 13411 "preproc.y"
     {
 			if (strlen((yyvsp[(2) - (2)].str)) != 0 && strcmp ((yyvsp[(1) - (2)].str), "datetime") != 0 && strcmp ((yyvsp[(1) - (2)].str), "interval") != 0)
@@ -50011,12 +45618,10 @@
 
 				struct_member_list[struct_level] = ECPGstruct_member_dup(this->struct_member_list);
 			}
-		}
+		;}
     break;
 
   case 2420:
-
-/* Line 1806 of yacc.c  */
 #line 13517 "preproc.y"
     {
 			/* this is for named structs/unions */
@@ -50048,52 +45653,40 @@
 				(yyval.type).type_sizeof = mm_strdup("");
 				struct_member_list[struct_level] = NULL;
 			}
-		}
+		;}
     break;
 
   case 2421:
-
-/* Line 1806 of yacc.c  */
 #line 13551 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("enum"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, mm_strdup("enum"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2422:
-
-/* Line 1806 of yacc.c  */
 #line 13553 "preproc.y"
-    { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2423:
-
-/* Line 1806 of yacc.c  */
 #line 13555 "preproc.y"
-    { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2424:
-
-/* Line 1806 of yacc.c  */
 #line 13559 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[(2) - (3)].str), mm_strdup("}")); }
+    { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[(2) - (3)].str), mm_strdup("}")); ;}
     break;
 
   case 2425:
-
-/* Line 1806 of yacc.c  */
 #line 13562 "preproc.y"
     {
 			struct_member_list[struct_level++] = NULL;
 			if (struct_level >= STRUCT_DEPTH)
 				 mmerror(PARSE_ERROR, ET_ERROR, "too many levels in nested structure/union definition");
 			forward_name = mm_strdup((yyvsp[(1) - (1)].struct_union).symbol);
-		}
+		;}
     break;
 
   case 2426:
-
-/* Line 1806 of yacc.c  */
 #line 13569 "preproc.y"
     {
 			struct typedefs *ptr, *this;
@@ -50135,138 +45728,106 @@
 
 			types = this;
 			(yyval.str) = cat_str(4, su_type.type_str, mm_strdup("{"), (yyvsp[(4) - (5)].str), mm_strdup("}"));
-		}
+		;}
     break;
 
   case 2427:
-
-/* Line 1806 of yacc.c  */
 #line 13612 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2428:
-
-/* Line 1806 of yacc.c  */
 #line 13614 "preproc.y"
     {
 			struct_member_list[struct_level++] = NULL;
 			if (struct_level >= STRUCT_DEPTH)
 				 mmerror(PARSE_ERROR, ET_ERROR, "too many levels in nested structure/union definition");
-		}
+		;}
     break;
 
   case 2429:
-
-/* Line 1806 of yacc.c  */
 #line 13620 "preproc.y"
     {
 			ECPGfree_struct_member(struct_member_list[struct_level]);
 			struct_member_list[struct_level] = NULL;
 			struct_level--;
 			(yyval.str) = cat_str(4, (yyvsp[(1) - (5)].str), mm_strdup("{"), (yyvsp[(4) - (5)].str), mm_strdup("}"));
-		}
+		;}
     break;
 
   case 2430:
-
-/* Line 1806 of yacc.c  */
 #line 13629 "preproc.y"
     {
 			(yyval.struct_union).su = mm_strdup("struct");
 			(yyval.struct_union).symbol = (yyvsp[(2) - (2)].str);
 			ECPGstruct_sizeof = cat_str(3, mm_strdup("sizeof("), cat2_str(mm_strdup((yyval.struct_union).su), mm_strdup((yyval.struct_union).symbol)), mm_strdup(")"));
-		}
+		;}
     break;
 
   case 2431:
-
-/* Line 1806 of yacc.c  */
 #line 13635 "preproc.y"
     {
 			(yyval.struct_union).su = mm_strdup("union");
 			(yyval.struct_union).symbol = (yyvsp[(2) - (2)].str);
-		}
+		;}
     break;
 
   case 2432:
-
-/* Line 1806 of yacc.c  */
 #line 13642 "preproc.y"
     {
 			ECPGstruct_sizeof = mm_strdup(""); /* This must not be NULL to distinguish from simple types. */
 			(yyval.str) = mm_strdup("struct");
-		}
+		;}
     break;
 
   case 2433:
-
-/* Line 1806 of yacc.c  */
 #line 13647 "preproc.y"
     {
 			(yyval.str) = mm_strdup("union");
-		}
+		;}
     break;
 
   case 2434:
-
-/* Line 1806 of yacc.c  */
 #line 13652 "preproc.y"
-    { (yyval.type_enum)=(yyvsp[(1) - (1)].type_enum); }
+    { (yyval.type_enum)=(yyvsp[(1) - (1)].type_enum); ;}
     break;
 
   case 2435:
-
-/* Line 1806 of yacc.c  */
 #line 13653 "preproc.y"
-    { (yyval.type_enum)=(yyvsp[(2) - (2)].type_enum); }
+    { (yyval.type_enum)=(yyvsp[(2) - (2)].type_enum); ;}
     break;
 
   case 2436:
-
-/* Line 1806 of yacc.c  */
 #line 13656 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_short; }
+    { (yyval.type_enum) = ECPGt_unsigned_short; ;}
     break;
 
   case 2437:
-
-/* Line 1806 of yacc.c  */
 #line 13657 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_short; }
+    { (yyval.type_enum) = ECPGt_unsigned_short; ;}
     break;
 
   case 2438:
-
-/* Line 1806 of yacc.c  */
 #line 13658 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_int; }
+    { (yyval.type_enum) = ECPGt_unsigned_int; ;}
     break;
 
   case 2439:
-
-/* Line 1806 of yacc.c  */
 #line 13659 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_int; }
+    { (yyval.type_enum) = ECPGt_unsigned_int; ;}
     break;
 
   case 2440:
-
-/* Line 1806 of yacc.c  */
 #line 13660 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_long; }
+    { (yyval.type_enum) = ECPGt_unsigned_long; ;}
     break;
 
   case 2441:
-
-/* Line 1806 of yacc.c  */
 #line 13661 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_long; }
+    { (yyval.type_enum) = ECPGt_unsigned_long; ;}
     break;
 
   case 2442:
-
-/* Line 1806 of yacc.c  */
 #line 13663 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -50274,12 +45835,10 @@
 #else
 			(yyval.type_enum) = ECPGt_unsigned_long;
 #endif
-		}
+		;}
     break;
 
   case 2443:
-
-/* Line 1806 of yacc.c  */
 #line 13671 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -50287,54 +45846,40 @@
 #else
 			(yyval.type_enum) = ECPGt_unsigned_long;
 #endif
-		}
+		;}
     break;
 
   case 2444:
-
-/* Line 1806 of yacc.c  */
 #line 13678 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_char; }
+    { (yyval.type_enum) = ECPGt_unsigned_char; ;}
     break;
 
   case 2445:
-
-/* Line 1806 of yacc.c  */
 #line 13681 "preproc.y"
-    { (yyval.type_enum) = ECPGt_short; }
+    { (yyval.type_enum) = ECPGt_short; ;}
     break;
 
   case 2446:
-
-/* Line 1806 of yacc.c  */
 #line 13682 "preproc.y"
-    { (yyval.type_enum) = ECPGt_short; }
+    { (yyval.type_enum) = ECPGt_short; ;}
     break;
 
   case 2447:
-
-/* Line 1806 of yacc.c  */
 #line 13683 "preproc.y"
-    { (yyval.type_enum) = ECPGt_int; }
+    { (yyval.type_enum) = ECPGt_int; ;}
     break;
 
   case 2448:
-
-/* Line 1806 of yacc.c  */
 #line 13684 "preproc.y"
-    { (yyval.type_enum) = ECPGt_long; }
+    { (yyval.type_enum) = ECPGt_long; ;}
     break;
 
   case 2449:
-
-/* Line 1806 of yacc.c  */
 #line 13685 "preproc.y"
-    { (yyval.type_enum) = ECPGt_long; }
+    { (yyval.type_enum) = ECPGt_long; ;}
     break;
 
   case 2450:
-
-/* Line 1806 of yacc.c  */
 #line 13687 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -50342,12 +45887,10 @@
 #else
 			(yyval.type_enum) = ECPGt_long;
 #endif
-		}
+		;}
     break;
 
   case 2451:
-
-/* Line 1806 of yacc.c  */
 #line 13695 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -50355,52 +45898,40 @@
 #else
 			(yyval.type_enum) = ECPGt_long;
 #endif
-		}
+		;}
     break;
 
   case 2452:
-
-/* Line 1806 of yacc.c  */
 #line 13702 "preproc.y"
-    { (yyval.type_enum) = ECPGt_bool; }
+    { (yyval.type_enum) = ECPGt_bool; ;}
     break;
 
   case 2453:
-
-/* Line 1806 of yacc.c  */
 #line 13703 "preproc.y"
-    { (yyval.type_enum) = ECPGt_char; }
+    { (yyval.type_enum) = ECPGt_char; ;}
     break;
 
   case 2454:
-
-/* Line 1806 of yacc.c  */
 #line 13704 "preproc.y"
-    { (yyval.type_enum) = ECPGt_double; }
+    { (yyval.type_enum) = ECPGt_double; ;}
     break;
 
   case 2457:
-
-/* Line 1806 of yacc.c  */
 #line 13712 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2458:
-
-/* Line 1806 of yacc.c  */
 #line 13714 "preproc.y"
     {
 			if (actual_type[struct_level].type_enum == ECPGt_varchar)
 				(yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(";"), (yyvsp[(3) - (3)].str));
 			else
 				(yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str));
-		}
+		;}
     break;
 
   case 2459:
-
-/* Line 1806 of yacc.c  */
 #line 13723 "preproc.y"
     {
 			struct ECPGtype * type;
@@ -50485,334 +46016,250 @@
 				ECPGmake_struct_member((yyvsp[(2) - (5)].str), type, &(struct_member_list[struct_level - 1]));
 
 			free((yyvsp[(2) - (5)].str));
-		}
+		;}
     break;
 
   case 2460:
-
-/* Line 1806 of yacc.c  */
 #line 13810 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2461:
-
-/* Line 1806 of yacc.c  */
 #line 13812 "preproc.y"
     {
 			initializer = 1;
 			(yyval.str) = cat2_str(mm_strdup("="), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2462:
-
-/* Line 1806 of yacc.c  */
 #line 13818 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2463:
-
-/* Line 1806 of yacc.c  */
 #line 13819 "preproc.y"
-    { (yyval.str) = mm_strdup("*"); }
+    { (yyval.str) = mm_strdup("*"); ;}
     break;
 
   case 2464:
-
-/* Line 1806 of yacc.c  */
 #line 13820 "preproc.y"
-    { (yyval.str) = mm_strdup("**"); }
+    { (yyval.str) = mm_strdup("**"); ;}
     break;
 
   case 2465:
-
-/* Line 1806 of yacc.c  */
 #line 13827 "preproc.y"
     {
 			/* this is only supported for compatibility */
 			(yyval.str) = cat_str(3, mm_strdup("/* declare statement"), (yyvsp[(3) - (3)].str), mm_strdup("*/"));
-		}
+		;}
     break;
 
   case 2466:
-
-/* Line 1806 of yacc.c  */
 #line 13835 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2467:
-
-/* Line 1806 of yacc.c  */
 #line 13838 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2468:
-
-/* Line 1806 of yacc.c  */
 #line 13839 "preproc.y"
-    { (yyval.str) = mm_strdup("\"CURRENT\""); }
+    { (yyval.str) = mm_strdup("\"CURRENT\""); ;}
     break;
 
   case 2469:
-
-/* Line 1806 of yacc.c  */
 #line 13840 "preproc.y"
-    { (yyval.str) = mm_strdup("\"ALL\""); }
+    { (yyval.str) = mm_strdup("\"ALL\""); ;}
     break;
 
   case 2470:
-
-/* Line 1806 of yacc.c  */
 #line 13841 "preproc.y"
-    { (yyval.str) = mm_strdup("\"CURRENT\""); }
+    { (yyval.str) = mm_strdup("\"CURRENT\""); ;}
     break;
 
   case 2471:
-
-/* Line 1806 of yacc.c  */
 #line 13844 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); }
+    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); ;}
     break;
 
   case 2472:
-
-/* Line 1806 of yacc.c  */
 #line 13845 "preproc.y"
-    { (yyval.str) = mm_strdup("\"DEFAULT\""); }
+    { (yyval.str) = mm_strdup("\"DEFAULT\""); ;}
     break;
 
   case 2473:
-
-/* Line 1806 of yacc.c  */
 #line 13846 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2474:
-
-/* Line 1806 of yacc.c  */
 #line 13850 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2475:
-
-/* Line 1806 of yacc.c  */
 #line 13852 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); }
+    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); ;}
     break;
 
   case 2476:
-
-/* Line 1806 of yacc.c  */
 #line 13859 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2477:
-
-/* Line 1806 of yacc.c  */
 #line 13860 "preproc.y"
-    { (yyval.str) = mm_strdup("all"); }
+    { (yyval.str) = mm_strdup("all"); ;}
     break;
 
   case 2478:
-
-/* Line 1806 of yacc.c  */
 #line 13867 "preproc.y"
     {
 			if ((yyvsp[(2) - (3)].str)[0] == ':')
 				remove_variable_from_list(&argsinsert, find_variable((yyvsp[(2) - (3)].str) + 1));
 			(yyval.str) = (yyvsp[(2) - (3)].str);
-		}
+		;}
     break;
 
   case 2479:
-
-/* Line 1806 of yacc.c  */
 #line 13874 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2480:
-
-/* Line 1806 of yacc.c  */
 #line 13875 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2481:
-
-/* Line 1806 of yacc.c  */
 #line 13878 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2482:
-
-/* Line 1806 of yacc.c  */
 #line 13879 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2483:
-
-/* Line 1806 of yacc.c  */
 #line 13883 "preproc.y"
     {
 			add_variable_to_head(&argsinsert, descriptor_variable((yyvsp[(4) - (4)].str),0), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2484:
-
-/* Line 1806 of yacc.c  */
 #line 13888 "preproc.y"
     {
 			add_variable_to_head(&argsinsert, sqlda_variable((yyvsp[(3) - (3)].str)), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2485:
-
-/* Line 1806 of yacc.c  */
 #line 13895 "preproc.y"
     {
 			add_variable_to_head(&argsresult, descriptor_variable((yyvsp[(4) - (4)].str),1), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2486:
-
-/* Line 1806 of yacc.c  */
 #line 13900 "preproc.y"
     {
 			add_variable_to_head(&argsresult, sqlda_variable((yyvsp[(3) - (3)].str)), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2487:
-
-/* Line 1806 of yacc.c  */
 #line 13907 "preproc.y"
     {
 			add_variable_to_head(&argsresult, sqlda_variable((yyvsp[(2) - (2)].str)), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2490:
-
-/* Line 1806 of yacc.c  */
 #line 13916 "preproc.y"
     {
 			char *length = mm_alloc(32);
 
 			sprintf(length, "%d", (int) strlen((yyvsp[(1) - (1)].str)));
 			add_variable_to_head(&argsinsert, new_variable((yyvsp[(1) - (1)].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0), &no_indicator);
-		}
+		;}
     break;
 
   case 2491:
-
-/* Line 1806 of yacc.c  */
 #line 13922 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2492:
-
-/* Line 1806 of yacc.c  */
 #line 13923 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2493:
-
-/* Line 1806 of yacc.c  */
 #line 13926 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2494:
-
-/* Line 1806 of yacc.c  */
 #line 13927 "preproc.y"
-    { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2495:
-
-/* Line 1806 of yacc.c  */
 #line 13928 "preproc.y"
-    { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2496:
-
-/* Line 1806 of yacc.c  */
 #line 13929 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2497:
-
-/* Line 1806 of yacc.c  */
 #line 13930 "preproc.y"
-    { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2498:
-
-/* Line 1806 of yacc.c  */
 #line 13931 "preproc.y"
-    { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2499:
-
-/* Line 1806 of yacc.c  */
 #line 13932 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2500:
-
-/* Line 1806 of yacc.c  */
 #line 13933 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2501:
-
-/* Line 1806 of yacc.c  */
 #line 13934 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2502:
-
-/* Line 1806 of yacc.c  */
 #line 13941 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		mmerror(PARSE_ERROR, ET_WARNING, "using unsupported DESCRIBE statement");
 		(yyval.str) = (char *) mm_alloc(sizeof("1, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "1, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2503:
-
-/* Line 1806 of yacc.c  */
 #line 13948 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
@@ -50824,110 +46271,86 @@
 
 		(yyval.str) = (char *) mm_alloc(sizeof("0, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "0, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2504:
-
-/* Line 1806 of yacc.c  */
 #line 13960 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		(yyval.str) = (char *) mm_alloc(sizeof("0, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "0, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2505:
-
-/* Line 1806 of yacc.c  */
 #line 13966 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		mmerror(PARSE_ERROR, ET_WARNING, "using unsupported DESCRIBE statement");
 		(yyval.str) = (char *) mm_alloc(sizeof("1, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "1, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2506:
-
-/* Line 1806 of yacc.c  */
 #line 13973 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		(yyval.str) = (char *) mm_alloc(sizeof("0, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "0, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2507:
-
-/* Line 1806 of yacc.c  */
 #line 13980 "preproc.y"
-    { (yyval.str) = mm_strdup("output"); }
+    { (yyval.str) = mm_strdup("output"); ;}
     break;
 
   case 2508:
-
-/* Line 1806 of yacc.c  */
 #line 13981 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2509:
-
-/* Line 1806 of yacc.c  */
 #line 13994 "preproc.y"
     {
 			add_descriptor((yyvsp[(3) - (3)].str),connection);
 			(yyval.str) = (yyvsp[(3) - (3)].str);
-		}
+		;}
     break;
 
   case 2510:
-
-/* Line 1806 of yacc.c  */
 #line 14005 "preproc.y"
     {
 			drop_descriptor((yyvsp[(3) - (3)].str),connection);
 			(yyval.str) = (yyvsp[(3) - (3)].str);
-		}
+		;}
     break;
 
   case 2511:
-
-/* Line 1806 of yacc.c  */
 #line 14016 "preproc.y"
-    {  (yyval.str) = (yyvsp[(3) - (4)].str); }
+    {  (yyval.str) = (yyvsp[(3) - (4)].str); ;}
     break;
 
   case 2514:
-
-/* Line 1806 of yacc.c  */
 #line 14024 "preproc.y"
-    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); }
+    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); ;}
     break;
 
   case 2515:
-
-/* Line 1806 of yacc.c  */
 #line 14029 "preproc.y"
-    { (yyval.str) = (yyvsp[(3) - (4)].str); }
+    { (yyval.str) = (yyvsp[(3) - (4)].str); ;}
     break;
 
   case 2518:
-
-/* Line 1806 of yacc.c  */
 #line 14037 "preproc.y"
     {
 			push_assignment((yyvsp[(3) - (3)].str), (yyvsp[(1) - (3)].dtype_enum));
-		}
+		;}
     break;
 
   case 2519:
-
-/* Line 1806 of yacc.c  */
 #line 14043 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -50935,58 +46358,44 @@
 			sprintf(length, "%d", (int) strlen((yyvsp[(1) - (1)].str)));
 			new_variable((yyvsp[(1) - (1)].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2520:
-
-/* Line 1806 of yacc.c  */
 #line 14051 "preproc.y"
     {
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2521:
-
-/* Line 1806 of yacc.c  */
 #line 14056 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_count; }
+    { (yyval.dtype_enum) = ECPGd_count; ;}
     break;
 
   case 2522:
-
-/* Line 1806 of yacc.c  */
 #line 14064 "preproc.y"
-    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); }
+    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); ;}
     break;
 
   case 2525:
-
-/* Line 1806 of yacc.c  */
 #line 14071 "preproc.y"
-    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); }
+    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); ;}
     break;
 
   case 2526:
-
-/* Line 1806 of yacc.c  */
 #line 14075 "preproc.y"
-    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); }
+    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); ;}
     break;
 
   case 2529:
-
-/* Line 1806 of yacc.c  */
 #line 14083 "preproc.y"
     {
 			push_assignment((yyvsp[(3) - (3)].str), (yyvsp[(1) - (3)].dtype_enum));
-		}
+		;}
     break;
 
   case 2530:
-
-/* Line 1806 of yacc.c  */
 #line 14089 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -50994,21 +46403,17 @@
 			sprintf(length, "%d", (int) strlen((yyvsp[(1) - (1)].str)));
 			new_variable((yyvsp[(1) - (1)].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2531:
-
-/* Line 1806 of yacc.c  */
 #line 14098 "preproc.y"
     {
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2532:
-
-/* Line 1806 of yacc.c  */
 #line 14103 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -51017,12 +46422,10 @@
 			sprintf(length, "%d", (int) strlen(var));
 			new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = var;
-		}
+		;}
     break;
 
   case 2533:
-
-/* Line 1806 of yacc.c  */
 #line 14113 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -51031,12 +46434,10 @@
 			sprintf(length, "%d", (int) strlen(var));
 			new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = var;
-		}
+		;}
     break;
 
   case 2534:
-
-/* Line 1806 of yacc.c  */
 #line 14123 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -51046,177 +46447,129 @@
 			sprintf(length, "%d", (int) strlen(var));
 			new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = var;
-		}
+		;}
     break;
 
   case 2535:
-
-/* Line 1806 of yacc.c  */
 #line 14134 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_cardinality; }
+    { (yyval.dtype_enum) = ECPGd_cardinality; ;}
     break;
 
   case 2536:
-
-/* Line 1806 of yacc.c  */
 #line 14135 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_data; }
+    { (yyval.dtype_enum) = ECPGd_data; ;}
     break;
 
   case 2537:
-
-/* Line 1806 of yacc.c  */
 #line 14136 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_di_code; }
+    { (yyval.dtype_enum) = ECPGd_di_code; ;}
     break;
 
   case 2538:
-
-/* Line 1806 of yacc.c  */
 #line 14137 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_di_precision; }
+    { (yyval.dtype_enum) = ECPGd_di_precision; ;}
     break;
 
   case 2539:
-
-/* Line 1806 of yacc.c  */
 #line 14138 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_indicator; }
+    { (yyval.dtype_enum) = ECPGd_indicator; ;}
     break;
 
   case 2540:
-
-/* Line 1806 of yacc.c  */
 #line 14139 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_key_member; }
+    { (yyval.dtype_enum) = ECPGd_key_member; ;}
     break;
 
   case 2541:
-
-/* Line 1806 of yacc.c  */
 #line 14140 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_length; }
+    { (yyval.dtype_enum) = ECPGd_length; ;}
     break;
 
   case 2542:
-
-/* Line 1806 of yacc.c  */
 #line 14141 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_name; }
+    { (yyval.dtype_enum) = ECPGd_name; ;}
     break;
 
   case 2543:
-
-/* Line 1806 of yacc.c  */
 #line 14142 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_nullable; }
+    { (yyval.dtype_enum) = ECPGd_nullable; ;}
     break;
 
   case 2544:
-
-/* Line 1806 of yacc.c  */
 #line 14143 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_octet; }
+    { (yyval.dtype_enum) = ECPGd_octet; ;}
     break;
 
   case 2545:
-
-/* Line 1806 of yacc.c  */
 #line 14144 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_precision; }
+    { (yyval.dtype_enum) = ECPGd_precision; ;}
     break;
 
   case 2546:
-
-/* Line 1806 of yacc.c  */
 #line 14145 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_length; }
+    { (yyval.dtype_enum) = ECPGd_length; ;}
     break;
 
   case 2547:
-
-/* Line 1806 of yacc.c  */
 #line 14146 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_ret_octet; }
+    { (yyval.dtype_enum) = ECPGd_ret_octet; ;}
     break;
 
   case 2548:
-
-/* Line 1806 of yacc.c  */
 #line 14147 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_scale; }
+    { (yyval.dtype_enum) = ECPGd_scale; ;}
     break;
 
   case 2549:
-
-/* Line 1806 of yacc.c  */
 #line 14148 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_type; }
+    { (yyval.dtype_enum) = ECPGd_type; ;}
     break;
 
   case 2550:
-
-/* Line 1806 of yacc.c  */
 #line 14155 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2551:
-
-/* Line 1806 of yacc.c  */
 #line 14156 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2552:
-
-/* Line 1806 of yacc.c  */
 #line 14159 "preproc.y"
-    { (yyval.str) = mm_strdup("on"); }
+    { (yyval.str) = mm_strdup("on"); ;}
     break;
 
   case 2553:
-
-/* Line 1806 of yacc.c  */
 #line 14160 "preproc.y"
-    { (yyval.str) = mm_strdup("off"); }
+    { (yyval.str) = mm_strdup("off"); ;}
     break;
 
   case 2554:
-
-/* Line 1806 of yacc.c  */
 #line 14167 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2555:
-
-/* Line 1806 of yacc.c  */
 #line 14168 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2556:
-
-/* Line 1806 of yacc.c  */
 #line 14169 "preproc.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 2557:
-
-/* Line 1806 of yacc.c  */
 #line 14176 "preproc.y"
     {
 			/* reset this variable so we see if there was */
 			/* an initializer specified */
 			initializer = 0;
-		}
+		;}
     break;
 
   case 2558:
-
-/* Line 1806 of yacc.c  */
 #line 14182 "preproc.y"
     {
 			add_typedef((yyvsp[(3) - (7)].str), (yyvsp[(6) - (7)].index).index1, (yyvsp[(6) - (7)].index).index2, (yyvsp[(5) - (7)].type).type_enum, (yyvsp[(5) - (7)].type).type_dimension, (yyvsp[(5) - (7)].type).type_index, initializer, *(yyvsp[(7) - (7)].str) ? 1 : 0);
@@ -51225,37 +46578,29 @@
 				(yyval.str) = cat_str(7, mm_strdup("/* exec sql type"), mm_strdup((yyvsp[(3) - (7)].str)), mm_strdup("is"), mm_strdup((yyvsp[(5) - (7)].type).type_str), mm_strdup((yyvsp[(6) - (7)].index).str), (yyvsp[(7) - (7)].str), mm_strdup("*/"));
 			else
 				(yyval.str) = cat_str(6, mm_strdup("typedef "), mm_strdup((yyvsp[(5) - (7)].type).type_str), *(yyvsp[(7) - (7)].str)?mm_strdup("*"):mm_strdup(""), mm_strdup((yyvsp[(6) - (7)].index).str), mm_strdup((yyvsp[(3) - (7)].str)), mm_strdup(";"));
-		}
+		;}
     break;
 
   case 2559:
-
-/* Line 1806 of yacc.c  */
 #line 14192 "preproc.y"
-    { (yyval.str) = mm_strdup("reference"); }
+    { (yyval.str) = mm_strdup("reference"); ;}
     break;
 
   case 2560:
-
-/* Line 1806 of yacc.c  */
 #line 14193 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2561:
-
-/* Line 1806 of yacc.c  */
 #line 14200 "preproc.y"
     {
 			/* reset this variable so we see if there was */
 			/* an initializer specified */
 			initializer = 0;
-		}
+		;}
     break;
 
   case 2562:
-
-/* Line 1806 of yacc.c  */
 #line 14206 "preproc.y"
     {
 			struct variable *p = find_variable((yyvsp[(3) - (7)].str));
@@ -51313,861 +46658,631 @@
 			}
 
 			(yyval.str) = cat_str(7, mm_strdup("/* exec sql var"), mm_strdup((yyvsp[(3) - (7)].str)), mm_strdup("is"), mm_strdup((yyvsp[(5) - (7)].type).type_str), mm_strdup((yyvsp[(6) - (7)].index).str), (yyvsp[(7) - (7)].str), mm_strdup("*/"));
-		}
+		;}
     break;
 
   case 2563:
-
-/* Line 1806 of yacc.c  */
 #line 14270 "preproc.y"
     {
 			when_error.code = (yyvsp[(3) - (3)].action).code;
 			when_error.command = (yyvsp[(3) - (3)].action).command;
 			(yyval.str) = cat_str(3, mm_strdup("/* exec sql whenever sqlerror "), (yyvsp[(3) - (3)].action).str, mm_strdup("; */"));
-		}
+		;}
     break;
 
   case 2564:
-
-/* Line 1806 of yacc.c  */
 #line 14276 "preproc.y"
     {
 			when_nf.code = (yyvsp[(4) - (4)].action).code;
 			when_nf.command = (yyvsp[(4) - (4)].action).command;
 			(yyval.str) = cat_str(3, mm_strdup("/* exec sql whenever not found "), (yyvsp[(4) - (4)].action).str, mm_strdup("; */"));
-		}
+		;}
     break;
 
   case 2565:
-
-/* Line 1806 of yacc.c  */
 #line 14282 "preproc.y"
     {
 			when_warn.code = (yyvsp[(3) - (3)].action).code;
 			when_warn.command = (yyvsp[(3) - (3)].action).command;
 			(yyval.str) = cat_str(3, mm_strdup("/* exec sql whenever sql_warning "), (yyvsp[(3) - (3)].action).str, mm_strdup("; */"));
-		}
+		;}
     break;
 
   case 2566:
-
-/* Line 1806 of yacc.c  */
 #line 14290 "preproc.y"
     {
 			(yyval.action).code = W_NOTHING;
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("continue");
-		}
+		;}
     break;
 
   case 2567:
-
-/* Line 1806 of yacc.c  */
 #line 14296 "preproc.y"
     {
 			(yyval.action).code = W_SQLPRINT;
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("sqlprint");
-		}
+		;}
     break;
 
   case 2568:
-
-/* Line 1806 of yacc.c  */
 #line 14302 "preproc.y"
     {
 			(yyval.action).code = W_STOP;
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("stop");
-		}
+		;}
     break;
 
   case 2569:
-
-/* Line 1806 of yacc.c  */
 #line 14308 "preproc.y"
     {
 			(yyval.action).code = W_GOTO;
 			(yyval.action).command = strdup((yyvsp[(2) - (2)].str));
 			(yyval.action).str = cat2_str(mm_strdup("goto "), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2570:
-
-/* Line 1806 of yacc.c  */
 #line 14314 "preproc.y"
     {
 			(yyval.action).code = W_GOTO;
 			(yyval.action).command = strdup((yyvsp[(3) - (3)].str));
 			(yyval.action).str = cat2_str(mm_strdup("goto "), (yyvsp[(3) - (3)].str));
-		}
+		;}
     break;
 
   case 2571:
-
-/* Line 1806 of yacc.c  */
 #line 14320 "preproc.y"
     {
 			(yyval.action).code = W_DO;
 			(yyval.action).command = cat_str(4, (yyvsp[(2) - (5)].str), mm_strdup("("), (yyvsp[(4) - (5)].str), mm_strdup(")"));
 			(yyval.action).str = cat2_str(mm_strdup("do"), mm_strdup((yyval.action).command));
-		}
+		;}
     break;
 
   case 2572:
-
-/* Line 1806 of yacc.c  */
 #line 14326 "preproc.y"
     {
 			(yyval.action).code = W_BREAK;
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("break");
-		}
+		;}
     break;
 
   case 2573:
-
-/* Line 1806 of yacc.c  */
 #line 14332 "preproc.y"
     {
 			(yyval.action).code = W_DO;
 			(yyval.action).command = cat_str(4, (yyvsp[(2) - (5)].str), mm_strdup("("), (yyvsp[(4) - (5)].str), mm_strdup(")"));
 			(yyval.action).str = cat2_str(mm_strdup("call"), mm_strdup((yyval.action).command));
-		}
+		;}
     break;
 
   case 2574:
-
-/* Line 1806 of yacc.c  */
 #line 14338 "preproc.y"
     {
 			(yyval.action).code = W_DO;
 			(yyval.action).command = cat2_str((yyvsp[(2) - (2)].str), mm_strdup("()"));
 			(yyval.action).str = cat2_str(mm_strdup("call"), mm_strdup((yyval.action).command));
-		}
+		;}
     break;
 
   case 2575:
-
-/* Line 1806 of yacc.c  */
 #line 14348 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2576:
-
-/* Line 1806 of yacc.c  */
 #line 14349 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2577:
-
-/* Line 1806 of yacc.c  */
 #line 14352 "preproc.y"
-    { (yyval.str) = mm_strdup("break"); }
+    { (yyval.str) = mm_strdup("break"); ;}
     break;
 
   case 2578:
-
-/* Line 1806 of yacc.c  */
 #line 14353 "preproc.y"
-    { (yyval.str) = mm_strdup("call"); }
+    { (yyval.str) = mm_strdup("call"); ;}
     break;
 
   case 2579:
-
-/* Line 1806 of yacc.c  */
 #line 14354 "preproc.y"
-    { (yyval.str) = mm_strdup("cardinality"); }
+    { (yyval.str) = mm_strdup("cardinality"); ;}
     break;
 
   case 2580:
-
-/* Line 1806 of yacc.c  */
 #line 14355 "preproc.y"
-    { (yyval.str) = mm_strdup("count"); }
+    { (yyval.str) = mm_strdup("count"); ;}
     break;
 
   case 2581:
-
-/* Line 1806 of yacc.c  */
 #line 14356 "preproc.y"
-    { (yyval.str) = mm_strdup("datetime_interval_code"); }
+    { (yyval.str) = mm_strdup("datetime_interval_code"); ;}
     break;
 
   case 2582:
-
-/* Line 1806 of yacc.c  */
 #line 14357 "preproc.y"
-    { (yyval.str) = mm_strdup("datetime_interval_precision"); }
+    { (yyval.str) = mm_strdup("datetime_interval_precision"); ;}
     break;
 
   case 2583:
-
-/* Line 1806 of yacc.c  */
 #line 14358 "preproc.y"
-    { (yyval.str) = mm_strdup("found"); }
+    { (yyval.str) = mm_strdup("found"); ;}
     break;
 
   case 2584:
-
-/* Line 1806 of yacc.c  */
 #line 14359 "preproc.y"
-    { (yyval.str) = mm_strdup("go"); }
+    { (yyval.str) = mm_strdup("go"); ;}
     break;
 
   case 2585:
-
-/* Line 1806 of yacc.c  */
 #line 14360 "preproc.y"
-    { (yyval.str) = mm_strdup("goto"); }
+    { (yyval.str) = mm_strdup("goto"); ;}
     break;
 
   case 2586:
-
-/* Line 1806 of yacc.c  */
 #line 14361 "preproc.y"
-    { (yyval.str) = mm_strdup("identified"); }
+    { (yyval.str) = mm_strdup("identified"); ;}
     break;
 
   case 2587:
-
-/* Line 1806 of yacc.c  */
 #line 14362 "preproc.y"
-    { (yyval.str) = mm_strdup("indicator"); }
+    { (yyval.str) = mm_strdup("indicator"); ;}
     break;
 
   case 2588:
-
-/* Line 1806 of yacc.c  */
 #line 14363 "preproc.y"
-    { (yyval.str) = mm_strdup("key_member"); }
+    { (yyval.str) = mm_strdup("key_member"); ;}
     break;
 
   case 2589:
-
-/* Line 1806 of yacc.c  */
 #line 14364 "preproc.y"
-    { (yyval.str) = mm_strdup("length"); }
+    { (yyval.str) = mm_strdup("length"); ;}
     break;
 
   case 2590:
-
-/* Line 1806 of yacc.c  */
 #line 14365 "preproc.y"
-    { (yyval.str) = mm_strdup("nullable"); }
+    { (yyval.str) = mm_strdup("nullable"); ;}
     break;
 
   case 2591:
-
-/* Line 1806 of yacc.c  */
 #line 14366 "preproc.y"
-    { (yyval.str) = mm_strdup("octet_length"); }
+    { (yyval.str) = mm_strdup("octet_length"); ;}
     break;
 
   case 2592:
-
-/* Line 1806 of yacc.c  */
 #line 14367 "preproc.y"
-    { (yyval.str) = mm_strdup("returned_length"); }
+    { (yyval.str) = mm_strdup("returned_length"); ;}
     break;
 
   case 2593:
-
-/* Line 1806 of yacc.c  */
 #line 14368 "preproc.y"
-    { (yyval.str) = mm_strdup("returned_octet_length"); }
+    { (yyval.str) = mm_strdup("returned_octet_length"); ;}
     break;
 
   case 2594:
-
-/* Line 1806 of yacc.c  */
 #line 14369 "preproc.y"
-    { (yyval.str) = mm_strdup("scale"); }
+    { (yyval.str) = mm_strdup("scale"); ;}
     break;
 
   case 2595:
-
-/* Line 1806 of yacc.c  */
 #line 14370 "preproc.y"
-    { (yyval.str) = mm_strdup("section"); }
+    { (yyval.str) = mm_strdup("section"); ;}
     break;
 
   case 2596:
-
-/* Line 1806 of yacc.c  */
 #line 14371 "preproc.y"
-    { (yyval.str) = mm_strdup("sql"); }
+    { (yyval.str) = mm_strdup("sql"); ;}
     break;
 
   case 2597:
-
-/* Line 1806 of yacc.c  */
 #line 14372 "preproc.y"
-    { (yyval.str) = mm_strdup("sqlerror"); }
+    { (yyval.str) = mm_strdup("sqlerror"); ;}
     break;
 
   case 2598:
-
-/* Line 1806 of yacc.c  */
 #line 14373 "preproc.y"
-    { (yyval.str) = mm_strdup("sqlprint"); }
+    { (yyval.str) = mm_strdup("sqlprint"); ;}
     break;
 
   case 2599:
-
-/* Line 1806 of yacc.c  */
 #line 14374 "preproc.y"
-    { (yyval.str) = mm_strdup("sqlwarning"); }
+    { (yyval.str) = mm_strdup("sqlwarning"); ;}
     break;
 
   case 2600:
-
-/* Line 1806 of yacc.c  */
 #line 14375 "preproc.y"
-    { (yyval.str) = mm_strdup("stop"); }
+    { (yyval.str) = mm_strdup("stop"); ;}
     break;
 
   case 2601:
-
-/* Line 1806 of yacc.c  */
 #line 14378 "preproc.y"
-    { (yyval.str) = mm_strdup("connect"); }
+    { (yyval.str) = mm_strdup("connect"); ;}
     break;
 
   case 2602:
-
-/* Line 1806 of yacc.c  */
 #line 14379 "preproc.y"
-    { (yyval.str) = mm_strdup("describe"); }
+    { (yyval.str) = mm_strdup("describe"); ;}
     break;
 
   case 2603:
-
-/* Line 1806 of yacc.c  */
 #line 14380 "preproc.y"
-    { (yyval.str) = mm_strdup("disconnect"); }
+    { (yyval.str) = mm_strdup("disconnect"); ;}
     break;
 
   case 2604:
-
-/* Line 1806 of yacc.c  */
 #line 14381 "preproc.y"
-    { (yyval.str) = mm_strdup("open"); }
+    { (yyval.str) = mm_strdup("open"); ;}
     break;
 
   case 2605:
-
-/* Line 1806 of yacc.c  */
 #line 14382 "preproc.y"
-    { (yyval.str) = mm_strdup("var"); }
+    { (yyval.str) = mm_strdup("var"); ;}
     break;
 
   case 2606:
-
-/* Line 1806 of yacc.c  */
 #line 14383 "preproc.y"
-    { (yyval.str) = mm_strdup("whenever"); }
+    { (yyval.str) = mm_strdup("whenever"); ;}
     break;
 
   case 2607:
-
-/* Line 1806 of yacc.c  */
 #line 14387 "preproc.y"
-    { (yyval.str) = mm_strdup("bool"); }
+    { (yyval.str) = mm_strdup("bool"); ;}
     break;
 
   case 2608:
-
-/* Line 1806 of yacc.c  */
 #line 14388 "preproc.y"
-    { (yyval.str) = mm_strdup("long"); }
+    { (yyval.str) = mm_strdup("long"); ;}
     break;
 
   case 2609:
-
-/* Line 1806 of yacc.c  */
 #line 14389 "preproc.y"
-    { (yyval.str) = mm_strdup("output"); }
+    { (yyval.str) = mm_strdup("output"); ;}
     break;
 
   case 2610:
-
-/* Line 1806 of yacc.c  */
 #line 14390 "preproc.y"
-    { (yyval.str) = mm_strdup("short"); }
+    { (yyval.str) = mm_strdup("short"); ;}
     break;
 
   case 2611:
-
-/* Line 1806 of yacc.c  */
 #line 14391 "preproc.y"
-    { (yyval.str) = mm_strdup("struct"); }
+    { (yyval.str) = mm_strdup("struct"); ;}
     break;
 
   case 2612:
-
-/* Line 1806 of yacc.c  */
 #line 14392 "preproc.y"
-    { (yyval.str) = mm_strdup("signed"); }
+    { (yyval.str) = mm_strdup("signed"); ;}
     break;
 
   case 2613:
-
-/* Line 1806 of yacc.c  */
 #line 14393 "preproc.y"
-    { (yyval.str) = mm_strdup("unsigned"); }
+    { (yyval.str) = mm_strdup("unsigned"); ;}
     break;
 
   case 2614:
-
-/* Line 1806 of yacc.c  */
 #line 14396 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2615:
-
-/* Line 1806 of yacc.c  */
 #line 14399 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2616:
-
-/* Line 1806 of yacc.c  */
 #line 14400 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2617:
-
-/* Line 1806 of yacc.c  */
 #line 14401 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2618:
-
-/* Line 1806 of yacc.c  */
 #line 14402 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2619:
-
-/* Line 1806 of yacc.c  */
 #line 14403 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2620:
-
-/* Line 1806 of yacc.c  */
 #line 14404 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2621:
-
-/* Line 1806 of yacc.c  */
 #line 14405 "preproc.y"
-    { (yyval.str) = mm_strdup("char"); }
+    { (yyval.str) = mm_strdup("char"); ;}
     break;
 
   case 2622:
-
-/* Line 1806 of yacc.c  */
 #line 14406 "preproc.y"
-    { (yyval.str) = mm_strdup("values"); }
+    { (yyval.str) = mm_strdup("values"); ;}
     break;
 
   case 2623:
-
-/* Line 1806 of yacc.c  */
 #line 14419 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2624:
-
-/* Line 1806 of yacc.c  */
 #line 14420 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2625:
-
-/* Line 1806 of yacc.c  */
 #line 14421 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2626:
-
-/* Line 1806 of yacc.c  */
 #line 14422 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2627:
-
-/* Line 1806 of yacc.c  */
 #line 14423 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2628:
-
-/* Line 1806 of yacc.c  */
 #line 14424 "preproc.y"
-    { (yyval.str) = mm_strdup("char"); }
+    { (yyval.str) = mm_strdup("char"); ;}
     break;
 
   case 2629:
-
-/* Line 1806 of yacc.c  */
 #line 14425 "preproc.y"
-    { (yyval.str) = mm_strdup("values"); }
+    { (yyval.str) = mm_strdup("values"); ;}
     break;
 
   case 2630:
-
-/* Line 1806 of yacc.c  */
 #line 14430 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2631:
-
-/* Line 1806 of yacc.c  */
 #line 14431 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2632:
-
-/* Line 1806 of yacc.c  */
 #line 14432 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2633:
-
-/* Line 1806 of yacc.c  */
 #line 14433 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2634:
-
-/* Line 1806 of yacc.c  */
 #line 14434 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2635:
-
-/* Line 1806 of yacc.c  */
 #line 14435 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2636:
-
-/* Line 1806 of yacc.c  */
 #line 14441 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2637:
-
-/* Line 1806 of yacc.c  */
 #line 14442 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2638:
-
-/* Line 1806 of yacc.c  */
 #line 14443 "preproc.y"
-    { (yyval.str) = mm_strdup("char"); }
+    { (yyval.str) = mm_strdup("char"); ;}
     break;
 
   case 2639:
-
-/* Line 1806 of yacc.c  */
 #line 14444 "preproc.y"
-    { (yyval.str) = mm_strdup("current"); }
+    { (yyval.str) = mm_strdup("current"); ;}
     break;
 
   case 2640:
-
-/* Line 1806 of yacc.c  */
 #line 14445 "preproc.y"
-    { (yyval.str) = mm_strdup("input"); }
+    { (yyval.str) = mm_strdup("input"); ;}
     break;
 
   case 2641:
-
-/* Line 1806 of yacc.c  */
 #line 14446 "preproc.y"
-    { (yyval.str) = mm_strdup("int"); }
+    { (yyval.str) = mm_strdup("int"); ;}
     break;
 
   case 2642:
-
-/* Line 1806 of yacc.c  */
 #line 14447 "preproc.y"
-    { (yyval.str) = mm_strdup("to"); }
+    { (yyval.str) = mm_strdup("to"); ;}
     break;
 
   case 2643:
-
-/* Line 1806 of yacc.c  */
 #line 14448 "preproc.y"
-    { (yyval.str) = mm_strdup("union"); }
+    { (yyval.str) = mm_strdup("union"); ;}
     break;
 
   case 2644:
-
-/* Line 1806 of yacc.c  */
 #line 14449 "preproc.y"
-    { (yyval.str) = mm_strdup("values"); }
+    { (yyval.str) = mm_strdup("values"); ;}
     break;
 
   case 2645:
-
-/* Line 1806 of yacc.c  */
 #line 14450 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2646:
-
-/* Line 1806 of yacc.c  */
 #line 14451 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2647:
-
-/* Line 1806 of yacc.c  */
 #line 14454 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2648:
-
-/* Line 1806 of yacc.c  */
 #line 14455 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2649:
-
-/* Line 1806 of yacc.c  */
 #line 14456 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2650:
-
-/* Line 1806 of yacc.c  */
 #line 14457 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2651:
-
-/* Line 1806 of yacc.c  */
 #line 14458 "preproc.y"
-    { (yyval.str) = mm_strdup("connection"); }
+    { (yyval.str) = mm_strdup("connection"); ;}
     break;
 
   case 2652:
-
-/* Line 1806 of yacc.c  */
 #line 14461 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2653:
-
-/* Line 1806 of yacc.c  */
 #line 14462 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2654:
-
-/* Line 1806 of yacc.c  */
 #line 14463 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2655:
-
-/* Line 1806 of yacc.c  */
 #line 14464 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2656:
-
-/* Line 1806 of yacc.c  */
 #line 14467 "preproc.y"
-    { (yyval.str) = mm_strdup("auto"); }
+    { (yyval.str) = mm_strdup("auto"); ;}
     break;
 
   case 2657:
-
-/* Line 1806 of yacc.c  */
 #line 14468 "preproc.y"
-    { (yyval.str) = mm_strdup("const"); }
+    { (yyval.str) = mm_strdup("const"); ;}
     break;
 
   case 2658:
-
-/* Line 1806 of yacc.c  */
 #line 14469 "preproc.y"
-    { (yyval.str) = mm_strdup("extern"); }
+    { (yyval.str) = mm_strdup("extern"); ;}
     break;
 
   case 2659:
-
-/* Line 1806 of yacc.c  */
 #line 14470 "preproc.y"
-    { (yyval.str) = mm_strdup("register"); }
+    { (yyval.str) = mm_strdup("register"); ;}
     break;
 
   case 2660:
-
-/* Line 1806 of yacc.c  */
 #line 14471 "preproc.y"
-    { (yyval.str) = mm_strdup("static"); }
+    { (yyval.str) = mm_strdup("static"); ;}
     break;
 
   case 2661:
-
-/* Line 1806 of yacc.c  */
 #line 14472 "preproc.y"
-    { (yyval.str) = mm_strdup("typedef"); }
+    { (yyval.str) = mm_strdup("typedef"); ;}
     break;
 
   case 2662:
-
-/* Line 1806 of yacc.c  */
 #line 14473 "preproc.y"
-    { (yyval.str) = mm_strdup("volatile"); }
+    { (yyval.str) = mm_strdup("volatile"); ;}
     break;
 
   case 2663:
-
-/* Line 1806 of yacc.c  */
 #line 14490 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2664:
-
-/* Line 1806 of yacc.c  */
 #line 14491 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2665:
-
-/* Line 1806 of yacc.c  */
 #line 14492 "preproc.y"
-    { (yyval.str) = mm_strdup("connection"); }
+    { (yyval.str) = mm_strdup("connection"); ;}
     break;
 
   case 2666:
-
-/* Line 1806 of yacc.c  */
 #line 14495 "preproc.y"
-    { (yyval.str) = mm_strdup("day"); }
+    { (yyval.str) = mm_strdup("day"); ;}
     break;
 
   case 2667:
-
-/* Line 1806 of yacc.c  */
 #line 14496 "preproc.y"
-    { (yyval.str) = mm_strdup("hour"); }
+    { (yyval.str) = mm_strdup("hour"); ;}
     break;
 
   case 2668:
-
-/* Line 1806 of yacc.c  */
 #line 14497 "preproc.y"
-    { (yyval.str) = mm_strdup("minute"); }
+    { (yyval.str) = mm_strdup("minute"); ;}
     break;
 
   case 2669:
-
-/* Line 1806 of yacc.c  */
 #line 14498 "preproc.y"
-    { (yyval.str) = mm_strdup("month"); }
+    { (yyval.str) = mm_strdup("month"); ;}
     break;
 
   case 2670:
-
-/* Line 1806 of yacc.c  */
 #line 14499 "preproc.y"
-    { (yyval.str) = mm_strdup("second"); }
+    { (yyval.str) = mm_strdup("second"); ;}
     break;
 
   case 2671:
-
-/* Line 1806 of yacc.c  */
 #line 14500 "preproc.y"
-    { (yyval.str) = mm_strdup("year"); }
+    { (yyval.str) = mm_strdup("year"); ;}
     break;
 
   case 2674:
-
-/* Line 1806 of yacc.c  */
 #line 14507 "preproc.y"
     {
 				reset_variables();
 				pacounter = 1;
-			}
+			;}
     break;
 
   case 2675:
-
-/* Line 1806 of yacc.c  */
 #line 14513 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2676:
-
-/* Line 1806 of yacc.c  */
 #line 14514 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2677:
-
-/* Line 1806 of yacc.c  */
 #line 14518 "preproc.y"
-    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (2)].str)), find_variable((yyvsp[(2) - (2)].str))); }
+    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (2)].str)), find_variable((yyvsp[(2) - (2)].str))); ;}
     break;
 
   case 2678:
-
-/* Line 1806 of yacc.c  */
 #line 14520 "preproc.y"
-    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (1)].str)), &no_indicator); }
+    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (1)].str)), &no_indicator); ;}
     break;
 
   case 2679:
-
-/* Line 1806 of yacc.c  */
 #line 14525 "preproc.y"
     {
 			if (find_variable((yyvsp[(2) - (2)].str))->type->type == ECPGt_array)
@@ -52175,12 +47290,10 @@
 
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[(1) - (2)].str)), find_variable((yyvsp[(2) - (2)].str)));
 			(yyval.str) = create_questionmarks((yyvsp[(1) - (2)].str), false);
-		}
+		;}
     break;
 
   case 2680:
-
-/* Line 1806 of yacc.c  */
 #line 14535 "preproc.y"
     {
 			char *ptr = strstr((yyvsp[(1) - (1)].str), ".arr");
@@ -52189,43 +47302,33 @@
 				*ptr = '\0';
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[(1) - (1)].str)), &no_indicator);
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2681:
-
-/* Line 1806 of yacc.c  */
 #line 14546 "preproc.y"
     {
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[(1) - (1)].str)), &no_indicator);
 			(yyval.str) = create_questionmarks((yyvsp[(1) - (1)].str), false);
-		}
+		;}
     break;
 
   case 2682:
-
-/* Line 1806 of yacc.c  */
 #line 14552 "preproc.y"
-    { check_indicator((find_variable((yyvsp[(1) - (1)].str)))->type); (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { check_indicator((find_variable((yyvsp[(1) - (1)].str)))->type); (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2683:
-
-/* Line 1806 of yacc.c  */
 #line 14553 "preproc.y"
-    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2684:
-
-/* Line 1806 of yacc.c  */
 #line 14554 "preproc.y"
-    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2685:
-
-/* Line 1806 of yacc.c  */
 #line 14558 "preproc.y"
     {
 			/* As long as multidimensional arrays are not implemented we have to check for those here */
@@ -52256,33 +47359,25 @@
 				}
 			}
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2686:
-
-/* Line 1806 of yacc.c  */
 #line 14590 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2687:
-
-/* Line 1806 of yacc.c  */
 #line 14592 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2688:
-
-/* Line 1806 of yacc.c  */
 #line 14594 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2689:
-
-/* Line 1806 of yacc.c  */
 #line 14598 "preproc.y"
     {
 			/* could have been input as '' or $$ */
@@ -52292,12 +47387,10 @@
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+1]='\'';
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+2]='\0';
 			free((yyvsp[(1) - (1)].str));
-		}
+		;}
     break;
 
   case 2690:
-
-/* Line 1806 of yacc.c  */
 #line 14608 "preproc.y"
     {
 			(yyval.str) = (char *)mm_alloc(strlen((yyvsp[(1) - (1)].str)) + 4);
@@ -52307,12 +47400,10 @@
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+2]='\'';
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+3]='\0';
 			free((yyvsp[(1) - (1)].str));
-		}
+		;}
     break;
 
   case 2691:
-
-/* Line 1806 of yacc.c  */
 #line 14618 "preproc.y"
     {
 			(yyval.str) = (char *)mm_alloc(strlen((yyvsp[(1) - (1)].str)) + 4);
@@ -52322,705 +47413,505 @@
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+2]='\'';
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+3]='\0';
 			free((yyvsp[(1) - (1)].str));
-		}
+		;}
     break;
 
   case 2692:
-
-/* Line 1806 of yacc.c  */
 #line 14627 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2693:
-
-/* Line 1806 of yacc.c  */
 #line 14628 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2694:
-
-/* Line 1806 of yacc.c  */
 #line 14631 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2695:
-
-/* Line 1806 of yacc.c  */
 #line 14633 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2696:
-
-/* Line 1806 of yacc.c  */
 #line 14634 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); }
+    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); ;}
     break;
 
   case 2697:
-
-/* Line 1806 of yacc.c  */
 #line 14635 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2698:
-
-/* Line 1806 of yacc.c  */
 #line 14639 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); }
+    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); ;}
     break;
 
   case 2699:
-
-/* Line 1806 of yacc.c  */
 #line 14641 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("("), (yyvsp[(1) - (1)].str), mm_strdup(")")); }
+    { (yyval.str) = make3_str(mm_strdup("("), (yyvsp[(1) - (1)].str), mm_strdup(")")); ;}
     break;
 
   case 2700:
-
-/* Line 1806 of yacc.c  */
 #line 14648 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2701:
-
-/* Line 1806 of yacc.c  */
 #line 14649 "preproc.y"
-    { (yyval.str) = mm_strdup("()"); }
+    { (yyval.str) = mm_strdup("()"); ;}
     break;
 
   case 2702:
-
-/* Line 1806 of yacc.c  */
 #line 14651 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[(2) - (3)].str), mm_strdup(")")); }
+    { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[(2) - (3)].str), mm_strdup(")")); ;}
     break;
 
   case 2703:
-
-/* Line 1806 of yacc.c  */
 #line 14654 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2704:
-
-/* Line 1806 of yacc.c  */
 #line 14656 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2705:
-
-/* Line 1806 of yacc.c  */
 #line 14659 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2706:
-
-/* Line 1806 of yacc.c  */
 #line 14660 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2707:
-
-/* Line 1806 of yacc.c  */
 #line 14663 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2708:
-
-/* Line 1806 of yacc.c  */
 #line 14664 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[(2) - (3)].str), mm_strdup("}")); }
+    { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[(2) - (3)].str), mm_strdup("}")); ;}
     break;
 
   case 2709:
-
-/* Line 1806 of yacc.c  */
 #line 14667 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2710:
-
-/* Line 1806 of yacc.c  */
 #line 14668 "preproc.y"
-    { (yyval.str) = mm_strdup("("); }
+    { (yyval.str) = mm_strdup("("); ;}
     break;
 
   case 2711:
-
-/* Line 1806 of yacc.c  */
 #line 14669 "preproc.y"
-    { (yyval.str) = mm_strdup(")"); }
+    { (yyval.str) = mm_strdup(")"); ;}
     break;
 
   case 2712:
-
-/* Line 1806 of yacc.c  */
 #line 14670 "preproc.y"
-    { (yyval.str) = mm_strdup(","); }
+    { (yyval.str) = mm_strdup(","); ;}
     break;
 
   case 2713:
-
-/* Line 1806 of yacc.c  */
 #line 14671 "preproc.y"
-    { (yyval.str) = mm_strdup(";"); }
+    { (yyval.str) = mm_strdup(";"); ;}
     break;
 
   case 2714:
-
-/* Line 1806 of yacc.c  */
 #line 14674 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2715:
-
-/* Line 1806 of yacc.c  */
 #line 14675 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2716:
-
-/* Line 1806 of yacc.c  */
 #line 14676 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2717:
-
-/* Line 1806 of yacc.c  */
 #line 14677 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2718:
-
-/* Line 1806 of yacc.c  */
 #line 14678 "preproc.y"
-    { (yyval.str) = mm_strdup("*"); }
+    { (yyval.str) = mm_strdup("*"); ;}
     break;
 
   case 2719:
-
-/* Line 1806 of yacc.c  */
 #line 14679 "preproc.y"
-    { (yyval.str) = mm_strdup("+"); }
+    { (yyval.str) = mm_strdup("+"); ;}
     break;
 
   case 2720:
-
-/* Line 1806 of yacc.c  */
 #line 14680 "preproc.y"
-    { (yyval.str) = mm_strdup("-"); }
+    { (yyval.str) = mm_strdup("-"); ;}
     break;
 
   case 2721:
-
-/* Line 1806 of yacc.c  */
 #line 14681 "preproc.y"
-    { (yyval.str) = mm_strdup("/"); }
+    { (yyval.str) = mm_strdup("/"); ;}
     break;
 
   case 2722:
-
-/* Line 1806 of yacc.c  */
 #line 14682 "preproc.y"
-    { (yyval.str) = mm_strdup("%"); }
+    { (yyval.str) = mm_strdup("%"); ;}
     break;
 
   case 2723:
-
-/* Line 1806 of yacc.c  */
 #line 14683 "preproc.y"
-    { (yyval.str) = mm_strdup("NULL"); }
+    { (yyval.str) = mm_strdup("NULL"); ;}
     break;
 
   case 2724:
-
-/* Line 1806 of yacc.c  */
 #line 14684 "preproc.y"
-    { (yyval.str) = mm_strdup("+="); }
+    { (yyval.str) = mm_strdup("+="); ;}
     break;
 
   case 2725:
-
-/* Line 1806 of yacc.c  */
 #line 14685 "preproc.y"
-    { (yyval.str) = mm_strdup("&&"); }
+    { (yyval.str) = mm_strdup("&&"); ;}
     break;
 
   case 2726:
-
-/* Line 1806 of yacc.c  */
 #line 14686 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2727:
-
-/* Line 1806 of yacc.c  */
 #line 14687 "preproc.y"
-    { (yyval.str) = mm_strdup("auto"); }
+    { (yyval.str) = mm_strdup("auto"); ;}
     break;
 
   case 2728:
-
-/* Line 1806 of yacc.c  */
 #line 14688 "preproc.y"
-    { (yyval.str) = mm_strdup("const"); }
+    { (yyval.str) = mm_strdup("const"); ;}
     break;
 
   case 2729:
-
-/* Line 1806 of yacc.c  */
 #line 14689 "preproc.y"
-    { (yyval.str) = mm_strdup("--"); }
+    { (yyval.str) = mm_strdup("--"); ;}
     break;
 
   case 2730:
-
-/* Line 1806 of yacc.c  */
 #line 14690 "preproc.y"
-    { (yyval.str) = mm_strdup("/="); }
+    { (yyval.str) = mm_strdup("/="); ;}
     break;
 
   case 2731:
-
-/* Line 1806 of yacc.c  */
 #line 14691 "preproc.y"
-    { (yyval.str) = mm_strdup(".*"); }
+    { (yyval.str) = mm_strdup(".*"); ;}
     break;
 
   case 2732:
-
-/* Line 1806 of yacc.c  */
 #line 14692 "preproc.y"
-    { (yyval.str) = mm_strdup("=="); }
+    { (yyval.str) = mm_strdup("=="); ;}
     break;
 
   case 2733:
-
-/* Line 1806 of yacc.c  */
 #line 14693 "preproc.y"
-    { (yyval.str) = mm_strdup("extern"); }
+    { (yyval.str) = mm_strdup("extern"); ;}
     break;
 
   case 2734:
-
-/* Line 1806 of yacc.c  */
 #line 14694 "preproc.y"
-    { (yyval.str) = mm_strdup("++"); }
+    { (yyval.str) = mm_strdup("++"); ;}
     break;
 
   case 2735:
-
-/* Line 1806 of yacc.c  */
 #line 14695 "preproc.y"
-    { (yyval.str) = mm_strdup("<<"); }
+    { (yyval.str) = mm_strdup("<<"); ;}
     break;
 
   case 2736:
-
-/* Line 1806 of yacc.c  */
 #line 14696 "preproc.y"
-    { (yyval.str) = mm_strdup("->"); }
+    { (yyval.str) = mm_strdup("->"); ;}
     break;
 
   case 2737:
-
-/* Line 1806 of yacc.c  */
 #line 14697 "preproc.y"
-    { (yyval.str) = mm_strdup("->*"); }
+    { (yyval.str) = mm_strdup("->*"); ;}
     break;
 
   case 2738:
-
-/* Line 1806 of yacc.c  */
 #line 14698 "preproc.y"
-    { (yyval.str) = mm_strdup("%="); }
+    { (yyval.str) = mm_strdup("%="); ;}
     break;
 
   case 2739:
-
-/* Line 1806 of yacc.c  */
 #line 14699 "preproc.y"
-    { (yyval.str) = mm_strdup("*="); }
+    { (yyval.str) = mm_strdup("*="); ;}
     break;
 
   case 2740:
-
-/* Line 1806 of yacc.c  */
 #line 14700 "preproc.y"
-    { (yyval.str) = mm_strdup("!="); }
+    { (yyval.str) = mm_strdup("!="); ;}
     break;
 
   case 2741:
-
-/* Line 1806 of yacc.c  */
 #line 14701 "preproc.y"
-    { (yyval.str) = mm_strdup("||"); }
+    { (yyval.str) = mm_strdup("||"); ;}
     break;
 
   case 2742:
-
-/* Line 1806 of yacc.c  */
 #line 14702 "preproc.y"
-    { (yyval.str) = mm_strdup("register"); }
+    { (yyval.str) = mm_strdup("register"); ;}
     break;
 
   case 2743:
-
-/* Line 1806 of yacc.c  */
 #line 14703 "preproc.y"
-    { (yyval.str) = mm_strdup(">>"); }
+    { (yyval.str) = mm_strdup(">>"); ;}
     break;
 
   case 2744:
-
-/* Line 1806 of yacc.c  */
 #line 14704 "preproc.y"
-    { (yyval.str) = mm_strdup("static"); }
+    { (yyval.str) = mm_strdup("static"); ;}
     break;
 
   case 2745:
-
-/* Line 1806 of yacc.c  */
 #line 14705 "preproc.y"
-    { (yyval.str) = mm_strdup("-="); }
+    { (yyval.str) = mm_strdup("-="); ;}
     break;
 
   case 2746:
-
-/* Line 1806 of yacc.c  */
 #line 14706 "preproc.y"
-    { (yyval.str) = mm_strdup("typedef"); }
+    { (yyval.str) = mm_strdup("typedef"); ;}
     break;
 
   case 2747:
-
-/* Line 1806 of yacc.c  */
 #line 14707 "preproc.y"
-    { (yyval.str) = mm_strdup("volatile"); }
+    { (yyval.str) = mm_strdup("volatile"); ;}
     break;
 
   case 2748:
-
-/* Line 1806 of yacc.c  */
 #line 14708 "preproc.y"
-    { (yyval.str) = mm_strdup("bool"); }
+    { (yyval.str) = mm_strdup("bool"); ;}
     break;
 
   case 2749:
-
-/* Line 1806 of yacc.c  */
 #line 14709 "preproc.y"
-    { (yyval.str) = mm_strdup("enum"); }
+    { (yyval.str) = mm_strdup("enum"); ;}
     break;
 
   case 2750:
-
-/* Line 1806 of yacc.c  */
 #line 14710 "preproc.y"
-    { (yyval.str) = mm_strdup("hour"); }
+    { (yyval.str) = mm_strdup("hour"); ;}
     break;
 
   case 2751:
-
-/* Line 1806 of yacc.c  */
 #line 14711 "preproc.y"
-    { (yyval.str) = mm_strdup("int"); }
+    { (yyval.str) = mm_strdup("int"); ;}
     break;
 
   case 2752:
-
-/* Line 1806 of yacc.c  */
 #line 14712 "preproc.y"
-    { (yyval.str) = mm_strdup("long"); }
+    { (yyval.str) = mm_strdup("long"); ;}
     break;
 
   case 2753:
-
-/* Line 1806 of yacc.c  */
 #line 14713 "preproc.y"
-    { (yyval.str) = mm_strdup("minute"); }
+    { (yyval.str) = mm_strdup("minute"); ;}
     break;
 
   case 2754:
-
-/* Line 1806 of yacc.c  */
 #line 14714 "preproc.y"
-    { (yyval.str) = mm_strdup("month"); }
+    { (yyval.str) = mm_strdup("month"); ;}
     break;
 
   case 2755:
-
-/* Line 1806 of yacc.c  */
 #line 14715 "preproc.y"
-    { (yyval.str) = mm_strdup("second"); }
+    { (yyval.str) = mm_strdup("second"); ;}
     break;
 
   case 2756:
-
-/* Line 1806 of yacc.c  */
 #line 14716 "preproc.y"
-    { (yyval.str) = mm_strdup("short"); }
+    { (yyval.str) = mm_strdup("short"); ;}
     break;
 
   case 2757:
-
-/* Line 1806 of yacc.c  */
 #line 14717 "preproc.y"
-    { (yyval.str) = mm_strdup("signed"); }
+    { (yyval.str) = mm_strdup("signed"); ;}
     break;
 
   case 2758:
-
-/* Line 1806 of yacc.c  */
 #line 14718 "preproc.y"
-    { (yyval.str) = mm_strdup("struct"); }
+    { (yyval.str) = mm_strdup("struct"); ;}
     break;
 
   case 2759:
-
-/* Line 1806 of yacc.c  */
 #line 14719 "preproc.y"
-    { (yyval.str) = mm_strdup("unsigned"); }
+    { (yyval.str) = mm_strdup("unsigned"); ;}
     break;
 
   case 2760:
-
-/* Line 1806 of yacc.c  */
 #line 14720 "preproc.y"
-    { (yyval.str) = mm_strdup("year"); }
+    { (yyval.str) = mm_strdup("year"); ;}
     break;
 
   case 2761:
-
-/* Line 1806 of yacc.c  */
 #line 14721 "preproc.y"
-    { (yyval.str) = mm_strdup("char"); }
+    { (yyval.str) = mm_strdup("char"); ;}
     break;
 
   case 2762:
-
-/* Line 1806 of yacc.c  */
 #line 14722 "preproc.y"
-    { (yyval.str) = mm_strdup("float"); }
+    { (yyval.str) = mm_strdup("float"); ;}
     break;
 
   case 2763:
-
-/* Line 1806 of yacc.c  */
 #line 14723 "preproc.y"
-    { (yyval.str) = mm_strdup("to"); }
+    { (yyval.str) = mm_strdup("to"); ;}
     break;
 
   case 2764:
-
-/* Line 1806 of yacc.c  */
 #line 14724 "preproc.y"
-    { (yyval.str) = mm_strdup("union"); }
+    { (yyval.str) = mm_strdup("union"); ;}
     break;
 
   case 2765:
-
-/* Line 1806 of yacc.c  */
 #line 14725 "preproc.y"
-    { (yyval.str) = mm_strdup("varchar"); }
+    { (yyval.str) = mm_strdup("varchar"); ;}
     break;
 
   case 2766:
-
-/* Line 1806 of yacc.c  */
 #line 14726 "preproc.y"
-    { (yyval.str) = mm_strdup("["); }
+    { (yyval.str) = mm_strdup("["); ;}
     break;
 
   case 2767:
-
-/* Line 1806 of yacc.c  */
 #line 14727 "preproc.y"
-    { (yyval.str) = mm_strdup("]"); }
+    { (yyval.str) = mm_strdup("]"); ;}
     break;
 
   case 2768:
-
-/* Line 1806 of yacc.c  */
 #line 14728 "preproc.y"
-    { (yyval.str) = mm_strdup("="); }
+    { (yyval.str) = mm_strdup("="); ;}
     break;
 
   case 2769:
-
-/* Line 1806 of yacc.c  */
 #line 14729 "preproc.y"
-    { (yyval.str) = mm_strdup(":"); }
+    { (yyval.str) = mm_strdup(":"); ;}
     break;
 
   case 2770:
-
-/* Line 1806 of yacc.c  */
 #line 14732 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2771:
-
-/* Line 1806 of yacc.c  */
 #line 14733 "preproc.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 2772:
-
-/* Line 1806 of yacc.c  */
 #line 14734 "preproc.y"
-    { (yyval.str) = mm_strdup("all"); }
+    { (yyval.str) = mm_strdup("all"); ;}
     break;
 
   case 2773:
-
-/* Line 1806 of yacc.c  */
 #line 14735 "preproc.y"
-    { (yyval.str) = mm_strdup("all"); }
+    { (yyval.str) = mm_strdup("all"); ;}
     break;
 
   case 2774:
-
-/* Line 1806 of yacc.c  */
 #line 14738 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2775:
-
-/* Line 1806 of yacc.c  */
 #line 14739 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[(2) - (3)].str), mm_strdup(")")); }
+    { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[(2) - (3)].str), mm_strdup(")")); ;}
     break;
 
   case 2776:
-
-/* Line 1806 of yacc.c  */
 #line 14740 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("+"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("+"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2777:
-
-/* Line 1806 of yacc.c  */
 #line 14741 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("-"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("-"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2778:
-
-/* Line 1806 of yacc.c  */
 #line 14742 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("*"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("*"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2779:
-
-/* Line 1806 of yacc.c  */
 #line 14743 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("/"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("/"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2780:
-
-/* Line 1806 of yacc.c  */
 #line 14744 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("%"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("%"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2781:
-
-/* Line 1806 of yacc.c  */
 #line 14745 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2782:
-
-/* Line 1806 of yacc.c  */
 #line 14746 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2783:
-
-/* Line 1806 of yacc.c  */
 #line 14749 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2784:
-
-/* Line 1806 of yacc.c  */
 #line 14750 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2785:
-
-/* Line 1806 of yacc.c  */
 #line 14751 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2786:
-
-/* Line 1806 of yacc.c  */
 #line 14752 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2787:
-
-/* Line 1806 of yacc.c  */
 #line 14753 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2788:
-
-/* Line 1806 of yacc.c  */
 #line 14756 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2789:
-
-/* Line 1806 of yacc.c  */
 #line 14757 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2790:
-
-/* Line 1806 of yacc.c  */
 #line 14760 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2791:
-
-/* Line 1806 of yacc.c  */
 #line 14762 "preproc.y"
     {
 		struct variable *var;
@@ -53029,40 +47920,24 @@
 		remove_variable_from_list(&argsinsert, var);
 		add_variable_to_head(&argsresult, var, &no_indicator);
 		(yyval.str) = (yyvsp[(1) - (1)].str);
-	}
+	;}
     break;
 
   case 2792:
-
-/* Line 1806 of yacc.c  */
 #line 14772 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2793:
-
-/* Line 1806 of yacc.c  */
 #line 14773 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 53053 "preproc.c"
+/* Line 1267 of yacc.c.  */
+#line 47939 "preproc.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -53091,10 +47966,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -53102,44 +47973,45 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
-  yyerror_range[1] = yylloc;
+  yyerror_range[0] = yylloc;
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -53156,7 +48028,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -53172,7 +48044,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  yyerror_range[1] = yylsp[1-yylen];
+  yyerror_range[0] = yylsp[1-yylen];
   /* Do not reclaim the symbols of the rule which action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
@@ -53191,7 +48063,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -53206,7 +48078,7 @@
       if (yyssp == yyss)
 	YYABORT;
 
-      yyerror_range[1] = *yylsp;
+      yyerror_range[0] = *yylsp;
       yydestruct ("Error: popping",
 		  yystos[yystate], yyvsp, yylsp);
       YYPOPSTACK (1);
@@ -53214,12 +48086,15 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
-  yyerror_range[2] = yylloc;
+  yyerror_range[1] = yylloc;
   /* Using YYLLOC is tempting, but would change the location of
-     the lookahead.  YYLOC is available though.  */
-  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+     the look-ahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
   *++yylsp = yyloc;
 
   /* Shift the error token.  */
@@ -53243,7 +48118,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -53254,14 +48129,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, &yylloc);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, &yylloc);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -53285,8 +48155,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 14776 "preproc.y"
 
 
diff -Naur postgresql-9.3.4/src/interfaces/ecpg/preproc/preproc.h postgresql/src/interfaces/ecpg/preproc/preproc.h
--- postgresql-9.3.4/src/interfaces/ecpg/preproc/preproc.h	2014-03-17 12:44:43.000000000 -0700
+++ postgresql/src/interfaces/ecpg/preproc/preproc.h	2014-03-31 15:42:01.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -533,16 +535,509 @@
      UMINUS = 751
    };
 #endif
+/* Tokens.  */
+#define SQL_ALLOCATE 258
+#define SQL_AUTOCOMMIT 259
+#define SQL_BOOL 260
+#define SQL_BREAK 261
+#define SQL_CALL 262
+#define SQL_CARDINALITY 263
+#define SQL_CONNECT 264
+#define SQL_COUNT 265
+#define SQL_DATETIME_INTERVAL_CODE 266
+#define SQL_DATETIME_INTERVAL_PRECISION 267
+#define SQL_DESCRIBE 268
+#define SQL_DESCRIPTOR 269
+#define SQL_DISCONNECT 270
+#define SQL_FOUND 271
+#define SQL_FREE 272
+#define SQL_GET 273
+#define SQL_GO 274
+#define SQL_GOTO 275
+#define SQL_IDENTIFIED 276
+#define SQL_INDICATOR 277
+#define SQL_KEY_MEMBER 278
+#define SQL_LENGTH 279
+#define SQL_LONG 280
+#define SQL_NULLABLE 281
+#define SQL_OCTET_LENGTH 282
+#define SQL_OPEN 283
+#define SQL_OUTPUT 284
+#define SQL_REFERENCE 285
+#define SQL_RETURNED_LENGTH 286
+#define SQL_RETURNED_OCTET_LENGTH 287
+#define SQL_SCALE 288
+#define SQL_SECTION 289
+#define SQL_SHORT 290
+#define SQL_SIGNED 291
+#define SQL_SQL 292
+#define SQL_SQLERROR 293
+#define SQL_SQLPRINT 294
+#define SQL_SQLWARNING 295
+#define SQL_START 296
+#define SQL_STOP 297
+#define SQL_STRUCT 298
+#define SQL_UNSIGNED 299
+#define SQL_VAR 300
+#define SQL_WHENEVER 301
+#define S_ADD 302
+#define S_AND 303
+#define S_ANYTHING 304
+#define S_AUTO 305
+#define S_CONST 306
+#define S_DEC 307
+#define S_DIV 308
+#define S_DOTPOINT 309
+#define S_EQUAL 310
+#define S_EXTERN 311
+#define S_INC 312
+#define S_LSHIFT 313
+#define S_MEMPOINT 314
+#define S_MEMBER 315
+#define S_MOD 316
+#define S_MUL 317
+#define S_NEQUAL 318
+#define S_OR 319
+#define S_REGISTER 320
+#define S_RSHIFT 321
+#define S_STATIC 322
+#define S_SUB 323
+#define S_VOLATILE 324
+#define S_TYPEDEF 325
+#define CSTRING 326
+#define CVARIABLE 327
+#define CPP_LINE 328
+#define IP 329
+#define DOLCONST 330
+#define ECONST 331
+#define NCONST 332
+#define UCONST 333
+#define UIDENT 334
+#define IDENT 335
+#define FCONST 336
+#define SCONST 337
+#define BCONST 338
+#define XCONST 339
+#define Op 340
+#define ICONST 341
+#define PARAM 342
+#define TYPECAST 343
+#define DOT_DOT 344
+#define COLON_EQUALS 345
+#define ABORT_P 346
+#define ABSOLUTE_P 347
+#define ACCESS 348
+#define ACTION 349
+#define ADD_P 350
+#define ADMIN 351
+#define AFTER 352
+#define AGGREGATE 353
+#define ALL 354
+#define ALSO 355
+#define ALTER 356
+#define ALWAYS 357
+#define ANALYSE 358
+#define ANALYZE 359
+#define AND 360
+#define ANY 361
+#define ARRAY 362
+#define AS 363
+#define ASC 364
+#define ASSERTION 365
+#define ASSIGNMENT 366
+#define ASYMMETRIC 367
+#define AT 368
+#define ATTRIBUTE 369
+#define AUTHORIZATION 370
+#define BACKWARD 371
+#define BEFORE 372
+#define BEGIN_P 373
+#define BETWEEN 374
+#define BIGINT 375
+#define BINARY 376
+#define BIT 377
+#define BOOLEAN_P 378
+#define BOTH 379
+#define BY 380
+#define CACHE 381
+#define CALLED 382
+#define CASCADE 383
+#define CASCADED 384
+#define CASE 385
+#define CAST 386
+#define CATALOG_P 387
+#define CHAIN 388
+#define CHAR_P 389
+#define CHARACTER 390
+#define CHARACTERISTICS 391
+#define CHECK 392
+#define CHECKPOINT 393
+#define CLASS 394
+#define CLOSE 395
+#define CLUSTER 396
+#define COALESCE 397
+#define COLLATE 398
+#define COLLATION 399
+#define COLUMN 400
+#define COMMENT 401
+#define COMMENTS 402
+#define COMMIT 403
+#define COMMITTED 404
+#define CONCURRENTLY 405
+#define CONFIGURATION 406
+#define CONNECTION 407
+#define CONSTRAINT 408
+#define CONSTRAINTS 409
+#define CONTENT_P 410
+#define CONTINUE_P 411
+#define CONVERSION_P 412
+#define COPY 413
+#define COST 414
+#define CREATE 415
+#define CROSS 416
+#define CSV 417
+#define CURRENT_P 418
+#define CURRENT_CATALOG 419
+#define CURRENT_DATE 420
+#define CURRENT_ROLE 421
+#define CURRENT_SCHEMA 422
+#define CURRENT_TIME 423
+#define CURRENT_TIMESTAMP 424
+#define CURRENT_USER 425
+#define CURSOR 426
+#define CYCLE 427
+#define DATA_P 428
+#define DATABASE 429
+#define DAY_P 430
+#define DEALLOCATE 431
+#define DEC 432
+#define DECIMAL_P 433
+#define DECLARE 434
+#define DEFAULT 435
+#define DEFAULTS 436
+#define DEFERRABLE 437
+#define DEFERRED 438
+#define DEFINER 439
+#define DELETE_P 440
+#define DELIMITER 441
+#define DELIMITERS 442
+#define DESC 443
+#define DICTIONARY 444
+#define DISABLE_P 445
+#define DISCARD 446
+#define DISTINCT 447
+#define DO 448
+#define DOCUMENT_P 449
+#define DOMAIN_P 450
+#define DOUBLE_P 451
+#define DROP 452
+#define EACH 453
+#define ELSE 454
+#define ENABLE_P 455
+#define ENCODING 456
+#define ENCRYPTED 457
+#define END_P 458
+#define ENUM_P 459
+#define ESCAPE 460
+#define EVENT 461
+#define EXCEPT 462
+#define EXCLUDE 463
+#define EXCLUDING 464
+#define EXCLUSIVE 465
+#define EXECUTE 466
+#define EXISTS 467
+#define EXPLAIN 468
+#define EXTENSION 469
+#define EXTERNAL 470
+#define EXTRACT 471
+#define FALSE_P 472
+#define FAMILY 473
+#define FETCH 474
+#define FIRST_P 475
+#define FLOAT_P 476
+#define FOLLOWING 477
+#define FOR 478
+#define FORCE 479
+#define FOREIGN 480
+#define FORWARD 481
+#define FREEZE 482
+#define FROM 483
+#define FULL 484
+#define FUNCTION 485
+#define FUNCTIONS 486
+#define GLOBAL 487
+#define GRANT 488
+#define GRANTED 489
+#define GREATEST 490
+#define GROUP_P 491
+#define HANDLER 492
+#define HAVING 493
+#define HEADER_P 494
+#define HOLD 495
+#define HOUR_P 496
+#define IDENTITY_P 497
+#define IF_P 498
+#define ILIKE 499
+#define IMMEDIATE 500
+#define IMMUTABLE 501
+#define IMPLICIT_P 502
+#define IN_P 503
+#define INCLUDING 504
+#define INCREMENT 505
+#define INDEX 506
+#define INDEXES 507
+#define INHERIT 508
+#define INHERITS 509
+#define INITIALLY 510
+#define INLINE_P 511
+#define INNER_P 512
+#define INOUT 513
+#define INPUT_P 514
+#define INSENSITIVE 515
+#define INSERT 516
+#define INSTEAD 517
+#define INT_P 518
+#define INTEGER 519
+#define INTERSECT 520
+#define INTERVAL 521
+#define INTO 522
+#define INVOKER 523
+#define IS 524
+#define ISNULL 525
+#define ISOLATION 526
+#define JOIN 527
+#define KEY 528
+#define LABEL 529
+#define LANGUAGE 530
+#define LARGE_P 531
+#define LAST_P 532
+#define LATERAL_P 533
+#define LC_COLLATE_P 534
+#define LC_CTYPE_P 535
+#define LEADING 536
+#define LEAKPROOF 537
+#define LEAST 538
+#define LEFT 539
+#define LEVEL 540
+#define LIKE 541
+#define LIMIT 542
+#define LISTEN 543
+#define LOAD 544
+#define LOCAL 545
+#define LOCALTIME 546
+#define LOCALTIMESTAMP 547
+#define LOCATION 548
+#define LOCK_P 549
+#define MAPPING 550
+#define MATCH 551
+#define MATERIALIZED 552
+#define MAXVALUE 553
+#define MINUTE_P 554
+#define MINVALUE 555
+#define MODE 556
+#define MONTH_P 557
+#define MOVE 558
+#define NAME_P 559
+#define NAMES 560
+#define NATIONAL 561
+#define NATURAL 562
+#define NCHAR 563
+#define NEXT 564
+#define NO 565
+#define NONE 566
+#define NOT 567
+#define NOTHING 568
+#define NOTIFY 569
+#define NOTNULL 570
+#define NOWAIT 571
+#define NULL_P 572
+#define NULLIF 573
+#define NULLS_P 574
+#define NUMERIC 575
+#define OBJECT_P 576
+#define OF 577
+#define OFF 578
+#define OFFSET 579
+#define OIDS 580
+#define ON 581
+#define ONLY 582
+#define OPERATOR 583
+#define OPTION 584
+#define OPTIONS 585
+#define OR 586
+#define ORDER 587
+#define OUT_P 588
+#define OUTER_P 589
+#define OVER 590
+#define OVERLAPS 591
+#define OVERLAY 592
+#define OWNED 593
+#define OWNER 594
+#define PARSER 595
+#define PARTIAL 596
+#define PARTITION 597
+#define PASSING 598
+#define PASSWORD 599
+#define PLACING 600
+#define PLANS 601
+#define POSITION 602
+#define PRECEDING 603
+#define PRECISION 604
+#define PRESERVE 605
+#define PREPARE 606
+#define PREPARED 607
+#define PRIMARY 608
+#define PRIOR 609
+#define PRIVILEGES 610
+#define PROCEDURAL 611
+#define PROCEDURE 612
+#define PROGRAM 613
+#define QUOTE 614
+#define RANGE 615
+#define READ 616
+#define REAL 617
+#define REASSIGN 618
+#define RECHECK 619
+#define RECURSIVE 620
+#define REF 621
+#define REFERENCES 622
+#define REFRESH 623
+#define REINDEX 624
+#define RELATIVE_P 625
+#define RELEASE 626
+#define RENAME 627
+#define REPEATABLE 628
+#define REPLACE 629
+#define REPLICA 630
+#define RESET 631
+#define RESTART 632
+#define RESTRICT 633
+#define RETURNING 634
+#define RETURNS 635
+#define REVOKE 636
+#define RIGHT 637
+#define ROLE 638
+#define ROLLBACK 639
+#define ROW 640
+#define ROWS 641
+#define RULE 642
+#define SAVEPOINT 643
+#define SCHEMA 644
+#define SCROLL 645
+#define SEARCH 646
+#define SECOND_P 647
+#define SECURITY 648
+#define SELECT 649
+#define SEQUENCE 650
+#define SEQUENCES 651
+#define SERIALIZABLE 652
+#define SERVER 653
+#define SESSION 654
+#define SESSION_USER 655
+#define SET 656
+#define SETOF 657
+#define SHARE 658
+#define SHOW 659
+#define SIMILAR 660
+#define SIMPLE 661
+#define SMALLINT 662
+#define SNAPSHOT 663
+#define SOME 664
+#define STABLE 665
+#define STANDALONE_P 666
+#define START 667
+#define STATEMENT 668
+#define STATISTICS 669
+#define STDIN 670
+#define STDOUT 671
+#define STORAGE 672
+#define STRICT_P 673
+#define STRIP_P 674
+#define SUBSTRING 675
+#define SYMMETRIC 676
+#define SYSID 677
+#define SYSTEM_P 678
+#define TABLE 679
+#define TABLES 680
+#define TABLESPACE 681
+#define TEMP 682
+#define TEMPLATE 683
+#define TEMPORARY 684
+#define TEXT_P 685
+#define THEN 686
+#define TIME 687
+#define TIMESTAMP 688
+#define TO 689
+#define TRAILING 690
+#define TRANSACTION 691
+#define TREAT 692
+#define TRIGGER 693
+#define TRIM 694
+#define TRUE_P 695
+#define TRUNCATE 696
+#define TRUSTED 697
+#define TYPE_P 698
+#define TYPES_P 699
+#define UNBOUNDED 700
+#define UNCOMMITTED 701
+#define UNENCRYPTED 702
+#define UNION 703
+#define UNIQUE 704
+#define UNKNOWN 705
+#define UNLISTEN 706
+#define UNLOGGED 707
+#define UNTIL 708
+#define UPDATE 709
+#define USER 710
+#define USING 711
+#define VACUUM 712
+#define VALID 713
+#define VALIDATE 714
+#define VALIDATOR 715
+#define VALUE_P 716
+#define VALUES 717
+#define VARCHAR 718
+#define VARIADIC 719
+#define VARYING 720
+#define VERBOSE 721
+#define VERSION_P 722
+#define VIEW 723
+#define VOLATILE 724
+#define WHEN 725
+#define WHERE 726
+#define WHITESPACE_P 727
+#define WINDOW 728
+#define WITH 729
+#define WITHOUT 730
+#define WORK 731
+#define WRAPPER 732
+#define WRITE 733
+#define XML_P 734
+#define XMLATTRIBUTES 735
+#define XMLCONCAT 736
+#define XMLELEMENT 737
+#define XMLEXISTS 738
+#define XMLFOREST 739
+#define XMLPARSE 740
+#define XMLPI 741
+#define XMLROOT 742
+#define XMLSERIALIZE 743
+#define YEAR_P 744
+#define YES_P 745
+#define ZONE 746
+#define NULLS_FIRST 747
+#define NULLS_LAST 748
+#define WITH_TIME 749
+#define POSTFIXOP 750
+#define UMINUS 751
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 564 "preproc.y"
-
+{
 	double	dval;
 	char	*str;
 	int		ival;
@@ -555,15 +1050,13 @@
 	struct	fetch_desc	descriptor;
 	struct  su_symbol	struct_union;
 	struct	prep		prep;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 563 "preproc.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 1056 "preproc.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE base_yylval;
@@ -582,4 +1075,3 @@
 #endif
 
 extern YYLTYPE base_yylloc;
-
diff -Naur postgresql-9.3.4/src/pl/plpgsql/src/pl_gram.c postgresql/src/pl/plpgsql/src/pl_gram.c
--- postgresql-9.3.4/src/pl/plpgsql/src/pl_gram.c	2014-03-17 12:44:43.000000000 -0700
+++ postgresql/src/pl/plpgsql/src/pl_gram.c	2014-03-31 15:40:35.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,255 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 1
 
 /* Substitute the variable and function names.  */
-#define yyparse         plpgsql_yyparse
-#define yylex           plpgsql_yylex
-#define yyerror         plpgsql_yyerror
-#define yylval          plpgsql_yylval
-#define yychar          plpgsql_yychar
-#define yydebug         plpgsql_yydebug
-#define yynerrs         plpgsql_yynerrs
-#define yylloc          plpgsql_yylloc
+#define yyparse plpgsql_yyparse
+#define yylex   plpgsql_yylex
+#define yyerror plpgsql_yyerror
+#define yylval  plpgsql_yylval
+#define yychar  plpgsql_yychar
+#define yydebug plpgsql_yydebug
+#define yynerrs plpgsql_yynerrs
+#define yylloc plpgsql_yylloc
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     IDENT = 258,
+     FCONST = 259,
+     SCONST = 260,
+     BCONST = 261,
+     XCONST = 262,
+     Op = 263,
+     ICONST = 264,
+     PARAM = 265,
+     TYPECAST = 266,
+     DOT_DOT = 267,
+     COLON_EQUALS = 268,
+     T_WORD = 269,
+     T_CWORD = 270,
+     T_DATUM = 271,
+     LESS_LESS = 272,
+     GREATER_GREATER = 273,
+     K_ABSOLUTE = 274,
+     K_ALIAS = 275,
+     K_ALL = 276,
+     K_ARRAY = 277,
+     K_BACKWARD = 278,
+     K_BEGIN = 279,
+     K_BY = 280,
+     K_CASE = 281,
+     K_CLOSE = 282,
+     K_COLLATE = 283,
+     K_COLUMN = 284,
+     K_COLUMN_NAME = 285,
+     K_CONSTANT = 286,
+     K_CONSTRAINT = 287,
+     K_CONSTRAINT_NAME = 288,
+     K_CONTINUE = 289,
+     K_CURRENT = 290,
+     K_CURSOR = 291,
+     K_DATATYPE = 292,
+     K_DEBUG = 293,
+     K_DECLARE = 294,
+     K_DEFAULT = 295,
+     K_DETAIL = 296,
+     K_DIAGNOSTICS = 297,
+     K_DUMP = 298,
+     K_ELSE = 299,
+     K_ELSIF = 300,
+     K_END = 301,
+     K_ERRCODE = 302,
+     K_ERROR = 303,
+     K_EXCEPTION = 304,
+     K_EXECUTE = 305,
+     K_EXIT = 306,
+     K_FETCH = 307,
+     K_FIRST = 308,
+     K_FOR = 309,
+     K_FOREACH = 310,
+     K_FORWARD = 311,
+     K_FROM = 312,
+     K_GET = 313,
+     K_HINT = 314,
+     K_IF = 315,
+     K_IN = 316,
+     K_INFO = 317,
+     K_INSERT = 318,
+     K_INTO = 319,
+     K_IS = 320,
+     K_LAST = 321,
+     K_LOG = 322,
+     K_LOOP = 323,
+     K_MESSAGE = 324,
+     K_MESSAGE_TEXT = 325,
+     K_MOVE = 326,
+     K_NEXT = 327,
+     K_NO = 328,
+     K_NOT = 329,
+     K_NOTICE = 330,
+     K_NULL = 331,
+     K_OPEN = 332,
+     K_OPTION = 333,
+     K_OR = 334,
+     K_PERFORM = 335,
+     K_PG_DATATYPE_NAME = 336,
+     K_PG_EXCEPTION_CONTEXT = 337,
+     K_PG_EXCEPTION_DETAIL = 338,
+     K_PG_EXCEPTION_HINT = 339,
+     K_PRIOR = 340,
+     K_QUERY = 341,
+     K_RAISE = 342,
+     K_RELATIVE = 343,
+     K_RESULT_OID = 344,
+     K_RETURN = 345,
+     K_RETURNED_SQLSTATE = 346,
+     K_REVERSE = 347,
+     K_ROWTYPE = 348,
+     K_ROW_COUNT = 349,
+     K_SCHEMA = 350,
+     K_SCHEMA_NAME = 351,
+     K_SCROLL = 352,
+     K_SLICE = 353,
+     K_SQLSTATE = 354,
+     K_STACKED = 355,
+     K_STRICT = 356,
+     K_TABLE = 357,
+     K_TABLE_NAME = 358,
+     K_THEN = 359,
+     K_TO = 360,
+     K_TYPE = 361,
+     K_USE_COLUMN = 362,
+     K_USE_VARIABLE = 363,
+     K_USING = 364,
+     K_VARIABLE_CONFLICT = 365,
+     K_WARNING = 366,
+     K_WHEN = 367,
+     K_WHILE = 368
+   };
+#endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define T_WORD 269
+#define T_CWORD 270
+#define T_DATUM 271
+#define LESS_LESS 272
+#define GREATER_GREATER 273
+#define K_ABSOLUTE 274
+#define K_ALIAS 275
+#define K_ALL 276
+#define K_ARRAY 277
+#define K_BACKWARD 278
+#define K_BEGIN 279
+#define K_BY 280
+#define K_CASE 281
+#define K_CLOSE 282
+#define K_COLLATE 283
+#define K_COLUMN 284
+#define K_COLUMN_NAME 285
+#define K_CONSTANT 286
+#define K_CONSTRAINT 287
+#define K_CONSTRAINT_NAME 288
+#define K_CONTINUE 289
+#define K_CURRENT 290
+#define K_CURSOR 291
+#define K_DATATYPE 292
+#define K_DEBUG 293
+#define K_DECLARE 294
+#define K_DEFAULT 295
+#define K_DETAIL 296
+#define K_DIAGNOSTICS 297
+#define K_DUMP 298
+#define K_ELSE 299
+#define K_ELSIF 300
+#define K_END 301
+#define K_ERRCODE 302
+#define K_ERROR 303
+#define K_EXCEPTION 304
+#define K_EXECUTE 305
+#define K_EXIT 306
+#define K_FETCH 307
+#define K_FIRST 308
+#define K_FOR 309
+#define K_FOREACH 310
+#define K_FORWARD 311
+#define K_FROM 312
+#define K_GET 313
+#define K_HINT 314
+#define K_IF 315
+#define K_IN 316
+#define K_INFO 317
+#define K_INSERT 318
+#define K_INTO 319
+#define K_IS 320
+#define K_LAST 321
+#define K_LOG 322
+#define K_LOOP 323
+#define K_MESSAGE 324
+#define K_MESSAGE_TEXT 325
+#define K_MOVE 326
+#define K_NEXT 327
+#define K_NO 328
+#define K_NOT 329
+#define K_NOTICE 330
+#define K_NULL 331
+#define K_OPEN 332
+#define K_OPTION 333
+#define K_OR 334
+#define K_PERFORM 335
+#define K_PG_DATATYPE_NAME 336
+#define K_PG_EXCEPTION_CONTEXT 337
+#define K_PG_EXCEPTION_DETAIL 338
+#define K_PG_EXCEPTION_HINT 339
+#define K_PRIOR 340
+#define K_QUERY 341
+#define K_RAISE 342
+#define K_RELATIVE 343
+#define K_RESULT_OID 344
+#define K_RETURN 345
+#define K_RETURNED_SQLSTATE 346
+#define K_REVERSE 347
+#define K_ROWTYPE 348
+#define K_ROW_COUNT 349
+#define K_SCHEMA 350
+#define K_SCHEMA_NAME 351
+#define K_SCROLL 352
+#define K_SLICE 353
+#define K_SQLSTATE 354
+#define K_STACKED 355
+#define K_STRICT 356
+#define K_TABLE 357
+#define K_TABLE_NAME 358
+#define K_THEN 359
+#define K_TO 360
+#define K_TYPE 361
+#define K_USE_COLUMN 362
+#define K_USE_VARIABLE 363
+#define K_USING 364
+#define K_VARIABLE_CONFLICT 365
+#define K_WARNING 366
+#define K_WHEN 367
+#define K_WHILE 368
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+
+/* Copy the first part of user declarations.  */
 #line 1 "pl_gram.y"
 
 /*-------------------------------------------------------------------------
@@ -186,9 +416,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 191 "pl_gram.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -207,136 +434,10 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     IDENT = 258,
-     FCONST = 259,
-     SCONST = 260,
-     BCONST = 261,
-     XCONST = 262,
-     Op = 263,
-     ICONST = 264,
-     PARAM = 265,
-     TYPECAST = 266,
-     DOT_DOT = 267,
-     COLON_EQUALS = 268,
-     T_WORD = 269,
-     T_CWORD = 270,
-     T_DATUM = 271,
-     LESS_LESS = 272,
-     GREATER_GREATER = 273,
-     K_ABSOLUTE = 274,
-     K_ALIAS = 275,
-     K_ALL = 276,
-     K_ARRAY = 277,
-     K_BACKWARD = 278,
-     K_BEGIN = 279,
-     K_BY = 280,
-     K_CASE = 281,
-     K_CLOSE = 282,
-     K_COLLATE = 283,
-     K_COLUMN = 284,
-     K_COLUMN_NAME = 285,
-     K_CONSTANT = 286,
-     K_CONSTRAINT = 287,
-     K_CONSTRAINT_NAME = 288,
-     K_CONTINUE = 289,
-     K_CURRENT = 290,
-     K_CURSOR = 291,
-     K_DATATYPE = 292,
-     K_DEBUG = 293,
-     K_DECLARE = 294,
-     K_DEFAULT = 295,
-     K_DETAIL = 296,
-     K_DIAGNOSTICS = 297,
-     K_DUMP = 298,
-     K_ELSE = 299,
-     K_ELSIF = 300,
-     K_END = 301,
-     K_ERRCODE = 302,
-     K_ERROR = 303,
-     K_EXCEPTION = 304,
-     K_EXECUTE = 305,
-     K_EXIT = 306,
-     K_FETCH = 307,
-     K_FIRST = 308,
-     K_FOR = 309,
-     K_FOREACH = 310,
-     K_FORWARD = 311,
-     K_FROM = 312,
-     K_GET = 313,
-     K_HINT = 314,
-     K_IF = 315,
-     K_IN = 316,
-     K_INFO = 317,
-     K_INSERT = 318,
-     K_INTO = 319,
-     K_IS = 320,
-     K_LAST = 321,
-     K_LOG = 322,
-     K_LOOP = 323,
-     K_MESSAGE = 324,
-     K_MESSAGE_TEXT = 325,
-     K_MOVE = 326,
-     K_NEXT = 327,
-     K_NO = 328,
-     K_NOT = 329,
-     K_NOTICE = 330,
-     K_NULL = 331,
-     K_OPEN = 332,
-     K_OPTION = 333,
-     K_OR = 334,
-     K_PERFORM = 335,
-     K_PG_DATATYPE_NAME = 336,
-     K_PG_EXCEPTION_CONTEXT = 337,
-     K_PG_EXCEPTION_DETAIL = 338,
-     K_PG_EXCEPTION_HINT = 339,
-     K_PRIOR = 340,
-     K_QUERY = 341,
-     K_RAISE = 342,
-     K_RELATIVE = 343,
-     K_RESULT_OID = 344,
-     K_RETURN = 345,
-     K_RETURNED_SQLSTATE = 346,
-     K_REVERSE = 347,
-     K_ROWTYPE = 348,
-     K_ROW_COUNT = 349,
-     K_SCHEMA = 350,
-     K_SCHEMA_NAME = 351,
-     K_SCROLL = 352,
-     K_SLICE = 353,
-     K_SQLSTATE = 354,
-     K_STACKED = 355,
-     K_STRICT = 356,
-     K_TABLE = 357,
-     K_TABLE_NAME = 358,
-     K_THEN = 359,
-     K_TO = 360,
-     K_TYPE = 361,
-     K_USE_COLUMN = 362,
-     K_USE_VARIABLE = 363,
-     K_USING = 364,
-     K_VARIABLE_CONFLICT = 365,
-     K_WARNING = 366,
-     K_WHEN = 367,
-     K_WHILE = 368
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 116 "pl_gram.y"
-
+{
 		core_YYSTYPE			core_yystype;
 		/* these fields must match core_YYSTYPE: */
 		int						ival;
@@ -386,15 +487,13 @@
 		PLpgSQL_diag_item		*diagitem;
 		PLpgSQL_stmt_fetch		*fetch;
 		PLpgSQL_case_when		*casewhen;
-
-
-
-/* Line 293 of yacc.c  */
-#line 394 "pl_gram.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 493 "pl_gram.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
@@ -414,8 +513,8 @@
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 419 "pl_gram.c"
+/* Line 216 of yacc.c.  */
+#line 518 "pl_gram.tab.c"
 
 #ifdef short
 # undef short
@@ -490,14 +589,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -518,11 +617,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -545,24 +644,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -576,44 +675,23 @@
 	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
 	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
 
-/* A type that is properly aligned for any stack member.  */
-union yyalloc
-{
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-  YYLTYPE yyls_alloc;
-};
-
-/* The size of the maximum gap between one aligned stack and the next.  */
-# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
-
-/* The size of an array large to enough to hold all stacks, each with
-   N elements.  */
-# define YYSTACK_BYTES(N) \
-     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
-      + 2 * YYSTACK_GAP_MAXIMUM)
-
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
+/* A type that is properly aligned for any stack member.  */
+union yyalloc
+{
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+    YYLTYPE yyls;
+};
+
+/* The size of the maximum gap between one aligned stack and the next.  */
+# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
+
+/* The size of an array large to enough to hold all stacks, each with
+   N elements.  */
+# define YYSTACK_BYTES(N) \
+     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
+      + 2 * YYSTACK_GAP_MAXIMUM)
 
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -631,7 +709,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
@@ -839,7 +934,7 @@
   "K_VARIABLE_CONFLICT", "K_WARNING", "K_WHEN", "K_WHILE", "'#'", "';'",
   "'('", "')'", "','", "'='", "'['", "$accept", "pl_function",
   "comp_options", "comp_option", "opt_semi", "pl_block", "decl_sect",
-  "decl_start", "decl_stmts", "decl_stmt", "decl_statement", "$@1",
+  "decl_start", "decl_stmts", "decl_stmt", "decl_statement", "@1",
   "opt_scrollable", "decl_cursor_query", "decl_cursor_args",
   "decl_cursor_arglist", "decl_cursor_arg", "decl_is_for",
   "decl_aliasitem", "decl_varname", "decl_const", "decl_datatype",
@@ -937,8 +1032,8 @@
        1,     1,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -1039,7 +1134,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -58
 static const yytype_int16 yytable[] =
 {
@@ -1134,12 +1230,6 @@
        0,     0,     0,     0,     0,    97,     0,     0,    98
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-226))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int16 yycheck[] =
 {
        4,    75,    73,    13,    17,    13,    13,   187,    39,    20,
@@ -1280,18 +1370,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -1301,6 +1382,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -1463,20 +1545,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -1511,11 +1590,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -1552,6 +1631,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -1654,142 +1734,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1823,9 +1876,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1841,17 +1895,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
-/* Location data for the lookahead symbol.  */
-YYLTYPE yylloc;
-
 /* Number of syntax errors so far.  */
 int yynerrs;
+/* Location data for the look-ahead symbol.  */
+YYLTYPE yylloc;
+
 
 
 /*----------.
@@ -1880,47 +1935,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-       `yyls': related to locations.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    /* The location stack.  */
-    YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls;
-    YYLTYPE *yylsp;
-
-    /* The locations where the error started and ended.  */
-    YYLTYPE yyerror_range[3];
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-  YYLTYPE yyloc;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1928,37 +1950,63 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+  /* The location stack.  */
+  YYLTYPE yylsa[YYINITDEPTH];
+  YYLTYPE *yyls = yylsa;
+  YYLTYPE *yylsp;
+  /* The locations where the error started and ended.  */
+  YYLTYPE yyerror_range[2];
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+  YYLTYPE yyloc;
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yyls = yylsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
   yylsp = yyls;
-
 #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
   /* Initialize the default location before parsing starts.  */
   yylloc.first_line   = yylloc.last_line   = 1;
-  yylloc.first_column = yylloc.last_column = 1;
+  yylloc.first_column = yylloc.last_column = 0;
 #endif
 
   goto yysetstate;
@@ -1997,7 +2045,6 @@
 		    &yyvs1, yysize * sizeof (*yyvsp),
 		    &yyls1, yysize * sizeof (*yylsp),
 		    &yystacksize);
-
 	yyls = yyls1;
 	yyss = yyss1;
 	yyvs = yyvs1;
@@ -2019,9 +2066,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
-	YYSTACK_RELOCATE (yyls_alloc, yyls);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+	YYSTACK_RELOCATE (yyls);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -2042,9 +2089,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -2053,16 +2097,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -2088,22 +2132,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -2144,53 +2192,41 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 343 "pl_gram.y"
     {
 						plpgsql_parse_result = (PLpgSQL_stmt_block *) (yyvsp[(2) - (3)].stmt);
-					}
+					;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 353 "pl_gram.y"
     {
 						plpgsql_DumpExecTree = true;
-					}
+					;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 357 "pl_gram.y"
     {
 						plpgsql_curr_compile->resolve_option = PLPGSQL_RESOLVE_ERROR;
-					}
+					;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 361 "pl_gram.y"
     {
 						plpgsql_curr_compile->resolve_option = PLPGSQL_RESOLVE_VARIABLE;
-					}
+					;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 365 "pl_gram.y"
     {
 						plpgsql_curr_compile->resolve_option = PLPGSQL_RESOLVE_COLUMN;
-					}
+					;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 375 "pl_gram.y"
     {
 						PLpgSQL_stmt_block *new;
@@ -2209,12 +2245,10 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 397 "pl_gram.y"
     {
 						/* done with decls, so resume identifier lookup */
@@ -2222,36 +2256,30 @@
 						(yyval.declhdr).label	  = (yyvsp[(1) - (1)].str);
 						(yyval.declhdr).n_initvars = 0;
 						(yyval.declhdr).initvarnos = NULL;
-					}
+					;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 405 "pl_gram.y"
     {
 						plpgsql_IdentifierLookup = IDENTIFIER_LOOKUP_NORMAL;
 						(yyval.declhdr).label	  = (yyvsp[(1) - (2)].str);
 						(yyval.declhdr).n_initvars = 0;
 						(yyval.declhdr).initvarnos = NULL;
-					}
+					;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 412 "pl_gram.y"
     {
 						plpgsql_IdentifierLookup = IDENTIFIER_LOOKUP_NORMAL;
 						(yyval.declhdr).label	  = (yyvsp[(1) - (3)].str);
 						/* Remember variables declared in decl_stmts */
 						(yyval.declhdr).n_initvars = plpgsql_add_initdatums(&((yyval.declhdr).initvarnos));
-					}
+					;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 421 "pl_gram.y"
     {
 						/* Forget any variables created before block */
@@ -2261,21 +2289,17 @@
 						 * we process the decl_stmts
 						 */
 						plpgsql_IdentifierLookup = IDENTIFIER_LOOKUP_DECLARE;
-					}
+					;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 438 "pl_gram.y"
     {
 						/* We allow useless extra DECLAREs */
-					}
+					;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 442 "pl_gram.y"
     {
 						/*
@@ -2286,12 +2310,10 @@
 								(errcode(ERRCODE_SYNTAX_ERROR),
 								 errmsg("block label must be placed before DECLARE, not after"),
 								 parser_errposition((yylsp[(1) - (3)]))));
-					}
+					;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 455 "pl_gram.y"
     {
 						PLpgSQL_variable	*var;
@@ -2346,29 +2368,23 @@
 										 errmsg("default value for row or record variable is not supported"),
 										 parser_errposition((yylsp[(5) - (6)]))));
 						}
-					}
+					;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 510 "pl_gram.y"
     {
 						plpgsql_ns_additem((yyvsp[(4) - (5)].nsitem)->itemtype,
 										   (yyvsp[(4) - (5)].nsitem)->itemno, (yyvsp[(1) - (5)].varname).name);
-					}
+					;}
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 515 "pl_gram.y"
-    { plpgsql_ns_push((yyvsp[(1) - (3)].varname).name); }
+    { plpgsql_ns_push((yyvsp[(1) - (3)].varname).name); ;}
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 517 "pl_gram.y"
     {
 						PLpgSQL_var *new;
@@ -2416,57 +2432,45 @@
 						else
 							new->cursor_explicit_argrow = (yyvsp[(5) - (7)].datum)->dno;
 						new->cursor_options = CURSOR_OPT_FAST_PLAN | (yyvsp[(2) - (7)].ival);
-					}
+					;}
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 567 "pl_gram.y"
     {
 						(yyval.ival) = 0;
-					}
+					;}
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 571 "pl_gram.y"
     {
 						(yyval.ival) = CURSOR_OPT_NO_SCROLL;
-					}
+					;}
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 575 "pl_gram.y"
     {
 						(yyval.ival) = CURSOR_OPT_SCROLL;
-					}
+					;}
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 581 "pl_gram.y"
     {
 						(yyval.expr) = read_sql_stmt("");
-					}
+					;}
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 587 "pl_gram.y"
     {
 						(yyval.datum) = NULL;
-					}
+					;}
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 591 "pl_gram.y"
     {
 						PLpgSQL_row *new;
@@ -2493,41 +2497,33 @@
 
 						plpgsql_adddatum((PLpgSQL_datum *) new);
 						(yyval.datum) = (PLpgSQL_datum *) new;
-					}
+					;}
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 620 "pl_gram.y"
     {
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].datum));
-					}
+					;}
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 624 "pl_gram.y"
     {
 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].datum));
-					}
+					;}
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 630 "pl_gram.y"
     {
 						(yyval.datum) = (PLpgSQL_datum *)
 							plpgsql_build_variable((yyvsp[(1) - (2)].varname).name, (yyvsp[(1) - (2)].varname).lineno,
 												   (yyvsp[(2) - (2)].dtype), true);
-					}
+					;}
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 641 "pl_gram.y"
     {
 						PLpgSQL_nsitem *nsi;
@@ -2542,12 +2538,10 @@
 											(yyvsp[(1) - (1)].word).ident),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.nsitem) = nsi;
-					}
+					;}
     break;
 
   case 37:
-
-/* Line 1806 of yacc.c  */
 #line 656 "pl_gram.y"
     {
 						PLpgSQL_nsitem *nsi;
@@ -2562,12 +2556,10 @@
 											(yyvsp[(1) - (1)].keyword)),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.nsitem) = nsi;
-					}
+					;}
     break;
 
   case 38:
-
-/* Line 1806 of yacc.c  */
 #line 671 "pl_gram.y"
     {
 						PLpgSQL_nsitem *nsi;
@@ -2593,12 +2585,10 @@
 											NameListToString((yyvsp[(1) - (1)].cword).idents)),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.nsitem) = nsi;
-					}
+					;}
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 699 "pl_gram.y"
     {
 						(yyval.varname).name = (yyvsp[(1) - (1)].word).ident;
@@ -2611,12 +2601,10 @@
 											  (yyvsp[(1) - (1)].word).ident, NULL, NULL,
 											  NULL) != NULL)
 							yyerror("duplicate declaration");
-					}
+					;}
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 712 "pl_gram.y"
     {
 						(yyval.varname).name = pstrdup((yyvsp[(1) - (1)].keyword));
@@ -2629,26 +2617,20 @@
 											  (yyvsp[(1) - (1)].keyword), NULL, NULL,
 											  NULL) != NULL)
 							yyerror("duplicate declaration");
-					}
+					;}
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 727 "pl_gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 729 "pl_gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 43:
-
-/* Line 1806 of yacc.c  */
 #line 733 "pl_gram.y"
     {
 						/*
@@ -2657,256 +2639,190 @@
 						 */
 						(yyval.dtype) = read_datatype(yychar);
 						yyclearin;
-					}
+					;}
     break;
 
   case 44:
-
-/* Line 1806 of yacc.c  */
 #line 744 "pl_gram.y"
-    { (yyval.oid) = InvalidOid; }
+    { (yyval.oid) = InvalidOid; ;}
     break;
 
   case 45:
-
-/* Line 1806 of yacc.c  */
 #line 746 "pl_gram.y"
     {
 						(yyval.oid) = get_collation_oid(list_make1(makeString((yyvsp[(2) - (2)].word).ident)),
 											   false);
-					}
+					;}
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 751 "pl_gram.y"
     {
 						(yyval.oid) = get_collation_oid(list_make1(makeString(pstrdup((yyvsp[(2) - (2)].keyword)))),
 											   false);
-					}
+					;}
     break;
 
   case 47:
-
-/* Line 1806 of yacc.c  */
 #line 756 "pl_gram.y"
     {
 						(yyval.oid) = get_collation_oid((yyvsp[(2) - (2)].cword).idents, false);
-					}
+					;}
     break;
 
   case 48:
-
-/* Line 1806 of yacc.c  */
 #line 762 "pl_gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 49:
-
-/* Line 1806 of yacc.c  */
 #line 764 "pl_gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 50:
-
-/* Line 1806 of yacc.c  */
 #line 768 "pl_gram.y"
-    { (yyval.expr) = NULL; }
+    { (yyval.expr) = NULL; ;}
     break;
 
   case 51:
-
-/* Line 1806 of yacc.c  */
 #line 770 "pl_gram.y"
     {
 						(yyval.expr) = read_sql_expression(';', ";");
-					}
+					;}
     break;
 
   case 56:
-
-/* Line 1806 of yacc.c  */
 #line 784 "pl_gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 57:
-
-/* Line 1806 of yacc.c  */
 #line 786 "pl_gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 58:
-
-/* Line 1806 of yacc.c  */
 #line 790 "pl_gram.y"
     {
 							if ((yyvsp[(2) - (2)].stmt) == NULL)
 								(yyval.list) = (yyvsp[(1) - (2)].list);
 							else
 								(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].stmt));
-						}
+						;}
     break;
 
   case 59:
-
-/* Line 1806 of yacc.c  */
 #line 797 "pl_gram.y"
     {
 							if ((yyvsp[(1) - (1)].stmt) == NULL)
 								(yyval.list) = NIL;
 							else
 								(yyval.list) = list_make1((yyvsp[(1) - (1)].stmt));
-						}
+						;}
     break;
 
   case 60:
-
-/* Line 1806 of yacc.c  */
 #line 806 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (2)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (2)].stmt); ;}
     break;
 
   case 61:
-
-/* Line 1806 of yacc.c  */
 #line 808 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 62:
-
-/* Line 1806 of yacc.c  */
 #line 810 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 63:
-
-/* Line 1806 of yacc.c  */
 #line 812 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 64:
-
-/* Line 1806 of yacc.c  */
 #line 814 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 65:
-
-/* Line 1806 of yacc.c  */
 #line 816 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 66:
-
-/* Line 1806 of yacc.c  */
 #line 818 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 67:
-
-/* Line 1806 of yacc.c  */
 #line 820 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 68:
-
-/* Line 1806 of yacc.c  */
 #line 822 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 69:
-
-/* Line 1806 of yacc.c  */
 #line 824 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 70:
-
-/* Line 1806 of yacc.c  */
 #line 826 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 71:
-
-/* Line 1806 of yacc.c  */
 #line 828 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 72:
-
-/* Line 1806 of yacc.c  */
 #line 830 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 73:
-
-/* Line 1806 of yacc.c  */
 #line 832 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 74:
-
-/* Line 1806 of yacc.c  */
 #line 834 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 75:
-
-/* Line 1806 of yacc.c  */
 #line 836 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 76:
-
-/* Line 1806 of yacc.c  */
 #line 838 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 77:
-
-/* Line 1806 of yacc.c  */
 #line 840 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 78:
-
-/* Line 1806 of yacc.c  */
 #line 842 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 79:
-
-/* Line 1806 of yacc.c  */
 #line 844 "pl_gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 80:
-
-/* Line 1806 of yacc.c  */
 #line 848 "pl_gram.y"
     {
 						PLpgSQL_stmt_perform *new;
@@ -2917,12 +2833,10 @@
 						new->expr  = (yyvsp[(2) - (2)].expr);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 81:
-
-/* Line 1806 of yacc.c  */
 #line 861 "pl_gram.y"
     {
 						PLpgSQL_stmt_assign *new;
@@ -2934,12 +2848,10 @@
 						new->expr  = (yyvsp[(3) - (3)].expr);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 82:
-
-/* Line 1806 of yacc.c  */
 #line 875 "pl_gram.y"
     {
 						PLpgSQL_stmt_getdiag	 *new;
@@ -2996,57 +2908,45 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 83:
-
-/* Line 1806 of yacc.c  */
 #line 934 "pl_gram.y"
     {
 						(yyval.boolean) = false;
-					}
+					;}
     break;
 
   case 84:
-
-/* Line 1806 of yacc.c  */
 #line 938 "pl_gram.y"
     {
 						(yyval.boolean) = false;
-					}
+					;}
     break;
 
   case 85:
-
-/* Line 1806 of yacc.c  */
 #line 942 "pl_gram.y"
     {
 						(yyval.boolean) = true;
-					}
+					;}
     break;
 
   case 86:
-
-/* Line 1806 of yacc.c  */
 #line 948 "pl_gram.y"
     {
 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].diagitem));
-					}
+					;}
     break;
 
   case 87:
-
-/* Line 1806 of yacc.c  */
 #line 952 "pl_gram.y"
     {
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].diagitem));
-					}
+					;}
     break;
 
   case 88:
-
-/* Line 1806 of yacc.c  */
 #line 958 "pl_gram.y"
     {
 						PLpgSQL_diag_item *new;
@@ -3056,12 +2956,10 @@
 						new->kind = (yyvsp[(3) - (3)].ival);
 
 						(yyval.diagitem) = new;
-					}
+					;}
     break;
 
   case 89:
-
-/* Line 1806 of yacc.c  */
 #line 970 "pl_gram.y"
     {
 						int	tok = yylex();
@@ -3104,12 +3002,10 @@
 							(yyval.ival) = PLPGSQL_GETDIAG_RETURNED_SQLSTATE;
 						else
 							yyerror("unrecognized GET DIAGNOSTICS item");
-					}
+					;}
     break;
 
   case 90:
-
-/* Line 1806 of yacc.c  */
 #line 1015 "pl_gram.y"
     {
 						check_assignable((yyvsp[(1) - (1)].wdatum).datum, (yylsp[(1) - (1)]));
@@ -3121,42 +3017,34 @@
 											NameOfDatum(&((yyvsp[(1) - (1)].wdatum)))),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.ival) = (yyvsp[(1) - (1)].wdatum).datum->dno;
-					}
+					;}
     break;
 
   case 91:
-
-/* Line 1806 of yacc.c  */
 #line 1027 "pl_gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 92:
-
-/* Line 1806 of yacc.c  */
 #line 1032 "pl_gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 93:
-
-/* Line 1806 of yacc.c  */
 #line 1040 "pl_gram.y"
     {
 						check_assignable((yyvsp[(1) - (1)].wdatum).datum, (yylsp[(1) - (1)]));
 						(yyval.ival) = (yyvsp[(1) - (1)].wdatum).datum->dno;
-					}
+					;}
     break;
 
   case 94:
-
-/* Line 1806 of yacc.c  */
 #line 1045 "pl_gram.y"
     {
 						PLpgSQL_arrayelem	*new;
@@ -3171,12 +3059,10 @@
 						plpgsql_adddatum((PLpgSQL_datum *) new);
 
 						(yyval.ival) = new->dno;
-					}
+					;}
     break;
 
   case 95:
-
-/* Line 1806 of yacc.c  */
 #line 1062 "pl_gram.y"
     {
 						PLpgSQL_stmt_if *new;
@@ -3190,21 +3076,17 @@
 						new->else_body  = (yyvsp[(5) - (8)].list);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 96:
-
-/* Line 1806 of yacc.c  */
 #line 1078 "pl_gram.y"
     {
 						(yyval.list) = NIL;
-					}
+					;}
     break;
 
   case 97:
-
-/* Line 1806 of yacc.c  */
 #line 1082 "pl_gram.y"
     {
 						PLpgSQL_if_elsif *new;
@@ -3215,39 +3097,31 @@
 						new->stmts  = (yyvsp[(4) - (4)].list);
 
 						(yyval.list) = lappend((yyvsp[(1) - (4)].list), new);
-					}
+					;}
     break;
 
   case 98:
-
-/* Line 1806 of yacc.c  */
 #line 1095 "pl_gram.y"
     {
 						(yyval.list) = NIL;
-					}
+					;}
     break;
 
   case 99:
-
-/* Line 1806 of yacc.c  */
 #line 1099 "pl_gram.y"
     {
 						(yyval.list) = (yyvsp[(2) - (2)].list);
-					}
+					;}
     break;
 
   case 100:
-
-/* Line 1806 of yacc.c  */
 #line 1105 "pl_gram.y"
     {
 						(yyval.stmt) = make_case((yylsp[(1) - (7)]), (yyvsp[(2) - (7)].expr), (yyvsp[(3) - (7)].list), (yyvsp[(4) - (7)].list));
-					}
+					;}
     break;
 
   case 101:
-
-/* Line 1806 of yacc.c  */
 #line 1111 "pl_gram.y"
     {
 						PLpgSQL_expr *expr = NULL;
@@ -3260,30 +3134,24 @@
 						}
 						plpgsql_push_back_token(K_WHEN);
 						(yyval.expr) = expr;
-					}
+					;}
     break;
 
   case 102:
-
-/* Line 1806 of yacc.c  */
 #line 1126 "pl_gram.y"
     {
 						(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].casewhen));
-					}
+					;}
     break;
 
   case 103:
-
-/* Line 1806 of yacc.c  */
 #line 1130 "pl_gram.y"
     {
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].casewhen));
-					}
+					;}
     break;
 
   case 104:
-
-/* Line 1806 of yacc.c  */
 #line 1136 "pl_gram.y"
     {
 						PLpgSQL_case_when *new = palloc(sizeof(PLpgSQL_case_when));
@@ -3292,21 +3160,17 @@
 						new->expr	= (yyvsp[(2) - (3)].expr);
 						new->stmts	= (yyvsp[(3) - (3)].list);
 						(yyval.casewhen) = new;
-					}
+					;}
     break;
 
   case 105:
-
-/* Line 1806 of yacc.c  */
 #line 1147 "pl_gram.y"
     {
 						(yyval.list) = NIL;
-					}
+					;}
     break;
 
   case 106:
-
-/* Line 1806 of yacc.c  */
 #line 1151 "pl_gram.y"
     {
 						/*
@@ -3319,12 +3183,10 @@
 							(yyval.list) = (yyvsp[(2) - (2)].list);
 						else
 							(yyval.list) = list_make1(NULL);
-					}
+					;}
     break;
 
   case 107:
-
-/* Line 1806 of yacc.c  */
 #line 1166 "pl_gram.y"
     {
 						PLpgSQL_stmt_loop *new;
@@ -3339,12 +3201,10 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 108:
-
-/* Line 1806 of yacc.c  */
 #line 1183 "pl_gram.y"
     {
 						PLpgSQL_stmt_while *new;
@@ -3360,12 +3220,10 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 109:
-
-/* Line 1806 of yacc.c  */
 #line 1201 "pl_gram.y"
     {
 						/* This runs after we've scanned the loop body */
@@ -3397,12 +3255,10 @@
 						check_labels((yyvsp[(1) - (4)].str), (yyvsp[(4) - (4)].loop_body).end_label, (yyvsp[(4) - (4)].loop_body).end_label_location);
 						/* close namespace started in opt_block_label */
 						plpgsql_ns_pop();
-					}
+					;}
     break;
 
   case 110:
-
-/* Line 1806 of yacc.c  */
 #line 1235 "pl_gram.y"
     {
 						int			tok = yylex();
@@ -3644,12 +3500,10 @@
 								(yyval.stmt) = (PLpgSQL_stmt *) new;
 							}
 						}
-					}
+					;}
     break;
 
   case 111:
-
-/* Line 1806 of yacc.c  */
 #line 1497 "pl_gram.y"
     {
 						(yyval.forvariable).name = NameOfDatum(&((yyvsp[(1) - (1)].wdatum)));
@@ -3681,12 +3535,10 @@
 															   (yyval.forvariable).scalar,
 															   (yylsp[(1) - (1)]));
 						}
-					}
+					;}
     break;
 
   case 112:
-
-/* Line 1806 of yacc.c  */
 #line 1529 "pl_gram.y"
     {
 						int			tok;
@@ -3701,22 +3553,18 @@
 						plpgsql_push_back_token(tok);
 						if (tok == ',')
 							word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 113:
-
-/* Line 1806 of yacc.c  */
 #line 1544 "pl_gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 114:
-
-/* Line 1806 of yacc.c  */
 #line 1551 "pl_gram.y"
     {
 						PLpgSQL_stmt_foreach_a *new;
@@ -3756,30 +3604,24 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *) new;
-					}
+					;}
     break;
 
   case 115:
-
-/* Line 1806 of yacc.c  */
 #line 1593 "pl_gram.y"
     {
 						(yyval.ival) = 0;
-					}
+					;}
     break;
 
   case 116:
-
-/* Line 1806 of yacc.c  */
 #line 1597 "pl_gram.y"
     {
 						(yyval.ival) = (yyvsp[(2) - (2)].ival);
-					}
+					;}
     break;
 
   case 117:
-
-/* Line 1806 of yacc.c  */
 #line 1603 "pl_gram.y"
     {
 						PLpgSQL_stmt_exit *new;
@@ -3792,30 +3634,24 @@
 						new->cond	  = (yyvsp[(3) - (3)].expr);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 118:
-
-/* Line 1806 of yacc.c  */
 #line 1618 "pl_gram.y"
     {
 						(yyval.boolean) = true;
-					}
+					;}
     break;
 
   case 119:
-
-/* Line 1806 of yacc.c  */
 #line 1622 "pl_gram.y"
     {
 						(yyval.boolean) = false;
-					}
+					;}
     break;
 
   case 120:
-
-/* Line 1806 of yacc.c  */
 #line 1628 "pl_gram.y"
     {
 						int	tok;
@@ -3839,12 +3675,10 @@
 							plpgsql_push_back_token(tok);
 							(yyval.stmt) = make_return_stmt((yylsp[(1) - (1)]));
 						}
-					}
+					;}
     break;
 
   case 121:
-
-/* Line 1806 of yacc.c  */
 #line 1654 "pl_gram.y"
     {
 						PLpgSQL_stmt_raise		*new;
@@ -3984,32 +3818,26 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 122:
-
-/* Line 1806 of yacc.c  */
 #line 1796 "pl_gram.y"
     {
 						(yyval.loop_body).stmts = (yyvsp[(1) - (5)].list);
 						(yyval.loop_body).end_label = (yyvsp[(4) - (5)].str);
 						(yyval.loop_body).end_label_location = (yylsp[(4) - (5)]);
-					}
+					;}
     break;
 
   case 123:
-
-/* Line 1806 of yacc.c  */
 #line 1814 "pl_gram.y"
     {
 						(yyval.stmt) = make_execsql_stmt(K_INSERT, (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 124:
-
-/* Line 1806 of yacc.c  */
 #line 1818 "pl_gram.y"
     {
 						int			tok;
@@ -4019,12 +3847,10 @@
 						if (tok == '=' || tok == COLON_EQUALS || tok == '[')
 							word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
 						(yyval.stmt) = make_execsql_stmt(T_WORD, (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 125:
-
-/* Line 1806 of yacc.c  */
 #line 1828 "pl_gram.y"
     {
 						int			tok;
@@ -4034,12 +3860,10 @@
 						if (tok == '=' || tok == COLON_EQUALS || tok == '[')
 							cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
 						(yyval.stmt) = make_execsql_stmt(T_CWORD, (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 126:
-
-/* Line 1806 of yacc.c  */
 #line 1840 "pl_gram.y"
     {
 						PLpgSQL_stmt_dynexecute *new;
@@ -4100,12 +3924,10 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 127:
-
-/* Line 1806 of yacc.c  */
 #line 1904 "pl_gram.y"
     {
 						PLpgSQL_stmt_open *new;
@@ -4180,12 +4002,10 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 128:
-
-/* Line 1806 of yacc.c  */
 #line 1981 "pl_gram.y"
     {
 						PLpgSQL_stmt_fetch *fetch = (yyvsp[(2) - (4)].fetch);
@@ -4215,12 +4035,10 @@
 						fetch->is_move	= false;
 
 						(yyval.stmt) = (PLpgSQL_stmt *)fetch;
-					}
+					;}
     break;
 
   case 129:
-
-/* Line 1806 of yacc.c  */
 #line 2013 "pl_gram.y"
     {
 						PLpgSQL_stmt_fetch *fetch = (yyvsp[(2) - (4)].fetch);
@@ -4230,21 +4048,17 @@
 						fetch->is_move	= true;
 
 						(yyval.stmt) = (PLpgSQL_stmt *)fetch;
-					}
+					;}
     break;
 
   case 130:
-
-/* Line 1806 of yacc.c  */
 #line 2025 "pl_gram.y"
     {
 						(yyval.fetch) = read_fetch_direction();
-					}
+					;}
     break;
 
   case 131:
-
-/* Line 1806 of yacc.c  */
 #line 2031 "pl_gram.y"
     {
 						PLpgSQL_stmt_close *new;
@@ -4255,22 +4069,18 @@
 						new->curvar = (yyvsp[(2) - (3)].var)->dno;
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 132:
-
-/* Line 1806 of yacc.c  */
 #line 2044 "pl_gram.y"
     {
 						/* We do not bother building a node for NULL */
 						(yyval.stmt) = NULL;
-					}
+					;}
     break;
 
   case 133:
-
-/* Line 1806 of yacc.c  */
 #line 2051 "pl_gram.y"
     {
 						if ((yyvsp[(1) - (1)].wdatum).datum->dtype != PLPGSQL_DTYPE_VAR)
@@ -4286,39 +4096,31 @@
 											((PLpgSQL_var *) (yyvsp[(1) - (1)].wdatum).datum)->refname),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.var) = (PLpgSQL_var *) (yyvsp[(1) - (1)].wdatum).datum;
-					}
+					;}
     break;
 
   case 134:
-
-/* Line 1806 of yacc.c  */
 #line 2067 "pl_gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 135:
-
-/* Line 1806 of yacc.c  */
 #line 2072 "pl_gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 136:
-
-/* Line 1806 of yacc.c  */
 #line 2079 "pl_gram.y"
-    { (yyval.exception_block) = NULL; }
+    { (yyval.exception_block) = NULL; ;}
     break;
 
   case 137:
-
-/* Line 1806 of yacc.c  */
 #line 2081 "pl_gram.y"
     {
 						/*
@@ -4349,42 +4151,34 @@
 						new->sqlerrm_varno = var->dno;
 
 						(yyval.exception_block) = new;
-					}
+					;}
     break;
 
   case 138:
-
-/* Line 1806 of yacc.c  */
 #line 2112 "pl_gram.y"
     {
 						PLpgSQL_exception_block *new = (yyvsp[(2) - (3)].exception_block);
 						new->exc_list = (yyvsp[(3) - (3)].list);
 
 						(yyval.exception_block) = new;
-					}
+					;}
     break;
 
   case 139:
-
-/* Line 1806 of yacc.c  */
 #line 2121 "pl_gram.y"
     {
 							(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].exception));
-						}
+						;}
     break;
 
   case 140:
-
-/* Line 1806 of yacc.c  */
 #line 2125 "pl_gram.y"
     {
 							(yyval.list) = list_make1((yyvsp[(1) - (1)].exception));
-						}
+						;}
     break;
 
   case 141:
-
-/* Line 1806 of yacc.c  */
 #line 2131 "pl_gram.y"
     {
 						PLpgSQL_exception *new;
@@ -4395,12 +4189,10 @@
 						new->action = (yyvsp[(4) - (4)].list);
 
 						(yyval.exception) = new;
-					}
+					;}
     break;
 
   case 142:
-
-/* Line 1806 of yacc.c  */
 #line 2144 "pl_gram.y"
     {
 							PLpgSQL_condition	*old;
@@ -4409,21 +4201,17 @@
 								/* skip */ ;
 							old->next = (yyvsp[(3) - (3)].condition);
 							(yyval.condition) = (yyvsp[(1) - (3)].condition);
-						}
+						;}
     break;
 
   case 143:
-
-/* Line 1806 of yacc.c  */
 #line 2153 "pl_gram.y"
     {
 							(yyval.condition) = (yyvsp[(1) - (1)].condition);
-						}
+						;}
     break;
 
   case 144:
-
-/* Line 1806 of yacc.c  */
 #line 2159 "pl_gram.y"
     {
 							if (strcmp((yyvsp[(1) - (1)].str), "sqlstate") != 0)
@@ -4457,137 +4245,99 @@
 
 								(yyval.condition) = new;
 							}
-						}
+						;}
     break;
 
   case 145:
-
-/* Line 1806 of yacc.c  */
 #line 2195 "pl_gram.y"
-    { (yyval.expr) = read_sql_expression(';', ";"); }
+    { (yyval.expr) = read_sql_expression(';', ";"); ;}
     break;
 
   case 146:
-
-/* Line 1806 of yacc.c  */
 #line 2199 "pl_gram.y"
-    { (yyval.expr) = read_sql_expression(']', "]"); }
+    { (yyval.expr) = read_sql_expression(']', "]"); ;}
     break;
 
   case 147:
-
-/* Line 1806 of yacc.c  */
 #line 2203 "pl_gram.y"
-    { (yyval.expr) = read_sql_expression(K_THEN, "THEN"); }
+    { (yyval.expr) = read_sql_expression(K_THEN, "THEN"); ;}
     break;
 
   case 148:
-
-/* Line 1806 of yacc.c  */
 #line 2207 "pl_gram.y"
-    { (yyval.expr) = read_sql_expression(K_LOOP, "LOOP"); }
+    { (yyval.expr) = read_sql_expression(K_LOOP, "LOOP"); ;}
     break;
 
   case 149:
-
-/* Line 1806 of yacc.c  */
 #line 2211 "pl_gram.y"
     {
 						plpgsql_ns_push(NULL);
 						(yyval.str) = NULL;
-					}
+					;}
     break;
 
   case 150:
-
-/* Line 1806 of yacc.c  */
 #line 2216 "pl_gram.y"
     {
 						plpgsql_ns_push((yyvsp[(2) - (3)].str));
 						(yyval.str) = (yyvsp[(2) - (3)].str);
-					}
+					;}
     break;
 
   case 151:
-
-/* Line 1806 of yacc.c  */
 #line 2223 "pl_gram.y"
     {
 						(yyval.str) = NULL;
-					}
+					;}
     break;
 
   case 152:
-
-/* Line 1806 of yacc.c  */
 #line 2227 "pl_gram.y"
     {
 						if (plpgsql_ns_lookup_label(plpgsql_ns_top(), (yyvsp[(1) - (1)].str)) == NULL)
 							yyerror("label does not exist");
 						(yyval.str) = (yyvsp[(1) - (1)].str);
-					}
+					;}
     break;
 
   case 153:
-
-/* Line 1806 of yacc.c  */
 #line 2235 "pl_gram.y"
-    { (yyval.expr) = NULL; }
+    { (yyval.expr) = NULL; ;}
     break;
 
   case 154:
-
-/* Line 1806 of yacc.c  */
 #line 2237 "pl_gram.y"
-    { (yyval.expr) = (yyvsp[(2) - (2)].expr); }
+    { (yyval.expr) = (yyvsp[(2) - (2)].expr); ;}
     break;
 
   case 155:
-
-/* Line 1806 of yacc.c  */
 #line 2244 "pl_gram.y"
     {
 						(yyval.str) = (yyvsp[(1) - (1)].word).ident;
-					}
+					;}
     break;
 
   case 156:
-
-/* Line 1806 of yacc.c  */
 #line 2248 "pl_gram.y"
     {
 						(yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword));
-					}
+					;}
     break;
 
   case 157:
-
-/* Line 1806 of yacc.c  */
 #line 2252 "pl_gram.y"
     {
 						if ((yyvsp[(1) - (1)].wdatum).ident == NULL) /* composite name not OK */
 							yyerror("syntax error");
 						(yyval.str) = (yyvsp[(1) - (1)].wdatum).ident;
-					}
+					;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 4578 "pl_gram.c"
+/* Line 1267 of yacc.c.  */
+#line 4339 "pl_gram.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -4616,10 +4366,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -4627,44 +4373,45 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
-  yyerror_range[1] = yylloc;
+  yyerror_range[0] = yylloc;
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -4681,7 +4428,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -4697,7 +4444,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  yyerror_range[1] = yylsp[1-yylen];
+  yyerror_range[0] = yylsp[1-yylen];
   /* Do not reclaim the symbols of the rule which action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
@@ -4716,7 +4463,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -4731,7 +4478,7 @@
       if (yyssp == yyss)
 	YYABORT;
 
-      yyerror_range[1] = *yylsp;
+      yyerror_range[0] = *yylsp;
       yydestruct ("Error: popping",
 		  yystos[yystate], yyvsp, yylsp);
       YYPOPSTACK (1);
@@ -4739,12 +4486,15 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
-  yyerror_range[2] = yylloc;
+  yyerror_range[1] = yylloc;
   /* Using YYLLOC is tempting, but would change the location of
-     the lookahead.  YYLOC is available though.  */
-  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+     the look-ahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
   *++yylsp = yyloc;
 
   /* Shift the error token.  */
@@ -4768,7 +4518,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -4779,14 +4529,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, &yylloc);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, &yylloc);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -4810,8 +4555,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 2317 "pl_gram.y"
 
 
diff -Naur postgresql-9.3.4/src/pl/plpgsql/src/pl_gram.h postgresql/src/pl/plpgsql/src/pl_gram.h
--- postgresql-9.3.4/src/pl/plpgsql/src/pl_gram.h	2014-03-17 12:44:43.000000000 -0700
+++ postgresql/src/pl/plpgsql/src/pl_gram.h	2014-03-31 15:40:35.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -150,16 +152,126 @@
      K_WHILE = 368
    };
 #endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define T_WORD 269
+#define T_CWORD 270
+#define T_DATUM 271
+#define LESS_LESS 272
+#define GREATER_GREATER 273
+#define K_ABSOLUTE 274
+#define K_ALIAS 275
+#define K_ALL 276
+#define K_ARRAY 277
+#define K_BACKWARD 278
+#define K_BEGIN 279
+#define K_BY 280
+#define K_CASE 281
+#define K_CLOSE 282
+#define K_COLLATE 283
+#define K_COLUMN 284
+#define K_COLUMN_NAME 285
+#define K_CONSTANT 286
+#define K_CONSTRAINT 287
+#define K_CONSTRAINT_NAME 288
+#define K_CONTINUE 289
+#define K_CURRENT 290
+#define K_CURSOR 291
+#define K_DATATYPE 292
+#define K_DEBUG 293
+#define K_DECLARE 294
+#define K_DEFAULT 295
+#define K_DETAIL 296
+#define K_DIAGNOSTICS 297
+#define K_DUMP 298
+#define K_ELSE 299
+#define K_ELSIF 300
+#define K_END 301
+#define K_ERRCODE 302
+#define K_ERROR 303
+#define K_EXCEPTION 304
+#define K_EXECUTE 305
+#define K_EXIT 306
+#define K_FETCH 307
+#define K_FIRST 308
+#define K_FOR 309
+#define K_FOREACH 310
+#define K_FORWARD 311
+#define K_FROM 312
+#define K_GET 313
+#define K_HINT 314
+#define K_IF 315
+#define K_IN 316
+#define K_INFO 317
+#define K_INSERT 318
+#define K_INTO 319
+#define K_IS 320
+#define K_LAST 321
+#define K_LOG 322
+#define K_LOOP 323
+#define K_MESSAGE 324
+#define K_MESSAGE_TEXT 325
+#define K_MOVE 326
+#define K_NEXT 327
+#define K_NO 328
+#define K_NOT 329
+#define K_NOTICE 330
+#define K_NULL 331
+#define K_OPEN 332
+#define K_OPTION 333
+#define K_OR 334
+#define K_PERFORM 335
+#define K_PG_DATATYPE_NAME 336
+#define K_PG_EXCEPTION_CONTEXT 337
+#define K_PG_EXCEPTION_DETAIL 338
+#define K_PG_EXCEPTION_HINT 339
+#define K_PRIOR 340
+#define K_QUERY 341
+#define K_RAISE 342
+#define K_RELATIVE 343
+#define K_RESULT_OID 344
+#define K_RETURN 345
+#define K_RETURNED_SQLSTATE 346
+#define K_REVERSE 347
+#define K_ROWTYPE 348
+#define K_ROW_COUNT 349
+#define K_SCHEMA 350
+#define K_SCHEMA_NAME 351
+#define K_SCROLL 352
+#define K_SLICE 353
+#define K_SQLSTATE 354
+#define K_STACKED 355
+#define K_STRICT 356
+#define K_TABLE 357
+#define K_TABLE_NAME 358
+#define K_THEN 359
+#define K_TO 360
+#define K_TYPE 361
+#define K_USE_COLUMN 362
+#define K_USE_VARIABLE 363
+#define K_USING 364
+#define K_VARIABLE_CONFLICT 365
+#define K_WARNING 366
+#define K_WHEN 367
+#define K_WHILE 368
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 116 "pl_gram.y"
-
+{
 		core_YYSTYPE			core_yystype;
 		/* these fields must match core_YYSTYPE: */
 		int						ival;
@@ -209,15 +321,13 @@
 		PLpgSQL_diag_item		*diagitem;
 		PLpgSQL_stmt_fetch		*fetch;
 		PLpgSQL_case_when		*casewhen;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 217 "pl_gram.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 327 "pl_gram.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE plpgsql_yylval;
@@ -236,4 +346,3 @@
 #endif
 
 extern YYLTYPE plpgsql_yylloc;
-
diff -Naur postgresql-9.3.4/src/test/isolation/specparse.c postgresql/src/test/isolation/specparse.c
--- postgresql-9.3.4/src/test/isolation/specparse.c	2014-03-17 12:44:43.000000000 -0700
+++ postgresql/src/test/isolation/specparse.c	2014-03-31 15:41:18.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,49 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         spec_yyparse
-#define yylex           spec_yylex
-#define yyerror         spec_yyerror
-#define yylval          spec_yylval
-#define yychar          spec_yychar
-#define yydebug         spec_yydebug
-#define yynerrs         spec_yynerrs
+#define yyparse spec_yyparse
+#define yylex   spec_yylex
+#define yyerror spec_yyerror
+#define yylval  spec_yylval
+#define yychar  spec_yychar
+#define yydebug spec_yydebug
+#define yynerrs spec_yynerrs
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     sqlblock = 258,
+     string = 259,
+     PERMUTATION = 260,
+     SESSION = 261,
+     SETUP = 262,
+     STEP = 263,
+     TEARDOWN = 264,
+     TEST = 265
+   };
+#endif
+/* Tokens.  */
+#define sqlblock 258
+#define string 259
+#define PERMUTATION 260
+#define SESSION 261
+#define SETUP 262
+#define STEP 263
+#define TEARDOWN 264
+#define TEST 265
 
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+/* Copy the first part of user declarations.  */
 #line 1 "specparse.y"
 
 /*-------------------------------------------------------------------------
@@ -96,9 +120,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 101 "specparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -117,33 +138,10 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     sqlblock = 258,
-     string = 259,
-     PERMUTATION = 260,
-     SESSION = 261,
-     SETUP = 262,
-     STEP = 263,
-     TEARDOWN = 264,
-     TEST = 265
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 26 "specparse.y"
-
+{
 	char	   *str;
 	Session	   *session;
 	Step	   *step;
@@ -153,23 +151,22 @@
 		void  **elements;
 		int		nelements;
 	}			ptr_list;
-
-
-
-/* Line 293 of yacc.c  */
-#line 161 "specparse.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 157 "specparse.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 173 "specparse.c"
+/* Line 216 of yacc.c.  */
+#line 170 "specparse.tab.c"
 
 #ifdef short
 # undef short
@@ -244,14 +241,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -272,11 +269,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -299,24 +296,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -332,9 +329,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -345,27 +342,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -383,7 +359,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
@@ -507,8 +500,8 @@
        2,     2,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -545,7 +538,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -555,12 +549,6 @@
       23
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-15))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        7,     0,     9,     5,     6,     8,     9,     3,     3,     6,
@@ -591,18 +579,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -612,6 +591,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -653,10 +633,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -760,20 +749,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -807,11 +793,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -848,6 +834,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -950,142 +937,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1117,9 +1077,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1135,16 +1096,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1171,37 +1134,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1209,28 +1149,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1260,6 +1223,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1267,6 +1231,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1289,8 +1254,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1301,6 +1267,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1310,9 +1277,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1321,16 +1285,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1356,22 +1320,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1411,8 +1379,6 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 57 "specparse.y"
     {
 				parseresult.setupsqls = (char **) (yyvsp[(1) - (4)].ptr_list).elements;
@@ -1422,92 +1388,72 @@
 				parseresult.nsessions = (yyvsp[(3) - (4)].ptr_list).nelements;
 				parseresult.permutations = (Permutation **) (yyvsp[(4) - (4)].ptr_list).elements;
 				parseresult.npermutations = (yyvsp[(4) - (4)].ptr_list).nelements;
-			}
+			;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 70 "specparse.y"
     {
 				(yyval.ptr_list).elements = NULL;
 				(yyval.ptr_list).nelements = 0;
-			}
+			;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 75 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].str);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 84 "specparse.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 85 "specparse.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 89 "specparse.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 93 "specparse.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 94 "specparse.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 10:
-
-/* Line 1806 of yacc.c  */
 #line 99 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].session);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 106 "specparse.y"
     {
 				(yyval.ptr_list).nelements = 1;
 				(yyval.ptr_list).elements = malloc(sizeof(void *));
 				(yyval.ptr_list).elements[0] = (yyvsp[(1) - (1)].session);
-			}
+			;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 115 "specparse.y"
     {
 				(yyval.session) = malloc(sizeof(Session));
@@ -1516,137 +1462,105 @@
 				(yyval.session)->steps = (Step **) (yyvsp[(4) - (5)].ptr_list).elements;
 				(yyval.session)->nsteps = (yyvsp[(4) - (5)].ptr_list).nelements;
 				(yyval.session)->teardownsql = (yyvsp[(5) - (5)].str);
-			}
+			;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 127 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].step);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 134 "specparse.y"
     {
 				(yyval.ptr_list).nelements = 1;
 				(yyval.ptr_list).elements = malloc(sizeof(void *));
 				(yyval.ptr_list).elements[0] = (yyvsp[(1) - (1)].step);
-			}
+			;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 144 "specparse.y"
     {
 				(yyval.step) = malloc(sizeof(Step));
 				(yyval.step)->name = (yyvsp[(2) - (3)].str);
 				(yyval.step)->sql = (yyvsp[(3) - (3)].str);
 				(yyval.step)->errormsg = NULL;
-			}
+			;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 155 "specparse.y"
     {
 				(yyval.ptr_list) = (yyvsp[(1) - (1)].ptr_list);
-			}
+			;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 159 "specparse.y"
     {
 				(yyval.ptr_list).elements = NULL;
 				(yyval.ptr_list).nelements = 0;
-			}
+			;}
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 166 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].permutation);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 173 "specparse.y"
     {
 				(yyval.ptr_list).nelements = 1;
 				(yyval.ptr_list).elements = malloc(sizeof(void *));
 				(yyval.ptr_list).elements[0] = (yyvsp[(1) - (1)].permutation);
-			}
+			;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 183 "specparse.y"
     {
 				(yyval.permutation) = malloc(sizeof(Permutation));
 				(yyval.permutation)->stepnames = (char **) (yyvsp[(2) - (2)].ptr_list).elements;
 				(yyval.permutation)->nsteps = (yyvsp[(2) - (2)].ptr_list).nelements;
-			}
+			;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 192 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].str);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 199 "specparse.y"
     {
 				(yyval.ptr_list).nelements = 1;
 				(yyval.ptr_list).elements = malloc(sizeof(void *));
 				(yyval.ptr_list).elements[0] = (yyvsp[(1) - (1)].str);
-			}
+			;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1637 "specparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1562 "specparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1655,6 +1569,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1674,10 +1589,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1685,36 +1596,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1722,7 +1634,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1739,7 +1651,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1773,7 +1685,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1796,6 +1708,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1820,7 +1735,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1831,14 +1746,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1862,8 +1772,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 206 "specparse.y"
 
 
