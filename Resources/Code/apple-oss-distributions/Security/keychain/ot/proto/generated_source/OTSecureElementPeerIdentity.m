// This file was automatically generated by protocompiler
// DO NOT EDIT!
// Compiled from OTSecureElementPeerIdentity.proto

#import "OTSecureElementPeerIdentity.h"
#import <ProtocolBuffer/PBConstants.h>
#import <ProtocolBuffer/PBHashUtil.h>
#import <ProtocolBuffer/PBDataReader.h>

#if !__has_feature(objc_arc)
# error This generated file depends on ARC but it is not enabled; turn on ARC, or use 'objc_use_arc' option to generate non-ARC code.
#endif

@implementation OTSecureElementPeerIdentity

- (BOOL)hasPeerIdentifier
{
    return _peerIdentifier != nil;
}
@synthesize peerIdentifier = _peerIdentifier;
- (BOOL)hasPeerData
{
    return _peerData != nil;
}
@synthesize peerData = _peerData;

- (NSString *)description
{
    return [NSString stringWithFormat:@"%@ %@", [super description], [self dictionaryRepresentation]];
}

- (NSDictionary *)dictionaryRepresentation
{
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    if (self->_peerIdentifier)
    {
        [dict setObject:self->_peerIdentifier forKey:@"peerIdentifier"];
    }
    if (self->_peerData)
    {
        [dict setObject:self->_peerData forKey:@"peerData"];
    }
    return dict;
}

BOOL OTSecureElementPeerIdentityReadFrom(__unsafe_unretained OTSecureElementPeerIdentity *self, __unsafe_unretained PBDataReader *reader) {
    while (PBReaderHasMoreData(reader)) {
        uint32_t tag = 0;
        uint8_t aType = 0;

        PBReaderReadTag32AndType(reader, &tag, &aType);

        if (PBReaderHasError(reader))
            break;

        if (aType == TYPE_END_GROUP) {
            break;
        }

        switch (tag) {

            case 1 /* peerIdentifier */:
            {
                NSData *new_peerIdentifier = PBReaderReadData(reader);
                self->_peerIdentifier = new_peerIdentifier;
            }
            break;
            case 2 /* peerData */:
            {
                NSData *new_peerData = PBReaderReadData(reader);
                self->_peerData = new_peerData;
            }
            break;
            default:
                if (!PBReaderSkipValueWithTag(reader, tag, aType))
                    return NO;
                break;
        }
    }
    return !PBReaderHasError(reader);
}

- (BOOL)readFrom:(PBDataReader *)reader
{
    return OTSecureElementPeerIdentityReadFrom(self, reader);
}
- (void)writeTo:(PBDataWriter *)writer
{
    /* peerIdentifier */
    {
        if (self->_peerIdentifier)
        {
            PBDataWriterWriteDataField(writer, self->_peerIdentifier, 1);
        }
    }
    /* peerData */
    {
        if (self->_peerData)
        {
            PBDataWriterWriteDataField(writer, self->_peerData, 2);
        }
    }
}

- (void)copyTo:(OTSecureElementPeerIdentity *)other
{
    if (_peerIdentifier)
    {
        other.peerIdentifier = _peerIdentifier;
    }
    if (_peerData)
    {
        other.peerData = _peerData;
    }
}

- (id)copyWithZone:(NSZone *)zone
{
    OTSecureElementPeerIdentity *copy = [[[self class] allocWithZone:zone] init];
    copy->_peerIdentifier = [_peerIdentifier copyWithZone:zone];
    copy->_peerData = [_peerData copyWithZone:zone];
    return copy;
}

- (BOOL)isEqual:(id)object
{
    OTSecureElementPeerIdentity *other = (OTSecureElementPeerIdentity *)object;
    return [other isMemberOfClass:[self class]]
    &&
    ((!self->_peerIdentifier && !other->_peerIdentifier) || [self->_peerIdentifier isEqual:other->_peerIdentifier])
    &&
    ((!self->_peerData && !other->_peerData) || [self->_peerData isEqual:other->_peerData])
    ;
}

- (NSUInteger)hash
{
    return 0
    ^
    [self->_peerIdentifier hash]
    ^
    [self->_peerData hash]
    ;
}

- (void)mergeFrom:(OTSecureElementPeerIdentity *)other
{
    if (other->_peerIdentifier)
    {
        [self setPeerIdentifier:other->_peerIdentifier];
    }
    if (other->_peerData)
    {
        [self setPeerData:other->_peerData];
    }
}

@end

