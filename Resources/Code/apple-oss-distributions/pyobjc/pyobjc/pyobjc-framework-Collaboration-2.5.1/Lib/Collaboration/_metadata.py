# This file is generated by objective.metadata
#
# Last update: Wed Sep 19 10:36:05 2012

import objc, sys

if sys.maxsize > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
constants = '''$$'''
enums = '''$$'''
misc.update({})
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r(b'CBIdentity', b'CSIdentity', {'retval': {'type': '^{__CSIdentity=}'}})
    r(b'CBIdentity', b'identityWithCSIdentity:', {'arguments': {2: {'type': '^{__CSIdentity=}'}}})
    r(b'CBIdentity', b'isHidden', {'retval': {'type': 'Z'}})
    r(b'CBIdentity', b'isMemberOfGroup:', {'retval': {'type': 'Z'}})
    r(b'CBIdentityAuthority', b'CSIdentityAuthority', {'retval': {'type': '^{__CSIdentityAuthority=}'}})
    r(b'CBIdentityAuthority', b'identityAuthorityWithCSIdentityAuthority:', {'arguments': {2: {'type': '^{__CSIdentityAuthority=}'}}})
    r(b'CBIdentityPicker', b'allowsMultipleSelection', {'retval': {'type': 'Z'}})
    r(b'CBIdentityPicker', b'runModalForWindow:modalDelegate:didEndSelector:contextInfo:', {'arguments': {4: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 5: {'type': '^v'}}})
    r(b'CBIdentityPicker', b'setAllowsMultipleSelection:', {'arguments': {2: {'type': 'Z'}}})
    r(b'CBUserIdentity', b'authenticateWithPassword:', {'retval': {'type': 'Z'}})
    r(b'CBUserIdentity', b'certificate', {'retval': {'type': '^{OpaqueSecCertificateRef=}'}})
    r(b'CBUserIdentity', b'isEnabled', {'retval': {'type': 'Z'}})
finally:
    objc._updatingMetadata(False)
expressions = {}

# END OF FILE
