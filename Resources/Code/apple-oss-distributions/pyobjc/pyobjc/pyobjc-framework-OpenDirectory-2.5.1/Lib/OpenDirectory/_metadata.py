# This file is generated by objective.metadata
#
# Last update: Mon Sep 24 10:17:48 2012

import objc, sys

if sys.maxsize > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
constants = '''$ODFrameworkErrorDomain$ODSessionProxyAddress$ODSessionProxyPassword$ODSessionProxyPort$ODSessionProxyUsername$'''
enums = '''$$'''
misc.update({})
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r(b'ODNode', b'createRecordWithRecordType:name:attributes:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r(b'ODNode', b'customCall:sendData:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODNode', b'initWithSession:name:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODNode', b'initWithSession:type:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODNode', b'nodeDetailsForKeys:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODNode', b'nodeWithSession:name:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODNode', b'nodeWithSession:type:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODNode', b'recordWithRecordType:name:attributes:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r(b'ODNode', b'setCredentialsUsingKerberosCache:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODNode', b'setCredentialsWithRecordType:authenticationType:authenticationItems:continueItems:context:error:', {'retval': {'type': b'Z'}, 'arguments': {5: {'type_modifier': b'o'}, 6: {'type_modifier': b'o'}, 7: {'type_modifier': b'o'}}})
    r(b'ODNode', b'setCredentialsWithRecordType:recordName:password:error:', {'retval': {'type': b'Z'}, 'arguments': {5: {'type_modifier': b'o'}}})
    r(b'ODNode', b'subnodeNamesAndReturnError:', {'arguments': {2: {'type_modifier': b'o'}}})
    r(b'ODNode', b'supportedAttributesForRecordType:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODNode', b'supportedRecordTypesAndReturnError:', {'arguments': {2: {'type_modifier': b'o'}}})
    r(b'ODNode', b'unreachableSubnodeNamesAndReturnError:', {'arguments': {2: {'type_modifier': b'o'}}})
    r(b'ODQuery', b'initWithNode:forRecordTypes:attribute:matchType:queryValues:returnAttributes:maximumResults:error:', {'arguments': {9: {'type_modifier': b'o'}}})
    r(b'ODQuery', b'queryWithNode:forRecordTypes:attribute:matchType:queryValues:returnAttributes:maximumResults:error:', {'arguments': {9: {'type_modifier': b'o'}}})
    r(b'ODQuery', b'resultsAllowingPartial:error:', {'arguments': {2: {'type': b'Z'}, 3: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'addMemberRecord:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'addValue:toAttribute:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'changePassword:toPassword:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'deleteRecordAndReturnError:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'isMemberRecord:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'passwordPolicyAndReturnError:', {'arguments': {2: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'recordDetailsForAttributes:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'removeMemberRecord:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'removeValue:fromAttribute:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'removeValuesForAttribute:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'setNodeCredentials:password:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'setNodeCredentialsUsingKerberosCache:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'setNodeCredentialsWithRecordType:authenticationType:authenticationItems:continueItems:context:error:', {'retval': {'type': b'Z'}, 'arguments': {5: {'type_modifier': b'o'}, 6: {'type_modifier': b'o'}, 7: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'setValue:forAttribute:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'synchronizeAndReturnError:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'valuesForAttribute:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'verifyExtendedWithAuthenticationType:authenticationItems:continueItems:context:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}, 6: {'type_modifier': b'o'}}})
    r(b'ODRecord', b'verifyPassword:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODSession', b'initWithOptions:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r(b'ODSession', b'nodeNamesAndReturnError:', {'arguments': {2: {'type_modifier': b'o'}}})
    r(b'ODSession', b'sessionWithOptions:error:', {'arguments': {3: {'type_modifier': b'o'}}})
finally:
    objc._updatingMetadata(False)
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r(b'NSObject', b'query:foundResults:error:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
finally:
    objc._updatingMetadata(False)
expressions = {}

# END OF FILE
