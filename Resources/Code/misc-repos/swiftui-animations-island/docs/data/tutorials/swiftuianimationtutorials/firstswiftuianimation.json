{"variants":[{"paths":["\/tutorials\/swiftuianimationtutorials\/firstswiftuianimation"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first animation you may want to create is learning to rotate a view with animation. In this chapter, you will learn to build a looping rotational animation using the settings icon. Animation takes place when an object is changed over time. To change views over time in SwiftUI, you need what is called a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/state"},{"type":"text","text":". This property wrapper will be used to set the initial and end states of the animation."}]}],"estimatedTimeInMinutes":10,"title":"Create your first SwiftUI animation","image":"animationBasics.svg","chapter":"Create your first SwiftUI animation","kind":"hero","backgroundImage":"animationBasics.svg"},{"kind":"tasks","tasks":[{"anchor":"Animating-rotation","title":"Animating rotation","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To change views over time in SwiftUI, you need what is called a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/state"},{"type":"text","text":". This property wrapper will be used to set the initial and end states of the animation."}]}],"mediaPosition":"trailing","media":"rotationAnimation.gif"}],"stepsSection":[{"code":"RotationAnimation.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Begin by creating a blank SwiftUI project and add the gear icon using "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/sf-symbols\/"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Follow the steps below to rotate the icon endlessly using animation. Define the following state variable in the declaration section of your content view and set the initial state as double  "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"@State private var isRotating = 0.0"}]}]}],"type":"step","runtimePreview":null,"media":null},{"code":"RotationAnimation.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In SwiftUI, you can trigger animations in several ways using gestures. In this example, you will trigger the animation automatically when the gear icon appears. To do this, you should attach the "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":".onAppear"}]},{"type":"text","text":" modifier to the icon and set the final state of the animation. The animation will undergo one complete revolution, so set its final state to 360 using the state variable you already defined "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"isRotating = 360.0"}]},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"RotationAnimation.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In SwiftUI, you can create animations "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.hackingwithswift.com\/books\/ios-swiftui\/creating-implicit-animations"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.hackingwithswift.com\/books\/ios-swiftui\/creating-explicit-animations"},{"type":"text","text":". In implicit animation, the animation modifier must be directly attached to the view you want to animate. On the other hand, an explicit animation is declared using "},{"type":"strong","inlineContent":[{"type":"text","text":"“withAnimation”"}]},{"type":"text","text":". To see the animation in action, embed the final animation state in "},{"type":"strong","inlineContent":[{"type":"text","text":"“withAnimation”"}]},{"type":"text","text":" and set the animation easing using linear interpolation. This is intentional because the gear icon should be rotating with a constant speed. So linear is the best option."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"RotationAnimation.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, since you are interested in creating a rotational animation, you should attach the rotation effect modifier to the icon and use the state variable to change it over time as "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":".rotationEffect(.degrees(isRotating))"}]},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"That is easy, huh!. You have successfully created your first SwiftUI animation."}]}],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/AnimateStrokes","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Animating path properties: Stroke start and stroke end","abstract":[{"type":"text","text":"In this chapter, you will learn how to trim path properties in SwiftUI to create drawing and er"},{"type":"text","text":" "},{"type":"text","text":"asing animations. You cann achieve this using the stroke start or the stroke end properties of a SwiftUI path."}]}],"identifier":{"url":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/FirstSwiftUIAnimation","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Create your first SwiftUI animation","categoryPathComponent":"AnimationTutorialTableofContents","role":"project","category":"SwiftUIAnimationLibraryTutorials"},"hierarchy":{"modules":[{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Create-your-first-SwiftUI-animation","projects":[{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/FirstSwiftUIAnimation","sections":[{"kind":"task","reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/FirstSwiftUIAnimation#Animating-rotation"}]}]},{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Animating-path-properties:-Stroke-start-and-stroke-end","projects":[{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/AnimateStrokes","sections":[{"kind":"task","reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/AnimateStrokes#How-to-animate-stroke-start-and-stroke-end"}]}]},{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Animating-path-properties:-Dash-phase","projects":[{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/HeartRateAnimation","sections":[{"kind":"task","reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/HeartRateAnimation#Measuring-Heart-Rate"}]}]},{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/How-to-animate-a-scale-transform:-Scale-X","projects":[{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/ElementLoading","sections":[{"kind":"task","reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/ElementLoading#How-to-create-a-loading-animation-in-SwiftUI"}]}]},{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/How-to-animate-a-scale-transform:-Scale-Y","projects":[{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/AudioMeteringAnimation","sections":[{"kind":"task","reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/AudioMeteringAnimation#How-to-create-an-audio-metering-animation-with-SwiftUI"}]}]},{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Replicating-Yahoo-Weather:-Sun-and-Wind-Animations","projects":[{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/SunAndWindAnimations","sections":[{"kind":"task","reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/SunAndWindAnimations#Rotation-and-movement-on-a-circular-path"}]}]},{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Replicating-Yahoo-Weather:-Today-s-Weather-Animations","projects":[{"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/WeatherAnimationsTut","sections":[{"kind":"task","reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/WeatherAnimationsTut#Animate-from-A-to-B,-then-to-C"}]}]}],"reference":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents","paths":[["doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents","doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/$volume","doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Create-your-first-SwiftUI-animation"]]},"references":{"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/WeatherAnimationsTut#Animate-from-A-to-B,-then-to-C":{"role":"pseudoSymbol","title":"Animate from A to B, then to C","abstract":[{"type":"text","text":"SwiftUI does not have built-in keyframe animations. In this tutorial, you will learn about how to animate an object to move from one point to another point before it comes to rest at its final destination."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/WeatherAnimationsTut#Animate-from-A-to-B,-then-to-C","kind":"section","type":"section","url":"\/tutorials\/swiftuianimationtutorials\/weatheranimationstut#Animate-from-A-to-B,-then-to-C"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/AudioMeteringAnimation#How-to-create-an-audio-metering-animation-with-SwiftUI":{"role":"pseudoSymbol","title":"How to create an audio metering animation with SwiftUI","abstract":[{"type":"text","text":"In SwiftUI, you can animate size properties such as height and width. In this tutorial, you will use animation to change the height of rectangles over time."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/AudioMeteringAnimation#How-to-create-an-audio-metering-animation-with-SwiftUI","kind":"section","type":"section","url":"\/tutorials\/swiftuianimationtutorials\/audiometeringanimation#How-to-create-an-audio-metering-animation-with-SwiftUI"},"rotationAnimation.gif":{"alt":"Rotational animation","type":"image","identifier":"rotationAnimation.gif","variants":[{"url":"\/images\/rotationAnimation.gif","traits":["1x","light"]}]},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/HeartRateAnimation":{"role":"project","title":"Replicating the Heart Rate Measuring animation on watchOS","estimatedTime":"15min","abstract":[{"type":"text","text":"The dash phase of a path can be used to move dashed strokes along a path. This is called the marching ant effect. In this chapter, you will discover how to create animated marching ant effects in SwiftUI. This animation is similar to the heart rate measuring animation you see on watchOS."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/HeartRateAnimation","kind":"project","type":"topic","url":"\/tutorials\/swiftuianimationtutorials\/heartrateanimation"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/FirstSwiftUIAnimation":{"role":"project","title":"Create your first SwiftUI animation","estimatedTime":"10min","abstract":[{"type":"text","text":"The first animation you may want to create is learning to rotate a view with animation. In this chapter, you will learn to build a looping rotational animation using the settings icon. Animation takes place when an object is changed over time. To change views over time in SwiftUI, you need what is called a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/state"},{"type":"text","text":". This property wrapper will be used to set the initial and end states of the animation."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/FirstSwiftUIAnimation","kind":"project","type":"topic","url":"\/tutorials\/swiftuianimationtutorials\/firstswiftuianimation"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/HeartRateAnimation#Measuring-Heart-Rate":{"role":"pseudoSymbol","title":"Measuring Heart Rate","abstract":[{"type":"text","text":"The dash phase of a path can be used to move dashed strokes along a path. This is called the marching ant effect. In this chapter, you will discover how to create animated marching ant effects in SwiftUI. This animation is similar to the heart rate measuring animation you see on watchOS."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/HeartRateAnimation#Measuring-Heart-Rate","kind":"section","type":"section","url":"\/tutorials\/swiftuianimationtutorials\/heartrateanimation#Measuring-Heart-Rate"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/AnimationTutorialTableofContents/How-to-animate-a-scale-transform:-Scale-X":{"role":"article","title":"How to animate a scale transform: Scale X","abstract":[],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/How-to-animate-a-scale-transform:-Scale-X","kind":"article","type":"topic","url":"\/tutorials\/animationtutorialtableofcontents\/how-to-animate-a-scale-transform:-scale-x"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/SunAndWindAnimations#Rotation-and-movement-on-a-circular-path":{"role":"pseudoSymbol","title":"Rotation and movement on a circular path","abstract":[{"type":"text","text":"In this tutorial, you will learn about offset-rotation. A technique that can be used to move objects on a circular path."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/SunAndWindAnimations#Rotation-and-movement-on-a-circular-path","kind":"section","type":"section","url":"\/tutorials\/swiftuianimationtutorials\/sunandwindanimations#Rotation-and-movement-on-a-circular-path"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/ElementLoading":{"role":"project","title":"SwiftUI Loading Animation","estimatedTime":"10min","abstract":[{"type":"text","text":"One of the most common animations you may want to create when learning SwiftUI is how to create a loading animation. In this tutorial, you will do exactly that."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/ElementLoading","kind":"project","type":"topic","url":"\/tutorials\/swiftuianimationtutorials\/elementloading"},"https://www.hackingwithswift.com/books/ios-swiftui/creating-implicit-animations":{"title":"implicitly","titleInlineContent":[{"type":"text","text":"implicitly"}],"type":"link","identifier":"https:\/\/www.hackingwithswift.com\/books\/ios-swiftui\/creating-implicit-animations","url":"https:\/\/www.hackingwithswift.com\/books\/ios-swiftui\/creating-implicit-animations"},"https://developer.apple.com/documentation/swiftui/state":{"title":"state variable","titleInlineContent":[{"type":"text","text":"state variable"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/state","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/state"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/ElementLoading#How-to-create-a-loading-animation-in-SwiftUI":{"role":"pseudoSymbol","title":"How to create a loading animation in SwiftUI","abstract":[{"type":"text","text":"One of the most common animations you may want to create when learning SwiftUI is how to create a loading animation. In this tutorial, you will do exactly that."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/ElementLoading#How-to-create-a-loading-animation-in-SwiftUI","kind":"section","type":"section","url":"\/tutorials\/swiftuianimationtutorials\/elementloading#How-to-create-a-loading-animation-in-SwiftUI"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/SunAndWindAnimations":{"role":"project","title":"How to create an offset-rotational motion in SwiftUI","estimatedTime":"15min","abstract":[{"type":"text","text":"In this tutorial, you will learn about offset-rotation. A technique that can be used to move objects on a circular path."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/SunAndWindAnimations","kind":"project","type":"topic","url":"\/tutorials\/swiftuianimationtutorials\/sunandwindanimations"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/FirstSwiftUIAnimation#Animating-rotation":{"role":"pseudoSymbol","title":"Animating rotation","abstract":[{"type":"text","text":"The first animation you may want to create is learning to rotate a view with animation. In this chapter, you will learn to build a looping rotational animation using the settings icon. Animation takes place when an object is changed over time. To change views over time in SwiftUI, you need what is called a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/state"},{"type":"text","text":". This property wrapper will be used to set the initial and end states of the animation."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/FirstSwiftUIAnimation#Animating-rotation","kind":"section","type":"section","url":"\/tutorials\/swiftuianimationtutorials\/firstswiftuianimation#Animating-rotation"},"https://developer.apple.com/documentation/swiftui/path":{"title":"Path tool","titleInlineContent":[{"type":"text","text":"Path tool"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/path","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/path"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/AnimationTutorialTableofContents/Create-your-first-SwiftUI-animation":{"role":"article","title":"Create your first SwiftUI animation","abstract":[],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Create-your-first-SwiftUI-animation","kind":"article","type":"topic","url":"\/tutorials\/animationtutorialtableofcontents\/create-your-first-swiftui-animation"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/AnimateStrokes":{"role":"project","title":"Animating path properties: Stroke start and stroke end","estimatedTime":"15min","abstract":[{"type":"text","text":"In this chapter, you will learn how to trim path properties in SwiftUI to create drawing and er"},{"type":"text","text":" "},{"type":"text","text":"asing animations. You cann achieve this using the stroke start or the stroke end properties of a SwiftUI path."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/AnimateStrokes","kind":"project","type":"topic","url":"\/tutorials\/swiftuianimationtutorials\/animatestrokes"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/AnimationTutorialTableofContents/How-to-animate-a-scale-transform:-Scale-Y":{"role":"article","title":"How to animate a scale transform: Scale Y","abstract":[],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/How-to-animate-a-scale-transform:-Scale-Y","kind":"article","type":"topic","url":"\/tutorials\/animationtutorialtableofcontents\/how-to-animate-a-scale-transform:-scale-y"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/AnimationTutorialTableofContents/Animating-path-properties:-Stroke-start-and-stroke-end":{"role":"article","title":"Animating path properties: Stroke start and stroke end","abstract":[],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Animating-path-properties:-Stroke-start-and-stroke-end","kind":"article","type":"topic","url":"\/tutorials\/animationtutorialtableofcontents\/animating-path-properties:-stroke-start-and-stroke-end"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/AnimationTutorialTableofContents/Replicating-Yahoo-Weather:-Today-s-Weather-Animations":{"role":"article","title":"Replicating Yahoo Weather: Today’s Weather Animations","abstract":[],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Replicating-Yahoo-Weather:-Today-s-Weather-Animations","kind":"article","type":"topic","url":"\/tutorials\/animationtutorialtableofcontents\/replicating-yahoo-weather:-today-s-weather-animations"},"animationBasics.svg":{"alt":"Rotational animation","type":"image","identifier":"animationBasics.svg","variants":[{"url":"\/images\/animationBasics.svg","traits":["1x","light"]}]},"doc://Stream.SwiftUIAnimationTutorials/tutorials/AnimationTutorialTableofContents/Replicating-Yahoo-Weather:-Sun-and-Wind-Animations":{"role":"article","title":"Replicating Yahoo Weather: Sun and Wind Animations","abstract":[],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Replicating-Yahoo-Weather:-Sun-and-Wind-Animations","kind":"article","type":"topic","url":"\/tutorials\/animationtutorialtableofcontents\/replicating-yahoo-weather:-sun-and-wind-animations"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/WeatherAnimationsTut":{"role":"project","title":"Creating keyframe-based animations in SwiftUI","estimatedTime":"25min","abstract":[{"type":"text","text":"SwiftUI does not have built-in keyframe animations. In this tutorial, you will learn about how to animate an object to move from one point to another point before it comes to rest at its final destination."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/WeatherAnimationsTut","kind":"project","type":"topic","url":"\/tutorials\/swiftuianimationtutorials\/weatheranimationstut"},"RotationAnimation.swift":{"syntax":"swift","content":["\/\/","\/\/  RotationAnimation.swift","\/\/  Created by amos","\/\/","","import SwiftUI","","struct RotationAnimation: View {","    @State private var isRotating = 0.0","    ","    var body: some View {","        Image(systemName: \"gear\")","            .font(.system(size: 64))","            .rotationEffect(.degrees(isRotating))","            .onAppear {","                withAnimation(.linear(duration: 1).speed(0.1).repeatForever(autoreverses: false)) {","                    isRotating = 360.0","                }","            }","    }","}","","struct RotationAnimation_Previews: PreviewProvider {","    static var previews: some View {","        RotationAnimation()","            .preferredColorScheme(.dark)","    }","}"],"fileName":"RotationAnimation.swift","identifier":"RotationAnimation.swift","type":"file","fileType":"swift","highlights":[]},"doc://Stream.SwiftUIAnimationTutorials/tutorials/AnimationTutorialTableofContents":{"role":"overview","title":"SwiftUIAnimationTutorials","abstract":[{"type":"text","text":"These tutorial guide you through creating several animations in SwiftUI using "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/shape"},{"type":"text","text":", the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/path"},{"type":"text","text":", and other animation properties as well as techniques. You will learn to animate the outlines and properties of a 2D shape such as width, height, line width, dash, dash phase, stroke start, and stroke end. In addition, the tips, tricks, you learn in this tutorial will get you up and running with animations in SwiftUI in general."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents","kind":"overview","type":"topic","url":"\/tutorials\/animationtutorialtableofcontents"},"https://developer.apple.com/documentation/swiftui/shape":{"title":"Shapes","titleInlineContent":[{"type":"text","text":"Shapes"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/shape","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/shape"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/AudioMeteringAnimation":{"role":"project","title":"Animating Scale Transforms in SwiftUI","estimatedTime":"10min","abstract":[{"type":"text","text":"In SwiftUI, you can animate size properties such as height and width. In this tutorial, you will use animation to change the height of rectangles over time."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/AudioMeteringAnimation","kind":"project","type":"topic","url":"\/tutorials\/swiftuianimationtutorials\/audiometeringanimation"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/AnimationTutorialTableofContents/Animating-path-properties:-Dash-phase":{"role":"article","title":"Animating path properties: Dash phase","abstract":[],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/AnimationTutorialTableofContents\/Animating-path-properties:-Dash-phase","kind":"article","type":"topic","url":"\/tutorials\/animationtutorialtableofcontents\/animating-path-properties:-dash-phase"},"https://www.hackingwithswift.com/books/ios-swiftui/creating-explicit-animations":{"title":"explicitly","titleInlineContent":[{"type":"text","text":"explicitly"}],"type":"link","identifier":"https:\/\/www.hackingwithswift.com\/books\/ios-swiftui\/creating-explicit-animations","url":"https:\/\/www.hackingwithswift.com\/books\/ios-swiftui\/creating-explicit-animations"},"doc://Stream.SwiftUIAnimationTutorials/tutorials/SwiftUIAnimationTutorials/AnimateStrokes#How-to-animate-stroke-start-and-stroke-end":{"role":"pseudoSymbol","title":"How to animate stroke start and stroke end","abstract":[{"type":"text","text":"In this chapter, you will learn how to trim path properties in SwiftUI to create drawing and er"},{"type":"text","text":" "},{"type":"text","text":"asing animations. You cann achieve this using the stroke start or the stroke end properties of a SwiftUI path."}],"identifier":"doc:\/\/Stream.SwiftUIAnimationTutorials\/tutorials\/SwiftUIAnimationTutorials\/AnimateStrokes#How-to-animate-stroke-start-and-stroke-end","kind":"section","type":"section","url":"\/tutorials\/swiftuianimationtutorials\/animatestrokes#How-to-animate-stroke-start-and-stroke-end"},"https://developer.apple.com/sf-symbols/":{"title":"SF Symbols","titleInlineContent":[{"type":"text","text":"SF Symbols"}],"type":"link","identifier":"https:\/\/developer.apple.com\/sf-symbols\/","url":"https:\/\/developer.apple.com\/sf-symbols\/"}}}