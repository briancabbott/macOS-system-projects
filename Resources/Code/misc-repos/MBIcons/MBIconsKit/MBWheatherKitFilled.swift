//
//  MBWheatherKitFilled.swift
//  MBIconsSet
//
//  Created by Porumbescu Viorel on 07/04/2017.
//  Copyright Â© 2017 MingleBit. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import Cocoa

public class MBWheatherKitFilled : NSObject {

    //// Drawing Methods

    public dynamic class func drawCloudSun(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-2-cloud-sun
        //// cloud-sun 2 Drawing
        let cloudsun2Path = NSBezierPath()
        cloudsun2Path.move(to: NSPoint(x: 23.45, y: 16.78))
        cloudsun2Path.curve(to: NSPoint(x: 23.5, y: 17.5), controlPoint1: NSPoint(x: 23.48, y: 17.02), controlPoint2: NSPoint(x: 23.5, y: 17.26))
        cloudsun2Path.curve(to: NSPoint(x: 18, y: 23), controlPoint1: NSPoint(x: 23.5, y: 20.54), controlPoint2: NSPoint(x: 21.04, y: 23))
        cloudsun2Path.curve(to: NSPoint(x: 13.02, y: 19.83), controlPoint1: NSPoint(x: 15.8, y: 23), controlPoint2: NSPoint(x: 13.9, y: 21.71))
        cloudsun2Path.line(to: NSPoint(x: 13.02, y: 19.83))
        cloudsun2Path.curve(to: NSPoint(x: 11.5, y: 20), controlPoint1: NSPoint(x: 12.53, y: 19.94), controlPoint2: NSPoint(x: 12.02, y: 20))
        cloudsun2Path.curve(to: NSPoint(x: 4.5, y: 13), controlPoint1: NSPoint(x: 7.63, y: 20), controlPoint2: NSPoint(x: 4.5, y: 16.87))
        cloudsun2Path.curve(to: NSPoint(x: 4.51, y: 12.59), controlPoint1: NSPoint(x: 4.5, y: 12.86), controlPoint2: NSPoint(x: 4.5, y: 12.72))
        cloudsun2Path.curve(to: NSPoint(x: 1.5, y: 8), controlPoint1: NSPoint(x: 2.74, y: 11.82), controlPoint2: NSPoint(x: 1.5, y: 10.05))
        cloudsun2Path.curve(to: NSPoint(x: 6.5, y: 3), controlPoint1: NSPoint(x: 1.5, y: 5.24), controlPoint2: NSPoint(x: 3.73, y: 3))
        cloudsun2Path.line(to: NSPoint(x: 23.5, y: 3))
        cloudsun2Path.curve(to: NSPoint(x: 28.5, y: 8), controlPoint1: NSPoint(x: 26.26, y: 3), controlPoint2: NSPoint(x: 28.5, y: 5.24))
        cloudsun2Path.curve(to: NSPoint(x: 25.5, y: 12.59), controlPoint1: NSPoint(x: 28.5, y: 10.05), controlPoint2: NSPoint(x: 27.27, y: 11.81))
        cloudsun2Path.curve(to: NSPoint(x: 23.45, y: 16.78), controlPoint1: NSPoint(x: 25.47, y: 14.28), controlPoint2: NSPoint(x: 24.68, y: 15.79))
        cloudsun2Path.line(to: NSPoint(x: 23.45, y: 16.78))
        cloudsun2Path.close()
        cloudsun2Path.move(to: NSPoint(x: 22.5, y: 17.4))
        cloudsun2Path.curve(to: NSPoint(x: 22.5, y: 17.5), controlPoint1: NSPoint(x: 22.5, y: 17.43), controlPoint2: NSPoint(x: 22.5, y: 17.47))
        cloudsun2Path.curve(to: NSPoint(x: 18, y: 22), controlPoint1: NSPoint(x: 22.5, y: 19.99), controlPoint2: NSPoint(x: 20.49, y: 22))
        cloudsun2Path.curve(to: NSPoint(x: 13.99, y: 19.54), controlPoint1: NSPoint(x: 16.25, y: 22), controlPoint2: NSPoint(x: 14.73, y: 21))
        cloudsun2Path.curve(to: NSPoint(x: 17.11, y: 17.18), controlPoint1: NSPoint(x: 15.24, y: 19.07), controlPoint2: NSPoint(x: 16.32, y: 18.24))
        cloudsun2Path.curve(to: NSPoint(x: 20, y: 18), controlPoint1: NSPoint(x: 17.95, y: 17.7), controlPoint2: NSPoint(x: 18.94, y: 18))
        cloudsun2Path.curve(to: NSPoint(x: 22.5, y: 17.4), controlPoint1: NSPoint(x: 20.9, y: 18), controlPoint2: NSPoint(x: 21.75, y: 17.78))
        cloudsun2Path.line(to: NSPoint(x: 22.5, y: 17.4))
        cloudsun2Path.close()
        cloudsun2Path.move(to: NSPoint(x: 18, y: 27))
        cloudsun2Path.curve(to: NSPoint(x: 17.5, y: 26.5), controlPoint1: NSPoint(x: 17.72, y: 27), controlPoint2: NSPoint(x: 17.5, y: 26.78))
        cloudsun2Path.line(to: NSPoint(x: 17.5, y: 24.5))
        cloudsun2Path.curve(to: NSPoint(x: 18, y: 24), controlPoint1: NSPoint(x: 17.5, y: 24.22), controlPoint2: NSPoint(x: 17.73, y: 24))
        cloudsun2Path.curve(to: NSPoint(x: 18.5, y: 24.5), controlPoint1: NSPoint(x: 18.28, y: 24), controlPoint2: NSPoint(x: 18.5, y: 24.22))
        cloudsun2Path.line(to: NSPoint(x: 18.5, y: 26.5))
        cloudsun2Path.curve(to: NSPoint(x: 18, y: 27), controlPoint1: NSPoint(x: 18.5, y: 26.78), controlPoint2: NSPoint(x: 18.27, y: 27))
        cloudsun2Path.line(to: NSPoint(x: 18, y: 27))
        cloudsun2Path.close()
        cloudsun2Path.move(to: NSPoint(x: 24.73, y: 24.21))
        cloudsun2Path.curve(to: NSPoint(x: 24.03, y: 24.21), controlPoint1: NSPoint(x: 24.54, y: 24.41), controlPoint2: NSPoint(x: 24.23, y: 24.41))
        cloudsun2Path.line(to: NSPoint(x: 22.61, y: 22.79))
        cloudsun2Path.curve(to: NSPoint(x: 22.61, y: 22.09), controlPoint1: NSPoint(x: 22.42, y: 22.6), controlPoint2: NSPoint(x: 22.42, y: 22.28))
        cloudsun2Path.curve(to: NSPoint(x: 23.32, y: 22.09), controlPoint1: NSPoint(x: 22.81, y: 21.89), controlPoint2: NSPoint(x: 23.12, y: 21.89))
        cloudsun2Path.line(to: NSPoint(x: 24.74, y: 23.51))
        cloudsun2Path.curve(to: NSPoint(x: 24.73, y: 24.21), controlPoint1: NSPoint(x: 24.93, y: 23.7), controlPoint2: NSPoint(x: 24.92, y: 24.02))
        cloudsun2Path.line(to: NSPoint(x: 24.73, y: 24.21))
        cloudsun2Path.close()
        cloudsun2Path.move(to: NSPoint(x: 27.52, y: 17.48))
        cloudsun2Path.curve(to: NSPoint(x: 27.03, y: 17.98), controlPoint1: NSPoint(x: 27.52, y: 17.75), controlPoint2: NSPoint(x: 27.31, y: 17.98))
        cloudsun2Path.line(to: NSPoint(x: 25.02, y: 17.98))
        cloudsun2Path.curve(to: NSPoint(x: 24.52, y: 17.48), controlPoint1: NSPoint(x: 24.74, y: 17.98), controlPoint2: NSPoint(x: 24.52, y: 17.75))
        cloudsun2Path.curve(to: NSPoint(x: 25.02, y: 16.98), controlPoint1: NSPoint(x: 24.52, y: 17.2), controlPoint2: NSPoint(x: 24.74, y: 16.98))
        cloudsun2Path.line(to: NSPoint(x: 27.03, y: 16.98))
        cloudsun2Path.curve(to: NSPoint(x: 27.52, y: 17.48), controlPoint1: NSPoint(x: 27.3, y: 16.98), controlPoint2: NSPoint(x: 27.52, y: 17.21))
        cloudsun2Path.line(to: NSPoint(x: 27.52, y: 17.48))
        cloudsun2Path.close()
        cloudsun2Path.move(to: NSPoint(x: 11.27, y: 24.21))
        cloudsun2Path.curve(to: NSPoint(x: 11.26, y: 23.51), controlPoint1: NSPoint(x: 11.07, y: 24.02), controlPoint2: NSPoint(x: 11.07, y: 23.7))
        cloudsun2Path.line(to: NSPoint(x: 12.68, y: 22.09))
        cloudsun2Path.curve(to: NSPoint(x: 13.39, y: 22.09), controlPoint1: NSPoint(x: 12.88, y: 21.89), controlPoint2: NSPoint(x: 13.2, y: 21.9))
        cloudsun2Path.curve(to: NSPoint(x: 13.39, y: 22.79), controlPoint1: NSPoint(x: 13.58, y: 22.29), controlPoint2: NSPoint(x: 13.59, y: 22.6))
        cloudsun2Path.line(to: NSPoint(x: 11.97, y: 24.21))
        cloudsun2Path.curve(to: NSPoint(x: 11.27, y: 24.21), controlPoint1: NSPoint(x: 11.78, y: 24.41), controlPoint2: NSPoint(x: 11.46, y: 24.4))
        cloudsun2Path.line(to: NSPoint(x: 11.27, y: 24.21))
        cloudsun2Path.close()
        cloudsun2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsun2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudMoon(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-3-cloud-moon
        //// cloud-moon 2 Drawing
        let cloudmoon2Path = NSBezierPath()
        cloudmoon2Path.move(to: NSPoint(x: 23.77, y: 17))
        cloudmoon2Path.curve(to: NSPoint(x: 25.34, y: 19.66), controlPoint1: NSPoint(x: 24.53, y: 17.71), controlPoint2: NSPoint(x: 25.08, y: 18.63))
        cloudmoon2Path.curve(to: NSPoint(x: 25.49, y: 20.75), controlPoint1: NSPoint(x: 25.42, y: 20.01), controlPoint2: NSPoint(x: 25.48, y: 20.38))
        cloudmoon2Path.curve(to: NSPoint(x: 24, y: 20.5), controlPoint1: NSPoint(x: 25.03, y: 20.59), controlPoint2: NSPoint(x: 24.52, y: 20.5))
        cloudmoon2Path.curve(to: NSPoint(x: 19.5, y: 25), controlPoint1: NSPoint(x: 21.51, y: 20.5), controlPoint2: NSPoint(x: 19.5, y: 22.51))
        cloudmoon2Path.curve(to: NSPoint(x: 19.75, y: 26.49), controlPoint1: NSPoint(x: 19.5, y: 25.52), controlPoint2: NSPoint(x: 19.59, y: 26.03))
        cloudmoon2Path.curve(to: NSPoint(x: 18.66, y: 26.34), controlPoint1: NSPoint(x: 19.38, y: 26.48), controlPoint2: NSPoint(x: 19.01, y: 26.42))
        cloudmoon2Path.curve(to: NSPoint(x: 14.5, y: 21), controlPoint1: NSPoint(x: 16.27, y: 25.74), controlPoint2: NSPoint(x: 14.5, y: 23.58))
        cloudmoon2Path.curve(to: NSPoint(x: 14.64, y: 19.76), controlPoint1: NSPoint(x: 14.5, y: 20.57), controlPoint2: NSPoint(x: 14.55, y: 20.16))
        cloudmoon2Path.curve(to: NSPoint(x: 11.5, y: 20.5), controlPoint1: NSPoint(x: 13.7, y: 20.23), controlPoint2: NSPoint(x: 12.63, y: 20.5))
        cloudmoon2Path.curve(to: NSPoint(x: 4.5, y: 13.5), controlPoint1: NSPoint(x: 7.63, y: 20.5), controlPoint2: NSPoint(x: 4.5, y: 17.37))
        cloudmoon2Path.curve(to: NSPoint(x: 4.51, y: 13.09), controlPoint1: NSPoint(x: 4.5, y: 13.36), controlPoint2: NSPoint(x: 4.5, y: 13.22))
        cloudmoon2Path.curve(to: NSPoint(x: 1.5, y: 8.5), controlPoint1: NSPoint(x: 2.74, y: 12.32), controlPoint2: NSPoint(x: 1.5, y: 10.55))
        cloudmoon2Path.curve(to: NSPoint(x: 6.5, y: 3.5), controlPoint1: NSPoint(x: 1.5, y: 5.74), controlPoint2: NSPoint(x: 3.73, y: 3.5))
        cloudmoon2Path.line(to: NSPoint(x: 23.5, y: 3.5))
        cloudmoon2Path.curve(to: NSPoint(x: 28.5, y: 8.5), controlPoint1: NSPoint(x: 26.26, y: 3.5), controlPoint2: NSPoint(x: 28.5, y: 5.74))
        cloudmoon2Path.curve(to: NSPoint(x: 25.5, y: 13.09), controlPoint1: NSPoint(x: 28.5, y: 10.55), controlPoint2: NSPoint(x: 27.27, y: 12.31))
        cloudmoon2Path.curve(to: NSPoint(x: 23.77, y: 17), controlPoint1: NSPoint(x: 25.48, y: 14.63), controlPoint2: NSPoint(x: 24.82, y: 16.02))
        cloudmoon2Path.line(to: NSPoint(x: 23.77, y: 17))
        cloudmoon2Path.close()
        cloudmoon2Path.move(to: NSPoint(x: 22.98, y: 17.63))
        cloudmoon2Path.curve(to: NSPoint(x: 24.25, y: 19.51), controlPoint1: NSPoint(x: 23.55, y: 18.13), controlPoint2: NSPoint(x: 23.99, y: 18.77))
        cloudmoon2Path.curve(to: NSPoint(x: 24, y: 19.5), controlPoint1: NSPoint(x: 24.16, y: 19.5), controlPoint2: NSPoint(x: 24.08, y: 19.5))
        cloudmoon2Path.curve(to: NSPoint(x: 18.5, y: 25), controlPoint1: NSPoint(x: 20.96, y: 19.5), controlPoint2: NSPoint(x: 18.5, y: 21.96))
        cloudmoon2Path.curve(to: NSPoint(x: 18.51, y: 25.25), controlPoint1: NSPoint(x: 18.5, y: 25.08), controlPoint2: NSPoint(x: 18.5, y: 25.16))
        cloudmoon2Path.curve(to: NSPoint(x: 15.5, y: 21), controlPoint1: NSPoint(x: 16.75, y: 24.63), controlPoint2: NSPoint(x: 15.5, y: 22.96))
        cloudmoon2Path.curve(to: NSPoint(x: 16.07, y: 18.8), controlPoint1: NSPoint(x: 15.5, y: 20.2), controlPoint2: NSPoint(x: 15.71, y: 19.45))
        cloudmoon2Path.curve(to: NSPoint(x: 17.11, y: 17.68), controlPoint1: NSPoint(x: 16.46, y: 18.47), controlPoint2: NSPoint(x: 16.81, y: 18.09))
        cloudmoon2Path.curve(to: NSPoint(x: 20, y: 18.5), controlPoint1: NSPoint(x: 17.95, y: 18.2), controlPoint2: NSPoint(x: 18.94, y: 18.5))
        cloudmoon2Path.curve(to: NSPoint(x: 22.98, y: 17.63), controlPoint1: NSPoint(x: 21.1, y: 18.5), controlPoint2: NSPoint(x: 22.12, y: 18.18))
        cloudmoon2Path.line(to: NSPoint(x: 22.98, y: 17.63))
        cloudmoon2Path.close()
        cloudmoon2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudmoon2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudRain(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-4-cloud-rain
        //// cloud-rain 2 Drawing
        let cloudrain2Path = NSBezierPath()
        cloudrain2Path.move(to: NSPoint(x: 25.5, y: 19.09))
        cloudrain2Path.curve(to: NSPoint(x: 28.5, y: 14.5), controlPoint1: NSPoint(x: 27.27, y: 18.31), controlPoint2: NSPoint(x: 28.5, y: 16.55))
        cloudrain2Path.curve(to: NSPoint(x: 23.5, y: 9.5), controlPoint1: NSPoint(x: 28.5, y: 11.74), controlPoint2: NSPoint(x: 26.26, y: 9.5))
        cloudrain2Path.line(to: NSPoint(x: 6.5, y: 9.5))
        cloudrain2Path.curve(to: NSPoint(x: 1.5, y: 14.5), controlPoint1: NSPoint(x: 3.73, y: 9.5), controlPoint2: NSPoint(x: 1.5, y: 11.74))
        cloudrain2Path.curve(to: NSPoint(x: 4.51, y: 19.09), controlPoint1: NSPoint(x: 1.5, y: 16.55), controlPoint2: NSPoint(x: 2.74, y: 18.32))
        cloudrain2Path.line(to: NSPoint(x: 4.51, y: 19.09))
        cloudrain2Path.curve(to: NSPoint(x: 4.5, y: 19.5), controlPoint1: NSPoint(x: 4.5, y: 19.22), controlPoint2: NSPoint(x: 4.5, y: 19.36))
        cloudrain2Path.curve(to: NSPoint(x: 11.5, y: 26.5), controlPoint1: NSPoint(x: 4.5, y: 23.37), controlPoint2: NSPoint(x: 7.63, y: 26.5))
        cloudrain2Path.curve(to: NSPoint(x: 17.11, y: 23.68), controlPoint1: NSPoint(x: 13.8, y: 26.5), controlPoint2: NSPoint(x: 15.84, y: 25.39))
        cloudrain2Path.curve(to: NSPoint(x: 20, y: 24.5), controlPoint1: NSPoint(x: 17.95, y: 24.2), controlPoint2: NSPoint(x: 18.94, y: 24.5))
        cloudrain2Path.curve(to: NSPoint(x: 25.5, y: 19.09), controlPoint1: NSPoint(x: 23.01, y: 24.5), controlPoint2: NSPoint(x: 25.45, y: 22.08))
        cloudrain2Path.line(to: NSPoint(x: 25.5, y: 19.09))
        cloudrain2Path.line(to: NSPoint(x: 25.5, y: 19.09))
        cloudrain2Path.close()
        cloudrain2Path.move(to: NSPoint(x: 9, y: 8.5))
        cloudrain2Path.curve(to: NSPoint(x: 8.5, y: 8), controlPoint1: NSPoint(x: 8.72, y: 8.5), controlPoint2: NSPoint(x: 8.5, y: 8.28))
        cloudrain2Path.line(to: NSPoint(x: 8.5, y: 6))
        cloudrain2Path.curve(to: NSPoint(x: 9, y: 5.5), controlPoint1: NSPoint(x: 8.5, y: 5.72), controlPoint2: NSPoint(x: 8.73, y: 5.5))
        cloudrain2Path.curve(to: NSPoint(x: 9.5, y: 6), controlPoint1: NSPoint(x: 9.28, y: 5.5), controlPoint2: NSPoint(x: 9.5, y: 5.72))
        cloudrain2Path.line(to: NSPoint(x: 9.5, y: 8))
        cloudrain2Path.curve(to: NSPoint(x: 9, y: 8.5), controlPoint1: NSPoint(x: 9.5, y: 8.28), controlPoint2: NSPoint(x: 9.27, y: 8.5))
        cloudrain2Path.line(to: NSPoint(x: 9, y: 8.5))
        cloudrain2Path.close()
        cloudrain2Path.move(to: NSPoint(x: 12, y: 6.5))
        cloudrain2Path.curve(to: NSPoint(x: 11.5, y: 6), controlPoint1: NSPoint(x: 11.72, y: 6.5), controlPoint2: NSPoint(x: 11.5, y: 6.28))
        cloudrain2Path.line(to: NSPoint(x: 11.5, y: 4))
        cloudrain2Path.curve(to: NSPoint(x: 12, y: 3.5), controlPoint1: NSPoint(x: 11.5, y: 3.72), controlPoint2: NSPoint(x: 11.73, y: 3.5))
        cloudrain2Path.curve(to: NSPoint(x: 12.5, y: 4), controlPoint1: NSPoint(x: 12.28, y: 3.5), controlPoint2: NSPoint(x: 12.5, y: 3.72))
        cloudrain2Path.line(to: NSPoint(x: 12.5, y: 6))
        cloudrain2Path.curve(to: NSPoint(x: 12, y: 6.5), controlPoint1: NSPoint(x: 12.5, y: 6.28), controlPoint2: NSPoint(x: 12.27, y: 6.5))
        cloudrain2Path.line(to: NSPoint(x: 12, y: 6.5))
        cloudrain2Path.close()
        cloudrain2Path.move(to: NSPoint(x: 15, y: 8.5))
        cloudrain2Path.curve(to: NSPoint(x: 14.5, y: 8), controlPoint1: NSPoint(x: 14.72, y: 8.5), controlPoint2: NSPoint(x: 14.5, y: 8.28))
        cloudrain2Path.line(to: NSPoint(x: 14.5, y: 6))
        cloudrain2Path.curve(to: NSPoint(x: 15, y: 5.5), controlPoint1: NSPoint(x: 14.5, y: 5.72), controlPoint2: NSPoint(x: 14.73, y: 5.5))
        cloudrain2Path.curve(to: NSPoint(x: 15.5, y: 6), controlPoint1: NSPoint(x: 15.28, y: 5.5), controlPoint2: NSPoint(x: 15.5, y: 5.72))
        cloudrain2Path.line(to: NSPoint(x: 15.5, y: 8))
        cloudrain2Path.curve(to: NSPoint(x: 15, y: 8.5), controlPoint1: NSPoint(x: 15.5, y: 8.28), controlPoint2: NSPoint(x: 15.27, y: 8.5))
        cloudrain2Path.line(to: NSPoint(x: 15, y: 8.5))
        cloudrain2Path.close()
        cloudrain2Path.move(to: NSPoint(x: 18, y: 6.5))
        cloudrain2Path.curve(to: NSPoint(x: 17.5, y: 6), controlPoint1: NSPoint(x: 17.72, y: 6.5), controlPoint2: NSPoint(x: 17.5, y: 6.28))
        cloudrain2Path.line(to: NSPoint(x: 17.5, y: 4))
        cloudrain2Path.curve(to: NSPoint(x: 18, y: 3.5), controlPoint1: NSPoint(x: 17.5, y: 3.72), controlPoint2: NSPoint(x: 17.73, y: 3.5))
        cloudrain2Path.curve(to: NSPoint(x: 18.5, y: 4), controlPoint1: NSPoint(x: 18.28, y: 3.5), controlPoint2: NSPoint(x: 18.5, y: 3.72))
        cloudrain2Path.line(to: NSPoint(x: 18.5, y: 6))
        cloudrain2Path.curve(to: NSPoint(x: 18, y: 6.5), controlPoint1: NSPoint(x: 18.5, y: 6.28), controlPoint2: NSPoint(x: 18.27, y: 6.5))
        cloudrain2Path.line(to: NSPoint(x: 18, y: 6.5))
        cloudrain2Path.close()
        cloudrain2Path.move(to: NSPoint(x: 21, y: 8.5))
        cloudrain2Path.curve(to: NSPoint(x: 20.5, y: 8), controlPoint1: NSPoint(x: 20.72, y: 8.5), controlPoint2: NSPoint(x: 20.5, y: 8.28))
        cloudrain2Path.line(to: NSPoint(x: 20.5, y: 6))
        cloudrain2Path.curve(to: NSPoint(x: 21, y: 5.5), controlPoint1: NSPoint(x: 20.5, y: 5.72), controlPoint2: NSPoint(x: 20.73, y: 5.5))
        cloudrain2Path.curve(to: NSPoint(x: 21.5, y: 6), controlPoint1: NSPoint(x: 21.28, y: 5.5), controlPoint2: NSPoint(x: 21.5, y: 5.72))
        cloudrain2Path.line(to: NSPoint(x: 21.5, y: 8))
        cloudrain2Path.curve(to: NSPoint(x: 21, y: 8.5), controlPoint1: NSPoint(x: 21.5, y: 8.28), controlPoint2: NSPoint(x: 21.27, y: 8.5))
        cloudrain2Path.line(to: NSPoint(x: 21, y: 8.5))
        cloudrain2Path.close()
        cloudrain2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudrain2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudRunRain(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-5-cloud-sun-rain
        //// cloud-sun-rain Drawing
        let cloudsunrainPath = NSBezierPath()
        cloudsunrainPath.move(to: NSPoint(x: 23.45, y: 16.78))
        cloudsunrainPath.curve(to: NSPoint(x: 23.5, y: 17.5), controlPoint1: NSPoint(x: 23.48, y: 17.02), controlPoint2: NSPoint(x: 23.5, y: 17.26))
        cloudsunrainPath.curve(to: NSPoint(x: 18, y: 23), controlPoint1: NSPoint(x: 23.5, y: 20.54), controlPoint2: NSPoint(x: 21.04, y: 23))
        cloudsunrainPath.curve(to: NSPoint(x: 13.02, y: 19.83), controlPoint1: NSPoint(x: 15.8, y: 23), controlPoint2: NSPoint(x: 13.9, y: 21.71))
        cloudsunrainPath.line(to: NSPoint(x: 13.02, y: 19.83))
        cloudsunrainPath.curve(to: NSPoint(x: 11.5, y: 20), controlPoint1: NSPoint(x: 12.53, y: 19.94), controlPoint2: NSPoint(x: 12.02, y: 20))
        cloudsunrainPath.curve(to: NSPoint(x: 4.5, y: 13), controlPoint1: NSPoint(x: 7.63, y: 20), controlPoint2: NSPoint(x: 4.5, y: 16.87))
        cloudsunrainPath.curve(to: NSPoint(x: 4.51, y: 12.59), controlPoint1: NSPoint(x: 4.5, y: 12.86), controlPoint2: NSPoint(x: 4.5, y: 12.72))
        cloudsunrainPath.curve(to: NSPoint(x: 1.5, y: 8), controlPoint1: NSPoint(x: 2.74, y: 11.82), controlPoint2: NSPoint(x: 1.5, y: 10.05))
        cloudsunrainPath.curve(to: NSPoint(x: 6.5, y: 3), controlPoint1: NSPoint(x: 1.5, y: 5.24), controlPoint2: NSPoint(x: 3.73, y: 3))
        cloudsunrainPath.line(to: NSPoint(x: 23.5, y: 3))
        cloudsunrainPath.curve(to: NSPoint(x: 28.5, y: 8), controlPoint1: NSPoint(x: 26.26, y: 3), controlPoint2: NSPoint(x: 28.5, y: 5.24))
        cloudsunrainPath.curve(to: NSPoint(x: 25.5, y: 12.59), controlPoint1: NSPoint(x: 28.5, y: 10.05), controlPoint2: NSPoint(x: 27.27, y: 11.81))
        cloudsunrainPath.curve(to: NSPoint(x: 23.45, y: 16.78), controlPoint1: NSPoint(x: 25.47, y: 14.28), controlPoint2: NSPoint(x: 24.68, y: 15.79))
        cloudsunrainPath.line(to: NSPoint(x: 23.45, y: 16.78))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 22.5, y: 17.4))
        cloudsunrainPath.curve(to: NSPoint(x: 22.5, y: 17.5), controlPoint1: NSPoint(x: 22.5, y: 17.43), controlPoint2: NSPoint(x: 22.5, y: 17.47))
        cloudsunrainPath.curve(to: NSPoint(x: 18, y: 22), controlPoint1: NSPoint(x: 22.5, y: 19.99), controlPoint2: NSPoint(x: 20.49, y: 22))
        cloudsunrainPath.curve(to: NSPoint(x: 13.99, y: 19.54), controlPoint1: NSPoint(x: 16.25, y: 22), controlPoint2: NSPoint(x: 14.73, y: 21))
        cloudsunrainPath.curve(to: NSPoint(x: 17.11, y: 17.18), controlPoint1: NSPoint(x: 15.24, y: 19.07), controlPoint2: NSPoint(x: 16.32, y: 18.24))
        cloudsunrainPath.curve(to: NSPoint(x: 20, y: 18), controlPoint1: NSPoint(x: 17.95, y: 17.7), controlPoint2: NSPoint(x: 18.94, y: 18))
        cloudsunrainPath.curve(to: NSPoint(x: 22.5, y: 17.4), controlPoint1: NSPoint(x: 20.9, y: 18), controlPoint2: NSPoint(x: 21.75, y: 17.78))
        cloudsunrainPath.line(to: NSPoint(x: 22.5, y: 17.4))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 18, y: 27))
        cloudsunrainPath.curve(to: NSPoint(x: 17.5, y: 26.5), controlPoint1: NSPoint(x: 17.72, y: 27), controlPoint2: NSPoint(x: 17.5, y: 26.78))
        cloudsunrainPath.line(to: NSPoint(x: 17.5, y: 24.5))
        cloudsunrainPath.curve(to: NSPoint(x: 18, y: 24), controlPoint1: NSPoint(x: 17.5, y: 24.22), controlPoint2: NSPoint(x: 17.73, y: 24))
        cloudsunrainPath.curve(to: NSPoint(x: 18.5, y: 24.5), controlPoint1: NSPoint(x: 18.28, y: 24), controlPoint2: NSPoint(x: 18.5, y: 24.22))
        cloudsunrainPath.line(to: NSPoint(x: 18.5, y: 26.5))
        cloudsunrainPath.curve(to: NSPoint(x: 18, y: 27), controlPoint1: NSPoint(x: 18.5, y: 26.78), controlPoint2: NSPoint(x: 18.27, y: 27))
        cloudsunrainPath.line(to: NSPoint(x: 18, y: 27))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 24.73, y: 24.21))
        cloudsunrainPath.curve(to: NSPoint(x: 24.03, y: 24.21), controlPoint1: NSPoint(x: 24.54, y: 24.41), controlPoint2: NSPoint(x: 24.23, y: 24.41))
        cloudsunrainPath.line(to: NSPoint(x: 22.61, y: 22.79))
        cloudsunrainPath.curve(to: NSPoint(x: 22.61, y: 22.09), controlPoint1: NSPoint(x: 22.42, y: 22.6), controlPoint2: NSPoint(x: 22.42, y: 22.28))
        cloudsunrainPath.curve(to: NSPoint(x: 23.32, y: 22.09), controlPoint1: NSPoint(x: 22.81, y: 21.89), controlPoint2: NSPoint(x: 23.12, y: 21.89))
        cloudsunrainPath.line(to: NSPoint(x: 24.74, y: 23.51))
        cloudsunrainPath.curve(to: NSPoint(x: 24.73, y: 24.21), controlPoint1: NSPoint(x: 24.93, y: 23.7), controlPoint2: NSPoint(x: 24.92, y: 24.02))
        cloudsunrainPath.line(to: NSPoint(x: 24.73, y: 24.21))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 27.52, y: 17.48))
        cloudsunrainPath.curve(to: NSPoint(x: 27.03, y: 17.98), controlPoint1: NSPoint(x: 27.52, y: 17.75), controlPoint2: NSPoint(x: 27.31, y: 17.98))
        cloudsunrainPath.line(to: NSPoint(x: 25.02, y: 17.98))
        cloudsunrainPath.curve(to: NSPoint(x: 24.52, y: 17.48), controlPoint1: NSPoint(x: 24.74, y: 17.98), controlPoint2: NSPoint(x: 24.52, y: 17.75))
        cloudsunrainPath.curve(to: NSPoint(x: 25.02, y: 16.98), controlPoint1: NSPoint(x: 24.52, y: 17.2), controlPoint2: NSPoint(x: 24.74, y: 16.98))
        cloudsunrainPath.line(to: NSPoint(x: 27.03, y: 16.98))
        cloudsunrainPath.curve(to: NSPoint(x: 27.52, y: 17.48), controlPoint1: NSPoint(x: 27.3, y: 16.98), controlPoint2: NSPoint(x: 27.52, y: 17.21))
        cloudsunrainPath.line(to: NSPoint(x: 27.52, y: 17.48))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 11.27, y: 24.21))
        cloudsunrainPath.curve(to: NSPoint(x: 11.26, y: 23.51), controlPoint1: NSPoint(x: 11.07, y: 24.02), controlPoint2: NSPoint(x: 11.07, y: 23.7))
        cloudsunrainPath.line(to: NSPoint(x: 12.68, y: 22.09))
        cloudsunrainPath.curve(to: NSPoint(x: 13.39, y: 22.09), controlPoint1: NSPoint(x: 12.88, y: 21.89), controlPoint2: NSPoint(x: 13.2, y: 21.9))
        cloudsunrainPath.curve(to: NSPoint(x: 13.39, y: 22.79), controlPoint1: NSPoint(x: 13.58, y: 22.29), controlPoint2: NSPoint(x: 13.59, y: 22.6))
        cloudsunrainPath.line(to: NSPoint(x: 11.97, y: 24.21))
        cloudsunrainPath.curve(to: NSPoint(x: 11.27, y: 24.21), controlPoint1: NSPoint(x: 11.78, y: 24.41), controlPoint2: NSPoint(x: 11.46, y: 24.4))
        cloudsunrainPath.line(to: NSPoint(x: 11.27, y: 24.21))
        cloudsunrainPath.close()
        cloudsunrainPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsunrainPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudMoonRain(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-5-cloud-sun-rain
        //// cloud-sun-rain Drawing
        let cloudsunrainPath = NSBezierPath()
        cloudsunrainPath.move(to: NSPoint(x: 23.45, y: 16.78))
        cloudsunrainPath.curve(to: NSPoint(x: 23.5, y: 17.5), controlPoint1: NSPoint(x: 23.48, y: 17.02), controlPoint2: NSPoint(x: 23.5, y: 17.26))
        cloudsunrainPath.curve(to: NSPoint(x: 18, y: 23), controlPoint1: NSPoint(x: 23.5, y: 20.54), controlPoint2: NSPoint(x: 21.04, y: 23))
        cloudsunrainPath.curve(to: NSPoint(x: 13.02, y: 19.83), controlPoint1: NSPoint(x: 15.8, y: 23), controlPoint2: NSPoint(x: 13.9, y: 21.71))
        cloudsunrainPath.line(to: NSPoint(x: 13.02, y: 19.83))
        cloudsunrainPath.curve(to: NSPoint(x: 11.5, y: 20), controlPoint1: NSPoint(x: 12.53, y: 19.94), controlPoint2: NSPoint(x: 12.02, y: 20))
        cloudsunrainPath.curve(to: NSPoint(x: 4.5, y: 13), controlPoint1: NSPoint(x: 7.63, y: 20), controlPoint2: NSPoint(x: 4.5, y: 16.87))
        cloudsunrainPath.curve(to: NSPoint(x: 4.51, y: 12.59), controlPoint1: NSPoint(x: 4.5, y: 12.86), controlPoint2: NSPoint(x: 4.5, y: 12.72))
        cloudsunrainPath.curve(to: NSPoint(x: 1.5, y: 8), controlPoint1: NSPoint(x: 2.74, y: 11.82), controlPoint2: NSPoint(x: 1.5, y: 10.05))
        cloudsunrainPath.curve(to: NSPoint(x: 6.5, y: 3), controlPoint1: NSPoint(x: 1.5, y: 5.24), controlPoint2: NSPoint(x: 3.73, y: 3))
        cloudsunrainPath.line(to: NSPoint(x: 23.5, y: 3))
        cloudsunrainPath.curve(to: NSPoint(x: 28.5, y: 8), controlPoint1: NSPoint(x: 26.26, y: 3), controlPoint2: NSPoint(x: 28.5, y: 5.24))
        cloudsunrainPath.curve(to: NSPoint(x: 25.5, y: 12.59), controlPoint1: NSPoint(x: 28.5, y: 10.05), controlPoint2: NSPoint(x: 27.27, y: 11.81))
        cloudsunrainPath.curve(to: NSPoint(x: 23.45, y: 16.78), controlPoint1: NSPoint(x: 25.47, y: 14.28), controlPoint2: NSPoint(x: 24.68, y: 15.79))
        cloudsunrainPath.line(to: NSPoint(x: 23.45, y: 16.78))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 22.5, y: 17.4))
        cloudsunrainPath.curve(to: NSPoint(x: 22.5, y: 17.5), controlPoint1: NSPoint(x: 22.5, y: 17.43), controlPoint2: NSPoint(x: 22.5, y: 17.47))
        cloudsunrainPath.curve(to: NSPoint(x: 18, y: 22), controlPoint1: NSPoint(x: 22.5, y: 19.99), controlPoint2: NSPoint(x: 20.49, y: 22))
        cloudsunrainPath.curve(to: NSPoint(x: 13.99, y: 19.54), controlPoint1: NSPoint(x: 16.25, y: 22), controlPoint2: NSPoint(x: 14.73, y: 21))
        cloudsunrainPath.curve(to: NSPoint(x: 17.11, y: 17.18), controlPoint1: NSPoint(x: 15.24, y: 19.07), controlPoint2: NSPoint(x: 16.32, y: 18.24))
        cloudsunrainPath.curve(to: NSPoint(x: 20, y: 18), controlPoint1: NSPoint(x: 17.95, y: 17.7), controlPoint2: NSPoint(x: 18.94, y: 18))
        cloudsunrainPath.curve(to: NSPoint(x: 22.5, y: 17.4), controlPoint1: NSPoint(x: 20.9, y: 18), controlPoint2: NSPoint(x: 21.75, y: 17.78))
        cloudsunrainPath.line(to: NSPoint(x: 22.5, y: 17.4))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 18, y: 27))
        cloudsunrainPath.curve(to: NSPoint(x: 17.5, y: 26.5), controlPoint1: NSPoint(x: 17.72, y: 27), controlPoint2: NSPoint(x: 17.5, y: 26.78))
        cloudsunrainPath.line(to: NSPoint(x: 17.5, y: 24.5))
        cloudsunrainPath.curve(to: NSPoint(x: 18, y: 24), controlPoint1: NSPoint(x: 17.5, y: 24.22), controlPoint2: NSPoint(x: 17.73, y: 24))
        cloudsunrainPath.curve(to: NSPoint(x: 18.5, y: 24.5), controlPoint1: NSPoint(x: 18.28, y: 24), controlPoint2: NSPoint(x: 18.5, y: 24.22))
        cloudsunrainPath.line(to: NSPoint(x: 18.5, y: 26.5))
        cloudsunrainPath.curve(to: NSPoint(x: 18, y: 27), controlPoint1: NSPoint(x: 18.5, y: 26.78), controlPoint2: NSPoint(x: 18.27, y: 27))
        cloudsunrainPath.line(to: NSPoint(x: 18, y: 27))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 24.73, y: 24.21))
        cloudsunrainPath.curve(to: NSPoint(x: 24.03, y: 24.21), controlPoint1: NSPoint(x: 24.54, y: 24.41), controlPoint2: NSPoint(x: 24.23, y: 24.41))
        cloudsunrainPath.line(to: NSPoint(x: 22.61, y: 22.79))
        cloudsunrainPath.curve(to: NSPoint(x: 22.61, y: 22.09), controlPoint1: NSPoint(x: 22.42, y: 22.6), controlPoint2: NSPoint(x: 22.42, y: 22.28))
        cloudsunrainPath.curve(to: NSPoint(x: 23.32, y: 22.09), controlPoint1: NSPoint(x: 22.81, y: 21.89), controlPoint2: NSPoint(x: 23.12, y: 21.89))
        cloudsunrainPath.line(to: NSPoint(x: 24.74, y: 23.51))
        cloudsunrainPath.curve(to: NSPoint(x: 24.73, y: 24.21), controlPoint1: NSPoint(x: 24.93, y: 23.7), controlPoint2: NSPoint(x: 24.92, y: 24.02))
        cloudsunrainPath.line(to: NSPoint(x: 24.73, y: 24.21))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 27.52, y: 17.48))
        cloudsunrainPath.curve(to: NSPoint(x: 27.03, y: 17.98), controlPoint1: NSPoint(x: 27.52, y: 17.75), controlPoint2: NSPoint(x: 27.31, y: 17.98))
        cloudsunrainPath.line(to: NSPoint(x: 25.02, y: 17.98))
        cloudsunrainPath.curve(to: NSPoint(x: 24.52, y: 17.48), controlPoint1: NSPoint(x: 24.74, y: 17.98), controlPoint2: NSPoint(x: 24.52, y: 17.75))
        cloudsunrainPath.curve(to: NSPoint(x: 25.02, y: 16.98), controlPoint1: NSPoint(x: 24.52, y: 17.2), controlPoint2: NSPoint(x: 24.74, y: 16.98))
        cloudsunrainPath.line(to: NSPoint(x: 27.03, y: 16.98))
        cloudsunrainPath.curve(to: NSPoint(x: 27.52, y: 17.48), controlPoint1: NSPoint(x: 27.3, y: 16.98), controlPoint2: NSPoint(x: 27.52, y: 17.21))
        cloudsunrainPath.line(to: NSPoint(x: 27.52, y: 17.48))
        cloudsunrainPath.close()
        cloudsunrainPath.move(to: NSPoint(x: 11.27, y: 24.21))
        cloudsunrainPath.curve(to: NSPoint(x: 11.26, y: 23.51), controlPoint1: NSPoint(x: 11.07, y: 24.02), controlPoint2: NSPoint(x: 11.07, y: 23.7))
        cloudsunrainPath.line(to: NSPoint(x: 12.68, y: 22.09))
        cloudsunrainPath.curve(to: NSPoint(x: 13.39, y: 22.09), controlPoint1: NSPoint(x: 12.88, y: 21.89), controlPoint2: NSPoint(x: 13.2, y: 21.9))
        cloudsunrainPath.curve(to: NSPoint(x: 13.39, y: 22.79), controlPoint1: NSPoint(x: 13.58, y: 22.29), controlPoint2: NSPoint(x: 13.59, y: 22.6))
        cloudsunrainPath.line(to: NSPoint(x: 11.97, y: 24.21))
        cloudsunrainPath.curve(to: NSPoint(x: 11.27, y: 24.21), controlPoint1: NSPoint(x: 11.78, y: 24.41), controlPoint2: NSPoint(x: 11.46, y: 24.4))
        cloudsunrainPath.line(to: NSPoint(x: 11.27, y: 24.21))
        cloudsunrainPath.close()
        cloudsunrainPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsunrainPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudSnow(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-7-cloud-snow
        //// cloud-snow 2 Drawing
        let cloudsnow2Path = NSBezierPath()
        cloudsnow2Path.move(to: NSPoint(x: 25.5, y: 19.59))
        cloudsnow2Path.curve(to: NSPoint(x: 28.5, y: 15), controlPoint1: NSPoint(x: 27.27, y: 18.81), controlPoint2: NSPoint(x: 28.5, y: 17.05))
        cloudsnow2Path.curve(to: NSPoint(x: 23.5, y: 10), controlPoint1: NSPoint(x: 28.5, y: 12.24), controlPoint2: NSPoint(x: 26.26, y: 10))
        cloudsnow2Path.line(to: NSPoint(x: 6.5, y: 10))
        cloudsnow2Path.curve(to: NSPoint(x: 1.5, y: 15), controlPoint1: NSPoint(x: 3.73, y: 10), controlPoint2: NSPoint(x: 1.5, y: 12.24))
        cloudsnow2Path.curve(to: NSPoint(x: 4.51, y: 19.59), controlPoint1: NSPoint(x: 1.5, y: 17.05), controlPoint2: NSPoint(x: 2.74, y: 18.82))
        cloudsnow2Path.line(to: NSPoint(x: 4.51, y: 19.59))
        cloudsnow2Path.curve(to: NSPoint(x: 4.5, y: 20), controlPoint1: NSPoint(x: 4.5, y: 19.72), controlPoint2: NSPoint(x: 4.5, y: 19.86))
        cloudsnow2Path.curve(to: NSPoint(x: 11.5, y: 27), controlPoint1: NSPoint(x: 4.5, y: 23.87), controlPoint2: NSPoint(x: 7.63, y: 27))
        cloudsnow2Path.curve(to: NSPoint(x: 17.11, y: 24.18), controlPoint1: NSPoint(x: 13.8, y: 27), controlPoint2: NSPoint(x: 15.84, y: 25.89))
        cloudsnow2Path.curve(to: NSPoint(x: 20, y: 25), controlPoint1: NSPoint(x: 17.95, y: 24.7), controlPoint2: NSPoint(x: 18.94, y: 25))
        cloudsnow2Path.curve(to: NSPoint(x: 25.5, y: 19.59), controlPoint1: NSPoint(x: 23.01, y: 25), controlPoint2: NSPoint(x: 25.45, y: 22.58))
        cloudsnow2Path.line(to: NSPoint(x: 25.5, y: 19.59))
        cloudsnow2Path.line(to: NSPoint(x: 25.5, y: 19.59))
        cloudsnow2Path.close()
        cloudsnow2Path.move(to: NSPoint(x: 8.5, y: 8))
        cloudsnow2Path.curve(to: NSPoint(x: 7.5, y: 7), controlPoint1: NSPoint(x: 7.95, y: 8), controlPoint2: NSPoint(x: 7.5, y: 7.56))
        cloudsnow2Path.curve(to: NSPoint(x: 8.5, y: 6), controlPoint1: NSPoint(x: 7.5, y: 6.45), controlPoint2: NSPoint(x: 7.94, y: 6))
        cloudsnow2Path.curve(to: NSPoint(x: 9.5, y: 7), controlPoint1: NSPoint(x: 9.05, y: 6), controlPoint2: NSPoint(x: 9.5, y: 6.44))
        cloudsnow2Path.curve(to: NSPoint(x: 8.5, y: 8), controlPoint1: NSPoint(x: 9.5, y: 7.55), controlPoint2: NSPoint(x: 9.06, y: 8))
        cloudsnow2Path.line(to: NSPoint(x: 8.5, y: 8))
        cloudsnow2Path.close()
        cloudsnow2Path.move(to: NSPoint(x: 11.5, y: 5))
        cloudsnow2Path.curve(to: NSPoint(x: 10.5, y: 4), controlPoint1: NSPoint(x: 10.95, y: 5), controlPoint2: NSPoint(x: 10.5, y: 4.56))
        cloudsnow2Path.curve(to: NSPoint(x: 11.5, y: 3), controlPoint1: NSPoint(x: 10.5, y: 3.45), controlPoint2: NSPoint(x: 10.94, y: 3))
        cloudsnow2Path.curve(to: NSPoint(x: 12.5, y: 4), controlPoint1: NSPoint(x: 12.05, y: 3), controlPoint2: NSPoint(x: 12.5, y: 3.44))
        cloudsnow2Path.curve(to: NSPoint(x: 11.5, y: 5), controlPoint1: NSPoint(x: 12.5, y: 4.55), controlPoint2: NSPoint(x: 12.06, y: 5))
        cloudsnow2Path.line(to: NSPoint(x: 11.5, y: 5))
        cloudsnow2Path.close()
        cloudsnow2Path.move(to: NSPoint(x: 15.5, y: 8))
        cloudsnow2Path.curve(to: NSPoint(x: 14.5, y: 7), controlPoint1: NSPoint(x: 14.95, y: 8), controlPoint2: NSPoint(x: 14.5, y: 7.56))
        cloudsnow2Path.curve(to: NSPoint(x: 15.5, y: 6), controlPoint1: NSPoint(x: 14.5, y: 6.45), controlPoint2: NSPoint(x: 14.94, y: 6))
        cloudsnow2Path.curve(to: NSPoint(x: 16.5, y: 7), controlPoint1: NSPoint(x: 16.05, y: 6), controlPoint2: NSPoint(x: 16.5, y: 6.44))
        cloudsnow2Path.curve(to: NSPoint(x: 15.5, y: 8), controlPoint1: NSPoint(x: 16.5, y: 7.55), controlPoint2: NSPoint(x: 16.06, y: 8))
        cloudsnow2Path.line(to: NSPoint(x: 15.5, y: 8))
        cloudsnow2Path.close()
        cloudsnow2Path.move(to: NSPoint(x: 18.5, y: 5))
        cloudsnow2Path.curve(to: NSPoint(x: 17.5, y: 4), controlPoint1: NSPoint(x: 17.95, y: 5), controlPoint2: NSPoint(x: 17.5, y: 4.56))
        cloudsnow2Path.curve(to: NSPoint(x: 18.5, y: 3), controlPoint1: NSPoint(x: 17.5, y: 3.45), controlPoint2: NSPoint(x: 17.94, y: 3))
        cloudsnow2Path.curve(to: NSPoint(x: 19.5, y: 4), controlPoint1: NSPoint(x: 19.05, y: 3), controlPoint2: NSPoint(x: 19.5, y: 3.44))
        cloudsnow2Path.curve(to: NSPoint(x: 18.5, y: 5), controlPoint1: NSPoint(x: 19.5, y: 4.55), controlPoint2: NSPoint(x: 19.06, y: 5))
        cloudsnow2Path.line(to: NSPoint(x: 18.5, y: 5))
        cloudsnow2Path.close()
        cloudsnow2Path.move(to: NSPoint(x: 21.5, y: 8))
        cloudsnow2Path.curve(to: NSPoint(x: 20.5, y: 7), controlPoint1: NSPoint(x: 20.95, y: 8), controlPoint2: NSPoint(x: 20.5, y: 7.56))
        cloudsnow2Path.curve(to: NSPoint(x: 21.5, y: 6), controlPoint1: NSPoint(x: 20.5, y: 6.45), controlPoint2: NSPoint(x: 20.94, y: 6))
        cloudsnow2Path.curve(to: NSPoint(x: 22.5, y: 7), controlPoint1: NSPoint(x: 22.05, y: 6), controlPoint2: NSPoint(x: 22.5, y: 6.44))
        cloudsnow2Path.curve(to: NSPoint(x: 21.5, y: 8), controlPoint1: NSPoint(x: 22.5, y: 7.55), controlPoint2: NSPoint(x: 22.06, y: 8))
        cloudsnow2Path.line(to: NSPoint(x: 21.5, y: 8))
        cloudsnow2Path.close()
        cloudsnow2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsnow2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudSunSnow(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-8-cloud-sun-snow
        //// cloud-sun-snow 2 Drawing
        let cloudsunsnow2Path = NSBezierPath()
        cloudsunsnow2Path.move(to: NSPoint(x: 23.45, y: 20.11))
        cloudsunsnow2Path.curve(to: NSPoint(x: 23.5, y: 20.81), controlPoint1: NSPoint(x: 23.48, y: 20.34), controlPoint2: NSPoint(x: 23.5, y: 20.57))
        cloudsunsnow2Path.curve(to: NSPoint(x: 18, y: 26.13), controlPoint1: NSPoint(x: 23.5, y: 23.75), controlPoint2: NSPoint(x: 21.04, y: 26.13))
        cloudsunsnow2Path.curve(to: NSPoint(x: 13.02, y: 23.07), controlPoint1: NSPoint(x: 15.8, y: 26.13), controlPoint2: NSPoint(x: 13.9, y: 24.88))
        cloudsunsnow2Path.line(to: NSPoint(x: 13.02, y: 23.07))
        cloudsunsnow2Path.curve(to: NSPoint(x: 11.5, y: 23.23), controlPoint1: NSPoint(x: 12.53, y: 23.17), controlPoint2: NSPoint(x: 12.02, y: 23.23))
        cloudsunsnow2Path.curve(to: NSPoint(x: 4.5, y: 16.45), controlPoint1: NSPoint(x: 7.63, y: 23.23), controlPoint2: NSPoint(x: 4.5, y: 20.19))
        cloudsunsnow2Path.curve(to: NSPoint(x: 4.51, y: 16.05), controlPoint1: NSPoint(x: 4.5, y: 16.32), controlPoint2: NSPoint(x: 4.5, y: 16.19))
        cloudsunsnow2Path.curve(to: NSPoint(x: 1.5, y: 11.61), controlPoint1: NSPoint(x: 2.74, y: 15.31), controlPoint2: NSPoint(x: 1.5, y: 13.6))
        cloudsunsnow2Path.curve(to: NSPoint(x: 6.5, y: 6.77), controlPoint1: NSPoint(x: 1.5, y: 8.94), controlPoint2: NSPoint(x: 3.73, y: 6.77))
        cloudsunsnow2Path.line(to: NSPoint(x: 23.5, y: 6.77))
        cloudsunsnow2Path.curve(to: NSPoint(x: 28.5, y: 11.61), controlPoint1: NSPoint(x: 26.26, y: 6.77), controlPoint2: NSPoint(x: 28.5, y: 8.95))
        cloudsunsnow2Path.curve(to: NSPoint(x: 25.5, y: 16.05), controlPoint1: NSPoint(x: 28.5, y: 13.6), controlPoint2: NSPoint(x: 27.27, y: 15.3))
        cloudsunsnow2Path.curve(to: NSPoint(x: 23.45, y: 20.11), controlPoint1: NSPoint(x: 25.47, y: 17.69), controlPoint2: NSPoint(x: 24.68, y: 19.15))
        cloudsunsnow2Path.line(to: NSPoint(x: 23.45, y: 20.11))
        cloudsunsnow2Path.line(to: NSPoint(x: 23.45, y: 20.11))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 22.5, y: 20.71))
        cloudsunsnow2Path.curve(to: NSPoint(x: 22.5, y: 20.81), controlPoint1: NSPoint(x: 22.5, y: 20.74), controlPoint2: NSPoint(x: 22.5, y: 20.77))
        cloudsunsnow2Path.curve(to: NSPoint(x: 18, y: 25.16), controlPoint1: NSPoint(x: 22.5, y: 23.21), controlPoint2: NSPoint(x: 20.49, y: 25.16))
        cloudsunsnow2Path.curve(to: NSPoint(x: 13.99, y: 22.78), controlPoint1: NSPoint(x: 16.25, y: 25.16), controlPoint2: NSPoint(x: 14.73, y: 24.2))
        cloudsunsnow2Path.curve(to: NSPoint(x: 17.11, y: 20.5), controlPoint1: NSPoint(x: 15.24, y: 22.32), controlPoint2: NSPoint(x: 16.32, y: 21.52))
        cloudsunsnow2Path.curve(to: NSPoint(x: 20, y: 21.29), controlPoint1: NSPoint(x: 17.95, y: 21), controlPoint2: NSPoint(x: 18.94, y: 21.29))
        cloudsunsnow2Path.curve(to: NSPoint(x: 22.5, y: 20.71), controlPoint1: NSPoint(x: 20.9, y: 21.29), controlPoint2: NSPoint(x: 21.75, y: 21.08))
        cloudsunsnow2Path.line(to: NSPoint(x: 22.5, y: 20.71))
        cloudsunsnow2Path.line(to: NSPoint(x: 22.5, y: 20.71))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 18, y: 30))
        cloudsunsnow2Path.curve(to: NSPoint(x: 17.5, y: 29.52), controlPoint1: NSPoint(x: 17.72, y: 30), controlPoint2: NSPoint(x: 17.5, y: 29.79))
        cloudsunsnow2Path.line(to: NSPoint(x: 17.5, y: 27.58))
        cloudsunsnow2Path.curve(to: NSPoint(x: 18, y: 27.1), controlPoint1: NSPoint(x: 17.5, y: 27.31), controlPoint2: NSPoint(x: 17.73, y: 27.1))
        cloudsunsnow2Path.curve(to: NSPoint(x: 18.5, y: 27.58), controlPoint1: NSPoint(x: 18.28, y: 27.1), controlPoint2: NSPoint(x: 18.5, y: 27.31))
        cloudsunsnow2Path.line(to: NSPoint(x: 18.5, y: 29.52))
        cloudsunsnow2Path.curve(to: NSPoint(x: 18, y: 30), controlPoint1: NSPoint(x: 18.5, y: 29.79), controlPoint2: NSPoint(x: 18.27, y: 30))
        cloudsunsnow2Path.line(to: NSPoint(x: 18, y: 30))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 24.73, y: 27.3))
        cloudsunsnow2Path.curve(to: NSPoint(x: 24.03, y: 27.3), controlPoint1: NSPoint(x: 24.54, y: 27.49), controlPoint2: NSPoint(x: 24.23, y: 27.5))
        cloudsunsnow2Path.line(to: NSPoint(x: 22.61, y: 25.93))
        cloudsunsnow2Path.curve(to: NSPoint(x: 22.61, y: 25.25), controlPoint1: NSPoint(x: 22.42, y: 25.74), controlPoint2: NSPoint(x: 22.42, y: 25.43))
        cloudsunsnow2Path.curve(to: NSPoint(x: 23.32, y: 25.24), controlPoint1: NSPoint(x: 22.81, y: 25.06), controlPoint2: NSPoint(x: 23.12, y: 25.05))
        cloudsunsnow2Path.line(to: NSPoint(x: 24.74, y: 26.62))
        cloudsunsnow2Path.curve(to: NSPoint(x: 24.73, y: 27.3), controlPoint1: NSPoint(x: 24.93, y: 26.81), controlPoint2: NSPoint(x: 24.92, y: 27.12))
        cloudsunsnow2Path.line(to: NSPoint(x: 24.73, y: 27.3))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 27.52, y: 20.79))
        cloudsunsnow2Path.curve(to: NSPoint(x: 27.03, y: 21.27), controlPoint1: NSPoint(x: 27.52, y: 21.05), controlPoint2: NSPoint(x: 27.31, y: 21.27))
        cloudsunsnow2Path.line(to: NSPoint(x: 25.02, y: 21.27))
        cloudsunsnow2Path.curve(to: NSPoint(x: 24.52, y: 20.79), controlPoint1: NSPoint(x: 24.74, y: 21.27), controlPoint2: NSPoint(x: 24.52, y: 21.04))
        cloudsunsnow2Path.curve(to: NSPoint(x: 25.02, y: 20.3), controlPoint1: NSPoint(x: 24.52, y: 20.52), controlPoint2: NSPoint(x: 24.74, y: 20.3))
        cloudsunsnow2Path.line(to: NSPoint(x: 27.03, y: 20.3))
        cloudsunsnow2Path.curve(to: NSPoint(x: 27.52, y: 20.79), controlPoint1: NSPoint(x: 27.3, y: 20.3), controlPoint2: NSPoint(x: 27.52, y: 20.53))
        cloudsunsnow2Path.line(to: NSPoint(x: 27.52, y: 20.79))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 11.27, y: 27.3))
        cloudsunsnow2Path.curve(to: NSPoint(x: 11.26, y: 26.62), controlPoint1: NSPoint(x: 11.07, y: 27.11), controlPoint2: NSPoint(x: 11.07, y: 26.81))
        cloudsunsnow2Path.line(to: NSPoint(x: 12.68, y: 25.24))
        cloudsunsnow2Path.curve(to: NSPoint(x: 13.39, y: 25.25), controlPoint1: NSPoint(x: 12.88, y: 25.06), controlPoint2: NSPoint(x: 13.2, y: 25.06))
        cloudsunsnow2Path.curve(to: NSPoint(x: 13.39, y: 25.93), controlPoint1: NSPoint(x: 13.58, y: 25.44), controlPoint2: NSPoint(x: 13.59, y: 25.74))
        cloudsunsnow2Path.line(to: NSPoint(x: 11.97, y: 27.3))
        cloudsunsnow2Path.curve(to: NSPoint(x: 11.27, y: 27.3), controlPoint1: NSPoint(x: 11.78, y: 27.49), controlPoint2: NSPoint(x: 11.46, y: 27.48))
        cloudsunsnow2Path.line(to: NSPoint(x: 11.27, y: 27.3))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 8.5, y: 4.84))
        cloudsunsnow2Path.curve(to: NSPoint(x: 7.5, y: 3.87), controlPoint1: NSPoint(x: 7.95, y: 4.84), controlPoint2: NSPoint(x: 7.5, y: 4.41))
        cloudsunsnow2Path.curve(to: NSPoint(x: 8.5, y: 2.9), controlPoint1: NSPoint(x: 7.5, y: 3.34), controlPoint2: NSPoint(x: 7.94, y: 2.9))
        cloudsunsnow2Path.curve(to: NSPoint(x: 9.5, y: 3.87), controlPoint1: NSPoint(x: 9.05, y: 2.9), controlPoint2: NSPoint(x: 9.5, y: 3.33))
        cloudsunsnow2Path.curve(to: NSPoint(x: 8.5, y: 4.84), controlPoint1: NSPoint(x: 9.5, y: 4.41), controlPoint2: NSPoint(x: 9.06, y: 4.84))
        cloudsunsnow2Path.line(to: NSPoint(x: 8.5, y: 4.84))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 11.5, y: 1.94))
        cloudsunsnow2Path.curve(to: NSPoint(x: 10.5, y: 0.97), controlPoint1: NSPoint(x: 10.95, y: 1.94), controlPoint2: NSPoint(x: 10.5, y: 1.51))
        cloudsunsnow2Path.curve(to: NSPoint(x: 11.5, y: 0), controlPoint1: NSPoint(x: 10.5, y: 0.43), controlPoint2: NSPoint(x: 10.94, y: 0))
        cloudsunsnow2Path.curve(to: NSPoint(x: 12.5, y: 0.97), controlPoint1: NSPoint(x: 12.05, y: 0), controlPoint2: NSPoint(x: 12.5, y: 0.43))
        cloudsunsnow2Path.curve(to: NSPoint(x: 11.5, y: 1.94), controlPoint1: NSPoint(x: 12.5, y: 1.5), controlPoint2: NSPoint(x: 12.06, y: 1.94))
        cloudsunsnow2Path.line(to: NSPoint(x: 11.5, y: 1.94))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 15.5, y: 4.84))
        cloudsunsnow2Path.curve(to: NSPoint(x: 14.5, y: 3.87), controlPoint1: NSPoint(x: 14.95, y: 4.84), controlPoint2: NSPoint(x: 14.5, y: 4.41))
        cloudsunsnow2Path.curve(to: NSPoint(x: 15.5, y: 2.9), controlPoint1: NSPoint(x: 14.5, y: 3.34), controlPoint2: NSPoint(x: 14.94, y: 2.9))
        cloudsunsnow2Path.curve(to: NSPoint(x: 16.5, y: 3.87), controlPoint1: NSPoint(x: 16.05, y: 2.9), controlPoint2: NSPoint(x: 16.5, y: 3.33))
        cloudsunsnow2Path.curve(to: NSPoint(x: 15.5, y: 4.84), controlPoint1: NSPoint(x: 16.5, y: 4.41), controlPoint2: NSPoint(x: 16.06, y: 4.84))
        cloudsunsnow2Path.line(to: NSPoint(x: 15.5, y: 4.84))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 18.5, y: 1.94))
        cloudsunsnow2Path.curve(to: NSPoint(x: 17.5, y: 0.97), controlPoint1: NSPoint(x: 17.95, y: 1.94), controlPoint2: NSPoint(x: 17.5, y: 1.51))
        cloudsunsnow2Path.curve(to: NSPoint(x: 18.5, y: 0), controlPoint1: NSPoint(x: 17.5, y: 0.43), controlPoint2: NSPoint(x: 17.94, y: 0))
        cloudsunsnow2Path.curve(to: NSPoint(x: 19.5, y: 0.97), controlPoint1: NSPoint(x: 19.05, y: 0), controlPoint2: NSPoint(x: 19.5, y: 0.43))
        cloudsunsnow2Path.curve(to: NSPoint(x: 18.5, y: 1.94), controlPoint1: NSPoint(x: 19.5, y: 1.5), controlPoint2: NSPoint(x: 19.06, y: 1.94))
        cloudsunsnow2Path.line(to: NSPoint(x: 18.5, y: 1.94))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.move(to: NSPoint(x: 21.5, y: 4.84))
        cloudsunsnow2Path.curve(to: NSPoint(x: 20.5, y: 3.87), controlPoint1: NSPoint(x: 20.95, y: 4.84), controlPoint2: NSPoint(x: 20.5, y: 4.41))
        cloudsunsnow2Path.curve(to: NSPoint(x: 21.5, y: 2.9), controlPoint1: NSPoint(x: 20.5, y: 3.34), controlPoint2: NSPoint(x: 20.94, y: 2.9))
        cloudsunsnow2Path.curve(to: NSPoint(x: 22.5, y: 3.87), controlPoint1: NSPoint(x: 22.05, y: 2.9), controlPoint2: NSPoint(x: 22.5, y: 3.33))
        cloudsunsnow2Path.curve(to: NSPoint(x: 21.5, y: 4.84), controlPoint1: NSPoint(x: 22.5, y: 4.41), controlPoint2: NSPoint(x: 22.06, y: 4.84))
        cloudsunsnow2Path.line(to: NSPoint(x: 21.5, y: 4.84))
        cloudsunsnow2Path.close()
        cloudsunsnow2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsunsnow2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonSnow(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-9-cloud-moon-snow
        //// cloud-moon-snow Drawing
        let cloudmoonsnowPath = NSBezierPath()
        cloudmoonsnowPath.move(to: NSPoint(x: 23.77, y: 20.51))
        cloudmoonsnowPath.curve(to: NSPoint(x: 25.34, y: 23.17), controlPoint1: NSPoint(x: 24.53, y: 21.21), controlPoint2: NSPoint(x: 25.08, y: 22.13))
        cloudmoonsnowPath.curve(to: NSPoint(x: 25.49, y: 24.26), controlPoint1: NSPoint(x: 25.42, y: 23.52), controlPoint2: NSPoint(x: 25.48, y: 23.89))
        cloudmoonsnowPath.curve(to: NSPoint(x: 24, y: 24.01), controlPoint1: NSPoint(x: 25.03, y: 24.09), controlPoint2: NSPoint(x: 24.52, y: 24.01))
        cloudmoonsnowPath.curve(to: NSPoint(x: 19.5, y: 28.51), controlPoint1: NSPoint(x: 21.51, y: 24.01), controlPoint2: NSPoint(x: 19.5, y: 26.02))
        cloudmoonsnowPath.curve(to: NSPoint(x: 19.75, y: 30), controlPoint1: NSPoint(x: 19.5, y: 29.03), controlPoint2: NSPoint(x: 19.59, y: 29.53))
        cloudmoonsnowPath.curve(to: NSPoint(x: 18.66, y: 29.84), controlPoint1: NSPoint(x: 19.38, y: 29.98), controlPoint2: NSPoint(x: 19.01, y: 29.93))
        cloudmoonsnowPath.curve(to: NSPoint(x: 14.5, y: 24.51), controlPoint1: NSPoint(x: 16.27, y: 29.24), controlPoint2: NSPoint(x: 14.5, y: 27.08))
        cloudmoonsnowPath.curve(to: NSPoint(x: 14.64, y: 23.26), controlPoint1: NSPoint(x: 14.5, y: 24.08), controlPoint2: NSPoint(x: 14.55, y: 23.66))
        cloudmoonsnowPath.curve(to: NSPoint(x: 11.5, y: 24.01), controlPoint1: NSPoint(x: 13.7, y: 23.74), controlPoint2: NSPoint(x: 12.63, y: 24.01))
        cloudmoonsnowPath.curve(to: NSPoint(x: 4.5, y: 17.01), controlPoint1: NSPoint(x: 7.63, y: 24.01), controlPoint2: NSPoint(x: 4.5, y: 20.87))
        cloudmoonsnowPath.curve(to: NSPoint(x: 4.51, y: 16.59), controlPoint1: NSPoint(x: 4.5, y: 16.87), controlPoint2: NSPoint(x: 4.5, y: 16.73))
        cloudmoonsnowPath.curve(to: NSPoint(x: 1.5, y: 12.01), controlPoint1: NSPoint(x: 2.74, y: 15.82), controlPoint2: NSPoint(x: 1.5, y: 14.06))
        cloudmoonsnowPath.curve(to: NSPoint(x: 6.5, y: 7.01), controlPoint1: NSPoint(x: 1.5, y: 9.24), controlPoint2: NSPoint(x: 3.73, y: 7.01))
        cloudmoonsnowPath.line(to: NSPoint(x: 23.5, y: 7.01))
        cloudmoonsnowPath.curve(to: NSPoint(x: 28.5, y: 12.01), controlPoint1: NSPoint(x: 26.26, y: 7.01), controlPoint2: NSPoint(x: 28.5, y: 9.25))
        cloudmoonsnowPath.curve(to: NSPoint(x: 25.5, y: 16.59), controlPoint1: NSPoint(x: 28.5, y: 14.06), controlPoint2: NSPoint(x: 27.27, y: 15.82))
        cloudmoonsnowPath.curve(to: NSPoint(x: 23.77, y: 20.51), controlPoint1: NSPoint(x: 25.48, y: 18.13), controlPoint2: NSPoint(x: 24.82, y: 19.52))
        cloudmoonsnowPath.line(to: NSPoint(x: 23.77, y: 20.51))
        cloudmoonsnowPath.line(to: NSPoint(x: 23.77, y: 20.51))
        cloudmoonsnowPath.close()
        cloudmoonsnowPath.move(to: NSPoint(x: 22.98, y: 21.13))
        cloudmoonsnowPath.curve(to: NSPoint(x: 24.25, y: 23.01), controlPoint1: NSPoint(x: 23.55, y: 21.63), controlPoint2: NSPoint(x: 23.99, y: 22.28))
        cloudmoonsnowPath.curve(to: NSPoint(x: 24, y: 23.01), controlPoint1: NSPoint(x: 24.16, y: 23.01), controlPoint2: NSPoint(x: 24.08, y: 23.01))
        cloudmoonsnowPath.curve(to: NSPoint(x: 18.5, y: 28.51), controlPoint1: NSPoint(x: 20.96, y: 23.01), controlPoint2: NSPoint(x: 18.5, y: 25.47))
        cloudmoonsnowPath.curve(to: NSPoint(x: 18.51, y: 28.75), controlPoint1: NSPoint(x: 18.5, y: 28.59), controlPoint2: NSPoint(x: 18.5, y: 28.67))
        cloudmoonsnowPath.curve(to: NSPoint(x: 15.5, y: 24.51), controlPoint1: NSPoint(x: 16.75, y: 28.14), controlPoint2: NSPoint(x: 15.5, y: 26.47))
        cloudmoonsnowPath.curve(to: NSPoint(x: 16.07, y: 22.3), controlPoint1: NSPoint(x: 15.5, y: 23.71), controlPoint2: NSPoint(x: 15.71, y: 22.96))
        cloudmoonsnowPath.curve(to: NSPoint(x: 17.11, y: 21.19), controlPoint1: NSPoint(x: 16.46, y: 21.97), controlPoint2: NSPoint(x: 16.81, y: 21.6))
        cloudmoonsnowPath.curve(to: NSPoint(x: 20, y: 22.01), controlPoint1: NSPoint(x: 17.95, y: 21.71), controlPoint2: NSPoint(x: 18.94, y: 22.01))
        cloudmoonsnowPath.curve(to: NSPoint(x: 22.98, y: 21.13), controlPoint1: NSPoint(x: 21.1, y: 22.01), controlPoint2: NSPoint(x: 22.12, y: 21.68))
        cloudmoonsnowPath.line(to: NSPoint(x: 22.98, y: 21.13))
        cloudmoonsnowPath.line(to: NSPoint(x: 22.98, y: 21.13))
        cloudmoonsnowPath.close()
        cloudmoonsnowPath.move(to: NSPoint(x: 8.5, y: 5))
        cloudmoonsnowPath.curve(to: NSPoint(x: 7.5, y: 4), controlPoint1: NSPoint(x: 7.95, y: 5), controlPoint2: NSPoint(x: 7.5, y: 4.56))
        cloudmoonsnowPath.curve(to: NSPoint(x: 8.5, y: 3), controlPoint1: NSPoint(x: 7.5, y: 3.45), controlPoint2: NSPoint(x: 7.94, y: 3))
        cloudmoonsnowPath.curve(to: NSPoint(x: 9.5, y: 4), controlPoint1: NSPoint(x: 9.05, y: 3), controlPoint2: NSPoint(x: 9.5, y: 3.44))
        cloudmoonsnowPath.curve(to: NSPoint(x: 8.5, y: 5), controlPoint1: NSPoint(x: 9.5, y: 4.55), controlPoint2: NSPoint(x: 9.06, y: 5))
        cloudmoonsnowPath.line(to: NSPoint(x: 8.5, y: 5))
        cloudmoonsnowPath.close()
        cloudmoonsnowPath.move(to: NSPoint(x: 11.5, y: 2))
        cloudmoonsnowPath.curve(to: NSPoint(x: 10.5, y: 1), controlPoint1: NSPoint(x: 10.95, y: 2), controlPoint2: NSPoint(x: 10.5, y: 1.56))
        cloudmoonsnowPath.curve(to: NSPoint(x: 11.5, y: 0), controlPoint1: NSPoint(x: 10.5, y: 0.45), controlPoint2: NSPoint(x: 10.94, y: 0))
        cloudmoonsnowPath.curve(to: NSPoint(x: 12.5, y: 1), controlPoint1: NSPoint(x: 12.05, y: 0), controlPoint2: NSPoint(x: 12.5, y: 0.44))
        cloudmoonsnowPath.curve(to: NSPoint(x: 11.5, y: 2), controlPoint1: NSPoint(x: 12.5, y: 1.55), controlPoint2: NSPoint(x: 12.06, y: 2))
        cloudmoonsnowPath.line(to: NSPoint(x: 11.5, y: 2))
        cloudmoonsnowPath.close()
        cloudmoonsnowPath.move(to: NSPoint(x: 15.5, y: 5))
        cloudmoonsnowPath.curve(to: NSPoint(x: 14.5, y: 4), controlPoint1: NSPoint(x: 14.95, y: 5), controlPoint2: NSPoint(x: 14.5, y: 4.56))
        cloudmoonsnowPath.curve(to: NSPoint(x: 15.5, y: 3), controlPoint1: NSPoint(x: 14.5, y: 3.45), controlPoint2: NSPoint(x: 14.94, y: 3))
        cloudmoonsnowPath.curve(to: NSPoint(x: 16.5, y: 4), controlPoint1: NSPoint(x: 16.05, y: 3), controlPoint2: NSPoint(x: 16.5, y: 3.44))
        cloudmoonsnowPath.curve(to: NSPoint(x: 15.5, y: 5), controlPoint1: NSPoint(x: 16.5, y: 4.55), controlPoint2: NSPoint(x: 16.06, y: 5))
        cloudmoonsnowPath.line(to: NSPoint(x: 15.5, y: 5))
        cloudmoonsnowPath.close()
        cloudmoonsnowPath.move(to: NSPoint(x: 18.5, y: 2))
        cloudmoonsnowPath.curve(to: NSPoint(x: 17.5, y: 1), controlPoint1: NSPoint(x: 17.95, y: 2), controlPoint2: NSPoint(x: 17.5, y: 1.56))
        cloudmoonsnowPath.curve(to: NSPoint(x: 18.5, y: 0), controlPoint1: NSPoint(x: 17.5, y: 0.45), controlPoint2: NSPoint(x: 17.94, y: 0))
        cloudmoonsnowPath.curve(to: NSPoint(x: 19.5, y: 1), controlPoint1: NSPoint(x: 19.05, y: 0), controlPoint2: NSPoint(x: 19.5, y: 0.44))
        cloudmoonsnowPath.curve(to: NSPoint(x: 18.5, y: 2), controlPoint1: NSPoint(x: 19.5, y: 1.55), controlPoint2: NSPoint(x: 19.06, y: 2))
        cloudmoonsnowPath.line(to: NSPoint(x: 18.5, y: 2))
        cloudmoonsnowPath.close()
        cloudmoonsnowPath.move(to: NSPoint(x: 21.5, y: 5))
        cloudmoonsnowPath.curve(to: NSPoint(x: 20.5, y: 4), controlPoint1: NSPoint(x: 20.95, y: 5), controlPoint2: NSPoint(x: 20.5, y: 4.56))
        cloudmoonsnowPath.curve(to: NSPoint(x: 21.5, y: 3), controlPoint1: NSPoint(x: 20.5, y: 3.45), controlPoint2: NSPoint(x: 20.94, y: 3))
        cloudmoonsnowPath.curve(to: NSPoint(x: 22.5, y: 4), controlPoint1: NSPoint(x: 22.05, y: 3), controlPoint2: NSPoint(x: 22.5, y: 3.44))
        cloudmoonsnowPath.curve(to: NSPoint(x: 21.5, y: 5), controlPoint1: NSPoint(x: 22.5, y: 4.55), controlPoint2: NSPoint(x: 22.06, y: 5))
        cloudmoonsnowPath.line(to: NSPoint(x: 21.5, y: 5))
        cloudmoonsnowPath.close()
        cloudmoonsnowPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudmoonsnowPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudLightning(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-10-cloud-lightning
        //// cloud-lightning 2 Drawing
        let cloudlightning2Path = NSBezierPath()
        cloudlightning2Path.move(to: NSPoint(x: 15.57, y: 13))
        cloudlightning2Path.line(to: NSPoint(x: 18.1, y: 13))
        cloudlightning2Path.line(to: NSPoint(x: 12, y: 6.9))
        cloudlightning2Path.line(to: NSPoint(x: 13.48, y: 11))
        cloudlightning2Path.line(to: NSPoint(x: 10.9, y: 11))
        cloudlightning2Path.line(to: NSPoint(x: 13.2, y: 17))
        cloudlightning2Path.line(to: NSPoint(x: 17.1, y: 17))
        cloudlightning2Path.line(to: NSPoint(x: 15.57, y: 13))
        cloudlightning2Path.line(to: NSPoint(x: 15.57, y: 13))
        cloudlightning2Path.close()
        cloudlightning2Path.move(to: NSPoint(x: 16.5, y: 10))
        cloudlightning2Path.line(to: NSPoint(x: 23.5, y: 10))
        cloudlightning2Path.curve(to: NSPoint(x: 28.5, y: 15), controlPoint1: NSPoint(x: 26.26, y: 10), controlPoint2: NSPoint(x: 28.5, y: 12.24))
        cloudlightning2Path.curve(to: NSPoint(x: 25.5, y: 19.59), controlPoint1: NSPoint(x: 28.5, y: 17.05), controlPoint2: NSPoint(x: 27.27, y: 18.81))
        cloudlightning2Path.line(to: NSPoint(x: 25.5, y: 19.59))
        cloudlightning2Path.curve(to: NSPoint(x: 20, y: 25), controlPoint1: NSPoint(x: 25.45, y: 22.58), controlPoint2: NSPoint(x: 23.01, y: 25))
        cloudlightning2Path.curve(to: NSPoint(x: 17.11, y: 24.18), controlPoint1: NSPoint(x: 18.94, y: 25), controlPoint2: NSPoint(x: 17.95, y: 24.7))
        cloudlightning2Path.curve(to: NSPoint(x: 11.5, y: 27), controlPoint1: NSPoint(x: 15.84, y: 25.89), controlPoint2: NSPoint(x: 13.8, y: 27))
        cloudlightning2Path.curve(to: NSPoint(x: 4.5, y: 20), controlPoint1: NSPoint(x: 7.63, y: 27), controlPoint2: NSPoint(x: 4.5, y: 23.87))
        cloudlightning2Path.curve(to: NSPoint(x: 4.51, y: 19.59), controlPoint1: NSPoint(x: 4.5, y: 19.86), controlPoint2: NSPoint(x: 4.5, y: 19.72))
        cloudlightning2Path.line(to: NSPoint(x: 4.51, y: 19.59))
        cloudlightning2Path.curve(to: NSPoint(x: 1.5, y: 15), controlPoint1: NSPoint(x: 2.74, y: 18.82), controlPoint2: NSPoint(x: 1.5, y: 17.05))
        cloudlightning2Path.curve(to: NSPoint(x: 6.5, y: 10), controlPoint1: NSPoint(x: 1.5, y: 12.24), controlPoint2: NSPoint(x: 3.73, y: 10))
        cloudlightning2Path.line(to: NSPoint(x: 12.05, y: 10))
        cloudlightning2Path.line(to: NSPoint(x: 9.5, y: 3))
        cloudlightning2Path.line(to: NSPoint(x: 16.5, y: 10))
        cloudlightning2Path.line(to: NSPoint(x: 16.5, y: 10))
        cloudlightning2Path.line(to: NSPoint(x: 16.5, y: 10))
        cloudlightning2Path.close()
        cloudlightning2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudlightning2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudSunLightning(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-11-cloud-sun-lightning
        //// cloud-sun-lightning 2 Drawing
        let cloudsunlightning2Path = NSBezierPath()
        cloudsunlightning2Path.move(to: NSPoint(x: 15.57, y: 9.68))
        cloudsunlightning2Path.line(to: NSPoint(x: 18.1, y: 9.68))
        cloudsunlightning2Path.line(to: NSPoint(x: 12, y: 3.77))
        cloudsunlightning2Path.line(to: NSPoint(x: 13.48, y: 7.74))
        cloudsunlightning2Path.line(to: NSPoint(x: 10.9, y: 7.74))
        cloudsunlightning2Path.line(to: NSPoint(x: 13.2, y: 13.55))
        cloudsunlightning2Path.line(to: NSPoint(x: 17.1, y: 13.55))
        cloudsunlightning2Path.line(to: NSPoint(x: 15.57, y: 9.68))
        cloudsunlightning2Path.line(to: NSPoint(x: 15.57, y: 9.68))
        cloudsunlightning2Path.close()
        cloudsunlightning2Path.move(to: NSPoint(x: 12.05, y: 6.77))
        cloudsunlightning2Path.line(to: NSPoint(x: 6.5, y: 6.77))
        cloudsunlightning2Path.curve(to: NSPoint(x: 1.5, y: 11.61), controlPoint1: NSPoint(x: 3.73, y: 6.77), controlPoint2: NSPoint(x: 1.5, y: 8.94))
        cloudsunlightning2Path.curve(to: NSPoint(x: 4.51, y: 16.05), controlPoint1: NSPoint(x: 1.5, y: 13.6), controlPoint2: NSPoint(x: 2.74, y: 15.31))
        cloudsunlightning2Path.curve(to: NSPoint(x: 4.5, y: 16.45), controlPoint1: NSPoint(x: 4.5, y: 16.19), controlPoint2: NSPoint(x: 4.5, y: 16.32))
        cloudsunlightning2Path.curve(to: NSPoint(x: 11.5, y: 23.23), controlPoint1: NSPoint(x: 4.5, y: 20.19), controlPoint2: NSPoint(x: 7.63, y: 23.23))
        cloudsunlightning2Path.curve(to: NSPoint(x: 13.02, y: 23.07), controlPoint1: NSPoint(x: 12.02, y: 23.23), controlPoint2: NSPoint(x: 12.53, y: 23.17))
        cloudsunlightning2Path.line(to: NSPoint(x: 13.02, y: 23.07))
        cloudsunlightning2Path.curve(to: NSPoint(x: 18, y: 26.13), controlPoint1: NSPoint(x: 13.9, y: 24.88), controlPoint2: NSPoint(x: 15.8, y: 26.13))
        cloudsunlightning2Path.curve(to: NSPoint(x: 23.5, y: 20.81), controlPoint1: NSPoint(x: 21.04, y: 26.13), controlPoint2: NSPoint(x: 23.5, y: 23.75))
        cloudsunlightning2Path.curve(to: NSPoint(x: 23.45, y: 20.11), controlPoint1: NSPoint(x: 23.5, y: 20.57), controlPoint2: NSPoint(x: 23.48, y: 20.34))
        cloudsunlightning2Path.line(to: NSPoint(x: 23.45, y: 20.11))
        cloudsunlightning2Path.curve(to: NSPoint(x: 25.5, y: 16.05), controlPoint1: NSPoint(x: 24.68, y: 19.15), controlPoint2: NSPoint(x: 25.47, y: 17.69))
        cloudsunlightning2Path.curve(to: NSPoint(x: 28.5, y: 11.61), controlPoint1: NSPoint(x: 27.27, y: 15.3), controlPoint2: NSPoint(x: 28.5, y: 13.6))
        cloudsunlightning2Path.curve(to: NSPoint(x: 23.5, y: 6.77), controlPoint1: NSPoint(x: 28.5, y: 8.95), controlPoint2: NSPoint(x: 26.26, y: 6.77))
        cloudsunlightning2Path.line(to: NSPoint(x: 16.5, y: 6.77))
        cloudsunlightning2Path.line(to: NSPoint(x: 9.5, y: 0))
        cloudsunlightning2Path.line(to: NSPoint(x: 12.05, y: 6.77))
        cloudsunlightning2Path.line(to: NSPoint(x: 12.05, y: 6.77))
        cloudsunlightning2Path.close()
        cloudsunlightning2Path.move(to: NSPoint(x: 22.5, y: 20.71))
        cloudsunlightning2Path.curve(to: NSPoint(x: 22.5, y: 20.81), controlPoint1: NSPoint(x: 22.5, y: 20.74), controlPoint2: NSPoint(x: 22.5, y: 20.77))
        cloudsunlightning2Path.curve(to: NSPoint(x: 18, y: 25.16), controlPoint1: NSPoint(x: 22.5, y: 23.21), controlPoint2: NSPoint(x: 20.49, y: 25.16))
        cloudsunlightning2Path.curve(to: NSPoint(x: 13.99, y: 22.78), controlPoint1: NSPoint(x: 16.25, y: 25.16), controlPoint2: NSPoint(x: 14.73, y: 24.2))
        cloudsunlightning2Path.curve(to: NSPoint(x: 17.11, y: 20.5), controlPoint1: NSPoint(x: 15.24, y: 22.32), controlPoint2: NSPoint(x: 16.32, y: 21.52))
        cloudsunlightning2Path.curve(to: NSPoint(x: 20, y: 21.29), controlPoint1: NSPoint(x: 17.95, y: 21), controlPoint2: NSPoint(x: 18.94, y: 21.29))
        cloudsunlightning2Path.curve(to: NSPoint(x: 22.5, y: 20.71), controlPoint1: NSPoint(x: 20.9, y: 21.29), controlPoint2: NSPoint(x: 21.75, y: 21.08))
        cloudsunlightning2Path.line(to: NSPoint(x: 22.5, y: 20.71))
        cloudsunlightning2Path.line(to: NSPoint(x: 22.5, y: 20.71))
        cloudsunlightning2Path.close()
        cloudsunlightning2Path.move(to: NSPoint(x: 18, y: 30))
        cloudsunlightning2Path.curve(to: NSPoint(x: 17.5, y: 29.52), controlPoint1: NSPoint(x: 17.72, y: 30), controlPoint2: NSPoint(x: 17.5, y: 29.79))
        cloudsunlightning2Path.line(to: NSPoint(x: 17.5, y: 27.58))
        cloudsunlightning2Path.curve(to: NSPoint(x: 18, y: 27.1), controlPoint1: NSPoint(x: 17.5, y: 27.31), controlPoint2: NSPoint(x: 17.73, y: 27.1))
        cloudsunlightning2Path.curve(to: NSPoint(x: 18.5, y: 27.58), controlPoint1: NSPoint(x: 18.28, y: 27.1), controlPoint2: NSPoint(x: 18.5, y: 27.31))
        cloudsunlightning2Path.line(to: NSPoint(x: 18.5, y: 29.52))
        cloudsunlightning2Path.curve(to: NSPoint(x: 18, y: 30), controlPoint1: NSPoint(x: 18.5, y: 29.79), controlPoint2: NSPoint(x: 18.27, y: 30))
        cloudsunlightning2Path.line(to: NSPoint(x: 18, y: 30))
        cloudsunlightning2Path.close()
        cloudsunlightning2Path.move(to: NSPoint(x: 24.73, y: 27.3))
        cloudsunlightning2Path.curve(to: NSPoint(x: 24.03, y: 27.3), controlPoint1: NSPoint(x: 24.54, y: 27.49), controlPoint2: NSPoint(x: 24.23, y: 27.5))
        cloudsunlightning2Path.line(to: NSPoint(x: 22.61, y: 25.93))
        cloudsunlightning2Path.curve(to: NSPoint(x: 22.61, y: 25.25), controlPoint1: NSPoint(x: 22.42, y: 25.74), controlPoint2: NSPoint(x: 22.42, y: 25.43))
        cloudsunlightning2Path.curve(to: NSPoint(x: 23.32, y: 25.24), controlPoint1: NSPoint(x: 22.81, y: 25.06), controlPoint2: NSPoint(x: 23.12, y: 25.05))
        cloudsunlightning2Path.line(to: NSPoint(x: 24.74, y: 26.62))
        cloudsunlightning2Path.curve(to: NSPoint(x: 24.73, y: 27.3), controlPoint1: NSPoint(x: 24.93, y: 26.81), controlPoint2: NSPoint(x: 24.92, y: 27.12))
        cloudsunlightning2Path.line(to: NSPoint(x: 24.73, y: 27.3))
        cloudsunlightning2Path.close()
        cloudsunlightning2Path.move(to: NSPoint(x: 27.52, y: 20.79))
        cloudsunlightning2Path.curve(to: NSPoint(x: 27.03, y: 21.27), controlPoint1: NSPoint(x: 27.52, y: 21.05), controlPoint2: NSPoint(x: 27.31, y: 21.27))
        cloudsunlightning2Path.line(to: NSPoint(x: 25.02, y: 21.27))
        cloudsunlightning2Path.curve(to: NSPoint(x: 24.52, y: 20.79), controlPoint1: NSPoint(x: 24.74, y: 21.27), controlPoint2: NSPoint(x: 24.52, y: 21.04))
        cloudsunlightning2Path.curve(to: NSPoint(x: 25.02, y: 20.3), controlPoint1: NSPoint(x: 24.52, y: 20.52), controlPoint2: NSPoint(x: 24.74, y: 20.3))
        cloudsunlightning2Path.line(to: NSPoint(x: 27.03, y: 20.3))
        cloudsunlightning2Path.curve(to: NSPoint(x: 27.52, y: 20.79), controlPoint1: NSPoint(x: 27.3, y: 20.3), controlPoint2: NSPoint(x: 27.52, y: 20.53))
        cloudsunlightning2Path.line(to: NSPoint(x: 27.52, y: 20.79))
        cloudsunlightning2Path.close()
        cloudsunlightning2Path.move(to: NSPoint(x: 11.27, y: 27.3))
        cloudsunlightning2Path.curve(to: NSPoint(x: 11.26, y: 26.62), controlPoint1: NSPoint(x: 11.07, y: 27.11), controlPoint2: NSPoint(x: 11.07, y: 26.81))
        cloudsunlightning2Path.line(to: NSPoint(x: 12.68, y: 25.24))
        cloudsunlightning2Path.curve(to: NSPoint(x: 13.39, y: 25.25), controlPoint1: NSPoint(x: 12.88, y: 25.06), controlPoint2: NSPoint(x: 13.2, y: 25.06))
        cloudsunlightning2Path.curve(to: NSPoint(x: 13.39, y: 25.93), controlPoint1: NSPoint(x: 13.58, y: 25.44), controlPoint2: NSPoint(x: 13.59, y: 25.74))
        cloudsunlightning2Path.line(to: NSPoint(x: 11.97, y: 27.3))
        cloudsunlightning2Path.curve(to: NSPoint(x: 11.27, y: 27.3), controlPoint1: NSPoint(x: 11.78, y: 27.49), controlPoint2: NSPoint(x: 11.46, y: 27.48))
        cloudsunlightning2Path.line(to: NSPoint(x: 11.27, y: 27.3))
        cloudsunlightning2Path.close()
        cloudsunlightning2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsunlightning2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudMoonLightning(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-12-cloud-moon-lightning
        //// cloud-moon-lightning 2 Drawing
        let cloudmoonlightning2Path = NSBezierPath()
        cloudmoonlightning2Path.move(to: NSPoint(x: 15.57, y: 10))
        cloudmoonlightning2Path.line(to: NSPoint(x: 18.1, y: 10))
        cloudmoonlightning2Path.line(to: NSPoint(x: 12, y: 3.9))
        cloudmoonlightning2Path.line(to: NSPoint(x: 13.48, y: 8))
        cloudmoonlightning2Path.line(to: NSPoint(x: 10.9, y: 8))
        cloudmoonlightning2Path.line(to: NSPoint(x: 13.2, y: 14))
        cloudmoonlightning2Path.line(to: NSPoint(x: 17.1, y: 14))
        cloudmoonlightning2Path.line(to: NSPoint(x: 15.57, y: 10))
        cloudmoonlightning2Path.line(to: NSPoint(x: 15.57, y: 10))
        cloudmoonlightning2Path.close()
        cloudmoonlightning2Path.move(to: NSPoint(x: 12.05, y: 7))
        cloudmoonlightning2Path.line(to: NSPoint(x: 6.5, y: 7))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 1.5, y: 12), controlPoint1: NSPoint(x: 3.73, y: 7), controlPoint2: NSPoint(x: 1.5, y: 9.24))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 4.51, y: 16.59), controlPoint1: NSPoint(x: 1.5, y: 14.05), controlPoint2: NSPoint(x: 2.74, y: 15.82))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 4.5, y: 17), controlPoint1: NSPoint(x: 4.5, y: 16.72), controlPoint2: NSPoint(x: 4.5, y: 16.86))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 11.5, y: 24), controlPoint1: NSPoint(x: 4.5, y: 20.87), controlPoint2: NSPoint(x: 7.63, y: 24))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 14.64, y: 23.26), controlPoint1: NSPoint(x: 12.63, y: 24), controlPoint2: NSPoint(x: 13.7, y: 23.73))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 14.5, y: 24.5), controlPoint1: NSPoint(x: 14.55, y: 23.66), controlPoint2: NSPoint(x: 14.5, y: 24.07))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 18.66, y: 29.84), controlPoint1: NSPoint(x: 14.5, y: 27.08), controlPoint2: NSPoint(x: 16.27, y: 29.24))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 19.75, y: 29.99), controlPoint1: NSPoint(x: 19.01, y: 29.92), controlPoint2: NSPoint(x: 19.38, y: 29.98))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 19.5, y: 28.5), controlPoint1: NSPoint(x: 19.59, y: 29.53), controlPoint2: NSPoint(x: 19.5, y: 29.02))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 24, y: 24), controlPoint1: NSPoint(x: 19.5, y: 26.01), controlPoint2: NSPoint(x: 21.51, y: 24))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 25.49, y: 24.25), controlPoint1: NSPoint(x: 24.52, y: 24), controlPoint2: NSPoint(x: 25.03, y: 24.09))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 25.34, y: 23.16), controlPoint1: NSPoint(x: 25.48, y: 23.88), controlPoint2: NSPoint(x: 25.42, y: 23.51))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 23.77, y: 20.5), controlPoint1: NSPoint(x: 25.08, y: 22.13), controlPoint2: NSPoint(x: 24.53, y: 21.21))
        cloudmoonlightning2Path.line(to: NSPoint(x: 23.77, y: 20.5))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 25.5, y: 16.59), controlPoint1: NSPoint(x: 24.82, y: 19.52), controlPoint2: NSPoint(x: 25.48, y: 18.13))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 28.5, y: 12), controlPoint1: NSPoint(x: 27.27, y: 15.81), controlPoint2: NSPoint(x: 28.5, y: 14.05))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 23.5, y: 7), controlPoint1: NSPoint(x: 28.5, y: 9.24), controlPoint2: NSPoint(x: 26.26, y: 7))
        cloudmoonlightning2Path.line(to: NSPoint(x: 16.5, y: 7))
        cloudmoonlightning2Path.line(to: NSPoint(x: 9.5, y: 0))
        cloudmoonlightning2Path.line(to: NSPoint(x: 12.05, y: 7))
        cloudmoonlightning2Path.line(to: NSPoint(x: 12.05, y: 7))
        cloudmoonlightning2Path.line(to: NSPoint(x: 12.05, y: 7))
        cloudmoonlightning2Path.close()
        cloudmoonlightning2Path.move(to: NSPoint(x: 22.98, y: 21.13))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 24.25, y: 23.01), controlPoint1: NSPoint(x: 23.55, y: 21.63), controlPoint2: NSPoint(x: 23.99, y: 22.27))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 24, y: 23), controlPoint1: NSPoint(x: 24.16, y: 23), controlPoint2: NSPoint(x: 24.08, y: 23))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 18.5, y: 28.5), controlPoint1: NSPoint(x: 20.96, y: 23), controlPoint2: NSPoint(x: 18.5, y: 25.46))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 18.51, y: 28.75), controlPoint1: NSPoint(x: 18.5, y: 28.58), controlPoint2: NSPoint(x: 18.5, y: 28.66))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 15.5, y: 24.5), controlPoint1: NSPoint(x: 16.75, y: 28.13), controlPoint2: NSPoint(x: 15.5, y: 26.46))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 16.07, y: 22.3), controlPoint1: NSPoint(x: 15.5, y: 23.7), controlPoint2: NSPoint(x: 15.71, y: 22.95))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 17.11, y: 21.18), controlPoint1: NSPoint(x: 16.46, y: 21.97), controlPoint2: NSPoint(x: 16.81, y: 21.59))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 20, y: 22), controlPoint1: NSPoint(x: 17.95, y: 21.7), controlPoint2: NSPoint(x: 18.94, y: 22))
        cloudmoonlightning2Path.curve(to: NSPoint(x: 22.98, y: 21.13), controlPoint1: NSPoint(x: 21.1, y: 22), controlPoint2: NSPoint(x: 22.12, y: 21.68))
        cloudmoonlightning2Path.line(to: NSPoint(x: 22.98, y: 21.13))
        cloudmoonlightning2Path.line(to: NSPoint(x: 22.98, y: 21.13))
        cloudmoonlightning2Path.close()
        cloudmoonlightning2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudmoonlightning2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudWind(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 2.5, y: 1)



        //// icon-13-cloud-wind



        NSGraphicsContext.restoreGraphicsState()


        //// Page-
        //// icon-13-cloud-wind 2
        //// cloud-wind 2 Drawing
        let cloudwind2Path = NSBezierPath()
        cloudwind2Path.move(to: NSPoint(x: 25.5, y: 22.82))
        cloudwind2Path.curve(to: NSPoint(x: 28.5, y: 18.39), controlPoint1: NSPoint(x: 27.27, y: 22.08), controlPoint2: NSPoint(x: 28.5, y: 20.37))
        cloudwind2Path.curve(to: NSPoint(x: 23.5, y: 13.55), controlPoint1: NSPoint(x: 28.5, y: 15.72), controlPoint2: NSPoint(x: 26.26, y: 13.55))
        cloudwind2Path.line(to: NSPoint(x: 6.5, y: 13.55))
        cloudwind2Path.curve(to: NSPoint(x: 1.5, y: 18.39), controlPoint1: NSPoint(x: 3.73, y: 13.55), controlPoint2: NSPoint(x: 1.5, y: 15.71))
        cloudwind2Path.curve(to: NSPoint(x: 4.51, y: 22.83), controlPoint1: NSPoint(x: 1.5, y: 20.37), controlPoint2: NSPoint(x: 2.74, y: 22.08))
        cloudwind2Path.line(to: NSPoint(x: 4.51, y: 22.83))
        cloudwind2Path.curve(to: NSPoint(x: 4.5, y: 23.23), controlPoint1: NSPoint(x: 4.5, y: 22.96), controlPoint2: NSPoint(x: 4.5, y: 23.09))
        cloudwind2Path.curve(to: NSPoint(x: 11.5, y: 30), controlPoint1: NSPoint(x: 4.5, y: 26.97), controlPoint2: NSPoint(x: 7.63, y: 30))
        cloudwind2Path.curve(to: NSPoint(x: 17.11, y: 27.27), controlPoint1: NSPoint(x: 13.8, y: 30), controlPoint2: NSPoint(x: 15.84, y: 28.93))
        cloudwind2Path.curve(to: NSPoint(x: 20, y: 28.06), controlPoint1: NSPoint(x: 17.95, y: 27.78), controlPoint2: NSPoint(x: 18.94, y: 28.06))
        cloudwind2Path.curve(to: NSPoint(x: 25.5, y: 22.82), controlPoint1: NSPoint(x: 23.01, y: 28.06), controlPoint2: NSPoint(x: 25.45, y: 25.73))
        cloudwind2Path.line(to: NSPoint(x: 25.5, y: 22.82))
        cloudwind2Path.line(to: NSPoint(x: 25.5, y: 22.82))
        cloudwind2Path.close()
        cloudwind2Path.move(to: NSPoint(x: 28.5, y: 8.71))
        cloudwind2Path.curve(to: NSPoint(x: 24.5, y: 12.58), controlPoint1: NSPoint(x: 28.5, y: 10.85), controlPoint2: NSPoint(x: 26.7, y: 12.58))
        cloudwind2Path.curve(to: NSPoint(x: 20.5, y: 8.71), controlPoint1: NSPoint(x: 22.29, y: 12.58), controlPoint2: NSPoint(x: 20.5, y: 10.85))
        cloudwind2Path.line(to: NSPoint(x: 21.5, y: 8.71))
        cloudwind2Path.curve(to: NSPoint(x: 24.5, y: 11.61), controlPoint1: NSPoint(x: 21.5, y: 10.31), controlPoint2: NSPoint(x: 22.85, y: 11.61))
        cloudwind2Path.curve(to: NSPoint(x: 27.5, y: 8.71), controlPoint1: NSPoint(x: 26.16, y: 11.61), controlPoint2: NSPoint(x: 27.5, y: 10.31))
        cloudwind2Path.curve(to: NSPoint(x: 24.49, y: 5.81), controlPoint1: NSPoint(x: 27.5, y: 7.11), controlPoint2: NSPoint(x: 26.16, y: 5.81))
        cloudwind2Path.line(to: NSPoint(x: 1.5, y: 5.81))
        cloudwind2Path.line(to: NSPoint(x: 1.5, y: 4.84))
        cloudwind2Path.line(to: NSPoint(x: 24.5, y: 4.84))
        cloudwind2Path.curve(to: NSPoint(x: 28.5, y: 8.71), controlPoint1: NSPoint(x: 26.71, y: 4.84), controlPoint2: NSPoint(x: 28.5, y: 6.58))
        cloudwind2Path.line(to: NSPoint(x: 28.5, y: 8.71))
        cloudwind2Path.close()
        cloudwind2Path.move(to: NSPoint(x: 19.5, y: 9.68))
        cloudwind2Path.curve(to: NSPoint(x: 16.5, y: 12.58), controlPoint1: NSPoint(x: 19.5, y: 11.28), controlPoint2: NSPoint(x: 18.15, y: 12.58))
        cloudwind2Path.curve(to: NSPoint(x: 13.5, y: 9.69), controlPoint1: NSPoint(x: 14.84, y: 12.58), controlPoint2: NSPoint(x: 13.5, y: 11.28))
        cloudwind2Path.line(to: NSPoint(x: 13.5, y: 9.68))
        cloudwind2Path.line(to: NSPoint(x: 14.5, y: 9.68))
        cloudwind2Path.curve(to: NSPoint(x: 16.5, y: 11.61), controlPoint1: NSPoint(x: 14.5, y: 10.75), controlPoint2: NSPoint(x: 15.39, y: 11.61))
        cloudwind2Path.curve(to: NSPoint(x: 18.5, y: 9.68), controlPoint1: NSPoint(x: 17.6, y: 11.61), controlPoint2: NSPoint(x: 18.5, y: 10.75))
        cloudwind2Path.curve(to: NSPoint(x: 16.49, y: 7.74), controlPoint1: NSPoint(x: 18.5, y: 8.61), controlPoint2: NSPoint(x: 17.6, y: 7.74))
        cloudwind2Path.line(to: NSPoint(x: 4.5, y: 7.74))
        cloudwind2Path.line(to: NSPoint(x: 4.5, y: 6.77))
        cloudwind2Path.line(to: NSPoint(x: 16.5, y: 6.77))
        cloudwind2Path.curve(to: NSPoint(x: 19.5, y: 9.68), controlPoint1: NSPoint(x: 18.16, y: 6.77), controlPoint2: NSPoint(x: 19.5, y: 8.08))
        cloudwind2Path.line(to: NSPoint(x: 19.5, y: 9.68))
        cloudwind2Path.close()
        cloudwind2Path.move(to: NSPoint(x: 23.5, y: 1.94))
        cloudwind2Path.curve(to: NSPoint(x: 21.5, y: 0), controlPoint1: NSPoint(x: 23.5, y: 0.87), controlPoint2: NSPoint(x: 22.61, y: 0))
        cloudwind2Path.line(to: NSPoint(x: 21.5, y: 0))
        cloudwind2Path.curve(to: NSPoint(x: 19.5, y: 1.93), controlPoint1: NSPoint(x: 20.4, y: 0), controlPoint2: NSPoint(x: 19.5, y: 0.87))
        cloudwind2Path.line(to: NSPoint(x: 19.5, y: 1.94))
        cloudwind2Path.line(to: NSPoint(x: 20.5, y: 1.94))
        cloudwind2Path.curve(to: NSPoint(x: 21.5, y: 0.97), controlPoint1: NSPoint(x: 20.5, y: 1.4), controlPoint2: NSPoint(x: 20.94, y: 0.97))
        cloudwind2Path.line(to: NSPoint(x: 21.5, y: 0.97))
        cloudwind2Path.curve(to: NSPoint(x: 22.5, y: 1.94), controlPoint1: NSPoint(x: 22.05, y: 0.97), controlPoint2: NSPoint(x: 22.5, y: 1.4))
        cloudwind2Path.line(to: NSPoint(x: 22.5, y: 1.94))
        cloudwind2Path.curve(to: NSPoint(x: 21.49, y: 2.9), controlPoint1: NSPoint(x: 22.5, y: 2.47), controlPoint2: NSPoint(x: 22.05, y: 2.9))
        cloudwind2Path.line(to: NSPoint(x: 7.5, y: 2.9))
        cloudwind2Path.line(to: NSPoint(x: 7.5, y: 3.87))
        cloudwind2Path.line(to: NSPoint(x: 21.51, y: 3.87))
        cloudwind2Path.curve(to: NSPoint(x: 23.5, y: 1.94), controlPoint1: NSPoint(x: 22.61, y: 3.87), controlPoint2: NSPoint(x: 23.5, y: 3.01))
        cloudwind2Path.line(to: NSPoint(x: 23.5, y: 1.94))
        cloudwind2Path.line(to: NSPoint(x: 23.5, y: 1.94))
        cloudwind2Path.close()
        cloudwind2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudwind2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudRaindrops(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 2.5, y: 3.5)



        //// icon-14-cloud-raindrops



        NSGraphicsContext.restoreGraphicsState()


        //// Page-
        //// icon-14-cloud-raindrops 2
        //// cloud-raindrops 2 Drawing
        let cloudraindrops2Path = NSBezierPath()
        cloudraindrops2Path.move(to: NSPoint(x: 25.5, y: 20.09))
        cloudraindrops2Path.curve(to: NSPoint(x: 28.5, y: 15.5), controlPoint1: NSPoint(x: 27.27, y: 19.31), controlPoint2: NSPoint(x: 28.5, y: 17.55))
        cloudraindrops2Path.curve(to: NSPoint(x: 23.5, y: 10.5), controlPoint1: NSPoint(x: 28.5, y: 12.74), controlPoint2: NSPoint(x: 26.26, y: 10.5))
        cloudraindrops2Path.line(to: NSPoint(x: 6.5, y: 10.5))
        cloudraindrops2Path.curve(to: NSPoint(x: 1.5, y: 15.5), controlPoint1: NSPoint(x: 3.73, y: 10.5), controlPoint2: NSPoint(x: 1.5, y: 12.74))
        cloudraindrops2Path.curve(to: NSPoint(x: 4.51, y: 20.09), controlPoint1: NSPoint(x: 1.5, y: 17.55), controlPoint2: NSPoint(x: 2.74, y: 19.32))
        cloudraindrops2Path.line(to: NSPoint(x: 4.51, y: 20.09))
        cloudraindrops2Path.curve(to: NSPoint(x: 4.5, y: 20.5), controlPoint1: NSPoint(x: 4.5, y: 20.22), controlPoint2: NSPoint(x: 4.5, y: 20.36))
        cloudraindrops2Path.curve(to: NSPoint(x: 11.5, y: 27.5), controlPoint1: NSPoint(x: 4.5, y: 24.37), controlPoint2: NSPoint(x: 7.63, y: 27.5))
        cloudraindrops2Path.curve(to: NSPoint(x: 17.11, y: 24.68), controlPoint1: NSPoint(x: 13.8, y: 27.5), controlPoint2: NSPoint(x: 15.84, y: 26.39))
        cloudraindrops2Path.curve(to: NSPoint(x: 20, y: 25.5), controlPoint1: NSPoint(x: 17.95, y: 25.2), controlPoint2: NSPoint(x: 18.94, y: 25.5))
        cloudraindrops2Path.curve(to: NSPoint(x: 25.5, y: 20.09), controlPoint1: NSPoint(x: 23.01, y: 25.5), controlPoint2: NSPoint(x: 25.45, y: 23.08))
        cloudraindrops2Path.line(to: NSPoint(x: 25.5, y: 20.09))
        cloudraindrops2Path.close()
        cloudraindrops2Path.move(to: NSPoint(x: 5.5, y: 5.64))
        cloudraindrops2Path.curve(to: NSPoint(x: 8.01, y: 9.5), controlPoint1: NSPoint(x: 5.5, y: 7.09), controlPoint2: NSPoint(x: 8.01, y: 9.5))
        cloudraindrops2Path.curve(to: NSPoint(x: 10.5, y: 5.64), controlPoint1: NSPoint(x: 8.01, y: 9.5), controlPoint2: NSPoint(x: 10.5, y: 7.09))
        cloudraindrops2Path.curve(to: NSPoint(x: 8.01, y: 3.5), controlPoint1: NSPoint(x: 10.5, y: 4.61), controlPoint2: NSPoint(x: 9.69, y: 3.5))
        cloudraindrops2Path.curve(to: NSPoint(x: 5.5, y: 5.64), controlPoint1: NSPoint(x: 6.33, y: 3.5), controlPoint2: NSPoint(x: 5.5, y: 4.53))
        cloudraindrops2Path.line(to: NSPoint(x: 5.5, y: 5.64))
        cloudraindrops2Path.close()
        cloudraindrops2Path.move(to: NSPoint(x: 12.5, y: 4.64))
        cloudraindrops2Path.curve(to: NSPoint(x: 15.01, y: 8.5), controlPoint1: NSPoint(x: 12.5, y: 6.09), controlPoint2: NSPoint(x: 15.01, y: 8.5))
        cloudraindrops2Path.curve(to: NSPoint(x: 17.5, y: 4.64), controlPoint1: NSPoint(x: 15.01, y: 8.5), controlPoint2: NSPoint(x: 17.5, y: 6.09))
        cloudraindrops2Path.curve(to: NSPoint(x: 15.01, y: 2.5), controlPoint1: NSPoint(x: 17.5, y: 3.61), controlPoint2: NSPoint(x: 16.69, y: 2.5))
        cloudraindrops2Path.curve(to: NSPoint(x: 12.5, y: 4.64), controlPoint1: NSPoint(x: 13.33, y: 2.5), controlPoint2: NSPoint(x: 12.5, y: 3.53))
        cloudraindrops2Path.line(to: NSPoint(x: 12.5, y: 4.64))
        cloudraindrops2Path.close()
        cloudraindrops2Path.move(to: NSPoint(x: 19.5, y: 5.64))
        cloudraindrops2Path.curve(to: NSPoint(x: 22.01, y: 9.5), controlPoint1: NSPoint(x: 19.5, y: 7.09), controlPoint2: NSPoint(x: 22.01, y: 9.5))
        cloudraindrops2Path.curve(to: NSPoint(x: 24.5, y: 5.64), controlPoint1: NSPoint(x: 22.01, y: 9.5), controlPoint2: NSPoint(x: 24.5, y: 7.09))
        cloudraindrops2Path.curve(to: NSPoint(x: 22.01, y: 3.5), controlPoint1: NSPoint(x: 24.5, y: 4.61), controlPoint2: NSPoint(x: 23.69, y: 3.5))
        cloudraindrops2Path.curve(to: NSPoint(x: 19.5, y: 5.64), controlPoint1: NSPoint(x: 20.33, y: 3.5), controlPoint2: NSPoint(x: 19.5, y: 4.53))
        cloudraindrops2Path.line(to: NSPoint(x: 19.5, y: 5.64))
        cloudraindrops2Path.close()
        cloudraindrops2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudraindrops2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudSunRaindrops(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-15-cloud-sun-raindrops
        //// cloud-sun-raindrops 2 Drawing
        let cloudsunraindrops2Path = NSBezierPath()
        cloudsunraindrops2Path.move(to: NSPoint(x: 23.14, y: 20.42))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 23.19, y: 21.09), controlPoint1: NSPoint(x: 23.17, y: 20.64), controlPoint2: NSPoint(x: 23.19, y: 20.87))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 17.89, y: 26.25), controlPoint1: NSPoint(x: 23.19, y: 23.94), controlPoint2: NSPoint(x: 20.81, y: 26.25))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 13.09, y: 23.28), controlPoint1: NSPoint(x: 15.77, y: 26.25), controlPoint2: NSPoint(x: 13.94, y: 25.04))
        cloudsunraindrops2Path.line(to: NSPoint(x: 13.09, y: 23.28))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 11.63, y: 23.44), controlPoint1: NSPoint(x: 12.62, y: 23.38), controlPoint2: NSPoint(x: 12.13, y: 23.44))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 4.89, y: 16.88), controlPoint1: NSPoint(x: 7.91, y: 23.44), controlPoint2: NSPoint(x: 4.89, y: 20.5))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 4.9, y: 16.49), controlPoint1: NSPoint(x: 4.89, y: 16.75), controlPoint2: NSPoint(x: 4.89, y: 16.62))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 2, y: 12.19), controlPoint1: NSPoint(x: 3.19, y: 15.77), controlPoint2: NSPoint(x: 2, y: 14.11))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 6.81, y: 7.5), controlPoint1: NSPoint(x: 2, y: 9.6), controlPoint2: NSPoint(x: 4.15, y: 7.5))
        cloudsunraindrops2Path.line(to: NSPoint(x: 23.19, y: 7.5))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 28, y: 12.19), controlPoint1: NSPoint(x: 25.84, y: 7.5), controlPoint2: NSPoint(x: 28, y: 9.6))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 25.11, y: 16.49), controlPoint1: NSPoint(x: 28, y: 14.11), controlPoint2: NSPoint(x: 26.81, y: 15.76))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 23.14, y: 20.42), controlPoint1: NSPoint(x: 25.09, y: 18.08), controlPoint2: NSPoint(x: 24.32, y: 19.49))
        cloudsunraindrops2Path.line(to: NSPoint(x: 23.14, y: 20.42))
        cloudsunraindrops2Path.close()
        cloudsunraindrops2Path.move(to: NSPoint(x: 22.22, y: 21))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 22.22, y: 21.09), controlPoint1: NSPoint(x: 22.22, y: 21.03), controlPoint2: NSPoint(x: 22.22, y: 21.06))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 17.89, y: 25.31), controlPoint1: NSPoint(x: 22.22, y: 23.42), controlPoint2: NSPoint(x: 20.28, y: 25.31))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 14.03, y: 23.01), controlPoint1: NSPoint(x: 16.2, y: 25.31), controlPoint2: NSPoint(x: 14.74, y: 24.38))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 17.04, y: 20.8), controlPoint1: NSPoint(x: 15.23, y: 22.56), controlPoint2: NSPoint(x: 16.28, y: 21.79))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 19.81, y: 21.56), controlPoint1: NSPoint(x: 17.84, y: 21.28), controlPoint2: NSPoint(x: 18.8, y: 21.56))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 22.22, y: 21), controlPoint1: NSPoint(x: 20.68, y: 21.56), controlPoint2: NSPoint(x: 21.5, y: 21.36))
        cloudsunraindrops2Path.line(to: NSPoint(x: 22.22, y: 21))
        cloudsunraindrops2Path.close()
        cloudsunraindrops2Path.move(to: NSPoint(x: 5.85, y: 2.95))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 8.27, y: 6.56), controlPoint1: NSPoint(x: 5.85, y: 4.3), controlPoint2: NSPoint(x: 8.27, y: 6.56))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 10.67, y: 2.95), controlPoint1: NSPoint(x: 8.27, y: 6.56), controlPoint2: NSPoint(x: 10.67, y: 4.3))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 8.27, y: 0.94), controlPoint1: NSPoint(x: 10.67, y: 1.98), controlPoint2: NSPoint(x: 9.88, y: 0.94))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 5.85, y: 2.95), controlPoint1: NSPoint(x: 6.65, y: 0.94), controlPoint2: NSPoint(x: 5.85, y: 1.9))
        cloudsunraindrops2Path.line(to: NSPoint(x: 5.85, y: 2.95))
        cloudsunraindrops2Path.close()
        cloudsunraindrops2Path.move(to: NSPoint(x: 12.59, y: 2.01))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 15.01, y: 5.62), controlPoint1: NSPoint(x: 12.59, y: 3.36), controlPoint2: NSPoint(x: 15.01, y: 5.62))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 17.41, y: 2.01), controlPoint1: NSPoint(x: 15.01, y: 5.62), controlPoint2: NSPoint(x: 17.41, y: 3.36))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 15.01, y: 0), controlPoint1: NSPoint(x: 17.41, y: 1.04), controlPoint2: NSPoint(x: 16.62, y: 0))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 12.59, y: 2.01), controlPoint1: NSPoint(x: 13.4, y: -0), controlPoint2: NSPoint(x: 12.59, y: 0.96))
        cloudsunraindrops2Path.line(to: NSPoint(x: 12.59, y: 2.01))
        cloudsunraindrops2Path.close()
        cloudsunraindrops2Path.move(to: NSPoint(x: 19.33, y: 2.95))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 21.75, y: 6.56), controlPoint1: NSPoint(x: 19.33, y: 4.3), controlPoint2: NSPoint(x: 21.75, y: 6.56))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 24.15, y: 2.95), controlPoint1: NSPoint(x: 21.75, y: 6.56), controlPoint2: NSPoint(x: 24.15, y: 4.3))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 21.75, y: 0.94), controlPoint1: NSPoint(x: 24.15, y: 1.98), controlPoint2: NSPoint(x: 23.37, y: 0.94))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 19.33, y: 2.95), controlPoint1: NSPoint(x: 20.14, y: 0.94), controlPoint2: NSPoint(x: 19.33, y: 1.9))
        cloudsunraindrops2Path.line(to: NSPoint(x: 19.33, y: 2.95))
        cloudsunraindrops2Path.close()
        cloudsunraindrops2Path.move(to: NSPoint(x: 17.89, y: 30))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 17.41, y: 29.54), controlPoint1: NSPoint(x: 17.62, y: 30), controlPoint2: NSPoint(x: 17.41, y: 29.8))
        cloudsunraindrops2Path.line(to: NSPoint(x: 17.41, y: 27.65))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 17.89, y: 27.19), controlPoint1: NSPoint(x: 17.41, y: 27.4), controlPoint2: NSPoint(x: 17.63, y: 27.19))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 18.37, y: 27.65), controlPoint1: NSPoint(x: 18.15, y: 27.19), controlPoint2: NSPoint(x: 18.37, y: 27.39))
        cloudsunraindrops2Path.line(to: NSPoint(x: 18.37, y: 29.54))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 17.89, y: 30), controlPoint1: NSPoint(x: 18.37, y: 29.79), controlPoint2: NSPoint(x: 18.15, y: 30))
        cloudsunraindrops2Path.line(to: NSPoint(x: 17.89, y: 30))
        cloudsunraindrops2Path.close()
        cloudsunraindrops2Path.move(to: NSPoint(x: 24.37, y: 27.39))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 23.69, y: 27.39), controlPoint1: NSPoint(x: 24.18, y: 27.57), controlPoint2: NSPoint(x: 23.89, y: 27.57))
        cloudsunraindrops2Path.line(to: NSPoint(x: 22.33, y: 26.06))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 22.33, y: 25.4), controlPoint1: NSPoint(x: 22.14, y: 25.88), controlPoint2: NSPoint(x: 22.15, y: 25.57))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 23.01, y: 25.39), controlPoint1: NSPoint(x: 22.52, y: 25.21), controlPoint2: NSPoint(x: 22.82, y: 25.21))
        cloudsunraindrops2Path.line(to: NSPoint(x: 24.38, y: 26.73))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 24.37, y: 27.39), controlPoint1: NSPoint(x: 24.56, y: 26.91), controlPoint2: NSPoint(x: 24.56, y: 27.21))
        cloudsunraindrops2Path.line(to: NSPoint(x: 24.37, y: 27.39))
        cloudsunraindrops2Path.close()
        cloudsunraindrops2Path.move(to: NSPoint(x: 27.06, y: 21.07))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 26.58, y: 21.54), controlPoint1: NSPoint(x: 27.06, y: 21.33), controlPoint2: NSPoint(x: 26.85, y: 21.54))
        cloudsunraindrops2Path.line(to: NSPoint(x: 24.65, y: 21.54))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 24.17, y: 21.07), controlPoint1: NSPoint(x: 24.38, y: 21.54), controlPoint2: NSPoint(x: 24.17, y: 21.32))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 24.65, y: 20.6), controlPoint1: NSPoint(x: 24.17, y: 20.81), controlPoint2: NSPoint(x: 24.38, y: 20.6))
        cloudsunraindrops2Path.line(to: NSPoint(x: 26.58, y: 20.6))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 27.06, y: 21.07), controlPoint1: NSPoint(x: 26.84, y: 20.6), controlPoint2: NSPoint(x: 27.06, y: 20.82))
        cloudsunraindrops2Path.line(to: NSPoint(x: 27.06, y: 21.07))
        cloudsunraindrops2Path.close()
        cloudsunraindrops2Path.move(to: NSPoint(x: 11.41, y: 27.39))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 11.4, y: 26.73), controlPoint1: NSPoint(x: 11.22, y: 27.2), controlPoint2: NSPoint(x: 11.21, y: 26.91))
        cloudsunraindrops2Path.line(to: NSPoint(x: 12.77, y: 25.39))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 13.45, y: 25.4), controlPoint1: NSPoint(x: 12.96, y: 25.21), controlPoint2: NSPoint(x: 13.27, y: 25.22))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 13.45, y: 26.06), controlPoint1: NSPoint(x: 13.64, y: 25.58), controlPoint2: NSPoint(x: 13.64, y: 25.87))
        cloudsunraindrops2Path.line(to: NSPoint(x: 12.08, y: 27.39))
        cloudsunraindrops2Path.curve(to: NSPoint(x: 11.41, y: 27.39), controlPoint1: NSPoint(x: 11.9, y: 27.57), controlPoint2: NSPoint(x: 11.59, y: 27.56))
        cloudsunraindrops2Path.line(to: NSPoint(x: 11.41, y: 27.39))
        cloudsunraindrops2Path.close()
        cloudsunraindrops2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsunraindrops2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudMoonRaindrops(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 2.5, y: 1)



        //// icon-16-cloud-moon-raindrops



        NSGraphicsContext.restoreGraphicsState()


        //// Page-
        //// icon-16-cloud-moon-raindrops 2
        //// cloud-moon-raindrops 2 Drawing
        let cloudmoonraindrops2Path = NSBezierPath()
        cloudmoonraindrops2Path.move(to: NSPoint(x: 23.77, y: 20.81))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 25.34, y: 23.38), controlPoint1: NSPoint(x: 24.53, y: 21.49), controlPoint2: NSPoint(x: 25.08, y: 22.38))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 25.49, y: 24.44), controlPoint1: NSPoint(x: 25.42, y: 23.72), controlPoint2: NSPoint(x: 25.48, y: 24.08))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 24, y: 24.19), controlPoint1: NSPoint(x: 25.03, y: 24.28), controlPoint2: NSPoint(x: 24.52, y: 24.19))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 19.5, y: 28.55), controlPoint1: NSPoint(x: 21.51, y: 24.19), controlPoint2: NSPoint(x: 19.5, y: 26.14))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 19.75, y: 29.99), controlPoint1: NSPoint(x: 19.5, y: 29.06), controlPoint2: NSPoint(x: 19.59, y: 29.54))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 18.66, y: 29.84), controlPoint1: NSPoint(x: 19.38, y: 29.98), controlPoint2: NSPoint(x: 19.01, y: 29.93))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 14.5, y: 24.68), controlPoint1: NSPoint(x: 16.27, y: 29.26), controlPoint2: NSPoint(x: 14.5, y: 27.17))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 14.64, y: 23.47), controlPoint1: NSPoint(x: 14.5, y: 24.26), controlPoint2: NSPoint(x: 14.55, y: 23.86))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 11.5, y: 24.19), controlPoint1: NSPoint(x: 13.7, y: 23.93), controlPoint2: NSPoint(x: 12.63, y: 24.19))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 4.5, y: 17.42), controlPoint1: NSPoint(x: 7.63, y: 24.19), controlPoint2: NSPoint(x: 4.5, y: 21.16))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 4.51, y: 17.02), controlPoint1: NSPoint(x: 4.5, y: 17.29), controlPoint2: NSPoint(x: 4.5, y: 17.15))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 1.5, y: 12.58), controlPoint1: NSPoint(x: 2.74, y: 16.28), controlPoint2: NSPoint(x: 1.5, y: 14.57))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 6.5, y: 7.74), controlPoint1: NSPoint(x: 1.5, y: 9.91), controlPoint2: NSPoint(x: 3.73, y: 7.74))
        cloudmoonraindrops2Path.line(to: NSPoint(x: 23.5, y: 7.74))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 28.5, y: 12.58), controlPoint1: NSPoint(x: 26.26, y: 7.74), controlPoint2: NSPoint(x: 28.5, y: 9.91))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 25.5, y: 17.02), controlPoint1: NSPoint(x: 28.5, y: 14.57), controlPoint2: NSPoint(x: 27.27, y: 16.27))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 23.77, y: 20.81), controlPoint1: NSPoint(x: 25.48, y: 18.51), controlPoint2: NSPoint(x: 24.82, y: 19.85))
        cloudmoonraindrops2Path.line(to: NSPoint(x: 23.77, y: 20.81))
        cloudmoonraindrops2Path.close()
        cloudmoonraindrops2Path.move(to: NSPoint(x: 22.98, y: 21.41))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 24.25, y: 23.23), controlPoint1: NSPoint(x: 23.55, y: 21.9), controlPoint2: NSPoint(x: 23.99, y: 22.52))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 24, y: 23.23), controlPoint1: NSPoint(x: 24.16, y: 23.23), controlPoint2: NSPoint(x: 24.08, y: 23.23))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 18.5, y: 28.55), controlPoint1: NSPoint(x: 20.96, y: 23.23), controlPoint2: NSPoint(x: 18.5, y: 25.61))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 18.51, y: 28.79), controlPoint1: NSPoint(x: 18.5, y: 28.63), controlPoint2: NSPoint(x: 18.5, y: 28.71))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 15.5, y: 24.68), controlPoint1: NSPoint(x: 16.75, y: 28.19), controlPoint2: NSPoint(x: 15.5, y: 26.58))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 16.07, y: 22.55), controlPoint1: NSPoint(x: 15.5, y: 23.9), controlPoint2: NSPoint(x: 15.71, y: 23.18))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 17.11, y: 21.47), controlPoint1: NSPoint(x: 16.46, y: 22.22), controlPoint2: NSPoint(x: 16.81, y: 21.86))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 20, y: 22.26), controlPoint1: NSPoint(x: 17.95, y: 21.97), controlPoint2: NSPoint(x: 18.94, y: 22.26))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 22.98, y: 21.41), controlPoint1: NSPoint(x: 21.1, y: 22.26), controlPoint2: NSPoint(x: 22.12, y: 21.95))
        cloudmoonraindrops2Path.line(to: NSPoint(x: 22.98, y: 21.41))
        cloudmoonraindrops2Path.close()
        cloudmoonraindrops2Path.move(to: NSPoint(x: 5.5, y: 3.04))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 8.01, y: 6.77), controlPoint1: NSPoint(x: 5.5, y: 4.44), controlPoint2: NSPoint(x: 8.01, y: 6.77))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 10.5, y: 3.04), controlPoint1: NSPoint(x: 8.01, y: 6.77), controlPoint2: NSPoint(x: 10.5, y: 4.44))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 8.01, y: 0.97), controlPoint1: NSPoint(x: 10.5, y: 2.05), controlPoint2: NSPoint(x: 9.69, y: 0.97))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 5.5, y: 3.04), controlPoint1: NSPoint(x: 6.33, y: 0.97), controlPoint2: NSPoint(x: 5.5, y: 1.96))
        cloudmoonraindrops2Path.line(to: NSPoint(x: 5.5, y: 3.04))
        cloudmoonraindrops2Path.close()
        cloudmoonraindrops2Path.move(to: NSPoint(x: 12.5, y: 2.07))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 15.01, y: 5.81), controlPoint1: NSPoint(x: 12.5, y: 3.47), controlPoint2: NSPoint(x: 15.01, y: 5.81))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 17.5, y: 2.07), controlPoint1: NSPoint(x: 15.01, y: 5.81), controlPoint2: NSPoint(x: 17.5, y: 3.47))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 15.01, y: 0), controlPoint1: NSPoint(x: 17.5, y: 1.08), controlPoint2: NSPoint(x: 16.69, y: 0))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 12.5, y: 2.07), controlPoint1: NSPoint(x: 13.33, y: -0), controlPoint2: NSPoint(x: 12.5, y: 1))
        cloudmoonraindrops2Path.line(to: NSPoint(x: 12.5, y: 2.07))
        cloudmoonraindrops2Path.close()
        cloudmoonraindrops2Path.move(to: NSPoint(x: 19.5, y: 3.04))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 22.01, y: 6.77), controlPoint1: NSPoint(x: 19.5, y: 4.44), controlPoint2: NSPoint(x: 22.01, y: 6.77))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 24.5, y: 3.04), controlPoint1: NSPoint(x: 22.01, y: 6.77), controlPoint2: NSPoint(x: 24.5, y: 4.44))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 22.01, y: 0.97), controlPoint1: NSPoint(x: 24.5, y: 2.05), controlPoint2: NSPoint(x: 23.69, y: 0.97))
        cloudmoonraindrops2Path.curve(to: NSPoint(x: 19.5, y: 3.04), controlPoint1: NSPoint(x: 20.33, y: 0.97), controlPoint2: NSPoint(x: 19.5, y: 1.96))
        cloudmoonraindrops2Path.line(to: NSPoint(x: 19.5, y: 3.04))
        cloudmoonraindrops2Path.close()
        cloudmoonraindrops2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudmoonraindrops2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudSnowflakes(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-17-cloud-snowflakes
        //// cloud-snowflakes 2 Drawing
        let cloudsnowflakes2Path = NSBezierPath()
        cloudsnowflakes2Path.move(to: NSPoint(x: 25.5, y: 19.59))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 28.5, y: 15), controlPoint1: NSPoint(x: 27.27, y: 18.81), controlPoint2: NSPoint(x: 28.5, y: 17.05))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 23.5, y: 10), controlPoint1: NSPoint(x: 28.5, y: 12.24), controlPoint2: NSPoint(x: 26.26, y: 10))
        cloudsnowflakes2Path.line(to: NSPoint(x: 6.5, y: 10))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 1.5, y: 15), controlPoint1: NSPoint(x: 3.73, y: 10), controlPoint2: NSPoint(x: 1.5, y: 12.24))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 4.51, y: 19.59), controlPoint1: NSPoint(x: 1.5, y: 17.05), controlPoint2: NSPoint(x: 2.74, y: 18.82))
        cloudsnowflakes2Path.line(to: NSPoint(x: 4.51, y: 19.59))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 4.5, y: 20), controlPoint1: NSPoint(x: 4.5, y: 19.72), controlPoint2: NSPoint(x: 4.5, y: 19.86))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 11.5, y: 27), controlPoint1: NSPoint(x: 4.5, y: 23.87), controlPoint2: NSPoint(x: 7.63, y: 27))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 17.11, y: 24.18), controlPoint1: NSPoint(x: 13.8, y: 27), controlPoint2: NSPoint(x: 15.84, y: 25.89))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 20, y: 25), controlPoint1: NSPoint(x: 17.95, y: 24.7), controlPoint2: NSPoint(x: 18.94, y: 25))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 25.5, y: 19.59), controlPoint1: NSPoint(x: 23.01, y: 25), controlPoint2: NSPoint(x: 25.45, y: 22.58))
        cloudsnowflakes2Path.line(to: NSPoint(x: 25.5, y: 19.59))
        cloudsnowflakes2Path.close()
        cloudsnowflakes2Path.move(to: NSPoint(x: 9.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 8.5))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 9, y: 9), controlPoint1: NSPoint(x: 9.5, y: 8.78), controlPoint2: NSPoint(x: 9.27, y: 9))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 8.5, y: 8.5), controlPoint1: NSPoint(x: 8.72, y: 9), controlPoint2: NSPoint(x: 8.5, y: 8.79))
        cloudsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 7.52, y: 7.93))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 6.83, y: 7.75), controlPoint1: NSPoint(x: 7.28, y: 8.07), controlPoint2: NSPoint(x: 6.97, y: 7.98))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 7.02, y: 7.07), controlPoint1: NSPoint(x: 6.7, y: 7.51), controlPoint2: NSPoint(x: 6.77, y: 7.21))
        cloudsnowflakes2Path.line(to: NSPoint(x: 8, y: 6.5))
        cloudsnowflakes2Path.line(to: NSPoint(x: 7.02, y: 5.93))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 6.83, y: 5.25), controlPoint1: NSPoint(x: 6.78, y: 5.79), controlPoint2: NSPoint(x: 6.7, y: 5.48))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 7.52, y: 5.07), controlPoint1: NSPoint(x: 6.97, y: 5.01), controlPoint2: NSPoint(x: 7.27, y: 4.92))
        cloudsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 5.63))
        cloudsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 4.5))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 9, y: 4), controlPoint1: NSPoint(x: 8.5, y: 4.22), controlPoint2: NSPoint(x: 8.73, y: 4))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 9.5, y: 4.5), controlPoint1: NSPoint(x: 9.28, y: 4), controlPoint2: NSPoint(x: 9.5, y: 4.21))
        cloudsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 5.63))
        cloudsnowflakes2Path.line(to: NSPoint(x: 10.48, y: 5.07))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 11.17, y: 5.25), controlPoint1: NSPoint(x: 10.72, y: 4.93), controlPoint2: NSPoint(x: 11.03, y: 5.02))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 10.98, y: 5.93), controlPoint1: NSPoint(x: 11.3, y: 5.49), controlPoint2: NSPoint(x: 11.23, y: 5.79))
        cloudsnowflakes2Path.line(to: NSPoint(x: 10, y: 6.5))
        cloudsnowflakes2Path.line(to: NSPoint(x: 10.98, y: 7.07))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 11.17, y: 7.75), controlPoint1: NSPoint(x: 11.22, y: 7.21), controlPoint2: NSPoint(x: 11.3, y: 7.52))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 10.48, y: 7.93), controlPoint1: NSPoint(x: 11.03, y: 7.99), controlPoint2: NSPoint(x: 10.73, y: 8.08))
        cloudsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 7.37))
        cloudsnowflakes2Path.close()
        cloudsnowflakes2Path.move(to: NSPoint(x: 21.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 8.5))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 21, y: 9), controlPoint1: NSPoint(x: 21.5, y: 8.78), controlPoint2: NSPoint(x: 21.27, y: 9))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 20.5, y: 8.5), controlPoint1: NSPoint(x: 20.72, y: 9), controlPoint2: NSPoint(x: 20.5, y: 8.79))
        cloudsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 19.52, y: 7.93))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 18.83, y: 7.75), controlPoint1: NSPoint(x: 19.28, y: 8.07), controlPoint2: NSPoint(x: 18.97, y: 7.98))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 19.02, y: 7.07), controlPoint1: NSPoint(x: 18.7, y: 7.51), controlPoint2: NSPoint(x: 18.77, y: 7.21))
        cloudsnowflakes2Path.line(to: NSPoint(x: 20, y: 6.5))
        cloudsnowflakes2Path.line(to: NSPoint(x: 19.02, y: 5.93))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 18.83, y: 5.25), controlPoint1: NSPoint(x: 18.78, y: 5.79), controlPoint2: NSPoint(x: 18.7, y: 5.48))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 19.52, y: 5.07), controlPoint1: NSPoint(x: 18.97, y: 5.01), controlPoint2: NSPoint(x: 19.27, y: 4.92))
        cloudsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 5.63))
        cloudsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 4.5))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 21, y: 4), controlPoint1: NSPoint(x: 20.5, y: 4.22), controlPoint2: NSPoint(x: 20.73, y: 4))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 21.5, y: 4.5), controlPoint1: NSPoint(x: 21.28, y: 4), controlPoint2: NSPoint(x: 21.5, y: 4.21))
        cloudsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 5.63))
        cloudsnowflakes2Path.line(to: NSPoint(x: 22.48, y: 5.07))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 23.17, y: 5.25), controlPoint1: NSPoint(x: 22.72, y: 4.93), controlPoint2: NSPoint(x: 23.03, y: 5.02))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 22.98, y: 5.93), controlPoint1: NSPoint(x: 23.3, y: 5.49), controlPoint2: NSPoint(x: 23.23, y: 5.79))
        cloudsnowflakes2Path.line(to: NSPoint(x: 22, y: 6.5))
        cloudsnowflakes2Path.line(to: NSPoint(x: 22.98, y: 7.07))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 23.17, y: 7.75), controlPoint1: NSPoint(x: 23.22, y: 7.21), controlPoint2: NSPoint(x: 23.3, y: 7.52))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 22.48, y: 7.93), controlPoint1: NSPoint(x: 23.03, y: 7.99), controlPoint2: NSPoint(x: 22.73, y: 8.08))
        cloudsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 7.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 7.37))
        cloudsnowflakes2Path.close()
        cloudsnowflakes2Path.move(to: NSPoint(x: 15.5, y: 6.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 7.5))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 15, y: 8), controlPoint1: NSPoint(x: 15.5, y: 7.78), controlPoint2: NSPoint(x: 15.27, y: 8))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 14.5, y: 7.5), controlPoint1: NSPoint(x: 14.72, y: 8), controlPoint2: NSPoint(x: 14.5, y: 7.79))
        cloudsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 6.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 6.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 13.52, y: 6.93))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 12.83, y: 6.75), controlPoint1: NSPoint(x: 13.28, y: 7.07), controlPoint2: NSPoint(x: 12.97, y: 6.98))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 13.02, y: 6.07), controlPoint1: NSPoint(x: 12.7, y: 6.51), controlPoint2: NSPoint(x: 12.77, y: 6.21))
        cloudsnowflakes2Path.line(to: NSPoint(x: 14, y: 5.5))
        cloudsnowflakes2Path.line(to: NSPoint(x: 13.02, y: 4.93))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 12.83, y: 4.25), controlPoint1: NSPoint(x: 12.78, y: 4.79), controlPoint2: NSPoint(x: 12.7, y: 4.48))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 13.52, y: 4.07), controlPoint1: NSPoint(x: 12.97, y: 4.01), controlPoint2: NSPoint(x: 13.27, y: 3.92))
        cloudsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 4.63))
        cloudsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 3.5))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 15, y: 3), controlPoint1: NSPoint(x: 14.5, y: 3.22), controlPoint2: NSPoint(x: 14.73, y: 3))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 15.5, y: 3.5), controlPoint1: NSPoint(x: 15.28, y: 3), controlPoint2: NSPoint(x: 15.5, y: 3.21))
        cloudsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 4.63))
        cloudsnowflakes2Path.line(to: NSPoint(x: 16.48, y: 4.07))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 17.17, y: 4.25), controlPoint1: NSPoint(x: 16.72, y: 3.93), controlPoint2: NSPoint(x: 17.03, y: 4.02))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 16.98, y: 4.93), controlPoint1: NSPoint(x: 17.3, y: 4.49), controlPoint2: NSPoint(x: 17.23, y: 4.79))
        cloudsnowflakes2Path.line(to: NSPoint(x: 16, y: 5.5))
        cloudsnowflakes2Path.line(to: NSPoint(x: 16.98, y: 6.07))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 17.17, y: 6.75), controlPoint1: NSPoint(x: 17.22, y: 6.21), controlPoint2: NSPoint(x: 17.3, y: 6.52))
        cloudsnowflakes2Path.curve(to: NSPoint(x: 16.48, y: 6.93), controlPoint1: NSPoint(x: 17.03, y: 6.99), controlPoint2: NSPoint(x: 16.73, y: 7.08))
        cloudsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 6.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 6.37))
        cloudsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 6.37))
        cloudsnowflakes2Path.close()
        cloudsnowflakes2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsnowflakes2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudSunSnowflakes(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-18-cloud-sun-snowflakes
        //// cloud-sun-snowflakes 2 Drawing
        let cloudsunsnowflakes2Path = NSBezierPath()
        cloudsunsnowflakes2Path.move(to: NSPoint(x: 23.45, y: 20.11))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 23.5, y: 20.81), controlPoint1: NSPoint(x: 23.48, y: 20.34), controlPoint2: NSPoint(x: 23.5, y: 20.57))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 18, y: 26.13), controlPoint1: NSPoint(x: 23.5, y: 23.75), controlPoint2: NSPoint(x: 21.04, y: 26.13))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 13.02, y: 23.07), controlPoint1: NSPoint(x: 15.8, y: 26.13), controlPoint2: NSPoint(x: 13.9, y: 24.88))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 13.02, y: 23.07))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 11.5, y: 23.23), controlPoint1: NSPoint(x: 12.53, y: 23.17), controlPoint2: NSPoint(x: 12.02, y: 23.23))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 4.5, y: 16.45), controlPoint1: NSPoint(x: 7.63, y: 23.23), controlPoint2: NSPoint(x: 4.5, y: 20.19))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 4.51, y: 16.05), controlPoint1: NSPoint(x: 4.5, y: 16.32), controlPoint2: NSPoint(x: 4.5, y: 16.19))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 1.5, y: 11.61), controlPoint1: NSPoint(x: 2.74, y: 15.31), controlPoint2: NSPoint(x: 1.5, y: 13.6))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 6.5, y: 6.77), controlPoint1: NSPoint(x: 1.5, y: 8.94), controlPoint2: NSPoint(x: 3.73, y: 6.77))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 23.5, y: 6.77))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 28.5, y: 11.61), controlPoint1: NSPoint(x: 26.26, y: 6.77), controlPoint2: NSPoint(x: 28.5, y: 8.95))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 25.5, y: 16.05), controlPoint1: NSPoint(x: 28.5, y: 13.6), controlPoint2: NSPoint(x: 27.27, y: 15.3))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 23.45, y: 20.11), controlPoint1: NSPoint(x: 25.47, y: 17.69), controlPoint2: NSPoint(x: 24.68, y: 19.15))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 23.45, y: 20.11))
        cloudsunsnowflakes2Path.close()
        cloudsunsnowflakes2Path.move(to: NSPoint(x: 22.5, y: 20.71))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 22.5, y: 20.81), controlPoint1: NSPoint(x: 22.5, y: 20.74), controlPoint2: NSPoint(x: 22.5, y: 20.77))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 18, y: 25.16), controlPoint1: NSPoint(x: 22.5, y: 23.21), controlPoint2: NSPoint(x: 20.49, y: 25.16))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 13.99, y: 22.78), controlPoint1: NSPoint(x: 16.25, y: 25.16), controlPoint2: NSPoint(x: 14.73, y: 24.2))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 17.11, y: 20.5), controlPoint1: NSPoint(x: 15.24, y: 22.32), controlPoint2: NSPoint(x: 16.32, y: 21.52))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 20, y: 21.29), controlPoint1: NSPoint(x: 17.95, y: 21), controlPoint2: NSPoint(x: 18.94, y: 21.29))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 22.5, y: 20.71), controlPoint1: NSPoint(x: 20.9, y: 21.29), controlPoint2: NSPoint(x: 21.75, y: 21.08))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 22.5, y: 20.71))
        cloudsunsnowflakes2Path.close()
        cloudsunsnowflakes2Path.move(to: NSPoint(x: 9.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 5.32))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 9, y: 5.81), controlPoint1: NSPoint(x: 9.5, y: 5.59), controlPoint2: NSPoint(x: 9.27, y: 5.81))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 8.5, y: 5.32), controlPoint1: NSPoint(x: 8.72, y: 5.81), controlPoint2: NSPoint(x: 8.5, y: 5.6))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 7.52, y: 4.77))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 6.83, y: 4.6), controlPoint1: NSPoint(x: 7.28, y: 4.91), controlPoint2: NSPoint(x: 6.97, y: 4.82))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 7.02, y: 3.94), controlPoint1: NSPoint(x: 6.7, y: 4.37), controlPoint2: NSPoint(x: 6.77, y: 4.07))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 8, y: 3.39))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 7.02, y: 2.84))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 6.83, y: 2.18), controlPoint1: NSPoint(x: 6.78, y: 2.7), controlPoint2: NSPoint(x: 6.7, y: 2.4))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 7.52, y: 2), controlPoint1: NSPoint(x: 6.97, y: 1.95), controlPoint2: NSPoint(x: 7.27, y: 1.86))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 2.55))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 1.45))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 9, y: 0.97), controlPoint1: NSPoint(x: 8.5, y: 1.18), controlPoint2: NSPoint(x: 8.73, y: 0.97))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 9.5, y: 1.45), controlPoint1: NSPoint(x: 9.28, y: 0.97), controlPoint2: NSPoint(x: 9.5, y: 1.18))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 2.55))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 10.48, y: 2))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 11.17, y: 2.18), controlPoint1: NSPoint(x: 10.72, y: 1.87), controlPoint2: NSPoint(x: 11.03, y: 1.95))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 10.98, y: 2.84), controlPoint1: NSPoint(x: 11.3, y: 2.41), controlPoint2: NSPoint(x: 11.23, y: 2.7))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 10, y: 3.39))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 10.98, y: 3.94))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 11.17, y: 4.6), controlPoint1: NSPoint(x: 11.22, y: 4.07), controlPoint2: NSPoint(x: 11.3, y: 4.37))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 10.48, y: 4.77), controlPoint1: NSPoint(x: 11.03, y: 4.83), controlPoint2: NSPoint(x: 10.73, y: 4.91))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 4.23))
        cloudsunsnowflakes2Path.close()
        cloudsunsnowflakes2Path.move(to: NSPoint(x: 21.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 5.32))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 21, y: 5.81), controlPoint1: NSPoint(x: 21.5, y: 5.59), controlPoint2: NSPoint(x: 21.27, y: 5.81))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 20.5, y: 5.32), controlPoint1: NSPoint(x: 20.72, y: 5.81), controlPoint2: NSPoint(x: 20.5, y: 5.6))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 19.52, y: 4.77))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 18.83, y: 4.6), controlPoint1: NSPoint(x: 19.28, y: 4.91), controlPoint2: NSPoint(x: 18.97, y: 4.82))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 19.02, y: 3.94), controlPoint1: NSPoint(x: 18.7, y: 4.37), controlPoint2: NSPoint(x: 18.77, y: 4.07))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 20, y: 3.39))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 19.02, y: 2.84))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 18.83, y: 2.18), controlPoint1: NSPoint(x: 18.78, y: 2.7), controlPoint2: NSPoint(x: 18.7, y: 2.4))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 19.52, y: 2), controlPoint1: NSPoint(x: 18.97, y: 1.95), controlPoint2: NSPoint(x: 19.27, y: 1.86))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 2.55))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 1.45))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 21, y: 0.97), controlPoint1: NSPoint(x: 20.5, y: 1.18), controlPoint2: NSPoint(x: 20.73, y: 0.97))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 21.5, y: 1.45), controlPoint1: NSPoint(x: 21.28, y: 0.97), controlPoint2: NSPoint(x: 21.5, y: 1.18))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 2.55))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 22.48, y: 2))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 23.17, y: 2.18), controlPoint1: NSPoint(x: 22.72, y: 1.87), controlPoint2: NSPoint(x: 23.03, y: 1.95))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 22.98, y: 2.84), controlPoint1: NSPoint(x: 23.3, y: 2.41), controlPoint2: NSPoint(x: 23.23, y: 2.7))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 22, y: 3.39))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 22.98, y: 3.94))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 23.17, y: 4.6), controlPoint1: NSPoint(x: 23.22, y: 4.07), controlPoint2: NSPoint(x: 23.3, y: 4.37))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 22.48, y: 4.77), controlPoint1: NSPoint(x: 23.03, y: 4.83), controlPoint2: NSPoint(x: 22.73, y: 4.91))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 4.23))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 4.23))
        cloudsunsnowflakes2Path.close()
        cloudsunsnowflakes2Path.move(to: NSPoint(x: 15.5, y: 3.26))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 4.36))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 15, y: 4.84), controlPoint1: NSPoint(x: 15.5, y: 4.62), controlPoint2: NSPoint(x: 15.27, y: 4.84))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 14.5, y: 4.36), controlPoint1: NSPoint(x: 14.72, y: 4.84), controlPoint2: NSPoint(x: 14.5, y: 4.63))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 3.26))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 3.26))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 13.52, y: 3.81))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 12.83, y: 3.63), controlPoint1: NSPoint(x: 13.28, y: 3.94), controlPoint2: NSPoint(x: 12.97, y: 3.85))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 13.02, y: 2.97), controlPoint1: NSPoint(x: 12.7, y: 3.4), controlPoint2: NSPoint(x: 12.77, y: 3.11))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 14, y: 2.42))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 13.02, y: 1.87))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 12.83, y: 1.21), controlPoint1: NSPoint(x: 12.78, y: 1.74), controlPoint2: NSPoint(x: 12.7, y: 1.43))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 13.52, y: 1.03), controlPoint1: NSPoint(x: 12.97, y: 0.98), controlPoint2: NSPoint(x: 13.27, y: 0.89))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 1.58))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 0.48))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 15, y: 0), controlPoint1: NSPoint(x: 14.5, y: 0.22), controlPoint2: NSPoint(x: 14.73, y: 0))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 15.5, y: 0.48), controlPoint1: NSPoint(x: 15.28, y: 0), controlPoint2: NSPoint(x: 15.5, y: 0.21))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 1.58))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 16.48, y: 1.03))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 17.17, y: 1.21), controlPoint1: NSPoint(x: 16.72, y: 0.9), controlPoint2: NSPoint(x: 17.03, y: 0.99))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 16.98, y: 1.87), controlPoint1: NSPoint(x: 17.3, y: 1.44), controlPoint2: NSPoint(x: 17.23, y: 1.73))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 16, y: 2.42))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 16.98, y: 2.97))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 17.17, y: 3.63), controlPoint1: NSPoint(x: 17.22, y: 3.1), controlPoint2: NSPoint(x: 17.3, y: 3.4))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 16.48, y: 3.81), controlPoint1: NSPoint(x: 17.03, y: 3.86), controlPoint2: NSPoint(x: 16.73, y: 3.94))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 3.26))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 3.26))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 3.26))
        cloudsunsnowflakes2Path.close()
        cloudsunsnowflakes2Path.move(to: NSPoint(x: 18, y: 30))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 17.5, y: 29.52), controlPoint1: NSPoint(x: 17.72, y: 30), controlPoint2: NSPoint(x: 17.5, y: 29.79))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 17.5, y: 27.58))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 18, y: 27.1), controlPoint1: NSPoint(x: 17.5, y: 27.31), controlPoint2: NSPoint(x: 17.73, y: 27.1))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 18.5, y: 27.58), controlPoint1: NSPoint(x: 18.28, y: 27.1), controlPoint2: NSPoint(x: 18.5, y: 27.31))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 18.5, y: 29.52))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 18, y: 30), controlPoint1: NSPoint(x: 18.5, y: 29.79), controlPoint2: NSPoint(x: 18.27, y: 30))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 18, y: 30))
        cloudsunsnowflakes2Path.close()
        cloudsunsnowflakes2Path.move(to: NSPoint(x: 24.73, y: 27.3))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 24.03, y: 27.3), controlPoint1: NSPoint(x: 24.54, y: 27.49), controlPoint2: NSPoint(x: 24.23, y: 27.5))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 22.61, y: 25.93))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 22.61, y: 25.25), controlPoint1: NSPoint(x: 22.42, y: 25.74), controlPoint2: NSPoint(x: 22.42, y: 25.43))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 23.32, y: 25.24), controlPoint1: NSPoint(x: 22.81, y: 25.06), controlPoint2: NSPoint(x: 23.12, y: 25.05))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 24.74, y: 26.62))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 24.73, y: 27.3), controlPoint1: NSPoint(x: 24.93, y: 26.81), controlPoint2: NSPoint(x: 24.92, y: 27.12))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 24.73, y: 27.3))
        cloudsunsnowflakes2Path.close()
        cloudsunsnowflakes2Path.move(to: NSPoint(x: 27.52, y: 20.79))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 27.03, y: 21.27), controlPoint1: NSPoint(x: 27.52, y: 21.05), controlPoint2: NSPoint(x: 27.31, y: 21.27))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 25.02, y: 21.27))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 24.52, y: 20.79), controlPoint1: NSPoint(x: 24.74, y: 21.27), controlPoint2: NSPoint(x: 24.52, y: 21.04))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 25.02, y: 20.3), controlPoint1: NSPoint(x: 24.52, y: 20.52), controlPoint2: NSPoint(x: 24.74, y: 20.3))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 27.03, y: 20.3))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 27.52, y: 20.79), controlPoint1: NSPoint(x: 27.3, y: 20.3), controlPoint2: NSPoint(x: 27.52, y: 20.53))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 27.52, y: 20.79))
        cloudsunsnowflakes2Path.close()
        cloudsunsnowflakes2Path.move(to: NSPoint(x: 11.27, y: 27.3))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 11.26, y: 26.62), controlPoint1: NSPoint(x: 11.07, y: 27.11), controlPoint2: NSPoint(x: 11.07, y: 26.81))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 12.68, y: 25.24))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 13.39, y: 25.25), controlPoint1: NSPoint(x: 12.88, y: 25.06), controlPoint2: NSPoint(x: 13.2, y: 25.06))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 13.39, y: 25.93), controlPoint1: NSPoint(x: 13.58, y: 25.44), controlPoint2: NSPoint(x: 13.59, y: 25.74))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 11.97, y: 27.3))
        cloudsunsnowflakes2Path.curve(to: NSPoint(x: 11.27, y: 27.3), controlPoint1: NSPoint(x: 11.78, y: 27.49), controlPoint2: NSPoint(x: 11.46, y: 27.48))
        cloudsunsnowflakes2Path.line(to: NSPoint(x: 11.27, y: 27.3))
        cloudsunsnowflakes2Path.close()
        cloudsunsnowflakes2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsunsnowflakes2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudMoonSnowflakes(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-19-cloud-moon-snowflakes
        //// cloud-moon-snowflakes 2 Drawing
        let cloudmoonsnowflakes2Path = NSBezierPath()
        cloudmoonsnowflakes2Path.move(to: NSPoint(x: 23.77, y: 20.51))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 25.34, y: 23.17), controlPoint1: NSPoint(x: 24.53, y: 21.21), controlPoint2: NSPoint(x: 25.08, y: 22.13))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 25.49, y: 24.26), controlPoint1: NSPoint(x: 25.42, y: 23.52), controlPoint2: NSPoint(x: 25.48, y: 23.89))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 24, y: 24.01), controlPoint1: NSPoint(x: 25.03, y: 24.09), controlPoint2: NSPoint(x: 24.52, y: 24.01))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 19.5, y: 28.51), controlPoint1: NSPoint(x: 21.51, y: 24.01), controlPoint2: NSPoint(x: 19.5, y: 26.02))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 19.75, y: 30), controlPoint1: NSPoint(x: 19.5, y: 29.03), controlPoint2: NSPoint(x: 19.59, y: 29.53))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 18.66, y: 29.84), controlPoint1: NSPoint(x: 19.38, y: 29.98), controlPoint2: NSPoint(x: 19.01, y: 29.93))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 14.5, y: 24.51), controlPoint1: NSPoint(x: 16.27, y: 29.24), controlPoint2: NSPoint(x: 14.5, y: 27.08))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 14.64, y: 23.26), controlPoint1: NSPoint(x: 14.5, y: 24.08), controlPoint2: NSPoint(x: 14.55, y: 23.66))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 11.5, y: 24.01), controlPoint1: NSPoint(x: 13.7, y: 23.74), controlPoint2: NSPoint(x: 12.63, y: 24.01))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 4.5, y: 17.01), controlPoint1: NSPoint(x: 7.63, y: 24.01), controlPoint2: NSPoint(x: 4.5, y: 20.87))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 4.51, y: 16.59), controlPoint1: NSPoint(x: 4.5, y: 16.87), controlPoint2: NSPoint(x: 4.5, y: 16.73))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 1.5, y: 12.01), controlPoint1: NSPoint(x: 2.74, y: 15.82), controlPoint2: NSPoint(x: 1.5, y: 14.06))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 6.5, y: 7.01), controlPoint1: NSPoint(x: 1.5, y: 9.24), controlPoint2: NSPoint(x: 3.73, y: 7.01))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 23.5, y: 7.01))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 28.5, y: 12.01), controlPoint1: NSPoint(x: 26.26, y: 7.01), controlPoint2: NSPoint(x: 28.5, y: 9.25))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 25.5, y: 16.59), controlPoint1: NSPoint(x: 28.5, y: 14.06), controlPoint2: NSPoint(x: 27.27, y: 15.82))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 23.77, y: 20.51), controlPoint1: NSPoint(x: 25.48, y: 18.13), controlPoint2: NSPoint(x: 24.82, y: 19.52))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 23.77, y: 20.51))
        cloudmoonsnowflakes2Path.close()
        cloudmoonsnowflakes2Path.move(to: NSPoint(x: 22.98, y: 21.13))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 24.25, y: 23.01), controlPoint1: NSPoint(x: 23.55, y: 21.63), controlPoint2: NSPoint(x: 23.99, y: 22.28))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 24, y: 23.01), controlPoint1: NSPoint(x: 24.16, y: 23.01), controlPoint2: NSPoint(x: 24.08, y: 23.01))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 18.5, y: 28.51), controlPoint1: NSPoint(x: 20.96, y: 23.01), controlPoint2: NSPoint(x: 18.5, y: 25.47))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 18.51, y: 28.75), controlPoint1: NSPoint(x: 18.5, y: 28.59), controlPoint2: NSPoint(x: 18.5, y: 28.67))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 15.5, y: 24.51), controlPoint1: NSPoint(x: 16.75, y: 28.14), controlPoint2: NSPoint(x: 15.5, y: 26.47))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 16.07, y: 22.3), controlPoint1: NSPoint(x: 15.5, y: 23.71), controlPoint2: NSPoint(x: 15.71, y: 22.96))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 17.11, y: 21.19), controlPoint1: NSPoint(x: 16.46, y: 21.97), controlPoint2: NSPoint(x: 16.81, y: 21.6))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 20, y: 22.01), controlPoint1: NSPoint(x: 17.95, y: 21.71), controlPoint2: NSPoint(x: 18.94, y: 22.01))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 22.98, y: 21.13), controlPoint1: NSPoint(x: 21.1, y: 22.01), controlPoint2: NSPoint(x: 22.12, y: 21.68))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 22.98, y: 21.13))
        cloudmoonsnowflakes2Path.close()
        cloudmoonsnowflakes2Path.move(to: NSPoint(x: 9.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 5.5))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 9, y: 6), controlPoint1: NSPoint(x: 9.5, y: 5.78), controlPoint2: NSPoint(x: 9.27, y: 6))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 8.5, y: 5.5), controlPoint1: NSPoint(x: 8.72, y: 6), controlPoint2: NSPoint(x: 8.5, y: 5.79))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 7.52, y: 4.93))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 6.83, y: 4.75), controlPoint1: NSPoint(x: 7.28, y: 5.07), controlPoint2: NSPoint(x: 6.97, y: 4.98))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 7.02, y: 4.07), controlPoint1: NSPoint(x: 6.7, y: 4.51), controlPoint2: NSPoint(x: 6.77, y: 4.21))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 8, y: 3.5))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 7.02, y: 2.93))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 6.83, y: 2.25), controlPoint1: NSPoint(x: 6.78, y: 2.79), controlPoint2: NSPoint(x: 6.7, y: 2.48))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 7.52, y: 2.07), controlPoint1: NSPoint(x: 6.97, y: 2.01), controlPoint2: NSPoint(x: 7.27, y: 1.92))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 2.63))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 8.5, y: 1.5))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 9, y: 1), controlPoint1: NSPoint(x: 8.5, y: 1.22), controlPoint2: NSPoint(x: 8.73, y: 1))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 9.5, y: 1.5), controlPoint1: NSPoint(x: 9.28, y: 1), controlPoint2: NSPoint(x: 9.5, y: 1.21))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 2.63))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 10.48, y: 2.07))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 11.17, y: 2.25), controlPoint1: NSPoint(x: 10.72, y: 1.93), controlPoint2: NSPoint(x: 11.03, y: 2.02))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 10.98, y: 2.93), controlPoint1: NSPoint(x: 11.3, y: 2.49), controlPoint2: NSPoint(x: 11.23, y: 2.79))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 10, y: 3.5))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 10.98, y: 4.07))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 11.17, y: 4.75), controlPoint1: NSPoint(x: 11.22, y: 4.21), controlPoint2: NSPoint(x: 11.3, y: 4.52))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 10.48, y: 4.93), controlPoint1: NSPoint(x: 11.03, y: 4.99), controlPoint2: NSPoint(x: 10.73, y: 5.08))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 9.5, y: 4.37))
        cloudmoonsnowflakes2Path.close()
        cloudmoonsnowflakes2Path.move(to: NSPoint(x: 21.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 5.5))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 21, y: 6), controlPoint1: NSPoint(x: 21.5, y: 5.78), controlPoint2: NSPoint(x: 21.27, y: 6))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 20.5, y: 5.5), controlPoint1: NSPoint(x: 20.72, y: 6), controlPoint2: NSPoint(x: 20.5, y: 5.79))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 19.52, y: 4.93))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 18.83, y: 4.75), controlPoint1: NSPoint(x: 19.28, y: 5.07), controlPoint2: NSPoint(x: 18.97, y: 4.98))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 19.02, y: 4.07), controlPoint1: NSPoint(x: 18.7, y: 4.51), controlPoint2: NSPoint(x: 18.77, y: 4.21))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 20, y: 3.5))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 19.02, y: 2.93))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 18.83, y: 2.25), controlPoint1: NSPoint(x: 18.78, y: 2.79), controlPoint2: NSPoint(x: 18.7, y: 2.48))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 19.52, y: 2.07), controlPoint1: NSPoint(x: 18.97, y: 2.01), controlPoint2: NSPoint(x: 19.27, y: 1.92))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 2.63))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 20.5, y: 1.5))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 21, y: 1), controlPoint1: NSPoint(x: 20.5, y: 1.22), controlPoint2: NSPoint(x: 20.73, y: 1))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 21.5, y: 1.5), controlPoint1: NSPoint(x: 21.28, y: 1), controlPoint2: NSPoint(x: 21.5, y: 1.21))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 2.63))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 22.48, y: 2.07))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 23.17, y: 2.25), controlPoint1: NSPoint(x: 22.72, y: 1.93), controlPoint2: NSPoint(x: 23.03, y: 2.02))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 22.98, y: 2.93), controlPoint1: NSPoint(x: 23.3, y: 2.49), controlPoint2: NSPoint(x: 23.23, y: 2.79))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 22, y: 3.5))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 22.98, y: 4.07))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 23.17, y: 4.75), controlPoint1: NSPoint(x: 23.22, y: 4.21), controlPoint2: NSPoint(x: 23.3, y: 4.52))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 22.48, y: 4.93), controlPoint1: NSPoint(x: 23.03, y: 4.99), controlPoint2: NSPoint(x: 22.73, y: 5.08))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 4.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 21.5, y: 4.37))
        cloudmoonsnowflakes2Path.close()
        cloudmoonsnowflakes2Path.move(to: NSPoint(x: 15.5, y: 3.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 4.5))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 15, y: 5), controlPoint1: NSPoint(x: 15.5, y: 4.78), controlPoint2: NSPoint(x: 15.27, y: 5))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 14.5, y: 4.5), controlPoint1: NSPoint(x: 14.72, y: 5), controlPoint2: NSPoint(x: 14.5, y: 4.79))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 3.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 3.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 13.52, y: 3.93))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 12.83, y: 3.75), controlPoint1: NSPoint(x: 13.28, y: 4.07), controlPoint2: NSPoint(x: 12.97, y: 3.98))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 13.02, y: 3.07), controlPoint1: NSPoint(x: 12.7, y: 3.51), controlPoint2: NSPoint(x: 12.77, y: 3.21))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 14, y: 2.5))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 13.02, y: 1.93))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 12.83, y: 1.25), controlPoint1: NSPoint(x: 12.78, y: 1.79), controlPoint2: NSPoint(x: 12.7, y: 1.48))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 13.52, y: 1.07), controlPoint1: NSPoint(x: 12.97, y: 1.01), controlPoint2: NSPoint(x: 13.27, y: 0.92))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 1.63))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 14.5, y: 0.5))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 15, y: 0), controlPoint1: NSPoint(x: 14.5, y: 0.22), controlPoint2: NSPoint(x: 14.73, y: 0))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 15.5, y: 0.5), controlPoint1: NSPoint(x: 15.28, y: 0), controlPoint2: NSPoint(x: 15.5, y: 0.21))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 1.63))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 16.48, y: 1.07))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 17.17, y: 1.25), controlPoint1: NSPoint(x: 16.72, y: 0.93), controlPoint2: NSPoint(x: 17.03, y: 1.02))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 16.98, y: 1.93), controlPoint1: NSPoint(x: 17.3, y: 1.49), controlPoint2: NSPoint(x: 17.23, y: 1.79))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 16, y: 2.5))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 16.98, y: 3.07))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 17.17, y: 3.75), controlPoint1: NSPoint(x: 17.22, y: 3.21), controlPoint2: NSPoint(x: 17.3, y: 3.52))
        cloudmoonsnowflakes2Path.curve(to: NSPoint(x: 16.48, y: 3.93), controlPoint1: NSPoint(x: 17.03, y: 3.99), controlPoint2: NSPoint(x: 16.73, y: 4.08))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 3.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 3.37))
        cloudmoonsnowflakes2Path.line(to: NSPoint(x: 15.5, y: 3.37))
        cloudmoonsnowflakes2Path.close()
        cloudmoonsnowflakes2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudmoonsnowflakes2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClouds(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-20-clouds
        //// clouds 3 Drawing
        let clouds3Path = NSBezierPath()
        clouds3Path.move(to: NSPoint(x: 14.34, y: 8.48))
        clouds3Path.curve(to: NSPoint(x: 16.5, y: 6), controlPoint1: NSPoint(x: 15.56, y: 8.31), controlPoint2: NSPoint(x: 16.5, y: 7.26))
        clouds3Path.curve(to: NSPoint(x: 13.99, y: 3.5), controlPoint1: NSPoint(x: 16.5, y: 4.61), controlPoint2: NSPoint(x: 15.38, y: 3.5))
        clouds3Path.line(to: NSPoint(x: 6.01, y: 3.5))
        clouds3Path.curve(to: NSPoint(x: 3.5, y: 6), controlPoint1: NSPoint(x: 4.62, y: 3.5), controlPoint2: NSPoint(x: 3.5, y: 4.62))
        clouds3Path.curve(to: NSPoint(x: 5.5, y: 8.45), controlPoint1: NSPoint(x: 3.5, y: 7.22), controlPoint2: NSPoint(x: 4.36, y: 8.22))
        clouds3Path.line(to: NSPoint(x: 5.5, y: 8.45))
        clouds3Path.curve(to: NSPoint(x: 5.5, y: 8.5), controlPoint1: NSPoint(x: 5.5, y: 8.47), controlPoint2: NSPoint(x: 5.5, y: 8.48))
        clouds3Path.curve(to: NSPoint(x: 8.5, y: 11.5), controlPoint1: NSPoint(x: 5.5, y: 10.16), controlPoint2: NSPoint(x: 6.84, y: 11.5))
        clouds3Path.curve(to: NSPoint(x: 10.81, y: 10.42), controlPoint1: NSPoint(x: 9.43, y: 11.5), controlPoint2: NSPoint(x: 10.26, y: 11.08))
        clouds3Path.curve(to: NSPoint(x: 11.5, y: 10.5), controlPoint1: NSPoint(x: 11.03, y: 10.47), controlPoint2: NSPoint(x: 11.26, y: 10.5))
        clouds3Path.curve(to: NSPoint(x: 14.34, y: 8.48), controlPoint1: NSPoint(x: 12.81, y: 10.5), controlPoint2: NSPoint(x: 13.93, y: 9.65))
        clouds3Path.line(to: NSPoint(x: 14.34, y: 8.48))
        clouds3Path.close()
        clouds3Path.move(to: NSPoint(x: 15.05, y: 9.34))
        clouds3Path.curve(to: NSPoint(x: 17.46, y: 6.5), controlPoint1: NSPoint(x: 16.31, y: 8.94), controlPoint2: NSPoint(x: 17.27, y: 7.84))
        clouds3Path.line(to: NSPoint(x: 17.46, y: 6.5))
        clouds3Path.line(to: NSPoint(x: 23.5, y: 6.5))
        clouds3Path.curve(to: NSPoint(x: 28.5, y: 11.5), controlPoint1: NSPoint(x: 26.26, y: 6.5), controlPoint2: NSPoint(x: 28.5, y: 8.74))
        clouds3Path.curve(to: NSPoint(x: 25.5, y: 16.09), controlPoint1: NSPoint(x: 28.5, y: 13.55), controlPoint2: NSPoint(x: 27.27, y: 15.31))
        clouds3Path.line(to: NSPoint(x: 25.5, y: 16.09))
        clouds3Path.curve(to: NSPoint(x: 20, y: 21.5), controlPoint1: NSPoint(x: 25.45, y: 19.08), controlPoint2: NSPoint(x: 23.01, y: 21.5))
        clouds3Path.curve(to: NSPoint(x: 17.11, y: 20.68), controlPoint1: NSPoint(x: 18.94, y: 21.5), controlPoint2: NSPoint(x: 17.95, y: 21.2))
        clouds3Path.curve(to: NSPoint(x: 11.5, y: 23.5), controlPoint1: NSPoint(x: 15.84, y: 22.39), controlPoint2: NSPoint(x: 13.8, y: 23.5))
        clouds3Path.curve(to: NSPoint(x: 4.5, y: 16.5), controlPoint1: NSPoint(x: 7.63, y: 23.5), controlPoint2: NSPoint(x: 4.5, y: 20.37))
        clouds3Path.curve(to: NSPoint(x: 4.51, y: 16.09), controlPoint1: NSPoint(x: 4.5, y: 16.36), controlPoint2: NSPoint(x: 4.5, y: 16.22))
        clouds3Path.line(to: NSPoint(x: 4.51, y: 16.09))
        clouds3Path.curve(to: NSPoint(x: 1.5, y: 11.5), controlPoint1: NSPoint(x: 2.74, y: 15.32), controlPoint2: NSPoint(x: 1.5, y: 13.55))
        clouds3Path.curve(to: NSPoint(x: 3.05, y: 7.88), controlPoint1: NSPoint(x: 1.5, y: 10.08), controlPoint2: NSPoint(x: 2.09, y: 8.79))
        clouds3Path.curve(to: NSPoint(x: 4.56, y: 9.19), controlPoint1: NSPoint(x: 3.41, y: 8.45), controlPoint2: NSPoint(x: 3.94, y: 8.91))
        clouds3Path.line(to: NSPoint(x: 4.56, y: 9.19))
        clouds3Path.curve(to: NSPoint(x: 8.5, y: 12.5), controlPoint1: NSPoint(x: 4.89, y: 11.07), controlPoint2: NSPoint(x: 6.53, y: 12.5))
        clouds3Path.curve(to: NSPoint(x: 11.16, y: 11.49), controlPoint1: NSPoint(x: 9.52, y: 12.5), controlPoint2: NSPoint(x: 10.45, y: 12.12))
        clouds3Path.curve(to: NSPoint(x: 11.5, y: 11.5), controlPoint1: NSPoint(x: 11.27, y: 11.5), controlPoint2: NSPoint(x: 11.39, y: 11.5))
        clouds3Path.curve(to: NSPoint(x: 15.05, y: 9.34), controlPoint1: NSPoint(x: 13.05, y: 11.5), controlPoint2: NSPoint(x: 14.39, y: 10.62))
        clouds3Path.line(to: NSPoint(x: 15.05, y: 9.34))
        clouds3Path.line(to: NSPoint(x: 15.05, y: 9.34))
        clouds3Path.close()
        clouds3Path.move(to: NSPoint(x: 25.92, y: 18.68))
        clouds3Path.curve(to: NSPoint(x: 27.5, y: 21), controlPoint1: NSPoint(x: 26.85, y: 19.04), controlPoint2: NSPoint(x: 27.5, y: 19.94))
        clouds3Path.curve(to: NSPoint(x: 25.34, y: 23.48), controlPoint1: NSPoint(x: 27.5, y: 22.26), controlPoint2: NSPoint(x: 26.56, y: 23.31))
        clouds3Path.line(to: NSPoint(x: 25.34, y: 23.48))
        clouds3Path.curve(to: NSPoint(x: 22.5, y: 25.5), controlPoint1: NSPoint(x: 24.93, y: 24.65), controlPoint2: NSPoint(x: 23.81, y: 25.5))
        clouds3Path.curve(to: NSPoint(x: 21.81, y: 25.42), controlPoint1: NSPoint(x: 22.26, y: 25.5), controlPoint2: NSPoint(x: 22.03, y: 25.47))
        clouds3Path.curve(to: NSPoint(x: 19.5, y: 26.5), controlPoint1: NSPoint(x: 21.26, y: 26.08), controlPoint2: NSPoint(x: 20.43, y: 26.5))
        clouds3Path.curve(to: NSPoint(x: 16.5, y: 23.5), controlPoint1: NSPoint(x: 17.84, y: 26.5), controlPoint2: NSPoint(x: 16.5, y: 25.16))
        clouds3Path.curve(to: NSPoint(x: 16.5, y: 23.45), controlPoint1: NSPoint(x: 16.5, y: 23.48), controlPoint2: NSPoint(x: 16.5, y: 23.47))
        clouds3Path.line(to: NSPoint(x: 16.5, y: 23.45))
        clouds3Path.curve(to: NSPoint(x: 15.85, y: 23.22), controlPoint1: NSPoint(x: 16.27, y: 23.4), controlPoint2: NSPoint(x: 16.05, y: 23.32))
        clouds3Path.curve(to: NSPoint(x: 17.36, y: 21.94), controlPoint1: NSPoint(x: 16.4, y: 22.86), controlPoint2: NSPoint(x: 16.91, y: 22.43))
        clouds3Path.curve(to: NSPoint(x: 20, y: 22.5), controlPoint1: NSPoint(x: 18.17, y: 22.3), controlPoint2: NSPoint(x: 19.06, y: 22.5))
        clouds3Path.curve(to: NSPoint(x: 25.92, y: 18.68), controlPoint1: NSPoint(x: 22.64, y: 22.5), controlPoint2: NSPoint(x: 24.9, y: 20.93))
        clouds3Path.line(to: NSPoint(x: 25.92, y: 18.68))
        clouds3Path.line(to: NSPoint(x: 25.92, y: 18.68))
        clouds3Path.close()
        clouds3Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        clouds3Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudAdd(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-21-cloud-add
        //// cloud-add 2 Drawing
        let cloudadd2Path = NSBezierPath()
        cloudadd2Path.move(to: NSPoint(x: 14.5, y: 13.5))
        cloudadd2Path.line(to: NSPoint(x: 14.5, y: 16))
        cloudadd2Path.curve(to: NSPoint(x: 15, y: 16.5), controlPoint1: NSPoint(x: 14.5, y: 16.27), controlPoint2: NSPoint(x: 14.72, y: 16.5))
        cloudadd2Path.curve(to: NSPoint(x: 15.5, y: 16), controlPoint1: NSPoint(x: 15.27, y: 16.5), controlPoint2: NSPoint(x: 15.5, y: 16.27))
        cloudadd2Path.line(to: NSPoint(x: 15.5, y: 13.5))
        cloudadd2Path.line(to: NSPoint(x: 18, y: 13.5))
        cloudadd2Path.curve(to: NSPoint(x: 18.5, y: 13), controlPoint1: NSPoint(x: 18.27, y: 13.5), controlPoint2: NSPoint(x: 18.5, y: 13.28))
        cloudadd2Path.curve(to: NSPoint(x: 18, y: 12.5), controlPoint1: NSPoint(x: 18.5, y: 12.73), controlPoint2: NSPoint(x: 18.27, y: 12.5))
        cloudadd2Path.line(to: NSPoint(x: 15.5, y: 12.5))
        cloudadd2Path.line(to: NSPoint(x: 15.5, y: 10))
        cloudadd2Path.curve(to: NSPoint(x: 15, y: 9.5), controlPoint1: NSPoint(x: 15.5, y: 9.73), controlPoint2: NSPoint(x: 15.28, y: 9.5))
        cloudadd2Path.curve(to: NSPoint(x: 14.5, y: 10), controlPoint1: NSPoint(x: 14.73, y: 9.5), controlPoint2: NSPoint(x: 14.5, y: 9.73))
        cloudadd2Path.line(to: NSPoint(x: 14.5, y: 12.5))
        cloudadd2Path.line(to: NSPoint(x: 12, y: 12.5))
        cloudadd2Path.curve(to: NSPoint(x: 11.5, y: 13), controlPoint1: NSPoint(x: 11.73, y: 12.5), controlPoint2: NSPoint(x: 11.5, y: 12.72))
        cloudadd2Path.curve(to: NSPoint(x: 12, y: 13.5), controlPoint1: NSPoint(x: 11.5, y: 13.27), controlPoint2: NSPoint(x: 11.73, y: 13.5))
        cloudadd2Path.line(to: NSPoint(x: 14.5, y: 13.5))
        cloudadd2Path.line(to: NSPoint(x: 14.5, y: 13.5))
        cloudadd2Path.close()
        cloudadd2Path.move(to: NSPoint(x: 25.5, y: 16.09))
        cloudadd2Path.curve(to: NSPoint(x: 28.5, y: 11.5), controlPoint1: NSPoint(x: 27.27, y: 15.31), controlPoint2: NSPoint(x: 28.5, y: 13.55))
        cloudadd2Path.curve(to: NSPoint(x: 23.5, y: 6.5), controlPoint1: NSPoint(x: 28.5, y: 8.74), controlPoint2: NSPoint(x: 26.26, y: 6.5))
        cloudadd2Path.line(to: NSPoint(x: 6.5, y: 6.5))
        cloudadd2Path.curve(to: NSPoint(x: 1.5, y: 11.5), controlPoint1: NSPoint(x: 3.73, y: 6.5), controlPoint2: NSPoint(x: 1.5, y: 8.74))
        cloudadd2Path.curve(to: NSPoint(x: 4.51, y: 16.09), controlPoint1: NSPoint(x: 1.5, y: 13.55), controlPoint2: NSPoint(x: 2.74, y: 15.32))
        cloudadd2Path.line(to: NSPoint(x: 4.51, y: 16.09))
        cloudadd2Path.curve(to: NSPoint(x: 4.5, y: 16.5), controlPoint1: NSPoint(x: 4.5, y: 16.22), controlPoint2: NSPoint(x: 4.5, y: 16.36))
        cloudadd2Path.curve(to: NSPoint(x: 11.5, y: 23.5), controlPoint1: NSPoint(x: 4.5, y: 20.37), controlPoint2: NSPoint(x: 7.63, y: 23.5))
        cloudadd2Path.curve(to: NSPoint(x: 17.11, y: 20.68), controlPoint1: NSPoint(x: 13.8, y: 23.5), controlPoint2: NSPoint(x: 15.84, y: 22.39))
        cloudadd2Path.curve(to: NSPoint(x: 20, y: 21.5), controlPoint1: NSPoint(x: 17.95, y: 21.2), controlPoint2: NSPoint(x: 18.94, y: 21.5))
        cloudadd2Path.curve(to: NSPoint(x: 25.5, y: 16.09), controlPoint1: NSPoint(x: 23.01, y: 21.5), controlPoint2: NSPoint(x: 25.45, y: 19.08))
        cloudadd2Path.line(to: NSPoint(x: 25.5, y: 16.09))
        cloudadd2Path.line(to: NSPoint(x: 25.5, y: 16.09))
        cloudadd2Path.close()
        cloudadd2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudadd2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudRemove(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-22-cloud-remove
        //// cloud-remove 2 Drawing
        let cloudremove2Path = NSBezierPath()
        cloudremove2Path.move(to: NSPoint(x: 25.5, y: 16.09))
        cloudremove2Path.curve(to: NSPoint(x: 28.5, y: 11.5), controlPoint1: NSPoint(x: 27.27, y: 15.31), controlPoint2: NSPoint(x: 28.5, y: 13.55))
        cloudremove2Path.curve(to: NSPoint(x: 23.5, y: 6.5), controlPoint1: NSPoint(x: 28.5, y: 8.74), controlPoint2: NSPoint(x: 26.26, y: 6.5))
        cloudremove2Path.line(to: NSPoint(x: 6.5, y: 6.5))
        cloudremove2Path.curve(to: NSPoint(x: 1.5, y: 11.5), controlPoint1: NSPoint(x: 3.73, y: 6.5), controlPoint2: NSPoint(x: 1.5, y: 8.74))
        cloudremove2Path.curve(to: NSPoint(x: 4.51, y: 16.09), controlPoint1: NSPoint(x: 1.5, y: 13.55), controlPoint2: NSPoint(x: 2.74, y: 15.32))
        cloudremove2Path.line(to: NSPoint(x: 4.51, y: 16.09))
        cloudremove2Path.curve(to: NSPoint(x: 4.5, y: 16.5), controlPoint1: NSPoint(x: 4.5, y: 16.22), controlPoint2: NSPoint(x: 4.5, y: 16.36))
        cloudremove2Path.curve(to: NSPoint(x: 11.5, y: 23.5), controlPoint1: NSPoint(x: 4.5, y: 20.37), controlPoint2: NSPoint(x: 7.63, y: 23.5))
        cloudremove2Path.curve(to: NSPoint(x: 17.11, y: 20.68), controlPoint1: NSPoint(x: 13.8, y: 23.5), controlPoint2: NSPoint(x: 15.84, y: 22.39))
        cloudremove2Path.curve(to: NSPoint(x: 20, y: 21.5), controlPoint1: NSPoint(x: 17.95, y: 21.2), controlPoint2: NSPoint(x: 18.94, y: 21.5))
        cloudremove2Path.curve(to: NSPoint(x: 25.5, y: 16.09), controlPoint1: NSPoint(x: 23.01, y: 21.5), controlPoint2: NSPoint(x: 25.45, y: 19.08))
        cloudremove2Path.line(to: NSPoint(x: 25.5, y: 16.09))
        cloudremove2Path.line(to: NSPoint(x: 25.5, y: 16.09))
        cloudremove2Path.close()
        cloudremove2Path.move(to: NSPoint(x: 12, y: 13.5))
        cloudremove2Path.curve(to: NSPoint(x: 11.5, y: 13), controlPoint1: NSPoint(x: 11.73, y: 13.5), controlPoint2: NSPoint(x: 11.5, y: 13.27))
        cloudremove2Path.curve(to: NSPoint(x: 12, y: 12.5), controlPoint1: NSPoint(x: 11.5, y: 12.72), controlPoint2: NSPoint(x: 11.73, y: 12.5))
        cloudremove2Path.line(to: NSPoint(x: 18, y: 12.5))
        cloudremove2Path.curve(to: NSPoint(x: 18.5, y: 13), controlPoint1: NSPoint(x: 18.27, y: 12.5), controlPoint2: NSPoint(x: 18.5, y: 12.73))
        cloudremove2Path.curve(to: NSPoint(x: 18, y: 13.5), controlPoint1: NSPoint(x: 18.5, y: 13.28), controlPoint2: NSPoint(x: 18.27, y: 13.5))
        cloudremove2Path.line(to: NSPoint(x: 12, y: 13.5))
        cloudremove2Path.line(to: NSPoint(x: 12, y: 13.5))
        cloudremove2Path.close()
        cloudremove2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudremove2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudError1(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-23-cloud-error
        //// cloud-error Drawing
        let clouderrorPath = NSBezierPath()
        clouderrorPath.move(to: NSPoint(x: 15, y: 9.5))
        clouderrorPath.curve(to: NSPoint(x: 14.5, y: 10), controlPoint1: NSPoint(x: 14.72, y: 9.5), controlPoint2: NSPoint(x: 14.5, y: 9.73))
        clouderrorPath.curve(to: NSPoint(x: 15, y: 10.5), controlPoint1: NSPoint(x: 14.5, y: 10.28), controlPoint2: NSPoint(x: 14.73, y: 10.5))
        clouderrorPath.curve(to: NSPoint(x: 15.5, y: 10), controlPoint1: NSPoint(x: 15.28, y: 10.5), controlPoint2: NSPoint(x: 15.5, y: 10.27))
        clouderrorPath.curve(to: NSPoint(x: 15, y: 9.5), controlPoint1: NSPoint(x: 15.5, y: 9.72), controlPoint2: NSPoint(x: 15.27, y: 9.5))
        clouderrorPath.line(to: NSPoint(x: 15, y: 9.5))
        clouderrorPath.close()
        clouderrorPath.move(to: NSPoint(x: 25.5, y: 16.09))
        clouderrorPath.curve(to: NSPoint(x: 28.5, y: 11.5), controlPoint1: NSPoint(x: 27.27, y: 15.31), controlPoint2: NSPoint(x: 28.5, y: 13.55))
        clouderrorPath.curve(to: NSPoint(x: 23.5, y: 6.5), controlPoint1: NSPoint(x: 28.5, y: 8.74), controlPoint2: NSPoint(x: 26.26, y: 6.5))
        clouderrorPath.line(to: NSPoint(x: 6.5, y: 6.5))
        clouderrorPath.curve(to: NSPoint(x: 1.5, y: 11.5), controlPoint1: NSPoint(x: 3.73, y: 6.5), controlPoint2: NSPoint(x: 1.5, y: 8.74))
        clouderrorPath.curve(to: NSPoint(x: 4.51, y: 16.09), controlPoint1: NSPoint(x: 1.5, y: 13.55), controlPoint2: NSPoint(x: 2.74, y: 15.32))
        clouderrorPath.line(to: NSPoint(x: 4.51, y: 16.09))
        clouderrorPath.curve(to: NSPoint(x: 4.5, y: 16.5), controlPoint1: NSPoint(x: 4.5, y: 16.22), controlPoint2: NSPoint(x: 4.5, y: 16.36))
        clouderrorPath.curve(to: NSPoint(x: 11.5, y: 23.5), controlPoint1: NSPoint(x: 4.5, y: 20.37), controlPoint2: NSPoint(x: 7.63, y: 23.5))
        clouderrorPath.curve(to: NSPoint(x: 17.11, y: 20.68), controlPoint1: NSPoint(x: 13.8, y: 23.5), controlPoint2: NSPoint(x: 15.84, y: 22.39))
        clouderrorPath.curve(to: NSPoint(x: 20, y: 21.5), controlPoint1: NSPoint(x: 17.95, y: 21.2), controlPoint2: NSPoint(x: 18.94, y: 21.5))
        clouderrorPath.curve(to: NSPoint(x: 25.5, y: 16.09), controlPoint1: NSPoint(x: 23.01, y: 21.5), controlPoint2: NSPoint(x: 25.45, y: 19.08))
        clouderrorPath.line(to: NSPoint(x: 25.5, y: 16.09))
        clouderrorPath.line(to: NSPoint(x: 25.5, y: 16.09))
        clouderrorPath.close()
        clouderrorPath.move(to: NSPoint(x: 15, y: 17.5))
        clouderrorPath.curve(to: NSPoint(x: 14.5, y: 17.01), controlPoint1: NSPoint(x: 14.72, y: 17.5), controlPoint2: NSPoint(x: 14.5, y: 17.27))
        clouderrorPath.line(to: NSPoint(x: 14.5, y: 11.99))
        clouderrorPath.curve(to: NSPoint(x: 15, y: 11.5), controlPoint1: NSPoint(x: 14.5, y: 11.72), controlPoint2: NSPoint(x: 14.73, y: 11.5))
        clouderrorPath.curve(to: NSPoint(x: 15.5, y: 11.99), controlPoint1: NSPoint(x: 15.28, y: 11.5), controlPoint2: NSPoint(x: 15.5, y: 11.73))
        clouderrorPath.line(to: NSPoint(x: 15.5, y: 17.01))
        clouderrorPath.curve(to: NSPoint(x: 15, y: 17.5), controlPoint1: NSPoint(x: 15.5, y: 17.28), controlPoint2: NSPoint(x: 15.27, y: 17.5))
        clouderrorPath.line(to: NSPoint(x: 15, y: 17.5))
        clouderrorPath.close()
        clouderrorPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        clouderrorPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudFog(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-24-cloud-fog
        //// cloud-fog 2 Drawing
        let cloudfog2Path = NSBezierPath()
        cloudfog2Path.move(to: NSPoint(x: 28.4, y: 10.5))
        cloudfog2Path.curve(to: NSPoint(x: 28.5, y: 11.5), controlPoint1: NSPoint(x: 28.47, y: 10.82), controlPoint2: NSPoint(x: 28.5, y: 11.16))
        cloudfog2Path.line(to: NSPoint(x: 1.5, y: 11.5))
        cloudfog2Path.curve(to: NSPoint(x: 1.6, y: 10.5), controlPoint1: NSPoint(x: 1.5, y: 11.16), controlPoint2: NSPoint(x: 1.53, y: 10.82))
        cloudfog2Path.line(to: NSPoint(x: 28.4, y: 10.5))
        cloudfog2Path.line(to: NSPoint(x: 28.4, y: 10.5))
        cloudfog2Path.close()
        cloudfog2Path.move(to: NSPoint(x: 28.08, y: 9.5))
        cloudfog2Path.curve(to: NSPoint(x: 27.5, y: 8.5), controlPoint1: NSPoint(x: 27.93, y: 9.14), controlPoint2: NSPoint(x: 27.73, y: 8.81))
        cloudfog2Path.line(to: NSPoint(x: 27.5, y: 8.5))
        cloudfog2Path.line(to: NSPoint(x: 2.5, y: 8.5))
        cloudfog2Path.line(to: NSPoint(x: 2.5, y: 8.5))
        cloudfog2Path.curve(to: NSPoint(x: 1.92, y: 9.5), controlPoint1: NSPoint(x: 2.27, y: 8.81), controlPoint2: NSPoint(x: 2.07, y: 9.14))
        cloudfog2Path.line(to: NSPoint(x: 28.08, y: 9.5))
        cloudfog2Path.line(to: NSPoint(x: 28.08, y: 9.5))
        cloudfog2Path.close()
        cloudfog2Path.move(to: NSPoint(x: 16.4, y: 21.5))
        cloudfog2Path.curve(to: NSPoint(x: 17.11, y: 20.68), controlPoint1: NSPoint(x: 16.66, y: 21.25), controlPoint2: NSPoint(x: 16.9, y: 20.97))
        cloudfog2Path.curve(to: NSPoint(x: 20, y: 21.5), controlPoint1: NSPoint(x: 17.95, y: 21.2), controlPoint2: NSPoint(x: 18.94, y: 21.5))
        cloudfog2Path.curve(to: NSPoint(x: 23.16, y: 20.5), controlPoint1: NSPoint(x: 21.18, y: 21.5), controlPoint2: NSPoint(x: 22.27, y: 21.13))
        cloudfog2Path.line(to: NSPoint(x: 23.16, y: 20.5))
        cloudfog2Path.line(to: NSPoint(x: 5.75, y: 20.5))
        cloudfog2Path.curve(to: NSPoint(x: 6.6, y: 21.5), controlPoint1: NSPoint(x: 6.01, y: 20.86), controlPoint2: NSPoint(x: 6.29, y: 21.19))
        cloudfog2Path.line(to: NSPoint(x: 16.4, y: 21.5))
        cloudfog2Path.line(to: NSPoint(x: 16.4, y: 21.5))
        cloudfog2Path.line(to: NSPoint(x: 16.4, y: 21.5))
        cloudfog2Path.close()
        cloudfog2Path.move(to: NSPoint(x: 15.11, y: 22.5))
        cloudfog2Path.curve(to: NSPoint(x: 11.5, y: 23.5), controlPoint1: NSPoint(x: 14.05, y: 23.13), controlPoint2: NSPoint(x: 12.82, y: 23.5))
        cloudfog2Path.curve(to: NSPoint(x: 7.89, y: 22.5), controlPoint1: NSPoint(x: 10.18, y: 23.5), controlPoint2: NSPoint(x: 8.95, y: 23.13))
        cloudfog2Path.line(to: NSPoint(x: 15.11, y: 22.5))
        cloudfog2Path.line(to: NSPoint(x: 15.11, y: 22.5))
        cloudfog2Path.line(to: NSPoint(x: 15.11, y: 22.5))
        cloudfog2Path.close()
        cloudfog2Path.move(to: NSPoint(x: 24.24, y: 19.5))
        cloudfog2Path.curve(to: NSPoint(x: 24.9, y: 18.5), controlPoint1: NSPoint(x: 24.5, y: 19.19), controlPoint2: NSPoint(x: 24.72, y: 18.86))
        cloudfog2Path.line(to: NSPoint(x: 24.9, y: 18.5))
        cloudfog2Path.line(to: NSPoint(x: 4.79, y: 18.5))
        cloudfog2Path.curve(to: NSPoint(x: 5.17, y: 19.5), controlPoint1: NSPoint(x: 4.89, y: 18.85), controlPoint2: NSPoint(x: 5.02, y: 19.18))
        cloudfog2Path.line(to: NSPoint(x: 24.24, y: 19.5))
        cloudfog2Path.line(to: NSPoint(x: 24.24, y: 19.5))
        cloudfog2Path.line(to: NSPoint(x: 24.24, y: 19.5))
        cloudfog2Path.close()
        cloudfog2Path.move(to: NSPoint(x: 25.29, y: 17.5))
        cloudfog2Path.curve(to: NSPoint(x: 25.48, y: 16.5), controlPoint1: NSPoint(x: 25.38, y: 17.18), controlPoint2: NSPoint(x: 25.45, y: 16.84))
        cloudfog2Path.line(to: NSPoint(x: 25.48, y: 16.5))
        cloudfog2Path.line(to: NSPoint(x: 4.5, y: 16.5))
        cloudfog2Path.curve(to: NSPoint(x: 4.57, y: 17.5), controlPoint1: NSPoint(x: 4.5, y: 16.84), controlPoint2: NSPoint(x: 4.52, y: 17.17))
        cloudfog2Path.line(to: NSPoint(x: 25.29, y: 17.5))
        cloudfog2Path.line(to: NSPoint(x: 25.29, y: 17.5))
        cloudfog2Path.line(to: NSPoint(x: 25.29, y: 17.5))
        cloudfog2Path.close()
        cloudfog2Path.move(to: NSPoint(x: 26.5, y: 15.5))
        cloudfog2Path.curve(to: NSPoint(x: 27.5, y: 14.5), controlPoint1: NSPoint(x: 26.88, y: 15.22), controlPoint2: NSPoint(x: 27.22, y: 14.88))
        cloudfog2Path.line(to: NSPoint(x: 27.5, y: 14.5))
        cloudfog2Path.line(to: NSPoint(x: 2.5, y: 14.5))
        cloudfog2Path.curve(to: NSPoint(x: 3.5, y: 15.5), controlPoint1: NSPoint(x: 2.79, y: 14.88), controlPoint2: NSPoint(x: 3.12, y: 15.22))
        cloudfog2Path.line(to: NSPoint(x: 26.5, y: 15.5))
        cloudfog2Path.line(to: NSPoint(x: 26.5, y: 15.5))
        cloudfog2Path.line(to: NSPoint(x: 26.5, y: 15.5))
        cloudfog2Path.line(to: NSPoint(x: 26.5, y: 15.5))
        cloudfog2Path.close()
        cloudfog2Path.move(to: NSPoint(x: 28.08, y: 13.5))
        cloudfog2Path.curve(to: NSPoint(x: 28.4, y: 12.5), controlPoint1: NSPoint(x: 28.22, y: 13.18), controlPoint2: NSPoint(x: 28.33, y: 12.85))
        cloudfog2Path.line(to: NSPoint(x: 28.4, y: 12.5))
        cloudfog2Path.line(to: NSPoint(x: 1.6, y: 12.5))
        cloudfog2Path.curve(to: NSPoint(x: 1.92, y: 13.5), controlPoint1: NSPoint(x: 1.67, y: 12.85), controlPoint2: NSPoint(x: 1.78, y: 13.18))
        cloudfog2Path.line(to: NSPoint(x: 28.08, y: 13.5))
        cloudfog2Path.line(to: NSPoint(x: 28.08, y: 13.5))
        cloudfog2Path.line(to: NSPoint(x: 28.08, y: 13.5))
        cloudfog2Path.close()
        cloudfog2Path.move(to: NSPoint(x: 26.5, y: 7.5))
        cloudfog2Path.curve(to: NSPoint(x: 23.5, y: 6.5), controlPoint1: NSPoint(x: 25.66, y: 6.87), controlPoint2: NSPoint(x: 24.63, y: 6.5))
        cloudfog2Path.line(to: NSPoint(x: 6.5, y: 6.5))
        cloudfog2Path.curve(to: NSPoint(x: 3.5, y: 7.5), controlPoint1: NSPoint(x: 5.37, y: 6.5), controlPoint2: NSPoint(x: 4.33, y: 6.87))
        cloudfog2Path.line(to: NSPoint(x: 26.5, y: 7.5))
        cloudfog2Path.line(to: NSPoint(x: 26.5, y: 7.5))
        cloudfog2Path.line(to: NSPoint(x: 26.5, y: 7.5))
        cloudfog2Path.close()
        cloudfog2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudfog2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudSunFog(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-25--cloud-sun-fog
        //// cloud-sun-fog 2 Drawing
        let cloudsunfog2Path = NSBezierPath()
        cloudsunfog2Path.move(to: NSPoint(x: 1.6, y: 8))
        cloudsunfog2Path.curve(to: NSPoint(x: 1.92, y: 9), controlPoint1: NSPoint(x: 1.67, y: 8.35), controlPoint2: NSPoint(x: 1.78, y: 8.68))
        cloudsunfog2Path.line(to: NSPoint(x: 1.92, y: 9))
        cloudsunfog2Path.line(to: NSPoint(x: 28.08, y: 9))
        cloudsunfog2Path.curve(to: NSPoint(x: 28.4, y: 8), controlPoint1: NSPoint(x: 28.22, y: 8.68), controlPoint2: NSPoint(x: 28.33, y: 8.35))
        cloudsunfog2Path.line(to: NSPoint(x: 1.6, y: 8))
        cloudsunfog2Path.line(to: NSPoint(x: 1.6, y: 8))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 1.5, y: 7))
        cloudsunfog2Path.curve(to: NSPoint(x: 1.6, y: 6), controlPoint1: NSPoint(x: 1.5, y: 6.66), controlPoint2: NSPoint(x: 1.53, y: 6.32))
        cloudsunfog2Path.line(to: NSPoint(x: 1.6, y: 6))
        cloudsunfog2Path.line(to: NSPoint(x: 28.4, y: 6))
        cloudsunfog2Path.curve(to: NSPoint(x: 28.5, y: 7), controlPoint1: NSPoint(x: 28.47, y: 6.32), controlPoint2: NSPoint(x: 28.5, y: 6.66))
        cloudsunfog2Path.line(to: NSPoint(x: 1.5, y: 7))
        cloudsunfog2Path.line(to: NSPoint(x: 1.5, y: 7))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 6.6, y: 17))
        cloudsunfog2Path.curve(to: NSPoint(x: 5.75, y: 16), controlPoint1: NSPoint(x: 6.29, y: 16.69), controlPoint2: NSPoint(x: 6.01, y: 16.36))
        cloudsunfog2Path.line(to: NSPoint(x: 5.75, y: 16))
        cloudsunfog2Path.line(to: NSPoint(x: 23.48, y: 16))
        cloudsunfog2Path.curve(to: NSPoint(x: 23.5, y: 16.5), controlPoint1: NSPoint(x: 23.49, y: 16.16), controlPoint2: NSPoint(x: 23.5, y: 16.33))
        cloudsunfog2Path.curve(to: NSPoint(x: 18, y: 22), controlPoint1: NSPoint(x: 23.5, y: 19.54), controlPoint2: NSPoint(x: 21.04, y: 22))
        cloudsunfog2Path.curve(to: NSPoint(x: 13.02, y: 18.83), controlPoint1: NSPoint(x: 15.8, y: 22), controlPoint2: NSPoint(x: 13.9, y: 20.71))
        cloudsunfog2Path.line(to: NSPoint(x: 13.02, y: 18.83))
        cloudsunfog2Path.curve(to: NSPoint(x: 11.5, y: 19), controlPoint1: NSPoint(x: 12.53, y: 18.94), controlPoint2: NSPoint(x: 12.02, y: 19))
        cloudsunfog2Path.curve(to: NSPoint(x: 7.89, y: 18), controlPoint1: NSPoint(x: 10.18, y: 19), controlPoint2: NSPoint(x: 8.95, y: 18.63))
        cloudsunfog2Path.line(to: NSPoint(x: 15.11, y: 18))
        cloudsunfog2Path.curve(to: NSPoint(x: 13.99, y: 18.54), controlPoint1: NSPoint(x: 14.75, y: 18.21), controlPoint2: NSPoint(x: 14.38, y: 18.4))
        cloudsunfog2Path.curve(to: NSPoint(x: 18, y: 21), controlPoint1: NSPoint(x: 14.73, y: 20), controlPoint2: NSPoint(x: 16.25, y: 21))
        cloudsunfog2Path.curve(to: NSPoint(x: 22.5, y: 16.5), controlPoint1: NSPoint(x: 20.49, y: 21), controlPoint2: NSPoint(x: 22.5, y: 18.99))
        cloudsunfog2Path.curve(to: NSPoint(x: 22.5, y: 16.4), controlPoint1: NSPoint(x: 22.5, y: 16.47), controlPoint2: NSPoint(x: 22.5, y: 16.43))
        cloudsunfog2Path.line(to: NSPoint(x: 22.5, y: 16.4))
        cloudsunfog2Path.curve(to: NSPoint(x: 20, y: 17), controlPoint1: NSPoint(x: 21.75, y: 16.78), controlPoint2: NSPoint(x: 20.9, y: 17))
        cloudsunfog2Path.curve(to: NSPoint(x: 17.11, y: 16.18), controlPoint1: NSPoint(x: 18.94, y: 17), controlPoint2: NSPoint(x: 17.95, y: 16.7))
        cloudsunfog2Path.curve(to: NSPoint(x: 16.4, y: 17), controlPoint1: NSPoint(x: 16.9, y: 16.47), controlPoint2: NSPoint(x: 16.66, y: 16.75))
        cloudsunfog2Path.line(to: NSPoint(x: 6.6, y: 17))
        cloudsunfog2Path.line(to: NSPoint(x: 6.6, y: 17))
        cloudsunfog2Path.line(to: NSPoint(x: 6.6, y: 17))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 5.17, y: 15))
        cloudsunfog2Path.curve(to: NSPoint(x: 4.79, y: 14), controlPoint1: NSPoint(x: 5.02, y: 14.68), controlPoint2: NSPoint(x: 4.89, y: 14.35))
        cloudsunfog2Path.line(to: NSPoint(x: 4.79, y: 14))
        cloudsunfog2Path.line(to: NSPoint(x: 24.9, y: 14))
        cloudsunfog2Path.curve(to: NSPoint(x: 24.24, y: 15), controlPoint1: NSPoint(x: 24.72, y: 14.36), controlPoint2: NSPoint(x: 24.5, y: 14.69))
        cloudsunfog2Path.line(to: NSPoint(x: 5.17, y: 15))
        cloudsunfog2Path.line(to: NSPoint(x: 5.17, y: 15))
        cloudsunfog2Path.line(to: NSPoint(x: 5.17, y: 15))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 4.57, y: 13))
        cloudsunfog2Path.curve(to: NSPoint(x: 4.5, y: 12), controlPoint1: NSPoint(x: 4.52, y: 12.67), controlPoint2: NSPoint(x: 4.5, y: 12.34))
        cloudsunfog2Path.line(to: NSPoint(x: 4.5, y: 12))
        cloudsunfog2Path.line(to: NSPoint(x: 25.48, y: 12))
        cloudsunfog2Path.curve(to: NSPoint(x: 25.29, y: 13), controlPoint1: NSPoint(x: 25.45, y: 12.34), controlPoint2: NSPoint(x: 25.38, y: 12.68))
        cloudsunfog2Path.line(to: NSPoint(x: 4.57, y: 13))
        cloudsunfog2Path.line(to: NSPoint(x: 4.57, y: 13))
        cloudsunfog2Path.line(to: NSPoint(x: 4.57, y: 13))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 3.5, y: 11))
        cloudsunfog2Path.curve(to: NSPoint(x: 2.5, y: 10), controlPoint1: NSPoint(x: 3.12, y: 10.72), controlPoint2: NSPoint(x: 2.79, y: 10.38))
        cloudsunfog2Path.line(to: NSPoint(x: 2.5, y: 10))
        cloudsunfog2Path.line(to: NSPoint(x: 27.5, y: 10))
        cloudsunfog2Path.curve(to: NSPoint(x: 26.5, y: 11), controlPoint1: NSPoint(x: 27.22, y: 10.38), controlPoint2: NSPoint(x: 26.88, y: 10.72))
        cloudsunfog2Path.line(to: NSPoint(x: 26.5, y: 11))
        cloudsunfog2Path.line(to: NSPoint(x: 3.5, y: 11))
        cloudsunfog2Path.line(to: NSPoint(x: 3.5, y: 11))
        cloudsunfog2Path.line(to: NSPoint(x: 3.5, y: 11))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 2.5, y: 4))
        cloudsunfog2Path.curve(to: NSPoint(x: 1.92, y: 5), controlPoint1: NSPoint(x: 2.27, y: 4.31), controlPoint2: NSPoint(x: 2.07, y: 4.64))
        cloudsunfog2Path.line(to: NSPoint(x: 1.92, y: 5))
        cloudsunfog2Path.line(to: NSPoint(x: 28.08, y: 5))
        cloudsunfog2Path.curve(to: NSPoint(x: 27.5, y: 4), controlPoint1: NSPoint(x: 27.93, y: 4.64), controlPoint2: NSPoint(x: 27.73, y: 4.31))
        cloudsunfog2Path.line(to: NSPoint(x: 2.5, y: 4))
        cloudsunfog2Path.line(to: NSPoint(x: 2.5, y: 4))
        cloudsunfog2Path.line(to: NSPoint(x: 2.5, y: 4))
        cloudsunfog2Path.line(to: NSPoint(x: 2.5, y: 4))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 3.5, y: 3))
        cloudsunfog2Path.curve(to: NSPoint(x: 6.5, y: 2), controlPoint1: NSPoint(x: 4.33, y: 2.37), controlPoint2: NSPoint(x: 5.37, y: 2))
        cloudsunfog2Path.line(to: NSPoint(x: 23.5, y: 2))
        cloudsunfog2Path.curve(to: NSPoint(x: 26.5, y: 3), controlPoint1: NSPoint(x: 24.63, y: 2), controlPoint2: NSPoint(x: 25.66, y: 2.37))
        cloudsunfog2Path.line(to: NSPoint(x: 3.5, y: 3))
        cloudsunfog2Path.line(to: NSPoint(x: 3.5, y: 3))
        cloudsunfog2Path.line(to: NSPoint(x: 3.5, y: 3))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 18, y: 26))
        cloudsunfog2Path.curve(to: NSPoint(x: 17.5, y: 25.5), controlPoint1: NSPoint(x: 17.72, y: 26), controlPoint2: NSPoint(x: 17.5, y: 25.78))
        cloudsunfog2Path.line(to: NSPoint(x: 17.5, y: 23.5))
        cloudsunfog2Path.curve(to: NSPoint(x: 18, y: 23), controlPoint1: NSPoint(x: 17.5, y: 23.22), controlPoint2: NSPoint(x: 17.73, y: 23))
        cloudsunfog2Path.curve(to: NSPoint(x: 18.5, y: 23.5), controlPoint1: NSPoint(x: 18.28, y: 23), controlPoint2: NSPoint(x: 18.5, y: 23.22))
        cloudsunfog2Path.line(to: NSPoint(x: 18.5, y: 25.5))
        cloudsunfog2Path.curve(to: NSPoint(x: 18, y: 26), controlPoint1: NSPoint(x: 18.5, y: 25.78), controlPoint2: NSPoint(x: 18.27, y: 26))
        cloudsunfog2Path.line(to: NSPoint(x: 18, y: 26))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 24.73, y: 23.21))
        cloudsunfog2Path.curve(to: NSPoint(x: 24.03, y: 23.21), controlPoint1: NSPoint(x: 24.54, y: 23.41), controlPoint2: NSPoint(x: 24.23, y: 23.41))
        cloudsunfog2Path.line(to: NSPoint(x: 22.61, y: 21.79))
        cloudsunfog2Path.curve(to: NSPoint(x: 22.61, y: 21.09), controlPoint1: NSPoint(x: 22.42, y: 21.6), controlPoint2: NSPoint(x: 22.42, y: 21.28))
        cloudsunfog2Path.curve(to: NSPoint(x: 23.32, y: 21.09), controlPoint1: NSPoint(x: 22.81, y: 20.89), controlPoint2: NSPoint(x: 23.12, y: 20.89))
        cloudsunfog2Path.line(to: NSPoint(x: 24.74, y: 22.51))
        cloudsunfog2Path.curve(to: NSPoint(x: 24.73, y: 23.21), controlPoint1: NSPoint(x: 24.93, y: 22.7), controlPoint2: NSPoint(x: 24.92, y: 23.02))
        cloudsunfog2Path.line(to: NSPoint(x: 24.73, y: 23.21))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 27.52, y: 16.48))
        cloudsunfog2Path.curve(to: NSPoint(x: 27.03, y: 16.98), controlPoint1: NSPoint(x: 27.52, y: 16.75), controlPoint2: NSPoint(x: 27.31, y: 16.98))
        cloudsunfog2Path.line(to: NSPoint(x: 25.02, y: 16.98))
        cloudsunfog2Path.curve(to: NSPoint(x: 24.52, y: 16.48), controlPoint1: NSPoint(x: 24.74, y: 16.98), controlPoint2: NSPoint(x: 24.52, y: 16.75))
        cloudsunfog2Path.curve(to: NSPoint(x: 25.02, y: 15.98), controlPoint1: NSPoint(x: 24.52, y: 16.2), controlPoint2: NSPoint(x: 24.74, y: 15.98))
        cloudsunfog2Path.line(to: NSPoint(x: 27.03, y: 15.98))
        cloudsunfog2Path.curve(to: NSPoint(x: 27.52, y: 16.48), controlPoint1: NSPoint(x: 27.3, y: 15.98), controlPoint2: NSPoint(x: 27.52, y: 16.21))
        cloudsunfog2Path.line(to: NSPoint(x: 27.52, y: 16.48))
        cloudsunfog2Path.close()
        cloudsunfog2Path.move(to: NSPoint(x: 11.27, y: 23.21))
        cloudsunfog2Path.curve(to: NSPoint(x: 11.26, y: 22.51), controlPoint1: NSPoint(x: 11.07, y: 23.02), controlPoint2: NSPoint(x: 11.07, y: 22.7))
        cloudsunfog2Path.line(to: NSPoint(x: 12.68, y: 21.09))
        cloudsunfog2Path.curve(to: NSPoint(x: 13.39, y: 21.09), controlPoint1: NSPoint(x: 12.88, y: 20.89), controlPoint2: NSPoint(x: 13.2, y: 20.9))
        cloudsunfog2Path.curve(to: NSPoint(x: 13.39, y: 21.79), controlPoint1: NSPoint(x: 13.58, y: 21.29), controlPoint2: NSPoint(x: 13.59, y: 21.6))
        cloudsunfog2Path.line(to: NSPoint(x: 11.97, y: 23.21))
        cloudsunfog2Path.curve(to: NSPoint(x: 11.27, y: 23.21), controlPoint1: NSPoint(x: 11.78, y: 23.41), controlPoint2: NSPoint(x: 11.46, y: 23.4))
        cloudsunfog2Path.line(to: NSPoint(x: 11.27, y: 23.21))
        cloudsunfog2Path.close()
        cloudsunfog2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudsunfog2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudMoonFog(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-26-cloud-moon-fog
        //// cloud-moon-fog 2 Drawing
        let cloudmoonfog2Path = NSBezierPath()
        cloudmoonfog2Path.move(to: NSPoint(x: 1.6, y: 9.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 1.92, y: 10.5), controlPoint1: NSPoint(x: 1.67, y: 9.85), controlPoint2: NSPoint(x: 1.78, y: 10.18))
        cloudmoonfog2Path.line(to: NSPoint(x: 1.92, y: 10.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 28.08, y: 10.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 28.4, y: 9.5), controlPoint1: NSPoint(x: 28.22, y: 10.18), controlPoint2: NSPoint(x: 28.33, y: 9.85))
        cloudmoonfog2Path.line(to: NSPoint(x: 1.6, y: 9.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 1.6, y: 9.5))
        cloudmoonfog2Path.close()
        cloudmoonfog2Path.move(to: NSPoint(x: 1.5, y: 8.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 1.6, y: 7.5), controlPoint1: NSPoint(x: 1.5, y: 8.16), controlPoint2: NSPoint(x: 1.53, y: 7.82))
        cloudmoonfog2Path.line(to: NSPoint(x: 1.6, y: 7.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 28.4, y: 7.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 28.5, y: 8.5), controlPoint1: NSPoint(x: 28.47, y: 7.82), controlPoint2: NSPoint(x: 28.5, y: 8.16))
        cloudmoonfog2Path.line(to: NSPoint(x: 1.5, y: 8.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 1.5, y: 8.5))
        cloudmoonfog2Path.close()
        cloudmoonfog2Path.move(to: NSPoint(x: 6.6, y: 18.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 5.75, y: 17.5), controlPoint1: NSPoint(x: 6.29, y: 18.19), controlPoint2: NSPoint(x: 6.01, y: 17.86))
        cloudmoonfog2Path.line(to: NSPoint(x: 5.75, y: 17.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 24.24, y: 17.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 25.34, y: 19.66), controlPoint1: NSPoint(x: 24.76, y: 18.12), controlPoint2: NSPoint(x: 25.14, y: 18.86))
        cloudmoonfog2Path.curve(to: NSPoint(x: 25.49, y: 20.75), controlPoint1: NSPoint(x: 25.42, y: 20.01), controlPoint2: NSPoint(x: 25.48, y: 20.38))
        cloudmoonfog2Path.curve(to: NSPoint(x: 24, y: 20.5), controlPoint1: NSPoint(x: 25.03, y: 20.59), controlPoint2: NSPoint(x: 24.52, y: 20.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 19.5, y: 25), controlPoint1: NSPoint(x: 21.51, y: 20.5), controlPoint2: NSPoint(x: 19.5, y: 22.51))
        cloudmoonfog2Path.curve(to: NSPoint(x: 19.75, y: 26.49), controlPoint1: NSPoint(x: 19.5, y: 25.52), controlPoint2: NSPoint(x: 19.59, y: 26.03))
        cloudmoonfog2Path.curve(to: NSPoint(x: 18.66, y: 26.34), controlPoint1: NSPoint(x: 19.38, y: 26.48), controlPoint2: NSPoint(x: 19.01, y: 26.42))
        cloudmoonfog2Path.curve(to: NSPoint(x: 14.5, y: 21), controlPoint1: NSPoint(x: 16.27, y: 25.74), controlPoint2: NSPoint(x: 14.5, y: 23.58))
        cloudmoonfog2Path.curve(to: NSPoint(x: 14.64, y: 19.76), controlPoint1: NSPoint(x: 14.5, y: 20.57), controlPoint2: NSPoint(x: 14.55, y: 20.16))
        cloudmoonfog2Path.curve(to: NSPoint(x: 11.5, y: 20.5), controlPoint1: NSPoint(x: 13.7, y: 20.23), controlPoint2: NSPoint(x: 12.63, y: 20.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 7.89, y: 19.5), controlPoint1: NSPoint(x: 10.18, y: 20.5), controlPoint2: NSPoint(x: 8.95, y: 20.13))
        cloudmoonfog2Path.line(to: NSPoint(x: 15.76, y: 19.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 15.5, y: 21), controlPoint1: NSPoint(x: 15.59, y: 19.97), controlPoint2: NSPoint(x: 15.5, y: 20.47))
        cloudmoonfog2Path.curve(to: NSPoint(x: 18.51, y: 25.25), controlPoint1: NSPoint(x: 15.5, y: 22.96), controlPoint2: NSPoint(x: 16.75, y: 24.63))
        cloudmoonfog2Path.curve(to: NSPoint(x: 18.5, y: 25), controlPoint1: NSPoint(x: 18.5, y: 25.16), controlPoint2: NSPoint(x: 18.5, y: 25.08))
        cloudmoonfog2Path.curve(to: NSPoint(x: 24, y: 19.5), controlPoint1: NSPoint(x: 18.5, y: 21.96), controlPoint2: NSPoint(x: 20.96, y: 19.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 24.25, y: 19.51), controlPoint1: NSPoint(x: 24.08, y: 19.5), controlPoint2: NSPoint(x: 24.16, y: 19.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 22.98, y: 17.63), controlPoint1: NSPoint(x: 23.99, y: 18.77), controlPoint2: NSPoint(x: 23.55, y: 18.13))
        cloudmoonfog2Path.line(to: NSPoint(x: 22.98, y: 17.63))
        cloudmoonfog2Path.curve(to: NSPoint(x: 20, y: 18.5), controlPoint1: NSPoint(x: 22.12, y: 18.18), controlPoint2: NSPoint(x: 21.1, y: 18.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 17.11, y: 17.68), controlPoint1: NSPoint(x: 18.94, y: 18.5), controlPoint2: NSPoint(x: 17.95, y: 18.2))
        cloudmoonfog2Path.curve(to: NSPoint(x: 16.4, y: 18.5), controlPoint1: NSPoint(x: 16.9, y: 17.97), controlPoint2: NSPoint(x: 16.66, y: 18.25))
        cloudmoonfog2Path.line(to: NSPoint(x: 6.6, y: 18.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 6.6, y: 18.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 6.6, y: 18.5))
        cloudmoonfog2Path.close()
        cloudmoonfog2Path.move(to: NSPoint(x: 5.17, y: 16.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 4.79, y: 15.5), controlPoint1: NSPoint(x: 5.02, y: 16.18), controlPoint2: NSPoint(x: 4.89, y: 15.85))
        cloudmoonfog2Path.line(to: NSPoint(x: 4.79, y: 15.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 24.9, y: 15.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 24.24, y: 16.5), controlPoint1: NSPoint(x: 24.72, y: 15.86), controlPoint2: NSPoint(x: 24.5, y: 16.19))
        cloudmoonfog2Path.line(to: NSPoint(x: 5.17, y: 16.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 5.17, y: 16.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 5.17, y: 16.5))
        cloudmoonfog2Path.close()
        cloudmoonfog2Path.move(to: NSPoint(x: 4.57, y: 14.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 4.5, y: 13.5), controlPoint1: NSPoint(x: 4.52, y: 14.17), controlPoint2: NSPoint(x: 4.5, y: 13.84))
        cloudmoonfog2Path.line(to: NSPoint(x: 4.5, y: 13.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 25.48, y: 13.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 25.29, y: 14.5), controlPoint1: NSPoint(x: 25.45, y: 13.84), controlPoint2: NSPoint(x: 25.38, y: 14.18))
        cloudmoonfog2Path.line(to: NSPoint(x: 4.57, y: 14.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 4.57, y: 14.5))
        cloudmoonfog2Path.close()
        cloudmoonfog2Path.move(to: NSPoint(x: 3.5, y: 12.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 2.5, y: 11.5), controlPoint1: NSPoint(x: 3.12, y: 12.22), controlPoint2: NSPoint(x: 2.79, y: 11.88))
        cloudmoonfog2Path.line(to: NSPoint(x: 2.5, y: 11.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 27.5, y: 11.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 26.5, y: 12.5), controlPoint1: NSPoint(x: 27.22, y: 11.88), controlPoint2: NSPoint(x: 26.88, y: 12.22))
        cloudmoonfog2Path.line(to: NSPoint(x: 26.5, y: 12.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 3.5, y: 12.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 3.5, y: 12.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 3.5, y: 12.5))
        cloudmoonfog2Path.close()
        cloudmoonfog2Path.move(to: NSPoint(x: 2.5, y: 5.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 1.92, y: 6.5), controlPoint1: NSPoint(x: 2.27, y: 5.81), controlPoint2: NSPoint(x: 2.07, y: 6.14))
        cloudmoonfog2Path.line(to: NSPoint(x: 1.92, y: 6.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 28.08, y: 6.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 27.5, y: 5.5), controlPoint1: NSPoint(x: 27.93, y: 6.14), controlPoint2: NSPoint(x: 27.73, y: 5.81))
        cloudmoonfog2Path.line(to: NSPoint(x: 2.5, y: 5.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 2.5, y: 5.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 2.5, y: 5.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 2.5, y: 5.5))
        cloudmoonfog2Path.close()
        cloudmoonfog2Path.move(to: NSPoint(x: 3.5, y: 4.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 6.5, y: 3.5), controlPoint1: NSPoint(x: 4.33, y: 3.87), controlPoint2: NSPoint(x: 5.37, y: 3.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 23.5, y: 3.5))
        cloudmoonfog2Path.curve(to: NSPoint(x: 26.5, y: 4.5), controlPoint1: NSPoint(x: 24.63, y: 3.5), controlPoint2: NSPoint(x: 25.66, y: 3.87))
        cloudmoonfog2Path.line(to: NSPoint(x: 3.5, y: 4.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 3.5, y: 4.5))
        cloudmoonfog2Path.line(to: NSPoint(x: 3.5, y: 4.5))
        cloudmoonfog2Path.close()
        cloudmoonfog2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        cloudmoonfog2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonStars(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-27-moon-stars
        //// moon-stars 2 Drawing
        let moonstars2Path = NSBezierPath()
        moonstars2Path.move(to: NSPoint(x: 16.91, y: 19.93))
        moonstars2Path.line(to: NSPoint(x: 15.7, y: 16.69))
        moonstars2Path.line(to: NSPoint(x: 14.49, y: 19.93))
        moonstars2Path.line(to: NSPoint(x: 12.2, y: 20.69))
        moonstars2Path.line(to: NSPoint(x: 14.49, y: 21.46))
        moonstars2Path.line(to: NSPoint(x: 15.7, y: 24.69))
        moonstars2Path.line(to: NSPoint(x: 16.91, y: 21.46))
        moonstars2Path.line(to: NSPoint(x: 19.2, y: 20.69))
        moonstars2Path.line(to: NSPoint(x: 16.91, y: 19.93))
        moonstars2Path.line(to: NSPoint(x: 16.91, y: 19.93))
        moonstars2Path.line(to: NSPoint(x: 16.91, y: 19.93))
        moonstars2Path.close()
        moonstars2Path.move(to: NSPoint(x: 20.91, y: 13.46))
        moonstars2Path.line(to: NSPoint(x: 19.7, y: 16.69))
        moonstars2Path.line(to: NSPoint(x: 18.49, y: 13.46))
        moonstars2Path.line(to: NSPoint(x: 16.2, y: 12.69))
        moonstars2Path.line(to: NSPoint(x: 18.49, y: 11.93))
        moonstars2Path.line(to: NSPoint(x: 19.7, y: 8.69))
        moonstars2Path.line(to: NSPoint(x: 20.91, y: 11.93))
        moonstars2Path.line(to: NSPoint(x: 23.2, y: 12.69))
        moonstars2Path.line(to: NSPoint(x: 20.91, y: 13.46))
        moonstars2Path.line(to: NSPoint(x: 20.91, y: 13.46))
        moonstars2Path.line(to: NSPoint(x: 20.91, y: 13.46))
        moonstars2Path.close()
        moonstars2Path.move(to: NSPoint(x: 13.54, y: 9.36))
        moonstars2Path.curve(to: NSPoint(x: 8.2, y: 5.2), controlPoint1: NSPoint(x: 12.94, y: 6.97), controlPoint2: NSPoint(x: 10.78, y: 5.2))
        moonstars2Path.curve(to: NSPoint(x: 2.7, y: 10.7), controlPoint1: NSPoint(x: 5.16, y: 5.2), controlPoint2: NSPoint(x: 2.7, y: 7.66))
        moonstars2Path.curve(to: NSPoint(x: 6.86, y: 16.04), controlPoint1: NSPoint(x: 2.7, y: 13.28), controlPoint2: NSPoint(x: 4.47, y: 15.44))
        moonstars2Path.curve(to: NSPoint(x: 7.95, y: 16.19), controlPoint1: NSPoint(x: 7.21, y: 16.12), controlPoint2: NSPoint(x: 7.58, y: 16.18))
        moonstars2Path.curve(to: NSPoint(x: 7.7, y: 14.7), controlPoint1: NSPoint(x: 7.79, y: 15.73), controlPoint2: NSPoint(x: 7.7, y: 15.22))
        moonstars2Path.curve(to: NSPoint(x: 12.2, y: 10.2), controlPoint1: NSPoint(x: 7.7, y: 12.21), controlPoint2: NSPoint(x: 9.71, y: 10.2))
        moonstars2Path.curve(to: NSPoint(x: 13.69, y: 10.45), controlPoint1: NSPoint(x: 12.72, y: 10.2), controlPoint2: NSPoint(x: 13.23, y: 10.29))
        moonstars2Path.curve(to: NSPoint(x: 13.54, y: 9.36), controlPoint1: NSPoint(x: 13.68, y: 10.08), controlPoint2: NSPoint(x: 13.62, y: 9.71))
        moonstars2Path.line(to: NSPoint(x: 13.54, y: 9.36))
        moonstars2Path.close()
        moonstars2Path.move(to: NSPoint(x: 25.57, y: 19.27))
        moonstars2Path.line(to: NSPoint(x: 27.2, y: 18.69))
        moonstars2Path.line(to: NSPoint(x: 25.57, y: 18.12))
        moonstars2Path.line(to: NSPoint(x: 24.7, y: 15.69))
        moonstars2Path.line(to: NSPoint(x: 23.83, y: 18.12))
        moonstars2Path.line(to: NSPoint(x: 22.2, y: 18.69))
        moonstars2Path.line(to: NSPoint(x: 23.83, y: 19.27))
        moonstars2Path.line(to: NSPoint(x: 24.7, y: 21.69))
        moonstars2Path.line(to: NSPoint(x: 25.57, y: 19.27))
        moonstars2Path.line(to: NSPoint(x: 25.57, y: 19.27))
        moonstars2Path.close()
        moonstars2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        moonstars2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoon(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-28-moon
        //// moon 3 Drawing
        let moon3Path = NSBezierPath()
        moon3Path.move(to: NSPoint(x: 20.34, y: 13.66))
        moon3Path.curve(to: NSPoint(x: 15, y: 9.5), controlPoint1: NSPoint(x: 19.74, y: 11.27), controlPoint2: NSPoint(x: 17.58, y: 9.5))
        moon3Path.curve(to: NSPoint(x: 9.5, y: 15), controlPoint1: NSPoint(x: 11.96, y: 9.5), controlPoint2: NSPoint(x: 9.5, y: 11.96))
        moon3Path.curve(to: NSPoint(x: 13.66, y: 20.34), controlPoint1: NSPoint(x: 9.5, y: 17.58), controlPoint2: NSPoint(x: 11.27, y: 19.74))
        moon3Path.curve(to: NSPoint(x: 14.75, y: 20.49), controlPoint1: NSPoint(x: 14.01, y: 20.42), controlPoint2: NSPoint(x: 14.38, y: 20.48))
        moon3Path.curve(to: NSPoint(x: 14.5, y: 19), controlPoint1: NSPoint(x: 14.59, y: 20.03), controlPoint2: NSPoint(x: 14.5, y: 19.52))
        moon3Path.curve(to: NSPoint(x: 19, y: 14.5), controlPoint1: NSPoint(x: 14.5, y: 16.51), controlPoint2: NSPoint(x: 16.51, y: 14.5))
        moon3Path.curve(to: NSPoint(x: 20.49, y: 14.75), controlPoint1: NSPoint(x: 19.52, y: 14.5), controlPoint2: NSPoint(x: 20.03, y: 14.59))
        moon3Path.curve(to: NSPoint(x: 20.34, y: 13.66), controlPoint1: NSPoint(x: 20.48, y: 14.38), controlPoint2: NSPoint(x: 20.42, y: 14.01))
        moon3Path.close()
        moon3Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        moon3Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSun(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-29-sun
        //// sun 2 Drawing
        let sun2Path = NSBezierPath()
        sun2Path.move(to: NSPoint(x: 15.03, y: 9.56))
        sun2Path.curve(to: NSPoint(x: 20.53, y: 15.06), controlPoint1: NSPoint(x: 18.07, y: 9.56), controlPoint2: NSPoint(x: 20.53, y: 12.02))
        sun2Path.curve(to: NSPoint(x: 15.03, y: 20.56), controlPoint1: NSPoint(x: 20.53, y: 18.1), controlPoint2: NSPoint(x: 18.07, y: 20.56))
        sun2Path.curve(to: NSPoint(x: 9.53, y: 15.06), controlPoint1: NSPoint(x: 11.99, y: 20.56), controlPoint2: NSPoint(x: 9.53, y: 18.1))
        sun2Path.curve(to: NSPoint(x: 15.03, y: 9.56), controlPoint1: NSPoint(x: 9.53, y: 12.02), controlPoint2: NSPoint(x: 11.99, y: 9.56))
        sun2Path.line(to: NSPoint(x: 15.03, y: 9.56))
        sun2Path.close()
        sun2Path.move(to: NSPoint(x: 15.03, y: 24.56))
        sun2Path.curve(to: NSPoint(x: 14.53, y: 24.06), controlPoint1: NSPoint(x: 14.75, y: 24.56), controlPoint2: NSPoint(x: 14.53, y: 24.34))
        sun2Path.line(to: NSPoint(x: 14.53, y: 22.05))
        sun2Path.curve(to: NSPoint(x: 15.03, y: 21.56), controlPoint1: NSPoint(x: 14.53, y: 21.78), controlPoint2: NSPoint(x: 14.76, y: 21.56))
        sun2Path.curve(to: NSPoint(x: 15.53, y: 22.05), controlPoint1: NSPoint(x: 15.31, y: 21.56), controlPoint2: NSPoint(x: 15.53, y: 21.77))
        sun2Path.line(to: NSPoint(x: 15.53, y: 24.06))
        sun2Path.curve(to: NSPoint(x: 15.03, y: 24.56), controlPoint1: NSPoint(x: 15.53, y: 24.34), controlPoint2: NSPoint(x: 15.3, y: 24.56))
        sun2Path.line(to: NSPoint(x: 15.03, y: 24.56))
        sun2Path.close()
        sun2Path.move(to: NSPoint(x: 21.77, y: 21.77))
        sun2Path.curve(to: NSPoint(x: 21.06, y: 21.77), controlPoint1: NSPoint(x: 21.57, y: 21.96), controlPoint2: NSPoint(x: 21.26, y: 21.97))
        sun2Path.line(to: NSPoint(x: 19.64, y: 20.35))
        sun2Path.curve(to: NSPoint(x: 19.65, y: 19.65), controlPoint1: NSPoint(x: 19.45, y: 20.16), controlPoint2: NSPoint(x: 19.46, y: 19.84))
        sun2Path.curve(to: NSPoint(x: 20.35, y: 19.64), controlPoint1: NSPoint(x: 19.84, y: 19.45), controlPoint2: NSPoint(x: 20.15, y: 19.44))
        sun2Path.line(to: NSPoint(x: 21.77, y: 21.06))
        sun2Path.curve(to: NSPoint(x: 21.77, y: 21.77), controlPoint1: NSPoint(x: 21.96, y: 21.26), controlPoint2: NSPoint(x: 21.96, y: 21.58))
        sun2Path.line(to: NSPoint(x: 21.77, y: 21.77))
        sun2Path.close()
        sun2Path.move(to: NSPoint(x: 24.56, y: 15.03))
        sun2Path.curve(to: NSPoint(x: 24.06, y: 15.53), controlPoint1: NSPoint(x: 24.56, y: 15.31), controlPoint2: NSPoint(x: 24.34, y: 15.53))
        sun2Path.line(to: NSPoint(x: 22.05, y: 15.53))
        sun2Path.curve(to: NSPoint(x: 21.56, y: 15.03), controlPoint1: NSPoint(x: 21.78, y: 15.53), controlPoint2: NSPoint(x: 21.56, y: 15.3))
        sun2Path.curve(to: NSPoint(x: 22.05, y: 14.53), controlPoint1: NSPoint(x: 21.56, y: 14.75), controlPoint2: NSPoint(x: 21.77, y: 14.53))
        sun2Path.line(to: NSPoint(x: 24.06, y: 14.53))
        sun2Path.curve(to: NSPoint(x: 24.56, y: 15.03), controlPoint1: NSPoint(x: 24.34, y: 14.53), controlPoint2: NSPoint(x: 24.56, y: 14.76))
        sun2Path.line(to: NSPoint(x: 24.56, y: 15.03))
        sun2Path.close()
        sun2Path.move(to: NSPoint(x: 21.77, y: 8.29))
        sun2Path.curve(to: NSPoint(x: 21.77, y: 8.99), controlPoint1: NSPoint(x: 21.96, y: 8.49), controlPoint2: NSPoint(x: 21.97, y: 8.8))
        sun2Path.line(to: NSPoint(x: 20.35, y: 10.42))
        sun2Path.curve(to: NSPoint(x: 19.65, y: 10.41), controlPoint1: NSPoint(x: 20.16, y: 10.61), controlPoint2: NSPoint(x: 19.84, y: 10.6))
        sun2Path.curve(to: NSPoint(x: 19.64, y: 9.71), controlPoint1: NSPoint(x: 19.45, y: 10.22), controlPoint2: NSPoint(x: 19.44, y: 9.91))
        sun2Path.line(to: NSPoint(x: 21.06, y: 8.29))
        sun2Path.curve(to: NSPoint(x: 21.77, y: 8.29), controlPoint1: NSPoint(x: 21.26, y: 8.09), controlPoint2: NSPoint(x: 21.58, y: 8.1))
        sun2Path.line(to: NSPoint(x: 21.77, y: 8.29))
        sun2Path.close()
        sun2Path.move(to: NSPoint(x: 15.03, y: 5.5))
        sun2Path.curve(to: NSPoint(x: 15.53, y: 6), controlPoint1: NSPoint(x: 15.31, y: 5.5), controlPoint2: NSPoint(x: 15.53, y: 5.72))
        sun2Path.line(to: NSPoint(x: 15.53, y: 8))
        sun2Path.curve(to: NSPoint(x: 15.03, y: 8.5), controlPoint1: NSPoint(x: 15.53, y: 8.28), controlPoint2: NSPoint(x: 15.3, y: 8.5))
        sun2Path.curve(to: NSPoint(x: 14.53, y: 8), controlPoint1: NSPoint(x: 14.75, y: 8.5), controlPoint2: NSPoint(x: 14.53, y: 8.28))
        sun2Path.line(to: NSPoint(x: 14.53, y: 6))
        sun2Path.curve(to: NSPoint(x: 15.03, y: 5.5), controlPoint1: NSPoint(x: 14.53, y: 5.72), controlPoint2: NSPoint(x: 14.76, y: 5.5))
        sun2Path.line(to: NSPoint(x: 15.03, y: 5.5))
        sun2Path.close()
        sun2Path.move(to: NSPoint(x: 8.29, y: 8.29))
        sun2Path.curve(to: NSPoint(x: 8.99, y: 8.29), controlPoint1: NSPoint(x: 8.49, y: 8.1), controlPoint2: NSPoint(x: 8.8, y: 8.09))
        sun2Path.line(to: NSPoint(x: 10.42, y: 9.71))
        sun2Path.curve(to: NSPoint(x: 10.41, y: 10.41), controlPoint1: NSPoint(x: 10.61, y: 9.9), controlPoint2: NSPoint(x: 10.6, y: 10.22))
        sun2Path.curve(to: NSPoint(x: 9.71, y: 10.42), controlPoint1: NSPoint(x: 10.22, y: 10.61), controlPoint2: NSPoint(x: 9.91, y: 10.61))
        sun2Path.line(to: NSPoint(x: 8.29, y: 8.99))
        sun2Path.curve(to: NSPoint(x: 8.29, y: 8.29), controlPoint1: NSPoint(x: 8.09, y: 8.8), controlPoint2: NSPoint(x: 8.1, y: 8.48))
        sun2Path.line(to: NSPoint(x: 8.29, y: 8.29))
        sun2Path.close()
        sun2Path.move(to: NSPoint(x: 5.5, y: 15.03))
        sun2Path.curve(to: NSPoint(x: 6, y: 14.53), controlPoint1: NSPoint(x: 5.5, y: 14.75), controlPoint2: NSPoint(x: 5.72, y: 14.53))
        sun2Path.line(to: NSPoint(x: 8, y: 14.53))
        sun2Path.curve(to: NSPoint(x: 8.5, y: 15.03), controlPoint1: NSPoint(x: 8.28, y: 14.53), controlPoint2: NSPoint(x: 8.5, y: 14.76))
        sun2Path.curve(to: NSPoint(x: 8, y: 15.53), controlPoint1: NSPoint(x: 8.5, y: 15.31), controlPoint2: NSPoint(x: 8.28, y: 15.53))
        sun2Path.line(to: NSPoint(x: 6, y: 15.53))
        sun2Path.curve(to: NSPoint(x: 5.5, y: 15.03), controlPoint1: NSPoint(x: 5.72, y: 15.53), controlPoint2: NSPoint(x: 5.5, y: 15.3))
        sun2Path.line(to: NSPoint(x: 5.5, y: 15.03))
        sun2Path.close()
        sun2Path.move(to: NSPoint(x: 8.29, y: 21.77))
        sun2Path.curve(to: NSPoint(x: 8.29, y: 21.06), controlPoint1: NSPoint(x: 8.1, y: 21.57), controlPoint2: NSPoint(x: 8.09, y: 21.26))
        sun2Path.line(to: NSPoint(x: 9.71, y: 19.64))
        sun2Path.curve(to: NSPoint(x: 10.41, y: 19.65), controlPoint1: NSPoint(x: 9.9, y: 19.45), controlPoint2: NSPoint(x: 10.22, y: 19.46))
        sun2Path.curve(to: NSPoint(x: 10.42, y: 20.35), controlPoint1: NSPoint(x: 10.61, y: 19.84), controlPoint2: NSPoint(x: 10.61, y: 20.15))
        sun2Path.line(to: NSPoint(x: 8.99, y: 21.77))
        sun2Path.curve(to: NSPoint(x: 8.29, y: 21.77), controlPoint1: NSPoint(x: 8.8, y: 21.96), controlPoint2: NSPoint(x: 8.48, y: 21.96))
        sun2Path.line(to: NSPoint(x: 8.29, y: 21.77))
        sun2Path.close()
        sun2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        sun2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSunrise(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-30-sunrise
        //// sunrise 2 Drawing
        let sunrise2Path = NSBezierPath()
        sunrise2Path.move(to: NSPoint(x: 12.11, y: 11.5))
        sunrise2Path.line(to: NSPoint(x: 9.55, y: 11.5))
        sunrise2Path.curve(to: NSPoint(x: 9.53, y: 12), controlPoint1: NSPoint(x: 9.54, y: 11.66), controlPoint2: NSPoint(x: 9.53, y: 11.83))
        sunrise2Path.curve(to: NSPoint(x: 15.03, y: 17.5), controlPoint1: NSPoint(x: 9.53, y: 15.04), controlPoint2: NSPoint(x: 11.99, y: 17.5))
        sunrise2Path.curve(to: NSPoint(x: 20.53, y: 12), controlPoint1: NSPoint(x: 18.07, y: 17.5), controlPoint2: NSPoint(x: 20.53, y: 15.04))
        sunrise2Path.curve(to: NSPoint(x: 20.51, y: 11.5), controlPoint1: NSPoint(x: 20.53, y: 11.83), controlPoint2: NSPoint(x: 20.52, y: 11.66))
        sunrise2Path.line(to: NSPoint(x: 20.51, y: 11.5))
        sunrise2Path.line(to: NSPoint(x: 17.95, y: 11.5))
        sunrise2Path.line(to: NSPoint(x: 15.03, y: 14))
        sunrise2Path.line(to: NSPoint(x: 12.11, y: 11.5))
        sunrise2Path.line(to: NSPoint(x: 12.11, y: 11.5))
        sunrise2Path.line(to: NSPoint(x: 12.11, y: 11.5))
        sunrise2Path.close()
        sunrise2Path.move(to: NSPoint(x: 15.03, y: 21.5))
        sunrise2Path.curve(to: NSPoint(x: 14.53, y: 21), controlPoint1: NSPoint(x: 14.75, y: 21.5), controlPoint2: NSPoint(x: 14.53, y: 21.28))
        sunrise2Path.line(to: NSPoint(x: 14.53, y: 19))
        sunrise2Path.curve(to: NSPoint(x: 15.03, y: 18.5), controlPoint1: NSPoint(x: 14.53, y: 18.72), controlPoint2: NSPoint(x: 14.76, y: 18.5))
        sunrise2Path.curve(to: NSPoint(x: 15.53, y: 19), controlPoint1: NSPoint(x: 15.31, y: 18.5), controlPoint2: NSPoint(x: 15.53, y: 18.72))
        sunrise2Path.line(to: NSPoint(x: 15.53, y: 21))
        sunrise2Path.curve(to: NSPoint(x: 15.03, y: 21.5), controlPoint1: NSPoint(x: 15.53, y: 21.28), controlPoint2: NSPoint(x: 15.3, y: 21.5))
        sunrise2Path.line(to: NSPoint(x: 15.03, y: 21.5))
        sunrise2Path.line(to: NSPoint(x: 15.03, y: 21.5))
        sunrise2Path.close()
        sunrise2Path.move(to: NSPoint(x: 21.77, y: 18.71))
        sunrise2Path.curve(to: NSPoint(x: 21.06, y: 18.71), controlPoint1: NSPoint(x: 21.57, y: 18.9), controlPoint2: NSPoint(x: 21.26, y: 18.91))
        sunrise2Path.line(to: NSPoint(x: 19.64, y: 17.29))
        sunrise2Path.curve(to: NSPoint(x: 19.65, y: 16.59), controlPoint1: NSPoint(x: 19.45, y: 17.1), controlPoint2: NSPoint(x: 19.46, y: 16.78))
        sunrise2Path.curve(to: NSPoint(x: 20.35, y: 16.58), controlPoint1: NSPoint(x: 19.84, y: 16.39), controlPoint2: NSPoint(x: 20.15, y: 16.39))
        sunrise2Path.line(to: NSPoint(x: 21.77, y: 18.01))
        sunrise2Path.curve(to: NSPoint(x: 21.77, y: 18.71), controlPoint1: NSPoint(x: 21.96, y: 18.2), controlPoint2: NSPoint(x: 21.96, y: 18.52))
        sunrise2Path.line(to: NSPoint(x: 21.77, y: 18.71))
        sunrise2Path.line(to: NSPoint(x: 21.77, y: 18.71))
        sunrise2Path.close()
        sunrise2Path.move(to: NSPoint(x: 24.56, y: 11.97))
        sunrise2Path.curve(to: NSPoint(x: 24.06, y: 12.47), controlPoint1: NSPoint(x: 24.56, y: 12.25), controlPoint2: NSPoint(x: 24.34, y: 12.47))
        sunrise2Path.line(to: NSPoint(x: 22.05, y: 12.47))
        sunrise2Path.curve(to: NSPoint(x: 21.56, y: 11.97), controlPoint1: NSPoint(x: 21.78, y: 12.47), controlPoint2: NSPoint(x: 21.56, y: 12.24))
        sunrise2Path.curve(to: NSPoint(x: 22.05, y: 11.47), controlPoint1: NSPoint(x: 21.56, y: 11.69), controlPoint2: NSPoint(x: 21.77, y: 11.47))
        sunrise2Path.line(to: NSPoint(x: 24.06, y: 11.47))
        sunrise2Path.curve(to: NSPoint(x: 24.56, y: 11.97), controlPoint1: NSPoint(x: 24.34, y: 11.47), controlPoint2: NSPoint(x: 24.56, y: 11.7))
        sunrise2Path.line(to: NSPoint(x: 24.56, y: 11.97))
        sunrise2Path.line(to: NSPoint(x: 24.56, y: 11.97))
        sunrise2Path.close()
        sunrise2Path.move(to: NSPoint(x: 5.5, y: 11.97))
        sunrise2Path.curve(to: NSPoint(x: 6, y: 11.47), controlPoint1: NSPoint(x: 5.5, y: 11.69), controlPoint2: NSPoint(x: 5.72, y: 11.47))
        sunrise2Path.line(to: NSPoint(x: 8, y: 11.47))
        sunrise2Path.curve(to: NSPoint(x: 8.5, y: 11.97), controlPoint1: NSPoint(x: 8.28, y: 11.47), controlPoint2: NSPoint(x: 8.5, y: 11.7))
        sunrise2Path.curve(to: NSPoint(x: 8, y: 12.47), controlPoint1: NSPoint(x: 8.5, y: 12.25), controlPoint2: NSPoint(x: 8.28, y: 12.47))
        sunrise2Path.line(to: NSPoint(x: 6, y: 12.47))
        sunrise2Path.curve(to: NSPoint(x: 5.5, y: 11.97), controlPoint1: NSPoint(x: 5.72, y: 12.47), controlPoint2: NSPoint(x: 5.5, y: 12.24))
        sunrise2Path.line(to: NSPoint(x: 5.5, y: 11.97))
        sunrise2Path.line(to: NSPoint(x: 5.5, y: 11.97))
        sunrise2Path.close()
        sunrise2Path.move(to: NSPoint(x: 6.07, y: 9.5))
        sunrise2Path.curve(to: NSPoint(x: 5.56, y: 9), controlPoint1: NSPoint(x: 5.79, y: 9.5), controlPoint2: NSPoint(x: 5.56, y: 9.27))
        sunrise2Path.curve(to: NSPoint(x: 6.07, y: 8.5), controlPoint1: NSPoint(x: 5.56, y: 8.72), controlPoint2: NSPoint(x: 5.78, y: 8.5))
        sunrise2Path.line(to: NSPoint(x: 12.14, y: 8.5))
        sunrise2Path.line(to: NSPoint(x: 13.31, y: 9.5))
        sunrise2Path.line(to: NSPoint(x: 15.06, y: 11))
        sunrise2Path.line(to: NSPoint(x: 16.81, y: 9.5))
        sunrise2Path.line(to: NSPoint(x: 17.97, y: 8.5))
        sunrise2Path.line(to: NSPoint(x: 24.05, y: 8.5))
        sunrise2Path.curve(to: NSPoint(x: 24.56, y: 9), controlPoint1: NSPoint(x: 24.33, y: 8.5), controlPoint2: NSPoint(x: 24.56, y: 8.73))
        sunrise2Path.curve(to: NSPoint(x: 24.05, y: 9.5), controlPoint1: NSPoint(x: 24.56, y: 9.28), controlPoint2: NSPoint(x: 24.33, y: 9.5))
        sunrise2Path.line(to: NSPoint(x: 18.56, y: 9.5))
        sunrise2Path.line(to: NSPoint(x: 15.06, y: 12.5))
        sunrise2Path.line(to: NSPoint(x: 11.56, y: 9.5))
        sunrise2Path.line(to: NSPoint(x: 6.07, y: 9.5))
        sunrise2Path.line(to: NSPoint(x: 6.07, y: 9.5))
        sunrise2Path.close()
        sunrise2Path.move(to: NSPoint(x: 8.29, y: 18.71))
        sunrise2Path.curve(to: NSPoint(x: 8.29, y: 18.01), controlPoint1: NSPoint(x: 8.1, y: 18.51), controlPoint2: NSPoint(x: 8.09, y: 18.2))
        sunrise2Path.line(to: NSPoint(x: 9.71, y: 16.58))
        sunrise2Path.curve(to: NSPoint(x: 10.41, y: 16.59), controlPoint1: NSPoint(x: 9.9, y: 16.39), controlPoint2: NSPoint(x: 10.22, y: 16.4))
        sunrise2Path.curve(to: NSPoint(x: 10.42, y: 17.29), controlPoint1: NSPoint(x: 10.61, y: 16.78), controlPoint2: NSPoint(x: 10.61, y: 17.09))
        sunrise2Path.line(to: NSPoint(x: 8.99, y: 18.71))
        sunrise2Path.curve(to: NSPoint(x: 8.29, y: 18.71), controlPoint1: NSPoint(x: 8.8, y: 18.91), controlPoint2: NSPoint(x: 8.48, y: 18.9))
        sunrise2Path.line(to: NSPoint(x: 8.29, y: 18.71))
        sunrise2Path.line(to: NSPoint(x: 8.29, y: 18.71))
        sunrise2Path.close()
        sunrise2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        sunrise2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSunset(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-31-sunset
        //// sunset 4 Drawing
        let sunset4Path = NSBezierPath()
        sunset4Path.move(to: NSPoint(x: 20.51, y: 13))
        sunset4Path.curve(to: NSPoint(x: 20.53, y: 13.5), controlPoint1: NSPoint(x: 20.52, y: 13.16), controlPoint2: NSPoint(x: 20.53, y: 13.33))
        sunset4Path.curve(to: NSPoint(x: 15.03, y: 19), controlPoint1: NSPoint(x: 20.53, y: 16.54), controlPoint2: NSPoint(x: 18.07, y: 19))
        sunset4Path.curve(to: NSPoint(x: 9.53, y: 13.5), controlPoint1: NSPoint(x: 11.99, y: 19), controlPoint2: NSPoint(x: 9.53, y: 16.54))
        sunset4Path.curve(to: NSPoint(x: 9.55, y: 13), controlPoint1: NSPoint(x: 9.53, y: 13.33), controlPoint2: NSPoint(x: 9.54, y: 13.16))
        sunset4Path.line(to: NSPoint(x: 20.51, y: 13))
        sunset4Path.line(to: NSPoint(x: 20.51, y: 13))
        sunset4Path.line(to: NSPoint(x: 20.51, y: 13))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 15.03, y: 23))
        sunset4Path.curve(to: NSPoint(x: 14.53, y: 22.5), controlPoint1: NSPoint(x: 14.75, y: 23), controlPoint2: NSPoint(x: 14.53, y: 22.78))
        sunset4Path.line(to: NSPoint(x: 14.53, y: 20.5))
        sunset4Path.curve(to: NSPoint(x: 15.03, y: 20), controlPoint1: NSPoint(x: 14.53, y: 20.22), controlPoint2: NSPoint(x: 14.76, y: 20))
        sunset4Path.curve(to: NSPoint(x: 15.53, y: 20.5), controlPoint1: NSPoint(x: 15.31, y: 20), controlPoint2: NSPoint(x: 15.53, y: 20.22))
        sunset4Path.line(to: NSPoint(x: 15.53, y: 22.5))
        sunset4Path.curve(to: NSPoint(x: 15.03, y: 23), controlPoint1: NSPoint(x: 15.53, y: 22.78), controlPoint2: NSPoint(x: 15.3, y: 23))
        sunset4Path.line(to: NSPoint(x: 15.03, y: 23))
        sunset4Path.line(to: NSPoint(x: 15.03, y: 23))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 21.77, y: 20.21))
        sunset4Path.curve(to: NSPoint(x: 21.06, y: 20.21), controlPoint1: NSPoint(x: 21.57, y: 20.4), controlPoint2: NSPoint(x: 21.26, y: 20.41))
        sunset4Path.line(to: NSPoint(x: 19.64, y: 18.79))
        sunset4Path.curve(to: NSPoint(x: 19.65, y: 18.09), controlPoint1: NSPoint(x: 19.45, y: 18.6), controlPoint2: NSPoint(x: 19.46, y: 18.28))
        sunset4Path.curve(to: NSPoint(x: 20.35, y: 18.08), controlPoint1: NSPoint(x: 19.84, y: 17.89), controlPoint2: NSPoint(x: 20.15, y: 17.89))
        sunset4Path.line(to: NSPoint(x: 21.77, y: 19.51))
        sunset4Path.curve(to: NSPoint(x: 21.77, y: 20.21), controlPoint1: NSPoint(x: 21.96, y: 19.7), controlPoint2: NSPoint(x: 21.96, y: 20.02))
        sunset4Path.line(to: NSPoint(x: 21.77, y: 20.21))
        sunset4Path.line(to: NSPoint(x: 21.77, y: 20.21))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 24.56, y: 13.47))
        sunset4Path.curve(to: NSPoint(x: 24.06, y: 13.97), controlPoint1: NSPoint(x: 24.56, y: 13.75), controlPoint2: NSPoint(x: 24.34, y: 13.97))
        sunset4Path.line(to: NSPoint(x: 22.05, y: 13.97))
        sunset4Path.curve(to: NSPoint(x: 21.56, y: 13.47), controlPoint1: NSPoint(x: 21.78, y: 13.97), controlPoint2: NSPoint(x: 21.56, y: 13.74))
        sunset4Path.curve(to: NSPoint(x: 22.05, y: 12.97), controlPoint1: NSPoint(x: 21.56, y: 13.19), controlPoint2: NSPoint(x: 21.77, y: 12.97))
        sunset4Path.line(to: NSPoint(x: 24.06, y: 12.97))
        sunset4Path.curve(to: NSPoint(x: 24.56, y: 13.47), controlPoint1: NSPoint(x: 24.34, y: 12.97), controlPoint2: NSPoint(x: 24.56, y: 13.2))
        sunset4Path.line(to: NSPoint(x: 24.56, y: 13.47))
        sunset4Path.line(to: NSPoint(x: 24.56, y: 13.47))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 5.5, y: 13.47))
        sunset4Path.curve(to: NSPoint(x: 6, y: 12.97), controlPoint1: NSPoint(x: 5.5, y: 13.19), controlPoint2: NSPoint(x: 5.72, y: 12.97))
        sunset4Path.line(to: NSPoint(x: 8, y: 12.97))
        sunset4Path.curve(to: NSPoint(x: 8.5, y: 13.47), controlPoint1: NSPoint(x: 8.28, y: 12.97), controlPoint2: NSPoint(x: 8.5, y: 13.2))
        sunset4Path.curve(to: NSPoint(x: 8, y: 13.97), controlPoint1: NSPoint(x: 8.5, y: 13.75), controlPoint2: NSPoint(x: 8.28, y: 13.97))
        sunset4Path.line(to: NSPoint(x: 6, y: 13.97))
        sunset4Path.curve(to: NSPoint(x: 5.5, y: 13.47), controlPoint1: NSPoint(x: 5.72, y: 13.97), controlPoint2: NSPoint(x: 5.5, y: 13.74))
        sunset4Path.line(to: NSPoint(x: 5.5, y: 13.47))
        sunset4Path.line(to: NSPoint(x: 5.5, y: 13.47))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 8.29, y: 20.21))
        sunset4Path.curve(to: NSPoint(x: 8.29, y: 19.51), controlPoint1: NSPoint(x: 8.1, y: 20.01), controlPoint2: NSPoint(x: 8.09, y: 19.7))
        sunset4Path.line(to: NSPoint(x: 9.71, y: 18.08))
        sunset4Path.curve(to: NSPoint(x: 10.41, y: 18.09), controlPoint1: NSPoint(x: 9.9, y: 17.89), controlPoint2: NSPoint(x: 10.22, y: 17.9))
        sunset4Path.curve(to: NSPoint(x: 10.42, y: 18.79), controlPoint1: NSPoint(x: 10.61, y: 18.28), controlPoint2: NSPoint(x: 10.61, y: 18.59))
        sunset4Path.line(to: NSPoint(x: 8.99, y: 20.21))
        sunset4Path.curve(to: NSPoint(x: 8.29, y: 20.21), controlPoint1: NSPoint(x: 8.8, y: 20.41), controlPoint2: NSPoint(x: 8.48, y: 20.4))
        sunset4Path.line(to: NSPoint(x: 8.29, y: 20.21))
        sunset4Path.line(to: NSPoint(x: 8.29, y: 20.21))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 6.07, y: 10))
        sunset4Path.curve(to: NSPoint(x: 5.56, y: 10.5), controlPoint1: NSPoint(x: 5.79, y: 10), controlPoint2: NSPoint(x: 5.56, y: 10.23))
        sunset4Path.curve(to: NSPoint(x: 6.07, y: 11), controlPoint1: NSPoint(x: 5.56, y: 10.78), controlPoint2: NSPoint(x: 5.78, y: 11))
        sunset4Path.line(to: NSPoint(x: 12.14, y: 11))
        sunset4Path.line(to: NSPoint(x: 13.31, y: 10))
        sunset4Path.line(to: NSPoint(x: 15.06, y: 8.5))
        sunset4Path.line(to: NSPoint(x: 16.81, y: 10))
        sunset4Path.line(to: NSPoint(x: 17.97, y: 11))
        sunset4Path.line(to: NSPoint(x: 24.05, y: 11))
        sunset4Path.curve(to: NSPoint(x: 24.56, y: 10.5), controlPoint1: NSPoint(x: 24.33, y: 11), controlPoint2: NSPoint(x: 24.56, y: 10.77))
        sunset4Path.curve(to: NSPoint(x: 24.05, y: 10), controlPoint1: NSPoint(x: 24.56, y: 10.22), controlPoint2: NSPoint(x: 24.33, y: 10))
        sunset4Path.line(to: NSPoint(x: 18.56, y: 10))
        sunset4Path.line(to: NSPoint(x: 15.06, y: 7))
        sunset4Path.line(to: NSPoint(x: 11.56, y: 10))
        sunset4Path.line(to: NSPoint(x: 6.07, y: 10))
        sunset4Path.line(to: NSPoint(x: 6.07, y: 10))
        sunset4Path.close()
        sunset4Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        sunset4Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSunset2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-32-sunset
        //// sunset 4 Drawing
        let sunset4Path = NSBezierPath()
        sunset4Path.move(to: NSPoint(x: 20.51, y: 11.5))
        sunset4Path.curve(to: NSPoint(x: 20.53, y: 12), controlPoint1: NSPoint(x: 20.52, y: 11.66), controlPoint2: NSPoint(x: 20.53, y: 11.83))
        sunset4Path.curve(to: NSPoint(x: 15.03, y: 17.5), controlPoint1: NSPoint(x: 20.53, y: 15.04), controlPoint2: NSPoint(x: 18.07, y: 17.5))
        sunset4Path.curve(to: NSPoint(x: 9.53, y: 12), controlPoint1: NSPoint(x: 11.99, y: 17.5), controlPoint2: NSPoint(x: 9.53, y: 15.04))
        sunset4Path.curve(to: NSPoint(x: 9.55, y: 11.5), controlPoint1: NSPoint(x: 9.53, y: 11.83), controlPoint2: NSPoint(x: 9.54, y: 11.66))
        sunset4Path.line(to: NSPoint(x: 20.51, y: 11.5))
        sunset4Path.line(to: NSPoint(x: 20.51, y: 11.5))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 15.03, y: 21.5))
        sunset4Path.curve(to: NSPoint(x: 14.53, y: 21), controlPoint1: NSPoint(x: 14.75, y: 21.5), controlPoint2: NSPoint(x: 14.53, y: 21.28))
        sunset4Path.line(to: NSPoint(x: 14.53, y: 19))
        sunset4Path.curve(to: NSPoint(x: 15.03, y: 18.5), controlPoint1: NSPoint(x: 14.53, y: 18.72), controlPoint2: NSPoint(x: 14.76, y: 18.5))
        sunset4Path.curve(to: NSPoint(x: 15.53, y: 19), controlPoint1: NSPoint(x: 15.31, y: 18.5), controlPoint2: NSPoint(x: 15.53, y: 18.72))
        sunset4Path.line(to: NSPoint(x: 15.53, y: 21))
        sunset4Path.curve(to: NSPoint(x: 15.03, y: 21.5), controlPoint1: NSPoint(x: 15.53, y: 21.28), controlPoint2: NSPoint(x: 15.3, y: 21.5))
        sunset4Path.line(to: NSPoint(x: 15.03, y: 21.5))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 21.77, y: 18.71))
        sunset4Path.curve(to: NSPoint(x: 21.06, y: 18.71), controlPoint1: NSPoint(x: 21.57, y: 18.9), controlPoint2: NSPoint(x: 21.26, y: 18.91))
        sunset4Path.line(to: NSPoint(x: 19.64, y: 17.29))
        sunset4Path.curve(to: NSPoint(x: 19.65, y: 16.59), controlPoint1: NSPoint(x: 19.45, y: 17.1), controlPoint2: NSPoint(x: 19.46, y: 16.78))
        sunset4Path.curve(to: NSPoint(x: 20.35, y: 16.58), controlPoint1: NSPoint(x: 19.84, y: 16.39), controlPoint2: NSPoint(x: 20.15, y: 16.39))
        sunset4Path.line(to: NSPoint(x: 21.77, y: 18.01))
        sunset4Path.curve(to: NSPoint(x: 21.77, y: 18.71), controlPoint1: NSPoint(x: 21.96, y: 18.2), controlPoint2: NSPoint(x: 21.96, y: 18.52))
        sunset4Path.line(to: NSPoint(x: 21.77, y: 18.71))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 24.56, y: 11.97))
        sunset4Path.curve(to: NSPoint(x: 24.06, y: 12.47), controlPoint1: NSPoint(x: 24.56, y: 12.25), controlPoint2: NSPoint(x: 24.34, y: 12.47))
        sunset4Path.line(to: NSPoint(x: 22.05, y: 12.47))
        sunset4Path.curve(to: NSPoint(x: 21.56, y: 11.97), controlPoint1: NSPoint(x: 21.78, y: 12.47), controlPoint2: NSPoint(x: 21.56, y: 12.24))
        sunset4Path.curve(to: NSPoint(x: 22.05, y: 11.47), controlPoint1: NSPoint(x: 21.56, y: 11.69), controlPoint2: NSPoint(x: 21.77, y: 11.47))
        sunset4Path.line(to: NSPoint(x: 24.06, y: 11.47))
        sunset4Path.curve(to: NSPoint(x: 24.56, y: 11.97), controlPoint1: NSPoint(x: 24.34, y: 11.47), controlPoint2: NSPoint(x: 24.56, y: 11.7))
        sunset4Path.line(to: NSPoint(x: 24.56, y: 11.97))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 5.5, y: 11.97))
        sunset4Path.curve(to: NSPoint(x: 6, y: 11.47), controlPoint1: NSPoint(x: 5.5, y: 11.69), controlPoint2: NSPoint(x: 5.72, y: 11.47))
        sunset4Path.line(to: NSPoint(x: 8, y: 11.47))
        sunset4Path.curve(to: NSPoint(x: 8.5, y: 11.97), controlPoint1: NSPoint(x: 8.28, y: 11.47), controlPoint2: NSPoint(x: 8.5, y: 11.7))
        sunset4Path.curve(to: NSPoint(x: 8, y: 12.47), controlPoint1: NSPoint(x: 8.5, y: 12.25), controlPoint2: NSPoint(x: 8.28, y: 12.47))
        sunset4Path.line(to: NSPoint(x: 6, y: 12.47))
        sunset4Path.curve(to: NSPoint(x: 5.5, y: 11.97), controlPoint1: NSPoint(x: 5.72, y: 12.47), controlPoint2: NSPoint(x: 5.5, y: 12.24))
        sunset4Path.line(to: NSPoint(x: 5.5, y: 11.97))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 8.29, y: 18.71))
        sunset4Path.curve(to: NSPoint(x: 8.29, y: 18.01), controlPoint1: NSPoint(x: 8.1, y: 18.51), controlPoint2: NSPoint(x: 8.09, y: 18.2))
        sunset4Path.line(to: NSPoint(x: 9.71, y: 16.58))
        sunset4Path.curve(to: NSPoint(x: 10.41, y: 16.59), controlPoint1: NSPoint(x: 9.9, y: 16.39), controlPoint2: NSPoint(x: 10.22, y: 16.4))
        sunset4Path.curve(to: NSPoint(x: 10.42, y: 17.29), controlPoint1: NSPoint(x: 10.61, y: 16.78), controlPoint2: NSPoint(x: 10.61, y: 17.09))
        sunset4Path.line(to: NSPoint(x: 8.99, y: 18.71))
        sunset4Path.curve(to: NSPoint(x: 8.29, y: 18.71), controlPoint1: NSPoint(x: 8.8, y: 18.91), controlPoint2: NSPoint(x: 8.48, y: 18.9))
        sunset4Path.line(to: NSPoint(x: 8.29, y: 18.71))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 6.04, y: 9.5))
        sunset4Path.curve(to: NSPoint(x: 5.53, y: 9), controlPoint1: NSPoint(x: 5.76, y: 9.5), controlPoint2: NSPoint(x: 5.53, y: 9.27))
        sunset4Path.line(to: NSPoint(x: 5.53, y: 9))
        sunset4Path.curve(to: NSPoint(x: 6.04, y: 8.5), controlPoint1: NSPoint(x: 5.53, y: 8.72), controlPoint2: NSPoint(x: 5.76, y: 8.5))
        sunset4Path.line(to: NSPoint(x: 24.02, y: 8.5))
        sunset4Path.curve(to: NSPoint(x: 24.53, y: 9), controlPoint1: NSPoint(x: 24.3, y: 8.5), controlPoint2: NSPoint(x: 24.53, y: 8.73))
        sunset4Path.line(to: NSPoint(x: 24.53, y: 9))
        sunset4Path.curve(to: NSPoint(x: 24.02, y: 9.5), controlPoint1: NSPoint(x: 24.53, y: 9.28), controlPoint2: NSPoint(x: 24.3, y: 9.5))
        sunset4Path.line(to: NSPoint(x: 6.04, y: 9.5))
        sunset4Path.line(to: NSPoint(x: 6.04, y: 9.5))
        sunset4Path.close()
        sunset4Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        sunset4Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSunset3(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-33-sunset
        //// sunset 4 Drawing
        let sunset4Path = NSBezierPath()
        sunset4Path.move(to: NSPoint(x: 20.29, y: 11.5))
        sunset4Path.curve(to: NSPoint(x: 15, y: 15.5), controlPoint1: NSPoint(x: 19.64, y: 13.81), controlPoint2: NSPoint(x: 17.52, y: 15.5))
        sunset4Path.curve(to: NSPoint(x: 9.71, y: 11.5), controlPoint1: NSPoint(x: 12.48, y: 15.5), controlPoint2: NSPoint(x: 10.36, y: 13.81))
        sunset4Path.line(to: NSPoint(x: 20.29, y: 11.5))
        sunset4Path.line(to: NSPoint(x: 20.29, y: 11.5))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 15, y: 19.5))
        sunset4Path.curve(to: NSPoint(x: 14.5, y: 19), controlPoint1: NSPoint(x: 14.72, y: 19.5), controlPoint2: NSPoint(x: 14.5, y: 19.28))
        sunset4Path.line(to: NSPoint(x: 14.5, y: 17))
        sunset4Path.curve(to: NSPoint(x: 15, y: 16.5), controlPoint1: NSPoint(x: 14.5, y: 16.72), controlPoint2: NSPoint(x: 14.73, y: 16.5))
        sunset4Path.curve(to: NSPoint(x: 15.5, y: 17), controlPoint1: NSPoint(x: 15.28, y: 16.5), controlPoint2: NSPoint(x: 15.5, y: 16.72))
        sunset4Path.line(to: NSPoint(x: 15.5, y: 19))
        sunset4Path.curve(to: NSPoint(x: 15, y: 19.5), controlPoint1: NSPoint(x: 15.5, y: 19.28), controlPoint2: NSPoint(x: 15.27, y: 19.5))
        sunset4Path.line(to: NSPoint(x: 15, y: 19.5))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 21.74, y: 16.71))
        sunset4Path.curve(to: NSPoint(x: 21.03, y: 16.71), controlPoint1: NSPoint(x: 21.54, y: 16.9), controlPoint2: NSPoint(x: 21.23, y: 16.91))
        sunset4Path.line(to: NSPoint(x: 19.61, y: 15.29))
        sunset4Path.curve(to: NSPoint(x: 19.62, y: 14.59), controlPoint1: NSPoint(x: 19.42, y: 15.1), controlPoint2: NSPoint(x: 19.43, y: 14.78))
        sunset4Path.curve(to: NSPoint(x: 20.32, y: 14.58), controlPoint1: NSPoint(x: 19.81, y: 14.39), controlPoint2: NSPoint(x: 20.12, y: 14.39))
        sunset4Path.line(to: NSPoint(x: 21.74, y: 16.01))
        sunset4Path.curve(to: NSPoint(x: 21.74, y: 16.71), controlPoint1: NSPoint(x: 21.93, y: 16.2), controlPoint2: NSPoint(x: 21.93, y: 16.52))
        sunset4Path.line(to: NSPoint(x: 21.74, y: 16.71))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 8.26, y: 16.71))
        sunset4Path.curve(to: NSPoint(x: 8.26, y: 16.01), controlPoint1: NSPoint(x: 8.07, y: 16.51), controlPoint2: NSPoint(x: 8.06, y: 16.2))
        sunset4Path.line(to: NSPoint(x: 9.68, y: 14.58))
        sunset4Path.curve(to: NSPoint(x: 10.38, y: 14.59), controlPoint1: NSPoint(x: 9.87, y: 14.39), controlPoint2: NSPoint(x: 10.19, y: 14.4))
        sunset4Path.curve(to: NSPoint(x: 10.39, y: 15.29), controlPoint1: NSPoint(x: 10.58, y: 14.78), controlPoint2: NSPoint(x: 10.58, y: 15.09))
        sunset4Path.line(to: NSPoint(x: 8.97, y: 16.71))
        sunset4Path.curve(to: NSPoint(x: 8.26, y: 16.71), controlPoint1: NSPoint(x: 8.77, y: 16.91), controlPoint2: NSPoint(x: 8.45, y: 16.9))
        sunset4Path.line(to: NSPoint(x: 8.26, y: 16.71))
        sunset4Path.close()
        sunset4Path.move(to: NSPoint(x: 6.01, y: 9.5))
        sunset4Path.curve(to: NSPoint(x: 5.5, y: 9), controlPoint1: NSPoint(x: 5.73, y: 9.5), controlPoint2: NSPoint(x: 5.5, y: 9.27))
        sunset4Path.line(to: NSPoint(x: 5.5, y: 9))
        sunset4Path.curve(to: NSPoint(x: 6.01, y: 8.5), controlPoint1: NSPoint(x: 5.5, y: 8.72), controlPoint2: NSPoint(x: 5.73, y: 8.5))
        sunset4Path.line(to: NSPoint(x: 23.99, y: 8.5))
        sunset4Path.curve(to: NSPoint(x: 24.5, y: 9), controlPoint1: NSPoint(x: 24.27, y: 8.5), controlPoint2: NSPoint(x: 24.5, y: 8.73))
        sunset4Path.line(to: NSPoint(x: 24.5, y: 9))
        sunset4Path.curve(to: NSPoint(x: 23.99, y: 9.5), controlPoint1: NSPoint(x: 24.5, y: 9.28), controlPoint2: NSPoint(x: 24.27, y: 9.5))
        sunset4Path.line(to: NSPoint(x: 6.01, y: 9.5))
        sunset4Path.line(to: NSPoint(x: 6.01, y: 9.5))
        sunset4Path.close()
        sunset4Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        sunset4Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawRainbow(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-34-rainbow
        //// rainbow 2 Drawing
        let rainbow2Path = NSBezierPath()
        rainbow2Path.move(to: NSPoint(x: 15, y: 19.81))
        rainbow2Path.curve(to: NSPoint(x: 29.99, y: 5.01), controlPoint1: NSPoint(x: 23.1, y: 19.81), controlPoint2: NSPoint(x: 29.69, y: 13.23))
        rainbow2Path.curve(to: NSPoint(x: 30, y: 4.9), controlPoint1: NSPoint(x: 30, y: 4.97), controlPoint2: NSPoint(x: 30, y: 4.94))
        rainbow2Path.curve(to: NSPoint(x: 29.53, y: 4.42), controlPoint1: NSPoint(x: 30, y: 4.64), controlPoint2: NSPoint(x: 29.79, y: 4.42))
        rainbow2Path.curve(to: NSPoint(x: 29.06, y: 4.9), controlPoint1: NSPoint(x: 29.27, y: 4.42), controlPoint2: NSPoint(x: 29.06, y: 4.64))
        rainbow2Path.curve(to: NSPoint(x: 15, y: 18.85), controlPoint1: NSPoint(x: 28.81, y: 12.65), controlPoint2: NSPoint(x: 22.61, y: 18.85))
        rainbow2Path.curve(to: NSPoint(x: 0.95, y: 4.9), controlPoint1: NSPoint(x: 7.39, y: 18.85), controlPoint2: NSPoint(x: 1.19, y: 12.65))
        rainbow2Path.curve(to: NSPoint(x: 0.47, y: 4.42), controlPoint1: NSPoint(x: 0.94, y: 4.64), controlPoint2: NSPoint(x: 0.73, y: 4.42))
        rainbow2Path.curve(to: NSPoint(x: 0, y: 4.9), controlPoint1: NSPoint(x: 0.21, y: 4.42), controlPoint2: NSPoint(x: 0, y: 4.64))
        rainbow2Path.curve(to: NSPoint(x: 0.01, y: 5.01), controlPoint1: NSPoint(x: 0, y: 4.94), controlPoint2: NSPoint(x: 0, y: 4.97))
        rainbow2Path.curve(to: NSPoint(x: 15, y: 19.81), controlPoint1: NSPoint(x: 0.31, y: 13.23), controlPoint2: NSPoint(x: 6.91, y: 19.81))
        rainbow2Path.line(to: NSPoint(x: 15, y: 19.81))
        rainbow2Path.close()
        rainbow2Path.move(to: NSPoint(x: 15, y: 17.88))
        rainbow2Path.curve(to: NSPoint(x: 28.11, y: 5.01), controlPoint1: NSPoint(x: 22.06, y: 17.88), controlPoint2: NSPoint(x: 27.81, y: 12.17))
        rainbow2Path.curve(to: NSPoint(x: 28.13, y: 4.9), controlPoint1: NSPoint(x: 28.12, y: 4.98), controlPoint2: NSPoint(x: 28.13, y: 4.94))
        rainbow2Path.curve(to: NSPoint(x: 27.66, y: 4.42), controlPoint1: NSPoint(x: 28.13, y: 4.64), controlPoint2: NSPoint(x: 27.92, y: 4.42))
        rainbow2Path.curve(to: NSPoint(x: 27.19, y: 4.9), controlPoint1: NSPoint(x: 27.4, y: 4.42), controlPoint2: NSPoint(x: 27.19, y: 4.64))
        rainbow2Path.curve(to: NSPoint(x: 15, y: 16.92), controlPoint1: NSPoint(x: 26.93, y: 11.58), controlPoint2: NSPoint(x: 21.58, y: 16.92))
        rainbow2Path.curve(to: NSPoint(x: 2.82, y: 4.9), controlPoint1: NSPoint(x: 8.43, y: 16.92), controlPoint2: NSPoint(x: 3.07, y: 11.58))
        rainbow2Path.curve(to: NSPoint(x: 2.34, y: 4.42), controlPoint1: NSPoint(x: 2.81, y: 4.64), controlPoint2: NSPoint(x: 2.6, y: 4.42))
        rainbow2Path.curve(to: NSPoint(x: 1.88, y: 4.9), controlPoint1: NSPoint(x: 2.08, y: 4.42), controlPoint2: NSPoint(x: 1.88, y: 4.64))
        rainbow2Path.curve(to: NSPoint(x: 1.89, y: 5.01), controlPoint1: NSPoint(x: 1.88, y: 4.94), controlPoint2: NSPoint(x: 1.88, y: 4.98))
        rainbow2Path.curve(to: NSPoint(x: 15, y: 17.88), controlPoint1: NSPoint(x: 2.19, y: 12.17), controlPoint2: NSPoint(x: 7.94, y: 17.88))
        rainbow2Path.line(to: NSPoint(x: 15, y: 17.88))
        rainbow2Path.close()
        rainbow2Path.move(to: NSPoint(x: 15, y: 15.96))
        rainbow2Path.curve(to: NSPoint(x: 26.24, y: 5.03), controlPoint1: NSPoint(x: 21.02, y: 15.96), controlPoint2: NSPoint(x: 25.93, y: 11.12))
        rainbow2Path.curve(to: NSPoint(x: 26.25, y: 4.9), controlPoint1: NSPoint(x: 26.25, y: 4.99), controlPoint2: NSPoint(x: 26.25, y: 4.95))
        rainbow2Path.curve(to: NSPoint(x: 25.78, y: 4.42), controlPoint1: NSPoint(x: 26.25, y: 4.64), controlPoint2: NSPoint(x: 26.04, y: 4.42))
        rainbow2Path.curve(to: NSPoint(x: 25.31, y: 4.9), controlPoint1: NSPoint(x: 25.52, y: 4.42), controlPoint2: NSPoint(x: 25.31, y: 4.64))
        rainbow2Path.curve(to: NSPoint(x: 15, y: 15), controlPoint1: NSPoint(x: 25.06, y: 10.52), controlPoint2: NSPoint(x: 20.54, y: 15))
        rainbow2Path.curve(to: NSPoint(x: 4.7, y: 4.9), controlPoint1: NSPoint(x: 9.46, y: 15), controlPoint2: NSPoint(x: 4.94, y: 10.52))
        rainbow2Path.curve(to: NSPoint(x: 4.22, y: 4.42), controlPoint1: NSPoint(x: 4.69, y: 4.64), controlPoint2: NSPoint(x: 4.48, y: 4.42))
        rainbow2Path.curve(to: NSPoint(x: 3.75, y: 4.9), controlPoint1: NSPoint(x: 3.96, y: 4.42), controlPoint2: NSPoint(x: 3.75, y: 4.64))
        rainbow2Path.curve(to: NSPoint(x: 3.77, y: 5.03), controlPoint1: NSPoint(x: 3.75, y: 4.95), controlPoint2: NSPoint(x: 3.76, y: 4.99))
        rainbow2Path.curve(to: NSPoint(x: 15, y: 15.96), controlPoint1: NSPoint(x: 4.07, y: 11.12), controlPoint2: NSPoint(x: 8.98, y: 15.96))
        rainbow2Path.line(to: NSPoint(x: 15, y: 15.96))
        rainbow2Path.close()
        rainbow2Path.move(to: NSPoint(x: 0.47, y: 3.46))
        rainbow2Path.curve(to: NSPoint(x: 0, y: 2.98), controlPoint1: NSPoint(x: 0.21, y: 3.46), controlPoint2: NSPoint(x: 0, y: 3.24))
        rainbow2Path.curve(to: NSPoint(x: 0.47, y: 2.5), controlPoint1: NSPoint(x: 0, y: 2.72), controlPoint2: NSPoint(x: 0.21, y: 2.5))
        rainbow2Path.line(to: NSPoint(x: 29.53, y: 2.5))
        rainbow2Path.curve(to: NSPoint(x: 30, y: 2.98), controlPoint1: NSPoint(x: 29.79, y: 2.5), controlPoint2: NSPoint(x: 30, y: 2.72))
        rainbow2Path.curve(to: NSPoint(x: 29.53, y: 3.46), controlPoint1: NSPoint(x: 30, y: 3.25), controlPoint2: NSPoint(x: 29.79, y: 3.46))
        rainbow2Path.line(to: NSPoint(x: 0.47, y: 3.46))
        rainbow2Path.line(to: NSPoint(x: 0.47, y: 3.46))
        rainbow2Path.close()
        rainbow2Path.move(to: NSPoint(x: 26.25, y: 18.37))
        rainbow2Path.curve(to: NSPoint(x: 21.1, y: 23.65), controlPoint1: NSPoint(x: 26.25, y: 21.29), controlPoint2: NSPoint(x: 23.94, y: 23.65))
        rainbow2Path.curve(to: NSPoint(x: 16.47, y: 20.7), controlPoint1: NSPoint(x: 19.06, y: 23.65), controlPoint2: NSPoint(x: 17.31, y: 22.45))
        rainbow2Path.curve(to: NSPoint(x: 25.87, y: 16.38), controlPoint1: NSPoint(x: 20.09, y: 20.36), controlPoint2: NSPoint(x: 23.36, y: 18.78))
        rainbow2Path.curve(to: NSPoint(x: 26.25, y: 18.37), controlPoint1: NSPoint(x: 26.12, y: 16.99), controlPoint2: NSPoint(x: 26.25, y: 17.66))
        rainbow2Path.line(to: NSPoint(x: 26.25, y: 18.37))
        rainbow2Path.close()
        rainbow2Path.move(to: NSPoint(x: 20.63, y: 27.02))
        rainbow2Path.line(to: NSPoint(x: 20.63, y: 25.09))
        rainbow2Path.curve(to: NSPoint(x: 21.1, y: 24.62), controlPoint1: NSPoint(x: 20.63, y: 24.83), controlPoint2: NSPoint(x: 20.84, y: 24.62))
        rainbow2Path.curve(to: NSPoint(x: 21.56, y: 25.09), controlPoint1: NSPoint(x: 21.35, y: 24.62), controlPoint2: NSPoint(x: 21.56, y: 24.82))
        rainbow2Path.line(to: NSPoint(x: 21.56, y: 27.02))
        rainbow2Path.curve(to: NSPoint(x: 21.1, y: 27.5), controlPoint1: NSPoint(x: 21.56, y: 27.29), controlPoint2: NSPoint(x: 21.35, y: 27.5))
        rainbow2Path.curve(to: NSPoint(x: 20.63, y: 27.02), controlPoint1: NSPoint(x: 20.84, y: 27.5), controlPoint2: NSPoint(x: 20.63, y: 27.29))
        rainbow2Path.line(to: NSPoint(x: 20.63, y: 27.02))
        rainbow2Path.close()
        rainbow2Path.move(to: NSPoint(x: 26.75, y: 24.82))
        rainbow2Path.line(to: NSPoint(x: 25.42, y: 23.45))
        rainbow2Path.curve(to: NSPoint(x: 25.42, y: 22.78), controlPoint1: NSPoint(x: 25.24, y: 23.27), controlPoint2: NSPoint(x: 25.25, y: 22.96))
        rainbow2Path.curve(to: NSPoint(x: 26.08, y: 22.77), controlPoint1: NSPoint(x: 25.61, y: 22.59), controlPoint2: NSPoint(x: 25.9, y: 22.58))
        rainbow2Path.line(to: NSPoint(x: 27.42, y: 24.14))
        rainbow2Path.curve(to: NSPoint(x: 27.41, y: 24.82), controlPoint1: NSPoint(x: 27.6, y: 24.33), controlPoint2: NSPoint(x: 27.59, y: 24.63))
        rainbow2Path.curve(to: NSPoint(x: 26.75, y: 24.82), controlPoint1: NSPoint(x: 27.23, y: 25), controlPoint2: NSPoint(x: 26.94, y: 25.01))
        rainbow2Path.line(to: NSPoint(x: 26.75, y: 24.82))
        rainbow2Path.close()
        rainbow2Path.move(to: NSPoint(x: 29.56, y: 18.82))
        rainbow2Path.line(to: NSPoint(x: 27.68, y: 18.82))
        rainbow2Path.curve(to: NSPoint(x: 27.22, y: 18.34), controlPoint1: NSPoint(x: 27.42, y: 18.82), controlPoint2: NSPoint(x: 27.22, y: 18.6))
        rainbow2Path.curve(to: NSPoint(x: 27.68, y: 17.86), controlPoint1: NSPoint(x: 27.22, y: 18.07), controlPoint2: NSPoint(x: 27.42, y: 17.86))
        rainbow2Path.line(to: NSPoint(x: 29.56, y: 17.86))
        rainbow2Path.curve(to: NSPoint(x: 30.03, y: 18.34), controlPoint1: NSPoint(x: 29.82, y: 17.86), controlPoint2: NSPoint(x: 30.03, y: 18.08))
        rainbow2Path.curve(to: NSPoint(x: 29.56, y: 18.82), controlPoint1: NSPoint(x: 30.03, y: 18.6), controlPoint2: NSPoint(x: 29.83, y: 18.82))
        rainbow2Path.line(to: NSPoint(x: 29.56, y: 18.82))
        rainbow2Path.close()
        rainbow2Path.move(to: NSPoint(x: 14.77, y: 24.14))
        rainbow2Path.line(to: NSPoint(x: 16.11, y: 22.77))
        rainbow2Path.curve(to: NSPoint(x: 16.77, y: 22.78), controlPoint1: NSPoint(x: 16.29, y: 22.59), controlPoint2: NSPoint(x: 16.59, y: 22.59))
        rainbow2Path.curve(to: NSPoint(x: 16.77, y: 23.45), controlPoint1: NSPoint(x: 16.95, y: 22.96), controlPoint2: NSPoint(x: 16.96, y: 23.26))
        rainbow2Path.line(to: NSPoint(x: 15.44, y: 24.82))
        rainbow2Path.curve(to: NSPoint(x: 14.78, y: 24.82), controlPoint1: NSPoint(x: 15.26, y: 25.01), controlPoint2: NSPoint(x: 14.96, y: 25))
        rainbow2Path.curve(to: NSPoint(x: 14.77, y: 24.14), controlPoint1: NSPoint(x: 14.59, y: 24.63), controlPoint2: NSPoint(x: 14.59, y: 24.33))
        rainbow2Path.line(to: NSPoint(x: 14.77, y: 24.14))
        rainbow2Path.close()
        rainbow2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        rainbow2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawUmbrella(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-35-umbrella
        //// umbrella 2 Drawing
        let umbrella2Path = NSBezierPath()
        umbrella2Path.move(to: NSPoint(x: 25.16, y: 17))
        umbrella2Path.line(to: NSPoint(x: 30, y: 17))
        umbrella2Path.curve(to: NSPoint(x: 27.58, y: 19), controlPoint1: NSPoint(x: 30, y: 18.1), controlPoint2: NSPoint(x: 28.92, y: 19))
        umbrella2Path.curve(to: NSPoint(x: 25.16, y: 17), controlPoint1: NSPoint(x: 26.24, y: 19), controlPoint2: NSPoint(x: 25.16, y: 18.1))
        umbrella2Path.line(to: NSPoint(x: 25.16, y: 17))
        umbrella2Path.close()
        umbrella2Path.move(to: NSPoint(x: 25.16, y: 17))
        umbrella2Path.curve(to: NSPoint(x: 22.74, y: 19), controlPoint1: NSPoint(x: 25.16, y: 18.1), controlPoint2: NSPoint(x: 24.08, y: 19))
        umbrella2Path.curve(to: NSPoint(x: 20.32, y: 17), controlPoint1: NSPoint(x: 21.41, y: 19), controlPoint2: NSPoint(x: 20.32, y: 18.1))
        umbrella2Path.curve(to: NSPoint(x: 17.9, y: 19), controlPoint1: NSPoint(x: 20.32, y: 18.1), controlPoint2: NSPoint(x: 19.24, y: 19))
        umbrella2Path.curve(to: NSPoint(x: 15.48, y: 17), controlPoint1: NSPoint(x: 16.57, y: 19), controlPoint2: NSPoint(x: 15.48, y: 18.1))
        umbrella2Path.line(to: NSPoint(x: 15.48, y: 17))
        umbrella2Path.line(to: NSPoint(x: 15.48, y: 4.5))
        umbrella2Path.line(to: NSPoint(x: 15.48, y: 3))
        umbrella2Path.curve(to: NSPoint(x: 13.55, y: 1), controlPoint1: NSPoint(x: 15.48, y: 1.89), controlPoint2: NSPoint(x: 14.62, y: 1))
        umbrella2Path.curve(to: NSPoint(x: 11.61, y: 3), controlPoint1: NSPoint(x: 12.47, y: 1), controlPoint2: NSPoint(x: 11.61, y: 1.9))
        umbrella2Path.line(to: NSPoint(x: 11.61, y: 3.75))
        umbrella2Path.line(to: NSPoint(x: 11.61, y: 4.5))
        umbrella2Path.curve(to: NSPoint(x: 12.1, y: 5), controlPoint1: NSPoint(x: 11.61, y: 4.79), controlPoint2: NSPoint(x: 11.83, y: 5))
        umbrella2Path.curve(to: NSPoint(x: 12.58, y: 4.5), controlPoint1: NSPoint(x: 12.36, y: 5), controlPoint2: NSPoint(x: 12.58, y: 4.77))
        umbrella2Path.line(to: NSPoint(x: 12.58, y: 3.88))
        umbrella2Path.line(to: NSPoint(x: 12.58, y: 2.99))
        umbrella2Path.curve(to: NSPoint(x: 13.55, y: 2), controlPoint1: NSPoint(x: 12.58, y: 2.44), controlPoint2: NSPoint(x: 13.01, y: 2))
        umbrella2Path.curve(to: NSPoint(x: 14.52, y: 2.99), controlPoint1: NSPoint(x: 14.08, y: 2), controlPoint2: NSPoint(x: 14.52, y: 2.45))
        umbrella2Path.line(to: NSPoint(x: 14.52, y: 5.88))
        umbrella2Path.line(to: NSPoint(x: 14.52, y: 17))
        umbrella2Path.curve(to: NSPoint(x: 12.1, y: 19), controlPoint1: NSPoint(x: 14.52, y: 18.1), controlPoint2: NSPoint(x: 13.43, y: 19))
        umbrella2Path.curve(to: NSPoint(x: 9.68, y: 17), controlPoint1: NSPoint(x: 10.76, y: 19), controlPoint2: NSPoint(x: 9.68, y: 18.1))
        umbrella2Path.curve(to: NSPoint(x: 7.26, y: 19), controlPoint1: NSPoint(x: 9.68, y: 18.1), controlPoint2: NSPoint(x: 8.59, y: 19))
        umbrella2Path.curve(to: NSPoint(x: 4.84, y: 17), controlPoint1: NSPoint(x: 5.92, y: 19), controlPoint2: NSPoint(x: 4.84, y: 18.1))
        umbrella2Path.curve(to: NSPoint(x: 2.42, y: 19), controlPoint1: NSPoint(x: 4.84, y: 18.1), controlPoint2: NSPoint(x: 3.76, y: 19))
        umbrella2Path.curve(to: NSPoint(x: 0, y: 17), controlPoint1: NSPoint(x: 1.08, y: 19), controlPoint2: NSPoint(x: 0, y: 18.1))
        umbrella2Path.curve(to: NSPoint(x: 14.52, y: 26.99), controlPoint1: NSPoint(x: 0, y: 22.41), controlPoint2: NSPoint(x: 6.46, y: 26.82))
        umbrella2Path.line(to: NSPoint(x: 14.52, y: 28.5))
        umbrella2Path.curve(to: NSPoint(x: 15, y: 29), controlPoint1: NSPoint(x: 14.52, y: 28.78), controlPoint2: NSPoint(x: 14.73, y: 29))
        umbrella2Path.curve(to: NSPoint(x: 15.48, y: 28.5), controlPoint1: NSPoint(x: 15.26, y: 29), controlPoint2: NSPoint(x: 15.48, y: 28.78))
        umbrella2Path.line(to: NSPoint(x: 15.48, y: 26.99))
        umbrella2Path.curve(to: NSPoint(x: 30, y: 17), controlPoint1: NSPoint(x: 23.54, y: 26.82), controlPoint2: NSPoint(x: 30, y: 22.41))
        umbrella2Path.line(to: NSPoint(x: 25.16, y: 17))
        umbrella2Path.close()
        umbrella2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        umbrella2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawRaindrops(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-36-raindrops
        //// raindrops 2 Drawing
        let raindrops2Path = NSBezierPath()
        raindrops2Path.move(to: NSPoint(x: 7.5, y: 20))
        raindrops2Path.curve(to: NSPoint(x: 10.01, y: 24.5), controlPoint1: NSPoint(x: 7.5, y: 21.68), controlPoint2: NSPoint(x: 10.01, y: 24.5))
        raindrops2Path.curve(to: NSPoint(x: 12.5, y: 20), controlPoint1: NSPoint(x: 10.01, y: 24.5), controlPoint2: NSPoint(x: 12.5, y: 21.68))
        raindrops2Path.curve(to: NSPoint(x: 10.01, y: 17.5), controlPoint1: NSPoint(x: 12.5, y: 18.8), controlPoint2: NSPoint(x: 11.69, y: 17.5))
        raindrops2Path.curve(to: NSPoint(x: 7.5, y: 20), controlPoint1: NSPoint(x: 8.33, y: 17.5), controlPoint2: NSPoint(x: 7.5, y: 18.7))
        raindrops2Path.line(to: NSPoint(x: 7.5, y: 20))
        raindrops2Path.close()
        raindrops2Path.move(to: NSPoint(x: 17.5, y: 16))
        raindrops2Path.curve(to: NSPoint(x: 20.01, y: 20.5), controlPoint1: NSPoint(x: 17.5, y: 17.68), controlPoint2: NSPoint(x: 20.01, y: 20.5))
        raindrops2Path.curve(to: NSPoint(x: 22.5, y: 16), controlPoint1: NSPoint(x: 20.01, y: 20.5), controlPoint2: NSPoint(x: 22.5, y: 17.68))
        raindrops2Path.curve(to: NSPoint(x: 20.01, y: 13.5), controlPoint1: NSPoint(x: 22.5, y: 14.8), controlPoint2: NSPoint(x: 21.69, y: 13.5))
        raindrops2Path.curve(to: NSPoint(x: 17.5, y: 16), controlPoint1: NSPoint(x: 18.33, y: 13.5), controlPoint2: NSPoint(x: 17.5, y: 14.7))
        raindrops2Path.line(to: NSPoint(x: 17.5, y: 16))
        raindrops2Path.close()
        raindrops2Path.move(to: NSPoint(x: 10.5, y: 8))
        raindrops2Path.curve(to: NSPoint(x: 13.01, y: 12.5), controlPoint1: NSPoint(x: 10.5, y: 9.68), controlPoint2: NSPoint(x: 13.01, y: 12.5))
        raindrops2Path.curve(to: NSPoint(x: 15.5, y: 8), controlPoint1: NSPoint(x: 13.01, y: 12.5), controlPoint2: NSPoint(x: 15.5, y: 9.68))
        raindrops2Path.curve(to: NSPoint(x: 13.01, y: 5.5), controlPoint1: NSPoint(x: 15.5, y: 6.8), controlPoint2: NSPoint(x: 14.69, y: 5.5))
        raindrops2Path.curve(to: NSPoint(x: 10.5, y: 8), controlPoint1: NSPoint(x: 11.33, y: 5.5), controlPoint2: NSPoint(x: 10.5, y: 6.7))
        raindrops2Path.line(to: NSPoint(x: 10.5, y: 8))
        raindrops2Path.close()
        raindrops2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        raindrops2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawRaindrop(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-37-raindrop
        //// raindrop 2 Drawing
        let raindrop2Path = NSBezierPath()
        raindrop2Path.move(to: NSPoint(x: 11, y: 12.79))
        raindrop2Path.curve(to: NSPoint(x: 15, y: 21), controlPoint1: NSPoint(x: 11, y: 15.32), controlPoint2: NSPoint(x: 15, y: 21))
        raindrop2Path.curve(to: NSPoint(x: 19, y: 12.79), controlPoint1: NSPoint(x: 15, y: 21), controlPoint2: NSPoint(x: 19, y: 15.32))
        raindrop2Path.curve(to: NSPoint(x: 15, y: 9), controlPoint1: NSPoint(x: 19, y: 10.7), controlPoint2: NSPoint(x: 17.21, y: 9))
        raindrop2Path.curve(to: NSPoint(x: 11, y: 12.79), controlPoint1: NSPoint(x: 12.79, y: 9), controlPoint2: NSPoint(x: 11, y: 10.7))
        raindrop2Path.close()
        raindrop2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        raindrop2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSunglasses(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-38-sunglasses
        //// sunglasses 2 Drawing
        let sunglasses2Path = NSBezierPath()
        sunglasses2Path.move(to: NSPoint(x: 14.02, y: 18.44))
        sunglasses2Path.curve(to: NSPoint(x: 0.33, y: 19.06), controlPoint1: NSPoint(x: 9.65, y: 19.65), controlPoint2: NSPoint(x: 3.49, y: 19.59))
        sunglasses2Path.curve(to: NSPoint(x: 0.22, y: 17.17), controlPoint1: NSPoint(x: -0.06, y: 18.99), controlPoint2: NSPoint(x: -0.12, y: 17.23))
        sunglasses2Path.curve(to: NSPoint(x: 1.12, y: 16.29), controlPoint1: NSPoint(x: 0.85, y: 16.92), controlPoint2: NSPoint(x: 1.12, y: 16.29))
        sunglasses2Path.curve(to: NSPoint(x: 1.85, y: 13.45), controlPoint1: NSPoint(x: 1.12, y: 16.29), controlPoint2: NSPoint(x: 1.3, y: 15.73))
        sunglasses2Path.curve(to: NSPoint(x: 3.68, y: 10.89), controlPoint1: NSPoint(x: 2.39, y: 11.17), controlPoint2: NSPoint(x: 3.68, y: 10.89))
        sunglasses2Path.curve(to: NSPoint(x: 7.1, y: 10.5), controlPoint1: NSPoint(x: 3.68, y: 10.89), controlPoint2: NSPoint(x: 5.27, y: 10.5))
        sunglasses2Path.curve(to: NSPoint(x: 11.19, y: 11.17), controlPoint1: NSPoint(x: 8.92, y: 10.5), controlPoint2: NSPoint(x: 10.02, y: 10.58))
        sunglasses2Path.curve(to: NSPoint(x: 12.87, y: 13.38), controlPoint1: NSPoint(x: 12.36, y: 11.75), controlPoint2: NSPoint(x: 12.87, y: 13.38))
        sunglasses2Path.curve(to: NSPoint(x: 13.86, y: 16.11), controlPoint1: NSPoint(x: 12.87, y: 13.38), controlPoint2: NSPoint(x: 13.46, y: 14.79))
        sunglasses2Path.curve(to: NSPoint(x: 16.06, y: 16.11), controlPoint1: NSPoint(x: 13.99, y: 16.53), controlPoint2: NSPoint(x: 15.93, y: 16.53))
        sunglasses2Path.curve(to: NSPoint(x: 17.05, y: 13.38), controlPoint1: NSPoint(x: 16.46, y: 14.79), controlPoint2: NSPoint(x: 17.05, y: 13.38))
        sunglasses2Path.curve(to: NSPoint(x: 18.73, y: 11.17), controlPoint1: NSPoint(x: 17.05, y: 13.38), controlPoint2: NSPoint(x: 17.56, y: 11.75))
        sunglasses2Path.curve(to: NSPoint(x: 22.82, y: 10.5), controlPoint1: NSPoint(x: 19.9, y: 10.58), controlPoint2: NSPoint(x: 21, y: 10.5))
        sunglasses2Path.curve(to: NSPoint(x: 26.24, y: 10.89), controlPoint1: NSPoint(x: 24.65, y: 10.5), controlPoint2: NSPoint(x: 26.24, y: 10.89))
        sunglasses2Path.curve(to: NSPoint(x: 28.07, y: 13.45), controlPoint1: NSPoint(x: 26.24, y: 10.89), controlPoint2: NSPoint(x: 27.53, y: 11.17))
        sunglasses2Path.curve(to: NSPoint(x: 28.8, y: 16.29), controlPoint1: NSPoint(x: 28.62, y: 15.73), controlPoint2: NSPoint(x: 28.8, y: 16.29))
        sunglasses2Path.curve(to: NSPoint(x: 29.7, y: 17.17), controlPoint1: NSPoint(x: 28.8, y: 16.29), controlPoint2: NSPoint(x: 29.07, y: 16.92))
        sunglasses2Path.curve(to: NSPoint(x: 29.59, y: 19.06), controlPoint1: NSPoint(x: 30.04, y: 17.23), controlPoint2: NSPoint(x: 29.98, y: 18.99))
        sunglasses2Path.curve(to: NSPoint(x: 15.9, y: 18.44), controlPoint1: NSPoint(x: 26.43, y: 19.59), controlPoint2: NSPoint(x: 20.27, y: 19.65))
        sunglasses2Path.curve(to: NSPoint(x: 14.02, y: 18.44), controlPoint1: NSPoint(x: 15.6, y: 18.37), controlPoint2: NSPoint(x: 14.31, y: 18.37))
        sunglasses2Path.close()
        sunglasses2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        sunglasses2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawStars(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-39-stars
        //// stars 2 Drawing
        let stars2Path = NSBezierPath()
        stars2Path.move(to: NSPoint(x: 22.71, y: 21.76))
        stars2Path.line(to: NSPoint(x: 21.5, y: 25))
        stars2Path.line(to: NSPoint(x: 20.29, y: 21.76))
        stars2Path.line(to: NSPoint(x: 18, y: 21))
        stars2Path.line(to: NSPoint(x: 20.29, y: 20.24))
        stars2Path.line(to: NSPoint(x: 21.5, y: 17))
        stars2Path.line(to: NSPoint(x: 22.71, y: 20.24))
        stars2Path.line(to: NSPoint(x: 25, y: 21))
        stars2Path.line(to: NSPoint(x: 22.71, y: 21.76))
        stars2Path.line(to: NSPoint(x: 22.71, y: 21.76))
        stars2Path.close()
        stars2Path.move(to: NSPoint(x: 20.71, y: 9.76))
        stars2Path.line(to: NSPoint(x: 19.5, y: 13))
        stars2Path.line(to: NSPoint(x: 18.29, y: 9.76))
        stars2Path.line(to: NSPoint(x: 16, y: 9))
        stars2Path.line(to: NSPoint(x: 18.29, y: 8.24))
        stars2Path.line(to: NSPoint(x: 19.5, y: 5))
        stars2Path.line(to: NSPoint(x: 20.71, y: 8.24))
        stars2Path.line(to: NSPoint(x: 23, y: 9))
        stars2Path.line(to: NSPoint(x: 20.71, y: 9.76))
        stars2Path.line(to: NSPoint(x: 20.71, y: 9.76))
        stars2Path.line(to: NSPoint(x: 20.71, y: 9.76))
        stars2Path.close()
        stars2Path.move(to: NSPoint(x: 13.46, y: 17.51))
        stars2Path.line(to: NSPoint(x: 11.5, y: 23))
        stars2Path.line(to: NSPoint(x: 9.54, y: 17.51))
        stars2Path.line(to: NSPoint(x: 5, y: 16))
        stars2Path.line(to: NSPoint(x: 9.54, y: 14.49))
        stars2Path.line(to: NSPoint(x: 11.5, y: 9))
        stars2Path.line(to: NSPoint(x: 13.46, y: 14.49))
        stars2Path.line(to: NSPoint(x: 18, y: 16))
        stars2Path.line(to: NSPoint(x: 13.46, y: 17.51))
        stars2Path.line(to: NSPoint(x: 13.46, y: 17.51))
        stars2Path.line(to: NSPoint(x: 13.46, y: 17.51))
        stars2Path.close()
        stars2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        stars2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClouds2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-40-clouds
        //// clouds 3 Drawing
        let clouds3Path = NSBezierPath()
        clouds3Path.move(to: NSPoint(x: 26.32, y: 12.01))
        clouds3Path.curve(to: NSPoint(x: 30, y: 16), controlPoint1: NSPoint(x: 28.36, y: 12.11), controlPoint2: NSPoint(x: 30, y: 13.86))
        clouds3Path.curve(to: NSPoint(x: 26.98, y: 19.9), controlPoint1: NSPoint(x: 30, y: 17.9), controlPoint2: NSPoint(x: 28.71, y: 19.5))
        clouds3Path.curve(to: NSPoint(x: 27.1, y: 21), controlPoint1: NSPoint(x: 27.06, y: 20.25), controlPoint2: NSPoint(x: 27.1, y: 20.62))
        clouds3Path.curve(to: NSPoint(x: 22.26, y: 26), controlPoint1: NSPoint(x: 27.1, y: 23.76), controlPoint2: NSPoint(x: 24.93, y: 26))
        clouds3Path.curve(to: NSPoint(x: 18.04, y: 23.46), controlPoint1: NSPoint(x: 20.45, y: 26), controlPoint2: NSPoint(x: 18.87, y: 24.98))
        clouds3Path.curve(to: NSPoint(x: 15.97, y: 24), controlPoint1: NSPoint(x: 17.43, y: 23.8), controlPoint2: NSPoint(x: 16.72, y: 24))
        clouds3Path.curve(to: NSPoint(x: 12.11, y: 21.6), controlPoint1: NSPoint(x: 14.3, y: 24), controlPoint2: NSPoint(x: 12.84, y: 23.03))
        clouds3Path.curve(to: NSPoint(x: 15.35, y: 19.44), controlPoint1: NSPoint(x: 13.36, y: 21.17), controlPoint2: NSPoint(x: 14.47, y: 20.42))
        clouds3Path.curve(to: NSPoint(x: 17.9, y: 20), controlPoint1: NSPoint(x: 16.13, y: 19.8), controlPoint2: NSPoint(x: 16.99, y: 20))
        clouds3Path.curve(to: NSPoint(x: 24.16, y: 14.22), controlPoint1: NSPoint(x: 21.14, y: 20), controlPoint2: NSPoint(x: 23.81, y: 17.47))
        clouds3Path.curve(to: NSPoint(x: 26.32, y: 12.01), controlPoint1: NSPoint(x: 25.05, y: 13.69), controlPoint2: NSPoint(x: 25.8, y: 12.93))
        clouds3Path.line(to: NSPoint(x: 26.32, y: 12.01))
        clouds3Path.line(to: NSPoint(x: 26.32, y: 12.01))
        clouds3Path.close()
        clouds3Path.move(to: NSPoint(x: 26.13, y: 9))
        clouds3Path.curve(to: NSPoint(x: 21.29, y: 4), controlPoint1: NSPoint(x: 26.13, y: 6.24), controlPoint2: NSPoint(x: 23.96, y: 4))
        clouds3Path.line(to: NSPoint(x: 4.84, y: 4))
        clouds3Path.curve(to: NSPoint(x: 0, y: 9), controlPoint1: NSPoint(x: 2.16, y: 4), controlPoint2: NSPoint(x: 0, y: 6.24))
        clouds3Path.curve(to: NSPoint(x: 2.91, y: 13.59), controlPoint1: NSPoint(x: 0, y: 11.05), controlPoint2: NSPoint(x: 1.2, y: 12.82))
        clouds3Path.curve(to: NSPoint(x: 2.9, y: 14), controlPoint1: NSPoint(x: 2.91, y: 13.72), controlPoint2: NSPoint(x: 2.9, y: 13.86))
        clouds3Path.curve(to: NSPoint(x: 9.68, y: 21), controlPoint1: NSPoint(x: 2.9, y: 17.87), controlPoint2: NSPoint(x: 5.94, y: 21))
        clouds3Path.curve(to: NSPoint(x: 15.11, y: 18.18), controlPoint1: NSPoint(x: 11.9, y: 21), controlPoint2: NSPoint(x: 13.87, y: 19.89))
        clouds3Path.curve(to: NSPoint(x: 17.9, y: 19), controlPoint1: NSPoint(x: 15.92, y: 18.7), controlPoint2: NSPoint(x: 16.88, y: 19))
        clouds3Path.curve(to: NSPoint(x: 23.23, y: 13.59), controlPoint1: NSPoint(x: 20.82, y: 19), controlPoint2: NSPoint(x: 23.18, y: 16.58))
        clouds3Path.curve(to: NSPoint(x: 26.13, y: 9), controlPoint1: NSPoint(x: 24.94, y: 12.81), controlPoint2: NSPoint(x: 26.13, y: 11.05))
        clouds3Path.line(to: NSPoint(x: 26.13, y: 9))
        clouds3Path.close()
        clouds3Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        clouds3Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonrise(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-41-moonrise
        //// moonrise 2 Drawing
        let moonrise2Path = NSBezierPath()
        moonrise2Path.move(to: NSPoint(x: 17.84, y: 12.07))
        moonrise2Path.curve(to: NSPoint(x: 19.34, y: 14.67), controlPoint1: NSPoint(x: 18.56, y: 12.77), controlPoint2: NSPoint(x: 19.09, y: 13.66))
        moonrise2Path.curve(to: NSPoint(x: 19.49, y: 15.76), controlPoint1: NSPoint(x: 19.42, y: 15.02), controlPoint2: NSPoint(x: 19.48, y: 15.39))
        moonrise2Path.curve(to: NSPoint(x: 18, y: 15.51), controlPoint1: NSPoint(x: 19.03, y: 15.59), controlPoint2: NSPoint(x: 18.52, y: 15.51))
        moonrise2Path.curve(to: NSPoint(x: 13.5, y: 20.01), controlPoint1: NSPoint(x: 15.51, y: 15.51), controlPoint2: NSPoint(x: 13.5, y: 17.52))
        moonrise2Path.curve(to: NSPoint(x: 13.75, y: 21.5), controlPoint1: NSPoint(x: 13.5, y: 20.53), controlPoint2: NSPoint(x: 13.59, y: 21.03))
        moonrise2Path.curve(to: NSPoint(x: 12.66, y: 21.34), controlPoint1: NSPoint(x: 13.38, y: 21.48), controlPoint2: NSPoint(x: 13.01, y: 21.43))
        moonrise2Path.curve(to: NSPoint(x: 8.5, y: 16.01), controlPoint1: NSPoint(x: 10.27, y: 20.74), controlPoint2: NSPoint(x: 8.5, y: 18.58))
        moonrise2Path.curve(to: NSPoint(x: 11.22, y: 11.26), controlPoint1: NSPoint(x: 8.5, y: 13.98), controlPoint2: NSPoint(x: 9.59, y: 12.21))
        moonrise2Path.line(to: NSPoint(x: 15, y: 14.5))
        moonrise2Path.line(to: NSPoint(x: 17.84, y: 12.07))
        moonrise2Path.line(to: NSPoint(x: 17.84, y: 12.07))
        moonrise2Path.line(to: NSPoint(x: 17.84, y: 12.07))
        moonrise2Path.close()
        moonrise2Path.move(to: NSPoint(x: 6.01, y: 9.5))
        moonrise2Path.curve(to: NSPoint(x: 5.5, y: 9), controlPoint1: NSPoint(x: 5.73, y: 9.5), controlPoint2: NSPoint(x: 5.5, y: 9.27))
        moonrise2Path.curve(to: NSPoint(x: 6.01, y: 8.5), controlPoint1: NSPoint(x: 5.5, y: 8.72), controlPoint2: NSPoint(x: 5.73, y: 8.5))
        moonrise2Path.line(to: NSPoint(x: 12.08, y: 8.5))
        moonrise2Path.line(to: NSPoint(x: 13.25, y: 9.5))
        moonrise2Path.line(to: NSPoint(x: 15, y: 11))
        moonrise2Path.line(to: NSPoint(x: 16.75, y: 9.5))
        moonrise2Path.line(to: NSPoint(x: 17.92, y: 8.5))
        moonrise2Path.line(to: NSPoint(x: 23.99, y: 8.5))
        moonrise2Path.curve(to: NSPoint(x: 24.5, y: 9), controlPoint1: NSPoint(x: 24.27, y: 8.5), controlPoint2: NSPoint(x: 24.5, y: 8.73))
        moonrise2Path.curve(to: NSPoint(x: 23.99, y: 9.5), controlPoint1: NSPoint(x: 24.5, y: 9.28), controlPoint2: NSPoint(x: 24.27, y: 9.5))
        moonrise2Path.line(to: NSPoint(x: 18.5, y: 9.5))
        moonrise2Path.line(to: NSPoint(x: 15, y: 12.5))
        moonrise2Path.line(to: NSPoint(x: 11.5, y: 9.5))
        moonrise2Path.line(to: NSPoint(x: 6.01, y: 9.5))
        moonrise2Path.line(to: NSPoint(x: 6.01, y: 9.5))
        moonrise2Path.close()
        moonrise2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        moonrise2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonset(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-42-moonset
        //// moonset 2 Drawing
        let moonset2Path = NSBezierPath()
        moonset2Path.move(to: NSPoint(x: 19.81, y: 16.47))
        moonset2Path.curve(to: NSPoint(x: 14.47, y: 12.31), controlPoint1: NSPoint(x: 19.21, y: 14.08), controlPoint2: NSPoint(x: 17.05, y: 12.31))
        moonset2Path.curve(to: NSPoint(x: 8.97, y: 17.81), controlPoint1: NSPoint(x: 11.43, y: 12.31), controlPoint2: NSPoint(x: 8.97, y: 14.77))
        moonset2Path.curve(to: NSPoint(x: 13.13, y: 23.14), controlPoint1: NSPoint(x: 8.97, y: 20.38), controlPoint2: NSPoint(x: 10.74, y: 22.54))
        moonset2Path.curve(to: NSPoint(x: 14.23, y: 23.3), controlPoint1: NSPoint(x: 13.49, y: 23.23), controlPoint2: NSPoint(x: 13.85, y: 23.28))
        moonset2Path.curve(to: NSPoint(x: 13.97, y: 21.81), controlPoint1: NSPoint(x: 14.06, y: 22.83), controlPoint2: NSPoint(x: 13.97, y: 22.33))
        moonset2Path.curve(to: NSPoint(x: 18.47, y: 17.31), controlPoint1: NSPoint(x: 13.97, y: 19.32), controlPoint2: NSPoint(x: 15.99, y: 17.31))
        moonset2Path.curve(to: NSPoint(x: 19.97, y: 17.56), controlPoint1: NSPoint(x: 18.99, y: 17.31), controlPoint2: NSPoint(x: 19.5, y: 17.39))
        moonset2Path.curve(to: NSPoint(x: 19.81, y: 16.47), controlPoint1: NSPoint(x: 19.95, y: 17.19), controlPoint2: NSPoint(x: 19.9, y: 16.82))
        moonset2Path.line(to: NSPoint(x: 19.81, y: 16.47))
        moonset2Path.close()
        moonset2Path.move(to: NSPoint(x: 6.01, y: 9.8))
        moonset2Path.curve(to: NSPoint(x: 5.5, y: 10.3), controlPoint1: NSPoint(x: 5.73, y: 9.8), controlPoint2: NSPoint(x: 5.5, y: 10.03))
        moonset2Path.curve(to: NSPoint(x: 6.01, y: 10.8), controlPoint1: NSPoint(x: 5.5, y: 10.58), controlPoint2: NSPoint(x: 5.73, y: 10.8))
        moonset2Path.line(to: NSPoint(x: 12.08, y: 10.8))
        moonset2Path.line(to: NSPoint(x: 13.25, y: 9.8))
        moonset2Path.line(to: NSPoint(x: 15, y: 8.3))
        moonset2Path.line(to: NSPoint(x: 16.75, y: 9.8))
        moonset2Path.line(to: NSPoint(x: 17.92, y: 10.8))
        moonset2Path.line(to: NSPoint(x: 23.99, y: 10.8))
        moonset2Path.curve(to: NSPoint(x: 24.5, y: 10.3), controlPoint1: NSPoint(x: 24.27, y: 10.8), controlPoint2: NSPoint(x: 24.5, y: 10.57))
        moonset2Path.curve(to: NSPoint(x: 23.99, y: 9.8), controlPoint1: NSPoint(x: 24.5, y: 10.02), controlPoint2: NSPoint(x: 24.27, y: 9.8))
        moonset2Path.line(to: NSPoint(x: 18.5, y: 9.8))
        moonset2Path.line(to: NSPoint(x: 15, y: 6.8))
        moonset2Path.line(to: NSPoint(x: 11.5, y: 9.8))
        moonset2Path.line(to: NSPoint(x: 6.01, y: 9.8))
        moonset2Path.line(to: NSPoint(x: 6.01, y: 9.8))
        moonset2Path.close()
        moonset2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        moonset2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawWind(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-43-wind
        //// wind 2 Drawing
        let wind2Path = NSBezierPath()
        wind2Path.move(to: NSPoint(x: 28.5, y: 17))
        wind2Path.curve(to: NSPoint(x: 24.5, y: 21), controlPoint1: NSPoint(x: 28.5, y: 19.21), controlPoint2: NSPoint(x: 26.7, y: 21))
        wind2Path.curve(to: NSPoint(x: 20.5, y: 17), controlPoint1: NSPoint(x: 22.29, y: 21), controlPoint2: NSPoint(x: 20.5, y: 19.21))
        wind2Path.line(to: NSPoint(x: 22.5, y: 17))
        wind2Path.curve(to: NSPoint(x: 24.5, y: 19), controlPoint1: NSPoint(x: 22.5, y: 18.1), controlPoint2: NSPoint(x: 23.39, y: 19))
        wind2Path.curve(to: NSPoint(x: 26.5, y: 17), controlPoint1: NSPoint(x: 25.6, y: 19), controlPoint2: NSPoint(x: 26.5, y: 18.11))
        wind2Path.curve(to: NSPoint(x: 24.5, y: 15), controlPoint1: NSPoint(x: 26.5, y: 15.9), controlPoint2: NSPoint(x: 25.61, y: 15))
        wind2Path.line(to: NSPoint(x: 1.5, y: 15))
        wind2Path.line(to: NSPoint(x: 1.5, y: 13))
        wind2Path.line(to: NSPoint(x: 24.5, y: 13))
        wind2Path.curve(to: NSPoint(x: 28.5, y: 17), controlPoint1: NSPoint(x: 26.71, y: 13), controlPoint2: NSPoint(x: 28.5, y: 14.8))
        wind2Path.line(to: NSPoint(x: 28.5, y: 17))
        wind2Path.close()
        wind2Path.move(to: NSPoint(x: 19.5, y: 21))
        wind2Path.curve(to: NSPoint(x: 15.5, y: 25), controlPoint1: NSPoint(x: 19.5, y: 23.21), controlPoint2: NSPoint(x: 17.7, y: 25))
        wind2Path.curve(to: NSPoint(x: 11.5, y: 21), controlPoint1: NSPoint(x: 13.29, y: 25), controlPoint2: NSPoint(x: 11.5, y: 23.21))
        wind2Path.line(to: NSPoint(x: 11.5, y: 21))
        wind2Path.line(to: NSPoint(x: 13.5, y: 21))
        wind2Path.curve(to: NSPoint(x: 15.5, y: 23), controlPoint1: NSPoint(x: 13.5, y: 22.1), controlPoint2: NSPoint(x: 14.39, y: 23))
        wind2Path.curve(to: NSPoint(x: 17.5, y: 21), controlPoint1: NSPoint(x: 16.6, y: 23), controlPoint2: NSPoint(x: 17.5, y: 22.11))
        wind2Path.curve(to: NSPoint(x: 15.49, y: 19), controlPoint1: NSPoint(x: 17.5, y: 19.9), controlPoint2: NSPoint(x: 16.6, y: 19))
        wind2Path.line(to: NSPoint(x: 3.5, y: 19))
        wind2Path.line(to: NSPoint(x: 3.5, y: 17))
        wind2Path.line(to: NSPoint(x: 15.5, y: 17))
        wind2Path.curve(to: NSPoint(x: 19.5, y: 21), controlPoint1: NSPoint(x: 17.71, y: 17), controlPoint2: NSPoint(x: 19.5, y: 18.8))
        wind2Path.line(to: NSPoint(x: 19.5, y: 21))
        wind2Path.close()
        wind2Path.move(to: NSPoint(x: 24.5, y: 8))
        wind2Path.curve(to: NSPoint(x: 21.5, y: 5), controlPoint1: NSPoint(x: 24.5, y: 6.34), controlPoint2: NSPoint(x: 23.15, y: 5))
        wind2Path.line(to: NSPoint(x: 21.5, y: 5))
        wind2Path.curve(to: NSPoint(x: 18.5, y: 7.99), controlPoint1: NSPoint(x: 19.84, y: 5), controlPoint2: NSPoint(x: 18.5, y: 6.34))
        wind2Path.line(to: NSPoint(x: 18.5, y: 8))
        wind2Path.line(to: NSPoint(x: 20.5, y: 8))
        wind2Path.curve(to: NSPoint(x: 21.5, y: 7), controlPoint1: NSPoint(x: 20.5, y: 7.45), controlPoint2: NSPoint(x: 20.94, y: 7))
        wind2Path.line(to: NSPoint(x: 21.5, y: 7))
        wind2Path.curve(to: NSPoint(x: 22.5, y: 8), controlPoint1: NSPoint(x: 22.05, y: 7), controlPoint2: NSPoint(x: 22.5, y: 7.44))
        wind2Path.line(to: NSPoint(x: 22.5, y: 8))
        wind2Path.curve(to: NSPoint(x: 21.49, y: 9), controlPoint1: NSPoint(x: 22.5, y: 8.55), controlPoint2: NSPoint(x: 22.05, y: 9))
        wind2Path.line(to: NSPoint(x: 7.5, y: 9))
        wind2Path.line(to: NSPoint(x: 7.5, y: 11))
        wind2Path.line(to: NSPoint(x: 21.5, y: 11))
        wind2Path.curve(to: NSPoint(x: 24.5, y: 8), controlPoint1: NSPoint(x: 23.16, y: 11), controlPoint2: NSPoint(x: 24.5, y: 9.65))
        wind2Path.line(to: NSPoint(x: 24.5, y: 8))
        wind2Path.line(to: NSPoint(x: 24.5, y: 8))
        wind2Path.close()
        wind2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        wind2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFullMoon(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// main Drawing
        let mainPath = NSBezierPath(ovalIn: NSRect(x: 8, y: 10, width: 12, height: 12))
        fillColor.setFill()
        mainPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonCrescent(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// main Drawing
        let mainPath = NSBezierPath()
        mainPath.move(to: NSPoint(x: 16, y: 23))
        mainPath.curve(to: NSPoint(x: 11, y: 18), controlPoint1: NSPoint(x: 13.24, y: 23), controlPoint2: NSPoint(x: 11, y: 20.76))
        mainPath.curve(to: NSPoint(x: 16, y: 13), controlPoint1: NSPoint(x: 11, y: 15.24), controlPoint2: NSPoint(x: 13.24, y: 13))
        mainPath.curve(to: NSPoint(x: 13, y: 18), controlPoint1: NSPoint(x: 14.34, y: 13), controlPoint2: NSPoint(x: 13, y: 15.24))
        mainPath.curve(to: NSPoint(x: 16, y: 23), controlPoint1: NSPoint(x: 13, y: 20.76), controlPoint2: NSPoint(x: 14.34, y: 23))
        mainPath.line(to: NSPoint(x: 16, y: 23))
        mainPath.line(to: NSPoint(x: 16, y: 23))
        mainPath.close()
        mainPath.move(to: NSPoint(x: 16, y: 12))
        mainPath.curve(to: NSPoint(x: 22, y: 18), controlPoint1: NSPoint(x: 19.31, y: 12), controlPoint2: NSPoint(x: 22, y: 14.69))
        mainPath.curve(to: NSPoint(x: 16, y: 24), controlPoint1: NSPoint(x: 22, y: 21.31), controlPoint2: NSPoint(x: 19.31, y: 24))
        mainPath.curve(to: NSPoint(x: 10, y: 18), controlPoint1: NSPoint(x: 12.69, y: 24), controlPoint2: NSPoint(x: 10, y: 21.31))
        mainPath.curve(to: NSPoint(x: 16, y: 12), controlPoint1: NSPoint(x: 10, y: 14.69), controlPoint2: NSPoint(x: 12.69, y: 12))
        mainPath.line(to: NSPoint(x: 16, y: 12))
        mainPath.close()
        mainPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        mainPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonHalf(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// half-moon Drawing
        let halfmoonPath = NSBezierPath()
        halfmoonPath.move(to: NSPoint(x: 14, y: 9))
        halfmoonPath.curve(to: NSPoint(x: 20, y: 15), controlPoint1: NSPoint(x: 17.31, y: 9), controlPoint2: NSPoint(x: 20, y: 11.69))
        halfmoonPath.curve(to: NSPoint(x: 14, y: 21), controlPoint1: NSPoint(x: 20, y: 18.31), controlPoint2: NSPoint(x: 17.31, y: 21))
        halfmoonPath.curve(to: NSPoint(x: 8, y: 15), controlPoint1: NSPoint(x: 10.69, y: 21), controlPoint2: NSPoint(x: 8, y: 18.31))
        halfmoonPath.curve(to: NSPoint(x: 14, y: 9), controlPoint1: NSPoint(x: 8, y: 11.69), controlPoint2: NSPoint(x: 10.69, y: 9))
        halfmoonPath.line(to: NSPoint(x: 14, y: 9))
        halfmoonPath.close()
        halfmoonPath.move(to: NSPoint(x: 14, y: 10))
        halfmoonPath.line(to: NSPoint(x: 14, y: 15))
        halfmoonPath.line(to: NSPoint(x: 14, y: 20))
        halfmoonPath.curve(to: NSPoint(x: 9, y: 15), controlPoint1: NSPoint(x: 11.24, y: 20), controlPoint2: NSPoint(x: 9, y: 17.76))
        halfmoonPath.curve(to: NSPoint(x: 14, y: 10), controlPoint1: NSPoint(x: 9, y: 12.24), controlPoint2: NSPoint(x: 11.24, y: 10))
        halfmoonPath.line(to: NSPoint(x: 14, y: 10))
        halfmoonPath.close()
        halfmoonPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        halfmoonPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonGibbous(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// main Drawing
        let mainPath = NSBezierPath()
        mainPath.move(to: NSPoint(x: 15, y: 20))
        mainPath.curve(to: NSPoint(x: 10, y: 15), controlPoint1: NSPoint(x: 12.24, y: 20), controlPoint2: NSPoint(x: 10, y: 17.76))
        mainPath.curve(to: NSPoint(x: 15, y: 10), controlPoint1: NSPoint(x: 10, y: 12.24), controlPoint2: NSPoint(x: 12.24, y: 10))
        mainPath.curve(to: NSPoint(x: 18, y: 15), controlPoint1: NSPoint(x: 16.66, y: 10), controlPoint2: NSPoint(x: 18, y: 12.24))
        mainPath.curve(to: NSPoint(x: 15, y: 20), controlPoint1: NSPoint(x: 18, y: 17.76), controlPoint2: NSPoint(x: 16.66, y: 20))
        mainPath.line(to: NSPoint(x: 15, y: 20))
        mainPath.close()
        mainPath.move(to: NSPoint(x: 15, y: 9))
        mainPath.curve(to: NSPoint(x: 21, y: 15), controlPoint1: NSPoint(x: 18.31, y: 9), controlPoint2: NSPoint(x: 21, y: 11.69))
        mainPath.curve(to: NSPoint(x: 15, y: 21), controlPoint1: NSPoint(x: 21, y: 18.31), controlPoint2: NSPoint(x: 18.31, y: 21))
        mainPath.curve(to: NSPoint(x: 9, y: 15), controlPoint1: NSPoint(x: 11.69, y: 21), controlPoint2: NSPoint(x: 9, y: 18.31))
        mainPath.curve(to: NSPoint(x: 15, y: 9), controlPoint1: NSPoint(x: 9, y: 11.69), controlPoint2: NSPoint(x: 11.69, y: 9))
        mainPath.line(to: NSPoint(x: 15, y: 9))
        mainPath.close()
        mainPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        mainPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoon2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// main Drawing
        let mainPath = NSBezierPath()
        mainPath.move(to: NSPoint(x: 15, y: 9))
        mainPath.curve(to: NSPoint(x: 21, y: 15), controlPoint1: NSPoint(x: 18.31, y: 9), controlPoint2: NSPoint(x: 21, y: 11.69))
        mainPath.curve(to: NSPoint(x: 15, y: 21), controlPoint1: NSPoint(x: 21, y: 18.31), controlPoint2: NSPoint(x: 18.31, y: 21))
        mainPath.curve(to: NSPoint(x: 9, y: 15), controlPoint1: NSPoint(x: 11.69, y: 21), controlPoint2: NSPoint(x: 9, y: 18.31))
        mainPath.curve(to: NSPoint(x: 15, y: 9), controlPoint1: NSPoint(x: 9, y: 11.69), controlPoint2: NSPoint(x: 11.69, y: 9))
        mainPath.line(to: NSPoint(x: 15, y: 9))
        mainPath.close()
        mainPath.move(to: NSPoint(x: 15, y: 10))
        mainPath.curve(to: NSPoint(x: 20, y: 15), controlPoint1: NSPoint(x: 17.76, y: 10), controlPoint2: NSPoint(x: 20, y: 12.24))
        mainPath.curve(to: NSPoint(x: 15, y: 20), controlPoint1: NSPoint(x: 20, y: 17.76), controlPoint2: NSPoint(x: 17.76, y: 20))
        mainPath.curve(to: NSPoint(x: 10, y: 15), controlPoint1: NSPoint(x: 12.24, y: 20), controlPoint2: NSPoint(x: 10, y: 17.76))
        mainPath.curve(to: NSPoint(x: 15, y: 10), controlPoint1: NSPoint(x: 10, y: 12.24), controlPoint2: NSPoint(x: 12.24, y: 10))
        mainPath.line(to: NSPoint(x: 15, y: 10))
        mainPath.close()
        mainPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        mainPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonGibbous2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// main Drawing
        let mainPath = NSBezierPath()
        mainPath.move(to: NSPoint(x: 15, y: 20))
        mainPath.curve(to: NSPoint(x: 20, y: 15), controlPoint1: NSPoint(x: 17.76, y: 20), controlPoint2: NSPoint(x: 20, y: 17.76))
        mainPath.curve(to: NSPoint(x: 15, y: 10), controlPoint1: NSPoint(x: 20, y: 12.24), controlPoint2: NSPoint(x: 17.76, y: 10))
        mainPath.curve(to: NSPoint(x: 12, y: 15), controlPoint1: NSPoint(x: 13.34, y: 10), controlPoint2: NSPoint(x: 12, y: 12.24))
        mainPath.curve(to: NSPoint(x: 15, y: 20), controlPoint1: NSPoint(x: 12, y: 17.76), controlPoint2: NSPoint(x: 13.34, y: 20))
        mainPath.line(to: NSPoint(x: 15, y: 20))
        mainPath.close()
        mainPath.move(to: NSPoint(x: 15, y: 9))
        mainPath.curve(to: NSPoint(x: 9, y: 15), controlPoint1: NSPoint(x: 11.69, y: 9), controlPoint2: NSPoint(x: 9, y: 11.69))
        mainPath.curve(to: NSPoint(x: 15, y: 21), controlPoint1: NSPoint(x: 9, y: 18.31), controlPoint2: NSPoint(x: 11.69, y: 21))
        mainPath.curve(to: NSPoint(x: 21, y: 15), controlPoint1: NSPoint(x: 18.31, y: 21), controlPoint2: NSPoint(x: 21, y: 18.31))
        mainPath.curve(to: NSPoint(x: 15, y: 9), controlPoint1: NSPoint(x: 21, y: 11.69), controlPoint2: NSPoint(x: 18.31, y: 9))
        mainPath.line(to: NSPoint(x: 15, y: 9))
        mainPath.close()
        mainPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        mainPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonHalf2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// half-moon Drawing
        let halfmoonPath = NSBezierPath()
        halfmoonPath.move(to: NSPoint(x: 18, y: 9))
        halfmoonPath.curve(to: NSPoint(x: 12, y: 15), controlPoint1: NSPoint(x: 14.69, y: 9), controlPoint2: NSPoint(x: 12, y: 11.69))
        halfmoonPath.curve(to: NSPoint(x: 18, y: 21), controlPoint1: NSPoint(x: 12, y: 18.31), controlPoint2: NSPoint(x: 14.69, y: 21))
        halfmoonPath.curve(to: NSPoint(x: 24, y: 15), controlPoint1: NSPoint(x: 21.31, y: 21), controlPoint2: NSPoint(x: 24, y: 18.31))
        halfmoonPath.curve(to: NSPoint(x: 18, y: 9), controlPoint1: NSPoint(x: 24, y: 11.69), controlPoint2: NSPoint(x: 21.31, y: 9))
        halfmoonPath.line(to: NSPoint(x: 18, y: 9))
        halfmoonPath.close()
        halfmoonPath.move(to: NSPoint(x: 18, y: 10))
        halfmoonPath.line(to: NSPoint(x: 18, y: 15))
        halfmoonPath.line(to: NSPoint(x: 18, y: 20))
        halfmoonPath.curve(to: NSPoint(x: 23, y: 15), controlPoint1: NSPoint(x: 20.76, y: 20), controlPoint2: NSPoint(x: 23, y: 17.76))
        halfmoonPath.curve(to: NSPoint(x: 18, y: 10), controlPoint1: NSPoint(x: 23, y: 12.24), controlPoint2: NSPoint(x: 20.76, y: 10))
        halfmoonPath.line(to: NSPoint(x: 18, y: 10))
        halfmoonPath.close()
        halfmoonPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        halfmoonPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMoonCrescent2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-51-crescent
        //// crescent Drawing
        let crescentPath = NSBezierPath()
        crescentPath.move(to: NSPoint(x: 14, y: 20))
        crescentPath.curve(to: NSPoint(x: 19, y: 15), controlPoint1: NSPoint(x: 16.76, y: 20), controlPoint2: NSPoint(x: 19, y: 17.76))
        crescentPath.curve(to: NSPoint(x: 14, y: 10), controlPoint1: NSPoint(x: 19, y: 12.24), controlPoint2: NSPoint(x: 16.76, y: 10))
        crescentPath.curve(to: NSPoint(x: 17, y: 15), controlPoint1: NSPoint(x: 15.66, y: 10), controlPoint2: NSPoint(x: 17, y: 12.24))
        crescentPath.curve(to: NSPoint(x: 14, y: 20), controlPoint1: NSPoint(x: 17, y: 17.76), controlPoint2: NSPoint(x: 15.66, y: 20))
        crescentPath.line(to: NSPoint(x: 14, y: 20))
        crescentPath.line(to: NSPoint(x: 14, y: 20))
        crescentPath.close()
        crescentPath.move(to: NSPoint(x: 14, y: 9))
        crescentPath.curve(to: NSPoint(x: 8, y: 15), controlPoint1: NSPoint(x: 10.69, y: 9), controlPoint2: NSPoint(x: 8, y: 11.69))
        crescentPath.curve(to: NSPoint(x: 14, y: 21), controlPoint1: NSPoint(x: 8, y: 18.31), controlPoint2: NSPoint(x: 10.69, y: 21))
        crescentPath.curve(to: NSPoint(x: 20, y: 15), controlPoint1: NSPoint(x: 17.31, y: 21), controlPoint2: NSPoint(x: 20, y: 18.31))
        crescentPath.curve(to: NSPoint(x: 14, y: 9), controlPoint1: NSPoint(x: 20, y: 11.69), controlPoint2: NSPoint(x: 17.31, y: 9))
        crescentPath.line(to: NSPoint(x: 14, y: 9))
        crescentPath.close()
        crescentPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        crescentPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBarometer(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-52-barometer
        //// barometer 2 Drawing
        let barometer2Path = NSBezierPath()
        barometer2Path.move(to: NSPoint(x: 16.39, y: 9.08))
        barometer2Path.curve(to: NSPoint(x: 17.5, y: 7), controlPoint1: NSPoint(x: 17.06, y: 8.63), controlPoint2: NSPoint(x: 17.5, y: 7.87))
        barometer2Path.curve(to: NSPoint(x: 17.45, y: 6.5), controlPoint1: NSPoint(x: 17.5, y: 6.83), controlPoint2: NSPoint(x: 17.48, y: 6.66))
        barometer2Path.line(to: NSPoint(x: 27.73, y: 6.5))
        barometer2Path.line(to: NSPoint(x: 27.73, y: 6.5))
        barometer2Path.curve(to: NSPoint(x: 28.5, y: 11), controlPoint1: NSPoint(x: 28.23, y: 7.91), controlPoint2: NSPoint(x: 28.5, y: 9.42))
        barometer2Path.curve(to: NSPoint(x: 15, y: 24.5), controlPoint1: NSPoint(x: 28.5, y: 18.46), controlPoint2: NSPoint(x: 22.46, y: 24.5))
        barometer2Path.curve(to: NSPoint(x: 1.5, y: 11), controlPoint1: NSPoint(x: 7.54, y: 24.5), controlPoint2: NSPoint(x: 1.5, y: 18.46))
        barometer2Path.curve(to: NSPoint(x: 2.27, y: 6.5), controlPoint1: NSPoint(x: 1.5, y: 9.42), controlPoint2: NSPoint(x: 1.77, y: 7.91))
        barometer2Path.line(to: NSPoint(x: 12.55, y: 6.5))
        barometer2Path.line(to: NSPoint(x: 12.55, y: 6.5))
        barometer2Path.curve(to: NSPoint(x: 12.5, y: 7), controlPoint1: NSPoint(x: 12.52, y: 6.66), controlPoint2: NSPoint(x: 12.5, y: 6.83))
        barometer2Path.curve(to: NSPoint(x: 13.61, y: 9.08), controlPoint1: NSPoint(x: 12.5, y: 7.87), controlPoint2: NSPoint(x: 12.94, y: 8.63))
        barometer2Path.line(to: NSPoint(x: 15, y: 16.5))
        barometer2Path.line(to: NSPoint(x: 16.39, y: 9.08))
        barometer2Path.line(to: NSPoint(x: 16.39, y: 9.08))
        barometer2Path.line(to: NSPoint(x: 16.39, y: 9.08))
        barometer2Path.close()
        barometer2Path.move(to: NSPoint(x: 15, y: 5.5))
        barometer2Path.curve(to: NSPoint(x: 16.5, y: 7), controlPoint1: NSPoint(x: 15.83, y: 5.5), controlPoint2: NSPoint(x: 16.5, y: 6.17))
        barometer2Path.curve(to: NSPoint(x: 15, y: 8.5), controlPoint1: NSPoint(x: 16.5, y: 7.83), controlPoint2: NSPoint(x: 15.83, y: 8.5))
        barometer2Path.curve(to: NSPoint(x: 13.5, y: 7), controlPoint1: NSPoint(x: 14.17, y: 8.5), controlPoint2: NSPoint(x: 13.5, y: 7.83))
        barometer2Path.curve(to: NSPoint(x: 15, y: 5.5), controlPoint1: NSPoint(x: 13.5, y: 6.17), controlPoint2: NSPoint(x: 14.17, y: 5.5))
        barometer2Path.line(to: NSPoint(x: 15, y: 5.5))
        barometer2Path.line(to: NSPoint(x: 15, y: 5.5))
        barometer2Path.close()
        barometer2Path.move(to: NSPoint(x: 15, y: 23.5))
        barometer2Path.curve(to: NSPoint(x: 14.5, y: 23.01), controlPoint1: NSPoint(x: 14.72, y: 23.5), controlPoint2: NSPoint(x: 14.5, y: 23.28))
        barometer2Path.line(to: NSPoint(x: 14.5, y: 19.99))
        barometer2Path.curve(to: NSPoint(x: 15, y: 19.5), controlPoint1: NSPoint(x: 14.5, y: 19.72), controlPoint2: NSPoint(x: 14.73, y: 19.5))
        barometer2Path.curve(to: NSPoint(x: 15.5, y: 19.99), controlPoint1: NSPoint(x: 15.28, y: 19.5), controlPoint2: NSPoint(x: 15.5, y: 19.72))
        barometer2Path.line(to: NSPoint(x: 15.5, y: 23.01))
        barometer2Path.curve(to: NSPoint(x: 15, y: 23.5), controlPoint1: NSPoint(x: 15.5, y: 23.28), controlPoint2: NSPoint(x: 15.27, y: 23.5))
        barometer2Path.line(to: NSPoint(x: 15, y: 23.5))
        barometer2Path.line(to: NSPoint(x: 15, y: 23.5))
        barometer2Path.close()
        barometer2Path.move(to: NSPoint(x: 21.76, y: 21.3))
        barometer2Path.curve(to: NSPoint(x: 21.07, y: 21.2), controlPoint1: NSPoint(x: 21.54, y: 21.47), controlPoint2: NSPoint(x: 21.23, y: 21.42))
        barometer2Path.line(to: NSPoint(x: 19.29, y: 18.76))
        barometer2Path.curve(to: NSPoint(x: 19.41, y: 18.07), controlPoint1: NSPoint(x: 19.13, y: 18.54), controlPoint2: NSPoint(x: 19.19, y: 18.22))
        barometer2Path.curve(to: NSPoint(x: 20.1, y: 18.17), controlPoint1: NSPoint(x: 19.63, y: 17.9), controlPoint2: NSPoint(x: 19.94, y: 17.95))
        barometer2Path.line(to: NSPoint(x: 21.88, y: 20.61))
        barometer2Path.curve(to: NSPoint(x: 21.76, y: 21.3), controlPoint1: NSPoint(x: 22.04, y: 20.83), controlPoint2: NSPoint(x: 21.98, y: 21.15))
        barometer2Path.line(to: NSPoint(x: 21.76, y: 21.3))
        barometer2Path.line(to: NSPoint(x: 21.76, y: 21.3))
        barometer2Path.close()
        barometer2Path.move(to: NSPoint(x: 25.94, y: 15.55))
        barometer2Path.curve(to: NSPoint(x: 25.32, y: 15.88), controlPoint1: NSPoint(x: 25.85, y: 15.81), controlPoint2: NSPoint(x: 25.58, y: 15.96))
        barometer2Path.line(to: NSPoint(x: 22.45, y: 14.94))
        barometer2Path.curve(to: NSPoint(x: 22.14, y: 14.32), controlPoint1: NSPoint(x: 22.19, y: 14.86), controlPoint2: NSPoint(x: 22.05, y: 14.57))
        barometer2Path.curve(to: NSPoint(x: 22.76, y: 13.99), controlPoint1: NSPoint(x: 22.22, y: 14.05), controlPoint2: NSPoint(x: 22.49, y: 13.91))
        barometer2Path.line(to: NSPoint(x: 25.63, y: 14.92))
        barometer2Path.curve(to: NSPoint(x: 25.94, y: 15.55), controlPoint1: NSPoint(x: 25.89, y: 15.01), controlPoint2: NSPoint(x: 26.02, y: 15.3))
        barometer2Path.line(to: NSPoint(x: 25.94, y: 15.55))
        barometer2Path.line(to: NSPoint(x: 25.94, y: 15.55))
        barometer2Path.close()
        barometer2Path.move(to: NSPoint(x: 25.94, y: 8.44))
        barometer2Path.curve(to: NSPoint(x: 25.63, y: 9.07), controlPoint1: NSPoint(x: 26.03, y: 8.7), controlPoint2: NSPoint(x: 25.89, y: 8.98))
        barometer2Path.line(to: NSPoint(x: 22.76, y: 10))
        barometer2Path.curve(to: NSPoint(x: 22.14, y: 9.68), controlPoint1: NSPoint(x: 22.5, y: 10.09), controlPoint2: NSPoint(x: 22.22, y: 9.93))
        barometer2Path.curve(to: NSPoint(x: 22.45, y: 9.05), controlPoint1: NSPoint(x: 22.05, y: 9.42), controlPoint2: NSPoint(x: 22.19, y: 9.14))
        barometer2Path.line(to: NSPoint(x: 25.32, y: 8.12))
        barometer2Path.curve(to: NSPoint(x: 25.94, y: 8.44), controlPoint1: NSPoint(x: 25.58, y: 8.03), controlPoint2: NSPoint(x: 25.86, y: 8.19))
        barometer2Path.line(to: NSPoint(x: 25.94, y: 8.44))
        barometer2Path.line(to: NSPoint(x: 25.94, y: 8.44))
        barometer2Path.close()
        barometer2Path.move(to: NSPoint(x: 4.06, y: 8.44))
        barometer2Path.curve(to: NSPoint(x: 4.68, y: 8.12), controlPoint1: NSPoint(x: 4.15, y: 8.18), controlPoint2: NSPoint(x: 4.42, y: 8.03))
        barometer2Path.line(to: NSPoint(x: 7.55, y: 9.05))
        barometer2Path.curve(to: NSPoint(x: 7.86, y: 9.68), controlPoint1: NSPoint(x: 7.81, y: 9.13), controlPoint2: NSPoint(x: 7.95, y: 9.42))
        barometer2Path.curve(to: NSPoint(x: 7.24, y: 10), controlPoint1: NSPoint(x: 7.78, y: 9.94), controlPoint2: NSPoint(x: 7.51, y: 10.09))
        barometer2Path.line(to: NSPoint(x: 4.37, y: 9.07))
        barometer2Path.curve(to: NSPoint(x: 4.06, y: 8.44), controlPoint1: NSPoint(x: 4.11, y: 8.99), controlPoint2: NSPoint(x: 3.98, y: 8.7))
        barometer2Path.line(to: NSPoint(x: 4.06, y: 8.44))
        barometer2Path.line(to: NSPoint(x: 4.06, y: 8.44))
        barometer2Path.close()
        barometer2Path.move(to: NSPoint(x: 4.06, y: 15.55))
        barometer2Path.curve(to: NSPoint(x: 4.37, y: 14.92), controlPoint1: NSPoint(x: 3.97, y: 15.29), controlPoint2: NSPoint(x: 4.11, y: 15.01))
        barometer2Path.line(to: NSPoint(x: 7.24, y: 13.99))
        barometer2Path.curve(to: NSPoint(x: 7.86, y: 14.32), controlPoint1: NSPoint(x: 7.5, y: 13.91), controlPoint2: NSPoint(x: 7.78, y: 14.06))
        barometer2Path.curve(to: NSPoint(x: 7.55, y: 14.94), controlPoint1: NSPoint(x: 7.95, y: 14.58), controlPoint2: NSPoint(x: 7.81, y: 14.86))
        barometer2Path.line(to: NSPoint(x: 4.68, y: 15.88))
        barometer2Path.curve(to: NSPoint(x: 4.06, y: 15.55), controlPoint1: NSPoint(x: 4.42, y: 15.96), controlPoint2: NSPoint(x: 4.14, y: 15.81))
        barometer2Path.line(to: NSPoint(x: 4.06, y: 15.55))
        barometer2Path.line(to: NSPoint(x: 4.06, y: 15.55))
        barometer2Path.close()
        barometer2Path.move(to: NSPoint(x: 8.24, y: 21.3))
        barometer2Path.curve(to: NSPoint(x: 8.12, y: 20.61), controlPoint1: NSPoint(x: 8.02, y: 21.14), controlPoint2: NSPoint(x: 7.96, y: 20.84))
        barometer2Path.line(to: NSPoint(x: 9.9, y: 18.17))
        barometer2Path.curve(to: NSPoint(x: 10.59, y: 18.07), controlPoint1: NSPoint(x: 10.06, y: 17.95), controlPoint2: NSPoint(x: 10.37, y: 17.91))
        barometer2Path.curve(to: NSPoint(x: 10.71, y: 18.76), controlPoint1: NSPoint(x: 10.81, y: 18.23), controlPoint2: NSPoint(x: 10.87, y: 18.53))
        barometer2Path.line(to: NSPoint(x: 8.93, y: 21.2))
        barometer2Path.curve(to: NSPoint(x: 8.24, y: 21.3), controlPoint1: NSPoint(x: 8.77, y: 21.42), controlPoint2: NSPoint(x: 8.46, y: 21.46))
        barometer2Path.line(to: NSPoint(x: 8.24, y: 21.3))
        barometer2Path.line(to: NSPoint(x: 8.24, y: 21.3))
        barometer2Path.close()
        barometer2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        barometer2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCompassNorth(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-53-compass-north
        //// compass-north 2 Drawing
        let compassnorth2Path = NSBezierPath()
        compassnorth2Path.move(to: NSPoint(x: 15, y: 2))
        compassnorth2Path.curve(to: NSPoint(x: 28, y: 15), controlPoint1: NSPoint(x: 22.18, y: 2), controlPoint2: NSPoint(x: 28, y: 7.82))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 28), controlPoint1: NSPoint(x: 28, y: 22.18), controlPoint2: NSPoint(x: 22.18, y: 28))
        compassnorth2Path.curve(to: NSPoint(x: 2, y: 15), controlPoint1: NSPoint(x: 7.82, y: 28), controlPoint2: NSPoint(x: 2, y: 22.18))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 2), controlPoint1: NSPoint(x: 2, y: 7.82), controlPoint2: NSPoint(x: 7.82, y: 2))
        compassnorth2Path.line(to: NSPoint(x: 15, y: 2))
        compassnorth2Path.close()
        compassnorth2Path.move(to: NSPoint(x: 15, y: 3))
        compassnorth2Path.curve(to: NSPoint(x: 27, y: 15), controlPoint1: NSPoint(x: 21.63, y: 3), controlPoint2: NSPoint(x: 27, y: 8.37))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 27, y: 21.63), controlPoint2: NSPoint(x: 21.63, y: 27))
        compassnorth2Path.curve(to: NSPoint(x: 3, y: 15), controlPoint1: NSPoint(x: 8.37, y: 27), controlPoint2: NSPoint(x: 3, y: 21.63))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 3), controlPoint1: NSPoint(x: 3, y: 8.37), controlPoint2: NSPoint(x: 8.37, y: 3))
        compassnorth2Path.line(to: NSPoint(x: 15, y: 3))
        compassnorth2Path.close()
        compassnorth2Path.move(to: NSPoint(x: 15, y: 4))
        compassnorth2Path.curve(to: NSPoint(x: 26, y: 15), controlPoint1: NSPoint(x: 21.08, y: 4), controlPoint2: NSPoint(x: 26, y: 8.92))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 26, y: 21.08), controlPoint2: NSPoint(x: 21.08, y: 26))
        compassnorth2Path.curve(to: NSPoint(x: 4, y: 15), controlPoint1: NSPoint(x: 8.92, y: 26), controlPoint2: NSPoint(x: 4, y: 21.08))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 4), controlPoint1: NSPoint(x: 4, y: 8.92), controlPoint2: NSPoint(x: 8.92, y: 4))
        compassnorth2Path.line(to: NSPoint(x: 15, y: 4))
        compassnorth2Path.close()
        compassnorth2Path.move(to: NSPoint(x: 15, y: 24))
        compassnorth2Path.curve(to: NSPoint(x: 18, y: 15), controlPoint1: NSPoint(x: 15, y: 24), controlPoint2: NSPoint(x: 18, y: 17))
        compassnorth2Path.curve(to: NSPoint(x: 18, y: 15), controlPoint1: NSPoint(x: 18, y: 14.33), controlPoint2: NSPoint(x: 18, y: 15))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 12), controlPoint1: NSPoint(x: 18, y: 13.34), controlPoint2: NSPoint(x: 16.65, y: 12))
        compassnorth2Path.curve(to: NSPoint(x: 12, y: 15), controlPoint1: NSPoint(x: 13.34, y: 12), controlPoint2: NSPoint(x: 12, y: 13.34))
        compassnorth2Path.curve(to: NSPoint(x: 12, y: 15), controlPoint1: NSPoint(x: 12, y: 15), controlPoint2: NSPoint(x: 12, y: 13.79))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 24), controlPoint1: NSPoint(x: 12, y: 17), controlPoint2: NSPoint(x: 15, y: 24))
        compassnorth2Path.line(to: NSPoint(x: 15, y: 24))
        compassnorth2Path.close()
        compassnorth2Path.move(to: NSPoint(x: 15, y: 13))
        compassnorth2Path.curve(to: NSPoint(x: 17, y: 15), controlPoint1: NSPoint(x: 16.1, y: 13), controlPoint2: NSPoint(x: 17, y: 13.9))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 17), controlPoint1: NSPoint(x: 17, y: 16.1), controlPoint2: NSPoint(x: 16.1, y: 17))
        compassnorth2Path.curve(to: NSPoint(x: 13, y: 15), controlPoint1: NSPoint(x: 13.9, y: 17), controlPoint2: NSPoint(x: 13, y: 16.1))
        compassnorth2Path.curve(to: NSPoint(x: 15, y: 13), controlPoint1: NSPoint(x: 13, y: 13.9), controlPoint2: NSPoint(x: 13.9, y: 13))
        compassnorth2Path.line(to: NSPoint(x: 15, y: 13))
        compassnorth2Path.close()
        compassnorth2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        compassnorth2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCompassWest(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-54-compass-west
        //// compass-west 2 Drawing
        let compasswest2Path = NSBezierPath()
        compasswest2Path.move(to: NSPoint(x: 15, y: 28))
        compasswest2Path.curve(to: NSPoint(x: 2, y: 15), controlPoint1: NSPoint(x: 7.82, y: 28), controlPoint2: NSPoint(x: 2, y: 22.18))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 2), controlPoint1: NSPoint(x: 2, y: 7.82), controlPoint2: NSPoint(x: 7.82, y: 2))
        compasswest2Path.curve(to: NSPoint(x: 28, y: 15), controlPoint1: NSPoint(x: 22.18, y: 2), controlPoint2: NSPoint(x: 28, y: 7.82))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 28), controlPoint1: NSPoint(x: 28, y: 22.18), controlPoint2: NSPoint(x: 22.18, y: 28))
        compasswest2Path.line(to: NSPoint(x: 15, y: 28))
        compasswest2Path.close()
        compasswest2Path.move(to: NSPoint(x: 15, y: 27))
        compasswest2Path.curve(to: NSPoint(x: 3, y: 15), controlPoint1: NSPoint(x: 8.37, y: 27), controlPoint2: NSPoint(x: 3, y: 21.63))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 3), controlPoint1: NSPoint(x: 3, y: 8.37), controlPoint2: NSPoint(x: 8.37, y: 3))
        compasswest2Path.curve(to: NSPoint(x: 27, y: 15), controlPoint1: NSPoint(x: 21.63, y: 3), controlPoint2: NSPoint(x: 27, y: 8.37))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 27, y: 21.63), controlPoint2: NSPoint(x: 21.63, y: 27))
        compasswest2Path.line(to: NSPoint(x: 15, y: 27))
        compasswest2Path.close()
        compasswest2Path.move(to: NSPoint(x: 15, y: 26))
        compasswest2Path.curve(to: NSPoint(x: 4, y: 15), controlPoint1: NSPoint(x: 8.92, y: 26), controlPoint2: NSPoint(x: 4, y: 21.08))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 4), controlPoint1: NSPoint(x: 4, y: 8.92), controlPoint2: NSPoint(x: 8.92, y: 4))
        compasswest2Path.curve(to: NSPoint(x: 26, y: 15), controlPoint1: NSPoint(x: 21.08, y: 4), controlPoint2: NSPoint(x: 26, y: 8.92))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 26, y: 21.08), controlPoint2: NSPoint(x: 21.08, y: 26))
        compasswest2Path.line(to: NSPoint(x: 15, y: 26))
        compasswest2Path.close()
        compasswest2Path.move(to: NSPoint(x: 15, y: 18))
        compasswest2Path.curve(to: NSPoint(x: 18, y: 15), controlPoint1: NSPoint(x: 16.66, y: 18), controlPoint2: NSPoint(x: 18, y: 16.65))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 12), controlPoint1: NSPoint(x: 18, y: 13.34), controlPoint2: NSPoint(x: 16.66, y: 12))
        compasswest2Path.curve(to: NSPoint(x: 6, y: 15), controlPoint1: NSPoint(x: 13, y: 12), controlPoint2: NSPoint(x: 6, y: 15))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 18), controlPoint1: NSPoint(x: 6, y: 15), controlPoint2: NSPoint(x: 13, y: 18))
        compasswest2Path.line(to: NSPoint(x: 15, y: 18))
        compasswest2Path.close()
        compasswest2Path.move(to: NSPoint(x: 15, y: 17))
        compasswest2Path.curve(to: NSPoint(x: 13, y: 15), controlPoint1: NSPoint(x: 13.9, y: 17), controlPoint2: NSPoint(x: 13, y: 16.1))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 13), controlPoint1: NSPoint(x: 13, y: 13.9), controlPoint2: NSPoint(x: 13.9, y: 13))
        compasswest2Path.curve(to: NSPoint(x: 17, y: 15), controlPoint1: NSPoint(x: 16.1, y: 13), controlPoint2: NSPoint(x: 17, y: 13.9))
        compasswest2Path.curve(to: NSPoint(x: 15, y: 17), controlPoint1: NSPoint(x: 17, y: 16.1), controlPoint2: NSPoint(x: 16.1, y: 17))
        compasswest2Path.line(to: NSPoint(x: 15, y: 17))
        compasswest2Path.close()
        compasswest2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        compasswest2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCompassEast(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-55-compass-east
        //// compass-east 2 Drawing
        let compasseast2Path = NSBezierPath()
        compasseast2Path.move(to: NSPoint(x: 15, y: 2))
        compasseast2Path.curve(to: NSPoint(x: 28, y: 15), controlPoint1: NSPoint(x: 22.18, y: 2), controlPoint2: NSPoint(x: 28, y: 7.82))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 28), controlPoint1: NSPoint(x: 28, y: 22.18), controlPoint2: NSPoint(x: 22.18, y: 28))
        compasseast2Path.curve(to: NSPoint(x: 2, y: 15), controlPoint1: NSPoint(x: 7.82, y: 28), controlPoint2: NSPoint(x: 2, y: 22.18))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 2), controlPoint1: NSPoint(x: 2, y: 7.82), controlPoint2: NSPoint(x: 7.82, y: 2))
        compasseast2Path.line(to: NSPoint(x: 15, y: 2))
        compasseast2Path.close()
        compasseast2Path.move(to: NSPoint(x: 15, y: 3))
        compasseast2Path.curve(to: NSPoint(x: 27, y: 15), controlPoint1: NSPoint(x: 21.63, y: 3), controlPoint2: NSPoint(x: 27, y: 8.37))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 27, y: 21.63), controlPoint2: NSPoint(x: 21.63, y: 27))
        compasseast2Path.curve(to: NSPoint(x: 3, y: 15), controlPoint1: NSPoint(x: 8.37, y: 27), controlPoint2: NSPoint(x: 3, y: 21.63))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 3), controlPoint1: NSPoint(x: 3, y: 8.37), controlPoint2: NSPoint(x: 8.37, y: 3))
        compasseast2Path.line(to: NSPoint(x: 15, y: 3))
        compasseast2Path.close()
        compasseast2Path.move(to: NSPoint(x: 15, y: 4))
        compasseast2Path.curve(to: NSPoint(x: 26, y: 15), controlPoint1: NSPoint(x: 21.08, y: 4), controlPoint2: NSPoint(x: 26, y: 8.92))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 26, y: 21.08), controlPoint2: NSPoint(x: 21.08, y: 26))
        compasseast2Path.curve(to: NSPoint(x: 4, y: 15), controlPoint1: NSPoint(x: 8.92, y: 26), controlPoint2: NSPoint(x: 4, y: 21.08))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 4), controlPoint1: NSPoint(x: 4, y: 8.92), controlPoint2: NSPoint(x: 8.92, y: 4))
        compasseast2Path.line(to: NSPoint(x: 15, y: 4))
        compasseast2Path.close()
        compasseast2Path.move(to: NSPoint(x: 15, y: 12))
        compasseast2Path.curve(to: NSPoint(x: 12, y: 15), controlPoint1: NSPoint(x: 13.34, y: 12), controlPoint2: NSPoint(x: 12, y: 13.35))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 18), controlPoint1: NSPoint(x: 12, y: 16.66), controlPoint2: NSPoint(x: 13.34, y: 18))
        compasseast2Path.curve(to: NSPoint(x: 24, y: 15), controlPoint1: NSPoint(x: 17, y: 18), controlPoint2: NSPoint(x: 24, y: 15))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 12), controlPoint1: NSPoint(x: 24, y: 15), controlPoint2: NSPoint(x: 17, y: 12))
        compasseast2Path.line(to: NSPoint(x: 15, y: 12))
        compasseast2Path.close()
        compasseast2Path.move(to: NSPoint(x: 15, y: 13))
        compasseast2Path.curve(to: NSPoint(x: 17, y: 15), controlPoint1: NSPoint(x: 16.1, y: 13), controlPoint2: NSPoint(x: 17, y: 13.9))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 17), controlPoint1: NSPoint(x: 17, y: 16.1), controlPoint2: NSPoint(x: 16.1, y: 17))
        compasseast2Path.curve(to: NSPoint(x: 13, y: 15), controlPoint1: NSPoint(x: 13.9, y: 17), controlPoint2: NSPoint(x: 13, y: 16.1))
        compasseast2Path.curve(to: NSPoint(x: 15, y: 13), controlPoint1: NSPoint(x: 13, y: 13.9), controlPoint2: NSPoint(x: 13.9, y: 13))
        compasseast2Path.line(to: NSPoint(x: 15, y: 13))
        compasseast2Path.close()
        compasseast2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        compasseast2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCompassSouth(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-
        //// icon-56-compass-south
        //// compass-south 2 Drawing
        let compasssouth2Path = NSBezierPath()
        compasssouth2Path.move(to: NSPoint(x: 2, y: 15))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 2), controlPoint1: NSPoint(x: 2, y: 7.82), controlPoint2: NSPoint(x: 7.82, y: 2))
        compasssouth2Path.curve(to: NSPoint(x: 28, y: 15), controlPoint1: NSPoint(x: 22.18, y: 2), controlPoint2: NSPoint(x: 28, y: 7.82))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 28), controlPoint1: NSPoint(x: 28, y: 22.18), controlPoint2: NSPoint(x: 22.18, y: 28))
        compasssouth2Path.curve(to: NSPoint(x: 2, y: 15), controlPoint1: NSPoint(x: 7.82, y: 28), controlPoint2: NSPoint(x: 2, y: 22.18))
        compasssouth2Path.line(to: NSPoint(x: 2, y: 15))
        compasssouth2Path.close()
        compasssouth2Path.move(to: NSPoint(x: 3, y: 15))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 3), controlPoint1: NSPoint(x: 3, y: 8.37), controlPoint2: NSPoint(x: 8.37, y: 3))
        compasssouth2Path.curve(to: NSPoint(x: 27, y: 15), controlPoint1: NSPoint(x: 21.63, y: 3), controlPoint2: NSPoint(x: 27, y: 8.37))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 27, y: 21.63), controlPoint2: NSPoint(x: 21.63, y: 27))
        compasssouth2Path.curve(to: NSPoint(x: 3, y: 15), controlPoint1: NSPoint(x: 8.37, y: 27), controlPoint2: NSPoint(x: 3, y: 21.63))
        compasssouth2Path.line(to: NSPoint(x: 3, y: 15))
        compasssouth2Path.close()
        compasssouth2Path.move(to: NSPoint(x: 4, y: 15))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 4), controlPoint1: NSPoint(x: 4, y: 8.92), controlPoint2: NSPoint(x: 8.92, y: 4))
        compasssouth2Path.curve(to: NSPoint(x: 26, y: 15), controlPoint1: NSPoint(x: 21.08, y: 4), controlPoint2: NSPoint(x: 26, y: 8.92))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 26, y: 21.08), controlPoint2: NSPoint(x: 21.08, y: 26))
        compasssouth2Path.curve(to: NSPoint(x: 4, y: 15), controlPoint1: NSPoint(x: 8.92, y: 26), controlPoint2: NSPoint(x: 4, y: 21.08))
        compasssouth2Path.line(to: NSPoint(x: 4, y: 15))
        compasssouth2Path.close()
        compasssouth2Path.move(to: NSPoint(x: 12, y: 15))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 18), controlPoint1: NSPoint(x: 12, y: 16.66), controlPoint2: NSPoint(x: 13.35, y: 18))
        compasssouth2Path.curve(to: NSPoint(x: 18, y: 15), controlPoint1: NSPoint(x: 16.66, y: 18), controlPoint2: NSPoint(x: 18, y: 16.66))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 6), controlPoint1: NSPoint(x: 18, y: 13), controlPoint2: NSPoint(x: 15, y: 6))
        compasssouth2Path.curve(to: NSPoint(x: 12, y: 15), controlPoint1: NSPoint(x: 15, y: 6), controlPoint2: NSPoint(x: 12, y: 13))
        compasssouth2Path.line(to: NSPoint(x: 12, y: 15))
        compasssouth2Path.close()
        compasssouth2Path.move(to: NSPoint(x: 13, y: 15))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 13), controlPoint1: NSPoint(x: 13, y: 13.9), controlPoint2: NSPoint(x: 13.9, y: 13))
        compasssouth2Path.curve(to: NSPoint(x: 17, y: 15), controlPoint1: NSPoint(x: 16.1, y: 13), controlPoint2: NSPoint(x: 17, y: 13.9))
        compasssouth2Path.curve(to: NSPoint(x: 15, y: 17), controlPoint1: NSPoint(x: 17, y: 16.1), controlPoint2: NSPoint(x: 16.1, y: 17))
        compasssouth2Path.curve(to: NSPoint(x: 13, y: 15), controlPoint1: NSPoint(x: 13.9, y: 17), controlPoint2: NSPoint(x: 13, y: 16.1))
        compasssouth2Path.line(to: NSPoint(x: 13, y: 15))
        compasssouth2Path.close()
        compasssouth2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        compasssouth2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawAirSock(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-
        //// icon-57-air-sock 2
        //// air-sock 2 Drawing
        let airsock2Path = NSBezierPath()
        airsock2Path.move(to: NSPoint(x: 14.5, y: 19.35))
        airsock2Path.line(to: NSPoint(x: 18.5, y: 19.78))
        airsock2Path.line(to: NSPoint(x: 18.5, y: 25.23))
        airsock2Path.line(to: NSPoint(x: 14.5, y: 25.66))
        airsock2Path.line(to: NSPoint(x: 14.5, y: 19.35))
        airsock2Path.line(to: NSPoint(x: 14.5, y: 19.35))
        airsock2Path.close()
        airsock2Path.move(to: NSPoint(x: 11.5, y: 19.03))
        airsock2Path.line(to: NSPoint(x: 7.5, y: 18.6))
        airsock2Path.line(to: NSPoint(x: 7.5, y: 26.4))
        airsock2Path.line(to: NSPoint(x: 11.5, y: 25.98))
        airsock2Path.line(to: NSPoint(x: 11.5, y: 19.03))
        airsock2Path.line(to: NSPoint(x: 11.5, y: 19.03))
        airsock2Path.close()
        airsock2Path.move(to: NSPoint(x: 21.5, y: 20.1))
        airsock2Path.line(to: NSPoint(x: 24.5, y: 20.42))
        airsock2Path.line(to: NSPoint(x: 24.5, y: 24.59))
        airsock2Path.line(to: NSPoint(x: 21.5, y: 24.91))
        airsock2Path.line(to: NSPoint(x: 21.5, y: 20.1))
        airsock2Path.line(to: NSPoint(x: 21.5, y: 20.1))
        airsock2Path.close()
        airsock2Path.move(to: NSPoint(x: 5, y: 27.5))
        airsock2Path.curve(to: NSPoint(x: 4.5, y: 27), controlPoint1: NSPoint(x: 4.72, y: 27.5), controlPoint2: NSPoint(x: 4.5, y: 27.28))
        airsock2Path.line(to: NSPoint(x: 4.5, y: 3))
        airsock2Path.curve(to: NSPoint(x: 5, y: 2.5), controlPoint1: NSPoint(x: 4.5, y: 2.72), controlPoint2: NSPoint(x: 4.73, y: 2.5))
        airsock2Path.curve(to: NSPoint(x: 5.5, y: 3), controlPoint1: NSPoint(x: 5.28, y: 2.5), controlPoint2: NSPoint(x: 5.5, y: 2.72))
        airsock2Path.line(to: NSPoint(x: 5.5, y: 27))
        airsock2Path.curve(to: NSPoint(x: 5, y: 27.5), controlPoint1: NSPoint(x: 5.5, y: 27.28), controlPoint2: NSPoint(x: 5.27, y: 27.5))
        airsock2Path.line(to: NSPoint(x: 5, y: 27.5))
        airsock2Path.close()
        airsock2Path.move(to: NSPoint(x: 6.5, y: 27.5))
        airsock2Path.line(to: NSPoint(x: 6.5, y: 17.5))
        airsock2Path.line(to: NSPoint(x: 25.5, y: 19.5))
        airsock2Path.line(to: NSPoint(x: 25.5, y: 25.5))
        airsock2Path.line(to: NSPoint(x: 6.5, y: 27.5))
        airsock2Path.line(to: NSPoint(x: 6.5, y: 27.5))
        airsock2Path.close()
        airsock2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        airsock2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTornado(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-
        //// icon-58-tornado 2
        //// tornado 2 Drawing
        let tornado2Path = NSBezierPath()
        tornado2Path.move(to: NSPoint(x: 3, y: 27.1))
        tornado2Path.curve(to: NSPoint(x: 15.02, y: 30), controlPoint1: NSPoint(x: 4, y: 28.7), controlPoint2: NSPoint(x: 8.38, y: 30))
        tornado2Path.curve(to: NSPoint(x: 27.03, y: 27.1), controlPoint1: NSPoint(x: 21.65, y: 30), controlPoint2: NSPoint(x: 25.95, y: 28.46))
        tornado2Path.curve(to: NSPoint(x: 19.02, y: 16.45), controlPoint1: NSPoint(x: 28.54, y: 25.22), controlPoint2: NSPoint(x: 26.19, y: 20.78))
        tornado2Path.curve(to: NSPoint(x: 12.01, y: 7.74), controlPoint1: NSPoint(x: 12.91, y: 12.76), controlPoint2: NSPoint(x: 8.41, y: 9.17))
        tornado2Path.curve(to: NSPoint(x: 16.02, y: 0), controlPoint1: NSPoint(x: 20.59, y: 4.35), controlPoint2: NSPoint(x: 16.02, y: 0))
        tornado2Path.curve(to: NSPoint(x: 13.01, y: 3.87), controlPoint1: NSPoint(x: 16.02, y: 0), controlPoint2: NSPoint(x: 16.02, y: 2.9))
        tornado2Path.curve(to: NSPoint(x: 4, y: 8.71), controlPoint1: NSPoint(x: 7.93, y: 5.51), controlPoint2: NSPoint(x: 6, y: 6.77))
        tornado2Path.curve(to: NSPoint(x: 6, y: 19.35), controlPoint1: NSPoint(x: 2.48, y: 10.17), controlPoint2: NSPoint(x: 0.85, y: 14.8))
        tornado2Path.curve(to: NSPoint(x: 3, y: 27.1), controlPoint1: NSPoint(x: 8.56, y: 21.62), controlPoint2: NSPoint(x: 1.08, y: 24.02))
        tornado2Path.line(to: NSPoint(x: 3, y: 27.1))
        tornado2Path.close()
        tornado2Path.move(to: NSPoint(x: 25.58, y: 26.22))
        tornado2Path.curve(to: NSPoint(x: 15, y: 29.03), controlPoint1: NSPoint(x: 25.58, y: 27.77), controlPoint2: NSPoint(x: 20.84, y: 29.03))
        tornado2Path.curve(to: NSPoint(x: 4.42, y: 26.22), controlPoint1: NSPoint(x: 9.16, y: 29.03), controlPoint2: NSPoint(x: 4.42, y: 27.77))
        tornado2Path.curve(to: NSPoint(x: 15, y: 23.41), controlPoint1: NSPoint(x: 4.42, y: 24.67), controlPoint2: NSPoint(x: 9.16, y: 23.41))
        tornado2Path.curve(to: NSPoint(x: 25.58, y: 26.22), controlPoint1: NSPoint(x: 20.84, y: 23.41), controlPoint2: NSPoint(x: 25.58, y: 24.67))
        tornado2Path.line(to: NSPoint(x: 25.58, y: 26.22))
        tornado2Path.close()
        tornado2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        tornado2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDegreeFahrenheit(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-59-degree-fahrenheit
        //// main Drawing
        let mainPath = NSBezierPath()
        mainPath.move(to: NSPoint(x: 8, y: 17))
        mainPath.curve(to: NSPoint(x: 12, y: 21), controlPoint1: NSPoint(x: 10.21, y: 17), controlPoint2: NSPoint(x: 12, y: 18.79))
        mainPath.curve(to: NSPoint(x: 8, y: 25), controlPoint1: NSPoint(x: 12, y: 23.21), controlPoint2: NSPoint(x: 10.21, y: 25))
        mainPath.curve(to: NSPoint(x: 4, y: 21), controlPoint1: NSPoint(x: 5.79, y: 25), controlPoint2: NSPoint(x: 4, y: 23.21))
        mainPath.curve(to: NSPoint(x: 8, y: 17), controlPoint1: NSPoint(x: 4, y: 18.79), controlPoint2: NSPoint(x: 5.79, y: 17))
        mainPath.line(to: NSPoint(x: 8, y: 17))
        mainPath.close()
        mainPath.move(to: NSPoint(x: 8, y: 18))
        mainPath.curve(to: NSPoint(x: 11, y: 21), controlPoint1: NSPoint(x: 9.66, y: 18), controlPoint2: NSPoint(x: 11, y: 19.34))
        mainPath.curve(to: NSPoint(x: 8, y: 24), controlPoint1: NSPoint(x: 11, y: 22.66), controlPoint2: NSPoint(x: 9.66, y: 24))
        mainPath.curve(to: NSPoint(x: 5, y: 21), controlPoint1: NSPoint(x: 6.34, y: 24), controlPoint2: NSPoint(x: 5, y: 22.66))
        mainPath.curve(to: NSPoint(x: 8, y: 18), controlPoint1: NSPoint(x: 5, y: 19.34), controlPoint2: NSPoint(x: 6.34, y: 18))
        mainPath.line(to: NSPoint(x: 8, y: 18))
        mainPath.close()
        mainPath.move(to: NSPoint(x: 19, y: 25))
        mainPath.curve(to: NSPoint(x: 14, y: 20), controlPoint1: NSPoint(x: 16.24, y: 25), controlPoint2: NSPoint(x: 14, y: 22.76))
        mainPath.line(to: NSPoint(x: 14, y: 5.49))
        mainPath.curve(to: NSPoint(x: 14.5, y: 5), controlPoint1: NSPoint(x: 14, y: 5.22), controlPoint2: NSPoint(x: 14.23, y: 5))
        mainPath.line(to: NSPoint(x: 14.5, y: 5))
        mainPath.curve(to: NSPoint(x: 15, y: 5.51), controlPoint1: NSPoint(x: 14.78, y: 5), controlPoint2: NSPoint(x: 15, y: 5.23))
        mainPath.line(to: NSPoint(x: 15, y: 15))
        mainPath.line(to: NSPoint(x: 21.5, y: 15))
        mainPath.curve(to: NSPoint(x: 22, y: 15.5), controlPoint1: NSPoint(x: 21.77, y: 15), controlPoint2: NSPoint(x: 22, y: 15.23))
        mainPath.line(to: NSPoint(x: 22, y: 15.5))
        mainPath.curve(to: NSPoint(x: 21.5, y: 16), controlPoint1: NSPoint(x: 22, y: 15.78), controlPoint2: NSPoint(x: 21.77, y: 16))
        mainPath.line(to: NSPoint(x: 15, y: 16))
        mainPath.line(to: NSPoint(x: 15, y: 20))
        mainPath.curve(to: NSPoint(x: 19, y: 24), controlPoint1: NSPoint(x: 15, y: 22.21), controlPoint2: NSPoint(x: 16.79, y: 24))
        mainPath.line(to: NSPoint(x: 25.5, y: 24))
        mainPath.curve(to: NSPoint(x: 26, y: 24.5), controlPoint1: NSPoint(x: 25.78, y: 24), controlPoint2: NSPoint(x: 26, y: 24.23))
        mainPath.line(to: NSPoint(x: 26, y: 24.5))
        mainPath.curve(to: NSPoint(x: 25.5, y: 25), controlPoint1: NSPoint(x: 26, y: 24.78), controlPoint2: NSPoint(x: 25.77, y: 25))
        mainPath.line(to: NSPoint(x: 19, y: 25))
        mainPath.line(to: NSPoint(x: 19, y: 25))
        mainPath.close()
        mainPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        mainPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDegreeCelsius(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-60-degree-celsius
        //// main Drawing
        let mainPath = NSBezierPath()
        mainPath.move(to: NSPoint(x: 25, y: 19.5))
        mainPath.curve(to: NSPoint(x: 25.5, y: 19), controlPoint1: NSPoint(x: 25, y: 19.22), controlPoint2: NSPoint(x: 25.23, y: 19))
        mainPath.curve(to: NSPoint(x: 26, y: 19.5), controlPoint1: NSPoint(x: 25.78, y: 19), controlPoint2: NSPoint(x: 26, y: 19.23))
        mainPath.line(to: NSPoint(x: 26, y: 20))
        mainPath.curve(to: NSPoint(x: 21, y: 25), controlPoint1: NSPoint(x: 26, y: 22.76), controlPoint2: NSPoint(x: 23.77, y: 25))
        mainPath.line(to: NSPoint(x: 19, y: 25))
        mainPath.curve(to: NSPoint(x: 14, y: 20), controlPoint1: NSPoint(x: 16.24, y: 25), controlPoint2: NSPoint(x: 14, y: 22.76))
        mainPath.line(to: NSPoint(x: 14, y: 10))
        mainPath.curve(to: NSPoint(x: 19, y: 5), controlPoint1: NSPoint(x: 14, y: 7.24), controlPoint2: NSPoint(x: 16.23, y: 5))
        mainPath.line(to: NSPoint(x: 21, y: 5))
        mainPath.curve(to: NSPoint(x: 26, y: 10), controlPoint1: NSPoint(x: 23.76, y: 5), controlPoint2: NSPoint(x: 26, y: 7.24))
        mainPath.line(to: NSPoint(x: 26, y: 10.5))
        mainPath.line(to: NSPoint(x: 26, y: 10.5))
        mainPath.curve(to: NSPoint(x: 25.5, y: 11), controlPoint1: NSPoint(x: 26, y: 10.78), controlPoint2: NSPoint(x: 25.77, y: 11))
        mainPath.curve(to: NSPoint(x: 25, y: 10.5), controlPoint1: NSPoint(x: 25.22, y: 11), controlPoint2: NSPoint(x: 25, y: 10.77))
        mainPath.line(to: NSPoint(x: 25, y: 9.99))
        mainPath.curve(to: NSPoint(x: 20.99, y: 6), controlPoint1: NSPoint(x: 25, y: 7.79), controlPoint2: NSPoint(x: 23.2, y: 6))
        mainPath.line(to: NSPoint(x: 19.01, y: 6))
        mainPath.curve(to: NSPoint(x: 15, y: 9.99), controlPoint1: NSPoint(x: 16.79, y: 6), controlPoint2: NSPoint(x: 15, y: 7.79))
        mainPath.line(to: NSPoint(x: 15, y: 20.01))
        mainPath.curve(to: NSPoint(x: 19.01, y: 24), controlPoint1: NSPoint(x: 15, y: 22.21), controlPoint2: NSPoint(x: 16.8, y: 24))
        mainPath.line(to: NSPoint(x: 20.99, y: 24))
        mainPath.curve(to: NSPoint(x: 25, y: 20.01), controlPoint1: NSPoint(x: 23.21, y: 24), controlPoint2: NSPoint(x: 25, y: 22.21))
        mainPath.line(to: NSPoint(x: 25, y: 19.5))
        mainPath.line(to: NSPoint(x: 25, y: 19.5))
        mainPath.line(to: NSPoint(x: 25, y: 19.5))
        mainPath.close()
        mainPath.move(to: NSPoint(x: 8, y: 17))
        mainPath.curve(to: NSPoint(x: 12, y: 21), controlPoint1: NSPoint(x: 10.21, y: 17), controlPoint2: NSPoint(x: 12, y: 18.79))
        mainPath.curve(to: NSPoint(x: 8, y: 25), controlPoint1: NSPoint(x: 12, y: 23.21), controlPoint2: NSPoint(x: 10.21, y: 25))
        mainPath.curve(to: NSPoint(x: 4, y: 21), controlPoint1: NSPoint(x: 5.79, y: 25), controlPoint2: NSPoint(x: 4, y: 23.21))
        mainPath.curve(to: NSPoint(x: 8, y: 17), controlPoint1: NSPoint(x: 4, y: 18.79), controlPoint2: NSPoint(x: 5.79, y: 17))
        mainPath.line(to: NSPoint(x: 8, y: 17))
        mainPath.close()
        mainPath.move(to: NSPoint(x: 8, y: 18))
        mainPath.curve(to: NSPoint(x: 11, y: 21), controlPoint1: NSPoint(x: 9.66, y: 18), controlPoint2: NSPoint(x: 11, y: 19.34))
        mainPath.curve(to: NSPoint(x: 8, y: 24), controlPoint1: NSPoint(x: 11, y: 22.66), controlPoint2: NSPoint(x: 9.66, y: 24))
        mainPath.curve(to: NSPoint(x: 5, y: 21), controlPoint1: NSPoint(x: 6.34, y: 24), controlPoint2: NSPoint(x: 5, y: 22.66))
        mainPath.curve(to: NSPoint(x: 8, y: 18), controlPoint1: NSPoint(x: 5, y: 19.34), controlPoint2: NSPoint(x: 6.34, y: 18))
        mainPath.line(to: NSPoint(x: 8, y: 18))
        mainPath.close()
        mainPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        mainPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawWarning(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-
        //// icon-61-warning 2
        //// warning 2 Drawing
        let warning2Path = NSBezierPath()
        warning2Path.move(to: NSPoint(x: 13.51, y: 24.85))
        warning2Path.curve(to: NSPoint(x: 16.66, y: 24.85), controlPoint1: NSPoint(x: 14.38, y: 26.26), controlPoint2: NSPoint(x: 15.79, y: 26.26))
        warning2Path.line(to: NSPoint(x: 27.44, y: 7.4))
        warning2Path.curve(to: NSPoint(x: 25.55, y: 4), controlPoint1: NSPoint(x: 28.61, y: 5.52), controlPoint2: NSPoint(x: 27.76, y: 4))
        warning2Path.line(to: NSPoint(x: 4.61, y: 4))
        warning2Path.curve(to: NSPoint(x: 2.72, y: 7.4), controlPoint1: NSPoint(x: 2.41, y: 4), controlPoint2: NSPoint(x: 1.56, y: 5.52))
        warning2Path.line(to: NSPoint(x: 13.51, y: 24.85))
        warning2Path.line(to: NSPoint(x: 13.51, y: 24.85))
        warning2Path.close()
        warning2Path.move(to: NSPoint(x: 15.08, y: 19))
        warning2Path.curve(to: NSPoint(x: 14.08, y: 18), controlPoint1: NSPoint(x: 14.53, y: 19), controlPoint2: NSPoint(x: 14.08, y: 18.55))
        warning2Path.line(to: NSPoint(x: 14.08, y: 12))
        warning2Path.curve(to: NSPoint(x: 15.08, y: 11), controlPoint1: NSPoint(x: 14.08, y: 11.45), controlPoint2: NSPoint(x: 14.53, y: 11))
        warning2Path.curve(to: NSPoint(x: 16.08, y: 12), controlPoint1: NSPoint(x: 15.64, y: 11), controlPoint2: NSPoint(x: 16.08, y: 11.45))
        warning2Path.line(to: NSPoint(x: 16.08, y: 18))
        warning2Path.curve(to: NSPoint(x: 15.08, y: 19), controlPoint1: NSPoint(x: 16.08, y: 18.55), controlPoint2: NSPoint(x: 15.64, y: 19))
        warning2Path.line(to: NSPoint(x: 15.08, y: 19))
        warning2Path.close()
        warning2Path.move(to: NSPoint(x: 15.08, y: 7))
        warning2Path.curve(to: NSPoint(x: 16.08, y: 8), controlPoint1: NSPoint(x: 15.64, y: 7), controlPoint2: NSPoint(x: 16.08, y: 7.45))
        warning2Path.curve(to: NSPoint(x: 15.08, y: 9), controlPoint1: NSPoint(x: 16.08, y: 8.55), controlPoint2: NSPoint(x: 15.64, y: 9))
        warning2Path.curve(to: NSPoint(x: 14.08, y: 8), controlPoint1: NSPoint(x: 14.53, y: 9), controlPoint2: NSPoint(x: 14.08, y: 8.55))
        warning2Path.curve(to: NSPoint(x: 15.08, y: 7), controlPoint1: NSPoint(x: 14.08, y: 7.45), controlPoint2: NSPoint(x: 14.53, y: 7))
        warning2Path.line(to: NSPoint(x: 15.08, y: 7))
        warning2Path.close()
        warning2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        warning2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCompass(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-62-compass
        //// compass 5 Drawing
        let compass5Path = NSBezierPath()
        compass5Path.move(to: NSPoint(x: 17, y: 4))
        compass5Path.curve(to: NSPoint(x: 30, y: 17), controlPoint1: NSPoint(x: 24.18, y: 4), controlPoint2: NSPoint(x: 30, y: 9.82))
        compass5Path.curve(to: NSPoint(x: 17, y: 30), controlPoint1: NSPoint(x: 30, y: 24.18), controlPoint2: NSPoint(x: 24.18, y: 30))
        compass5Path.curve(to: NSPoint(x: 4, y: 17), controlPoint1: NSPoint(x: 9.82, y: 30), controlPoint2: NSPoint(x: 4, y: 24.18))
        compass5Path.curve(to: NSPoint(x: 17, y: 4), controlPoint1: NSPoint(x: 4, y: 9.82), controlPoint2: NSPoint(x: 9.82, y: 4))
        compass5Path.line(to: NSPoint(x: 17, y: 4))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 17, y: 5))
        compass5Path.curve(to: NSPoint(x: 29, y: 17), controlPoint1: NSPoint(x: 23.63, y: 5), controlPoint2: NSPoint(x: 29, y: 10.37))
        compass5Path.curve(to: NSPoint(x: 17, y: 29), controlPoint1: NSPoint(x: 29, y: 23.63), controlPoint2: NSPoint(x: 23.63, y: 29))
        compass5Path.curve(to: NSPoint(x: 5, y: 17), controlPoint1: NSPoint(x: 10.37, y: 29), controlPoint2: NSPoint(x: 5, y: 23.63))
        compass5Path.curve(to: NSPoint(x: 17, y: 5), controlPoint1: NSPoint(x: 5, y: 10.37), controlPoint2: NSPoint(x: 10.37, y: 5))
        compass5Path.line(to: NSPoint(x: 17, y: 5))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 17, y: 6))
        compass5Path.curve(to: NSPoint(x: 28, y: 17), controlPoint1: NSPoint(x: 23.08, y: 6), controlPoint2: NSPoint(x: 28, y: 10.92))
        compass5Path.curve(to: NSPoint(x: 17, y: 28), controlPoint1: NSPoint(x: 28, y: 23.08), controlPoint2: NSPoint(x: 23.08, y: 28))
        compass5Path.curve(to: NSPoint(x: 6, y: 17), controlPoint1: NSPoint(x: 10.92, y: 28), controlPoint2: NSPoint(x: 6, y: 23.08))
        compass5Path.curve(to: NSPoint(x: 17, y: 6), controlPoint1: NSPoint(x: 6, y: 10.92), controlPoint2: NSPoint(x: 10.92, y: 6))
        compass5Path.line(to: NSPoint(x: 17, y: 6))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 19.12, y: 14.88))
        compass5Path.curve(to: NSPoint(x: 9.93, y: 9.93), controlPoint1: NSPoint(x: 17.35, y: 13.11), controlPoint2: NSPoint(x: 9.93, y: 9.93))
        compass5Path.curve(to: NSPoint(x: 14.88, y: 19.12), controlPoint1: NSPoint(x: 9.93, y: 9.93), controlPoint2: NSPoint(x: 13.11, y: 17.35))
        compass5Path.curve(to: NSPoint(x: 24.07, y: 24.07), controlPoint1: NSPoint(x: 16.65, y: 20.89), controlPoint2: NSPoint(x: 24.07, y: 24.07))
        compass5Path.curve(to: NSPoint(x: 19.12, y: 14.88), controlPoint1: NSPoint(x: 24.07, y: 24.07), controlPoint2: NSPoint(x: 20.89, y: 16.65))
        compass5Path.line(to: NSPoint(x: 19.12, y: 14.88))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15.59, y: 15.59))
        compass5Path.curve(to: NSPoint(x: 18.41, y: 15.59), controlPoint1: NSPoint(x: 16.37, y: 14.8), controlPoint2: NSPoint(x: 17.63, y: 14.8))
        compass5Path.curve(to: NSPoint(x: 18.41, y: 18.41), controlPoint1: NSPoint(x: 19.2, y: 16.37), controlPoint2: NSPoint(x: 19.2, y: 17.63))
        compass5Path.curve(to: NSPoint(x: 15.59, y: 18.41), controlPoint1: NSPoint(x: 17.63, y: 19.2), controlPoint2: NSPoint(x: 16.37, y: 19.2))
        compass5Path.curve(to: NSPoint(x: 15.59, y: 15.59), controlPoint1: NSPoint(x: 14.8, y: 17.63), controlPoint2: NSPoint(x: 14.8, y: 16.37))
        compass5Path.line(to: NSPoint(x: 15.59, y: 15.59))
        compass5Path.close()
        compass5Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        compass5Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCompass2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-63-compass
        //// compass 5 Drawing
        let compass5Path = NSBezierPath()
        compass5Path.move(to: NSPoint(x: 15, y: 2.5))
        compass5Path.curve(to: NSPoint(x: 27.5, y: 15), controlPoint1: NSPoint(x: 21.9, y: 2.5), controlPoint2: NSPoint(x: 27.5, y: 8.1))
        compass5Path.curve(to: NSPoint(x: 15, y: 27.5), controlPoint1: NSPoint(x: 27.5, y: 21.9), controlPoint2: NSPoint(x: 21.9, y: 27.5))
        compass5Path.curve(to: NSPoint(x: 2.5, y: 15), controlPoint1: NSPoint(x: 8.1, y: 27.5), controlPoint2: NSPoint(x: 2.5, y: 21.9))
        compass5Path.curve(to: NSPoint(x: 15, y: 2.5), controlPoint1: NSPoint(x: 2.5, y: 8.1), controlPoint2: NSPoint(x: 8.1, y: 2.5))
        compass5Path.line(to: NSPoint(x: 15, y: 2.5))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 3.5))
        compass5Path.curve(to: NSPoint(x: 26.5, y: 15), controlPoint1: NSPoint(x: 21.35, y: 3.5), controlPoint2: NSPoint(x: 26.5, y: 8.65))
        compass5Path.curve(to: NSPoint(x: 15, y: 26.5), controlPoint1: NSPoint(x: 26.5, y: 21.35), controlPoint2: NSPoint(x: 21.35, y: 26.5))
        compass5Path.curve(to: NSPoint(x: 3.5, y: 15), controlPoint1: NSPoint(x: 8.65, y: 26.5), controlPoint2: NSPoint(x: 3.5, y: 21.35))
        compass5Path.curve(to: NSPoint(x: 15, y: 3.5), controlPoint1: NSPoint(x: 3.5, y: 8.65), controlPoint2: NSPoint(x: 8.65, y: 3.5))
        compass5Path.line(to: NSPoint(x: 15, y: 3.5))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 4.5))
        compass5Path.curve(to: NSPoint(x: 25.5, y: 15), controlPoint1: NSPoint(x: 20.8, y: 4.5), controlPoint2: NSPoint(x: 25.5, y: 9.2))
        compass5Path.curve(to: NSPoint(x: 15, y: 25.5), controlPoint1: NSPoint(x: 25.5, y: 20.8), controlPoint2: NSPoint(x: 20.8, y: 25.5))
        compass5Path.curve(to: NSPoint(x: 4.5, y: 15), controlPoint1: NSPoint(x: 9.2, y: 25.5), controlPoint2: NSPoint(x: 4.5, y: 20.8))
        compass5Path.curve(to: NSPoint(x: 15, y: 4.5), controlPoint1: NSPoint(x: 4.5, y: 9.2), controlPoint2: NSPoint(x: 9.2, y: 4.5))
        compass5Path.line(to: NSPoint(x: 15, y: 4.5))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 16.77, y: 13.23))
        compass5Path.curve(to: NSPoint(x: 8.28, y: 8.28), controlPoint1: NSPoint(x: 15, y: 11.46), controlPoint2: NSPoint(x: 8.28, y: 8.28))
        compass5Path.curve(to: NSPoint(x: 13.23, y: 16.77), controlPoint1: NSPoint(x: 8.28, y: 8.28), controlPoint2: NSPoint(x: 11.46, y: 15))
        compass5Path.curve(to: NSPoint(x: 21.72, y: 21.72), controlPoint1: NSPoint(x: 15, y: 18.54), controlPoint2: NSPoint(x: 21.72, y: 21.72))
        compass5Path.curve(to: NSPoint(x: 16.77, y: 13.23), controlPoint1: NSPoint(x: 21.72, y: 21.72), controlPoint2: NSPoint(x: 18.54, y: 15))
        compass5Path.line(to: NSPoint(x: 16.77, y: 13.23))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 13.94, y: 13.94))
        compass5Path.curve(to: NSPoint(x: 16.06, y: 13.94), controlPoint1: NSPoint(x: 14.53, y: 13.35), controlPoint2: NSPoint(x: 15.47, y: 13.35))
        compass5Path.curve(to: NSPoint(x: 16.06, y: 16.06), controlPoint1: NSPoint(x: 16.65, y: 14.53), controlPoint2: NSPoint(x: 16.65, y: 15.47))
        compass5Path.curve(to: NSPoint(x: 13.94, y: 16.06), controlPoint1: NSPoint(x: 15.47, y: 16.65), controlPoint2: NSPoint(x: 14.53, y: 16.65))
        compass5Path.curve(to: NSPoint(x: 13.94, y: 13.94), controlPoint1: NSPoint(x: 13.35, y: 15.47), controlPoint2: NSPoint(x: 13.35, y: 14.53))
        compass5Path.line(to: NSPoint(x: 13.94, y: 13.94))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 24.5))
        compass5Path.curve(to: NSPoint(x: 14.5, y: 24.01), controlPoint1: NSPoint(x: 14.72, y: 24.5), controlPoint2: NSPoint(x: 14.5, y: 24.28))
        compass5Path.line(to: NSPoint(x: 14.5, y: 20.99))
        compass5Path.curve(to: NSPoint(x: 15, y: 20.5), controlPoint1: NSPoint(x: 14.5, y: 20.72), controlPoint2: NSPoint(x: 14.73, y: 20.5))
        compass5Path.curve(to: NSPoint(x: 15.5, y: 20.99), controlPoint1: NSPoint(x: 15.28, y: 20.5), controlPoint2: NSPoint(x: 15.5, y: 20.72))
        compass5Path.line(to: NSPoint(x: 15.5, y: 24.01))
        compass5Path.curve(to: NSPoint(x: 15, y: 24.5), controlPoint1: NSPoint(x: 15.5, y: 24.28), controlPoint2: NSPoint(x: 15.27, y: 24.5))
        compass5Path.line(to: NSPoint(x: 15, y: 24.5))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 24.54, y: 14.96))
        compass5Path.curve(to: NSPoint(x: 24.05, y: 15.46), controlPoint1: NSPoint(x: 24.54, y: 15.23), controlPoint2: NSPoint(x: 24.33, y: 15.46))
        compass5Path.line(to: NSPoint(x: 21.03, y: 15.46))
        compass5Path.curve(to: NSPoint(x: 20.54, y: 14.96), controlPoint1: NSPoint(x: 20.76, y: 15.46), controlPoint2: NSPoint(x: 20.54, y: 15.22))
        compass5Path.curve(to: NSPoint(x: 21.03, y: 14.46), controlPoint1: NSPoint(x: 20.54, y: 14.68), controlPoint2: NSPoint(x: 20.76, y: 14.46))
        compass5Path.line(to: NSPoint(x: 24.05, y: 14.46))
        compass5Path.curve(to: NSPoint(x: 24.54, y: 14.96), controlPoint1: NSPoint(x: 24.32, y: 14.46), controlPoint2: NSPoint(x: 24.54, y: 14.69))
        compass5Path.line(to: NSPoint(x: 24.54, y: 14.96))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 5.41))
        compass5Path.curve(to: NSPoint(x: 15.5, y: 5.9), controlPoint1: NSPoint(x: 15.28, y: 5.41), controlPoint2: NSPoint(x: 15.5, y: 5.63))
        compass5Path.line(to: NSPoint(x: 15.5, y: 8.92))
        compass5Path.curve(to: NSPoint(x: 15, y: 9.41), controlPoint1: NSPoint(x: 15.5, y: 9.19), controlPoint2: NSPoint(x: 15.27, y: 9.41))
        compass5Path.curve(to: NSPoint(x: 14.5, y: 8.92), controlPoint1: NSPoint(x: 14.72, y: 9.41), controlPoint2: NSPoint(x: 14.5, y: 9.2))
        compass5Path.line(to: NSPoint(x: 14.5, y: 5.9))
        compass5Path.curve(to: NSPoint(x: 15, y: 5.41), controlPoint1: NSPoint(x: 14.5, y: 5.63), controlPoint2: NSPoint(x: 14.73, y: 5.41))
        compass5Path.line(to: NSPoint(x: 15, y: 5.41))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 5.46, y: 14.96))
        compass5Path.curve(to: NSPoint(x: 5.95, y: 14.46), controlPoint1: NSPoint(x: 5.46, y: 14.68), controlPoint2: NSPoint(x: 5.67, y: 14.46))
        compass5Path.line(to: NSPoint(x: 8.97, y: 14.46))
        compass5Path.curve(to: NSPoint(x: 9.46, y: 14.96), controlPoint1: NSPoint(x: 9.24, y: 14.46), controlPoint2: NSPoint(x: 9.46, y: 14.69))
        compass5Path.curve(to: NSPoint(x: 8.97, y: 15.46), controlPoint1: NSPoint(x: 9.46, y: 15.23), controlPoint2: NSPoint(x: 9.24, y: 15.46))
        compass5Path.line(to: NSPoint(x: 5.95, y: 15.46))
        compass5Path.curve(to: NSPoint(x: 5.46, y: 14.96), controlPoint1: NSPoint(x: 5.68, y: 15.46), controlPoint2: NSPoint(x: 5.46, y: 15.22))
        compass5Path.line(to: NSPoint(x: 5.46, y: 14.96))
        compass5Path.close()
        compass5Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        compass5Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCompass3(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-64-compass
        //// compass 5 Drawing
        let compass5Path = NSBezierPath()
        compass5Path.move(to: NSPoint(x: 15, y: 2.5))
        compass5Path.curve(to: NSPoint(x: 27.5, y: 15), controlPoint1: NSPoint(x: 21.9, y: 2.5), controlPoint2: NSPoint(x: 27.5, y: 8.1))
        compass5Path.curve(to: NSPoint(x: 15, y: 27.5), controlPoint1: NSPoint(x: 27.5, y: 21.9), controlPoint2: NSPoint(x: 21.9, y: 27.5))
        compass5Path.curve(to: NSPoint(x: 2.5, y: 15), controlPoint1: NSPoint(x: 8.1, y: 27.5), controlPoint2: NSPoint(x: 2.5, y: 21.9))
        compass5Path.curve(to: NSPoint(x: 15, y: 2.5), controlPoint1: NSPoint(x: 2.5, y: 8.1), controlPoint2: NSPoint(x: 8.1, y: 2.5))
        compass5Path.line(to: NSPoint(x: 15, y: 2.5))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 3.5))
        compass5Path.curve(to: NSPoint(x: 26.5, y: 15), controlPoint1: NSPoint(x: 21.35, y: 3.5), controlPoint2: NSPoint(x: 26.5, y: 8.65))
        compass5Path.curve(to: NSPoint(x: 15, y: 26.5), controlPoint1: NSPoint(x: 26.5, y: 21.35), controlPoint2: NSPoint(x: 21.35, y: 26.5))
        compass5Path.curve(to: NSPoint(x: 3.5, y: 15), controlPoint1: NSPoint(x: 8.65, y: 26.5), controlPoint2: NSPoint(x: 3.5, y: 21.35))
        compass5Path.curve(to: NSPoint(x: 15, y: 3.5), controlPoint1: NSPoint(x: 3.5, y: 8.65), controlPoint2: NSPoint(x: 8.65, y: 3.5))
        compass5Path.line(to: NSPoint(x: 15, y: 3.5))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 4.5))
        compass5Path.curve(to: NSPoint(x: 25.5, y: 15), controlPoint1: NSPoint(x: 20.8, y: 4.5), controlPoint2: NSPoint(x: 25.5, y: 9.2))
        compass5Path.curve(to: NSPoint(x: 15, y: 25.5), controlPoint1: NSPoint(x: 25.5, y: 20.8), controlPoint2: NSPoint(x: 20.8, y: 25.5))
        compass5Path.curve(to: NSPoint(x: 4.5, y: 15), controlPoint1: NSPoint(x: 9.2, y: 25.5), controlPoint2: NSPoint(x: 4.5, y: 20.8))
        compass5Path.curve(to: NSPoint(x: 15, y: 4.5), controlPoint1: NSPoint(x: 4.5, y: 9.2), controlPoint2: NSPoint(x: 9.2, y: 4.5))
        compass5Path.line(to: NSPoint(x: 15, y: 4.5))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 16.77, y: 13.23))
        compass5Path.curve(to: NSPoint(x: 8.28, y: 8.28), controlPoint1: NSPoint(x: 15, y: 11.46), controlPoint2: NSPoint(x: 8.28, y: 8.28))
        compass5Path.curve(to: NSPoint(x: 13.23, y: 16.77), controlPoint1: NSPoint(x: 8.28, y: 8.28), controlPoint2: NSPoint(x: 11.46, y: 15))
        compass5Path.curve(to: NSPoint(x: 21.72, y: 21.72), controlPoint1: NSPoint(x: 15, y: 18.54), controlPoint2: NSPoint(x: 21.72, y: 21.72))
        compass5Path.curve(to: NSPoint(x: 16.77, y: 13.23), controlPoint1: NSPoint(x: 21.72, y: 21.72), controlPoint2: NSPoint(x: 18.54, y: 15))
        compass5Path.line(to: NSPoint(x: 16.77, y: 13.23))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 24.5))
        compass5Path.curve(to: NSPoint(x: 14.5, y: 24.01), controlPoint1: NSPoint(x: 14.72, y: 24.5), controlPoint2: NSPoint(x: 14.5, y: 24.28))
        compass5Path.line(to: NSPoint(x: 14.5, y: 20.99))
        compass5Path.curve(to: NSPoint(x: 15, y: 20.5), controlPoint1: NSPoint(x: 14.5, y: 20.72), controlPoint2: NSPoint(x: 14.73, y: 20.5))
        compass5Path.curve(to: NSPoint(x: 15.5, y: 20.99), controlPoint1: NSPoint(x: 15.28, y: 20.5), controlPoint2: NSPoint(x: 15.5, y: 20.72))
        compass5Path.line(to: NSPoint(x: 15.5, y: 24.01))
        compass5Path.curve(to: NSPoint(x: 15, y: 24.5), controlPoint1: NSPoint(x: 15.5, y: 24.28), controlPoint2: NSPoint(x: 15.27, y: 24.5))
        compass5Path.line(to: NSPoint(x: 15, y: 24.5))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 24.54, y: 14.96))
        compass5Path.curve(to: NSPoint(x: 24.05, y: 15.46), controlPoint1: NSPoint(x: 24.54, y: 15.23), controlPoint2: NSPoint(x: 24.33, y: 15.46))
        compass5Path.line(to: NSPoint(x: 21.03, y: 15.46))
        compass5Path.curve(to: NSPoint(x: 20.54, y: 14.96), controlPoint1: NSPoint(x: 20.76, y: 15.46), controlPoint2: NSPoint(x: 20.54, y: 15.22))
        compass5Path.curve(to: NSPoint(x: 21.03, y: 14.46), controlPoint1: NSPoint(x: 20.54, y: 14.68), controlPoint2: NSPoint(x: 20.76, y: 14.46))
        compass5Path.line(to: NSPoint(x: 24.05, y: 14.46))
        compass5Path.curve(to: NSPoint(x: 24.54, y: 14.96), controlPoint1: NSPoint(x: 24.32, y: 14.46), controlPoint2: NSPoint(x: 24.54, y: 14.69))
        compass5Path.line(to: NSPoint(x: 24.54, y: 14.96))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 5.41))
        compass5Path.curve(to: NSPoint(x: 15.5, y: 5.9), controlPoint1: NSPoint(x: 15.28, y: 5.41), controlPoint2: NSPoint(x: 15.5, y: 5.63))
        compass5Path.line(to: NSPoint(x: 15.5, y: 8.92))
        compass5Path.curve(to: NSPoint(x: 15, y: 9.41), controlPoint1: NSPoint(x: 15.5, y: 9.19), controlPoint2: NSPoint(x: 15.27, y: 9.41))
        compass5Path.curve(to: NSPoint(x: 14.5, y: 8.92), controlPoint1: NSPoint(x: 14.72, y: 9.41), controlPoint2: NSPoint(x: 14.5, y: 9.2))
        compass5Path.line(to: NSPoint(x: 14.5, y: 5.9))
        compass5Path.curve(to: NSPoint(x: 15, y: 5.41), controlPoint1: NSPoint(x: 14.5, y: 5.63), controlPoint2: NSPoint(x: 14.73, y: 5.41))
        compass5Path.line(to: NSPoint(x: 15, y: 5.41))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 5.46, y: 14.96))
        compass5Path.curve(to: NSPoint(x: 5.95, y: 14.46), controlPoint1: NSPoint(x: 5.46, y: 14.68), controlPoint2: NSPoint(x: 5.67, y: 14.46))
        compass5Path.line(to: NSPoint(x: 8.97, y: 14.46))
        compass5Path.curve(to: NSPoint(x: 9.46, y: 14.96), controlPoint1: NSPoint(x: 9.24, y: 14.46), controlPoint2: NSPoint(x: 9.46, y: 14.69))
        compass5Path.curve(to: NSPoint(x: 8.97, y: 15.46), controlPoint1: NSPoint(x: 9.46, y: 15.23), controlPoint2: NSPoint(x: 9.24, y: 15.46))
        compass5Path.line(to: NSPoint(x: 5.95, y: 15.46))
        compass5Path.curve(to: NSPoint(x: 5.46, y: 14.96), controlPoint1: NSPoint(x: 5.68, y: 15.46), controlPoint2: NSPoint(x: 5.46, y: 15.22))
        compass5Path.line(to: NSPoint(x: 5.46, y: 14.96))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 13.93, y: 16))
        compass5Path.curve(to: NSPoint(x: 10.46, y: 10.41), controlPoint1: NSPoint(x: 12.86, y: 14.94), controlPoint2: NSPoint(x: 10.46, y: 10.41))
        compass5Path.curve(to: NSPoint(x: 16.05, y: 13.88), controlPoint1: NSPoint(x: 10.46, y: 10.41), controlPoint2: NSPoint(x: 14.99, y: 12.82))
        compass5Path.line(to: NSPoint(x: 13.93, y: 16))
        compass5Path.line(to: NSPoint(x: 13.93, y: 16))
        compass5Path.close()
        compass5Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        compass5Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCompass4(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1


        //// Page-
        //// icon-65-compass
        //// compass 5 Drawing
        let compass5Path = NSBezierPath()
        compass5Path.move(to: NSPoint(x: 15, y: 2))
        compass5Path.curve(to: NSPoint(x: 28, y: 15), controlPoint1: NSPoint(x: 22.18, y: 2), controlPoint2: NSPoint(x: 28, y: 7.82))
        compass5Path.curve(to: NSPoint(x: 15, y: 28), controlPoint1: NSPoint(x: 28, y: 22.18), controlPoint2: NSPoint(x: 22.18, y: 28))
        compass5Path.curve(to: NSPoint(x: 2, y: 15), controlPoint1: NSPoint(x: 7.82, y: 28), controlPoint2: NSPoint(x: 2, y: 22.18))
        compass5Path.curve(to: NSPoint(x: 15, y: 2), controlPoint1: NSPoint(x: 2, y: 7.82), controlPoint2: NSPoint(x: 7.82, y: 2))
        compass5Path.line(to: NSPoint(x: 15, y: 2))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 3))
        compass5Path.curve(to: NSPoint(x: 27, y: 15), controlPoint1: NSPoint(x: 21.63, y: 3), controlPoint2: NSPoint(x: 27, y: 8.37))
        compass5Path.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 27, y: 21.63), controlPoint2: NSPoint(x: 21.63, y: 27))
        compass5Path.curve(to: NSPoint(x: 3, y: 15), controlPoint1: NSPoint(x: 8.37, y: 27), controlPoint2: NSPoint(x: 3, y: 21.63))
        compass5Path.curve(to: NSPoint(x: 15, y: 3), controlPoint1: NSPoint(x: 3, y: 8.37), controlPoint2: NSPoint(x: 8.37, y: 3))
        compass5Path.line(to: NSPoint(x: 15, y: 3))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 15, y: 4))
        compass5Path.curve(to: NSPoint(x: 26, y: 15), controlPoint1: NSPoint(x: 21.08, y: 4), controlPoint2: NSPoint(x: 26, y: 8.92))
        compass5Path.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 26, y: 21.08), controlPoint2: NSPoint(x: 21.08, y: 26))
        compass5Path.curve(to: NSPoint(x: 4, y: 15), controlPoint1: NSPoint(x: 8.92, y: 26), controlPoint2: NSPoint(x: 4, y: 21.08))
        compass5Path.curve(to: NSPoint(x: 15, y: 4), controlPoint1: NSPoint(x: 4, y: 8.92), controlPoint2: NSPoint(x: 8.92, y: 4))
        compass5Path.line(to: NSPoint(x: 15, y: 4))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 17.12, y: 12.88))
        compass5Path.curve(to: NSPoint(x: 7.93, y: 7.93), controlPoint1: NSPoint(x: 15.35, y: 11.11), controlPoint2: NSPoint(x: 7.93, y: 7.93))
        compass5Path.curve(to: NSPoint(x: 12.88, y: 17.12), controlPoint1: NSPoint(x: 7.93, y: 7.93), controlPoint2: NSPoint(x: 11.11, y: 15.35))
        compass5Path.curve(to: NSPoint(x: 22.07, y: 22.07), controlPoint1: NSPoint(x: 14.65, y: 18.89), controlPoint2: NSPoint(x: 22.07, y: 22.07))
        compass5Path.curve(to: NSPoint(x: 17.12, y: 12.88), controlPoint1: NSPoint(x: 22.07, y: 22.07), controlPoint2: NSPoint(x: 18.89, y: 14.65))
        compass5Path.line(to: NSPoint(x: 17.12, y: 12.88))
        compass5Path.close()
        compass5Path.move(to: NSPoint(x: 13.62, y: 16.4))
        compass5Path.curve(to: NSPoint(x: 10.01, y: 9.97), controlPoint1: NSPoint(x: 12.21, y: 14.99), controlPoint2: NSPoint(x: 10.01, y: 9.97))
        compass5Path.curve(to: NSPoint(x: 16.45, y: 13.57), controlPoint1: NSPoint(x: 10.01, y: 9.97), controlPoint2: NSPoint(x: 15.03, y: 12.16))
        compass5Path.line(to: NSPoint(x: 13.62, y: 16.4))
        compass5Path.line(to: NSPoint(x: 13.62, y: 16.4))
        compass5Path.close()
        compass5Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        compass5Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawThermometer(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-
        //// icon-66-thermometer 2
        //// thermometer 2 Drawing
        let thermometer2Path = NSBezierPath()
        thermometer2Path.move(to: NSPoint(x: 16.83, y: 8.87))
        thermometer2Path.curve(to: NSPoint(x: 18.67, y: 5.62), controlPoint1: NSPoint(x: 17.93, y: 8.22), controlPoint2: NSPoint(x: 18.67, y: 7.01))
        thermometer2Path.curve(to: NSPoint(x: 15, y: 1.88), controlPoint1: NSPoint(x: 18.67, y: 3.55), controlPoint2: NSPoint(x: 17.03, y: 1.88))
        thermometer2Path.curve(to: NSPoint(x: 11.33, y: 5.62), controlPoint1: NSPoint(x: 12.97, y: 1.88), controlPoint2: NSPoint(x: 11.33, y: 3.55))
        thermometer2Path.curve(to: NSPoint(x: 13.17, y: 8.87), controlPoint1: NSPoint(x: 11.33, y: 7.01), controlPoint2: NSPoint(x: 12.07, y: 8.22))
        thermometer2Path.line(to: NSPoint(x: 13.17, y: 26.25))
        thermometer2Path.curve(to: NSPoint(x: 15, y: 28.12), controlPoint1: NSPoint(x: 13.17, y: 27.29), controlPoint2: NSPoint(x: 13.99, y: 28.12))
        thermometer2Path.curve(to: NSPoint(x: 16.83, y: 26.25), controlPoint1: NSPoint(x: 16.02, y: 28.12), controlPoint2: NSPoint(x: 16.83, y: 27.28))
        thermometer2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometer2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometer2Path.close()
        thermometer2Path.move(to: NSPoint(x: 18.64, y: 9.84))
        thermometer2Path.curve(to: NSPoint(x: 20.5, y: 5.62), controlPoint1: NSPoint(x: 19.78, y: 8.81), controlPoint2: NSPoint(x: 20.5, y: 7.31))
        thermometer2Path.curve(to: NSPoint(x: 15, y: 0), controlPoint1: NSPoint(x: 20.5, y: 2.52), controlPoint2: NSPoint(x: 18.04, y: 0))
        thermometer2Path.curve(to: NSPoint(x: 9.5, y: 5.62), controlPoint1: NSPoint(x: 11.96, y: 0), controlPoint2: NSPoint(x: 9.5, y: 2.52))
        thermometer2Path.curve(to: NSPoint(x: 11.36, y: 9.84), controlPoint1: NSPoint(x: 9.5, y: 7.31), controlPoint2: NSPoint(x: 10.22, y: 8.81))
        thermometer2Path.curve(to: NSPoint(x: 11.33, y: 10.32), controlPoint1: NSPoint(x: 11.34, y: 10), controlPoint2: NSPoint(x: 11.33, y: 10.16))
        thermometer2Path.line(to: NSPoint(x: 11.33, y: 26.25))
        thermometer2Path.curve(to: NSPoint(x: 15, y: 30), controlPoint1: NSPoint(x: 11.33, y: 28.31), controlPoint2: NSPoint(x: 12.97, y: 30))
        thermometer2Path.curve(to: NSPoint(x: 18.67, y: 26.25), controlPoint1: NSPoint(x: 17.02, y: 30), controlPoint2: NSPoint(x: 18.67, y: 28.32))
        thermometer2Path.line(to: NSPoint(x: 18.67, y: 10.32))
        thermometer2Path.curve(to: NSPoint(x: 18.64, y: 9.84), controlPoint1: NSPoint(x: 18.67, y: 10.16), controlPoint2: NSPoint(x: 18.66, y: 10))
        thermometer2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometer2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometer2Path.close()
        thermometer2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        thermometer2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawThermometerLow(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-67-thermometer-low
        //// thermometer-low 2 Drawing
        let thermometerlow2Path = NSBezierPath()
        thermometerlow2Path.move(to: NSPoint(x: 16.83, y: 8.87))
        thermometerlow2Path.curve(to: NSPoint(x: 18.67, y: 5.62), controlPoint1: NSPoint(x: 17.93, y: 8.22), controlPoint2: NSPoint(x: 18.67, y: 7.01))
        thermometerlow2Path.curve(to: NSPoint(x: 15, y: 1.88), controlPoint1: NSPoint(x: 18.67, y: 3.55), controlPoint2: NSPoint(x: 17.03, y: 1.88))
        thermometerlow2Path.curve(to: NSPoint(x: 11.33, y: 5.62), controlPoint1: NSPoint(x: 12.97, y: 1.88), controlPoint2: NSPoint(x: 11.33, y: 3.55))
        thermometerlow2Path.curve(to: NSPoint(x: 13.17, y: 8.87), controlPoint1: NSPoint(x: 11.33, y: 7.01), controlPoint2: NSPoint(x: 12.07, y: 8.22))
        thermometerlow2Path.line(to: NSPoint(x: 13.17, y: 26.25))
        thermometerlow2Path.curve(to: NSPoint(x: 15, y: 28.12), controlPoint1: NSPoint(x: 13.17, y: 27.29), controlPoint2: NSPoint(x: 13.99, y: 28.12))
        thermometerlow2Path.curve(to: NSPoint(x: 16.83, y: 26.25), controlPoint1: NSPoint(x: 16.02, y: 28.12), controlPoint2: NSPoint(x: 16.83, y: 27.28))
        thermometerlow2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerlow2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerlow2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerlow2Path.close()
        thermometerlow2Path.move(to: NSPoint(x: 18.64, y: 9.84))
        thermometerlow2Path.curve(to: NSPoint(x: 20.5, y: 5.62), controlPoint1: NSPoint(x: 19.78, y: 8.81), controlPoint2: NSPoint(x: 20.5, y: 7.31))
        thermometerlow2Path.curve(to: NSPoint(x: 15, y: 0), controlPoint1: NSPoint(x: 20.5, y: 2.52), controlPoint2: NSPoint(x: 18.04, y: 0))
        thermometerlow2Path.curve(to: NSPoint(x: 9.5, y: 5.62), controlPoint1: NSPoint(x: 11.96, y: 0), controlPoint2: NSPoint(x: 9.5, y: 2.52))
        thermometerlow2Path.curve(to: NSPoint(x: 11.36, y: 9.84), controlPoint1: NSPoint(x: 9.5, y: 7.31), controlPoint2: NSPoint(x: 10.22, y: 8.81))
        thermometerlow2Path.curve(to: NSPoint(x: 11.33, y: 10.32), controlPoint1: NSPoint(x: 11.34, y: 10), controlPoint2: NSPoint(x: 11.33, y: 10.16))
        thermometerlow2Path.line(to: NSPoint(x: 11.33, y: 26.25))
        thermometerlow2Path.curve(to: NSPoint(x: 15, y: 30), controlPoint1: NSPoint(x: 11.33, y: 28.31), controlPoint2: NSPoint(x: 12.97, y: 30))
        thermometerlow2Path.curve(to: NSPoint(x: 18.67, y: 26.25), controlPoint1: NSPoint(x: 17.02, y: 30), controlPoint2: NSPoint(x: 18.67, y: 28.32))
        thermometerlow2Path.line(to: NSPoint(x: 18.67, y: 10.32))
        thermometerlow2Path.curve(to: NSPoint(x: 18.64, y: 9.84), controlPoint1: NSPoint(x: 18.67, y: 10.16), controlPoint2: NSPoint(x: 18.66, y: 10))
        thermometerlow2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerlow2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerlow2Path.close()
        thermometerlow2Path.move(to: NSPoint(x: 15, y: 2.81))
        thermometerlow2Path.curve(to: NSPoint(x: 17.75, y: 5.62), controlPoint1: NSPoint(x: 16.52, y: 2.81), controlPoint2: NSPoint(x: 17.75, y: 4.07))
        thermometerlow2Path.curve(to: NSPoint(x: 15, y: 8.44), controlPoint1: NSPoint(x: 17.75, y: 7.18), controlPoint2: NSPoint(x: 16.52, y: 8.44))
        thermometerlow2Path.curve(to: NSPoint(x: 12.25, y: 5.62), controlPoint1: NSPoint(x: 13.48, y: 8.44), controlPoint2: NSPoint(x: 12.25, y: 7.18))
        thermometerlow2Path.curve(to: NSPoint(x: 15, y: 2.81), controlPoint1: NSPoint(x: 12.25, y: 4.07), controlPoint2: NSPoint(x: 13.48, y: 2.81))
        thermometerlow2Path.line(to: NSPoint(x: 15, y: 2.81))
        thermometerlow2Path.close()
        thermometerlow2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        thermometerlow2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawThermometerQuarter(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-68-thermometer-quarter
        //// thermometer-quarter 2 Drawing
        let thermometerquarter2Path = NSBezierPath()
        thermometerquarter2Path.move(to: NSPoint(x: 15.9, y: 8.28))
        thermometerquarter2Path.curve(to: NSPoint(x: 17.75, y: 5.62), controlPoint1: NSPoint(x: 16.98, y: 7.9), controlPoint2: NSPoint(x: 17.75, y: 6.85))
        thermometerquarter2Path.curve(to: NSPoint(x: 15, y: 2.81), controlPoint1: NSPoint(x: 17.75, y: 4.07), controlPoint2: NSPoint(x: 16.52, y: 2.81))
        thermometerquarter2Path.curve(to: NSPoint(x: 12.25, y: 5.62), controlPoint1: NSPoint(x: 13.48, y: 2.81), controlPoint2: NSPoint(x: 12.25, y: 4.07))
        thermometerquarter2Path.curve(to: NSPoint(x: 14.1, y: 8.28), controlPoint1: NSPoint(x: 12.25, y: 6.85), controlPoint2: NSPoint(x: 13.02, y: 7.9))
        thermometerquarter2Path.curve(to: NSPoint(x: 14.08, y: 8.44), controlPoint1: NSPoint(x: 14.09, y: 8.33), controlPoint2: NSPoint(x: 14.08, y: 8.39))
        thermometerquarter2Path.line(to: NSPoint(x: 14.08, y: 13.12))
        thermometerquarter2Path.curve(to: NSPoint(x: 15, y: 14.06), controlPoint1: NSPoint(x: 14.08, y: 13.65), controlPoint2: NSPoint(x: 14.49, y: 14.06))
        thermometerquarter2Path.curve(to: NSPoint(x: 15.92, y: 13.12), controlPoint1: NSPoint(x: 15.51, y: 14.06), controlPoint2: NSPoint(x: 15.92, y: 13.64))
        thermometerquarter2Path.line(to: NSPoint(x: 15.92, y: 8.44))
        thermometerquarter2Path.curve(to: NSPoint(x: 15.9, y: 8.28), controlPoint1: NSPoint(x: 15.92, y: 8.39), controlPoint2: NSPoint(x: 15.91, y: 8.33))
        thermometerquarter2Path.line(to: NSPoint(x: 15.9, y: 8.28))
        thermometerquarter2Path.close()
        thermometerquarter2Path.move(to: NSPoint(x: 16.83, y: 8.87))
        thermometerquarter2Path.curve(to: NSPoint(x: 18.67, y: 5.62), controlPoint1: NSPoint(x: 17.93, y: 8.22), controlPoint2: NSPoint(x: 18.67, y: 7.01))
        thermometerquarter2Path.curve(to: NSPoint(x: 15, y: 1.88), controlPoint1: NSPoint(x: 18.67, y: 3.55), controlPoint2: NSPoint(x: 17.03, y: 1.88))
        thermometerquarter2Path.curve(to: NSPoint(x: 11.33, y: 5.62), controlPoint1: NSPoint(x: 12.97, y: 1.88), controlPoint2: NSPoint(x: 11.33, y: 3.55))
        thermometerquarter2Path.curve(to: NSPoint(x: 13.17, y: 8.87), controlPoint1: NSPoint(x: 11.33, y: 7.01), controlPoint2: NSPoint(x: 12.07, y: 8.22))
        thermometerquarter2Path.line(to: NSPoint(x: 13.17, y: 26.25))
        thermometerquarter2Path.curve(to: NSPoint(x: 15, y: 28.12), controlPoint1: NSPoint(x: 13.17, y: 27.29), controlPoint2: NSPoint(x: 13.99, y: 28.12))
        thermometerquarter2Path.curve(to: NSPoint(x: 16.83, y: 26.25), controlPoint1: NSPoint(x: 16.02, y: 28.12), controlPoint2: NSPoint(x: 16.83, y: 27.28))
        thermometerquarter2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerquarter2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerquarter2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerquarter2Path.close()
        thermometerquarter2Path.move(to: NSPoint(x: 18.64, y: 9.84))
        thermometerquarter2Path.curve(to: NSPoint(x: 20.5, y: 5.62), controlPoint1: NSPoint(x: 19.78, y: 8.81), controlPoint2: NSPoint(x: 20.5, y: 7.31))
        thermometerquarter2Path.curve(to: NSPoint(x: 15, y: 0), controlPoint1: NSPoint(x: 20.5, y: 2.52), controlPoint2: NSPoint(x: 18.04, y: 0))
        thermometerquarter2Path.curve(to: NSPoint(x: 9.5, y: 5.62), controlPoint1: NSPoint(x: 11.96, y: 0), controlPoint2: NSPoint(x: 9.5, y: 2.52))
        thermometerquarter2Path.curve(to: NSPoint(x: 11.36, y: 9.84), controlPoint1: NSPoint(x: 9.5, y: 7.31), controlPoint2: NSPoint(x: 10.22, y: 8.81))
        thermometerquarter2Path.curve(to: NSPoint(x: 11.33, y: 10.32), controlPoint1: NSPoint(x: 11.34, y: 10), controlPoint2: NSPoint(x: 11.33, y: 10.16))
        thermometerquarter2Path.line(to: NSPoint(x: 11.33, y: 26.25))
        thermometerquarter2Path.curve(to: NSPoint(x: 15, y: 30), controlPoint1: NSPoint(x: 11.33, y: 28.31), controlPoint2: NSPoint(x: 12.97, y: 30))
        thermometerquarter2Path.curve(to: NSPoint(x: 18.67, y: 26.25), controlPoint1: NSPoint(x: 17.02, y: 30), controlPoint2: NSPoint(x: 18.67, y: 28.32))
        thermometerquarter2Path.line(to: NSPoint(x: 18.67, y: 10.32))
        thermometerquarter2Path.curve(to: NSPoint(x: 18.64, y: 9.84), controlPoint1: NSPoint(x: 18.67, y: 10.16), controlPoint2: NSPoint(x: 18.66, y: 10))
        thermometerquarter2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerquarter2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerquarter2Path.close()
        thermometerquarter2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        thermometerquarter2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawThermometerHalf(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-
        //// icon-69-thermometer-half 2
        //// thermometer-half 2 Drawing
        let thermometerhalf2Path = NSBezierPath()
        thermometerhalf2Path.move(to: NSPoint(x: 15.9, y: 8.28))
        thermometerhalf2Path.curve(to: NSPoint(x: 17.75, y: 5.62), controlPoint1: NSPoint(x: 16.98, y: 7.9), controlPoint2: NSPoint(x: 17.75, y: 6.85))
        thermometerhalf2Path.curve(to: NSPoint(x: 15, y: 2.81), controlPoint1: NSPoint(x: 17.75, y: 4.07), controlPoint2: NSPoint(x: 16.52, y: 2.81))
        thermometerhalf2Path.curve(to: NSPoint(x: 12.25, y: 5.62), controlPoint1: NSPoint(x: 13.48, y: 2.81), controlPoint2: NSPoint(x: 12.25, y: 4.07))
        thermometerhalf2Path.curve(to: NSPoint(x: 14.1, y: 8.28), controlPoint1: NSPoint(x: 12.25, y: 6.85), controlPoint2: NSPoint(x: 13.02, y: 7.9))
        thermometerhalf2Path.curve(to: NSPoint(x: 14.08, y: 8.44), controlPoint1: NSPoint(x: 14.09, y: 8.33), controlPoint2: NSPoint(x: 14.08, y: 8.39))
        thermometerhalf2Path.line(to: NSPoint(x: 14.08, y: 17.81))
        thermometerhalf2Path.curve(to: NSPoint(x: 15, y: 18.75), controlPoint1: NSPoint(x: 14.08, y: 18.32), controlPoint2: NSPoint(x: 14.49, y: 18.75))
        thermometerhalf2Path.curve(to: NSPoint(x: 15.92, y: 17.81), controlPoint1: NSPoint(x: 15.51, y: 18.75), controlPoint2: NSPoint(x: 15.92, y: 18.33))
        thermometerhalf2Path.line(to: NSPoint(x: 15.92, y: 8.44))
        thermometerhalf2Path.curve(to: NSPoint(x: 15.9, y: 8.28), controlPoint1: NSPoint(x: 15.92, y: 8.39), controlPoint2: NSPoint(x: 15.91, y: 8.33))
        thermometerhalf2Path.line(to: NSPoint(x: 15.9, y: 8.28))
        thermometerhalf2Path.close()
        thermometerhalf2Path.move(to: NSPoint(x: 16.83, y: 8.87))
        thermometerhalf2Path.curve(to: NSPoint(x: 18.67, y: 5.62), controlPoint1: NSPoint(x: 17.93, y: 8.22), controlPoint2: NSPoint(x: 18.67, y: 7.01))
        thermometerhalf2Path.curve(to: NSPoint(x: 15, y: 1.88), controlPoint1: NSPoint(x: 18.67, y: 3.55), controlPoint2: NSPoint(x: 17.03, y: 1.88))
        thermometerhalf2Path.curve(to: NSPoint(x: 11.33, y: 5.62), controlPoint1: NSPoint(x: 12.97, y: 1.88), controlPoint2: NSPoint(x: 11.33, y: 3.55))
        thermometerhalf2Path.curve(to: NSPoint(x: 13.17, y: 8.87), controlPoint1: NSPoint(x: 11.33, y: 7.01), controlPoint2: NSPoint(x: 12.07, y: 8.22))
        thermometerhalf2Path.line(to: NSPoint(x: 13.17, y: 26.25))
        thermometerhalf2Path.curve(to: NSPoint(x: 15, y: 28.12), controlPoint1: NSPoint(x: 13.17, y: 27.29), controlPoint2: NSPoint(x: 13.99, y: 28.12))
        thermometerhalf2Path.curve(to: NSPoint(x: 16.83, y: 26.25), controlPoint1: NSPoint(x: 16.02, y: 28.12), controlPoint2: NSPoint(x: 16.83, y: 27.28))
        thermometerhalf2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerhalf2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerhalf2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerhalf2Path.close()
        thermometerhalf2Path.move(to: NSPoint(x: 18.64, y: 9.84))
        thermometerhalf2Path.curve(to: NSPoint(x: 20.5, y: 5.62), controlPoint1: NSPoint(x: 19.78, y: 8.81), controlPoint2: NSPoint(x: 20.5, y: 7.31))
        thermometerhalf2Path.curve(to: NSPoint(x: 15, y: 0), controlPoint1: NSPoint(x: 20.5, y: 2.52), controlPoint2: NSPoint(x: 18.04, y: 0))
        thermometerhalf2Path.curve(to: NSPoint(x: 9.5, y: 5.62), controlPoint1: NSPoint(x: 11.96, y: 0), controlPoint2: NSPoint(x: 9.5, y: 2.52))
        thermometerhalf2Path.curve(to: NSPoint(x: 11.36, y: 9.84), controlPoint1: NSPoint(x: 9.5, y: 7.31), controlPoint2: NSPoint(x: 10.22, y: 8.81))
        thermometerhalf2Path.curve(to: NSPoint(x: 11.33, y: 10.32), controlPoint1: NSPoint(x: 11.34, y: 10), controlPoint2: NSPoint(x: 11.33, y: 10.16))
        thermometerhalf2Path.line(to: NSPoint(x: 11.33, y: 26.25))
        thermometerhalf2Path.curve(to: NSPoint(x: 15, y: 30), controlPoint1: NSPoint(x: 11.33, y: 28.31), controlPoint2: NSPoint(x: 12.97, y: 30))
        thermometerhalf2Path.curve(to: NSPoint(x: 18.67, y: 26.25), controlPoint1: NSPoint(x: 17.02, y: 30), controlPoint2: NSPoint(x: 18.67, y: 28.32))
        thermometerhalf2Path.line(to: NSPoint(x: 18.67, y: 10.32))
        thermometerhalf2Path.curve(to: NSPoint(x: 18.64, y: 9.84), controlPoint1: NSPoint(x: 18.67, y: 10.16), controlPoint2: NSPoint(x: 18.66, y: 10))
        thermometerhalf2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerhalf2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerhalf2Path.close()
        thermometerhalf2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        thermometerhalf2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawThermometerThreeQuarters(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-70-thermometer-three-quarters
        //// thermometer-three-quarters 2 Drawing
        let thermometerthreequarters2Path = NSBezierPath()
        thermometerthreequarters2Path.move(to: NSPoint(x: 15.9, y: 8.28))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 17.75, y: 5.62), controlPoint1: NSPoint(x: 16.98, y: 7.9), controlPoint2: NSPoint(x: 17.75, y: 6.85))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 15, y: 2.81), controlPoint1: NSPoint(x: 17.75, y: 4.07), controlPoint2: NSPoint(x: 16.52, y: 2.81))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 12.25, y: 5.62), controlPoint1: NSPoint(x: 13.48, y: 2.81), controlPoint2: NSPoint(x: 12.25, y: 4.07))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 14.1, y: 8.28), controlPoint1: NSPoint(x: 12.25, y: 6.85), controlPoint2: NSPoint(x: 13.02, y: 7.9))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 14.08, y: 8.44), controlPoint1: NSPoint(x: 14.09, y: 8.33), controlPoint2: NSPoint(x: 14.08, y: 8.38))
        thermometerthreequarters2Path.line(to: NSPoint(x: 14.08, y: 22.5))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 15, y: 23.44), controlPoint1: NSPoint(x: 14.08, y: 23.01), controlPoint2: NSPoint(x: 14.49, y: 23.44))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 15.92, y: 22.5), controlPoint1: NSPoint(x: 15.51, y: 23.44), controlPoint2: NSPoint(x: 15.92, y: 23.02))
        thermometerthreequarters2Path.line(to: NSPoint(x: 15.92, y: 8.44))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 15.9, y: 8.28), controlPoint1: NSPoint(x: 15.92, y: 8.38), controlPoint2: NSPoint(x: 15.91, y: 8.33))
        thermometerthreequarters2Path.line(to: NSPoint(x: 15.9, y: 8.28))
        thermometerthreequarters2Path.close()
        thermometerthreequarters2Path.move(to: NSPoint(x: 16.83, y: 8.87))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 18.67, y: 5.62), controlPoint1: NSPoint(x: 17.93, y: 8.22), controlPoint2: NSPoint(x: 18.67, y: 7.01))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 15, y: 1.88), controlPoint1: NSPoint(x: 18.67, y: 3.55), controlPoint2: NSPoint(x: 17.03, y: 1.88))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 11.33, y: 5.62), controlPoint1: NSPoint(x: 12.97, y: 1.88), controlPoint2: NSPoint(x: 11.33, y: 3.55))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 13.17, y: 8.87), controlPoint1: NSPoint(x: 11.33, y: 7.01), controlPoint2: NSPoint(x: 12.07, y: 8.22))
        thermometerthreequarters2Path.line(to: NSPoint(x: 13.17, y: 26.25))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 15, y: 28.12), controlPoint1: NSPoint(x: 13.17, y: 27.29), controlPoint2: NSPoint(x: 13.99, y: 28.12))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 16.83, y: 26.25), controlPoint1: NSPoint(x: 16.02, y: 28.12), controlPoint2: NSPoint(x: 16.83, y: 27.28))
        thermometerthreequarters2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerthreequarters2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerthreequarters2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerthreequarters2Path.close()
        thermometerthreequarters2Path.move(to: NSPoint(x: 18.64, y: 9.84))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 20.5, y: 5.62), controlPoint1: NSPoint(x: 19.78, y: 8.81), controlPoint2: NSPoint(x: 20.5, y: 7.31))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 15, y: 0), controlPoint1: NSPoint(x: 20.5, y: 2.52), controlPoint2: NSPoint(x: 18.04, y: 0))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 9.5, y: 5.62), controlPoint1: NSPoint(x: 11.96, y: 0), controlPoint2: NSPoint(x: 9.5, y: 2.52))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 11.36, y: 9.84), controlPoint1: NSPoint(x: 9.5, y: 7.31), controlPoint2: NSPoint(x: 10.22, y: 8.81))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 11.33, y: 10.32), controlPoint1: NSPoint(x: 11.34, y: 10), controlPoint2: NSPoint(x: 11.33, y: 10.16))
        thermometerthreequarters2Path.line(to: NSPoint(x: 11.33, y: 26.25))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 15, y: 30), controlPoint1: NSPoint(x: 11.33, y: 28.31), controlPoint2: NSPoint(x: 12.97, y: 30))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 18.67, y: 26.25), controlPoint1: NSPoint(x: 17.02, y: 30), controlPoint2: NSPoint(x: 18.67, y: 28.32))
        thermometerthreequarters2Path.line(to: NSPoint(x: 18.67, y: 10.32))
        thermometerthreequarters2Path.curve(to: NSPoint(x: 18.64, y: 9.84), controlPoint1: NSPoint(x: 18.67, y: 10.16), controlPoint2: NSPoint(x: 18.66, y: 10))
        thermometerthreequarters2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerthreequarters2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerthreequarters2Path.close()
        thermometerthreequarters2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        thermometerthreequarters2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawThermometerFull(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-
        //// icon-71-thermometer-full 2
        //// thermometer-full 2 Drawing
        let thermometerfull2Path = NSBezierPath()
        thermometerfull2Path.move(to: NSPoint(x: 15.9, y: 8.28))
        thermometerfull2Path.curve(to: NSPoint(x: 17.75, y: 5.62), controlPoint1: NSPoint(x: 16.98, y: 7.9), controlPoint2: NSPoint(x: 17.75, y: 6.85))
        thermometerfull2Path.curve(to: NSPoint(x: 15, y: 2.81), controlPoint1: NSPoint(x: 17.75, y: 4.07), controlPoint2: NSPoint(x: 16.52, y: 2.81))
        thermometerfull2Path.curve(to: NSPoint(x: 12.25, y: 5.62), controlPoint1: NSPoint(x: 13.48, y: 2.81), controlPoint2: NSPoint(x: 12.25, y: 4.07))
        thermometerfull2Path.curve(to: NSPoint(x: 14.1, y: 8.28), controlPoint1: NSPoint(x: 12.25, y: 6.85), controlPoint2: NSPoint(x: 13.02, y: 7.9))
        thermometerfull2Path.curve(to: NSPoint(x: 14.08, y: 8.44), controlPoint1: NSPoint(x: 14.09, y: 8.33), controlPoint2: NSPoint(x: 14.08, y: 8.38))
        thermometerfull2Path.line(to: NSPoint(x: 14.08, y: 26.25))
        thermometerfull2Path.curve(to: NSPoint(x: 15, y: 27.19), controlPoint1: NSPoint(x: 14.08, y: 26.78), controlPoint2: NSPoint(x: 14.49, y: 27.19))
        thermometerfull2Path.curve(to: NSPoint(x: 15.92, y: 26.25), controlPoint1: NSPoint(x: 15.51, y: 27.19), controlPoint2: NSPoint(x: 15.92, y: 26.77))
        thermometerfull2Path.line(to: NSPoint(x: 15.92, y: 8.44))
        thermometerfull2Path.curve(to: NSPoint(x: 15.9, y: 8.28), controlPoint1: NSPoint(x: 15.92, y: 8.38), controlPoint2: NSPoint(x: 15.91, y: 8.33))
        thermometerfull2Path.line(to: NSPoint(x: 15.9, y: 8.28))
        thermometerfull2Path.close()
        thermometerfull2Path.move(to: NSPoint(x: 16.83, y: 8.87))
        thermometerfull2Path.curve(to: NSPoint(x: 18.67, y: 5.62), controlPoint1: NSPoint(x: 17.93, y: 8.22), controlPoint2: NSPoint(x: 18.67, y: 7.01))
        thermometerfull2Path.curve(to: NSPoint(x: 15, y: 1.88), controlPoint1: NSPoint(x: 18.67, y: 3.55), controlPoint2: NSPoint(x: 17.03, y: 1.88))
        thermometerfull2Path.curve(to: NSPoint(x: 11.33, y: 5.62), controlPoint1: NSPoint(x: 12.97, y: 1.88), controlPoint2: NSPoint(x: 11.33, y: 3.55))
        thermometerfull2Path.curve(to: NSPoint(x: 13.17, y: 8.87), controlPoint1: NSPoint(x: 11.33, y: 7.01), controlPoint2: NSPoint(x: 12.07, y: 8.22))
        thermometerfull2Path.line(to: NSPoint(x: 13.17, y: 26.25))
        thermometerfull2Path.curve(to: NSPoint(x: 15, y: 28.12), controlPoint1: NSPoint(x: 13.17, y: 27.29), controlPoint2: NSPoint(x: 13.99, y: 28.12))
        thermometerfull2Path.curve(to: NSPoint(x: 16.83, y: 26.25), controlPoint1: NSPoint(x: 16.02, y: 28.12), controlPoint2: NSPoint(x: 16.83, y: 27.28))
        thermometerfull2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerfull2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerfull2Path.line(to: NSPoint(x: 16.83, y: 8.87))
        thermometerfull2Path.close()
        thermometerfull2Path.move(to: NSPoint(x: 18.64, y: 9.84))
        thermometerfull2Path.curve(to: NSPoint(x: 20.5, y: 5.62), controlPoint1: NSPoint(x: 19.78, y: 8.81), controlPoint2: NSPoint(x: 20.5, y: 7.31))
        thermometerfull2Path.curve(to: NSPoint(x: 15, y: 0), controlPoint1: NSPoint(x: 20.5, y: 2.52), controlPoint2: NSPoint(x: 18.04, y: 0))
        thermometerfull2Path.curve(to: NSPoint(x: 9.5, y: 5.62), controlPoint1: NSPoint(x: 11.96, y: 0), controlPoint2: NSPoint(x: 9.5, y: 2.52))
        thermometerfull2Path.curve(to: NSPoint(x: 11.36, y: 9.84), controlPoint1: NSPoint(x: 9.5, y: 7.31), controlPoint2: NSPoint(x: 10.22, y: 8.81))
        thermometerfull2Path.curve(to: NSPoint(x: 11.33, y: 10.32), controlPoint1: NSPoint(x: 11.34, y: 10), controlPoint2: NSPoint(x: 11.33, y: 10.16))
        thermometerfull2Path.line(to: NSPoint(x: 11.33, y: 26.25))
        thermometerfull2Path.curve(to: NSPoint(x: 15, y: 30), controlPoint1: NSPoint(x: 11.33, y: 28.31), controlPoint2: NSPoint(x: 12.97, y: 30))
        thermometerfull2Path.curve(to: NSPoint(x: 18.67, y: 26.25), controlPoint1: NSPoint(x: 17.02, y: 30), controlPoint2: NSPoint(x: 18.67, y: 28.32))
        thermometerfull2Path.line(to: NSPoint(x: 18.67, y: 10.32))
        thermometerfull2Path.curve(to: NSPoint(x: 18.64, y: 9.84), controlPoint1: NSPoint(x: 18.67, y: 10.16), controlPoint2: NSPoint(x: 18.66, y: 10))
        thermometerfull2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerfull2Path.line(to: NSPoint(x: 18.64, y: 9.84))
        thermometerfull2Path.close()
        thermometerfull2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        thermometerfull2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawLightning(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        //// icon-72-lightning
        //// lightning 2 Drawing
        let lightning2Path = NSBezierPath()
        lightning2Path.move(to: NSPoint(x: 12.05, y: 14.5))
        lightning2Path.line(to: NSPoint(x: 9.5, y: 14.5))
        lightning2Path.line(to: NSPoint(x: 12.5, y: 22.5))
        lightning2Path.line(to: NSPoint(x: 18.5, y: 22.5))
        lightning2Path.line(to: NSPoint(x: 17, y: 18.5))
        lightning2Path.line(to: NSPoint(x: 20.5, y: 18.5))
        lightning2Path.line(to: NSPoint(x: 9.5, y: 7.5))
        lightning2Path.line(to: NSPoint(x: 12.05, y: 14.5))
        lightning2Path.line(to: NSPoint(x: 12.05, y: 14.5))
        lightning2Path.close()
        lightning2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        lightning2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawWindTurbine(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-
        //// icon-73-wind-turbine 2
        //// wind-turbine 2 Drawing
        let windturbine2Path = NSBezierPath()
        windturbine2Path.move(to: NSPoint(x: 17.43, y: 18.23))
        windturbine2Path.curve(to: NSPoint(x: 25.37, y: 11.69), controlPoint1: NSPoint(x: 19.87, y: 16.52), controlPoint2: NSPoint(x: 25.75, y: 12.34))
        windturbine2Path.curve(to: NSPoint(x: 15.65, y: 15.16), controlPoint1: NSPoint(x: 24.99, y: 11.05), controlPoint2: NSPoint(x: 18.39, y: 13.93))
        windturbine2Path.line(to: NSPoint(x: 15.65, y: 15.16))
        windturbine2Path.line(to: NSPoint(x: 16.5, y: 0.94))
        windturbine2Path.curve(to: NSPoint(x: 14.59, y: 0), controlPoint1: NSPoint(x: 16.5, y: 0.94), controlPoint2: NSPoint(x: 16.03, y: 0))
        windturbine2Path.curve(to: NSPoint(x: 12.68, y: 0.94), controlPoint1: NSPoint(x: 13.16, y: 0), controlPoint2: NSPoint(x: 12.68, y: 0.94))
        windturbine2Path.line(to: NSPoint(x: 13.53, y: 15.16))
        windturbine2Path.line(to: NSPoint(x: 13.53, y: 15.16))
        windturbine2Path.curve(to: NSPoint(x: 3.82, y: 11.69), controlPoint1: NSPoint(x: 10.8, y: 13.93), controlPoint2: NSPoint(x: 4.2, y: 11.05))
        windturbine2Path.curve(to: NSPoint(x: 11.76, y: 18.23), controlPoint1: NSPoint(x: 3.44, y: 12.34), controlPoint2: NSPoint(x: 9.31, y: 16.52))
        windturbine2Path.curve(to: NSPoint(x: 11.72, y: 17.81), controlPoint1: NSPoint(x: 11.74, y: 18.09), controlPoint2: NSPoint(x: 11.72, y: 17.95))
        windturbine2Path.curve(to: NSPoint(x: 14.59, y: 15), controlPoint1: NSPoint(x: 11.72, y: 16.26), controlPoint2: NSPoint(x: 13.01, y: 15))
        windturbine2Path.curve(to: NSPoint(x: 17.46, y: 17.81), controlPoint1: NSPoint(x: 16.18, y: 15), controlPoint2: NSPoint(x: 17.46, y: 16.26))
        windturbine2Path.curve(to: NSPoint(x: 17.43, y: 18.23), controlPoint1: NSPoint(x: 17.46, y: 17.95), controlPoint2: NSPoint(x: 17.45, y: 18.09))
        windturbine2Path.line(to: NSPoint(x: 17.43, y: 18.23))
        windturbine2Path.line(to: NSPoint(x: 17.43, y: 18.23))
        windturbine2Path.close()
        windturbine2Path.move(to: NSPoint(x: 16.39, y: 20))
        windturbine2Path.curve(to: NSPoint(x: 14.59, y: 30), controlPoint1: NSPoint(x: 16.11, y: 22.94), controlPoint2: NSPoint(x: 15.35, y: 30))
        windturbine2Path.curve(to: NSPoint(x: 12.8, y: 20), controlPoint1: NSPoint(x: 13.83, y: 30), controlPoint2: NSPoint(x: 13.08, y: 22.94))
        windturbine2Path.curve(to: NSPoint(x: 14.59, y: 20.62), controlPoint1: NSPoint(x: 13.29, y: 20.39), controlPoint2: NSPoint(x: 13.91, y: 20.62))
        windturbine2Path.curve(to: NSPoint(x: 16.39, y: 20), controlPoint1: NSPoint(x: 15.27, y: 20.62), controlPoint2: NSPoint(x: 15.9, y: 20.39))
        windturbine2Path.line(to: NSPoint(x: 16.39, y: 20))
        windturbine2Path.line(to: NSPoint(x: 16.39, y: 20))
        windturbine2Path.close()
        windturbine2Path.move(to: NSPoint(x: 14.59, y: 15.94))
        windturbine2Path.curve(to: NSPoint(x: 16.5, y: 17.81), controlPoint1: NSPoint(x: 15.65, y: 15.94), controlPoint2: NSPoint(x: 16.5, y: 16.78))
        windturbine2Path.curve(to: NSPoint(x: 14.59, y: 19.69), controlPoint1: NSPoint(x: 16.5, y: 18.85), controlPoint2: NSPoint(x: 15.65, y: 19.69))
        windturbine2Path.curve(to: NSPoint(x: 12.68, y: 17.81), controlPoint1: NSPoint(x: 13.54, y: 19.69), controlPoint2: NSPoint(x: 12.68, y: 18.85))
        windturbine2Path.curve(to: NSPoint(x: 14.59, y: 15.94), controlPoint1: NSPoint(x: 12.68, y: 16.78), controlPoint2: NSPoint(x: 13.54, y: 15.94))
        windturbine2Path.line(to: NSPoint(x: 14.59, y: 15.94))
        windturbine2Path.close()
        windturbine2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        windturbine2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSnowflake(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-
        //// icon-74-snowflake 2
        //// snowflake 2 Drawing
        let snowflake2Path = NSBezierPath()
        snowflake2Path.move(to: NSPoint(x: 11.47, y: 12.18))
        snowflake2Path.line(to: NSPoint(x: 13.79, y: 14.5))
        snowflake2Path.line(to: NSPoint(x: 8.16, y: 14.5))
        snowflake2Path.curve(to: NSPoint(x: 8.05, y: 14.33), controlPoint1: NSPoint(x: 8.14, y: 14.44), controlPoint2: NSPoint(x: 8.1, y: 14.38))
        snowflake2Path.line(to: NSPoint(x: 6.63, y: 12.91))
        snowflake2Path.curve(to: NSPoint(x: 5.93, y: 12.92), controlPoint1: NSPoint(x: 6.44, y: 12.72), controlPoint2: NSPoint(x: 6.13, y: 12.72))
        snowflake2Path.curve(to: NSPoint(x: 5.93, y: 13.62), controlPoint1: NSPoint(x: 5.74, y: 13.11), controlPoint2: NSPoint(x: 5.73, y: 13.43))
        snowflake2Path.line(to: NSPoint(x: 6.81, y: 14.5))
        snowflake2Path.line(to: NSPoint(x: 6.01, y: 14.5))
        snowflake2Path.curve(to: NSPoint(x: 5.5, y: 15), controlPoint1: NSPoint(x: 5.73, y: 14.5), controlPoint2: NSPoint(x: 5.5, y: 14.72))
        snowflake2Path.curve(to: NSPoint(x: 6.01, y: 15.5), controlPoint1: NSPoint(x: 5.5, y: 15.27), controlPoint2: NSPoint(x: 5.73, y: 15.5))
        snowflake2Path.line(to: NSPoint(x: 6.76, y: 15.5))
        snowflake2Path.line(to: NSPoint(x: 5.93, y: 16.33))
        snowflake2Path.curve(to: NSPoint(x: 5.93, y: 17.04), controlPoint1: NSPoint(x: 5.73, y: 16.53), controlPoint2: NSPoint(x: 5.74, y: 16.85))
        snowflake2Path.curve(to: NSPoint(x: 6.63, y: 17.04), controlPoint1: NSPoint(x: 6.13, y: 17.23), controlPoint2: NSPoint(x: 6.44, y: 17.24))
        snowflake2Path.line(to: NSPoint(x: 8.05, y: 15.62))
        snowflake2Path.curve(to: NSPoint(x: 8.14, y: 15.5), controlPoint1: NSPoint(x: 8.09, y: 15.58), controlPoint2: NSPoint(x: 8.12, y: 15.54))
        snowflake2Path.line(to: NSPoint(x: 8.14, y: 15.5))
        snowflake2Path.line(to: NSPoint(x: 13.79, y: 15.5))
        snowflake2Path.line(to: NSPoint(x: 11.49, y: 17.81))
        snowflake2Path.line(to: NSPoint(x: 11.49, y: 17.81))
        snowflake2Path.curve(to: NSPoint(x: 11.31, y: 17.77), controlPoint1: NSPoint(x: 11.43, y: 17.79), controlPoint2: NSPoint(x: 11.37, y: 17.77))
        snowflake2Path.line(to: NSPoint(x: 9.3, y: 17.77))
        snowflake2Path.curve(to: NSPoint(x: 8.81, y: 18.27), controlPoint1: NSPoint(x: 9.02, y: 17.77), controlPoint2: NSPoint(x: 8.81, y: 18))
        snowflake2Path.curve(to: NSPoint(x: 9.3, y: 18.77), controlPoint1: NSPoint(x: 8.81, y: 18.54), controlPoint2: NSPoint(x: 9.03, y: 18.77))
        snowflake2Path.line(to: NSPoint(x: 10.52, y: 18.77))
        snowflake2Path.line(to: NSPoint(x: 9.7, y: 19.6))
        snowflake2Path.curve(to: NSPoint(x: 9.7, y: 20.3), controlPoint1: NSPoint(x: 9.5, y: 19.79), controlPoint2: NSPoint(x: 9.51, y: 20.11))
        snowflake2Path.curve(to: NSPoint(x: 10.4, y: 20.3), controlPoint1: NSPoint(x: 9.89, y: 20.5), controlPoint2: NSPoint(x: 10.21, y: 20.5))
        snowflake2Path.line(to: NSPoint(x: 11.22, y: 19.48))
        snowflake2Path.line(to: NSPoint(x: 11.22, y: 20.69))
        snowflake2Path.curve(to: NSPoint(x: 11.72, y: 21.19), controlPoint1: NSPoint(x: 11.22, y: 20.97), controlPoint2: NSPoint(x: 11.45, y: 21.19))
        snowflake2Path.curve(to: NSPoint(x: 12.22, y: 20.69), controlPoint1: NSPoint(x: 12, y: 21.19), controlPoint2: NSPoint(x: 12.22, y: 20.97))
        snowflake2Path.line(to: NSPoint(x: 12.22, y: 18.68))
        snowflake2Path.curve(to: NSPoint(x: 12.19, y: 18.52), controlPoint1: NSPoint(x: 12.22, y: 18.62), controlPoint2: NSPoint(x: 12.21, y: 18.57))
        snowflake2Path.line(to: NSPoint(x: 14.5, y: 16.21))
        snowflake2Path.line(to: NSPoint(x: 14.5, y: 21.84))
        snowflake2Path.line(to: NSPoint(x: 14.5, y: 21.84))
        snowflake2Path.curve(to: NSPoint(x: 14.37, y: 21.94), controlPoint1: NSPoint(x: 14.45, y: 21.87), controlPoint2: NSPoint(x: 14.41, y: 21.9))
        snowflake2Path.line(to: NSPoint(x: 12.95, y: 23.36))
        snowflake2Path.curve(to: NSPoint(x: 12.95, y: 24.06), controlPoint1: NSPoint(x: 12.75, y: 23.55), controlPoint2: NSPoint(x: 12.76, y: 23.87))
        snowflake2Path.curve(to: NSPoint(x: 13.66, y: 24.06), controlPoint1: NSPoint(x: 13.14, y: 24.25), controlPoint2: NSPoint(x: 13.46, y: 24.26))
        snowflake2Path.line(to: NSPoint(x: 14.5, y: 23.22))
        snowflake2Path.line(to: NSPoint(x: 14.5, y: 23.99))
        snowflake2Path.curve(to: NSPoint(x: 15, y: 24.5), controlPoint1: NSPoint(x: 14.5, y: 24.27), controlPoint2: NSPoint(x: 14.72, y: 24.5))
        snowflake2Path.curve(to: NSPoint(x: 15.5, y: 23.99), controlPoint1: NSPoint(x: 15.27, y: 24.5), controlPoint2: NSPoint(x: 15.5, y: 24.27))
        snowflake2Path.line(to: NSPoint(x: 15.5, y: 23.19))
        snowflake2Path.line(to: NSPoint(x: 16.37, y: 24.06))
        snowflake2Path.curve(to: NSPoint(x: 17.07, y: 24.06), controlPoint1: NSPoint(x: 16.56, y: 24.26), controlPoint2: NSPoint(x: 16.89, y: 24.25))
        snowflake2Path.curve(to: NSPoint(x: 17.08, y: 23.36), controlPoint1: NSPoint(x: 17.27, y: 23.87), controlPoint2: NSPoint(x: 17.28, y: 23.55))
        snowflake2Path.line(to: NSPoint(x: 15.66, y: 21.94))
        snowflake2Path.curve(to: NSPoint(x: 15.5, y: 21.83), controlPoint1: NSPoint(x: 15.61, y: 21.89), controlPoint2: NSPoint(x: 15.56, y: 21.85))
        snowflake2Path.line(to: NSPoint(x: 15.5, y: 16.21))
        snowflake2Path.line(to: NSPoint(x: 15.5, y: 16.21))
        snowflake2Path.line(to: NSPoint(x: 17.81, y: 18.52))
        snowflake2Path.curve(to: NSPoint(x: 17.78, y: 18.67), controlPoint1: NSPoint(x: 17.79, y: 18.56), controlPoint2: NSPoint(x: 17.78, y: 18.62))
        snowflake2Path.line(to: NSPoint(x: 17.78, y: 20.68))
        snowflake2Path.curve(to: NSPoint(x: 18.28, y: 21.17), controlPoint1: NSPoint(x: 17.78, y: 20.96), controlPoint2: NSPoint(x: 18.01, y: 21.17))
        snowflake2Path.curve(to: NSPoint(x: 18.78, y: 20.68), controlPoint1: NSPoint(x: 18.55, y: 21.17), controlPoint2: NSPoint(x: 18.78, y: 20.95))
        snowflake2Path.line(to: NSPoint(x: 18.78, y: 19.49))
        snowflake2Path.line(to: NSPoint(x: 19.6, y: 20.3))
        snowflake2Path.curve(to: NSPoint(x: 20.3, y: 20.3), controlPoint1: NSPoint(x: 19.79, y: 20.5), controlPoint2: NSPoint(x: 20.11, y: 20.5))
        snowflake2Path.curve(to: NSPoint(x: 20.3, y: 19.6), controlPoint1: NSPoint(x: 20.49, y: 20.11), controlPoint2: NSPoint(x: 20.5, y: 19.79))
        snowflake2Path.line(to: NSPoint(x: 19.47, y: 18.76))
        snowflake2Path.line(to: NSPoint(x: 20.7, y: 18.76))
        snowflake2Path.curve(to: NSPoint(x: 21.2, y: 18.26), controlPoint1: NSPoint(x: 20.98, y: 18.76), controlPoint2: NSPoint(x: 21.2, y: 18.53))
        snowflake2Path.curve(to: NSPoint(x: 20.7, y: 17.76), controlPoint1: NSPoint(x: 21.2, y: 17.98), controlPoint2: NSPoint(x: 20.98, y: 17.76))
        snowflake2Path.line(to: NSPoint(x: 18.69, y: 17.76))
        snowflake2Path.curve(to: NSPoint(x: 18.5, y: 17.8), controlPoint1: NSPoint(x: 18.63, y: 17.76), controlPoint2: NSPoint(x: 18.56, y: 17.77))
        snowflake2Path.line(to: NSPoint(x: 18.5, y: 17.8))
        snowflake2Path.line(to: NSPoint(x: 16.21, y: 15.5))
        snowflake2Path.line(to: NSPoint(x: 21.89, y: 15.5))
        snowflake2Path.curve(to: NSPoint(x: 21.97, y: 15.62), controlPoint1: NSPoint(x: 21.91, y: 15.54), controlPoint2: NSPoint(x: 21.94, y: 15.58))
        snowflake2Path.line(to: NSPoint(x: 23.39, y: 17.04))
        snowflake2Path.curve(to: NSPoint(x: 24.1, y: 17.04), controlPoint1: NSPoint(x: 23.59, y: 17.24), controlPoint2: NSPoint(x: 23.9, y: 17.23))
        snowflake2Path.curve(to: NSPoint(x: 24.1, y: 16.33), controlPoint1: NSPoint(x: 24.29, y: 16.85), controlPoint2: NSPoint(x: 24.29, y: 16.53))
        snowflake2Path.line(to: NSPoint(x: 23.27, y: 15.5))
        snowflake2Path.line(to: NSPoint(x: 23.99, y: 15.5))
        snowflake2Path.curve(to: NSPoint(x: 24.5, y: 15), controlPoint1: NSPoint(x: 24.27, y: 15.5), controlPoint2: NSPoint(x: 24.5, y: 15.28))
        snowflake2Path.curve(to: NSPoint(x: 23.99, y: 14.5), controlPoint1: NSPoint(x: 24.5, y: 14.73), controlPoint2: NSPoint(x: 24.27, y: 14.5))
        snowflake2Path.line(to: NSPoint(x: 23.22, y: 14.5))
        snowflake2Path.line(to: NSPoint(x: 24.1, y: 13.62))
        snowflake2Path.curve(to: NSPoint(x: 24.1, y: 12.92), controlPoint1: NSPoint(x: 24.29, y: 13.43), controlPoint2: NSPoint(x: 24.29, y: 13.11))
        snowflake2Path.curve(to: NSPoint(x: 23.39, y: 12.91), controlPoint1: NSPoint(x: 23.9, y: 12.72), controlPoint2: NSPoint(x: 23.59, y: 12.72))
        snowflake2Path.line(to: NSPoint(x: 21.97, y: 14.33))
        snowflake2Path.curve(to: NSPoint(x: 21.87, y: 14.5), controlPoint1: NSPoint(x: 21.92, y: 14.38), controlPoint2: NSPoint(x: 21.89, y: 14.44))
        snowflake2Path.line(to: NSPoint(x: 21.87, y: 14.5))
        snowflake2Path.line(to: NSPoint(x: 16.21, y: 14.5))
        snowflake2Path.line(to: NSPoint(x: 18.53, y: 12.18))
        snowflake2Path.line(to: NSPoint(x: 18.53, y: 12.18))
        snowflake2Path.curve(to: NSPoint(x: 18.68, y: 12.2), controlPoint1: NSPoint(x: 18.58, y: 12.19), controlPoint2: NSPoint(x: 18.63, y: 12.2))
        snowflake2Path.line(to: NSPoint(x: 20.69, y: 12.2))
        snowflake2Path.curve(to: NSPoint(x: 21.18, y: 11.7), controlPoint1: NSPoint(x: 20.97, y: 12.2), controlPoint2: NSPoint(x: 21.18, y: 11.97))
        snowflake2Path.curve(to: NSPoint(x: 20.69, y: 11.2), controlPoint1: NSPoint(x: 21.18, y: 11.43), controlPoint2: NSPoint(x: 20.96, y: 11.2))
        snowflake2Path.line(to: NSPoint(x: 19.51, y: 11.2))
        snowflake2Path.line(to: NSPoint(x: 20.3, y: 10.4))
        snowflake2Path.curve(to: NSPoint(x: 20.3, y: 9.7), controlPoint1: NSPoint(x: 20.5, y: 10.21), controlPoint2: NSPoint(x: 20.49, y: 9.89))
        snowflake2Path.curve(to: NSPoint(x: 19.6, y: 9.7), controlPoint1: NSPoint(x: 20.11, y: 9.5), controlPoint2: NSPoint(x: 19.79, y: 9.5))
        snowflake2Path.line(to: NSPoint(x: 18.77, y: 10.52))
        snowflake2Path.line(to: NSPoint(x: 18.77, y: 9.28))
        snowflake2Path.curve(to: NSPoint(x: 18.27, y: 8.78), controlPoint1: NSPoint(x: 18.77, y: 9.01), controlPoint2: NSPoint(x: 18.54, y: 8.78))
        snowflake2Path.curve(to: NSPoint(x: 17.77, y: 9.28), controlPoint1: NSPoint(x: 17.99, y: 8.78), controlPoint2: NSPoint(x: 17.77, y: 9))
        snowflake2Path.line(to: NSPoint(x: 17.77, y: 11.29))
        snowflake2Path.curve(to: NSPoint(x: 17.81, y: 11.48), controlPoint1: NSPoint(x: 17.77, y: 11.36), controlPoint2: NSPoint(x: 17.78, y: 11.42))
        snowflake2Path.line(to: NSPoint(x: 15.5, y: 13.79))
        snowflake2Path.line(to: NSPoint(x: 15.5, y: 8.12))
        snowflake2Path.line(to: NSPoint(x: 15.5, y: 8.12))
        snowflake2Path.curve(to: NSPoint(x: 15.66, y: 8.02), controlPoint1: NSPoint(x: 15.56, y: 8.1), controlPoint2: NSPoint(x: 15.61, y: 8.06))
        snowflake2Path.line(to: NSPoint(x: 17.08, y: 6.6))
        snowflake2Path.curve(to: NSPoint(x: 17.07, y: 5.89), controlPoint1: NSPoint(x: 17.28, y: 6.4), controlPoint2: NSPoint(x: 17.27, y: 6.09))
        snowflake2Path.curve(to: NSPoint(x: 16.37, y: 5.89), controlPoint1: NSPoint(x: 16.89, y: 5.7), controlPoint2: NSPoint(x: 16.56, y: 5.7))
        snowflake2Path.line(to: NSPoint(x: 15.5, y: 6.76))
        snowflake2Path.line(to: NSPoint(x: 15.5, y: 6.01))
        snowflake2Path.curve(to: NSPoint(x: 15, y: 5.5), controlPoint1: NSPoint(x: 15.5, y: 5.73), controlPoint2: NSPoint(x: 15.28, y: 5.5))
        snowflake2Path.curve(to: NSPoint(x: 14.5, y: 6.01), controlPoint1: NSPoint(x: 14.73, y: 5.5), controlPoint2: NSPoint(x: 14.5, y: 5.73))
        snowflake2Path.line(to: NSPoint(x: 14.5, y: 6.73))
        snowflake2Path.line(to: NSPoint(x: 13.66, y: 5.89))
        snowflake2Path.curve(to: NSPoint(x: 12.95, y: 5.89), controlPoint1: NSPoint(x: 13.46, y: 5.7), controlPoint2: NSPoint(x: 13.14, y: 5.7))
        snowflake2Path.curve(to: NSPoint(x: 12.95, y: 6.6), controlPoint1: NSPoint(x: 12.76, y: 6.09), controlPoint2: NSPoint(x: 12.75, y: 6.4))
        snowflake2Path.line(to: NSPoint(x: 14.37, y: 8.02))
        snowflake2Path.curve(to: NSPoint(x: 14.5, y: 8.11), controlPoint1: NSPoint(x: 14.41, y: 8.06), controlPoint2: NSPoint(x: 14.45, y: 8.09))
        snowflake2Path.line(to: NSPoint(x: 14.5, y: 13.79))
        snowflake2Path.line(to: NSPoint(x: 12.18, y: 11.47))
        snowflake2Path.curve(to: NSPoint(x: 12.21, y: 11.3), controlPoint1: NSPoint(x: 12.2, y: 11.42), controlPoint2: NSPoint(x: 12.21, y: 11.36))
        snowflake2Path.line(to: NSPoint(x: 12.21, y: 9.29))
        snowflake2Path.curve(to: NSPoint(x: 11.71, y: 8.8), controlPoint1: NSPoint(x: 12.21, y: 9.02), controlPoint2: NSPoint(x: 11.98, y: 8.8))
        snowflake2Path.curve(to: NSPoint(x: 11.21, y: 9.29), controlPoint1: NSPoint(x: 11.44, y: 8.8), controlPoint2: NSPoint(x: 11.21, y: 9.02))
        snowflake2Path.line(to: NSPoint(x: 11.21, y: 10.5))
        snowflake2Path.line(to: NSPoint(x: 10.4, y: 9.7))
        snowflake2Path.curve(to: NSPoint(x: 9.7, y: 9.7), controlPoint1: NSPoint(x: 10.21, y: 9.5), controlPoint2: NSPoint(x: 9.89, y: 9.5))
        snowflake2Path.curve(to: NSPoint(x: 9.7, y: 10.4), controlPoint1: NSPoint(x: 9.51, y: 9.89), controlPoint2: NSPoint(x: 9.5, y: 10.21))
        snowflake2Path.line(to: NSPoint(x: 10.51, y: 11.21))
        snowflake2Path.line(to: NSPoint(x: 9.29, y: 11.21))
        snowflake2Path.curve(to: NSPoint(x: 8.79, y: 11.71), controlPoint1: NSPoint(x: 9.01, y: 11.21), controlPoint2: NSPoint(x: 8.79, y: 11.45))
        snowflake2Path.curve(to: NSPoint(x: 9.29, y: 12.21), controlPoint1: NSPoint(x: 8.79, y: 11.99), controlPoint2: NSPoint(x: 9.01, y: 12.21))
        snowflake2Path.line(to: NSPoint(x: 11.3, y: 12.21))
        snowflake2Path.curve(to: NSPoint(x: 11.47, y: 12.18), controlPoint1: NSPoint(x: 11.36, y: 12.21), controlPoint2: NSPoint(x: 11.42, y: 12.2))
        snowflake2Path.line(to: NSPoint(x: 11.47, y: 12.18))
        snowflake2Path.close()
        snowflake2Path.move(to: NSPoint(x: 15, y: 3.5))
        snowflake2Path.curve(to: NSPoint(x: 26.5, y: 15), controlPoint1: NSPoint(x: 21.35, y: 3.5), controlPoint2: NSPoint(x: 26.5, y: 8.65))
        snowflake2Path.curve(to: NSPoint(x: 15, y: 26.5), controlPoint1: NSPoint(x: 26.5, y: 21.35), controlPoint2: NSPoint(x: 21.35, y: 26.5))
        snowflake2Path.curve(to: NSPoint(x: 3.5, y: 15), controlPoint1: NSPoint(x: 8.65, y: 26.5), controlPoint2: NSPoint(x: 3.5, y: 21.35))
        snowflake2Path.curve(to: NSPoint(x: 15, y: 3.5), controlPoint1: NSPoint(x: 3.5, y: 8.65), controlPoint2: NSPoint(x: 8.65, y: 3.5))
        snowflake2Path.line(to: NSPoint(x: 15, y: 3.5))
        snowflake2Path.close()
        snowflake2Path.windingRule = .evenOddWindingRule
        fillColor.setFill()
        snowflake2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }




    @objc public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: NSRect, target: NSRect) -> NSRect {
            if rect == target || target == NSRect.zero {
                return rect
            }

            var scales = NSSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
