//
//  MBIconsKit.swift
//  MBIncons
//
//  Created by Porumbescu Viorel on 04/04/2017.
//  Copyright Â© 2017 MingleBit. All rights reserved.
//
//
import Cocoa

public class MBIconsKit : NSObject {

    //// Drawing Methods

    public dynamic class func drawMailEnvelope(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 4.5, y: 23))
        pathPath.curve(to: NSPoint(x: 2.5, y: 21.01), controlPoint1: NSPoint(x: 3.4, y: 23), controlPoint2: NSPoint(x: 2.5, y: 22.11))
        pathPath.line(to: NSPoint(x: 2.5, y: 8.99))
        pathPath.curve(to: NSPoint(x: 4.5, y: 7), controlPoint1: NSPoint(x: 2.5, y: 7.89), controlPoint2: NSPoint(x: 3.39, y: 7))
        pathPath.line(to: NSPoint(x: 25.5, y: 7))
        pathPath.curve(to: NSPoint(x: 27.5, y: 8.99), controlPoint1: NSPoint(x: 26.6, y: 7), controlPoint2: NSPoint(x: 27.5, y: 7.89))
        pathPath.line(to: NSPoint(x: 27.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 25.5, y: 23), controlPoint1: NSPoint(x: 27.5, y: 22.11), controlPoint2: NSPoint(x: 26.61, y: 23))
        pathPath.line(to: NSPoint(x: 4.5, y: 23))
        pathPath.line(to: NSPoint(x: 4.5, y: 23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 22))
        pathPath.curve(to: NSPoint(x: 3.5, y: 20.99), controlPoint1: NSPoint(x: 3.95, y: 22), controlPoint2: NSPoint(x: 3.5, y: 21.55))
        pathPath.line(to: NSPoint(x: 3.5, y: 9.01))
        pathPath.curve(to: NSPoint(x: 4.5, y: 8), controlPoint1: NSPoint(x: 3.5, y: 8.45), controlPoint2: NSPoint(x: 3.94, y: 8))
        pathPath.line(to: NSPoint(x: 25.5, y: 8))
        pathPath.curve(to: NSPoint(x: 26.5, y: 9.01), controlPoint1: NSPoint(x: 26.05, y: 8), controlPoint2: NSPoint(x: 26.5, y: 8.45))
        pathPath.line(to: NSPoint(x: 26.5, y: 20.99))
        pathPath.curve(to: NSPoint(x: 25.5, y: 22), controlPoint1: NSPoint(x: 26.5, y: 21.55), controlPoint2: NSPoint(x: 26.06, y: 22))
        pathPath.line(to: NSPoint(x: 4.5, y: 22))
        pathPath.line(to: NSPoint(x: 4.5, y: 22))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 20))
        pathPath.line(to: NSPoint(x: 21.5, y: 17))
        pathPath.line(to: NSPoint(x: 24.5, y: 17))
        pathPath.line(to: NSPoint(x: 24.5, y: 20))
        pathPath.line(to: NSPoint(x: 21.5, y: 20))
        pathPath.line(to: NSPoint(x: 21.5, y: 20))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 22.5, y: 19))
        pathPath.line(to: NSPoint(x: 22.5, y: 18))
        pathPath.line(to: NSPoint(x: 23.5, y: 18))
        pathPath.line(to: NSPoint(x: 23.5, y: 19))
        pathPath.line(to: NSPoint(x: 22.5, y: 19))
        pathPath.line(to: NSPoint(x: 22.5, y: 19))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 13))
        pathPath.line(to: NSPoint(x: 5.5, y: 12))
        pathPath.line(to: NSPoint(x: 13.5, y: 12))
        pathPath.line(to: NSPoint(x: 13.5, y: 13))
        pathPath.line(to: NSPoint(x: 5.5, y: 13))
        pathPath.line(to: NSPoint(x: 5.5, y: 13))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 20))
        pathPath.line(to: NSPoint(x: 5.5, y: 19))
        pathPath.line(to: NSPoint(x: 9.5, y: 19))
        pathPath.line(to: NSPoint(x: 9.5, y: 20))
        pathPath.line(to: NSPoint(x: 5.5, y: 20))
        pathPath.line(to: NSPoint(x: 5.5, y: 20))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 11))
        pathPath.line(to: NSPoint(x: 5.5, y: 10))
        pathPath.line(to: NSPoint(x: 13.5, y: 10))
        pathPath.line(to: NSPoint(x: 13.5, y: 11))
        pathPath.line(to: NSPoint(x: 5.5, y: 11))
        pathPath.line(to: NSPoint(x: 5.5, y: 11))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailEnvelopeOpen(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 19.14, y: 11.5))
        pathPath.line(to: NSPoint(x: 16.92, y: 9.52))
        pathPath.line(to: NSPoint(x: 17.02, y: 9.52))
        pathPath.line(to: NSPoint(x: 17.02, y: 9.52))
        pathPath.line(to: NSPoint(x: 17, y: 9.5))
        pathPath.line(to: NSPoint(x: 13.62, y: 9.5))
        pathPath.line(to: NSPoint(x: 15.32, y: 9.51))
        pathPath.line(to: NSPoint(x: 15.32, y: 9.51))
        pathPath.line(to: NSPoint(x: 13.05, y: 9.52))
        pathPath.line(to: NSPoint(x: 10.81, y: 11.5))
        pathPath.line(to: NSPoint(x: 19.14, y: 11.5))
        pathPath.line(to: NSPoint(x: 19.14, y: 11.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.26, y: 12.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 15.4))
        pathPath.line(to: NSPoint(x: 23.5, y: 23.49))
        pathPath.curve(to: NSPoint(x: 22.5, y: 24.5), controlPoint1: NSPoint(x: 23.5, y: 24.05), controlPoint2: NSPoint(x: 23.05, y: 24.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 23.5), controlPoint1: NSPoint(x: 6.95, y: 24.5), controlPoint2: NSPoint(x: 6.5, y: 24.06))
        pathPath.line(to: NSPoint(x: 6.5, y: 15.3))
        pathPath.line(to: NSPoint(x: 9.67, y: 12.5))
        pathPath.line(to: NSPoint(x: 20.26, y: 12.5))
        pathPath.line(to: NSPoint(x: 20.26, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.59, y: 25.5))
        pathPath.line(to: NSPoint(x: 15, y: 28.5))
        pathPath.line(to: NSPoint(x: 18.41, y: 25.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 25.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 23.5), controlPoint1: NSPoint(x: 23.61, y: 25.5), controlPoint2: NSPoint(x: 24.5, y: 24.6))
        pathPath.line(to: NSPoint(x: 24.5, y: 20.14))
        pathPath.line(to: NSPoint(x: 27.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 3.49))
        pathPath.curve(to: NSPoint(x: 25.5, y: 1.5), controlPoint1: NSPoint(x: 27.5, y: 2.39), controlPoint2: NSPoint(x: 26.6, y: 1.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 2.5, y: 3.49), controlPoint1: NSPoint(x: 3.39, y: 1.5), controlPoint2: NSPoint(x: 2.5, y: 2.39))
        pathPath.line(to: NSPoint(x: 2.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 20.14))
        pathPath.line(to: NSPoint(x: 5.5, y: 23.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 25.5), controlPoint1: NSPoint(x: 5.5, y: 24.61), controlPoint2: NSPoint(x: 6.39, y: 25.5))
        pathPath.line(to: NSPoint(x: 11.59, y: 25.5))
        pathPath.line(to: NSPoint(x: 11.59, y: 25.5))
        pathPath.line(to: NSPoint(x: 11.59, y: 25.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.93, y: 25.5))
        pathPath.line(to: NSPoint(x: 15, y: 27.2))
        pathPath.line(to: NSPoint(x: 13.07, y: 25.5))
        pathPath.line(to: NSPoint(x: 16.93, y: 25.5))
        pathPath.line(to: NSPoint(x: 16.93, y: 25.5))
        pathPath.line(to: NSPoint(x: 16.93, y: 25.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 18.82))
        pathPath.line(to: NSPoint(x: 26, y: 17.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.17))
        pathPath.line(to: NSPoint(x: 24.5, y: 18.82))
        pathPath.line(to: NSPoint(x: 24.5, y: 18.82))
        pathPath.line(to: NSPoint(x: 24.5, y: 18.82))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 16.17))
        pathPath.line(to: NSPoint(x: 4, y: 17.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 18.82))
        pathPath.line(to: NSPoint(x: 5.5, y: 16.17))
        pathPath.line(to: NSPoint(x: 5.5, y: 16.17))
        pathPath.line(to: NSPoint(x: 5.5, y: 16.17))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12, y: 8.5))
        pathPath.line(to: NSPoint(x: 5, y: 2.5))
        pathPath.line(to: NSPoint(x: 25, y: 2.5))
        pathPath.line(to: NSPoint(x: 18, y: 8.5))
        pathPath.line(to: NSPoint(x: 12, y: 8.5))
        pathPath.line(to: NSPoint(x: 12, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 26.19, y: 2.77))
        pathPath.line(to: NSPoint(x: 18.5, y: 9.48))
        pathPath.line(to: NSPoint(x: 26.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 10))
        pathPath.line(to: NSPoint(x: 26.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 26.19, y: 2.77), controlPoint1: NSPoint(x: 26.5, y: 3.22), controlPoint2: NSPoint(x: 26.38, y: 2.96))
        pathPath.line(to: NSPoint(x: 26.19, y: 2.77))
        pathPath.line(to: NSPoint(x: 26.19, y: 2.77))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.81, y: 2.77))
        pathPath.line(to: NSPoint(x: 11.5, y: 9.48))
        pathPath.line(to: NSPoint(x: 3.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 10))
        pathPath.line(to: NSPoint(x: 3.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 3.81, y: 2.77), controlPoint1: NSPoint(x: 3.5, y: 3.22), controlPoint2: NSPoint(x: 3.62, y: 2.96))
        pathPath.line(to: NSPoint(x: 3.81, y: 2.77))
        pathPath.line(to: NSPoint(x: 3.81, y: 2.77))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailEnvelopeClosed(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 3.82, y: 21.73))
        pathPath.curve(to: NSPoint(x: 3.5, y: 20.99), controlPoint1: NSPoint(x: 3.62, y: 21.54), controlPoint2: NSPoint(x: 3.5, y: 21.28))
        pathPath.line(to: NSPoint(x: 3.5, y: 9.01))
        pathPath.curve(to: NSPoint(x: 4.5, y: 8), controlPoint1: NSPoint(x: 3.5, y: 8.45), controlPoint2: NSPoint(x: 3.94, y: 8))
        pathPath.line(to: NSPoint(x: 25.5, y: 8))
        pathPath.curve(to: NSPoint(x: 26.5, y: 9.01), controlPoint1: NSPoint(x: 26.05, y: 8), controlPoint2: NSPoint(x: 26.5, y: 8.45))
        pathPath.line(to: NSPoint(x: 26.5, y: 20.99))
        pathPath.curve(to: NSPoint(x: 26.19, y: 21.73), controlPoint1: NSPoint(x: 26.5, y: 21.28), controlPoint2: NSPoint(x: 26.38, y: 21.54))
        pathPath.line(to: NSPoint(x: 15, y: 12))
        pathPath.line(to: NSPoint(x: 3.82, y: 21.73))
        pathPath.line(to: NSPoint(x: 3.82, y: 21.73))
        pathPath.line(to: NSPoint(x: 3.82, y: 21.73))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 23))
        pathPath.curve(to: NSPoint(x: 2.5, y: 21.01), controlPoint1: NSPoint(x: 3.4, y: 23), controlPoint2: NSPoint(x: 2.5, y: 22.11))
        pathPath.line(to: NSPoint(x: 2.5, y: 8.99))
        pathPath.curve(to: NSPoint(x: 4.5, y: 7), controlPoint1: NSPoint(x: 2.5, y: 7.89), controlPoint2: NSPoint(x: 3.39, y: 7))
        pathPath.line(to: NSPoint(x: 25.5, y: 7))
        pathPath.curve(to: NSPoint(x: 27.5, y: 8.99), controlPoint1: NSPoint(x: 26.6, y: 7), controlPoint2: NSPoint(x: 27.5, y: 7.89))
        pathPath.line(to: NSPoint(x: 27.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 25.5, y: 23), controlPoint1: NSPoint(x: 27.5, y: 22.11), controlPoint2: NSPoint(x: 26.61, y: 23))
        pathPath.line(to: NSPoint(x: 4.5, y: 23))
        pathPath.line(to: NSPoint(x: 4.5, y: 23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 13.3))
        pathPath.line(to: NSPoint(x: 25, y: 22))
        pathPath.line(to: NSPoint(x: 5, y: 22))
        pathPath.line(to: NSPoint(x: 15, y: 13.3))
        pathPath.line(to: NSPoint(x: 15, y: 13.3))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailEnvelopeOpen2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15, y: 27.2))
        pathPath.line(to: NSPoint(x: 26, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 8))
        pathPath.line(to: NSPoint(x: 4, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 27.2))
        pathPath.line(to: NSPoint(x: 15, y: 27.2))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 26.5, y: 16.62))
        pathPath.line(to: NSPoint(x: 26.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 2.5), controlPoint1: NSPoint(x: 26.5, y: 2.95), controlPoint2: NSPoint(x: 26.05, y: 2.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 3.5, y: 3.5), controlPoint1: NSPoint(x: 3.94, y: 2.5), controlPoint2: NSPoint(x: 3.5, y: 2.95))
        pathPath.line(to: NSPoint(x: 3.5, y: 16.62))
        pathPath.line(to: NSPoint(x: 15, y: 6.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 16.62))
        pathPath.line(to: NSPoint(x: 26.5, y: 16.62))
        pathPath.line(to: NSPoint(x: 26.5, y: 16.62))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 27.5, y: 3.49))
        pathPath.curve(to: NSPoint(x: 25.5, y: 1.5), controlPoint1: NSPoint(x: 27.5, y: 2.39), controlPoint2: NSPoint(x: 26.6, y: 1.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 2.5, y: 3.49), controlPoint1: NSPoint(x: 3.39, y: 1.5), controlPoint2: NSPoint(x: 2.5, y: 2.39))
        pathPath.line(to: NSPoint(x: 2.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 28.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 3.49))
        pathPath.line(to: NSPoint(x: 27.5, y: 3.49))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailEnvelopeClosed2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 3.82, y: 21.73))
        pathPath.curve(to: NSPoint(x: 3.5, y: 20.99), controlPoint1: NSPoint(x: 3.62, y: 21.54), controlPoint2: NSPoint(x: 3.5, y: 21.28))
        pathPath.line(to: NSPoint(x: 3.5, y: 9.01))
        pathPath.curve(to: NSPoint(x: 3.81, y: 8.27), controlPoint1: NSPoint(x: 3.5, y: 8.72), controlPoint2: NSPoint(x: 3.62, y: 8.46))
        pathPath.line(to: NSPoint(x: 3.81, y: 8.27))
        pathPath.line(to: NSPoint(x: 11.55, y: 15))
        pathPath.line(to: NSPoint(x: 3.82, y: 21.73))
        pathPath.line(to: NSPoint(x: 3.82, y: 21.73))
        pathPath.line(to: NSPoint(x: 3.82, y: 21.73))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 26.19, y: 21.73))
        pathPath.curve(to: NSPoint(x: 26.5, y: 20.99), controlPoint1: NSPoint(x: 26.38, y: 21.54), controlPoint2: NSPoint(x: 26.5, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.5, y: 9.01))
        pathPath.curve(to: NSPoint(x: 26.18, y: 8.27), controlPoint1: NSPoint(x: 26.5, y: 8.72), controlPoint2: NSPoint(x: 26.38, y: 8.46))
        pathPath.line(to: NSPoint(x: 18.45, y: 15))
        pathPath.line(to: NSPoint(x: 26.19, y: 21.73))
        pathPath.line(to: NSPoint(x: 26.19, y: 21.73))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.7, y: 14.35))
        pathPath.line(to: NSPoint(x: 25, y: 8))
        pathPath.line(to: NSPoint(x: 5, y: 8))
        pathPath.line(to: NSPoint(x: 12.3, y: 14.35))
        pathPath.line(to: NSPoint(x: 15, y: 12))
        pathPath.line(to: NSPoint(x: 17.7, y: 14.35))
        pathPath.line(to: NSPoint(x: 17.7, y: 14.35))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 23))
        pathPath.curve(to: NSPoint(x: 2.5, y: 21.01), controlPoint1: NSPoint(x: 3.4, y: 23), controlPoint2: NSPoint(x: 2.5, y: 22.11))
        pathPath.line(to: NSPoint(x: 2.5, y: 8.99))
        pathPath.curve(to: NSPoint(x: 4.5, y: 7), controlPoint1: NSPoint(x: 2.5, y: 7.89), controlPoint2: NSPoint(x: 3.39, y: 7))
        pathPath.line(to: NSPoint(x: 25.5, y: 7))
        pathPath.curve(to: NSPoint(x: 27.5, y: 8.99), controlPoint1: NSPoint(x: 26.6, y: 7), controlPoint2: NSPoint(x: 27.5, y: 7.89))
        pathPath.line(to: NSPoint(x: 27.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 25.5, y: 23), controlPoint1: NSPoint(x: 27.5, y: 22.11), controlPoint2: NSPoint(x: 26.61, y: 23))
        pathPath.line(to: NSPoint(x: 4.5, y: 23))
        pathPath.line(to: NSPoint(x: 4.5, y: 23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 13.3))
        pathPath.line(to: NSPoint(x: 25, y: 22))
        pathPath.line(to: NSPoint(x: 5, y: 22))
        pathPath.line(to: NSPoint(x: 15, y: 13.3))
        pathPath.line(to: NSPoint(x: 15, y: 13.3))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailEnvelopeOpened3(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15, y: 28.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 3.49))
        pathPath.curve(to: NSPoint(x: 4.5, y: 1.5), controlPoint1: NSPoint(x: 2.5, y: 2.39), controlPoint2: NSPoint(x: 3.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 27.5, y: 3.49), controlPoint1: NSPoint(x: 26.6, y: 1.5), controlPoint2: NSPoint(x: 27.5, y: 2.39))
        pathPath.line(to: NSPoint(x: 27.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 28.5))
        pathPath.line(to: NSPoint(x: 15, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12, y: 8.5))
        pathPath.line(to: NSPoint(x: 5, y: 2.5))
        pathPath.line(to: NSPoint(x: 25, y: 2.5))
        pathPath.line(to: NSPoint(x: 18, y: 8.5))
        pathPath.line(to: NSPoint(x: 12, y: 8.5))
        pathPath.line(to: NSPoint(x: 12, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 27.2))
        pathPath.line(to: NSPoint(x: 26, y: 17.5))
        pathPath.line(to: NSPoint(x: 17, y: 9.5))
        pathPath.line(to: NSPoint(x: 13, y: 9.5))
        pathPath.line(to: NSPoint(x: 4, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 27.2))
        pathPath.line(to: NSPoint(x: 15, y: 27.2))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 26.19, y: 2.77))
        pathPath.line(to: NSPoint(x: 18.5, y: 9.48))
        pathPath.line(to: NSPoint(x: 26.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 10))
        pathPath.line(to: NSPoint(x: 26.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 26.19, y: 2.77), controlPoint1: NSPoint(x: 26.5, y: 3.22), controlPoint2: NSPoint(x: 26.38, y: 2.96))
        pathPath.line(to: NSPoint(x: 26.19, y: 2.77))
        pathPath.line(to: NSPoint(x: 26.19, y: 2.77))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.81, y: 2.77))
        pathPath.line(to: NSPoint(x: 11.5, y: 9.48))
        pathPath.line(to: NSPoint(x: 3.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 10))
        pathPath.line(to: NSPoint(x: 3.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 3.81, y: 2.77), controlPoint1: NSPoint(x: 3.5, y: 3.22), controlPoint2: NSPoint(x: 3.62, y: 2.96))
        pathPath.line(to: NSPoint(x: 3.81, y: 2.77))
        pathPath.line(to: NSPoint(x: 3.81, y: 2.77))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailError(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.5, y: 13.96))
        pathPath.line(to: NSPoint(x: 24.5, y: 22.49))
        pathPath.curve(to: NSPoint(x: 24.19, y: 23.23), controlPoint1: NSPoint(x: 24.5, y: 22.78), controlPoint2: NSPoint(x: 24.38, y: 23.04))
        pathPath.line(to: NSPoint(x: 24.19, y: 23.23))
        pathPath.line(to: NSPoint(x: 16.45, y: 16.5))
        pathPath.line(to: NSPoint(x: 20.78, y: 12.74))
        pathPath.line(to: NSPoint(x: 23, y: 16.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.96))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.96))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.96))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.27, y: 11.88))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 13, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.3, y: 15.85))
        pathPath.line(to: NSPoint(x: 3, y: 9.5))
        pathPath.line(to: NSPoint(x: 18.86, y: 9.5))
        pathPath.line(to: NSPoint(x: 20.27, y: 11.88))
        pathPath.line(to: NSPoint(x: 20.27, y: 11.88))
        pathPath.line(to: NSPoint(x: 20.27, y: 11.88))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.27, y: 8.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 8.5))
        pathPath.curve(to: NSPoint(x: 0.5, y: 10.49), controlPoint1: NSPoint(x: 1.39, y: 8.5), controlPoint2: NSPoint(x: 0.5, y: 9.39))
        pathPath.line(to: NSPoint(x: 0.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 2.5, y: 24.5), controlPoint1: NSPoint(x: 0.5, y: 23.61), controlPoint2: NSPoint(x: 1.4, y: 24.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 22.51), controlPoint1: NSPoint(x: 24.61, y: 24.5), controlPoint2: NSPoint(x: 25.5, y: 23.61))
        pathPath.line(to: NSPoint(x: 25.5, y: 12.27))
        pathPath.line(to: NSPoint(x: 29.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 18.27, y: 8.5))
        pathPath.line(to: NSPoint(x: 18.27, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.curve(to: NSPoint(x: 1.5, y: 22.49), controlPoint1: NSPoint(x: 1.62, y: 23.04), controlPoint2: NSPoint(x: 1.5, y: 22.78))
        pathPath.line(to: NSPoint(x: 1.5, y: 10.51))
        pathPath.curve(to: NSPoint(x: 1.81, y: 9.77), controlPoint1: NSPoint(x: 1.5, y: 10.22), controlPoint2: NSPoint(x: 1.62, y: 9.96))
        pathPath.line(to: NSPoint(x: 1.81, y: 9.77))
        pathPath.line(to: NSPoint(x: 9.55, y: 16.5))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 23, y: 23.5))
        pathPath.line(to: NSPoint(x: 3, y: 23.5))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23, y: 14.5))
        pathPath.line(to: NSPoint(x: 27.75, y: 6.5))
        pathPath.line(to: NSPoint(x: 18.25, y: 6.5))
        pathPath.line(to: NSPoint(x: 23, y: 14.5))
        pathPath.line(to: NSPoint(x: 23, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 22.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 22.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 8.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailChecked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 22.49))
        pathPath.curve(to: NSPoint(x: 24.19, y: 23.23), controlPoint1: NSPoint(x: 24.5, y: 22.78), controlPoint2: NSPoint(x: 24.38, y: 23.04))
        pathPath.line(to: NSPoint(x: 24.19, y: 23.23))
        pathPath.line(to: NSPoint(x: 16.45, y: 16.5))
        pathPath.line(to: NSPoint(x: 19.37, y: 13.96))
        pathPath.curve(to: NSPoint(x: 24, y: 16.5), controlPoint1: NSPoint(x: 20.34, y: 15.49), controlPoint2: NSPoint(x: 22.05, y: 16.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 16.48), controlPoint1: NSPoint(x: 24.17, y: 16.5), controlPoint2: NSPoint(x: 24.34, y: 16.49))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 13, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.3, y: 15.85))
        pathPath.line(to: NSPoint(x: 3, y: 9.5))
        pathPath.line(to: NSPoint(x: 18.71, y: 9.5))
        pathPath.curve(to: NSPoint(x: 18.5, y: 11), controlPoint1: NSPoint(x: 18.57, y: 9.98), controlPoint2: NSPoint(x: 18.5, y: 10.48))
        pathPath.curve(to: NSPoint(x: 18.9, y: 13.07), controlPoint1: NSPoint(x: 18.5, y: 11.73), controlPoint2: NSPoint(x: 18.64, y: 12.43))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 8.5))
        pathPath.curve(to: NSPoint(x: 0.5, y: 10.49), controlPoint1: NSPoint(x: 1.39, y: 8.5), controlPoint2: NSPoint(x: 0.5, y: 9.39))
        pathPath.line(to: NSPoint(x: 0.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 2.5, y: 24.5), controlPoint1: NSPoint(x: 0.5, y: 23.61), controlPoint2: NSPoint(x: 1.4, y: 24.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 22.51), controlPoint1: NSPoint(x: 24.61, y: 24.5), controlPoint2: NSPoint(x: 25.5, y: 23.61))
        pathPath.line(to: NSPoint(x: 25.5, y: 16.29))
        pathPath.curve(to: NSPoint(x: 29.5, y: 11), controlPoint1: NSPoint(x: 27.81, y: 15.64), controlPoint2: NSPoint(x: 29.5, y: 13.52))
        pathPath.curve(to: NSPoint(x: 24, y: 5.5), controlPoint1: NSPoint(x: 29.5, y: 7.96), controlPoint2: NSPoint(x: 27.04, y: 5.5))
        pathPath.curve(to: NSPoint(x: 19.1, y: 8.5), controlPoint1: NSPoint(x: 21.86, y: 5.5), controlPoint2: NSPoint(x: 20.01, y: 6.72))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.curve(to: NSPoint(x: 1.5, y: 22.49), controlPoint1: NSPoint(x: 1.62, y: 23.04), controlPoint2: NSPoint(x: 1.5, y: 22.78))
        pathPath.line(to: NSPoint(x: 1.5, y: 10.51))
        pathPath.curve(to: NSPoint(x: 1.81, y: 9.77), controlPoint1: NSPoint(x: 1.5, y: 10.22), controlPoint2: NSPoint(x: 1.62, y: 9.96))
        pathPath.line(to: NSPoint(x: 1.81, y: 9.77))
        pathPath.line(to: NSPoint(x: 9.55, y: 16.5))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 23, y: 23.5))
        pathPath.line(to: NSPoint(x: 3, y: 23.5))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24, y: 6.5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 11), controlPoint1: NSPoint(x: 26.49, y: 6.5), controlPoint2: NSPoint(x: 28.5, y: 8.51))
        pathPath.curve(to: NSPoint(x: 24, y: 15.5), controlPoint1: NSPoint(x: 28.5, y: 13.49), controlPoint2: NSPoint(x: 26.49, y: 15.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 11), controlPoint1: NSPoint(x: 21.51, y: 15.5), controlPoint2: NSPoint(x: 19.5, y: 13.49))
        pathPath.curve(to: NSPoint(x: 24, y: 6.5), controlPoint1: NSPoint(x: 19.5, y: 8.51), controlPoint2: NSPoint(x: 21.51, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.5, y: 8.26))
        pathPath.line(to: NSPoint(x: 21.15, y: 10.61))
        pathPath.line(to: NSPoint(x: 21.88, y: 11.34))
        pathPath.line(to: NSPoint(x: 23.5, y: 9.72))
        pathPath.line(to: NSPoint(x: 26.62, y: 12.84))
        pathPath.line(to: NSPoint(x: 27.35, y: 12.11))
        pathPath.line(to: NSPoint(x: 23.5, y: 8.26))
        pathPath.line(to: NSPoint(x: 23.5, y: 8.26))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailCancel(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24, y: 10.29))
        pathPath.line(to: NSPoint(x: 21.88, y: 8.17))
        pathPath.line(to: NSPoint(x: 21.17, y: 8.88))
        pathPath.line(to: NSPoint(x: 23.29, y: 11))
        pathPath.line(to: NSPoint(x: 21.17, y: 13.12))
        pathPath.line(to: NSPoint(x: 21.88, y: 13.83))
        pathPath.line(to: NSPoint(x: 24, y: 11.71))
        pathPath.line(to: NSPoint(x: 26.12, y: 13.83))
        pathPath.line(to: NSPoint(x: 26.83, y: 13.12))
        pathPath.line(to: NSPoint(x: 24.71, y: 11))
        pathPath.line(to: NSPoint(x: 26.83, y: 8.88))
        pathPath.line(to: NSPoint(x: 26.12, y: 8.17))
        pathPath.line(to: NSPoint(x: 24, y: 10.29))
        pathPath.line(to: NSPoint(x: 24, y: 10.29))
        pathPath.line(to: NSPoint(x: 24, y: 10.29))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 22.49))
        pathPath.curve(to: NSPoint(x: 24.19, y: 23.23), controlPoint1: NSPoint(x: 24.5, y: 22.78), controlPoint2: NSPoint(x: 24.38, y: 23.04))
        pathPath.line(to: NSPoint(x: 24.19, y: 23.23))
        pathPath.line(to: NSPoint(x: 16.45, y: 16.5))
        pathPath.line(to: NSPoint(x: 19.37, y: 13.96))
        pathPath.curve(to: NSPoint(x: 24, y: 16.5), controlPoint1: NSPoint(x: 20.34, y: 15.49), controlPoint2: NSPoint(x: 22.05, y: 16.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 16.48), controlPoint1: NSPoint(x: 24.17, y: 16.5), controlPoint2: NSPoint(x: 24.34, y: 16.49))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 13, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.3, y: 15.85))
        pathPath.line(to: NSPoint(x: 3, y: 9.5))
        pathPath.line(to: NSPoint(x: 18.71, y: 9.5))
        pathPath.curve(to: NSPoint(x: 18.5, y: 11), controlPoint1: NSPoint(x: 18.57, y: 9.98), controlPoint2: NSPoint(x: 18.5, y: 10.48))
        pathPath.curve(to: NSPoint(x: 18.9, y: 13.07), controlPoint1: NSPoint(x: 18.5, y: 11.73), controlPoint2: NSPoint(x: 18.64, y: 12.43))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 8.5))
        pathPath.curve(to: NSPoint(x: 0.5, y: 10.49), controlPoint1: NSPoint(x: 1.39, y: 8.5), controlPoint2: NSPoint(x: 0.5, y: 9.39))
        pathPath.line(to: NSPoint(x: 0.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 2.5, y: 24.5), controlPoint1: NSPoint(x: 0.5, y: 23.61), controlPoint2: NSPoint(x: 1.4, y: 24.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 22.51), controlPoint1: NSPoint(x: 24.61, y: 24.5), controlPoint2: NSPoint(x: 25.5, y: 23.61))
        pathPath.line(to: NSPoint(x: 25.5, y: 16.29))
        pathPath.curve(to: NSPoint(x: 29.5, y: 11), controlPoint1: NSPoint(x: 27.81, y: 15.64), controlPoint2: NSPoint(x: 29.5, y: 13.52))
        pathPath.curve(to: NSPoint(x: 24, y: 5.5), controlPoint1: NSPoint(x: 29.5, y: 7.96), controlPoint2: NSPoint(x: 27.04, y: 5.5))
        pathPath.curve(to: NSPoint(x: 19.1, y: 8.5), controlPoint1: NSPoint(x: 21.86, y: 5.5), controlPoint2: NSPoint(x: 20.01, y: 6.72))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.curve(to: NSPoint(x: 1.5, y: 22.49), controlPoint1: NSPoint(x: 1.62, y: 23.04), controlPoint2: NSPoint(x: 1.5, y: 22.78))
        pathPath.line(to: NSPoint(x: 1.5, y: 10.51))
        pathPath.curve(to: NSPoint(x: 1.81, y: 9.77), controlPoint1: NSPoint(x: 1.5, y: 10.22), controlPoint2: NSPoint(x: 1.62, y: 9.96))
        pathPath.line(to: NSPoint(x: 1.81, y: 9.77))
        pathPath.line(to: NSPoint(x: 9.55, y: 16.5))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 23, y: 23.5))
        pathPath.line(to: NSPoint(x: 3, y: 23.5))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24, y: 6.5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 11), controlPoint1: NSPoint(x: 26.49, y: 6.5), controlPoint2: NSPoint(x: 28.5, y: 8.51))
        pathPath.curve(to: NSPoint(x: 24, y: 15.5), controlPoint1: NSPoint(x: 28.5, y: 13.49), controlPoint2: NSPoint(x: 26.49, y: 15.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 11), controlPoint1: NSPoint(x: 21.51, y: 15.5), controlPoint2: NSPoint(x: 19.5, y: 13.49))
        pathPath.curve(to: NSPoint(x: 24, y: 6.5), controlPoint1: NSPoint(x: 19.5, y: 8.51), controlPoint2: NSPoint(x: 21.51, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailForbidden(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 27.52, y: 13.81))
        pathPath.curve(to: NSPoint(x: 28.5, y: 11), controlPoint1: NSPoint(x: 28.13, y: 13.04), controlPoint2: NSPoint(x: 28.5, y: 12.06))
        pathPath.curve(to: NSPoint(x: 24, y: 6.5), controlPoint1: NSPoint(x: 28.5, y: 8.51), controlPoint2: NSPoint(x: 26.49, y: 6.5))
        pathPath.curve(to: NSPoint(x: 21.19, y: 7.48), controlPoint1: NSPoint(x: 22.94, y: 6.5), controlPoint2: NSPoint(x: 21.96, y: 6.87))
        pathPath.line(to: NSPoint(x: 27.52, y: 13.81))
        pathPath.line(to: NSPoint(x: 27.52, y: 13.81))
        pathPath.line(to: NSPoint(x: 27.52, y: 13.81))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 26.81, y: 14.52))
        pathPath.curve(to: NSPoint(x: 24, y: 15.5), controlPoint1: NSPoint(x: 26.04, y: 15.13), controlPoint2: NSPoint(x: 25.06, y: 15.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 11), controlPoint1: NSPoint(x: 21.51, y: 15.5), controlPoint2: NSPoint(x: 19.5, y: 13.49))
        pathPath.curve(to: NSPoint(x: 20.48, y: 8.19), controlPoint1: NSPoint(x: 19.5, y: 9.94), controlPoint2: NSPoint(x: 19.87, y: 8.96))
        pathPath.line(to: NSPoint(x: 26.81, y: 14.52))
        pathPath.line(to: NSPoint(x: 26.81, y: 14.52))
        pathPath.line(to: NSPoint(x: 26.81, y: 14.52))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 22.49))
        pathPath.curve(to: NSPoint(x: 24.19, y: 23.23), controlPoint1: NSPoint(x: 24.5, y: 22.78), controlPoint2: NSPoint(x: 24.38, y: 23.04))
        pathPath.line(to: NSPoint(x: 24.19, y: 23.23))
        pathPath.line(to: NSPoint(x: 16.45, y: 16.5))
        pathPath.line(to: NSPoint(x: 19.37, y: 13.96))
        pathPath.curve(to: NSPoint(x: 24, y: 16.5), controlPoint1: NSPoint(x: 20.34, y: 15.49), controlPoint2: NSPoint(x: 22.05, y: 16.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 16.48), controlPoint1: NSPoint(x: 24.17, y: 16.5), controlPoint2: NSPoint(x: 24.34, y: 16.49))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 13, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.3, y: 15.85))
        pathPath.line(to: NSPoint(x: 3, y: 9.5))
        pathPath.line(to: NSPoint(x: 18.71, y: 9.5))
        pathPath.curve(to: NSPoint(x: 18.5, y: 11), controlPoint1: NSPoint(x: 18.57, y: 9.98), controlPoint2: NSPoint(x: 18.5, y: 10.48))
        pathPath.curve(to: NSPoint(x: 18.9, y: 13.07), controlPoint1: NSPoint(x: 18.5, y: 11.73), controlPoint2: NSPoint(x: 18.64, y: 12.43))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 8.5))
        pathPath.curve(to: NSPoint(x: 0.5, y: 10.49), controlPoint1: NSPoint(x: 1.39, y: 8.5), controlPoint2: NSPoint(x: 0.5, y: 9.39))
        pathPath.line(to: NSPoint(x: 0.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 2.5, y: 24.5), controlPoint1: NSPoint(x: 0.5, y: 23.61), controlPoint2: NSPoint(x: 1.4, y: 24.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 22.51), controlPoint1: NSPoint(x: 24.61, y: 24.5), controlPoint2: NSPoint(x: 25.5, y: 23.61))
        pathPath.line(to: NSPoint(x: 25.5, y: 16.29))
        pathPath.curve(to: NSPoint(x: 29.5, y: 11), controlPoint1: NSPoint(x: 27.81, y: 15.64), controlPoint2: NSPoint(x: 29.5, y: 13.52))
        pathPath.curve(to: NSPoint(x: 24, y: 5.5), controlPoint1: NSPoint(x: 29.5, y: 7.96), controlPoint2: NSPoint(x: 27.04, y: 5.5))
        pathPath.curve(to: NSPoint(x: 19.1, y: 8.5), controlPoint1: NSPoint(x: 21.86, y: 5.5), controlPoint2: NSPoint(x: 20.01, y: 6.72))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.curve(to: NSPoint(x: 1.5, y: 22.49), controlPoint1: NSPoint(x: 1.62, y: 23.04), controlPoint2: NSPoint(x: 1.5, y: 22.78))
        pathPath.line(to: NSPoint(x: 1.5, y: 10.51))
        pathPath.curve(to: NSPoint(x: 1.81, y: 9.77), controlPoint1: NSPoint(x: 1.5, y: 10.22), controlPoint2: NSPoint(x: 1.62, y: 9.96))
        pathPath.line(to: NSPoint(x: 1.81, y: 9.77))
        pathPath.line(to: NSPoint(x: 9.55, y: 16.5))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 23, y: 23.5))
        pathPath.line(to: NSPoint(x: 3, y: 23.5))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailAdd(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 23.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 11.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 22.49))
        pathPath.curve(to: NSPoint(x: 24.19, y: 23.23), controlPoint1: NSPoint(x: 24.5, y: 22.78), controlPoint2: NSPoint(x: 24.38, y: 23.04))
        pathPath.line(to: NSPoint(x: 24.19, y: 23.23))
        pathPath.line(to: NSPoint(x: 16.45, y: 16.5))
        pathPath.line(to: NSPoint(x: 19.37, y: 13.96))
        pathPath.curve(to: NSPoint(x: 24, y: 16.5), controlPoint1: NSPoint(x: 20.34, y: 15.49), controlPoint2: NSPoint(x: 22.05, y: 16.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 16.48), controlPoint1: NSPoint(x: 24.17, y: 16.5), controlPoint2: NSPoint(x: 24.34, y: 16.49))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 13, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.3, y: 15.85))
        pathPath.line(to: NSPoint(x: 3, y: 9.5))
        pathPath.line(to: NSPoint(x: 18.71, y: 9.5))
        pathPath.curve(to: NSPoint(x: 18.5, y: 11), controlPoint1: NSPoint(x: 18.57, y: 9.98), controlPoint2: NSPoint(x: 18.5, y: 10.48))
        pathPath.curve(to: NSPoint(x: 18.9, y: 13.07), controlPoint1: NSPoint(x: 18.5, y: 11.73), controlPoint2: NSPoint(x: 18.64, y: 12.43))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 8.5))
        pathPath.curve(to: NSPoint(x: 0.5, y: 10.49), controlPoint1: NSPoint(x: 1.39, y: 8.5), controlPoint2: NSPoint(x: 0.5, y: 9.39))
        pathPath.line(to: NSPoint(x: 0.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 2.5, y: 24.5), controlPoint1: NSPoint(x: 0.5, y: 23.61), controlPoint2: NSPoint(x: 1.4, y: 24.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 22.51), controlPoint1: NSPoint(x: 24.61, y: 24.5), controlPoint2: NSPoint(x: 25.5, y: 23.61))
        pathPath.line(to: NSPoint(x: 25.5, y: 16.29))
        pathPath.curve(to: NSPoint(x: 29.5, y: 11), controlPoint1: NSPoint(x: 27.81, y: 15.64), controlPoint2: NSPoint(x: 29.5, y: 13.52))
        pathPath.curve(to: NSPoint(x: 24, y: 5.5), controlPoint1: NSPoint(x: 29.5, y: 7.96), controlPoint2: NSPoint(x: 27.04, y: 5.5))
        pathPath.curve(to: NSPoint(x: 19.1, y: 8.5), controlPoint1: NSPoint(x: 21.86, y: 5.5), controlPoint2: NSPoint(x: 20.01, y: 6.72))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.curve(to: NSPoint(x: 1.5, y: 22.49), controlPoint1: NSPoint(x: 1.62, y: 23.04), controlPoint2: NSPoint(x: 1.5, y: 22.78))
        pathPath.line(to: NSPoint(x: 1.5, y: 10.51))
        pathPath.curve(to: NSPoint(x: 1.81, y: 9.77), controlPoint1: NSPoint(x: 1.5, y: 10.22), controlPoint2: NSPoint(x: 1.62, y: 9.96))
        pathPath.line(to: NSPoint(x: 1.81, y: 9.77))
        pathPath.line(to: NSPoint(x: 9.55, y: 16.5))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 23, y: 23.5))
        pathPath.line(to: NSPoint(x: 3, y: 23.5))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24, y: 6.5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 11), controlPoint1: NSPoint(x: 26.49, y: 6.5), controlPoint2: NSPoint(x: 28.5, y: 8.51))
        pathPath.curve(to: NSPoint(x: 24, y: 15.5), controlPoint1: NSPoint(x: 28.5, y: 13.49), controlPoint2: NSPoint(x: 26.49, y: 15.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 11), controlPoint1: NSPoint(x: 21.51, y: 15.5), controlPoint2: NSPoint(x: 19.5, y: 13.49))
        pathPath.curve(to: NSPoint(x: 24, y: 6.5), controlPoint1: NSPoint(x: 19.5, y: 8.51), controlPoint2: NSPoint(x: 21.51, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawMailRemove(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 22.49))
        pathPath.curve(to: NSPoint(x: 24.19, y: 23.23), controlPoint1: NSPoint(x: 24.5, y: 22.78), controlPoint2: NSPoint(x: 24.38, y: 23.04))
        pathPath.line(to: NSPoint(x: 24.19, y: 23.23))
        pathPath.line(to: NSPoint(x: 16.45, y: 16.5))
        pathPath.line(to: NSPoint(x: 19.37, y: 13.96))
        pathPath.curve(to: NSPoint(x: 24, y: 16.5), controlPoint1: NSPoint(x: 20.34, y: 15.49), controlPoint2: NSPoint(x: 22.05, y: 16.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 16.48), controlPoint1: NSPoint(x: 24.17, y: 16.5), controlPoint2: NSPoint(x: 24.34, y: 16.49))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.48))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 15.7, y: 15.85))
        pathPath.line(to: NSPoint(x: 13, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.3, y: 15.85))
        pathPath.line(to: NSPoint(x: 3, y: 9.5))
        pathPath.line(to: NSPoint(x: 18.71, y: 9.5))
        pathPath.curve(to: NSPoint(x: 18.5, y: 11), controlPoint1: NSPoint(x: 18.57, y: 9.98), controlPoint2: NSPoint(x: 18.5, y: 10.48))
        pathPath.curve(to: NSPoint(x: 18.9, y: 13.07), controlPoint1: NSPoint(x: 18.5, y: 11.73), controlPoint2: NSPoint(x: 18.64, y: 12.43))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.line(to: NSPoint(x: 18.9, y: 13.07))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 8.5))
        pathPath.curve(to: NSPoint(x: 0.5, y: 10.49), controlPoint1: NSPoint(x: 1.39, y: 8.5), controlPoint2: NSPoint(x: 0.5, y: 9.39))
        pathPath.line(to: NSPoint(x: 0.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 2.5, y: 24.5), controlPoint1: NSPoint(x: 0.5, y: 23.61), controlPoint2: NSPoint(x: 1.4, y: 24.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 22.51), controlPoint1: NSPoint(x: 24.61, y: 24.5), controlPoint2: NSPoint(x: 25.5, y: 23.61))
        pathPath.line(to: NSPoint(x: 25.5, y: 16.29))
        pathPath.curve(to: NSPoint(x: 29.5, y: 11), controlPoint1: NSPoint(x: 27.81, y: 15.64), controlPoint2: NSPoint(x: 29.5, y: 13.52))
        pathPath.curve(to: NSPoint(x: 24, y: 5.5), controlPoint1: NSPoint(x: 29.5, y: 7.96), controlPoint2: NSPoint(x: 27.04, y: 5.5))
        pathPath.curve(to: NSPoint(x: 19.1, y: 8.5), controlPoint1: NSPoint(x: 21.86, y: 5.5), controlPoint2: NSPoint(x: 20.01, y: 6.72))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 19.1, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.curve(to: NSPoint(x: 1.5, y: 22.49), controlPoint1: NSPoint(x: 1.62, y: 23.04), controlPoint2: NSPoint(x: 1.5, y: 22.78))
        pathPath.line(to: NSPoint(x: 1.5, y: 10.51))
        pathPath.curve(to: NSPoint(x: 1.81, y: 9.77), controlPoint1: NSPoint(x: 1.5, y: 10.22), controlPoint2: NSPoint(x: 1.62, y: 9.96))
        pathPath.line(to: NSPoint(x: 1.81, y: 9.77))
        pathPath.line(to: NSPoint(x: 9.55, y: 16.5))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.line(to: NSPoint(x: 1.82, y: 23.23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 23, y: 23.5))
        pathPath.line(to: NSPoint(x: 3, y: 23.5))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.line(to: NSPoint(x: 13, y: 14.8))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24, y: 6.5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 11), controlPoint1: NSPoint(x: 26.49, y: 6.5), controlPoint2: NSPoint(x: 28.5, y: 8.51))
        pathPath.curve(to: NSPoint(x: 24, y: 15.5), controlPoint1: NSPoint(x: 28.5, y: 13.49), controlPoint2: NSPoint(x: 26.49, y: 15.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 11), controlPoint1: NSPoint(x: 21.51, y: 15.5), controlPoint2: NSPoint(x: 19.5, y: 13.49))
        pathPath.curve(to: NSPoint(x: 24, y: 6.5), controlPoint1: NSPoint(x: 19.5, y: 8.51), controlPoint2: NSPoint(x: 21.51, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 11.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFlag(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 7, y: 20.5))
        pathPath.line(to: NSPoint(x: 7, y: 2))
        pathPath.line(to: NSPoint(x: 8, y: 2))
        pathPath.line(to: NSPoint(x: 8, y: 16.51))
        pathPath.curve(to: NSPoint(x: 15, y: 16), controlPoint1: NSPoint(x: 9.27, y: 16.99), controlPoint2: NSPoint(x: 11.69, y: 17.45))
        pathPath.curve(to: NSPoint(x: 23, y: 16), controlPoint1: NSPoint(x: 20.02, y: 13.82), controlPoint2: NSPoint(x: 23, y: 16))
        pathPath.line(to: NSPoint(x: 23, y: 27.01))
        pathPath.curve(to: NSPoint(x: 15, y: 27.01), controlPoint1: NSPoint(x: 23, y: 27.01), controlPoint2: NSPoint(x: 20.02, y: 24.77))
        pathPath.curve(to: NSPoint(x: 7, y: 27.01), controlPoint1: NSPoint(x: 9.98, y: 29.24), controlPoint2: NSPoint(x: 7, y: 27.01))
        pathPath.line(to: NSPoint(x: 7, y: 20.5))
        pathPath.line(to: NSPoint(x: 7, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.52, y: 26.11))
        pathPath.curve(to: NSPoint(x: 8, y: 26.41), controlPoint1: NSPoint(x: 10.42, y: 27.91), controlPoint2: NSPoint(x: 8, y: 26.41))
        pathPath.line(to: NSPoint(x: 8, y: 17.57))
        pathPath.curve(to: NSPoint(x: 15.38, y: 16.92), controlPoint1: NSPoint(x: 8, y: 17.57), controlPoint2: NSPoint(x: 11.15, y: 18.83))
        pathPath.curve(to: NSPoint(x: 22.02, y: 16.58), controlPoint1: NSPoint(x: 19.33, y: 15.13), controlPoint2: NSPoint(x: 22.02, y: 16.58))
        pathPath.line(to: NSPoint(x: 22.02, y: 25.51))
        pathPath.curve(to: NSPoint(x: 14.52, y: 26.11), controlPoint1: NSPoint(x: 22.02, y: 25.51), controlPoint2: NSPoint(x: 18.99, y: 24.14))
        pathPath.line(to: NSPoint(x: 14.52, y: 26.11))
        pathPath.line(to: NSPoint(x: 14.52, y: 26.11))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFlag2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 7, y: 22.5))
        pathPath.line(to: NSPoint(x: 7, y: 2))
        pathPath.line(to: NSPoint(x: 8, y: 2))
        pathPath.line(to: NSPoint(x: 8, y: 17))
        pathPath.line(to: NSPoint(x: 23, y: 17))
        pathPath.line(to: NSPoint(x: 17.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 28))
        pathPath.line(to: NSPoint(x: 7, y: 28))
        pathPath.line(to: NSPoint(x: 7, y: 22.5))
        pathPath.line(to: NSPoint(x: 7, y: 22.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8, y: 27))
        pathPath.line(to: NSPoint(x: 8, y: 18))
        pathPath.line(to: NSPoint(x: 20.5, y: 18))
        pathPath.line(to: NSPoint(x: 16, y: 22.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 27))
        pathPath.line(to: NSPoint(x: 8, y: 27))
        pathPath.line(to: NSPoint(x: 8, y: 27))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFlag3(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 8, y: 21.5))
        pathPath.line(to: NSPoint(x: 8, y: 2))
        pathPath.line(to: NSPoint(x: 9, y: 2))
        pathPath.line(to: NSPoint(x: 9, y: 16.43))
        pathPath.line(to: NSPoint(x: 22, y: 22))
        pathPath.line(to: NSPoint(x: 8, y: 28))
        pathPath.line(to: NSPoint(x: 8, y: 21.5))
        pathPath.line(to: NSPoint(x: 8, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9, y: 26.5))
        pathPath.line(to: NSPoint(x: 9, y: 17.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 22))
        pathPath.line(to: NSPoint(x: 9, y: 26.5))
        pathPath.line(to: NSPoint(x: 9, y: 26.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFlag4(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 8, y: 22.5))
        pathPath.line(to: NSPoint(x: 8, y: 2))
        pathPath.line(to: NSPoint(x: 9, y: 2))
        pathPath.line(to: NSPoint(x: 9, y: 17))
        pathPath.line(to: NSPoint(x: 24, y: 17))
        pathPath.line(to: NSPoint(x: 24, y: 28))
        pathPath.line(to: NSPoint(x: 8, y: 28))
        pathPath.line(to: NSPoint(x: 8, y: 22.5))
        pathPath.line(to: NSPoint(x: 8, y: 22.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9, y: 27))
        pathPath.line(to: NSPoint(x: 9, y: 18))
        pathPath.line(to: NSPoint(x: 23, y: 18))
        pathPath.line(to: NSPoint(x: 23, y: 27))
        pathPath.line(to: NSPoint(x: 9, y: 27))
        pathPath.line(to: NSPoint(x: 9, y: 27))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBookmark(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 12, y: 27))
        pathPath.curve(to: NSPoint(x: 9, y: 24.01), controlPoint1: NSPoint(x: 10.34, y: 27), controlPoint2: NSPoint(x: 9, y: 25.66))
        pathPath.line(to: NSPoint(x: 9, y: 3))
        pathPath.line(to: NSPoint(x: 15, y: 9))
        pathPath.line(to: NSPoint(x: 21, y: 3))
        pathPath.line(to: NSPoint(x: 21, y: 24.01))
        pathPath.curve(to: NSPoint(x: 18, y: 27), controlPoint1: NSPoint(x: 21, y: 25.66), controlPoint2: NSPoint(x: 19.66, y: 27))
        pathPath.line(to: NSPoint(x: 12, y: 27))
        pathPath.line(to: NSPoint(x: 12, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12, y: 26))
        pathPath.curve(to: NSPoint(x: 10, y: 24.01), controlPoint1: NSPoint(x: 10.9, y: 26), controlPoint2: NSPoint(x: 10, y: 25.1))
        pathPath.line(to: NSPoint(x: 10, y: 5.4))
        pathPath.line(to: NSPoint(x: 15, y: 10.4))
        pathPath.line(to: NSPoint(x: 20, y: 5.4))
        pathPath.line(to: NSPoint(x: 20, y: 24.01))
        pathPath.curve(to: NSPoint(x: 18, y: 26), controlPoint1: NSPoint(x: 20, y: 25.11), controlPoint2: NSPoint(x: 19.11, y: 26))
        pathPath.line(to: NSPoint(x: 12, y: 26))
        pathPath.line(to: NSPoint(x: 12, y: 26))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBookmarkAdd(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 17.5, y: 18))
        pathPath.line(to: NSPoint(x: 17.5, y: 21))
        pathPath.line(to: NSPoint(x: 18.5, y: 21))
        pathPath.line(to: NSPoint(x: 18.5, y: 18))
        pathPath.line(to: NSPoint(x: 21.5, y: 18))
        pathPath.line(to: NSPoint(x: 21.5, y: 17))
        pathPath.line(to: NSPoint(x: 18.5, y: 17))
        pathPath.line(to: NSPoint(x: 18.5, y: 14))
        pathPath.line(to: NSPoint(x: 17.5, y: 14))
        pathPath.line(to: NSPoint(x: 17.5, y: 17))
        pathPath.line(to: NSPoint(x: 14.5, y: 17))
        pathPath.line(to: NSPoint(x: 14.5, y: 18))
        pathPath.line(to: NSPoint(x: 17.5, y: 18))
        pathPath.line(to: NSPoint(x: 17.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 12.02))
        pathPath.line(to: NSPoint(x: 18.5, y: 3))
        pathPath.line(to: NSPoint(x: 12.5, y: 9))
        pathPath.line(to: NSPoint(x: 6.5, y: 3))
        pathPath.line(to: NSPoint(x: 6.5, y: 24.01))
        pathPath.curve(to: NSPoint(x: 9.5, y: 27), controlPoint1: NSPoint(x: 6.5, y: 25.66), controlPoint2: NSPoint(x: 7.84, y: 27))
        pathPath.line(to: NSPoint(x: 15.5, y: 27))
        pathPath.curve(to: NSPoint(x: 18.5, y: 24.01), controlPoint1: NSPoint(x: 17.16, y: 27), controlPoint2: NSPoint(x: 18.5, y: 25.66))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.98))
        pathPath.curve(to: NSPoint(x: 23.5, y: 17.5), controlPoint1: NSPoint(x: 21.3, y: 22.72), controlPoint2: NSPoint(x: 23.5, y: 20.37))
        pathPath.curve(to: NSPoint(x: 18.5, y: 12.02), controlPoint1: NSPoint(x: 23.5, y: 14.63), controlPoint2: NSPoint(x: 21.3, y: 12.28))
        pathPath.line(to: NSPoint(x: 18.5, y: 12.02))
        pathPath.line(to: NSPoint(x: 18.5, y: 12.02))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 12.02))
        pathPath.line(to: NSPoint(x: 17.5, y: 5.4))
        pathPath.line(to: NSPoint(x: 12.5, y: 10.4))
        pathPath.line(to: NSPoint(x: 7.5, y: 5.4))
        pathPath.line(to: NSPoint(x: 7.5, y: 24.01))
        pathPath.curve(to: NSPoint(x: 9.5, y: 26), controlPoint1: NSPoint(x: 7.5, y: 25.1), controlPoint2: NSPoint(x: 8.4, y: 26))
        pathPath.line(to: NSPoint(x: 15.5, y: 26))
        pathPath.curve(to: NSPoint(x: 17.5, y: 24.01), controlPoint1: NSPoint(x: 16.61, y: 26), controlPoint2: NSPoint(x: 17.5, y: 25.11))
        pathPath.line(to: NSPoint(x: 17.5, y: 22.98))
        pathPath.curve(to: NSPoint(x: 12.5, y: 17.5), controlPoint1: NSPoint(x: 14.7, y: 22.72), controlPoint2: NSPoint(x: 12.5, y: 20.37))
        pathPath.curve(to: NSPoint(x: 17.5, y: 12.02), controlPoint1: NSPoint(x: 12.5, y: 14.63), controlPoint2: NSPoint(x: 14.7, y: 12.28))
        pathPath.line(to: NSPoint(x: 17.5, y: 12.02))
        pathPath.line(to: NSPoint(x: 17.5, y: 12.02))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 13))
        pathPath.curve(to: NSPoint(x: 22.5, y: 17.5), controlPoint1: NSPoint(x: 20.49, y: 13), controlPoint2: NSPoint(x: 22.5, y: 15.01))
        pathPath.curve(to: NSPoint(x: 18, y: 22), controlPoint1: NSPoint(x: 22.5, y: 19.99), controlPoint2: NSPoint(x: 20.49, y: 22))
        pathPath.curve(to: NSPoint(x: 13.5, y: 17.5), controlPoint1: NSPoint(x: 15.51, y: 22), controlPoint2: NSPoint(x: 13.5, y: 19.99))
        pathPath.curve(to: NSPoint(x: 18, y: 13), controlPoint1: NSPoint(x: 13.5, y: 15.01), controlPoint2: NSPoint(x: 15.51, y: 13))
        pathPath.line(to: NSPoint(x: 18, y: 13))
        pathPath.line(to: NSPoint(x: 18, y: 13))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBookmarkRemove(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18.5, y: 12.02))
        pathPath.line(to: NSPoint(x: 18.5, y: 3))
        pathPath.line(to: NSPoint(x: 12.5, y: 9))
        pathPath.line(to: NSPoint(x: 6.5, y: 3))
        pathPath.line(to: NSPoint(x: 6.5, y: 24.01))
        pathPath.curve(to: NSPoint(x: 9.5, y: 27), controlPoint1: NSPoint(x: 6.5, y: 25.66), controlPoint2: NSPoint(x: 7.84, y: 27))
        pathPath.line(to: NSPoint(x: 15.5, y: 27))
        pathPath.curve(to: NSPoint(x: 18.5, y: 24.01), controlPoint1: NSPoint(x: 17.16, y: 27), controlPoint2: NSPoint(x: 18.5, y: 25.66))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.98))
        pathPath.curve(to: NSPoint(x: 23.5, y: 17.5), controlPoint1: NSPoint(x: 21.3, y: 22.72), controlPoint2: NSPoint(x: 23.5, y: 20.37))
        pathPath.curve(to: NSPoint(x: 18.5, y: 12.02), controlPoint1: NSPoint(x: 23.5, y: 14.63), controlPoint2: NSPoint(x: 21.3, y: 12.28))
        pathPath.line(to: NSPoint(x: 18.5, y: 12.02))
        pathPath.line(to: NSPoint(x: 18.5, y: 12.02))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 12.02))
        pathPath.line(to: NSPoint(x: 17.5, y: 5.4))
        pathPath.line(to: NSPoint(x: 12.5, y: 10.4))
        pathPath.line(to: NSPoint(x: 7.5, y: 5.4))
        pathPath.line(to: NSPoint(x: 7.5, y: 24.01))
        pathPath.curve(to: NSPoint(x: 9.5, y: 26), controlPoint1: NSPoint(x: 7.5, y: 25.1), controlPoint2: NSPoint(x: 8.4, y: 26))
        pathPath.line(to: NSPoint(x: 15.5, y: 26))
        pathPath.curve(to: NSPoint(x: 17.5, y: 24.01), controlPoint1: NSPoint(x: 16.61, y: 26), controlPoint2: NSPoint(x: 17.5, y: 25.11))
        pathPath.line(to: NSPoint(x: 17.5, y: 22.98))
        pathPath.curve(to: NSPoint(x: 12.5, y: 17.5), controlPoint1: NSPoint(x: 14.7, y: 22.72), controlPoint2: NSPoint(x: 12.5, y: 20.37))
        pathPath.curve(to: NSPoint(x: 17.5, y: 12.02), controlPoint1: NSPoint(x: 12.5, y: 14.63), controlPoint2: NSPoint(x: 14.7, y: 12.28))
        pathPath.line(to: NSPoint(x: 17.5, y: 12.02))
        pathPath.line(to: NSPoint(x: 17.5, y: 12.02))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 13))
        pathPath.curve(to: NSPoint(x: 22.5, y: 17.5), controlPoint1: NSPoint(x: 20.49, y: 13), controlPoint2: NSPoint(x: 22.5, y: 15.01))
        pathPath.curve(to: NSPoint(x: 18, y: 22), controlPoint1: NSPoint(x: 22.5, y: 19.99), controlPoint2: NSPoint(x: 20.49, y: 22))
        pathPath.curve(to: NSPoint(x: 13.5, y: 17.5), controlPoint1: NSPoint(x: 15.51, y: 22), controlPoint2: NSPoint(x: 13.5, y: 19.99))
        pathPath.curve(to: NSPoint(x: 18, y: 13), controlPoint1: NSPoint(x: 13.5, y: 15.01), controlPoint2: NSPoint(x: 15.51, y: 13))
        pathPath.line(to: NSPoint(x: 18, y: 13))
        pathPath.line(to: NSPoint(x: 18, y: 13))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 18))
        pathPath.line(to: NSPoint(x: 14.5, y: 17))
        pathPath.line(to: NSPoint(x: 21.5, y: 17))
        pathPath.line(to: NSPoint(x: 21.5, y: 18))
        pathPath.line(to: NSPoint(x: 14.5, y: 18))
        pathPath.line(to: NSPoint(x: 14.5, y: 18))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawEyeHidden(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 7.11, y: 10.11))
        pathPath.curve(to: NSPoint(x: 2, y: 15), controlPoint1: NSPoint(x: 3.62, y: 12.17), controlPoint2: NSPoint(x: 2, y: 15))
        pathPath.curve(to: NSPoint(x: 15, y: 22), controlPoint1: NSPoint(x: 2, y: 15), controlPoint2: NSPoint(x: 6, y: 22))
        pathPath.curve(to: NSPoint(x: 18.6, y: 21.6), controlPoint1: NSPoint(x: 16.3, y: 22), controlPoint2: NSPoint(x: 17.5, y: 21.85))
        pathPath.line(to: NSPoint(x: 17.75, y: 20.75))
        pathPath.curve(to: NSPoint(x: 15, y: 21), controlPoint1: NSPoint(x: 16.9, y: 20.91), controlPoint2: NSPoint(x: 15.98, y: 21))
        pathPath.curve(to: NSPoint(x: 3.2, y: 15), controlPoint1: NSPoint(x: 7, y: 21), controlPoint2: NSPoint(x: 3.2, y: 15))
        pathPath.curve(to: NSPoint(x: 7.84, y: 10.84), controlPoint1: NSPoint(x: 3.2, y: 15), controlPoint2: NSPoint(x: 4.71, y: 12.61))
        pathPath.line(to: NSPoint(x: 7.11, y: 10.11))
        pathPath.line(to: NSPoint(x: 7.11, y: 10.11))
        pathPath.line(to: NSPoint(x: 7.11, y: 10.11))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.4, y: 8.4))
        pathPath.curve(to: NSPoint(x: 15, y: 8), controlPoint1: NSPoint(x: 12.5, y: 8.15), controlPoint2: NSPoint(x: 13.7, y: 8))
        pathPath.curve(to: NSPoint(x: 28, y: 15), controlPoint1: NSPoint(x: 24, y: 8), controlPoint2: NSPoint(x: 28, y: 15))
        pathPath.curve(to: NSPoint(x: 22.89, y: 19.89), controlPoint1: NSPoint(x: 28, y: 15), controlPoint2: NSPoint(x: 26.38, y: 17.83))
        pathPath.line(to: NSPoint(x: 22.16, y: 19.16))
        pathPath.curve(to: NSPoint(x: 26.8, y: 15), controlPoint1: NSPoint(x: 25.29, y: 17.39), controlPoint2: NSPoint(x: 26.8, y: 15))
        pathPath.curve(to: NSPoint(x: 15, y: 9), controlPoint1: NSPoint(x: 26.8, y: 15), controlPoint2: NSPoint(x: 23, y: 9))
        pathPath.curve(to: NSPoint(x: 12.25, y: 9.25), controlPoint1: NSPoint(x: 14.02, y: 9), controlPoint2: NSPoint(x: 13.1, y: 9.09))
        pathPath.line(to: NSPoint(x: 11.4, y: 8.4))
        pathPath.line(to: NSPoint(x: 11.4, y: 8.4))
        pathPath.line(to: NSPoint(x: 11.4, y: 8.4))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.9, y: 15.9))
        pathPath.curve(to: NSPoint(x: 19, y: 15), controlPoint1: NSPoint(x: 18.96, y: 15.61), controlPoint2: NSPoint(x: 19, y: 15.31))
        pathPath.curve(to: NSPoint(x: 15, y: 11), controlPoint1: NSPoint(x: 19, y: 12.79), controlPoint2: NSPoint(x: 17.21, y: 11))
        pathPath.curve(to: NSPoint(x: 14.1, y: 11.1), controlPoint1: NSPoint(x: 14.69, y: 11), controlPoint2: NSPoint(x: 14.39, y: 11.04))
        pathPath.line(to: NSPoint(x: 15, y: 12))
        pathPath.curve(to: NSPoint(x: 17.12, y: 12.88), controlPoint1: NSPoint(x: 15.77, y: 12), controlPoint2: NSPoint(x: 16.54, y: 12.29))
        pathPath.curve(to: NSPoint(x: 18, y: 15), controlPoint1: NSPoint(x: 17.71, y: 13.46), controlPoint2: NSPoint(x: 18, y: 14.23))
        pathPath.line(to: NSPoint(x: 18.9, y: 15.9))
        pathPath.line(to: NSPoint(x: 18.9, y: 15.9))
        pathPath.line(to: NSPoint(x: 18.9, y: 15.9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.9, y: 18.9))
        pathPath.curve(to: NSPoint(x: 15, y: 19), controlPoint1: NSPoint(x: 15.61, y: 18.96), controlPoint2: NSPoint(x: 15.31, y: 19))
        pathPath.curve(to: NSPoint(x: 11, y: 15), controlPoint1: NSPoint(x: 12.79, y: 19), controlPoint2: NSPoint(x: 11, y: 17.21))
        pathPath.curve(to: NSPoint(x: 11.1, y: 14.1), controlPoint1: NSPoint(x: 11, y: 14.69), controlPoint2: NSPoint(x: 11.04, y: 14.39))
        pathPath.line(to: NSPoint(x: 12, y: 15))
        pathPath.curve(to: NSPoint(x: 12.88, y: 17.12), controlPoint1: NSPoint(x: 12, y: 15.77), controlPoint2: NSPoint(x: 12.29, y: 16.54))
        pathPath.curve(to: NSPoint(x: 15, y: 18), controlPoint1: NSPoint(x: 13.46, y: 17.71), controlPoint2: NSPoint(x: 14.23, y: 18))
        pathPath.line(to: NSPoint(x: 15.9, y: 18.9))
        pathPath.line(to: NSPoint(x: 15.9, y: 18.9))
        pathPath.line(to: NSPoint(x: 15.9, y: 18.9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23, y: 24))
        pathPath.line(to: NSPoint(x: 6, y: 7))
        pathPath.line(to: NSPoint(x: 7, y: 6))
        pathPath.line(to: NSPoint(x: 24, y: 23))
        pathPath.line(to: NSPoint(x: 23, y: 24))
        pathPath.line(to: NSPoint(x: 23, y: 24))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawEye(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15, y: 22))
        pathPath.curve(to: NSPoint(x: 2, y: 15), controlPoint1: NSPoint(x: 6, y: 22), controlPoint2: NSPoint(x: 2, y: 15))
        pathPath.curve(to: NSPoint(x: 15, y: 8), controlPoint1: NSPoint(x: 2, y: 15), controlPoint2: NSPoint(x: 6, y: 8))
        pathPath.curve(to: NSPoint(x: 28, y: 15), controlPoint1: NSPoint(x: 24, y: 8), controlPoint2: NSPoint(x: 28, y: 15))
        pathPath.curve(to: NSPoint(x: 15, y: 22), controlPoint1: NSPoint(x: 28, y: 15), controlPoint2: NSPoint(x: 24, y: 22))
        pathPath.line(to: NSPoint(x: 15, y: 22))
        pathPath.line(to: NSPoint(x: 15, y: 22))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 21))
        pathPath.curve(to: NSPoint(x: 3.2, y: 15), controlPoint1: NSPoint(x: 7, y: 21), controlPoint2: NSPoint(x: 3.2, y: 15))
        pathPath.curve(to: NSPoint(x: 15, y: 9), controlPoint1: NSPoint(x: 3.2, y: 15), controlPoint2: NSPoint(x: 7, y: 9))
        pathPath.curve(to: NSPoint(x: 26.8, y: 15), controlPoint1: NSPoint(x: 23, y: 9), controlPoint2: NSPoint(x: 26.8, y: 15))
        pathPath.curve(to: NSPoint(x: 15, y: 21), controlPoint1: NSPoint(x: 26.8, y: 15), controlPoint2: NSPoint(x: 23, y: 21))
        pathPath.line(to: NSPoint(x: 15, y: 21))
        pathPath.line(to: NSPoint(x: 15, y: 21))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 11))
        pathPath.curve(to: NSPoint(x: 19, y: 15), controlPoint1: NSPoint(x: 17.21, y: 11), controlPoint2: NSPoint(x: 19, y: 12.79))
        pathPath.curve(to: NSPoint(x: 15, y: 19), controlPoint1: NSPoint(x: 19, y: 17.21), controlPoint2: NSPoint(x: 17.21, y: 19))
        pathPath.curve(to: NSPoint(x: 11, y: 15), controlPoint1: NSPoint(x: 12.79, y: 19), controlPoint2: NSPoint(x: 11, y: 17.21))
        pathPath.curve(to: NSPoint(x: 15, y: 11), controlPoint1: NSPoint(x: 11, y: 12.79), controlPoint2: NSPoint(x: 12.79, y: 11))
        pathPath.line(to: NSPoint(x: 15, y: 11))
        pathPath.line(to: NSPoint(x: 15, y: 11))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 12))
        pathPath.curve(to: NSPoint(x: 18, y: 15), controlPoint1: NSPoint(x: 16.66, y: 12), controlPoint2: NSPoint(x: 18, y: 13.34))
        pathPath.curve(to: NSPoint(x: 15, y: 18), controlPoint1: NSPoint(x: 18, y: 16.66), controlPoint2: NSPoint(x: 16.66, y: 18))
        pathPath.curve(to: NSPoint(x: 12, y: 15), controlPoint1: NSPoint(x: 13.34, y: 18), controlPoint2: NSPoint(x: 12, y: 16.66))
        pathPath.curve(to: NSPoint(x: 15, y: 12), controlPoint1: NSPoint(x: 12, y: 13.34), controlPoint2: NSPoint(x: 13.34, y: 12))
        pathPath.line(to: NSPoint(x: 15, y: 12))
        pathPath.line(to: NSPoint(x: 15, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 14))
        pathPath.curve(to: NSPoint(x: 16, y: 15), controlPoint1: NSPoint(x: 15.55, y: 14), controlPoint2: NSPoint(x: 16, y: 14.45))
        pathPath.curve(to: NSPoint(x: 15, y: 16), controlPoint1: NSPoint(x: 16, y: 15.55), controlPoint2: NSPoint(x: 15.55, y: 16))
        pathPath.curve(to: NSPoint(x: 14, y: 15), controlPoint1: NSPoint(x: 14.45, y: 16), controlPoint2: NSPoint(x: 14, y: 15.55))
        pathPath.curve(to: NSPoint(x: 15, y: 14), controlPoint1: NSPoint(x: 14, y: 14.45), controlPoint2: NSPoint(x: 14.45, y: 14))
        pathPath.line(to: NSPoint(x: 15, y: 14))
        pathPath.line(to: NSPoint(x: 15, y: 14))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawStar(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15, y: 8))
        pathPath.line(to: NSPoint(x: 6, y: 2))
        pathPath.line(to: NSPoint(x: 10, y: 12))
        pathPath.line(to: NSPoint(x: 1, y: 18))
        pathPath.line(to: NSPoint(x: 11, y: 18))
        pathPath.line(to: NSPoint(x: 15, y: 28))
        pathPath.line(to: NSPoint(x: 19, y: 18))
        pathPath.line(to: NSPoint(x: 29, y: 18))
        pathPath.line(to: NSPoint(x: 20, y: 12))
        pathPath.line(to: NSPoint(x: 24, y: 2))
        pathPath.line(to: NSPoint(x: 15, y: 8))
        pathPath.line(to: NSPoint(x: 15, y: 8))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 9.25))
        pathPath.line(to: NSPoint(x: 8.2, y: 4.7))
        pathPath.line(to: NSPoint(x: 11.4, y: 12.4))
        pathPath.line(to: NSPoint(x: 4.2, y: 17))
        pathPath.line(to: NSPoint(x: 11.7, y: 17))
        pathPath.line(to: NSPoint(x: 15, y: 25.5))
        pathPath.line(to: NSPoint(x: 18.3, y: 17))
        pathPath.line(to: NSPoint(x: 25.8, y: 17))
        pathPath.line(to: NSPoint(x: 18.6, y: 12.4))
        pathPath.line(to: NSPoint(x: 21.8, y: 4.7))
        pathPath.line(to: NSPoint(x: 15, y: 9.25))
        pathPath.line(to: NSPoint(x: 15, y: 9.25))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawKey(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 17.03, y: 12.03))
        pathPath.line(to: NSPoint(x: 12.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 1.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 1.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 12.03, y: 17.03))
        pathPath.curve(to: NSPoint(x: 11.5, y: 20), controlPoint1: NSPoint(x: 11.69, y: 17.96), controlPoint2: NSPoint(x: 11.5, y: 18.96))
        pathPath.curve(to: NSPoint(x: 20, y: 28.5), controlPoint1: NSPoint(x: 11.5, y: 24.69), controlPoint2: NSPoint(x: 15.31, y: 28.5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 20), controlPoint1: NSPoint(x: 24.69, y: 28.5), controlPoint2: NSPoint(x: 28.5, y: 24.69))
        pathPath.curve(to: NSPoint(x: 20, y: 11.5), controlPoint1: NSPoint(x: 28.5, y: 15.31), controlPoint2: NSPoint(x: 24.69, y: 11.5))
        pathPath.curve(to: NSPoint(x: 17.03, y: 12.03), controlPoint1: NSPoint(x: 18.96, y: 11.5), controlPoint2: NSPoint(x: 17.96, y: 11.69))
        pathPath.line(to: NSPoint(x: 17.03, y: 12.03))
        pathPath.line(to: NSPoint(x: 17.03, y: 12.03))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 16))
        pathPath.line(to: NSPoint(x: 2.5, y: 6))
        pathPath.line(to: NSPoint(x: 2.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 12, y: 8.5))
        pathPath.line(to: NSPoint(x: 16, y: 12.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 16), controlPoint1: NSPoint(x: 14.51, y: 13.29), controlPoint2: NSPoint(x: 13.29, y: 14.51))
        pathPath.line(to: NSPoint(x: 12.5, y: 16))
        pathPath.line(to: NSPoint(x: 12.5, y: 16))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 27.5, y: 20))
        pathPath.curve(to: NSPoint(x: 20, y: 27.5), controlPoint1: NSPoint(x: 27.5, y: 24.14), controlPoint2: NSPoint(x: 24.14, y: 27.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 20), controlPoint1: NSPoint(x: 15.86, y: 27.5), controlPoint2: NSPoint(x: 12.5, y: 24.14))
        pathPath.curve(to: NSPoint(x: 20, y: 12.5), controlPoint1: NSPoint(x: 12.5, y: 15.86), controlPoint2: NSPoint(x: 15.86, y: 12.5))
        pathPath.curve(to: NSPoint(x: 27.5, y: 20), controlPoint1: NSPoint(x: 24.14, y: 12.5), controlPoint2: NSPoint(x: 27.5, y: 15.86))
        pathPath.line(to: NSPoint(x: 27.5, y: 20))
        pathPath.line(to: NSPoint(x: 27.5, y: 20))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 25.5, y: 22.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 25.5), controlPoint1: NSPoint(x: 25.5, y: 24.16), controlPoint2: NSPoint(x: 24.16, y: 25.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 22.5), controlPoint1: NSPoint(x: 20.84, y: 25.5), controlPoint2: NSPoint(x: 19.5, y: 24.16))
        pathPath.curve(to: NSPoint(x: 22.5, y: 19.5), controlPoint1: NSPoint(x: 19.5, y: 20.84), controlPoint2: NSPoint(x: 20.84, y: 19.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 22.5), controlPoint1: NSPoint(x: 24.16, y: 19.5), controlPoint2: NSPoint(x: 25.5, y: 20.84))
        pathPath.line(to: NSPoint(x: 25.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 22.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 22.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 24.5), controlPoint1: NSPoint(x: 24.5, y: 23.6), controlPoint2: NSPoint(x: 23.6, y: 24.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 22.5), controlPoint1: NSPoint(x: 21.4, y: 24.5), controlPoint2: NSPoint(x: 20.5, y: 23.6))
        pathPath.curve(to: NSPoint(x: 22.5, y: 20.5), controlPoint1: NSPoint(x: 20.5, y: 21.4), controlPoint2: NSPoint(x: 21.4, y: 20.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 22.5), controlPoint1: NSPoint(x: 23.6, y: 20.5), controlPoint2: NSPoint(x: 24.5, y: 21.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 22.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawKey2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 16.04, y: 17.64))
        pathPath.curve(to: NSPoint(x: 15, y: 21), controlPoint1: NSPoint(x: 15.39, y: 18.6), controlPoint2: NSPoint(x: 15, y: 19.75))
        pathPath.curve(to: NSPoint(x: 21, y: 27), controlPoint1: NSPoint(x: 15, y: 24.31), controlPoint2: NSPoint(x: 17.69, y: 27))
        pathPath.curve(to: NSPoint(x: 27, y: 21), controlPoint1: NSPoint(x: 24.31, y: 27), controlPoint2: NSPoint(x: 27, y: 24.31))
        pathPath.curve(to: NSPoint(x: 21, y: 15), controlPoint1: NSPoint(x: 27, y: 17.69), controlPoint2: NSPoint(x: 24.31, y: 15))
        pathPath.curve(to: NSPoint(x: 17.62, y: 16.05), controlPoint1: NSPoint(x: 19.75, y: 15), controlPoint2: NSPoint(x: 18.59, y: 15.39))
        pathPath.line(to: NSPoint(x: 13.54, y: 11.97))
        pathPath.line(to: NSPoint(x: 15.5, y: 10.01))
        pathPath.line(to: NSPoint(x: 14, y: 8.51))
        pathPath.line(to: NSPoint(x: 12.04, y: 10.47))
        pathPath.line(to: NSPoint(x: 9.04, y: 7.47))
        pathPath.line(to: NSPoint(x: 11.51, y: 5.01))
        pathPath.line(to: NSPoint(x: 10.01, y: 3.51))
        pathPath.line(to: NSPoint(x: 7.54, y: 5.97))
        pathPath.line(to: NSPoint(x: 4.89, y: 3.32))
        pathPath.curve(to: NSPoint(x: 3.34, y: 3.33), controlPoint1: NSPoint(x: 4.46, y: 2.89), controlPoint2: NSPoint(x: 3.77, y: 2.9))
        pathPath.line(to: NSPoint(x: 3.32, y: 3.35))
        pathPath.curve(to: NSPoint(x: 3.33, y: 4.9), controlPoint1: NSPoint(x: 2.9, y: 3.78), controlPoint2: NSPoint(x: 2.9, y: 4.47))
        pathPath.line(to: NSPoint(x: 16.04, y: 17.64))
        pathPath.line(to: NSPoint(x: 16.04, y: 17.64))
        pathPath.line(to: NSPoint(x: 16.04, y: 17.64))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.01, y: 9.01))
        pathPath.line(to: NSPoint(x: 10.51, y: 7.51))
        pathPath.line(to: NSPoint(x: 10.51, y: 7.51))
        pathPath.line(to: NSPoint(x: 13, y: 5.01))
        pathPath.line(to: NSPoint(x: 10.01, y: 2.01))
        pathPath.line(to: NSPoint(x: 7.51, y: 4.51))
        pathPath.line(to: NSPoint(x: 5.63, y: 2.63))
        pathPath.curve(to: NSPoint(x: 2.59, y: 2.63), controlPoint1: NSPoint(x: 4.79, y: 1.79), controlPoint2: NSPoint(x: 3.43, y: 1.79))
        pathPath.line(to: NSPoint(x: 2.63, y: 2.59))
        pathPath.curve(to: NSPoint(x: 2.63, y: 5.63), controlPoint1: NSPoint(x: 1.79, y: 3.43), controlPoint2: NSPoint(x: 1.79, y: 4.79))
        pathPath.line(to: NSPoint(x: 14.79, y: 17.79))
        pathPath.curve(to: NSPoint(x: 14, y: 21), controlPoint1: NSPoint(x: 14.29, y: 18.75), controlPoint2: NSPoint(x: 14, y: 19.84))
        pathPath.curve(to: NSPoint(x: 21, y: 28), controlPoint1: NSPoint(x: 14, y: 24.87), controlPoint2: NSPoint(x: 17.14, y: 28))
        pathPath.curve(to: NSPoint(x: 28, y: 21), controlPoint1: NSPoint(x: 24.87, y: 28), controlPoint2: NSPoint(x: 28, y: 24.87))
        pathPath.curve(to: NSPoint(x: 21, y: 14), controlPoint1: NSPoint(x: 28, y: 17.14), controlPoint2: NSPoint(x: 24.87, y: 14))
        pathPath.curve(to: NSPoint(x: 17.79, y: 14.79), controlPoint1: NSPoint(x: 19.84, y: 14), controlPoint2: NSPoint(x: 18.75, y: 14.29))
        pathPath.line(to: NSPoint(x: 17.79, y: 14.79))
        pathPath.line(to: NSPoint(x: 15, y: 12.01))
        pathPath.line(to: NSPoint(x: 17, y: 10.01))
        pathPath.line(to: NSPoint(x: 14, y: 7.01))
        pathPath.line(to: NSPoint(x: 12.01, y: 9.01))
        pathPath.line(to: NSPoint(x: 12.01, y: 9.01))
        pathPath.line(to: NSPoint(x: 12.01, y: 9.01))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21, y: 17))
        pathPath.curve(to: NSPoint(x: 25, y: 21), controlPoint1: NSPoint(x: 23.21, y: 17), controlPoint2: NSPoint(x: 25, y: 18.79))
        pathPath.curve(to: NSPoint(x: 21, y: 25), controlPoint1: NSPoint(x: 25, y: 23.21), controlPoint2: NSPoint(x: 23.21, y: 25))
        pathPath.curve(to: NSPoint(x: 17, y: 21), controlPoint1: NSPoint(x: 18.79, y: 25), controlPoint2: NSPoint(x: 17, y: 23.21))
        pathPath.curve(to: NSPoint(x: 21, y: 17), controlPoint1: NSPoint(x: 17, y: 18.79), controlPoint2: NSPoint(x: 18.79, y: 17))
        pathPath.line(to: NSPoint(x: 21, y: 17))
        pathPath.line(to: NSPoint(x: 21, y: 17))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21, y: 18))
        pathPath.curve(to: NSPoint(x: 24, y: 21), controlPoint1: NSPoint(x: 22.66, y: 18), controlPoint2: NSPoint(x: 24, y: 19.35))
        pathPath.curve(to: NSPoint(x: 21, y: 24), controlPoint1: NSPoint(x: 24, y: 22.66), controlPoint2: NSPoint(x: 22.66, y: 24))
        pathPath.curve(to: NSPoint(x: 18, y: 21), controlPoint1: NSPoint(x: 19.35, y: 24), controlPoint2: NSPoint(x: 18, y: 22.66))
        pathPath.curve(to: NSPoint(x: 21, y: 18), controlPoint1: NSPoint(x: 18, y: 19.35), controlPoint2: NSPoint(x: 19.35, y: 18))
        pathPath.line(to: NSPoint(x: 21, y: 18))
        pathPath.line(to: NSPoint(x: 21, y: 18))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTrashCan(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 19.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 28.5), controlPoint1: NSPoint(x: 10.5, y: 27.61), controlPoint2: NSPoint(x: 11.39, y: 28.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 26.5), controlPoint1: NSPoint(x: 18.6, y: 28.5), controlPoint2: NSPoint(x: 19.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 19.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 25.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 4.5))
        pathPath.curve(to: NSPoint(x: 9.5, y: 1.5), controlPoint1: NSPoint(x: 6.5, y: 2.84), controlPoint2: NSPoint(x: 7.83, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 4.5), controlPoint1: NSPoint(x: 22.16, y: 1.5), controlPoint2: NSPoint(x: 23.5, y: 2.84))
        pathPath.line(to: NSPoint(x: 23.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 23.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 4.49))
        pathPath.curve(to: NSPoint(x: 9.49, y: 2.5), controlPoint1: NSPoint(x: 7.5, y: 3.39), controlPoint2: NSPoint(x: 8.39, y: 2.5))
        pathPath.line(to: NSPoint(x: 20.51, y: 2.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 4.49), controlPoint1: NSPoint(x: 21.61, y: 2.5), controlPoint2: NSPoint(x: 22.5, y: 3.4))
        pathPath.line(to: NSPoint(x: 22.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 22.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 11.5, y: 26.5), controlPoint1: NSPoint(x: 11.95, y: 27.5), controlPoint2: NSPoint(x: 11.5, y: 27.06))
        pathPath.line(to: NSPoint(x: 11.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 27.5), controlPoint1: NSPoint(x: 18.5, y: 27.05), controlPoint2: NSPoint(x: 18.06, y: 27.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 27.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTrashCan2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 21.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 28.5), controlPoint1: NSPoint(x: 19.5, y: 27.6), controlPoint2: NSPoint(x: 18.6, y: 28.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 10.5, y: 26.5), controlPoint1: NSPoint(x: 11.39, y: 28.5), controlPoint2: NSPoint(x: 10.5, y: 27.61))
        pathPath.line(to: NSPoint(x: 10.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 4.51))
        pathPath.curve(to: NSPoint(x: 9.5, y: 1.5), controlPoint1: NSPoint(x: 6.5, y: 2.85), controlPoint2: NSPoint(x: 7.83, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 4.51), controlPoint1: NSPoint(x: 22.16, y: 1.5), controlPoint2: NSPoint(x: 23.5, y: 2.84))
        pathPath.line(to: NSPoint(x: 23.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 24.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 4.49))
        pathPath.curve(to: NSPoint(x: 9.49, y: 2.5), controlPoint1: NSPoint(x: 7.5, y: 3.39), controlPoint2: NSPoint(x: 8.39, y: 2.5))
        pathPath.line(to: NSPoint(x: 20.51, y: 2.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 4.49), controlPoint1: NSPoint(x: 21.61, y: 2.5), controlPoint2: NSPoint(x: 22.5, y: 3.4))
        pathPath.line(to: NSPoint(x: 22.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 23.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 11.5, y: 26.5), controlPoint1: NSPoint(x: 11.95, y: 27.5), controlPoint2: NSPoint(x: 11.5, y: 27.06))
        pathPath.line(to: NSPoint(x: 11.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 27.5), controlPoint1: NSPoint(x: 18.5, y: 27.05), controlPoint2: NSPoint(x: 18.06, y: 27.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 27.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawInformation(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 15, y: 15.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 5.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 15), controlPoint1: NSPoint(x: 20.25, y: 5.5), controlPoint2: NSPoint(x: 24.5, y: 9.75))
        pathPath.curve(to: NSPoint(x: 15, y: 24.5), controlPoint1: NSPoint(x: 24.5, y: 20.25), controlPoint2: NSPoint(x: 20.25, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 15), controlPoint1: NSPoint(x: 9.75, y: 24.5), controlPoint2: NSPoint(x: 5.5, y: 20.25))
        pathPath.curve(to: NSPoint(x: 15, y: 5.5), controlPoint1: NSPoint(x: 5.5, y: 9.75), controlPoint2: NSPoint(x: 9.75, y: 5.5))
        pathPath.line(to: NSPoint(x: 15, y: 5.5))
        pathPath.line(to: NSPoint(x: 15, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 6.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 15), controlPoint1: NSPoint(x: 19.69, y: 6.5), controlPoint2: NSPoint(x: 23.5, y: 10.31))
        pathPath.curve(to: NSPoint(x: 15, y: 23.5), controlPoint1: NSPoint(x: 23.5, y: 19.69), controlPoint2: NSPoint(x: 19.69, y: 23.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 15), controlPoint1: NSPoint(x: 10.31, y: 23.5), controlPoint2: NSPoint(x: 6.5, y: 19.69))
        pathPath.curve(to: NSPoint(x: 15, y: 6.5), controlPoint1: NSPoint(x: 6.5, y: 10.31), controlPoint2: NSPoint(x: 10.31, y: 6.5))
        pathPath.line(to: NSPoint(x: 15, y: 6.5))
        pathPath.line(to: NSPoint(x: 15, y: 6.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 17.5))
        pathPath.curve(to: NSPoint(x: 16.5, y: 19), controlPoint1: NSPoint(x: 15.83, y: 17.5), controlPoint2: NSPoint(x: 16.5, y: 18.17))
        pathPath.curve(to: NSPoint(x: 15, y: 20.5), controlPoint1: NSPoint(x: 16.5, y: 19.83), controlPoint2: NSPoint(x: 15.83, y: 20.5))
        pathPath.curve(to: NSPoint(x: 13.5, y: 19), controlPoint1: NSPoint(x: 14.17, y: 20.5), controlPoint2: NSPoint(x: 13.5, y: 19.83))
        pathPath.curve(to: NSPoint(x: 15, y: 17.5), controlPoint1: NSPoint(x: 13.5, y: 18.17), controlPoint2: NSPoint(x: 14.17, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 17.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawInformation2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 15.75))
        pathPath.line(to: NSPoint(x: 15.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 2.5))
        pathPath.curve(to: NSPoint(x: 27.5, y: 15), controlPoint1: NSPoint(x: 21.9, y: 2.5), controlPoint2: NSPoint(x: 27.5, y: 8.1))
        pathPath.curve(to: NSPoint(x: 15, y: 27.5), controlPoint1: NSPoint(x: 27.5, y: 21.9), controlPoint2: NSPoint(x: 21.9, y: 27.5))
        pathPath.curve(to: NSPoint(x: 2.5, y: 15), controlPoint1: NSPoint(x: 8.1, y: 27.5), controlPoint2: NSPoint(x: 2.5, y: 21.9))
        pathPath.curve(to: NSPoint(x: 15, y: 2.5), controlPoint1: NSPoint(x: 2.5, y: 8.1), controlPoint2: NSPoint(x: 8.1, y: 2.5))
        pathPath.line(to: NSPoint(x: 15, y: 2.5))
        pathPath.line(to: NSPoint(x: 15, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 3.5))
        pathPath.curve(to: NSPoint(x: 26.5, y: 15), controlPoint1: NSPoint(x: 21.35, y: 3.5), controlPoint2: NSPoint(x: 26.5, y: 8.65))
        pathPath.curve(to: NSPoint(x: 15, y: 26.5), controlPoint1: NSPoint(x: 26.5, y: 21.35), controlPoint2: NSPoint(x: 21.35, y: 26.5))
        pathPath.curve(to: NSPoint(x: 3.5, y: 15), controlPoint1: NSPoint(x: 8.65, y: 26.5), controlPoint2: NSPoint(x: 3.5, y: 21.35))
        pathPath.curve(to: NSPoint(x: 15, y: 3.5), controlPoint1: NSPoint(x: 3.5, y: 8.65), controlPoint2: NSPoint(x: 8.65, y: 3.5))
        pathPath.line(to: NSPoint(x: 15, y: 3.5))
        pathPath.line(to: NSPoint(x: 15, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 18.5))
        pathPath.curve(to: NSPoint(x: 16.5, y: 20), controlPoint1: NSPoint(x: 15.83, y: 18.5), controlPoint2: NSPoint(x: 16.5, y: 19.17))
        pathPath.curve(to: NSPoint(x: 15, y: 21.5), controlPoint1: NSPoint(x: 16.5, y: 20.83), controlPoint2: NSPoint(x: 15.83, y: 21.5))
        pathPath.curve(to: NSPoint(x: 13.5, y: 20), controlPoint1: NSPoint(x: 14.17, y: 21.5), controlPoint2: NSPoint(x: 13.5, y: 20.83))
        pathPath.curve(to: NSPoint(x: 15, y: 18.5), controlPoint1: NSPoint(x: 13.5, y: 19.17), controlPoint2: NSPoint(x: 14.17, y: 18.5))
        pathPath.line(to: NSPoint(x: 15, y: 18.5))
        pathPath.line(to: NSPoint(x: 15, y: 18.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBook(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 16, y: 22.5))
        pathPath.line(to: NSPoint(x: 24, y: 22.5))
        pathPath.line(to: NSPoint(x: 24, y: 3.5))
        pathPath.line(to: NSPoint(x: 10, y: 3.5))
        pathPath.line(to: NSPoint(x: 10, y: 22.5))
        pathPath.line(to: NSPoint(x: 16, y: 22.5))
        pathPath.line(to: NSPoint(x: 16, y: 22.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 25, y: 2.5))
        pathPath.line(to: NSPoint(x: 7.99, y: 2.5))
        pathPath.curve(to: NSPoint(x: 5, y: 5.5), controlPoint1: NSPoint(x: 6.34, y: 2.5), controlPoint2: NSPoint(x: 5, y: 3.84))
        pathPath.line(to: NSPoint(x: 5, y: 25))
        pathPath.curve(to: NSPoint(x: 7.49, y: 27.5), controlPoint1: NSPoint(x: 5, y: 26.39), controlPoint2: NSPoint(x: 6.12, y: 27.5))
        pathPath.line(to: NSPoint(x: 25, y: 27.5))
        pathPath.line(to: NSPoint(x: 25, y: 26.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 23, y: 25), controlPoint1: NSPoint(x: 23.68, y: 26.5), controlPoint2: NSPoint(x: 23, y: 25.83))
        pathPath.curve(to: NSPoint(x: 24.5, y: 23.5), controlPoint1: NSPoint(x: 23, y: 24.17), controlPoint2: NSPoint(x: 23.67, y: 23.5))
        pathPath.line(to: NSPoint(x: 25, y: 23.5))
        pathPath.line(to: NSPoint(x: 25, y: 2.5))
        pathPath.line(to: NSPoint(x: 25, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9, y: 3.5))
        pathPath.line(to: NSPoint(x: 8, y: 3.5))
        pathPath.curve(to: NSPoint(x: 6, y: 5.49), controlPoint1: NSPoint(x: 6.89, y: 3.5), controlPoint2: NSPoint(x: 6, y: 4.39))
        pathPath.line(to: NSPoint(x: 6, y: 23))
        pathPath.curve(to: NSPoint(x: 7.49, y: 22.5), controlPoint1: NSPoint(x: 6.42, y: 22.69), controlPoint2: NSPoint(x: 6.93, y: 22.5))
        pathPath.line(to: NSPoint(x: 9, y: 22.5))
        pathPath.line(to: NSPoint(x: 9, y: 3.5))
        pathPath.line(to: NSPoint(x: 9, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.49, y: 26.5))
        pathPath.curve(to: NSPoint(x: 6, y: 25), controlPoint1: NSPoint(x: 6.67, y: 26.5), controlPoint2: NSPoint(x: 6, y: 25.83))
        pathPath.curve(to: NSPoint(x: 7.49, y: 23.5), controlPoint1: NSPoint(x: 6, y: 24.17), controlPoint2: NSPoint(x: 6.67, y: 23.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 23.5))
        pathPath.curve(to: NSPoint(x: 22, y: 25.03), controlPoint1: NSPoint(x: 22.5, y: 23.5), controlPoint2: NSPoint(x: 22, y: 24.29))
        pathPath.curve(to: NSPoint(x: 22.5, y: 26.5), controlPoint1: NSPoint(x: 22, y: 25.76), controlPoint2: NSPoint(x: 22.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 7.49, y: 26.5))
        pathPath.line(to: NSPoint(x: 7.49, y: 26.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBookBookmark(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 25, y: 2.5))
        pathPath.line(to: NSPoint(x: 7.99, y: 2.5))
        pathPath.curve(to: NSPoint(x: 5, y: 5.5), controlPoint1: NSPoint(x: 6.34, y: 2.5), controlPoint2: NSPoint(x: 5, y: 3.84))
        pathPath.line(to: NSPoint(x: 5, y: 25))
        pathPath.curve(to: NSPoint(x: 7.49, y: 27.5), controlPoint1: NSPoint(x: 5, y: 26.39), controlPoint2: NSPoint(x: 6.12, y: 27.5))
        pathPath.line(to: NSPoint(x: 25, y: 27.5))
        pathPath.line(to: NSPoint(x: 25, y: 26.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 23, y: 25), controlPoint1: NSPoint(x: 23.68, y: 26.5), controlPoint2: NSPoint(x: 23, y: 25.83))
        pathPath.curve(to: NSPoint(x: 24.5, y: 23.5), controlPoint1: NSPoint(x: 23, y: 24.17), controlPoint2: NSPoint(x: 23.67, y: 23.5))
        pathPath.line(to: NSPoint(x: 25, y: 23.5))
        pathPath.line(to: NSPoint(x: 25, y: 2.5))
        pathPath.line(to: NSPoint(x: 25, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24, y: 22.5))
        pathPath.line(to: NSPoint(x: 24, y: 3.5))
        pathPath.line(to: NSPoint(x: 10, y: 3.5))
        pathPath.line(to: NSPoint(x: 10, y: 22.5))
        pathPath.line(to: NSPoint(x: 14, y: 22.5))
        pathPath.line(to: NSPoint(x: 14, y: 11.5))
        pathPath.line(to: NSPoint(x: 17, y: 14.5))
        pathPath.line(to: NSPoint(x: 20, y: 11.5))
        pathPath.line(to: NSPoint(x: 20, y: 22.5))
        pathPath.line(to: NSPoint(x: 24, y: 22.5))
        pathPath.line(to: NSPoint(x: 24, y: 22.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9, y: 3.5))
        pathPath.line(to: NSPoint(x: 8, y: 3.5))
        pathPath.curve(to: NSPoint(x: 6, y: 5.49), controlPoint1: NSPoint(x: 6.89, y: 3.5), controlPoint2: NSPoint(x: 6, y: 4.39))
        pathPath.line(to: NSPoint(x: 6, y: 23))
        pathPath.curve(to: NSPoint(x: 7.49, y: 22.5), controlPoint1: NSPoint(x: 6.42, y: 22.69), controlPoint2: NSPoint(x: 6.93, y: 22.5))
        pathPath.line(to: NSPoint(x: 9, y: 22.5))
        pathPath.line(to: NSPoint(x: 9, y: 3.5))
        pathPath.line(to: NSPoint(x: 9, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.49, y: 26.5))
        pathPath.curve(to: NSPoint(x: 6, y: 25), controlPoint1: NSPoint(x: 6.67, y: 26.5), controlPoint2: NSPoint(x: 6, y: 25.83))
        pathPath.curve(to: NSPoint(x: 7.49, y: 23.5), controlPoint1: NSPoint(x: 6, y: 24.17), controlPoint2: NSPoint(x: 6.67, y: 23.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 23.5))
        pathPath.curve(to: NSPoint(x: 22, y: 25.03), controlPoint1: NSPoint(x: 22.5, y: 23.5), controlPoint2: NSPoint(x: 22, y: 24.29))
        pathPath.curve(to: NSPoint(x: 22.5, y: 26.5), controlPoint1: NSPoint(x: 22, y: 25.76), controlPoint2: NSPoint(x: 22.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 7.49, y: 26.5))
        pathPath.line(to: NSPoint(x: 7.49, y: 26.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 22.5))
        pathPath.line(to: NSPoint(x: 15, y: 13.9))
        pathPath.line(to: NSPoint(x: 17, y: 15.9))
        pathPath.line(to: NSPoint(x: 19, y: 13.9))
        pathPath.line(to: NSPoint(x: 19, y: 22.5))
        pathPath.line(to: NSPoint(x: 15, y: 22.5))
        pathPath.line(to: NSPoint(x: 15, y: 22.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClipboardEdit(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.8, y: 17.85))
        pathPath.line(to: NSPoint(x: 13.58, y: 6.55))
        pathPath.line(to: NSPoint(x: 13.58, y: 6.55))
        pathPath.line(to: NSPoint(x: 10.99, y: 9.16))
        pathPath.line(to: NSPoint(x: 22.21, y: 20.45))
        pathPath.line(to: NSPoint(x: 24.8, y: 17.85))
        pathPath.line(to: NSPoint(x: 24.8, y: 17.85))
        pathPath.line(to: NSPoint(x: 24.8, y: 17.85))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 25.5, y: 18.56))
        pathPath.line(to: NSPoint(x: 27.22, y: 20.29))
        pathPath.curve(to: NSPoint(x: 27.21, y: 21.7), controlPoint1: NSPoint(x: 27.6, y: 20.68), controlPoint2: NSPoint(x: 27.6, y: 21.31))
        pathPath.line(to: NSPoint(x: 26.04, y: 22.88))
        pathPath.curve(to: NSPoint(x: 24.63, y: 22.88), controlPoint1: NSPoint(x: 25.65, y: 23.27), controlPoint2: NSPoint(x: 25.02, y: 23.28))
        pathPath.line(to: NSPoint(x: 22.92, y: 21.16))
        pathPath.line(to: NSPoint(x: 25.5, y: 18.56))
        pathPath.line(to: NSPoint(x: 25.5, y: 18.56))
        pathPath.line(to: NSPoint(x: 25.5, y: 18.56))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.35, y: 8.39))
        pathPath.line(to: NSPoint(x: 9.71, y: 5.28))
        pathPath.line(to: NSPoint(x: 12.83, y: 5.89))
        pathPath.line(to: NSPoint(x: 10.35, y: 8.39))
        pathPath.line(to: NSPoint(x: 10.35, y: 8.39))
        pathPath.line(to: NSPoint(x: 10.35, y: 8.39))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.38, y: 12))
        pathPath.line(to: NSPoint(x: 20.38, y: 2))
        pathPath.curve(to: NSPoint(x: 18.4, y: 0), controlPoint1: NSPoint(x: 20.38, y: 0.89), controlPoint2: NSPoint(x: 19.49, y: 0))
        pathPath.line(to: NSPoint(x: 3.48, y: 0))
        pathPath.curve(to: NSPoint(x: 1.5, y: 2), controlPoint1: NSPoint(x: 2.39, y: 0), controlPoint2: NSPoint(x: 1.5, y: 0.9))
        pathPath.line(to: NSPoint(x: 1.5, y: 23))
        pathPath.curve(to: NSPoint(x: 3.48, y: 25), controlPoint1: NSPoint(x: 1.5, y: 24.11), controlPoint2: NSPoint(x: 2.39, y: 25))
        pathPath.line(to: NSPoint(x: 4.48, y: 25))
        pathPath.curve(to: NSPoint(x: 6.47, y: 27), controlPoint1: NSPoint(x: 4.48, y: 26.11), controlPoint2: NSPoint(x: 5.37, y: 27))
        pathPath.line(to: NSPoint(x: 7.46, y: 27))
        pathPath.line(to: NSPoint(x: 7.46, y: 27))
        pathPath.curve(to: NSPoint(x: 10.45, y: 30), controlPoint1: NSPoint(x: 7.46, y: 28.66), controlPoint2: NSPoint(x: 8.8, y: 30))
        pathPath.line(to: NSPoint(x: 11.43, y: 30))
        pathPath.curve(to: NSPoint(x: 14.42, y: 27), controlPoint1: NSPoint(x: 13.08, y: 30), controlPoint2: NSPoint(x: 14.42, y: 28.66))
        pathPath.line(to: NSPoint(x: 15.41, y: 27))
        pathPath.curve(to: NSPoint(x: 17.4, y: 25), controlPoint1: NSPoint(x: 16.51, y: 27), controlPoint2: NSPoint(x: 17.4, y: 26.11))
        pathPath.line(to: NSPoint(x: 17.4, y: 25))
        pathPath.line(to: NSPoint(x: 18.4, y: 25))
        pathPath.curve(to: NSPoint(x: 20.38, y: 23), controlPoint1: NSPoint(x: 19.5, y: 25), controlPoint2: NSPoint(x: 20.38, y: 24.1))
        pathPath.line(to: NSPoint(x: 20.38, y: 20))
        pathPath.line(to: NSPoint(x: 23.94, y: 23.58))
        pathPath.curve(to: NSPoint(x: 26.75, y: 23.59), controlPoint1: NSPoint(x: 24.73, y: 24.37), controlPoint2: NSPoint(x: 25.98, y: 24.37))
        pathPath.line(to: NSPoint(x: 27.92, y: 22.41))
        pathPath.curve(to: NSPoint(x: 27.91, y: 19.58), controlPoint1: NSPoint(x: 28.69, y: 21.63), controlPoint2: NSPoint(x: 28.69, y: 20.36))
        pathPath.line(to: NSPoint(x: 20.38, y: 12))
        pathPath.line(to: NSPoint(x: 20.38, y: 12))
        pathPath.line(to: NSPoint(x: 20.38, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.39, y: 19))
        pathPath.line(to: NSPoint(x: 19.39, y: 23))
        pathPath.curve(to: NSPoint(x: 18.39, y: 24), controlPoint1: NSPoint(x: 19.39, y: 23.55), controlPoint2: NSPoint(x: 18.94, y: 24))
        pathPath.line(to: NSPoint(x: 17.4, y: 24))
        pathPath.line(to: NSPoint(x: 17.4, y: 24))
        pathPath.curve(to: NSPoint(x: 15.41, y: 22), controlPoint1: NSPoint(x: 17.4, y: 22.89), controlPoint2: NSPoint(x: 16.51, y: 22))
        pathPath.line(to: NSPoint(x: 6.47, y: 22))
        pathPath.curve(to: NSPoint(x: 4.48, y: 24), controlPoint1: NSPoint(x: 5.37, y: 22), controlPoint2: NSPoint(x: 4.48, y: 22.89))
        pathPath.line(to: NSPoint(x: 3.49, y: 24))
        pathPath.curve(to: NSPoint(x: 2.49, y: 23), controlPoint1: NSPoint(x: 2.94, y: 24), controlPoint2: NSPoint(x: 2.49, y: 23.56))
        pathPath.line(to: NSPoint(x: 2.49, y: 2))
        pathPath.curve(to: NSPoint(x: 3.49, y: 1), controlPoint1: NSPoint(x: 2.49, y: 1.45), controlPoint2: NSPoint(x: 2.95, y: 1))
        pathPath.line(to: NSPoint(x: 18.39, y: 1))
        pathPath.curve(to: NSPoint(x: 19.39, y: 2), controlPoint1: NSPoint(x: 18.94, y: 1), controlPoint2: NSPoint(x: 19.39, y: 1.44))
        pathPath.line(to: NSPoint(x: 19.39, y: 11))
        pathPath.line(to: NSPoint(x: 13.42, y: 5))
        pathPath.line(to: NSPoint(x: 8.46, y: 4))
        pathPath.line(to: NSPoint(x: 9.45, y: 9))
        pathPath.line(to: NSPoint(x: 19.39, y: 19))
        pathPath.line(to: NSPoint(x: 19.39, y: 19))
        pathPath.line(to: NSPoint(x: 19.39, y: 19))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.46, y: 26))
        pathPath.line(to: NSPoint(x: 8.46, y: 27))
        pathPath.curve(to: NSPoint(x: 10.45, y: 29), controlPoint1: NSPoint(x: 8.46, y: 28.1), controlPoint2: NSPoint(x: 9.35, y: 29))
        pathPath.line(to: NSPoint(x: 11.43, y: 29))
        pathPath.curve(to: NSPoint(x: 13.42, y: 27), controlPoint1: NSPoint(x: 12.54, y: 29), controlPoint2: NSPoint(x: 13.42, y: 28.11))
        pathPath.line(to: NSPoint(x: 13.42, y: 26))
        pathPath.line(to: NSPoint(x: 15.42, y: 26))
        pathPath.curve(to: NSPoint(x: 16.41, y: 25), controlPoint1: NSPoint(x: 15.96, y: 26), controlPoint2: NSPoint(x: 16.41, y: 25.55))
        pathPath.line(to: NSPoint(x: 16.41, y: 24))
        pathPath.curve(to: NSPoint(x: 15.42, y: 23), controlPoint1: NSPoint(x: 16.41, y: 23.44), controlPoint2: NSPoint(x: 15.96, y: 23))
        pathPath.line(to: NSPoint(x: 6.46, y: 23))
        pathPath.curve(to: NSPoint(x: 5.47, y: 24), controlPoint1: NSPoint(x: 5.92, y: 23), controlPoint2: NSPoint(x: 5.47, y: 23.45))
        pathPath.line(to: NSPoint(x: 5.47, y: 25))
        pathPath.curve(to: NSPoint(x: 6.46, y: 26), controlPoint1: NSPoint(x: 5.47, y: 25.56), controlPoint2: NSPoint(x: 5.92, y: 26))
        pathPath.line(to: NSPoint(x: 8.46, y: 26))
        pathPath.line(to: NSPoint(x: 8.46, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.94, y: 26))
        pathPath.curve(to: NSPoint(x: 11.44, y: 26.5), controlPoint1: NSPoint(x: 11.21, y: 26), controlPoint2: NSPoint(x: 11.44, y: 26.22))
        pathPath.curve(to: NSPoint(x: 10.94, y: 27), controlPoint1: NSPoint(x: 11.44, y: 26.78), controlPoint2: NSPoint(x: 11.21, y: 27))
        pathPath.curve(to: NSPoint(x: 10.44, y: 26.5), controlPoint1: NSPoint(x: 10.67, y: 27), controlPoint2: NSPoint(x: 10.44, y: 26.78))
        pathPath.curve(to: NSPoint(x: 10.94, y: 26), controlPoint1: NSPoint(x: 10.44, y: 26.22), controlPoint2: NSPoint(x: 10.67, y: 26))
        pathPath.line(to: NSPoint(x: 10.94, y: 26))
        pathPath.line(to: NSPoint(x: 10.94, y: 26))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClipboardAdd(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 19.77, y: 5.62))
        pathPath.line(to: NSPoint(x: 19.77, y: 8.44))
        pathPath.line(to: NSPoint(x: 20.73, y: 8.44))
        pathPath.line(to: NSPoint(x: 20.73, y: 5.62))
        pathPath.line(to: NSPoint(x: 23.59, y: 5.62))
        pathPath.line(to: NSPoint(x: 23.59, y: 4.69))
        pathPath.line(to: NSPoint(x: 20.73, y: 4.69))
        pathPath.line(to: NSPoint(x: 20.73, y: 1.88))
        pathPath.line(to: NSPoint(x: 19.77, y: 1.88))
        pathPath.line(to: NSPoint(x: 19.77, y: 4.69))
        pathPath.line(to: NSPoint(x: 16.91, y: 4.69))
        pathPath.line(to: NSPoint(x: 16.91, y: 5.62))
        pathPath.line(to: NSPoint(x: 19.77, y: 5.62))
        pathPath.line(to: NSPoint(x: 19.77, y: 5.62))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.2, y: 1.88))
        pathPath.line(to: NSPoint(x: 6.41, y: 1.88))
        pathPath.curve(to: NSPoint(x: 4.5, y: 3.75), controlPoint1: NSPoint(x: 5.35, y: 1.88), controlPoint2: NSPoint(x: 4.5, y: 2.72))
        pathPath.line(to: NSPoint(x: 4.5, y: 23.43))
        pathPath.curve(to: NSPoint(x: 6.41, y: 25.31), controlPoint1: NSPoint(x: 4.5, y: 24.48), controlPoint2: NSPoint(x: 5.35, y: 25.31))
        pathPath.line(to: NSPoint(x: 7.36, y: 25.31))
        pathPath.curve(to: NSPoint(x: 9.28, y: 27.19), controlPoint1: NSPoint(x: 7.37, y: 26.35), controlPoint2: NSPoint(x: 8.22, y: 27.19))
        pathPath.line(to: NSPoint(x: 10.23, y: 27.19))
        pathPath.line(to: NSPoint(x: 10.23, y: 27.19))
        pathPath.curve(to: NSPoint(x: 13.1, y: 30), controlPoint1: NSPoint(x: 10.23, y: 28.75), controlPoint2: NSPoint(x: 11.51, y: 30))
        pathPath.line(to: NSPoint(x: 14.04, y: 30))
        pathPath.curve(to: NSPoint(x: 16.91, y: 27.19), controlPoint1: NSPoint(x: 15.62, y: 30), controlPoint2: NSPoint(x: 16.91, y: 28.74))
        pathPath.line(to: NSPoint(x: 17.86, y: 27.19))
        pathPath.curve(to: NSPoint(x: 19.77, y: 25.31), controlPoint1: NSPoint(x: 18.92, y: 27.19), controlPoint2: NSPoint(x: 19.77, y: 26.35))
        pathPath.line(to: NSPoint(x: 19.77, y: 25.31))
        pathPath.line(to: NSPoint(x: 20.73, y: 25.31))
        pathPath.curve(to: NSPoint(x: 22.64, y: 23.43), controlPoint1: NSPoint(x: 21.79, y: 25.31), controlPoint2: NSPoint(x: 22.64, y: 24.47))
        pathPath.line(to: NSPoint(x: 22.64, y: 9.75))
        pathPath.curve(to: NSPoint(x: 25.5, y: 5.16), controlPoint1: NSPoint(x: 24.34, y: 8.9), controlPoint2: NSPoint(x: 25.5, y: 7.16))
        pathPath.curve(to: NSPoint(x: 20.25, y: 0), controlPoint1: NSPoint(x: 25.5, y: 2.31), controlPoint2: NSPoint(x: 23.15, y: 0))
        pathPath.curve(to: NSPoint(x: 16.2, y: 1.88), controlPoint1: NSPoint(x: 18.62, y: 0), controlPoint2: NSPoint(x: 17.16, y: 0.73))
        pathPath.line(to: NSPoint(x: 16.2, y: 1.88))
        pathPath.line(to: NSPoint(x: 16.2, y: 1.88))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.68, y: 10.12))
        pathPath.line(to: NSPoint(x: 21.68, y: 23.43))
        pathPath.curve(to: NSPoint(x: 20.73, y: 24.38), controlPoint1: NSPoint(x: 21.68, y: 23.95), controlPoint2: NSPoint(x: 21.25, y: 24.38))
        pathPath.line(to: NSPoint(x: 19.77, y: 24.38))
        pathPath.line(to: NSPoint(x: 19.77, y: 24.38))
        pathPath.curve(to: NSPoint(x: 17.86, y: 22.5), controlPoint1: NSPoint(x: 19.77, y: 23.34), controlPoint2: NSPoint(x: 18.92, y: 22.5))
        pathPath.line(to: NSPoint(x: 9.28, y: 22.5))
        pathPath.curve(to: NSPoint(x: 7.36, y: 24.38), controlPoint1: NSPoint(x: 8.22, y: 22.5), controlPoint2: NSPoint(x: 7.37, y: 23.34))
        pathPath.line(to: NSPoint(x: 6.41, y: 24.38))
        pathPath.curve(to: NSPoint(x: 5.45, y: 23.43), controlPoint1: NSPoint(x: 5.88, y: 24.38), controlPoint2: NSPoint(x: 5.45, y: 23.96))
        pathPath.line(to: NSPoint(x: 5.45, y: 3.75))
        pathPath.curve(to: NSPoint(x: 6.41, y: 2.81), controlPoint1: NSPoint(x: 5.45, y: 3.23), controlPoint2: NSPoint(x: 5.89, y: 2.81))
        pathPath.line(to: NSPoint(x: 15.57, y: 2.81))
        pathPath.curve(to: NSPoint(x: 15, y: 5.16), controlPoint1: NSPoint(x: 15.21, y: 3.52), controlPoint2: NSPoint(x: 15, y: 4.31))
        pathPath.curve(to: NSPoint(x: 20.25, y: 10.31), controlPoint1: NSPoint(x: 15, y: 8), controlPoint2: NSPoint(x: 17.35, y: 10.31))
        pathPath.curve(to: NSPoint(x: 21.68, y: 10.12), controlPoint1: NSPoint(x: 20.75, y: 10.31), controlPoint2: NSPoint(x: 21.23, y: 10.24))
        pathPath.line(to: NSPoint(x: 21.68, y: 10.12))
        pathPath.line(to: NSPoint(x: 21.68, y: 10.12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.18, y: 26.25))
        pathPath.line(to: NSPoint(x: 11.18, y: 27.19))
        pathPath.curve(to: NSPoint(x: 13.1, y: 29.06), controlPoint1: NSPoint(x: 11.18, y: 28.22), controlPoint2: NSPoint(x: 12.04, y: 29.06))
        pathPath.line(to: NSPoint(x: 14.04, y: 29.06))
        pathPath.curve(to: NSPoint(x: 15.95, y: 27.19), controlPoint1: NSPoint(x: 15.1, y: 29.06), controlPoint2: NSPoint(x: 15.95, y: 28.22))
        pathPath.line(to: NSPoint(x: 15.95, y: 26.25))
        pathPath.line(to: NSPoint(x: 17.87, y: 26.25))
        pathPath.curve(to: NSPoint(x: 18.82, y: 25.31), controlPoint1: NSPoint(x: 18.39, y: 26.25), controlPoint2: NSPoint(x: 18.82, y: 25.83))
        pathPath.line(to: NSPoint(x: 18.82, y: 24.37))
        pathPath.curve(to: NSPoint(x: 17.87, y: 23.44), controlPoint1: NSPoint(x: 18.82, y: 23.85), controlPoint2: NSPoint(x: 18.39, y: 23.44))
        pathPath.line(to: NSPoint(x: 9.27, y: 23.44))
        pathPath.curve(to: NSPoint(x: 8.32, y: 24.37), controlPoint1: NSPoint(x: 8.74, y: 23.44), controlPoint2: NSPoint(x: 8.32, y: 23.86))
        pathPath.line(to: NSPoint(x: 8.32, y: 25.31))
        pathPath.curve(to: NSPoint(x: 9.27, y: 26.25), controlPoint1: NSPoint(x: 8.32, y: 25.84), controlPoint2: NSPoint(x: 8.74, y: 26.25))
        pathPath.line(to: NSPoint(x: 11.18, y: 26.25))
        pathPath.line(to: NSPoint(x: 11.18, y: 26.25))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.57, y: 26.25))
        pathPath.curve(to: NSPoint(x: 14.05, y: 26.72), controlPoint1: NSPoint(x: 13.83, y: 26.25), controlPoint2: NSPoint(x: 14.05, y: 26.46))
        pathPath.curve(to: NSPoint(x: 13.57, y: 27.19), controlPoint1: NSPoint(x: 14.05, y: 26.98), controlPoint2: NSPoint(x: 13.83, y: 27.19))
        pathPath.curve(to: NSPoint(x: 13.09, y: 26.72), controlPoint1: NSPoint(x: 13.3, y: 27.19), controlPoint2: NSPoint(x: 13.09, y: 26.98))
        pathPath.curve(to: NSPoint(x: 13.57, y: 26.25), controlPoint1: NSPoint(x: 13.09, y: 26.46), controlPoint2: NSPoint(x: 13.3, y: 26.25))
        pathPath.line(to: NSPoint(x: 13.57, y: 26.25))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.25, y: 0.94))
        pathPath.curve(to: NSPoint(x: 24.55, y: 5.16), controlPoint1: NSPoint(x: 22.62, y: 0.94), controlPoint2: NSPoint(x: 24.55, y: 2.83))
        pathPath.curve(to: NSPoint(x: 20.25, y: 9.38), controlPoint1: NSPoint(x: 24.55, y: 7.49), controlPoint2: NSPoint(x: 22.62, y: 9.38))
        pathPath.curve(to: NSPoint(x: 15.95, y: 5.16), controlPoint1: NSPoint(x: 17.88, y: 9.38), controlPoint2: NSPoint(x: 15.95, y: 7.49))
        pathPath.curve(to: NSPoint(x: 20.25, y: 0.94), controlPoint1: NSPoint(x: 15.95, y: 2.83), controlPoint2: NSPoint(x: 17.88, y: 0.94))
        pathPath.line(to: NSPoint(x: 20.25, y: 0.94))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClipboardRemove(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 16.14, y: 1.88))
        pathPath.line(to: NSPoint(x: 6.82, y: 1.88))
        pathPath.curve(to: NSPoint(x: 5, y: 3.75), controlPoint1: NSPoint(x: 5.81, y: 1.88), controlPoint2: NSPoint(x: 5, y: 2.72))
        pathPath.line(to: NSPoint(x: 5, y: 23.43))
        pathPath.curve(to: NSPoint(x: 6.82, y: 25.31), controlPoint1: NSPoint(x: 5, y: 24.48), controlPoint2: NSPoint(x: 5.81, y: 25.31))
        pathPath.line(to: NSPoint(x: 7.73, y: 25.31))
        pathPath.curve(to: NSPoint(x: 9.55, y: 27.19), controlPoint1: NSPoint(x: 7.73, y: 26.35), controlPoint2: NSPoint(x: 8.54, y: 27.19))
        pathPath.line(to: NSPoint(x: 10.45, y: 27.19))
        pathPath.line(to: NSPoint(x: 10.45, y: 27.19))
        pathPath.curve(to: NSPoint(x: 13.19, y: 30), controlPoint1: NSPoint(x: 10.46, y: 28.75), controlPoint2: NSPoint(x: 11.68, y: 30))
        pathPath.line(to: NSPoint(x: 14.08, y: 30))
        pathPath.curve(to: NSPoint(x: 16.82, y: 27.19), controlPoint1: NSPoint(x: 15.59, y: 30), controlPoint2: NSPoint(x: 16.82, y: 28.74))
        pathPath.line(to: NSPoint(x: 17.72, y: 27.19))
        pathPath.curve(to: NSPoint(x: 19.55, y: 25.31), controlPoint1: NSPoint(x: 18.73, y: 27.19), controlPoint2: NSPoint(x: 19.54, y: 26.35))
        pathPath.line(to: NSPoint(x: 19.55, y: 25.31))
        pathPath.line(to: NSPoint(x: 20.46, y: 25.31))
        pathPath.curve(to: NSPoint(x: 22.27, y: 23.43), controlPoint1: NSPoint(x: 21.46, y: 25.31), controlPoint2: NSPoint(x: 22.27, y: 24.47))
        pathPath.line(to: NSPoint(x: 22.27, y: 9.75))
        pathPath.curve(to: NSPoint(x: 25, y: 5.16), controlPoint1: NSPoint(x: 23.89, y: 8.9), controlPoint2: NSPoint(x: 25, y: 7.16))
        pathPath.curve(to: NSPoint(x: 20, y: 0), controlPoint1: NSPoint(x: 25, y: 2.31), controlPoint2: NSPoint(x: 22.76, y: 0))
        pathPath.curve(to: NSPoint(x: 16.14, y: 1.88), controlPoint1: NSPoint(x: 18.45, y: 0), controlPoint2: NSPoint(x: 17.06, y: 0.73))
        pathPath.line(to: NSPoint(x: 16.14, y: 1.88))
        pathPath.line(to: NSPoint(x: 16.14, y: 1.88))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.36, y: 10.12))
        pathPath.line(to: NSPoint(x: 21.36, y: 23.43))
        pathPath.curve(to: NSPoint(x: 20.45, y: 24.38), controlPoint1: NSPoint(x: 21.36, y: 23.95), controlPoint2: NSPoint(x: 20.95, y: 24.38))
        pathPath.line(to: NSPoint(x: 19.55, y: 24.38))
        pathPath.line(to: NSPoint(x: 19.55, y: 24.38))
        pathPath.curve(to: NSPoint(x: 17.72, y: 22.5), controlPoint1: NSPoint(x: 19.54, y: 23.34), controlPoint2: NSPoint(x: 18.73, y: 22.5))
        pathPath.line(to: NSPoint(x: 9.55, y: 22.5))
        pathPath.curve(to: NSPoint(x: 7.73, y: 24.38), controlPoint1: NSPoint(x: 8.54, y: 22.5), controlPoint2: NSPoint(x: 7.73, y: 23.34))
        pathPath.line(to: NSPoint(x: 6.82, y: 24.38))
        pathPath.curve(to: NSPoint(x: 5.91, y: 23.43), controlPoint1: NSPoint(x: 6.32, y: 24.38), controlPoint2: NSPoint(x: 5.91, y: 23.96))
        pathPath.line(to: NSPoint(x: 5.91, y: 3.75))
        pathPath.curve(to: NSPoint(x: 6.82, y: 2.81), controlPoint1: NSPoint(x: 5.91, y: 3.23), controlPoint2: NSPoint(x: 6.32, y: 2.81))
        pathPath.line(to: NSPoint(x: 15.55, y: 2.81))
        pathPath.curve(to: NSPoint(x: 15, y: 5.16), controlPoint1: NSPoint(x: 15.2, y: 3.52), controlPoint2: NSPoint(x: 15, y: 4.31))
        pathPath.curve(to: NSPoint(x: 20, y: 10.31), controlPoint1: NSPoint(x: 15, y: 8), controlPoint2: NSPoint(x: 17.24, y: 10.31))
        pathPath.curve(to: NSPoint(x: 21.36, y: 10.12), controlPoint1: NSPoint(x: 20.47, y: 10.31), controlPoint2: NSPoint(x: 20.93, y: 10.24))
        pathPath.line(to: NSPoint(x: 21.36, y: 10.12))
        pathPath.line(to: NSPoint(x: 21.36, y: 10.12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.36, y: 26.25))
        pathPath.line(to: NSPoint(x: 11.36, y: 27.19))
        pathPath.curve(to: NSPoint(x: 13.19, y: 29.06), controlPoint1: NSPoint(x: 11.36, y: 28.22), controlPoint2: NSPoint(x: 12.18, y: 29.06))
        pathPath.line(to: NSPoint(x: 14.09, y: 29.06))
        pathPath.curve(to: NSPoint(x: 15.91, y: 27.19), controlPoint1: NSPoint(x: 15.1, y: 29.06), controlPoint2: NSPoint(x: 15.91, y: 28.22))
        pathPath.line(to: NSPoint(x: 15.91, y: 26.25))
        pathPath.line(to: NSPoint(x: 17.73, y: 26.25))
        pathPath.curve(to: NSPoint(x: 18.64, y: 25.31), controlPoint1: NSPoint(x: 18.23, y: 26.25), controlPoint2: NSPoint(x: 18.64, y: 25.83))
        pathPath.line(to: NSPoint(x: 18.64, y: 24.37))
        pathPath.curve(to: NSPoint(x: 17.73, y: 23.44), controlPoint1: NSPoint(x: 18.64, y: 23.85), controlPoint2: NSPoint(x: 18.23, y: 23.44))
        pathPath.line(to: NSPoint(x: 9.54, y: 23.44))
        pathPath.curve(to: NSPoint(x: 8.64, y: 24.37), controlPoint1: NSPoint(x: 9.04, y: 23.44), controlPoint2: NSPoint(x: 8.64, y: 23.86))
        pathPath.line(to: NSPoint(x: 8.64, y: 25.31))
        pathPath.curve(to: NSPoint(x: 9.54, y: 26.25), controlPoint1: NSPoint(x: 8.64, y: 25.84), controlPoint2: NSPoint(x: 9.04, y: 26.25))
        pathPath.line(to: NSPoint(x: 11.36, y: 26.25))
        pathPath.line(to: NSPoint(x: 11.36, y: 26.25))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.64, y: 26.25))
        pathPath.curve(to: NSPoint(x: 14.09, y: 26.72), controlPoint1: NSPoint(x: 13.89, y: 26.25), controlPoint2: NSPoint(x: 14.09, y: 26.46))
        pathPath.curve(to: NSPoint(x: 13.64, y: 27.19), controlPoint1: NSPoint(x: 14.09, y: 26.98), controlPoint2: NSPoint(x: 13.89, y: 27.19))
        pathPath.curve(to: NSPoint(x: 13.18, y: 26.72), controlPoint1: NSPoint(x: 13.39, y: 27.19), controlPoint2: NSPoint(x: 13.18, y: 26.98))
        pathPath.curve(to: NSPoint(x: 13.64, y: 26.25), controlPoint1: NSPoint(x: 13.18, y: 26.46), controlPoint2: NSPoint(x: 13.39, y: 26.25))
        pathPath.line(to: NSPoint(x: 13.64, y: 26.25))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20, y: 0.94))
        pathPath.curve(to: NSPoint(x: 24.09, y: 5.16), controlPoint1: NSPoint(x: 22.26, y: 0.94), controlPoint2: NSPoint(x: 24.09, y: 2.83))
        pathPath.curve(to: NSPoint(x: 20, y: 9.38), controlPoint1: NSPoint(x: 24.09, y: 7.49), controlPoint2: NSPoint(x: 22.26, y: 9.38))
        pathPath.curve(to: NSPoint(x: 15.91, y: 5.16), controlPoint1: NSPoint(x: 17.74, y: 9.38), controlPoint2: NSPoint(x: 15.91, y: 7.49))
        pathPath.curve(to: NSPoint(x: 20, y: 0.94), controlPoint1: NSPoint(x: 15.91, y: 2.83), controlPoint2: NSPoint(x: 17.74, y: 0.94))
        pathPath.line(to: NSPoint(x: 20, y: 0.94))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.82, y: 5.62))
        pathPath.line(to: NSPoint(x: 16.82, y: 4.69))
        pathPath.line(to: NSPoint(x: 23.18, y: 4.69))
        pathPath.line(to: NSPoint(x: 23.18, y: 5.62))
        pathPath.line(to: NSPoint(x: 16.82, y: 5.62))
        pathPath.line(to: NSPoint(x: 16.82, y: 5.62))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClipboard(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 29), controlPoint1: NSPoint(x: 12.5, y: 28.1), controlPoint2: NSPoint(x: 13.4, y: 29))
        pathPath.line(to: NSPoint(x: 15.5, y: 29))
        pathPath.curve(to: NSPoint(x: 17.5, y: 27), controlPoint1: NSPoint(x: 16.61, y: 29), controlPoint2: NSPoint(x: 17.5, y: 28.11))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 19.5, y: 26))
        pathPath.curve(to: NSPoint(x: 20.5, y: 25), controlPoint1: NSPoint(x: 20.06, y: 26), controlPoint2: NSPoint(x: 20.5, y: 25.55))
        pathPath.line(to: NSPoint(x: 20.5, y: 24))
        pathPath.curve(to: NSPoint(x: 19.5, y: 23), controlPoint1: NSPoint(x: 20.5, y: 23.44), controlPoint2: NSPoint(x: 20.05, y: 23))
        pathPath.line(to: NSPoint(x: 10.5, y: 23))
        pathPath.curve(to: NSPoint(x: 9.5, y: 24), controlPoint1: NSPoint(x: 9.94, y: 23), controlPoint2: NSPoint(x: 9.5, y: 23.45))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.curve(to: NSPoint(x: 10.5, y: 26), controlPoint1: NSPoint(x: 9.5, y: 25.56), controlPoint2: NSPoint(x: 9.95, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 10.5, y: 27))
        pathPath.curve(to: NSPoint(x: 8.5, y: 25), controlPoint1: NSPoint(x: 9.4, y: 27), controlPoint2: NSPoint(x: 8.5, y: 26.11))
        pathPath.line(to: NSPoint(x: 7.5, y: 25))
        pathPath.curve(to: NSPoint(x: 5.5, y: 23), controlPoint1: NSPoint(x: 6.39, y: 25), controlPoint2: NSPoint(x: 5.5, y: 24.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 2))
        pathPath.curve(to: NSPoint(x: 7.5, y: 0), controlPoint1: NSPoint(x: 5.5, y: 0.9), controlPoint2: NSPoint(x: 6.39, y: 0))
        pathPath.line(to: NSPoint(x: 22.5, y: 0))
        pathPath.curve(to: NSPoint(x: 24.5, y: 2), controlPoint1: NSPoint(x: 23.61, y: 0), controlPoint2: NSPoint(x: 24.5, y: 0.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 23))
        pathPath.curve(to: NSPoint(x: 22.5, y: 25), controlPoint1: NSPoint(x: 24.5, y: 24.1), controlPoint2: NSPoint(x: 23.61, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.curve(to: NSPoint(x: 19.5, y: 27), controlPoint1: NSPoint(x: 21.5, y: 26.11), controlPoint2: NSPoint(x: 20.6, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.curve(to: NSPoint(x: 15.49, y: 30), controlPoint1: NSPoint(x: 18.5, y: 28.66), controlPoint2: NSPoint(x: 17.15, y: 30))
        pathPath.line(to: NSPoint(x: 14.51, y: 30))
        pathPath.curve(to: NSPoint(x: 11.5, y: 27), controlPoint1: NSPoint(x: 12.85, y: 30), controlPoint2: NSPoint(x: 11.5, y: 28.66))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 22.5, y: 24))
        pathPath.curve(to: NSPoint(x: 23.5, y: 23), controlPoint1: NSPoint(x: 23.05, y: 24), controlPoint2: NSPoint(x: 23.5, y: 23.55))
        pathPath.line(to: NSPoint(x: 23.5, y: 2))
        pathPath.curve(to: NSPoint(x: 22.5, y: 1), controlPoint1: NSPoint(x: 23.5, y: 1.44), controlPoint2: NSPoint(x: 23.05, y: 1))
        pathPath.line(to: NSPoint(x: 7.5, y: 1))
        pathPath.curve(to: NSPoint(x: 6.5, y: 2), controlPoint1: NSPoint(x: 6.95, y: 1), controlPoint2: NSPoint(x: 6.5, y: 1.45))
        pathPath.line(to: NSPoint(x: 6.5, y: 23))
        pathPath.curve(to: NSPoint(x: 7.5, y: 24), controlPoint1: NSPoint(x: 6.5, y: 23.56), controlPoint2: NSPoint(x: 6.95, y: 24))
        pathPath.line(to: NSPoint(x: 8.5, y: 24))
        pathPath.curve(to: NSPoint(x: 10.5, y: 22), controlPoint1: NSPoint(x: 8.5, y: 22.89), controlPoint2: NSPoint(x: 9.4, y: 22))
        pathPath.line(to: NSPoint(x: 19.5, y: 22))
        pathPath.curve(to: NSPoint(x: 21.5, y: 24), controlPoint1: NSPoint(x: 20.6, y: 22), controlPoint2: NSPoint(x: 21.5, y: 22.89))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 26))
        pathPath.curve(to: NSPoint(x: 15.5, y: 26.5), controlPoint1: NSPoint(x: 15.28, y: 26), controlPoint2: NSPoint(x: 15.5, y: 26.22))
        pathPath.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 15.5, y: 26.78), controlPoint2: NSPoint(x: 15.28, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 26.5), controlPoint1: NSPoint(x: 14.72, y: 27), controlPoint2: NSPoint(x: 14.5, y: 26.78))
        pathPath.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 14.5, y: 26.22), controlPoint2: NSPoint(x: 14.72, y: 26))
        pathPath.line(to: NSPoint(x: 15, y: 26))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClipboardDownload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 6.95))
        pathPath.line(to: NSPoint(x: 11.25, y: 10.2))
        pathPath.line(to: NSPoint(x: 10.5, y: 9.45))
        pathPath.line(to: NSPoint(x: 15, y: 4.95))
        pathPath.line(to: NSPoint(x: 19.5, y: 9.45))
        pathPath.line(to: NSPoint(x: 18.75, y: 10.2))
        pathPath.line(to: NSPoint(x: 15.5, y: 6.95))
        pathPath.line(to: NSPoint(x: 15.5, y: 18))
        pathPath.line(to: NSPoint(x: 14.5, y: 18))
        pathPath.line(to: NSPoint(x: 14.5, y: 6.95))
        pathPath.line(to: NSPoint(x: 14.5, y: 6.95))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 29), controlPoint1: NSPoint(x: 12.5, y: 28.1), controlPoint2: NSPoint(x: 13.4, y: 29))
        pathPath.line(to: NSPoint(x: 15.5, y: 29))
        pathPath.curve(to: NSPoint(x: 17.5, y: 27), controlPoint1: NSPoint(x: 16.61, y: 29), controlPoint2: NSPoint(x: 17.5, y: 28.11))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 19.5, y: 26))
        pathPath.curve(to: NSPoint(x: 20.5, y: 25), controlPoint1: NSPoint(x: 20.06, y: 26), controlPoint2: NSPoint(x: 20.5, y: 25.55))
        pathPath.line(to: NSPoint(x: 20.5, y: 24))
        pathPath.curve(to: NSPoint(x: 19.5, y: 23), controlPoint1: NSPoint(x: 20.5, y: 23.44), controlPoint2: NSPoint(x: 20.05, y: 23))
        pathPath.line(to: NSPoint(x: 10.5, y: 23))
        pathPath.curve(to: NSPoint(x: 9.5, y: 24), controlPoint1: NSPoint(x: 9.94, y: 23), controlPoint2: NSPoint(x: 9.5, y: 23.45))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.curve(to: NSPoint(x: 10.5, y: 26), controlPoint1: NSPoint(x: 9.5, y: 25.56), controlPoint2: NSPoint(x: 9.95, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 10.5, y: 27))
        pathPath.curve(to: NSPoint(x: 8.5, y: 25), controlPoint1: NSPoint(x: 9.4, y: 27), controlPoint2: NSPoint(x: 8.5, y: 26.11))
        pathPath.line(to: NSPoint(x: 7.5, y: 25))
        pathPath.curve(to: NSPoint(x: 5.5, y: 23), controlPoint1: NSPoint(x: 6.39, y: 25), controlPoint2: NSPoint(x: 5.5, y: 24.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 2))
        pathPath.curve(to: NSPoint(x: 7.5, y: 0), controlPoint1: NSPoint(x: 5.5, y: 0.9), controlPoint2: NSPoint(x: 6.39, y: 0))
        pathPath.line(to: NSPoint(x: 22.5, y: 0))
        pathPath.curve(to: NSPoint(x: 24.5, y: 2), controlPoint1: NSPoint(x: 23.61, y: 0), controlPoint2: NSPoint(x: 24.5, y: 0.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 23))
        pathPath.curve(to: NSPoint(x: 22.5, y: 25), controlPoint1: NSPoint(x: 24.5, y: 24.1), controlPoint2: NSPoint(x: 23.61, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.curve(to: NSPoint(x: 19.5, y: 27), controlPoint1: NSPoint(x: 21.5, y: 26.11), controlPoint2: NSPoint(x: 20.6, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.curve(to: NSPoint(x: 15.49, y: 30), controlPoint1: NSPoint(x: 18.5, y: 28.66), controlPoint2: NSPoint(x: 17.15, y: 30))
        pathPath.line(to: NSPoint(x: 14.51, y: 30))
        pathPath.curve(to: NSPoint(x: 11.5, y: 27), controlPoint1: NSPoint(x: 12.85, y: 30), controlPoint2: NSPoint(x: 11.5, y: 28.66))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 22.5, y: 24))
        pathPath.curve(to: NSPoint(x: 23.5, y: 23), controlPoint1: NSPoint(x: 23.05, y: 24), controlPoint2: NSPoint(x: 23.5, y: 23.55))
        pathPath.line(to: NSPoint(x: 23.5, y: 2))
        pathPath.curve(to: NSPoint(x: 22.5, y: 1), controlPoint1: NSPoint(x: 23.5, y: 1.44), controlPoint2: NSPoint(x: 23.05, y: 1))
        pathPath.line(to: NSPoint(x: 7.5, y: 1))
        pathPath.curve(to: NSPoint(x: 6.5, y: 2), controlPoint1: NSPoint(x: 6.95, y: 1), controlPoint2: NSPoint(x: 6.5, y: 1.45))
        pathPath.line(to: NSPoint(x: 6.5, y: 23))
        pathPath.curve(to: NSPoint(x: 7.5, y: 24), controlPoint1: NSPoint(x: 6.5, y: 23.56), controlPoint2: NSPoint(x: 6.95, y: 24))
        pathPath.line(to: NSPoint(x: 8.5, y: 24))
        pathPath.curve(to: NSPoint(x: 10.5, y: 22), controlPoint1: NSPoint(x: 8.5, y: 22.89), controlPoint2: NSPoint(x: 9.4, y: 22))
        pathPath.line(to: NSPoint(x: 19.5, y: 22))
        pathPath.curve(to: NSPoint(x: 21.5, y: 24), controlPoint1: NSPoint(x: 20.6, y: 22), controlPoint2: NSPoint(x: 21.5, y: 22.89))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 26))
        pathPath.curve(to: NSPoint(x: 15.5, y: 26.5), controlPoint1: NSPoint(x: 15.28, y: 26), controlPoint2: NSPoint(x: 15.5, y: 26.22))
        pathPath.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 15.5, y: 26.78), controlPoint2: NSPoint(x: 15.28, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 26.5), controlPoint1: NSPoint(x: 14.72, y: 27), controlPoint2: NSPoint(x: 14.5, y: 26.78))
        pathPath.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 14.5, y: 26.22), controlPoint2: NSPoint(x: 14.72, y: 26))
        pathPath.line(to: NSPoint(x: 15, y: 26))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClipboardUpload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 11))
        pathPath.line(to: NSPoint(x: 11.25, y: 7.75))
        pathPath.line(to: NSPoint(x: 10.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 15, y: 13))
        pathPath.line(to: NSPoint(x: 19.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 18.75, y: 7.75))
        pathPath.line(to: NSPoint(x: 15.5, y: 11))
        pathPath.line(to: NSPoint(x: 15.5, y: 1))
        pathPath.line(to: NSPoint(x: 14.5, y: 1))
        pathPath.line(to: NSPoint(x: 14.5, y: 11))
        pathPath.line(to: NSPoint(x: 14.5, y: 11))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 29), controlPoint1: NSPoint(x: 12.5, y: 28.1), controlPoint2: NSPoint(x: 13.4, y: 29))
        pathPath.line(to: NSPoint(x: 15.5, y: 29))
        pathPath.curve(to: NSPoint(x: 17.5, y: 27), controlPoint1: NSPoint(x: 16.61, y: 29), controlPoint2: NSPoint(x: 17.5, y: 28.11))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 19.5, y: 26))
        pathPath.curve(to: NSPoint(x: 20.5, y: 25), controlPoint1: NSPoint(x: 20.06, y: 26), controlPoint2: NSPoint(x: 20.5, y: 25.55))
        pathPath.line(to: NSPoint(x: 20.5, y: 24))
        pathPath.curve(to: NSPoint(x: 19.5, y: 23), controlPoint1: NSPoint(x: 20.5, y: 23.44), controlPoint2: NSPoint(x: 20.05, y: 23))
        pathPath.line(to: NSPoint(x: 10.5, y: 23))
        pathPath.curve(to: NSPoint(x: 9.5, y: 24), controlPoint1: NSPoint(x: 9.94, y: 23), controlPoint2: NSPoint(x: 9.5, y: 23.45))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.curve(to: NSPoint(x: 10.5, y: 26), controlPoint1: NSPoint(x: 9.5, y: 25.56), controlPoint2: NSPoint(x: 9.95, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 10.5, y: 27))
        pathPath.curve(to: NSPoint(x: 8.5, y: 25), controlPoint1: NSPoint(x: 9.4, y: 27), controlPoint2: NSPoint(x: 8.5, y: 26.11))
        pathPath.line(to: NSPoint(x: 7.5, y: 25))
        pathPath.curve(to: NSPoint(x: 5.5, y: 23), controlPoint1: NSPoint(x: 6.39, y: 25), controlPoint2: NSPoint(x: 5.5, y: 24.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 2))
        pathPath.curve(to: NSPoint(x: 7.5, y: 0), controlPoint1: NSPoint(x: 5.5, y: 0.9), controlPoint2: NSPoint(x: 6.39, y: 0))
        pathPath.line(to: NSPoint(x: 22.5, y: 0))
        pathPath.curve(to: NSPoint(x: 24.5, y: 2), controlPoint1: NSPoint(x: 23.61, y: 0), controlPoint2: NSPoint(x: 24.5, y: 0.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 23))
        pathPath.curve(to: NSPoint(x: 22.5, y: 25), controlPoint1: NSPoint(x: 24.5, y: 24.1), controlPoint2: NSPoint(x: 23.61, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.curve(to: NSPoint(x: 19.5, y: 27), controlPoint1: NSPoint(x: 21.5, y: 26.11), controlPoint2: NSPoint(x: 20.6, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.curve(to: NSPoint(x: 15.49, y: 30), controlPoint1: NSPoint(x: 18.5, y: 28.66), controlPoint2: NSPoint(x: 17.15, y: 30))
        pathPath.line(to: NSPoint(x: 14.51, y: 30))
        pathPath.curve(to: NSPoint(x: 11.5, y: 27), controlPoint1: NSPoint(x: 12.85, y: 30), controlPoint2: NSPoint(x: 11.5, y: 28.66))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 22.5, y: 24))
        pathPath.curve(to: NSPoint(x: 23.5, y: 23), controlPoint1: NSPoint(x: 23.05, y: 24), controlPoint2: NSPoint(x: 23.5, y: 23.55))
        pathPath.line(to: NSPoint(x: 23.5, y: 2))
        pathPath.curve(to: NSPoint(x: 22.5, y: 1), controlPoint1: NSPoint(x: 23.5, y: 1.44), controlPoint2: NSPoint(x: 23.05, y: 1))
        pathPath.line(to: NSPoint(x: 7.5, y: 1))
        pathPath.curve(to: NSPoint(x: 6.5, y: 2), controlPoint1: NSPoint(x: 6.95, y: 1), controlPoint2: NSPoint(x: 6.5, y: 1.45))
        pathPath.line(to: NSPoint(x: 6.5, y: 23))
        pathPath.curve(to: NSPoint(x: 7.5, y: 24), controlPoint1: NSPoint(x: 6.5, y: 23.56), controlPoint2: NSPoint(x: 6.95, y: 24))
        pathPath.line(to: NSPoint(x: 8.5, y: 24))
        pathPath.curve(to: NSPoint(x: 10.5, y: 22), controlPoint1: NSPoint(x: 8.5, y: 22.89), controlPoint2: NSPoint(x: 9.4, y: 22))
        pathPath.line(to: NSPoint(x: 19.5, y: 22))
        pathPath.curve(to: NSPoint(x: 21.5, y: 24), controlPoint1: NSPoint(x: 20.6, y: 22), controlPoint2: NSPoint(x: 21.5, y: 22.89))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 26))
        pathPath.curve(to: NSPoint(x: 15.5, y: 26.5), controlPoint1: NSPoint(x: 15.28, y: 26), controlPoint2: NSPoint(x: 15.5, y: 26.22))
        pathPath.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 15.5, y: 26.78), controlPoint2: NSPoint(x: 15.28, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 26.5), controlPoint1: NSPoint(x: 14.72, y: 27), controlPoint2: NSPoint(x: 14.5, y: 26.78))
        pathPath.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 14.5, y: 26.22), controlPoint2: NSPoint(x: 14.72, y: 26))
        pathPath.line(to: NSPoint(x: 15, y: 26))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClipboardChecked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 29), controlPoint1: NSPoint(x: 12.5, y: 28.1), controlPoint2: NSPoint(x: 13.4, y: 29))
        pathPath.line(to: NSPoint(x: 15.5, y: 29))
        pathPath.curve(to: NSPoint(x: 17.5, y: 27), controlPoint1: NSPoint(x: 16.61, y: 29), controlPoint2: NSPoint(x: 17.5, y: 28.11))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 19.5, y: 26))
        pathPath.curve(to: NSPoint(x: 20.5, y: 25), controlPoint1: NSPoint(x: 20.06, y: 26), controlPoint2: NSPoint(x: 20.5, y: 25.55))
        pathPath.line(to: NSPoint(x: 20.5, y: 24))
        pathPath.curve(to: NSPoint(x: 19.5, y: 23), controlPoint1: NSPoint(x: 20.5, y: 23.44), controlPoint2: NSPoint(x: 20.05, y: 23))
        pathPath.line(to: NSPoint(x: 10.5, y: 23))
        pathPath.curve(to: NSPoint(x: 9.5, y: 24), controlPoint1: NSPoint(x: 9.94, y: 23), controlPoint2: NSPoint(x: 9.5, y: 23.45))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.curve(to: NSPoint(x: 10.5, y: 26), controlPoint1: NSPoint(x: 9.5, y: 25.56), controlPoint2: NSPoint(x: 9.95, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 10.5, y: 27))
        pathPath.curve(to: NSPoint(x: 8.5, y: 25), controlPoint1: NSPoint(x: 9.4, y: 27), controlPoint2: NSPoint(x: 8.5, y: 26.11))
        pathPath.line(to: NSPoint(x: 7.5, y: 25))
        pathPath.curve(to: NSPoint(x: 5.5, y: 23), controlPoint1: NSPoint(x: 6.39, y: 25), controlPoint2: NSPoint(x: 5.5, y: 24.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 2))
        pathPath.curve(to: NSPoint(x: 7.5, y: 0), controlPoint1: NSPoint(x: 5.5, y: 0.9), controlPoint2: NSPoint(x: 6.39, y: 0))
        pathPath.line(to: NSPoint(x: 22.5, y: 0))
        pathPath.curve(to: NSPoint(x: 24.5, y: 2), controlPoint1: NSPoint(x: 23.61, y: 0), controlPoint2: NSPoint(x: 24.5, y: 0.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 23))
        pathPath.curve(to: NSPoint(x: 22.5, y: 25), controlPoint1: NSPoint(x: 24.5, y: 24.1), controlPoint2: NSPoint(x: 23.61, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.curve(to: NSPoint(x: 19.5, y: 27), controlPoint1: NSPoint(x: 21.5, y: 26.11), controlPoint2: NSPoint(x: 20.6, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.curve(to: NSPoint(x: 15.49, y: 30), controlPoint1: NSPoint(x: 18.5, y: 28.66), controlPoint2: NSPoint(x: 17.15, y: 30))
        pathPath.line(to: NSPoint(x: 14.51, y: 30))
        pathPath.curve(to: NSPoint(x: 11.5, y: 27), controlPoint1: NSPoint(x: 12.85, y: 30), controlPoint2: NSPoint(x: 11.5, y: 28.66))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 22.5, y: 24))
        pathPath.curve(to: NSPoint(x: 23.5, y: 23), controlPoint1: NSPoint(x: 23.05, y: 24), controlPoint2: NSPoint(x: 23.5, y: 23.55))
        pathPath.line(to: NSPoint(x: 23.5, y: 2))
        pathPath.curve(to: NSPoint(x: 22.5, y: 1), controlPoint1: NSPoint(x: 23.5, y: 1.44), controlPoint2: NSPoint(x: 23.05, y: 1))
        pathPath.line(to: NSPoint(x: 7.5, y: 1))
        pathPath.curve(to: NSPoint(x: 6.5, y: 2), controlPoint1: NSPoint(x: 6.95, y: 1), controlPoint2: NSPoint(x: 6.5, y: 1.45))
        pathPath.line(to: NSPoint(x: 6.5, y: 23))
        pathPath.curve(to: NSPoint(x: 7.5, y: 24), controlPoint1: NSPoint(x: 6.5, y: 23.56), controlPoint2: NSPoint(x: 6.95, y: 24))
        pathPath.line(to: NSPoint(x: 8.5, y: 24))
        pathPath.curve(to: NSPoint(x: 10.5, y: 22), controlPoint1: NSPoint(x: 8.5, y: 22.89), controlPoint2: NSPoint(x: 9.4, y: 22))
        pathPath.line(to: NSPoint(x: 19.5, y: 22))
        pathPath.curve(to: NSPoint(x: 21.5, y: 24), controlPoint1: NSPoint(x: 20.6, y: 22), controlPoint2: NSPoint(x: 21.5, y: 22.89))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 26))
        pathPath.curve(to: NSPoint(x: 15.5, y: 26.5), controlPoint1: NSPoint(x: 15.28, y: 26), controlPoint2: NSPoint(x: 15.5, y: 26.22))
        pathPath.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 15.5, y: 26.78), controlPoint2: NSPoint(x: 15.28, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 26.5), controlPoint1: NSPoint(x: 14.72, y: 27), controlPoint2: NSPoint(x: 14.5, y: 26.78))
        pathPath.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 14.5, y: 26.22), controlPoint2: NSPoint(x: 14.72, y: 26))
        pathPath.line(to: NSPoint(x: 15, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.75, y: 7.31))
        pathPath.line(to: NSPoint(x: 21.53, y: 15.09))
        pathPath.line(to: NSPoint(x: 20.82, y: 15.8))
        pathPath.line(to: NSPoint(x: 13.75, y: 8.73))
        pathPath.line(to: NSPoint(x: 10.01, y: 12.47))
        pathPath.line(to: NSPoint(x: 9.3, y: 11.76))
        pathPath.line(to: NSPoint(x: 13.75, y: 7.31))
        pathPath.line(to: NSPoint(x: 13.75, y: 7.31))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClipboardText(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 29), controlPoint1: NSPoint(x: 12.5, y: 28.1), controlPoint2: NSPoint(x: 13.4, y: 29))
        pathPath.line(to: NSPoint(x: 15.5, y: 29))
        pathPath.curve(to: NSPoint(x: 17.5, y: 27), controlPoint1: NSPoint(x: 16.61, y: 29), controlPoint2: NSPoint(x: 17.5, y: 28.11))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 19.5, y: 26))
        pathPath.curve(to: NSPoint(x: 20.5, y: 25), controlPoint1: NSPoint(x: 20.06, y: 26), controlPoint2: NSPoint(x: 20.5, y: 25.55))
        pathPath.line(to: NSPoint(x: 20.5, y: 24))
        pathPath.curve(to: NSPoint(x: 19.5, y: 23), controlPoint1: NSPoint(x: 20.5, y: 23.44), controlPoint2: NSPoint(x: 20.05, y: 23))
        pathPath.line(to: NSPoint(x: 10.5, y: 23))
        pathPath.curve(to: NSPoint(x: 9.5, y: 24), controlPoint1: NSPoint(x: 9.94, y: 23), controlPoint2: NSPoint(x: 9.5, y: 23.45))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.curve(to: NSPoint(x: 10.5, y: 26), controlPoint1: NSPoint(x: 9.5, y: 25.56), controlPoint2: NSPoint(x: 9.95, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 10.5, y: 27))
        pathPath.curve(to: NSPoint(x: 8.5, y: 25), controlPoint1: NSPoint(x: 9.4, y: 27), controlPoint2: NSPoint(x: 8.5, y: 26.11))
        pathPath.line(to: NSPoint(x: 7.5, y: 25))
        pathPath.curve(to: NSPoint(x: 5.5, y: 23), controlPoint1: NSPoint(x: 6.39, y: 25), controlPoint2: NSPoint(x: 5.5, y: 24.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 2))
        pathPath.curve(to: NSPoint(x: 7.5, y: 0), controlPoint1: NSPoint(x: 5.5, y: 0.9), controlPoint2: NSPoint(x: 6.39, y: 0))
        pathPath.line(to: NSPoint(x: 22.5, y: 0))
        pathPath.curve(to: NSPoint(x: 24.5, y: 2), controlPoint1: NSPoint(x: 23.61, y: 0), controlPoint2: NSPoint(x: 24.5, y: 0.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 23))
        pathPath.curve(to: NSPoint(x: 22.5, y: 25), controlPoint1: NSPoint(x: 24.5, y: 24.1), controlPoint2: NSPoint(x: 23.61, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.curve(to: NSPoint(x: 19.5, y: 27), controlPoint1: NSPoint(x: 21.5, y: 26.11), controlPoint2: NSPoint(x: 20.6, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.curve(to: NSPoint(x: 15.49, y: 30), controlPoint1: NSPoint(x: 18.5, y: 28.66), controlPoint2: NSPoint(x: 17.15, y: 30))
        pathPath.line(to: NSPoint(x: 14.51, y: 30))
        pathPath.curve(to: NSPoint(x: 11.5, y: 27), controlPoint1: NSPoint(x: 12.85, y: 30), controlPoint2: NSPoint(x: 11.5, y: 28.66))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 22.5, y: 24))
        pathPath.curve(to: NSPoint(x: 23.5, y: 23), controlPoint1: NSPoint(x: 23.05, y: 24), controlPoint2: NSPoint(x: 23.5, y: 23.55))
        pathPath.line(to: NSPoint(x: 23.5, y: 2))
        pathPath.curve(to: NSPoint(x: 22.5, y: 1), controlPoint1: NSPoint(x: 23.5, y: 1.44), controlPoint2: NSPoint(x: 23.05, y: 1))
        pathPath.line(to: NSPoint(x: 7.5, y: 1))
        pathPath.curve(to: NSPoint(x: 6.5, y: 2), controlPoint1: NSPoint(x: 6.95, y: 1), controlPoint2: NSPoint(x: 6.5, y: 1.45))
        pathPath.line(to: NSPoint(x: 6.5, y: 23))
        pathPath.curve(to: NSPoint(x: 7.5, y: 24), controlPoint1: NSPoint(x: 6.5, y: 23.56), controlPoint2: NSPoint(x: 6.95, y: 24))
        pathPath.line(to: NSPoint(x: 8.5, y: 24))
        pathPath.curve(to: NSPoint(x: 10.5, y: 22), controlPoint1: NSPoint(x: 8.5, y: 22.89), controlPoint2: NSPoint(x: 9.4, y: 22))
        pathPath.line(to: NSPoint(x: 19.5, y: 22))
        pathPath.curve(to: NSPoint(x: 21.5, y: 24), controlPoint1: NSPoint(x: 20.6, y: 22), controlPoint2: NSPoint(x: 21.5, y: 22.89))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 26))
        pathPath.curve(to: NSPoint(x: 15.5, y: 26.5), controlPoint1: NSPoint(x: 15.28, y: 26), controlPoint2: NSPoint(x: 15.5, y: 26.22))
        pathPath.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 15.5, y: 26.78), controlPoint2: NSPoint(x: 15.28, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 26.5), controlPoint1: NSPoint(x: 14.72, y: 27), controlPoint2: NSPoint(x: 14.5, y: 26.78))
        pathPath.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 14.5, y: 26.22), controlPoint2: NSPoint(x: 14.72, y: 26))
        pathPath.line(to: NSPoint(x: 15, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 18))
        pathPath.line(to: NSPoint(x: 8.5, y: 17))
        pathPath.line(to: NSPoint(x: 21.5, y: 17))
        pathPath.line(to: NSPoint(x: 21.5, y: 18))
        pathPath.line(to: NSPoint(x: 8.5, y: 18))
        pathPath.line(to: NSPoint(x: 8.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 15))
        pathPath.line(to: NSPoint(x: 8.5, y: 14))
        pathPath.line(to: NSPoint(x: 21.5, y: 14))
        pathPath.line(to: NSPoint(x: 21.5, y: 15))
        pathPath.line(to: NSPoint(x: 8.5, y: 15))
        pathPath.line(to: NSPoint(x: 8.5, y: 15))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 12))
        pathPath.line(to: NSPoint(x: 8.5, y: 11))
        pathPath.line(to: NSPoint(x: 21.5, y: 11))
        pathPath.line(to: NSPoint(x: 21.5, y: 12))
        pathPath.line(to: NSPoint(x: 8.5, y: 12))
        pathPath.line(to: NSPoint(x: 8.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 9))
        pathPath.line(to: NSPoint(x: 8.5, y: 8))
        pathPath.line(to: NSPoint(x: 21.5, y: 8))
        pathPath.line(to: NSPoint(x: 21.5, y: 9))
        pathPath.line(to: NSPoint(x: 8.5, y: 9))
        pathPath.line(to: NSPoint(x: 8.5, y: 9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 6))
        pathPath.line(to: NSPoint(x: 8.5, y: 5))
        pathPath.line(to: NSPoint(x: 21.5, y: 5))
        pathPath.line(to: NSPoint(x: 21.5, y: 6))
        pathPath.line(to: NSPoint(x: 8.5, y: 6))
        pathPath.line(to: NSPoint(x: 8.5, y: 6))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawClipboardList(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 29), controlPoint1: NSPoint(x: 12.5, y: 28.1), controlPoint2: NSPoint(x: 13.4, y: 29))
        pathPath.line(to: NSPoint(x: 15.5, y: 29))
        pathPath.curve(to: NSPoint(x: 17.5, y: 27), controlPoint1: NSPoint(x: 16.61, y: 29), controlPoint2: NSPoint(x: 17.5, y: 28.11))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 19.5, y: 26))
        pathPath.curve(to: NSPoint(x: 20.5, y: 25), controlPoint1: NSPoint(x: 20.06, y: 26), controlPoint2: NSPoint(x: 20.5, y: 25.55))
        pathPath.line(to: NSPoint(x: 20.5, y: 24))
        pathPath.curve(to: NSPoint(x: 19.5, y: 23), controlPoint1: NSPoint(x: 20.5, y: 23.44), controlPoint2: NSPoint(x: 20.05, y: 23))
        pathPath.line(to: NSPoint(x: 10.5, y: 23))
        pathPath.curve(to: NSPoint(x: 9.5, y: 24), controlPoint1: NSPoint(x: 9.94, y: 23), controlPoint2: NSPoint(x: 9.5, y: 23.45))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.curve(to: NSPoint(x: 10.5, y: 26), controlPoint1: NSPoint(x: 9.5, y: 25.56), controlPoint2: NSPoint(x: 9.95, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 10.5, y: 27))
        pathPath.curve(to: NSPoint(x: 8.5, y: 25), controlPoint1: NSPoint(x: 9.4, y: 27), controlPoint2: NSPoint(x: 8.5, y: 26.11))
        pathPath.line(to: NSPoint(x: 7.5, y: 25))
        pathPath.curve(to: NSPoint(x: 5.5, y: 23), controlPoint1: NSPoint(x: 6.39, y: 25), controlPoint2: NSPoint(x: 5.5, y: 24.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 2))
        pathPath.curve(to: NSPoint(x: 7.5, y: 0), controlPoint1: NSPoint(x: 5.5, y: 0.9), controlPoint2: NSPoint(x: 6.39, y: 0))
        pathPath.line(to: NSPoint(x: 22.5, y: 0))
        pathPath.curve(to: NSPoint(x: 24.5, y: 2), controlPoint1: NSPoint(x: 23.61, y: 0), controlPoint2: NSPoint(x: 24.5, y: 0.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 23))
        pathPath.curve(to: NSPoint(x: 22.5, y: 25), controlPoint1: NSPoint(x: 24.5, y: 24.1), controlPoint2: NSPoint(x: 23.61, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.curve(to: NSPoint(x: 19.5, y: 27), controlPoint1: NSPoint(x: 21.5, y: 26.11), controlPoint2: NSPoint(x: 20.6, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.curve(to: NSPoint(x: 15.49, y: 30), controlPoint1: NSPoint(x: 18.5, y: 28.66), controlPoint2: NSPoint(x: 17.15, y: 30))
        pathPath.line(to: NSPoint(x: 14.51, y: 30))
        pathPath.curve(to: NSPoint(x: 11.5, y: 27), controlPoint1: NSPoint(x: 12.85, y: 30), controlPoint2: NSPoint(x: 11.5, y: 28.66))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.line(to: NSPoint(x: 11.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 22.5, y: 24))
        pathPath.curve(to: NSPoint(x: 23.5, y: 23), controlPoint1: NSPoint(x: 23.05, y: 24), controlPoint2: NSPoint(x: 23.5, y: 23.55))
        pathPath.line(to: NSPoint(x: 23.5, y: 2))
        pathPath.curve(to: NSPoint(x: 22.5, y: 1), controlPoint1: NSPoint(x: 23.5, y: 1.44), controlPoint2: NSPoint(x: 23.05, y: 1))
        pathPath.line(to: NSPoint(x: 7.5, y: 1))
        pathPath.curve(to: NSPoint(x: 6.5, y: 2), controlPoint1: NSPoint(x: 6.95, y: 1), controlPoint2: NSPoint(x: 6.5, y: 1.45))
        pathPath.line(to: NSPoint(x: 6.5, y: 23))
        pathPath.curve(to: NSPoint(x: 7.5, y: 24), controlPoint1: NSPoint(x: 6.5, y: 23.56), controlPoint2: NSPoint(x: 6.95, y: 24))
        pathPath.line(to: NSPoint(x: 8.5, y: 24))
        pathPath.curve(to: NSPoint(x: 10.5, y: 22), controlPoint1: NSPoint(x: 8.5, y: 22.89), controlPoint2: NSPoint(x: 9.4, y: 22))
        pathPath.line(to: NSPoint(x: 19.5, y: 22))
        pathPath.curve(to: NSPoint(x: 21.5, y: 24), controlPoint1: NSPoint(x: 20.6, y: 22), controlPoint2: NSPoint(x: 21.5, y: 22.89))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.line(to: NSPoint(x: 21.5, y: 24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 26))
        pathPath.curve(to: NSPoint(x: 15.5, y: 26.5), controlPoint1: NSPoint(x: 15.28, y: 26), controlPoint2: NSPoint(x: 15.5, y: 26.22))
        pathPath.curve(to: NSPoint(x: 15, y: 27), controlPoint1: NSPoint(x: 15.5, y: 26.78), controlPoint2: NSPoint(x: 15.28, y: 27))
        pathPath.curve(to: NSPoint(x: 14.5, y: 26.5), controlPoint1: NSPoint(x: 14.72, y: 27), controlPoint2: NSPoint(x: 14.5, y: 26.78))
        pathPath.curve(to: NSPoint(x: 15, y: 26), controlPoint1: NSPoint(x: 14.5, y: 26.22), controlPoint2: NSPoint(x: 14.72, y: 26))
        pathPath.line(to: NSPoint(x: 15, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 17))
        pathPath.line(to: NSPoint(x: 13.5, y: 16))
        pathPath.line(to: NSPoint(x: 21.5, y: 16))
        pathPath.line(to: NSPoint(x: 21.5, y: 17))
        pathPath.line(to: NSPoint(x: 13.5, y: 17))
        pathPath.line(to: NSPoint(x: 13.5, y: 17))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 18))
        pathPath.line(to: NSPoint(x: 8.5, y: 15))
        pathPath.line(to: NSPoint(x: 11.5, y: 15))
        pathPath.line(to: NSPoint(x: 11.5, y: 18))
        pathPath.line(to: NSPoint(x: 8.5, y: 18))
        pathPath.line(to: NSPoint(x: 8.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 17))
        pathPath.line(to: NSPoint(x: 9.5, y: 16))
        pathPath.line(to: NSPoint(x: 10.5, y: 16))
        pathPath.line(to: NSPoint(x: 10.5, y: 17))
        pathPath.line(to: NSPoint(x: 9.5, y: 17))
        pathPath.line(to: NSPoint(x: 9.5, y: 17))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 13))
        pathPath.line(to: NSPoint(x: 8.5, y: 10))
        pathPath.line(to: NSPoint(x: 11.5, y: 10))
        pathPath.line(to: NSPoint(x: 11.5, y: 13))
        pathPath.line(to: NSPoint(x: 8.5, y: 13))
        pathPath.line(to: NSPoint(x: 8.5, y: 13))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 12))
        pathPath.line(to: NSPoint(x: 9.5, y: 11))
        pathPath.line(to: NSPoint(x: 10.5, y: 11))
        pathPath.line(to: NSPoint(x: 10.5, y: 12))
        pathPath.line(to: NSPoint(x: 9.5, y: 12))
        pathPath.line(to: NSPoint(x: 9.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 12))
        pathPath.line(to: NSPoint(x: 13.5, y: 11))
        pathPath.line(to: NSPoint(x: 21.5, y: 11))
        pathPath.line(to: NSPoint(x: 21.5, y: 12))
        pathPath.line(to: NSPoint(x: 13.5, y: 12))
        pathPath.line(to: NSPoint(x: 13.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 8))
        pathPath.line(to: NSPoint(x: 8.5, y: 5))
        pathPath.line(to: NSPoint(x: 11.5, y: 5))
        pathPath.line(to: NSPoint(x: 11.5, y: 8))
        pathPath.line(to: NSPoint(x: 8.5, y: 8))
        pathPath.line(to: NSPoint(x: 8.5, y: 8))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 7))
        pathPath.line(to: NSPoint(x: 9.5, y: 6))
        pathPath.line(to: NSPoint(x: 10.5, y: 6))
        pathPath.line(to: NSPoint(x: 10.5, y: 7))
        pathPath.line(to: NSPoint(x: 9.5, y: 7))
        pathPath.line(to: NSPoint(x: 9.5, y: 7))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 7))
        pathPath.line(to: NSPoint(x: 13.5, y: 6))
        pathPath.line(to: NSPoint(x: 21.5, y: 6))
        pathPath.line(to: NSPoint(x: 21.5, y: 7))
        pathPath.line(to: NSPoint(x: 13.5, y: 7))
        pathPath.line(to: NSPoint(x: 13.5, y: 7))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNote(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 5.5))
        pathPath.curve(to: NSPoint(x: 5.51, y: 4.5), controlPoint1: NSPoint(x: 4.5, y: 4.94), controlPoint2: NSPoint(x: 4.95, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 11.5), controlPoint1: NSPoint(x: 19.5, y: 10.61), controlPoint2: NSPoint(x: 20.39, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 25.5), controlPoint1: NSPoint(x: 4.5, y: 25.05), controlPoint2: NSPoint(x: 4.94, y: 25.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 25.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 24.49), controlPoint1: NSPoint(x: 25.05, y: 25.5), controlPoint2: NSPoint(x: 25.5, y: 25.05))
        pathPath.line(to: NSPoint(x: 25.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 3.5, y: 5.5), controlPoint1: NSPoint(x: 4.4, y: 3.5), controlPoint2: NSPoint(x: 3.5, y: 4.4))
        pathPath.line(to: NSPoint(x: 3.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.5), controlPoint1: NSPoint(x: 3.5, y: 25.6), controlPoint2: NSPoint(x: 4.4, y: 26.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 26.5, y: 24.51), controlPoint1: NSPoint(x: 25.6, y: 26.5), controlPoint2: NSPoint(x: 26.5, y: 25.61))
        pathPath.line(to: NSPoint(x: 26.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 10.5), controlPoint1: NSPoint(x: 20.5, y: 10.05), controlPoint2: NSPoint(x: 20.95, y: 10.5))
        pathPath.line(to: NSPoint(x: 25.2, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNoteAdd(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 22, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 8.5))
        pathPath.line(to: NSPoint(x: 22, y: 8.5))
        pathPath.line(to: NSPoint(x: 22, y: 11.5))
        pathPath.line(to: NSPoint(x: 23, y: 11.5))
        pathPath.line(to: NSPoint(x: 23, y: 8.5))
        pathPath.line(to: NSPoint(x: 26, y: 8.5))
        pathPath.line(to: NSPoint(x: 26, y: 7.5))
        pathPath.line(to: NSPoint(x: 23, y: 7.5))
        pathPath.line(to: NSPoint(x: 23, y: 4.5))
        pathPath.line(to: NSPoint(x: 22, y: 4.5))
        pathPath.line(to: NSPoint(x: 22, y: 7.5))
        pathPath.line(to: NSPoint(x: 22, y: 7.5))
        pathPath.line(to: NSPoint(x: 22, y: 7.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.6, y: 5.5))
        pathPath.line(to: NSPoint(x: 4, y: 5.5))
        pathPath.curve(to: NSPoint(x: 3, y: 6.5), controlPoint1: NSPoint(x: 3.45, y: 5.5), controlPoint2: NSPoint(x: 3, y: 5.94))
        pathPath.line(to: NSPoint(x: 3, y: 21.5))
        pathPath.line(to: NSPoint(x: 3, y: 21.5))
        pathPath.line(to: NSPoint(x: 24, y: 21.5))
        pathPath.line(to: NSPoint(x: 24, y: 13.29))
        pathPath.curve(to: NSPoint(x: 22.5, y: 13.5), controlPoint1: NSPoint(x: 23.52, y: 13.43), controlPoint2: NSPoint(x: 23.02, y: 13.5))
        pathPath.curve(to: NSPoint(x: 17, y: 8), controlPoint1: NSPoint(x: 19.46, y: 13.5), controlPoint2: NSPoint(x: 17, y: 11.04))
        pathPath.curve(to: NSPoint(x: 17.6, y: 5.5), controlPoint1: NSPoint(x: 17, y: 7.1), controlPoint2: NSPoint(x: 17.22, y: 6.25))
        pathPath.line(to: NSPoint(x: 17.6, y: 5.5))
        pathPath.line(to: NSPoint(x: 17.6, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 25, y: 12.9))
        pathPath.line(to: NSPoint(x: 25, y: 25.5))
        pathPath.curve(to: NSPoint(x: 23, y: 27.5), controlPoint1: NSPoint(x: 25, y: 26.6), controlPoint2: NSPoint(x: 24.1, y: 27.5))
        pathPath.line(to: NSPoint(x: 4, y: 27.5))
        pathPath.curve(to: NSPoint(x: 2, y: 25.5), controlPoint1: NSPoint(x: 2.9, y: 27.5), controlPoint2: NSPoint(x: 2, y: 26.6))
        pathPath.line(to: NSPoint(x: 2, y: 6.5))
        pathPath.curve(to: NSPoint(x: 4, y: 4.5), controlPoint1: NSPoint(x: 2, y: 5.4), controlPoint2: NSPoint(x: 2.9, y: 4.5))
        pathPath.line(to: NSPoint(x: 18.26, y: 4.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 2.5), controlPoint1: NSPoint(x: 19.27, y: 3.28), controlPoint2: NSPoint(x: 20.79, y: 2.5))
        pathPath.curve(to: NSPoint(x: 28, y: 8), controlPoint1: NSPoint(x: 25.54, y: 2.5), controlPoint2: NSPoint(x: 28, y: 4.96))
        pathPath.curve(to: NSPoint(x: 25, y: 12.9), controlPoint1: NSPoint(x: 28, y: 10.14), controlPoint2: NSPoint(x: 26.78, y: 11.99))
        pathPath.line(to: NSPoint(x: 25, y: 12.9))
        pathPath.line(to: NSPoint(x: 25, y: 12.9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3, y: 22.5))
        pathPath.line(to: NSPoint(x: 3, y: 25.5))
        pathPath.curve(to: NSPoint(x: 4, y: 26.5), controlPoint1: NSPoint(x: 3, y: 26.05), controlPoint2: NSPoint(x: 3.44, y: 26.5))
        pathPath.line(to: NSPoint(x: 23, y: 26.5))
        pathPath.curve(to: NSPoint(x: 24, y: 25.5), controlPoint1: NSPoint(x: 23.55, y: 26.5), controlPoint2: NSPoint(x: 24, y: 26.06))
        pathPath.line(to: NSPoint(x: 24, y: 22.5))
        pathPath.line(to: NSPoint(x: 3, y: 22.5))
        pathPath.line(to: NSPoint(x: 3, y: 22.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 22.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 27, y: 8), controlPoint1: NSPoint(x: 24.99, y: 3.5), controlPoint2: NSPoint(x: 27, y: 5.51))
        pathPath.curve(to: NSPoint(x: 22.5, y: 12.5), controlPoint1: NSPoint(x: 27, y: 10.49), controlPoint2: NSPoint(x: 24.99, y: 12.5))
        pathPath.curve(to: NSPoint(x: 18, y: 8), controlPoint1: NSPoint(x: 20.01, y: 12.5), controlPoint2: NSPoint(x: 18, y: 10.49))
        pathPath.curve(to: NSPoint(x: 22.5, y: 3.5), controlPoint1: NSPoint(x: 18, y: 5.51), controlPoint2: NSPoint(x: 20.01, y: 3.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 3.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNoteRemove(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 17.6, y: 5.5))
        pathPath.line(to: NSPoint(x: 4, y: 5.5))
        pathPath.curve(to: NSPoint(x: 3, y: 6.5), controlPoint1: NSPoint(x: 3.45, y: 5.5), controlPoint2: NSPoint(x: 3, y: 5.94))
        pathPath.line(to: NSPoint(x: 3, y: 21.5))
        pathPath.line(to: NSPoint(x: 3, y: 21.5))
        pathPath.line(to: NSPoint(x: 24, y: 21.5))
        pathPath.line(to: NSPoint(x: 24, y: 13.29))
        pathPath.curve(to: NSPoint(x: 22.5, y: 13.5), controlPoint1: NSPoint(x: 23.52, y: 13.43), controlPoint2: NSPoint(x: 23.02, y: 13.5))
        pathPath.curve(to: NSPoint(x: 17, y: 8), controlPoint1: NSPoint(x: 19.46, y: 13.5), controlPoint2: NSPoint(x: 17, y: 11.04))
        pathPath.curve(to: NSPoint(x: 17.6, y: 5.5), controlPoint1: NSPoint(x: 17, y: 7.1), controlPoint2: NSPoint(x: 17.22, y: 6.25))
        pathPath.line(to: NSPoint(x: 17.6, y: 5.5))
        pathPath.line(to: NSPoint(x: 17.6, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 25, y: 12.9))
        pathPath.line(to: NSPoint(x: 25, y: 25.5))
        pathPath.curve(to: NSPoint(x: 23, y: 27.5), controlPoint1: NSPoint(x: 25, y: 26.6), controlPoint2: NSPoint(x: 24.1, y: 27.5))
        pathPath.line(to: NSPoint(x: 4, y: 27.5))
        pathPath.curve(to: NSPoint(x: 2, y: 25.5), controlPoint1: NSPoint(x: 2.9, y: 27.5), controlPoint2: NSPoint(x: 2, y: 26.6))
        pathPath.line(to: NSPoint(x: 2, y: 6.5))
        pathPath.curve(to: NSPoint(x: 4, y: 4.5), controlPoint1: NSPoint(x: 2, y: 5.4), controlPoint2: NSPoint(x: 2.9, y: 4.5))
        pathPath.line(to: NSPoint(x: 18.26, y: 4.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 2.5), controlPoint1: NSPoint(x: 19.27, y: 3.28), controlPoint2: NSPoint(x: 20.79, y: 2.5))
        pathPath.curve(to: NSPoint(x: 28, y: 8), controlPoint1: NSPoint(x: 25.54, y: 2.5), controlPoint2: NSPoint(x: 28, y: 4.96))
        pathPath.curve(to: NSPoint(x: 25, y: 12.9), controlPoint1: NSPoint(x: 28, y: 10.14), controlPoint2: NSPoint(x: 26.78, y: 11.99))
        pathPath.line(to: NSPoint(x: 25, y: 12.9))
        pathPath.line(to: NSPoint(x: 25, y: 12.9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3, y: 22.5))
        pathPath.line(to: NSPoint(x: 3, y: 25.5))
        pathPath.curve(to: NSPoint(x: 4, y: 26.5), controlPoint1: NSPoint(x: 3, y: 26.05), controlPoint2: NSPoint(x: 3.44, y: 26.5))
        pathPath.line(to: NSPoint(x: 23, y: 26.5))
        pathPath.curve(to: NSPoint(x: 24, y: 25.5), controlPoint1: NSPoint(x: 23.55, y: 26.5), controlPoint2: NSPoint(x: 24, y: 26.06))
        pathPath.line(to: NSPoint(x: 24, y: 22.5))
        pathPath.line(to: NSPoint(x: 3, y: 22.5))
        pathPath.line(to: NSPoint(x: 3, y: 22.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 22.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 27, y: 8), controlPoint1: NSPoint(x: 24.99, y: 3.5), controlPoint2: NSPoint(x: 27, y: 5.51))
        pathPath.curve(to: NSPoint(x: 22.5, y: 12.5), controlPoint1: NSPoint(x: 27, y: 10.49), controlPoint2: NSPoint(x: 24.99, y: 12.5))
        pathPath.curve(to: NSPoint(x: 18, y: 8), controlPoint1: NSPoint(x: 20.01, y: 12.5), controlPoint2: NSPoint(x: 18, y: 10.49))
        pathPath.curve(to: NSPoint(x: 22.5, y: 3.5), controlPoint1: NSPoint(x: 18, y: 5.51), controlPoint2: NSPoint(x: 20.01, y: 3.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19, y: 8.5))
        pathPath.line(to: NSPoint(x: 19, y: 7.5))
        pathPath.line(to: NSPoint(x: 26, y: 7.5))
        pathPath.line(to: NSPoint(x: 26, y: 8.5))
        pathPath.line(to: NSPoint(x: 19, y: 8.5))
        pathPath.line(to: NSPoint(x: 19, y: 8.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNoteText(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 5.5))
        pathPath.curve(to: NSPoint(x: 5.51, y: 4.5), controlPoint1: NSPoint(x: 4.5, y: 4.94), controlPoint2: NSPoint(x: 4.95, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 11.5), controlPoint1: NSPoint(x: 19.5, y: 10.61), controlPoint2: NSPoint(x: 20.39, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 25.5), controlPoint1: NSPoint(x: 4.5, y: 25.05), controlPoint2: NSPoint(x: 4.94, y: 25.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 25.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 24.49), controlPoint1: NSPoint(x: 25.05, y: 25.5), controlPoint2: NSPoint(x: 25.5, y: 25.05))
        pathPath.line(to: NSPoint(x: 25.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 3.5, y: 5.5), controlPoint1: NSPoint(x: 4.4, y: 3.5), controlPoint2: NSPoint(x: 3.5, y: 4.4))
        pathPath.line(to: NSPoint(x: 3.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.5), controlPoint1: NSPoint(x: 3.5, y: 25.6), controlPoint2: NSPoint(x: 4.4, y: 26.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 26.5, y: 24.51), controlPoint1: NSPoint(x: 25.6, y: 26.5), controlPoint2: NSPoint(x: 26.5, y: 25.61))
        pathPath.line(to: NSPoint(x: 26.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 10.5), controlPoint1: NSPoint(x: 20.5, y: 10.05), controlPoint2: NSPoint(x: 20.95, y: 10.5))
        pathPath.line(to: NSPoint(x: 25.2, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 11.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 8.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNoteList(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 3.5, y: 5.5), controlPoint1: NSPoint(x: 4.4, y: 3.5), controlPoint2: NSPoint(x: 3.5, y: 4.4))
        pathPath.line(to: NSPoint(x: 3.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.5), controlPoint1: NSPoint(x: 3.5, y: 25.6), controlPoint2: NSPoint(x: 4.4, y: 26.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 26.5, y: 24.51), controlPoint1: NSPoint(x: 25.6, y: 26.5), controlPoint2: NSPoint(x: 26.5, y: 25.61))
        pathPath.line(to: NSPoint(x: 26.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 5.5))
        pathPath.curve(to: NSPoint(x: 5.51, y: 4.5), controlPoint1: NSPoint(x: 4.5, y: 4.94), controlPoint2: NSPoint(x: 4.95, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 11.5), controlPoint1: NSPoint(x: 19.5, y: 10.61), controlPoint2: NSPoint(x: 20.39, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 25.5), controlPoint1: NSPoint(x: 4.5, y: 25.05), controlPoint2: NSPoint(x: 4.94, y: 25.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 25.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 24.49), controlPoint1: NSPoint(x: 25.05, y: 25.5), controlPoint2: NSPoint(x: 25.5, y: 25.05))
        pathPath.line(to: NSPoint(x: 25.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 10.5), controlPoint1: NSPoint(x: 20.5, y: 10.05), controlPoint2: NSPoint(x: 20.95, y: 10.5))
        pathPath.line(to: NSPoint(x: 25.2, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 9.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNoteChecked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 5.5))
        pathPath.curve(to: NSPoint(x: 5.51, y: 4.5), controlPoint1: NSPoint(x: 4.5, y: 4.94), controlPoint2: NSPoint(x: 4.95, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 11.5), controlPoint1: NSPoint(x: 19.5, y: 10.61), controlPoint2: NSPoint(x: 20.39, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 25.5), controlPoint1: NSPoint(x: 4.5, y: 25.05), controlPoint2: NSPoint(x: 4.94, y: 25.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 25.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 24.49), controlPoint1: NSPoint(x: 25.05, y: 25.5), controlPoint2: NSPoint(x: 25.5, y: 25.05))
        pathPath.line(to: NSPoint(x: 25.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 3.5, y: 5.5), controlPoint1: NSPoint(x: 4.4, y: 3.5), controlPoint2: NSPoint(x: 3.5, y: 4.4))
        pathPath.line(to: NSPoint(x: 3.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.5), controlPoint1: NSPoint(x: 3.5, y: 25.6), controlPoint2: NSPoint(x: 4.4, y: 26.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 26.5, y: 24.51), controlPoint1: NSPoint(x: 25.6, y: 26.5), controlPoint2: NSPoint(x: 26.5, y: 25.61))
        pathPath.line(to: NSPoint(x: 26.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 10.5), controlPoint1: NSPoint(x: 20.5, y: 10.05), controlPoint2: NSPoint(x: 20.95, y: 10.5))
        pathPath.line(to: NSPoint(x: 25.2, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.85, y: 8.91))
        pathPath.line(to: NSPoint(x: 20.63, y: 16.69))
        pathPath.line(to: NSPoint(x: 19.92, y: 17.4))
        pathPath.line(to: NSPoint(x: 12.85, y: 10.33))
        pathPath.line(to: NSPoint(x: 9.11, y: 14.07))
        pathPath.line(to: NSPoint(x: 8.4, y: 13.36))
        pathPath.line(to: NSPoint(x: 12.85, y: 8.91))
        pathPath.line(to: NSPoint(x: 12.85, y: 8.91))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNoteImportant(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 5.5))
        pathPath.curve(to: NSPoint(x: 5.51, y: 4.5), controlPoint1: NSPoint(x: 4.5, y: 4.94), controlPoint2: NSPoint(x: 4.95, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 11.5), controlPoint1: NSPoint(x: 19.5, y: 10.61), controlPoint2: NSPoint(x: 20.39, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 25.5), controlPoint1: NSPoint(x: 4.5, y: 25.05), controlPoint2: NSPoint(x: 4.94, y: 25.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 25.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 24.49), controlPoint1: NSPoint(x: 25.05, y: 25.5), controlPoint2: NSPoint(x: 25.5, y: 25.05))
        pathPath.line(to: NSPoint(x: 25.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 3.5, y: 5.5), controlPoint1: NSPoint(x: 4.4, y: 3.5), controlPoint2: NSPoint(x: 3.5, y: 4.4))
        pathPath.line(to: NSPoint(x: 3.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.5), controlPoint1: NSPoint(x: 3.5, y: 25.6), controlPoint2: NSPoint(x: 4.4, y: 26.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 26.5, y: 24.51), controlPoint1: NSPoint(x: 25.6, y: 26.5), controlPoint2: NSPoint(x: 26.5, y: 25.61))
        pathPath.line(to: NSPoint(x: 26.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 9.49))
        pathPath.curve(to: NSPoint(x: 21.5, y: 10.5), controlPoint1: NSPoint(x: 20.5, y: 10.05), controlPoint2: NSPoint(x: 20.95, y: 10.5))
        pathPath.line(to: NSPoint(x: 25.2, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 8.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNotebook(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 6, y: 12.5))
        pathPath.line(to: NSPoint(x: 6, y: 9.5))
        pathPath.line(to: NSPoint(x: 5, y: 9.5))
        pathPath.line(to: NSPoint(x: 5, y: 8.5))
        pathPath.line(to: NSPoint(x: 6, y: 8.5))
        pathPath.line(to: NSPoint(x: 6, y: 8.5))
        pathPath.line(to: NSPoint(x: 6, y: 5.5))
        pathPath.line(to: NSPoint(x: 5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5, y: 4.5))
        pathPath.line(to: NSPoint(x: 6, y: 4.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.51))
        pathPath.curve(to: NSPoint(x: 8, y: 1.5), controlPoint1: NSPoint(x: 6, y: 2.4), controlPoint2: NSPoint(x: 6.89, y: 1.5))
        pathPath.line(to: NSPoint(x: 23, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 3.51), controlPoint1: NSPoint(x: 24.11, y: 1.5), controlPoint2: NSPoint(x: 25, y: 2.4))
        pathPath.line(to: NSPoint(x: 25, y: 26.49))
        pathPath.curve(to: NSPoint(x: 23, y: 28.5), controlPoint1: NSPoint(x: 25, y: 27.6), controlPoint2: NSPoint(x: 24.11, y: 28.5))
        pathPath.line(to: NSPoint(x: 8, y: 28.5))
        pathPath.curve(to: NSPoint(x: 6, y: 26.49), controlPoint1: NSPoint(x: 6.89, y: 28.5), controlPoint2: NSPoint(x: 6, y: 27.6))
        pathPath.line(to: NSPoint(x: 6, y: 25.5))
        pathPath.line(to: NSPoint(x: 5, y: 25.5))
        pathPath.line(to: NSPoint(x: 5, y: 24.5))
        pathPath.line(to: NSPoint(x: 6, y: 24.5))
        pathPath.line(to: NSPoint(x: 6, y: 21.5))
        pathPath.line(to: NSPoint(x: 5, y: 21.5))
        pathPath.line(to: NSPoint(x: 5, y: 20.5))
        pathPath.line(to: NSPoint(x: 6, y: 20.5))
        pathPath.line(to: NSPoint(x: 6, y: 17.5))
        pathPath.line(to: NSPoint(x: 5, y: 17.5))
        pathPath.line(to: NSPoint(x: 5, y: 16.5))
        pathPath.line(to: NSPoint(x: 6, y: 16.5))
        pathPath.line(to: NSPoint(x: 6, y: 13.5))
        pathPath.line(to: NSPoint(x: 5, y: 13.5))
        pathPath.line(to: NSPoint(x: 5, y: 12.5))
        pathPath.line(to: NSPoint(x: 6, y: 12.5))
        pathPath.line(to: NSPoint(x: 6, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7, y: 12.5))
        pathPath.line(to: NSPoint(x: 7, y: 9.5))
        pathPath.line(to: NSPoint(x: 8, y: 9.5))
        pathPath.line(to: NSPoint(x: 8, y: 8.5))
        pathPath.line(to: NSPoint(x: 7, y: 8.5))
        pathPath.line(to: NSPoint(x: 7, y: 5.5))
        pathPath.line(to: NSPoint(x: 8, y: 5.5))
        pathPath.line(to: NSPoint(x: 8, y: 4.5))
        pathPath.line(to: NSPoint(x: 7, y: 4.5))
        pathPath.line(to: NSPoint(x: 7, y: 3.5))
        pathPath.curve(to: NSPoint(x: 8, y: 2.5), controlPoint1: NSPoint(x: 7, y: 2.95), controlPoint2: NSPoint(x: 7.45, y: 2.5))
        pathPath.line(to: NSPoint(x: 23, y: 2.5))
        pathPath.curve(to: NSPoint(x: 24, y: 3.5), controlPoint1: NSPoint(x: 23.55, y: 2.5), controlPoint2: NSPoint(x: 24, y: 2.96))
        pathPath.line(to: NSPoint(x: 24, y: 26.5))
        pathPath.curve(to: NSPoint(x: 23, y: 27.5), controlPoint1: NSPoint(x: 24, y: 27.05), controlPoint2: NSPoint(x: 23.55, y: 27.5))
        pathPath.line(to: NSPoint(x: 8, y: 27.5))
        pathPath.curve(to: NSPoint(x: 7, y: 26.5), controlPoint1: NSPoint(x: 7.45, y: 27.5), controlPoint2: NSPoint(x: 7, y: 27.04))
        pathPath.line(to: NSPoint(x: 7, y: 25.5))
        pathPath.line(to: NSPoint(x: 8, y: 25.5))
        pathPath.line(to: NSPoint(x: 8, y: 24.5))
        pathPath.line(to: NSPoint(x: 7, y: 24.5))
        pathPath.line(to: NSPoint(x: 7, y: 21.5))
        pathPath.line(to: NSPoint(x: 8, y: 21.5))
        pathPath.line(to: NSPoint(x: 8, y: 20.5))
        pathPath.line(to: NSPoint(x: 7, y: 20.5))
        pathPath.line(to: NSPoint(x: 7, y: 17.5))
        pathPath.line(to: NSPoint(x: 8, y: 17.5))
        pathPath.line(to: NSPoint(x: 8, y: 16.5))
        pathPath.line(to: NSPoint(x: 7, y: 16.5))
        pathPath.line(to: NSPoint(x: 7, y: 16.5))
        pathPath.line(to: NSPoint(x: 7, y: 13.5))
        pathPath.line(to: NSPoint(x: 8, y: 13.5))
        pathPath.line(to: NSPoint(x: 8, y: 12.5))
        pathPath.line(to: NSPoint(x: 7, y: 12.5))
        pathPath.line(to: NSPoint(x: 7, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10, y: 23.5))
        pathPath.line(to: NSPoint(x: 10, y: 22.5))
        pathPath.line(to: NSPoint(x: 21, y: 22.5))
        pathPath.line(to: NSPoint(x: 21, y: 23.5))
        pathPath.line(to: NSPoint(x: 10, y: 23.5))
        pathPath.line(to: NSPoint(x: 10, y: 23.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11, y: 19.5))
        pathPath.line(to: NSPoint(x: 11, y: 18.5))
        pathPath.line(to: NSPoint(x: 20, y: 18.5))
        pathPath.line(to: NSPoint(x: 20, y: 19.5))
        pathPath.line(to: NSPoint(x: 11, y: 19.5))
        pathPath.line(to: NSPoint(x: 11, y: 19.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNotebook2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 6, y: 12.5))
        pathPath.line(to: NSPoint(x: 6, y: 9.5))
        pathPath.line(to: NSPoint(x: 5, y: 9.5))
        pathPath.line(to: NSPoint(x: 5, y: 8.5))
        pathPath.line(to: NSPoint(x: 6, y: 8.5))
        pathPath.line(to: NSPoint(x: 6, y: 8.5))
        pathPath.line(to: NSPoint(x: 6, y: 5.5))
        pathPath.line(to: NSPoint(x: 5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5, y: 4.5))
        pathPath.line(to: NSPoint(x: 6, y: 4.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.51))
        pathPath.curve(to: NSPoint(x: 8, y: 1.5), controlPoint1: NSPoint(x: 6, y: 2.4), controlPoint2: NSPoint(x: 6.89, y: 1.5))
        pathPath.line(to: NSPoint(x: 23, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 3.51), controlPoint1: NSPoint(x: 24.11, y: 1.5), controlPoint2: NSPoint(x: 25, y: 2.4))
        pathPath.line(to: NSPoint(x: 25, y: 26.49))
        pathPath.curve(to: NSPoint(x: 23, y: 28.5), controlPoint1: NSPoint(x: 25, y: 27.6), controlPoint2: NSPoint(x: 24.11, y: 28.5))
        pathPath.line(to: NSPoint(x: 8, y: 28.5))
        pathPath.curve(to: NSPoint(x: 6, y: 26.49), controlPoint1: NSPoint(x: 6.89, y: 28.5), controlPoint2: NSPoint(x: 6, y: 27.6))
        pathPath.line(to: NSPoint(x: 6, y: 25.5))
        pathPath.line(to: NSPoint(x: 5, y: 25.5))
        pathPath.line(to: NSPoint(x: 5, y: 24.5))
        pathPath.line(to: NSPoint(x: 6, y: 24.5))
        pathPath.line(to: NSPoint(x: 6, y: 21.5))
        pathPath.line(to: NSPoint(x: 5, y: 21.5))
        pathPath.line(to: NSPoint(x: 5, y: 20.5))
        pathPath.line(to: NSPoint(x: 6, y: 20.5))
        pathPath.line(to: NSPoint(x: 6, y: 17.5))
        pathPath.line(to: NSPoint(x: 5, y: 17.5))
        pathPath.line(to: NSPoint(x: 5, y: 16.5))
        pathPath.line(to: NSPoint(x: 6, y: 16.5))
        pathPath.line(to: NSPoint(x: 6, y: 13.5))
        pathPath.line(to: NSPoint(x: 5, y: 13.5))
        pathPath.line(to: NSPoint(x: 5, y: 12.5))
        pathPath.line(to: NSPoint(x: 6, y: 12.5))
        pathPath.line(to: NSPoint(x: 6, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7, y: 12.5))
        pathPath.line(to: NSPoint(x: 7, y: 9.5))
        pathPath.line(to: NSPoint(x: 8, y: 9.5))
        pathPath.line(to: NSPoint(x: 8, y: 8.5))
        pathPath.line(to: NSPoint(x: 7, y: 8.5))
        pathPath.line(to: NSPoint(x: 7, y: 5.5))
        pathPath.line(to: NSPoint(x: 8, y: 5.5))
        pathPath.line(to: NSPoint(x: 8, y: 4.5))
        pathPath.line(to: NSPoint(x: 7, y: 4.5))
        pathPath.line(to: NSPoint(x: 7, y: 3.5))
        pathPath.curve(to: NSPoint(x: 8, y: 2.5), controlPoint1: NSPoint(x: 7, y: 2.95), controlPoint2: NSPoint(x: 7.45, y: 2.5))
        pathPath.line(to: NSPoint(x: 23, y: 2.5))
        pathPath.curve(to: NSPoint(x: 24, y: 3.5), controlPoint1: NSPoint(x: 23.55, y: 2.5), controlPoint2: NSPoint(x: 24, y: 2.96))
        pathPath.line(to: NSPoint(x: 24, y: 26.5))
        pathPath.curve(to: NSPoint(x: 23, y: 27.5), controlPoint1: NSPoint(x: 24, y: 27.05), controlPoint2: NSPoint(x: 23.55, y: 27.5))
        pathPath.line(to: NSPoint(x: 8, y: 27.5))
        pathPath.curve(to: NSPoint(x: 7, y: 26.5), controlPoint1: NSPoint(x: 7.45, y: 27.5), controlPoint2: NSPoint(x: 7, y: 27.04))
        pathPath.line(to: NSPoint(x: 7, y: 25.5))
        pathPath.line(to: NSPoint(x: 8, y: 25.5))
        pathPath.line(to: NSPoint(x: 8, y: 24.5))
        pathPath.line(to: NSPoint(x: 7, y: 24.5))
        pathPath.line(to: NSPoint(x: 7, y: 21.5))
        pathPath.line(to: NSPoint(x: 8, y: 21.5))
        pathPath.line(to: NSPoint(x: 8, y: 20.5))
        pathPath.line(to: NSPoint(x: 7, y: 20.5))
        pathPath.line(to: NSPoint(x: 7, y: 17.5))
        pathPath.line(to: NSPoint(x: 8, y: 17.5))
        pathPath.line(to: NSPoint(x: 8, y: 16.5))
        pathPath.line(to: NSPoint(x: 7, y: 16.5))
        pathPath.line(to: NSPoint(x: 7, y: 16.5))
        pathPath.line(to: NSPoint(x: 7, y: 13.5))
        pathPath.line(to: NSPoint(x: 8, y: 13.5))
        pathPath.line(to: NSPoint(x: 8, y: 12.5))
        pathPath.line(to: NSPoint(x: 7, y: 12.5))
        pathPath.line(to: NSPoint(x: 7, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11, y: 23.5))
        pathPath.line(to: NSPoint(x: 11, y: 18.5))
        pathPath.line(to: NSPoint(x: 20, y: 18.5))
        pathPath.line(to: NSPoint(x: 20, y: 23.5))
        pathPath.line(to: NSPoint(x: 11, y: 23.5))
        pathPath.line(to: NSPoint(x: 11, y: 23.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12, y: 22.5))
        pathPath.line(to: NSPoint(x: 12, y: 19.5))
        pathPath.line(to: NSPoint(x: 19, y: 19.5))
        pathPath.line(to: NSPoint(x: 19, y: 22.5))
        pathPath.line(to: NSPoint(x: 12, y: 22.5))
        pathPath.line(to: NSPoint(x: 12, y: 22.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNotebook3(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 21, y: 27.5))
        pathPath.line(to: NSPoint(x: 23, y: 27.5))
        pathPath.curve(to: NSPoint(x: 24, y: 26.5), controlPoint1: NSPoint(x: 23.55, y: 27.5), controlPoint2: NSPoint(x: 24, y: 27.05))
        pathPath.line(to: NSPoint(x: 24, y: 3.5))
        pathPath.curve(to: NSPoint(x: 23, y: 2.5), controlPoint1: NSPoint(x: 24, y: 2.96), controlPoint2: NSPoint(x: 23.55, y: 2.5))
        pathPath.line(to: NSPoint(x: 8, y: 2.5))
        pathPath.curve(to: NSPoint(x: 7, y: 3.5), controlPoint1: NSPoint(x: 7.45, y: 2.5), controlPoint2: NSPoint(x: 7, y: 2.95))
        pathPath.line(to: NSPoint(x: 7, y: 4.5))
        pathPath.line(to: NSPoint(x: 8, y: 4.5))
        pathPath.line(to: NSPoint(x: 8, y: 5.5))
        pathPath.line(to: NSPoint(x: 7, y: 5.5))
        pathPath.line(to: NSPoint(x: 7, y: 8.5))
        pathPath.line(to: NSPoint(x: 8, y: 8.5))
        pathPath.line(to: NSPoint(x: 8, y: 9.5))
        pathPath.line(to: NSPoint(x: 7, y: 9.5))
        pathPath.line(to: NSPoint(x: 7, y: 12.5))
        pathPath.line(to: NSPoint(x: 8, y: 12.5))
        pathPath.line(to: NSPoint(x: 8, y: 13.5))
        pathPath.line(to: NSPoint(x: 7, y: 13.5))
        pathPath.line(to: NSPoint(x: 7, y: 16.5))
        pathPath.line(to: NSPoint(x: 7, y: 16.5))
        pathPath.line(to: NSPoint(x: 8, y: 16.5))
        pathPath.line(to: NSPoint(x: 8, y: 17.5))
        pathPath.line(to: NSPoint(x: 7, y: 17.5))
        pathPath.line(to: NSPoint(x: 7, y: 20.5))
        pathPath.line(to: NSPoint(x: 8, y: 20.5))
        pathPath.line(to: NSPoint(x: 8, y: 21.5))
        pathPath.line(to: NSPoint(x: 7, y: 21.5))
        pathPath.line(to: NSPoint(x: 7, y: 24.5))
        pathPath.line(to: NSPoint(x: 8, y: 24.5))
        pathPath.line(to: NSPoint(x: 8, y: 25.5))
        pathPath.line(to: NSPoint(x: 7, y: 25.5))
        pathPath.line(to: NSPoint(x: 7, y: 26.5))
        pathPath.curve(to: NSPoint(x: 8, y: 27.5), controlPoint1: NSPoint(x: 7, y: 27.04), controlPoint2: NSPoint(x: 7.45, y: 27.5))
        pathPath.line(to: NSPoint(x: 15, y: 27.5))
        pathPath.line(to: NSPoint(x: 15, y: 15.5))
        pathPath.line(to: NSPoint(x: 18, y: 18.5))
        pathPath.line(to: NSPoint(x: 21, y: 15.5))
        pathPath.line(to: NSPoint(x: 21, y: 27.5))
        pathPath.line(to: NSPoint(x: 21, y: 27.5))
        pathPath.line(to: NSPoint(x: 21, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6, y: 12.5))
        pathPath.line(to: NSPoint(x: 6, y: 9.5))
        pathPath.line(to: NSPoint(x: 5, y: 9.5))
        pathPath.line(to: NSPoint(x: 5, y: 8.5))
        pathPath.line(to: NSPoint(x: 6, y: 8.5))
        pathPath.line(to: NSPoint(x: 6, y: 8.5))
        pathPath.line(to: NSPoint(x: 6, y: 5.5))
        pathPath.line(to: NSPoint(x: 5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5, y: 4.5))
        pathPath.line(to: NSPoint(x: 6, y: 4.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.51))
        pathPath.curve(to: NSPoint(x: 8, y: 1.5), controlPoint1: NSPoint(x: 6, y: 2.4), controlPoint2: NSPoint(x: 6.89, y: 1.5))
        pathPath.line(to: NSPoint(x: 23, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 3.51), controlPoint1: NSPoint(x: 24.11, y: 1.5), controlPoint2: NSPoint(x: 25, y: 2.4))
        pathPath.line(to: NSPoint(x: 25, y: 26.49))
        pathPath.curve(to: NSPoint(x: 23, y: 28.5), controlPoint1: NSPoint(x: 25, y: 27.6), controlPoint2: NSPoint(x: 24.11, y: 28.5))
        pathPath.line(to: NSPoint(x: 8, y: 28.5))
        pathPath.curve(to: NSPoint(x: 6, y: 26.49), controlPoint1: NSPoint(x: 6.89, y: 28.5), controlPoint2: NSPoint(x: 6, y: 27.6))
        pathPath.line(to: NSPoint(x: 6, y: 25.5))
        pathPath.line(to: NSPoint(x: 5, y: 25.5))
        pathPath.line(to: NSPoint(x: 5, y: 24.5))
        pathPath.line(to: NSPoint(x: 6, y: 24.5))
        pathPath.line(to: NSPoint(x: 6, y: 21.5))
        pathPath.line(to: NSPoint(x: 5, y: 21.5))
        pathPath.line(to: NSPoint(x: 5, y: 20.5))
        pathPath.line(to: NSPoint(x: 6, y: 20.5))
        pathPath.line(to: NSPoint(x: 6, y: 17.5))
        pathPath.line(to: NSPoint(x: 5, y: 17.5))
        pathPath.line(to: NSPoint(x: 5, y: 16.5))
        pathPath.line(to: NSPoint(x: 6, y: 16.5))
        pathPath.line(to: NSPoint(x: 6, y: 13.5))
        pathPath.line(to: NSPoint(x: 5, y: 13.5))
        pathPath.line(to: NSPoint(x: 5, y: 12.5))
        pathPath.line(to: NSPoint(x: 6, y: 12.5))
        pathPath.line(to: NSPoint(x: 6, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16, y: 27.5))
        pathPath.line(to: NSPoint(x: 16, y: 17.9))
        pathPath.line(to: NSPoint(x: 18, y: 19.9))
        pathPath.line(to: NSPoint(x: 20, y: 17.9))
        pathPath.line(to: NSPoint(x: 20, y: 27.5))
        pathPath.line(to: NSPoint(x: 16, y: 27.5))
        pathPath.line(to: NSPoint(x: 16, y: 27.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNotebook4(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.5, y: 27))
        pathPath.line(to: NSPoint(x: 17.5, y: 27))
        pathPath.line(to: NSPoint(x: 17.5, y: 28))
        pathPath.line(to: NSPoint(x: 16.5, y: 28))
        pathPath.line(to: NSPoint(x: 16.5, y: 27))
        pathPath.line(to: NSPoint(x: 13.5, y: 27))
        pathPath.line(to: NSPoint(x: 13.5, y: 28))
        pathPath.line(to: NSPoint(x: 12.5, y: 28))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.line(to: NSPoint(x: 9.5, y: 27))
        pathPath.line(to: NSPoint(x: 9.5, y: 28))
        pathPath.line(to: NSPoint(x: 8.5, y: 28))
        pathPath.line(to: NSPoint(x: 8.5, y: 27))
        pathPath.line(to: NSPoint(x: 7.5, y: 27))
        pathPath.curve(to: NSPoint(x: 5.5, y: 25), controlPoint1: NSPoint(x: 6.39, y: 27), controlPoint2: NSPoint(x: 5.5, y: 26.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 4))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2), controlPoint1: NSPoint(x: 5.5, y: 2.9), controlPoint2: NSPoint(x: 6.39, y: 2))
        pathPath.line(to: NSPoint(x: 22.5, y: 2))
        pathPath.curve(to: NSPoint(x: 24.5, y: 4), controlPoint1: NSPoint(x: 23.61, y: 2), controlPoint2: NSPoint(x: 24.5, y: 2.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 25))
        pathPath.curve(to: NSPoint(x: 22.5, y: 27), controlPoint1: NSPoint(x: 24.5, y: 26.1), controlPoint2: NSPoint(x: 23.61, y: 27))
        pathPath.line(to: NSPoint(x: 21.5, y: 27))
        pathPath.line(to: NSPoint(x: 21.5, y: 28))
        pathPath.line(to: NSPoint(x: 20.5, y: 28))
        pathPath.line(to: NSPoint(x: 20.5, y: 27))
        pathPath.line(to: NSPoint(x: 20.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 26))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 17.5, y: 25))
        pathPath.line(to: NSPoint(x: 16.5, y: 25))
        pathPath.line(to: NSPoint(x: 16.5, y: 26))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 13.5, y: 25))
        pathPath.line(to: NSPoint(x: 12.5, y: 25))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 9.5, y: 26))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.line(to: NSPoint(x: 8.5, y: 25))
        pathPath.line(to: NSPoint(x: 8.5, y: 26))
        pathPath.line(to: NSPoint(x: 7.5, y: 26))
        pathPath.curve(to: NSPoint(x: 6.5, y: 25), controlPoint1: NSPoint(x: 6.95, y: 26), controlPoint2: NSPoint(x: 6.5, y: 25.56))
        pathPath.line(to: NSPoint(x: 6.5, y: 4))
        pathPath.curve(to: NSPoint(x: 7.5, y: 3), controlPoint1: NSPoint(x: 6.5, y: 3.45), controlPoint2: NSPoint(x: 6.95, y: 3))
        pathPath.line(to: NSPoint(x: 22.5, y: 3))
        pathPath.curve(to: NSPoint(x: 23.5, y: 4), controlPoint1: NSPoint(x: 23.05, y: 3), controlPoint2: NSPoint(x: 23.5, y: 3.44))
        pathPath.line(to: NSPoint(x: 23.5, y: 25))
        pathPath.curve(to: NSPoint(x: 22.5, y: 26), controlPoint1: NSPoint(x: 23.5, y: 25.55), controlPoint2: NSPoint(x: 23.05, y: 26))
        pathPath.line(to: NSPoint(x: 21.5, y: 26))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.line(to: NSPoint(x: 20.5, y: 25))
        pathPath.line(to: NSPoint(x: 20.5, y: 26))
        pathPath.line(to: NSPoint(x: 20.5, y: 26))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNotebookText(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.5, y: 27))
        pathPath.line(to: NSPoint(x: 17.5, y: 27))
        pathPath.line(to: NSPoint(x: 17.5, y: 28))
        pathPath.line(to: NSPoint(x: 16.5, y: 28))
        pathPath.line(to: NSPoint(x: 16.5, y: 27))
        pathPath.line(to: NSPoint(x: 13.5, y: 27))
        pathPath.line(to: NSPoint(x: 13.5, y: 28))
        pathPath.line(to: NSPoint(x: 12.5, y: 28))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.line(to: NSPoint(x: 9.5, y: 27))
        pathPath.line(to: NSPoint(x: 9.5, y: 28))
        pathPath.line(to: NSPoint(x: 8.5, y: 28))
        pathPath.line(to: NSPoint(x: 8.5, y: 27))
        pathPath.line(to: NSPoint(x: 7.5, y: 27))
        pathPath.curve(to: NSPoint(x: 5.5, y: 25), controlPoint1: NSPoint(x: 6.39, y: 27), controlPoint2: NSPoint(x: 5.5, y: 26.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 4))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2), controlPoint1: NSPoint(x: 5.5, y: 2.9), controlPoint2: NSPoint(x: 6.39, y: 2))
        pathPath.line(to: NSPoint(x: 22.5, y: 2))
        pathPath.curve(to: NSPoint(x: 24.5, y: 4), controlPoint1: NSPoint(x: 23.61, y: 2), controlPoint2: NSPoint(x: 24.5, y: 2.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 25))
        pathPath.curve(to: NSPoint(x: 22.5, y: 27), controlPoint1: NSPoint(x: 24.5, y: 26.1), controlPoint2: NSPoint(x: 23.61, y: 27))
        pathPath.line(to: NSPoint(x: 21.5, y: 27))
        pathPath.line(to: NSPoint(x: 21.5, y: 28))
        pathPath.line(to: NSPoint(x: 20.5, y: 28))
        pathPath.line(to: NSPoint(x: 20.5, y: 27))
        pathPath.line(to: NSPoint(x: 20.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 26))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 17.5, y: 25))
        pathPath.line(to: NSPoint(x: 16.5, y: 25))
        pathPath.line(to: NSPoint(x: 16.5, y: 26))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 13.5, y: 25))
        pathPath.line(to: NSPoint(x: 12.5, y: 25))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 9.5, y: 26))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.line(to: NSPoint(x: 8.5, y: 25))
        pathPath.line(to: NSPoint(x: 8.5, y: 26))
        pathPath.line(to: NSPoint(x: 7.5, y: 26))
        pathPath.curve(to: NSPoint(x: 6.5, y: 25), controlPoint1: NSPoint(x: 6.95, y: 26), controlPoint2: NSPoint(x: 6.5, y: 25.56))
        pathPath.line(to: NSPoint(x: 6.5, y: 4))
        pathPath.curve(to: NSPoint(x: 7.5, y: 3), controlPoint1: NSPoint(x: 6.5, y: 3.45), controlPoint2: NSPoint(x: 6.95, y: 3))
        pathPath.line(to: NSPoint(x: 22.5, y: 3))
        pathPath.curve(to: NSPoint(x: 23.5, y: 4), controlPoint1: NSPoint(x: 23.05, y: 3), controlPoint2: NSPoint(x: 23.5, y: 3.44))
        pathPath.line(to: NSPoint(x: 23.5, y: 25))
        pathPath.curve(to: NSPoint(x: 22.5, y: 26), controlPoint1: NSPoint(x: 23.5, y: 25.55), controlPoint2: NSPoint(x: 23.05, y: 26))
        pathPath.line(to: NSPoint(x: 21.5, y: 26))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.line(to: NSPoint(x: 20.5, y: 25))
        pathPath.line(to: NSPoint(x: 20.5, y: 26))
        pathPath.line(to: NSPoint(x: 20.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 22))
        pathPath.line(to: NSPoint(x: 8.5, y: 21))
        pathPath.line(to: NSPoint(x: 21.5, y: 21))
        pathPath.line(to: NSPoint(x: 21.5, y: 22))
        pathPath.line(to: NSPoint(x: 8.5, y: 22))
        pathPath.line(to: NSPoint(x: 8.5, y: 22))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 19))
        pathPath.line(to: NSPoint(x: 8.5, y: 18))
        pathPath.line(to: NSPoint(x: 21.5, y: 18))
        pathPath.line(to: NSPoint(x: 21.5, y: 19))
        pathPath.line(to: NSPoint(x: 8.5, y: 19))
        pathPath.line(to: NSPoint(x: 8.5, y: 19))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 16))
        pathPath.line(to: NSPoint(x: 8.5, y: 15))
        pathPath.line(to: NSPoint(x: 21.5, y: 15))
        pathPath.line(to: NSPoint(x: 21.5, y: 16))
        pathPath.line(to: NSPoint(x: 8.5, y: 16))
        pathPath.line(to: NSPoint(x: 8.5, y: 16))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 13))
        pathPath.line(to: NSPoint(x: 8.5, y: 12))
        pathPath.line(to: NSPoint(x: 21.5, y: 12))
        pathPath.line(to: NSPoint(x: 21.5, y: 13))
        pathPath.line(to: NSPoint(x: 8.5, y: 13))
        pathPath.line(to: NSPoint(x: 8.5, y: 13))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 10))
        pathPath.line(to: NSPoint(x: 8.5, y: 9))
        pathPath.line(to: NSPoint(x: 21.5, y: 9))
        pathPath.line(to: NSPoint(x: 21.5, y: 10))
        pathPath.line(to: NSPoint(x: 8.5, y: 10))
        pathPath.line(to: NSPoint(x: 8.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 7))
        pathPath.line(to: NSPoint(x: 8.5, y: 6))
        pathPath.line(to: NSPoint(x: 21.5, y: 6))
        pathPath.line(to: NSPoint(x: 21.5, y: 7))
        pathPath.line(to: NSPoint(x: 8.5, y: 7))
        pathPath.line(to: NSPoint(x: 8.5, y: 7))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawNotebookList(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.5, y: 27))
        pathPath.line(to: NSPoint(x: 17.5, y: 27))
        pathPath.line(to: NSPoint(x: 17.5, y: 28))
        pathPath.line(to: NSPoint(x: 16.5, y: 28))
        pathPath.line(to: NSPoint(x: 16.5, y: 27))
        pathPath.line(to: NSPoint(x: 13.5, y: 27))
        pathPath.line(to: NSPoint(x: 13.5, y: 28))
        pathPath.line(to: NSPoint(x: 12.5, y: 28))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.line(to: NSPoint(x: 12.5, y: 27))
        pathPath.line(to: NSPoint(x: 9.5, y: 27))
        pathPath.line(to: NSPoint(x: 9.5, y: 28))
        pathPath.line(to: NSPoint(x: 8.5, y: 28))
        pathPath.line(to: NSPoint(x: 8.5, y: 27))
        pathPath.line(to: NSPoint(x: 7.5, y: 27))
        pathPath.curve(to: NSPoint(x: 5.5, y: 25), controlPoint1: NSPoint(x: 6.39, y: 27), controlPoint2: NSPoint(x: 5.5, y: 26.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 4))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2), controlPoint1: NSPoint(x: 5.5, y: 2.9), controlPoint2: NSPoint(x: 6.39, y: 2))
        pathPath.line(to: NSPoint(x: 22.5, y: 2))
        pathPath.curve(to: NSPoint(x: 24.5, y: 4), controlPoint1: NSPoint(x: 23.61, y: 2), controlPoint2: NSPoint(x: 24.5, y: 2.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 25))
        pathPath.curve(to: NSPoint(x: 22.5, y: 27), controlPoint1: NSPoint(x: 24.5, y: 26.1), controlPoint2: NSPoint(x: 23.61, y: 27))
        pathPath.line(to: NSPoint(x: 21.5, y: 27))
        pathPath.line(to: NSPoint(x: 21.5, y: 28))
        pathPath.line(to: NSPoint(x: 20.5, y: 28))
        pathPath.line(to: NSPoint(x: 20.5, y: 27))
        pathPath.line(to: NSPoint(x: 20.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 26))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 17.5, y: 25))
        pathPath.line(to: NSPoint(x: 16.5, y: 25))
        pathPath.line(to: NSPoint(x: 16.5, y: 26))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 13.5, y: 25))
        pathPath.line(to: NSPoint(x: 12.5, y: 25))
        pathPath.line(to: NSPoint(x: 12.5, y: 26))
        pathPath.line(to: NSPoint(x: 9.5, y: 26))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.line(to: NSPoint(x: 8.5, y: 25))
        pathPath.line(to: NSPoint(x: 8.5, y: 26))
        pathPath.line(to: NSPoint(x: 7.5, y: 26))
        pathPath.curve(to: NSPoint(x: 6.5, y: 25), controlPoint1: NSPoint(x: 6.95, y: 26), controlPoint2: NSPoint(x: 6.5, y: 25.56))
        pathPath.line(to: NSPoint(x: 6.5, y: 4))
        pathPath.curve(to: NSPoint(x: 7.5, y: 3), controlPoint1: NSPoint(x: 6.5, y: 3.45), controlPoint2: NSPoint(x: 6.95, y: 3))
        pathPath.line(to: NSPoint(x: 22.5, y: 3))
        pathPath.curve(to: NSPoint(x: 23.5, y: 4), controlPoint1: NSPoint(x: 23.05, y: 3), controlPoint2: NSPoint(x: 23.5, y: 3.44))
        pathPath.line(to: NSPoint(x: 23.5, y: 25))
        pathPath.curve(to: NSPoint(x: 22.5, y: 26), controlPoint1: NSPoint(x: 23.5, y: 25.55), controlPoint2: NSPoint(x: 23.05, y: 26))
        pathPath.line(to: NSPoint(x: 21.5, y: 26))
        pathPath.line(to: NSPoint(x: 21.5, y: 25))
        pathPath.line(to: NSPoint(x: 20.5, y: 25))
        pathPath.line(to: NSPoint(x: 20.5, y: 26))
        pathPath.line(to: NSPoint(x: 20.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 19))
        pathPath.line(to: NSPoint(x: 13.5, y: 18))
        pathPath.line(to: NSPoint(x: 21.5, y: 18))
        pathPath.line(to: NSPoint(x: 21.5, y: 19))
        pathPath.line(to: NSPoint(x: 13.5, y: 19))
        pathPath.line(to: NSPoint(x: 13.5, y: 19))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 20))
        pathPath.line(to: NSPoint(x: 8.5, y: 17))
        pathPath.line(to: NSPoint(x: 11.5, y: 17))
        pathPath.line(to: NSPoint(x: 11.5, y: 20))
        pathPath.line(to: NSPoint(x: 8.5, y: 20))
        pathPath.line(to: NSPoint(x: 8.5, y: 20))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 19))
        pathPath.line(to: NSPoint(x: 9.5, y: 18))
        pathPath.line(to: NSPoint(x: 10.5, y: 18))
        pathPath.line(to: NSPoint(x: 10.5, y: 19))
        pathPath.line(to: NSPoint(x: 9.5, y: 19))
        pathPath.line(to: NSPoint(x: 9.5, y: 19))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 15))
        pathPath.line(to: NSPoint(x: 8.5, y: 12))
        pathPath.line(to: NSPoint(x: 11.5, y: 12))
        pathPath.line(to: NSPoint(x: 11.5, y: 15))
        pathPath.line(to: NSPoint(x: 8.5, y: 15))
        pathPath.line(to: NSPoint(x: 8.5, y: 15))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 14))
        pathPath.line(to: NSPoint(x: 9.5, y: 13))
        pathPath.line(to: NSPoint(x: 10.5, y: 13))
        pathPath.line(to: NSPoint(x: 10.5, y: 14))
        pathPath.line(to: NSPoint(x: 9.5, y: 14))
        pathPath.line(to: NSPoint(x: 9.5, y: 14))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 14))
        pathPath.line(to: NSPoint(x: 13.5, y: 13))
        pathPath.line(to: NSPoint(x: 21.5, y: 13))
        pathPath.line(to: NSPoint(x: 21.5, y: 14))
        pathPath.line(to: NSPoint(x: 13.5, y: 14))
        pathPath.line(to: NSPoint(x: 13.5, y: 14))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 10))
        pathPath.line(to: NSPoint(x: 8.5, y: 7))
        pathPath.line(to: NSPoint(x: 11.5, y: 7))
        pathPath.line(to: NSPoint(x: 11.5, y: 10))
        pathPath.line(to: NSPoint(x: 8.5, y: 10))
        pathPath.line(to: NSPoint(x: 8.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 9))
        pathPath.line(to: NSPoint(x: 9.5, y: 8))
        pathPath.line(to: NSPoint(x: 10.5, y: 8))
        pathPath.line(to: NSPoint(x: 10.5, y: 9))
        pathPath.line(to: NSPoint(x: 9.5, y: 9))
        pathPath.line(to: NSPoint(x: 9.5, y: 9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 9))
        pathPath.line(to: NSPoint(x: 13.5, y: 8))
        pathPath.line(to: NSPoint(x: 21.5, y: 8))
        pathPath.line(to: NSPoint(x: 21.5, y: 9))
        pathPath.line(to: NSPoint(x: 13.5, y: 9))
        pathPath.line(to: NSPoint(x: 13.5, y: 9))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocument(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentText(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 24.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentText2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 24.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentDownload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 6.45))
        pathPath.line(to: NSPoint(x: 11.25, y: 9.7))
        pathPath.line(to: NSPoint(x: 10.5, y: 8.95))
        pathPath.line(to: NSPoint(x: 15, y: 4.45))
        pathPath.line(to: NSPoint(x: 19.5, y: 8.95))
        pathPath.line(to: NSPoint(x: 18.75, y: 9.7))
        pathPath.line(to: NSPoint(x: 15.5, y: 6.45))
        pathPath.line(to: NSPoint(x: 15.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 6.45))
        pathPath.line(to: NSPoint(x: 14.5, y: 6.45))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentUpload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 3.5), controlPoint1: NSPoint(x: 6.95, y: 2.5), controlPoint2: NSPoint(x: 6.5, y: 2.95))
        pathPath.line(to: NSPoint(x: 6.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 27.5), controlPoint1: NSPoint(x: 6.5, y: 27.04), controlPoint2: NSPoint(x: 6.95, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 20.5), controlPoint1: NSPoint(x: 17.5, y: 21.39), controlPoint2: NSPoint(x: 18.39, y: 20.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 3.49))
        pathPath.curve(to: NSPoint(x: 22.5, y: 2.5), controlPoint1: NSPoint(x: 23.5, y: 2.94), controlPoint2: NSPoint(x: 23.05, y: 2.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 18.75, y: 9.25))
        pathPath.line(to: NSPoint(x: 19.5, y: 10))
        pathPath.line(to: NSPoint(x: 15, y: 14.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 10))
        pathPath.line(to: NSPoint(x: 11.25, y: 9.25))
        pathPath.line(to: NSPoint(x: 14.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentBookmark(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 20.5), controlPoint1: NSPoint(x: 17.5, y: 21.39), controlPoint2: NSPoint(x: 18.39, y: 20.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 3.49))
        pathPath.curve(to: NSPoint(x: 22.5, y: 2.5), controlPoint1: NSPoint(x: 23.5, y: 2.94), controlPoint2: NSPoint(x: 23.05, y: 2.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 3.5), controlPoint1: NSPoint(x: 6.95, y: 2.5), controlPoint2: NSPoint(x: 6.5, y: 2.95))
        pathPath.line(to: NSPoint(x: 6.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 27.5), controlPoint1: NSPoint(x: 6.5, y: 27.04), controlPoint2: NSPoint(x: 6.95, y: 27.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 18.9))
        pathPath.line(to: NSPoint(x: 11.5, y: 20.9))
        pathPath.line(to: NSPoint(x: 13.5, y: 18.9))
        pathPath.line(to: NSPoint(x: 13.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 27.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentDiagrams(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 17.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 13, y: 5.5))
        pathPath.line(to: NSPoint(x: 13, y: 5.5))
        pathPath.line(to: NSPoint(x: 17, y: 5.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 15.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 12.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentRecording(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 9, y: 4)



        //// icon-61-document-recording



        NSGraphicsContext.restoreGraphicsState()


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 11.01))
        pathPath.line(to: NSPoint(x: 11.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 11.01))
        pathPath.curve(to: NSPoint(x: 15, y: 8.5), controlPoint1: NSPoint(x: 12.5, y: 9.62), controlPoint2: NSPoint(x: 13.61, y: 8.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 11.01), controlPoint1: NSPoint(x: 16.38, y: 8.5), controlPoint2: NSPoint(x: 17.5, y: 9.62))
        pathPath.line(to: NSPoint(x: 17.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 11.01))
        pathPath.curve(to: NSPoint(x: 15.5, y: 7.54), controlPoint1: NSPoint(x: 18.5, y: 9.24), controlPoint2: NSPoint(x: 17.2, y: 7.78))
        pathPath.line(to: NSPoint(x: 15.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 7.54))
        pathPath.curve(to: NSPoint(x: 11.5, y: 11.01), controlPoint1: NSPoint(x: 12.81, y: 7.78), controlPoint2: NSPoint(x: 11.5, y: 9.24))
        pathPath.line(to: NSPoint(x: 11.5, y: 11.01))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 15))
        pathPath.line(to: NSPoint(x: 13.5, y: 11))
        pathPath.curve(to: NSPoint(x: 15, y: 9.5), controlPoint1: NSPoint(x: 13.5, y: 10.17), controlPoint2: NSPoint(x: 14.17, y: 9.5))
        pathPath.curve(to: NSPoint(x: 16.5, y: 11), controlPoint1: NSPoint(x: 15.83, y: 9.5), controlPoint2: NSPoint(x: 16.5, y: 10.17))
        pathPath.line(to: NSPoint(x: 16.5, y: 15))
        pathPath.curve(to: NSPoint(x: 15, y: 16.5), controlPoint1: NSPoint(x: 16.5, y: 15.83), controlPoint2: NSPoint(x: 15.83, y: 16.5))
        pathPath.curve(to: NSPoint(x: 13.5, y: 15), controlPoint1: NSPoint(x: 14.17, y: 16.5), controlPoint2: NSPoint(x: 13.5, y: 15.83))
        pathPath.line(to: NSPoint(x: 13.5, y: 15))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 15.5))
        pathPath.curve(to: NSPoint(x: 14.5, y: 15), controlPoint1: NSPoint(x: 14.72, y: 15.5), controlPoint2: NSPoint(x: 14.5, y: 15.29))
        pathPath.line(to: NSPoint(x: 14.5, y: 11))
        pathPath.curve(to: NSPoint(x: 15, y: 10.5), controlPoint1: NSPoint(x: 14.5, y: 10.72), controlPoint2: NSPoint(x: 14.73, y: 10.5))
        pathPath.curve(to: NSPoint(x: 15.5, y: 11), controlPoint1: NSPoint(x: 15.28, y: 10.5), controlPoint2: NSPoint(x: 15.5, y: 10.71))
        pathPath.line(to: NSPoint(x: 15.5, y: 15))
        pathPath.curve(to: NSPoint(x: 15, y: 15.5), controlPoint1: NSPoint(x: 15.5, y: 15.28), controlPoint2: NSPoint(x: 15.27, y: 15.5))
        pathPath.line(to: NSPoint(x: 15, y: 15.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentTable(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 16.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 16.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 18.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentMusic(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.5, y: 16.28))
        pathPath.line(to: NSPoint(x: 20.5, y: 10))
        pathPath.curve(to: NSPoint(x: 19, y: 10.5), controlPoint1: NSPoint(x: 20.08, y: 10.31), controlPoint2: NSPoint(x: 19.56, y: 10.5))
        pathPath.curve(to: NSPoint(x: 16.5, y: 8), controlPoint1: NSPoint(x: 17.62, y: 10.5), controlPoint2: NSPoint(x: 16.5, y: 9.38))
        pathPath.curve(to: NSPoint(x: 19, y: 5.5), controlPoint1: NSPoint(x: 16.5, y: 6.62), controlPoint2: NSPoint(x: 17.62, y: 5.5))
        pathPath.curve(to: NSPoint(x: 21.5, y: 8), controlPoint1: NSPoint(x: 20.38, y: 5.5), controlPoint2: NSPoint(x: 21.5, y: 6.62))
        pathPath.line(to: NSPoint(x: 21.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 15))
        pathPath.line(to: NSPoint(x: 12.5, y: 9))
        pathPath.curve(to: NSPoint(x: 11, y: 9.5), controlPoint1: NSPoint(x: 12.08, y: 9.31), controlPoint2: NSPoint(x: 11.56, y: 9.5))
        pathPath.curve(to: NSPoint(x: 8.5, y: 7), controlPoint1: NSPoint(x: 9.62, y: 9.5), controlPoint2: NSPoint(x: 8.5, y: 8.38))
        pathPath.curve(to: NSPoint(x: 11, y: 4.5), controlPoint1: NSPoint(x: 8.5, y: 5.62), controlPoint2: NSPoint(x: 9.62, y: 4.5))
        pathPath.curve(to: NSPoint(x: 13.5, y: 7), controlPoint1: NSPoint(x: 12.38, y: 4.5), controlPoint2: NSPoint(x: 13.5, y: 5.62))
        pathPath.line(to: NSPoint(x: 13.5, y: 14.72))
        pathPath.line(to: NSPoint(x: 20.5, y: 16.28))
        pathPath.line(to: NSPoint(x: 20.5, y: 16.28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11, y: 5.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 7), controlPoint1: NSPoint(x: 11.83, y: 5.5), controlPoint2: NSPoint(x: 12.5, y: 6.17))
        pathPath.curve(to: NSPoint(x: 11, y: 8.5), controlPoint1: NSPoint(x: 12.5, y: 7.83), controlPoint2: NSPoint(x: 11.83, y: 8.5))
        pathPath.curve(to: NSPoint(x: 9.5, y: 7), controlPoint1: NSPoint(x: 10.17, y: 8.5), controlPoint2: NSPoint(x: 9.5, y: 7.83))
        pathPath.curve(to: NSPoint(x: 11, y: 5.5), controlPoint1: NSPoint(x: 9.5, y: 6.17), controlPoint2: NSPoint(x: 10.17, y: 5.5))
        pathPath.line(to: NSPoint(x: 11, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19, y: 6.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 8), controlPoint1: NSPoint(x: 19.83, y: 6.5), controlPoint2: NSPoint(x: 20.5, y: 7.17))
        pathPath.curve(to: NSPoint(x: 19, y: 9.5), controlPoint1: NSPoint(x: 20.5, y: 8.83), controlPoint2: NSPoint(x: 19.83, y: 9.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 8), controlPoint1: NSPoint(x: 18.17, y: 9.5), controlPoint2: NSPoint(x: 17.5, y: 8.83))
        pathPath.curve(to: NSPoint(x: 19, y: 6.5), controlPoint1: NSPoint(x: 17.5, y: 7.17), controlPoint2: NSPoint(x: 18.17, y: 6.5))
        pathPath.line(to: NSPoint(x: 19, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentMovie(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 6.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentImage(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.5, y: 7.45))
        pathPath.line(to: NSPoint(x: 20.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 12, y: 8.5))
        pathPath.line(to: NSPoint(x: 13.46, y: 7.25))
        pathPath.line(to: NSPoint(x: 17.09, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 7.45))
        pathPath.line(to: NSPoint(x: 20.5, y: 7.45))
        pathPath.line(to: NSPoint(x: 20.5, y: 7.45))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 10.5))
        pathPath.curve(to: NSPoint(x: 13.5, y: 11.5), controlPoint1: NSPoint(x: 13.05, y: 10.5), controlPoint2: NSPoint(x: 13.5, y: 10.95))
        pathPath.curve(to: NSPoint(x: 12.5, y: 12.5), controlPoint1: NSPoint(x: 13.5, y: 12.05), controlPoint2: NSPoint(x: 13.05, y: 12.5))
        pathPath.curve(to: NSPoint(x: 11.5, y: 11.5), controlPoint1: NSPoint(x: 11.95, y: 12.5), controlPoint2: NSPoint(x: 11.5, y: 12.05))
        pathPath.curve(to: NSPoint(x: 12.5, y: 10.5), controlPoint1: NSPoint(x: 11.5, y: 10.95), controlPoint2: NSPoint(x: 11.95, y: 10.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 10.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentPlay(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 10))
        pathPath.line(to: NSPoint(x: 10.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 12.9))
        pathPath.line(to: NSPoint(x: 11.5, y: 7.1))
        pathPath.line(to: NSPoint(x: 17.3, y: 10))
        pathPath.line(to: NSPoint(x: 11.5, y: 12.9))
        pathPath.line(to: NSPoint(x: 11.5, y: 12.9))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentGraph(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 13.46, y: 9.7))
        pathPath.line(to: NSPoint(x: 10.5, y: 6.53))
        pathPath.line(to: NSPoint(x: 10.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 7.99))
        pathPath.line(to: NSPoint(x: 13.41, y: 11.11))
        pathPath.line(to: NSPoint(x: 14.14, y: 10.43))
        pathPath.line(to: NSPoint(x: 15.6, y: 9.07))
        pathPath.line(to: NSPoint(x: 18.81, y: 12.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 11.78))
        pathPath.line(to: NSPoint(x: 15.65, y: 7.65))
        pathPath.line(to: NSPoint(x: 14.92, y: 8.33))
        pathPath.line(to: NSPoint(x: 13.46, y: 9.7))
        pathPath.line(to: NSPoint(x: 13.46, y: 9.7))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentTime(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 19.47, y: 10.5))
        pathPath.curve(to: NSPoint(x: 15.5, y: 14.47), controlPoint1: NSPoint(x: 19.24, y: 12.59), controlPoint2: NSPoint(x: 17.59, y: 14.24))
        pathPath.line(to: NSPoint(x: 15.5, y: 14.47))
        pathPath.line(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.47, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.47, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.47, y: 9.5))
        pathPath.curve(to: NSPoint(x: 15, y: 5.5), controlPoint1: NSPoint(x: 19.22, y: 7.25), controlPoint2: NSPoint(x: 17.32, y: 5.5))
        pathPath.curve(to: NSPoint(x: 10.5, y: 10), controlPoint1: NSPoint(x: 12.51, y: 5.5), controlPoint2: NSPoint(x: 10.5, y: 7.51))
        pathPath.curve(to: NSPoint(x: 14.5, y: 14.47), controlPoint1: NSPoint(x: 10.5, y: 12.32), controlPoint2: NSPoint(x: 12.25, y: 14.22))
        pathPath.line(to: NSPoint(x: 14.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 19.47, y: 9.5))
        pathPath.line(to: NSPoint(x: 19.47, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 4.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 10), controlPoint1: NSPoint(x: 18.04, y: 4.5), controlPoint2: NSPoint(x: 20.5, y: 6.96))
        pathPath.curve(to: NSPoint(x: 15, y: 15.5), controlPoint1: NSPoint(x: 20.5, y: 13.04), controlPoint2: NSPoint(x: 18.04, y: 15.5))
        pathPath.curve(to: NSPoint(x: 9.5, y: 10), controlPoint1: NSPoint(x: 11.96, y: 15.5), controlPoint2: NSPoint(x: 9.5, y: 13.04))
        pathPath.curve(to: NSPoint(x: 15, y: 4.5), controlPoint1: NSPoint(x: 9.5, y: 6.96), controlPoint2: NSPoint(x: 11.96, y: 4.5))
        pathPath.line(to: NSPoint(x: 15, y: 4.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentText3(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 11, y: 1)



        //// icon-69-document-text



        NSGraphicsContext.restoreGraphicsState()


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 25.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentCode(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 12.2, y: 11.8))
        pathPath.line(to: NSPoint(x: 9.9, y: 9.5))
        pathPath.line(to: NSPoint(x: 12.2, y: 7.2))
        pathPath.line(to: NSPoint(x: 11.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 6.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 17.8, y: 11.8))
        pathPath.line(to: NSPoint(x: 20.1, y: 9.5))
        pathPath.line(to: NSPoint(x: 17.8, y: 7.2))
        pathPath.line(to: NSPoint(x: 18.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentCloud(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.54, y: 10.5))
        pathPath.line(to: NSPoint(x: 14.51, y: 10.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 8.5), controlPoint1: NSPoint(x: 13.4, y: 10.5), controlPoint2: NSPoint(x: 12.5, y: 9.61))
        pathPath.curve(to: NSPoint(x: 14.51, y: 6.5), controlPoint1: NSPoint(x: 12.5, y: 7.4), controlPoint2: NSPoint(x: 13.4, y: 6.5))
        pathPath.line(to: NSPoint(x: 24.49, y: 6.5))
        pathPath.curve(to: NSPoint(x: 26.5, y: 8.5), controlPoint1: NSPoint(x: 25.6, y: 6.5), controlPoint2: NSPoint(x: 26.5, y: 7.39))
        pathPath.curve(to: NSPoint(x: 24.49, y: 10.5), controlPoint1: NSPoint(x: 26.5, y: 9.6), controlPoint2: NSPoint(x: 25.6, y: 10.5))
        pathPath.line(to: NSPoint(x: 24.45, y: 10.5))
        pathPath.line(to: NSPoint(x: 24.45, y: 10.5))
        pathPath.curve(to: NSPoint(x: 22, y: 12.5), controlPoint1: NSPoint(x: 24.22, y: 11.64), controlPoint2: NSPoint(x: 23.21, y: 12.5))
        pathPath.curve(to: NSPoint(x: 21.22, y: 12.38), controlPoint1: NSPoint(x: 21.73, y: 12.5), controlPoint2: NSPoint(x: 21.46, y: 12.46))
        pathPath.curve(to: NSPoint(x: 18, y: 14.5), controlPoint1: NSPoint(x: 20.68, y: 13.62), controlPoint2: NSPoint(x: 19.44, y: 14.5))
        pathPath.curve(to: NSPoint(x: 14.5, y: 11), controlPoint1: NSPoint(x: 16.07, y: 14.5), controlPoint2: NSPoint(x: 14.5, y: 12.93))
        pathPath.curve(to: NSPoint(x: 14.54, y: 10.5), controlPoint1: NSPoint(x: 14.5, y: 10.83), controlPoint2: NSPoint(x: 14.51, y: 10.66))
        pathPath.line(to: NSPoint(x: 14.54, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 13.83))
        pathPath.line(to: NSPoint(x: 21.5, y: 21))
        pathPath.line(to: NSPoint(x: 21.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 15, y: 28.5))
        pathPath.line(to: NSPoint(x: 15, y: 28.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 2.5, y: 26.49), controlPoint1: NSPoint(x: 3.4, y: 28.5), controlPoint2: NSPoint(x: 2.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 2.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 4.5, y: 1.5), controlPoint1: NSPoint(x: 2.5, y: 2.4), controlPoint2: NSPoint(x: 3.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 21.5, y: 3.49), controlPoint1: NSPoint(x: 20.61, y: 1.5), controlPoint2: NSPoint(x: 21.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 21.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.49, y: 5.5))
        pathPath.curve(to: NSPoint(x: 27.5, y: 8.5), controlPoint1: NSPoint(x: 26.15, y: 5.5), controlPoint2: NSPoint(x: 27.5, y: 6.85))
        pathPath.curve(to: NSPoint(x: 25.2, y: 11.42), controlPoint1: NSPoint(x: 27.5, y: 9.91), controlPoint2: NSPoint(x: 26.53, y: 11.1))
        pathPath.curve(to: NSPoint(x: 22, y: 13.5), controlPoint1: NSPoint(x: 24.66, y: 12.64), controlPoint2: NSPoint(x: 23.43, y: 13.5))
        pathPath.curve(to: NSPoint(x: 21.75, y: 13.49), controlPoint1: NSPoint(x: 21.92, y: 13.5), controlPoint2: NSPoint(x: 21.83, y: 13.5))
        pathPath.curve(to: NSPoint(x: 21.5, y: 13.83), controlPoint1: NSPoint(x: 21.67, y: 13.61), controlPoint2: NSPoint(x: 21.59, y: 13.72))
        pathPath.line(to: NSPoint(x: 21.5, y: 13.83))
        pathPath.line(to: NSPoint(x: 21.5, y: 13.83))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 14.74))
        pathPath.line(to: NSPoint(x: 20.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 14.5, y: 22.51), controlPoint1: NSPoint(x: 15.39, y: 20.5), controlPoint2: NSPoint(x: 14.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 14.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 3.5, y: 26.5), controlPoint1: NSPoint(x: 3.95, y: 27.5), controlPoint2: NSPoint(x: 3.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 3.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 4.5, y: 2.5), controlPoint1: NSPoint(x: 3.5, y: 2.95), controlPoint2: NSPoint(x: 3.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 3.49), controlPoint1: NSPoint(x: 20.05, y: 2.5), controlPoint2: NSPoint(x: 20.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 20.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 14.51, y: 5.5))
        pathPath.curve(to: NSPoint(x: 11.5, y: 8.5), controlPoint1: NSPoint(x: 12.84, y: 5.5), controlPoint2: NSPoint(x: 11.5, y: 6.84))
        pathPath.curve(to: NSPoint(x: 13.51, y: 11.33), controlPoint1: NSPoint(x: 11.5, y: 9.81), controlPoint2: NSPoint(x: 12.34, y: 10.92))
        pathPath.curve(to: NSPoint(x: 18, y: 15.5), controlPoint1: NSPoint(x: 13.68, y: 13.66), controlPoint2: NSPoint(x: 15.63, y: 15.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 14.74), controlPoint1: NSPoint(x: 18.93, y: 15.5), controlPoint2: NSPoint(x: 19.78, y: 15.22))
        pathPath.line(to: NSPoint(x: 20.5, y: 14.74))
        pathPath.line(to: NSPoint(x: 20.5, y: 14.74))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 27))
        pathPath.line(to: NSPoint(x: 15.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 16.5, y: 21.5), controlPoint1: NSPoint(x: 15.5, y: 21.95), controlPoint2: NSPoint(x: 15.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 20.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 27))
        pathPath.line(to: NSPoint(x: 15.5, y: 27))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocuments2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 5.91, y: 26.13))
        pathPath.line(to: NSPoint(x: 5.91, y: 26.13))
        pathPath.curve(to: NSPoint(x: 4, y: 24.19), controlPoint1: NSPoint(x: 4.86, y: 26.13), controlPoint2: NSPoint(x: 4, y: 25.26))
        pathPath.line(to: NSPoint(x: 4, y: 1.94))
        pathPath.curve(to: NSPoint(x: 5.91, y: 0), controlPoint1: NSPoint(x: 4, y: 0.87), controlPoint2: NSPoint(x: 4.85, y: 0))
        pathPath.line(to: NSPoint(x: 20.26, y: 0))
        pathPath.curve(to: NSPoint(x: 22.18, y: 1.94), controlPoint1: NSPoint(x: 21.32, y: 0), controlPoint2: NSPoint(x: 22.17, y: 0.87))
        pathPath.curve(to: NSPoint(x: 24.09, y: 3.87), controlPoint1: NSPoint(x: 23.23, y: 1.94), controlPoint2: NSPoint(x: 24.08, y: 2.8))
        pathPath.curve(to: NSPoint(x: 26, y: 5.8), controlPoint1: NSPoint(x: 25.14, y: 3.87), controlPoint2: NSPoint(x: 26, y: 4.74))
        pathPath.line(to: NSPoint(x: 26, y: 22.74))
        pathPath.line(to: NSPoint(x: 26, y: 23.23))
        pathPath.line(to: NSPoint(x: 20.26, y: 30))
        pathPath.line(to: NSPoint(x: 9.74, y: 30))
        pathPath.curve(to: NSPoint(x: 7.82, y: 28.06), controlPoint1: NSPoint(x: 8.69, y: 30), controlPoint2: NSPoint(x: 7.83, y: 29.13))
        pathPath.curve(to: NSPoint(x: 5.91, y: 26.13), controlPoint1: NSPoint(x: 6.77, y: 28.06), controlPoint2: NSPoint(x: 5.92, y: 27.2))
        pathPath.line(to: NSPoint(x: 5.91, y: 26.13))
        pathPath.line(to: NSPoint(x: 5.91, y: 26.13))
        pathPath.line(to: NSPoint(x: 5.91, y: 26.13))
        pathPath.line(to: NSPoint(x: 5.91, y: 26.13))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.91, y: 25.16))
        pathPath.curve(to: NSPoint(x: 4.96, y: 24.2), controlPoint1: NSPoint(x: 5.38, y: 25.16), controlPoint2: NSPoint(x: 4.96, y: 24.72))
        pathPath.line(to: NSPoint(x: 4.96, y: 1.93))
        pathPath.curve(to: NSPoint(x: 5.91, y: 0.97), controlPoint1: NSPoint(x: 4.96, y: 1.4), controlPoint2: NSPoint(x: 5.39, y: 0.97))
        pathPath.line(to: NSPoint(x: 20.26, y: 0.97))
        pathPath.curve(to: NSPoint(x: 21.22, y: 1.93), controlPoint1: NSPoint(x: 20.79, y: 0.97), controlPoint2: NSPoint(x: 21.22, y: 1.41))
        pathPath.line(to: NSPoint(x: 7.82, y: 1.94))
        pathPath.curve(to: NSPoint(x: 5.91, y: 3.88), controlPoint1: NSPoint(x: 6.77, y: 1.94), controlPoint2: NSPoint(x: 5.91, y: 2.81))
        pathPath.line(to: NSPoint(x: 5.91, y: 25.16))
        pathPath.line(to: NSPoint(x: 5.91, y: 25.16))
        pathPath.line(to: NSPoint(x: 5.91, y: 25.16))
        pathPath.line(to: NSPoint(x: 5.91, y: 25.16))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.83, y: 27.1))
        pathPath.curve(to: NSPoint(x: 6.87, y: 26.13), controlPoint1: NSPoint(x: 7.3, y: 27.1), controlPoint2: NSPoint(x: 6.87, y: 26.66))
        pathPath.line(to: NSPoint(x: 6.87, y: 3.87))
        pathPath.curve(to: NSPoint(x: 7.83, y: 2.9), controlPoint1: NSPoint(x: 6.87, y: 3.33), controlPoint2: NSPoint(x: 7.3, y: 2.9))
        pathPath.line(to: NSPoint(x: 22.17, y: 2.9))
        pathPath.curve(to: NSPoint(x: 23.13, y: 3.87), controlPoint1: NSPoint(x: 22.7, y: 2.9), controlPoint2: NSPoint(x: 23.13, y: 3.34))
        pathPath.line(to: NSPoint(x: 23.13, y: 3.87))
        pathPath.line(to: NSPoint(x: 9.74, y: 3.87))
        pathPath.curve(to: NSPoint(x: 7.83, y: 5.81), controlPoint1: NSPoint(x: 8.68, y: 3.87), controlPoint2: NSPoint(x: 7.83, y: 4.74))
        pathPath.line(to: NSPoint(x: 7.83, y: 27.1))
        pathPath.line(to: NSPoint(x: 7.83, y: 27.1))
        pathPath.line(to: NSPoint(x: 7.83, y: 27.1))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.3, y: 29.03))
        pathPath.line(to: NSPoint(x: 9.73, y: 29.03))
        pathPath.curve(to: NSPoint(x: 8.78, y: 28.07), controlPoint1: NSPoint(x: 9.21, y: 29.03), controlPoint2: NSPoint(x: 8.78, y: 28.59))
        pathPath.line(to: NSPoint(x: 8.78, y: 5.8))
        pathPath.curve(to: NSPoint(x: 9.74, y: 4.84), controlPoint1: NSPoint(x: 8.78, y: 5.27), controlPoint2: NSPoint(x: 9.22, y: 4.84))
        pathPath.line(to: NSPoint(x: 24.09, y: 4.84))
        pathPath.curve(to: NSPoint(x: 25.04, y: 5.8), controlPoint1: NSPoint(x: 24.62, y: 4.84), controlPoint2: NSPoint(x: 25.04, y: 5.27))
        pathPath.line(to: NSPoint(x: 25.04, y: 22.26))
        pathPath.line(to: NSPoint(x: 21.22, y: 22.26))
        pathPath.curve(to: NSPoint(x: 19.3, y: 24.2), controlPoint1: NSPoint(x: 20.16, y: 22.26), controlPoint2: NSPoint(x: 19.3, y: 23.12))
        pathPath.line(to: NSPoint(x: 19.3, y: 29.03))
        pathPath.line(to: NSPoint(x: 19.3, y: 29.03))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.26, y: 28.55))
        pathPath.line(to: NSPoint(x: 20.26, y: 24.2))
        pathPath.curve(to: NSPoint(x: 21.21, y: 23.23), controlPoint1: NSPoint(x: 20.26, y: 23.66), controlPoint2: NSPoint(x: 20.69, y: 23.23))
        pathPath.line(to: NSPoint(x: 24.76, y: 23.23))
        pathPath.line(to: NSPoint(x: 20.26, y: 28.55))
        pathPath.line(to: NSPoint(x: 20.26, y: 28.55))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocuments3(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.98, y: 18.28))
        pathPath.line(to: NSPoint(x: 20.98, y: 5.62))
        pathPath.line(to: NSPoint(x: 24.66, y: 5.62))
        pathPath.curve(to: NSPoint(x: 25.58, y: 6.56), controlPoint1: NSPoint(x: 25.17, y: 5.62), controlPoint2: NSPoint(x: 25.58, y: 6.04))
        pathPath.line(to: NSPoint(x: 25.58, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.9, y: 22.5))
        pathPath.curve(to: NSPoint(x: 20.06, y: 24.38), controlPoint1: NSPoint(x: 20.88, y: 22.5), controlPoint2: NSPoint(x: 20.06, y: 23.33))
        pathPath.line(to: NSPoint(x: 20.06, y: 29.06))
        pathPath.line(to: NSPoint(x: 10.86, y: 29.06))
        pathPath.curve(to: NSPoint(x: 9.94, y: 28.13), controlPoint1: NSPoint(x: 10.35, y: 29.06), controlPoint2: NSPoint(x: 9.94, y: 28.64))
        pathPath.line(to: NSPoint(x: 9.94, y: 25.31))
        pathPath.line(to: NSPoint(x: 9.94, y: 25.31))
        pathPath.line(to: NSPoint(x: 15, y: 25.31))
        pathPath.line(to: NSPoint(x: 15.46, y: 25.31))
        pathPath.line(to: NSPoint(x: 20.98, y: 18.75))
        pathPath.line(to: NSPoint(x: 20.98, y: 18.28))
        pathPath.line(to: NSPoint(x: 20.98, y: 18.28))
        pathPath.line(to: NSPoint(x: 20.98, y: 18.28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.02, y: 25.31))
        pathPath.line(to: NSPoint(x: 9.02, y: 28.12))
        pathPath.curve(to: NSPoint(x: 10.86, y: 30), controlPoint1: NSPoint(x: 9.02, y: 29.16), controlPoint2: NSPoint(x: 9.84, y: 30))
        pathPath.line(to: NSPoint(x: 20.52, y: 30))
        pathPath.line(to: NSPoint(x: 20.52, y: 30))
        pathPath.line(to: NSPoint(x: 20.98, y: 30))
        pathPath.line(to: NSPoint(x: 26.5, y: 23.44))
        pathPath.line(to: NSPoint(x: 26.5, y: 22.97))
        pathPath.line(to: NSPoint(x: 26.5, y: 6.55))
        pathPath.curve(to: NSPoint(x: 24.66, y: 4.69), controlPoint1: NSPoint(x: 26.5, y: 5.53), controlPoint2: NSPoint(x: 25.68, y: 4.69))
        pathPath.line(to: NSPoint(x: 20.98, y: 4.69))
        pathPath.line(to: NSPoint(x: 20.98, y: 1.87))
        pathPath.curve(to: NSPoint(x: 19.14, y: 0), controlPoint1: NSPoint(x: 20.98, y: 0.84), controlPoint2: NSPoint(x: 20.16, y: 0))
        pathPath.line(to: NSPoint(x: 5.34, y: 0))
        pathPath.curve(to: NSPoint(x: 3.5, y: 1.88), controlPoint1: NSPoint(x: 4.32, y: 0), controlPoint2: NSPoint(x: 3.5, y: 0.84))
        pathPath.line(to: NSPoint(x: 3.5, y: 23.43))
        pathPath.curve(to: NSPoint(x: 5.34, y: 25.31), controlPoint1: NSPoint(x: 3.5, y: 24.47), controlPoint2: NSPoint(x: 4.32, y: 25.31))
        pathPath.line(to: NSPoint(x: 9.02, y: 25.31))
        pathPath.line(to: NSPoint(x: 9.02, y: 25.31))
        pathPath.line(to: NSPoint(x: 9.02, y: 25.31))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.98, y: 28.59))
        pathPath.line(to: NSPoint(x: 20.98, y: 24.38))
        pathPath.curve(to: NSPoint(x: 21.9, y: 23.44), controlPoint1: NSPoint(x: 20.98, y: 23.86), controlPoint2: NSPoint(x: 21.39, y: 23.44))
        pathPath.line(to: NSPoint(x: 25.3, y: 23.44))
        pathPath.line(to: NSPoint(x: 20.98, y: 28.59))
        pathPath.line(to: NSPoint(x: 20.98, y: 28.59))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.54, y: 24.38))
        pathPath.line(to: NSPoint(x: 5.34, y: 24.38))
        pathPath.curve(to: NSPoint(x: 4.42, y: 23.44), controlPoint1: NSPoint(x: 4.83, y: 24.38), controlPoint2: NSPoint(x: 4.42, y: 23.95))
        pathPath.line(to: NSPoint(x: 4.42, y: 1.87))
        pathPath.curve(to: NSPoint(x: 5.34, y: 0.94), controlPoint1: NSPoint(x: 4.42, y: 1.36), controlPoint2: NSPoint(x: 4.84, y: 0.94))
        pathPath.line(to: NSPoint(x: 19.14, y: 0.94))
        pathPath.curve(to: NSPoint(x: 20.06, y: 1.87), controlPoint1: NSPoint(x: 19.65, y: 0.94), controlPoint2: NSPoint(x: 20.06, y: 1.35))
        pathPath.line(to: NSPoint(x: 20.06, y: 17.81))
        pathPath.line(to: NSPoint(x: 16.38, y: 17.81))
        pathPath.curve(to: NSPoint(x: 14.54, y: 19.69), controlPoint1: NSPoint(x: 15.36, y: 17.81), controlPoint2: NSPoint(x: 14.54, y: 18.64))
        pathPath.line(to: NSPoint(x: 14.54, y: 24.38))
        pathPath.line(to: NSPoint(x: 14.54, y: 24.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.46, y: 23.91))
        pathPath.line(to: NSPoint(x: 15.46, y: 19.7))
        pathPath.curve(to: NSPoint(x: 16.38, y: 18.75), controlPoint1: NSPoint(x: 15.46, y: 19.17), controlPoint2: NSPoint(x: 15.87, y: 18.75))
        pathPath.line(to: NSPoint(x: 19.78, y: 18.75))
        pathPath.line(to: NSPoint(x: 15.46, y: 23.91))
        pathPath.line(to: NSPoint(x: 15.46, y: 23.91))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentSearch(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15.81, y: 9.48))
        pathPath.curve(to: NSPoint(x: 13, y: 8.5), controlPoint1: NSPoint(x: 15.04, y: 8.87), controlPoint2: NSPoint(x: 14.06, y: 8.5))
        pathPath.curve(to: NSPoint(x: 8.5, y: 13), controlPoint1: NSPoint(x: 10.51, y: 8.5), controlPoint2: NSPoint(x: 8.5, y: 10.51))
        pathPath.curve(to: NSPoint(x: 13, y: 17.5), controlPoint1: NSPoint(x: 8.5, y: 15.49), controlPoint2: NSPoint(x: 10.51, y: 17.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 13), controlPoint1: NSPoint(x: 15.49, y: 17.5), controlPoint2: NSPoint(x: 17.5, y: 15.49))
        pathPath.curve(to: NSPoint(x: 16.52, y: 10.19), controlPoint1: NSPoint(x: 17.5, y: 11.94), controlPoint2: NSPoint(x: 17.13, y: 10.96))
        pathPath.line(to: NSPoint(x: 21.86, y: 4.84))
        pathPath.line(to: NSPoint(x: 21.16, y: 4.14))
        pathPath.line(to: NSPoint(x: 15.81, y: 9.48))
        pathPath.line(to: NSPoint(x: 15.81, y: 9.48))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13, y: 9.5))
        pathPath.curve(to: NSPoint(x: 16.5, y: 13), controlPoint1: NSPoint(x: 14.93, y: 9.5), controlPoint2: NSPoint(x: 16.5, y: 11.07))
        pathPath.curve(to: NSPoint(x: 13, y: 16.5), controlPoint1: NSPoint(x: 16.5, y: 14.93), controlPoint2: NSPoint(x: 14.93, y: 16.5))
        pathPath.curve(to: NSPoint(x: 9.5, y: 13), controlPoint1: NSPoint(x: 11.07, y: 16.5), controlPoint2: NSPoint(x: 9.5, y: 14.93))
        pathPath.curve(to: NSPoint(x: 13, y: 9.5), controlPoint1: NSPoint(x: 9.5, y: 11.07), controlPoint2: NSPoint(x: 11.07, y: 9.5))
        pathPath.line(to: NSPoint(x: 13, y: 9.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentStar(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 8.5))
        pathPath.line(to: NSPoint(x: 11, y: 5.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 15, y: 18.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19, y: 5.5))
        pathPath.line(to: NSPoint(x: 15, y: 8.5))
        pathPath.line(to: NSPoint(x: 15, y: 8.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentUnlocked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 23, y: 13.16))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 29.5))
        pathPath.line(to: NSPoint(x: 6, y: 29.5))
        pathPath.curve(to: NSPoint(x: 4, y: 27.49), controlPoint1: NSPoint(x: 4.9, y: 29.5), controlPoint2: NSPoint(x: 4, y: 28.6))
        pathPath.line(to: NSPoint(x: 4, y: 4.51))
        pathPath.curve(to: NSPoint(x: 6, y: 2.5), controlPoint1: NSPoint(x: 4, y: 3.4), controlPoint2: NSPoint(x: 4.89, y: 2.5))
        pathPath.line(to: NSPoint(x: 17, y: 2.5))
        pathPath.line(to: NSPoint(x: 17, y: 1.5))
        pathPath.curve(to: NSPoint(x: 18, y: 0.5), controlPoint1: NSPoint(x: 17, y: 0.95), controlPoint2: NSPoint(x: 17.45, y: 0.5))
        pathPath.line(to: NSPoint(x: 25, y: 0.5))
        pathPath.curve(to: NSPoint(x: 26, y: 1.5), controlPoint1: NSPoint(x: 25.55, y: 0.5), controlPoint2: NSPoint(x: 26, y: 0.94))
        pathPath.line(to: NSPoint(x: 26, y: 5.49))
        pathPath.line(to: NSPoint(x: 26, y: 6.5))
        pathPath.curve(to: NSPoint(x: 25, y: 7.5), controlPoint1: NSPoint(x: 26, y: 7.05), controlPoint2: NSPoint(x: 25.55, y: 7.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 10))
        pathPath.curve(to: NSPoint(x: 21.5, y: 12.5), controlPoint1: NSPoint(x: 19, y: 11.37), controlPoint2: NSPoint(x: 20.12, y: 12.5))
        pathPath.curve(to: NSPoint(x: 24, y: 10), controlPoint1: NSPoint(x: 22.89, y: 12.5), controlPoint2: NSPoint(x: 24, y: 11.38))
        pathPath.line(to: NSPoint(x: 24, y: 9.5))
        pathPath.line(to: NSPoint(x: 25, y: 9.5))
        pathPath.line(to: NSPoint(x: 25, y: 10))
        pathPath.curve(to: NSPoint(x: 23, y: 13.16), controlPoint1: NSPoint(x: 25, y: 11.39), controlPoint2: NSPoint(x: 24.18, y: 12.6))
        pathPath.line(to: NSPoint(x: 23, y: 13.16))
        pathPath.line(to: NSPoint(x: 23, y: 13.16))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 3.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.5))
        pathPath.curve(to: NSPoint(x: 5, y: 4.5), controlPoint1: NSPoint(x: 5.45, y: 3.5), controlPoint2: NSPoint(x: 5, y: 3.95))
        pathPath.line(to: NSPoint(x: 5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6, y: 28.5), controlPoint1: NSPoint(x: 5, y: 28.04), controlPoint2: NSPoint(x: 5.45, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 21.5), controlPoint1: NSPoint(x: 16, y: 22.39), controlPoint2: NSPoint(x: 16.89, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 13.46))
        pathPath.curve(to: NSPoint(x: 21.5, y: 13.5), controlPoint1: NSPoint(x: 21.84, y: 13.49), controlPoint2: NSPoint(x: 21.67, y: 13.5))
        pathPath.curve(to: NSPoint(x: 18, y: 10), controlPoint1: NSPoint(x: 19.57, y: 13.5), controlPoint2: NSPoint(x: 18, y: 11.93))
        pathPath.line(to: NSPoint(x: 18, y: 7.5))
        pathPath.curve(to: NSPoint(x: 17, y: 6.5), controlPoint1: NSPoint(x: 17.45, y: 7.5), controlPoint2: NSPoint(x: 17, y: 7.06))
        pathPath.line(to: NSPoint(x: 17, y: 3.5))
        pathPath.line(to: NSPoint(x: 17, y: 3.5))
        pathPath.line(to: NSPoint(x: 17, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 22.5), controlPoint1: NSPoint(x: 17, y: 22.95), controlPoint2: NSPoint(x: 17.45, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.7, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 6.5))
        pathPath.curve(to: NSPoint(x: 18, y: 6), controlPoint1: NSPoint(x: 18.23, y: 6.5), controlPoint2: NSPoint(x: 18, y: 6.29))
        pathPath.line(to: NSPoint(x: 18, y: 2))
        pathPath.curve(to: NSPoint(x: 18.5, y: 1.5), controlPoint1: NSPoint(x: 18, y: 1.72), controlPoint2: NSPoint(x: 18.23, y: 1.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 2), controlPoint1: NSPoint(x: 24.77, y: 1.5), controlPoint2: NSPoint(x: 25, y: 1.71))
        pathPath.line(to: NSPoint(x: 25, y: 6))
        pathPath.curve(to: NSPoint(x: 24.5, y: 6.5), controlPoint1: NSPoint(x: 25, y: 6.28), controlPoint2: NSPoint(x: 24.77, y: 6.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentLocked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 17, y: 2.5))
        pathPath.line(to: NSPoint(x: 6, y: 2.5))
        pathPath.curve(to: NSPoint(x: 4, y: 4.51), controlPoint1: NSPoint(x: 4.89, y: 2.5), controlPoint2: NSPoint(x: 4, y: 3.4))
        pathPath.line(to: NSPoint(x: 4, y: 27.49))
        pathPath.curve(to: NSPoint(x: 6, y: 29.5), controlPoint1: NSPoint(x: 4, y: 28.6), controlPoint2: NSPoint(x: 4.9, y: 29.5))
        pathPath.line(to: NSPoint(x: 17, y: 29.5))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 22))
        pathPath.line(to: NSPoint(x: 23, y: 22))
        pathPath.line(to: NSPoint(x: 23, y: 12.16))
        pathPath.line(to: NSPoint(x: 23, y: 12.16))
        pathPath.curve(to: NSPoint(x: 25, y: 8.99), controlPoint1: NSPoint(x: 24.18, y: 11.6), controlPoint2: NSPoint(x: 25, y: 10.39))
        pathPath.line(to: NSPoint(x: 25, y: 7.5))
        pathPath.line(to: NSPoint(x: 25, y: 7.5))
        pathPath.curve(to: NSPoint(x: 26, y: 6.5), controlPoint1: NSPoint(x: 25.55, y: 7.5), controlPoint2: NSPoint(x: 26, y: 7.05))
        pathPath.line(to: NSPoint(x: 26, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 0.5), controlPoint1: NSPoint(x: 26, y: 0.94), controlPoint2: NSPoint(x: 25.55, y: 0.5))
        pathPath.line(to: NSPoint(x: 18, y: 0.5))
        pathPath.curve(to: NSPoint(x: 17, y: 1.5), controlPoint1: NSPoint(x: 17.45, y: 0.5), controlPoint2: NSPoint(x: 17, y: 0.95))
        pathPath.line(to: NSPoint(x: 17, y: 2.5))
        pathPath.line(to: NSPoint(x: 17, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 3.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.5))
        pathPath.curve(to: NSPoint(x: 5, y: 4.5), controlPoint1: NSPoint(x: 5.45, y: 3.5), controlPoint2: NSPoint(x: 5, y: 3.95))
        pathPath.line(to: NSPoint(x: 5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6, y: 28.5), controlPoint1: NSPoint(x: 5, y: 28.04), controlPoint2: NSPoint(x: 5.45, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 21.5), controlPoint1: NSPoint(x: 16, y: 22.39), controlPoint2: NSPoint(x: 16.89, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 12.46))
        pathPath.curve(to: NSPoint(x: 21.5, y: 12.5), controlPoint1: NSPoint(x: 21.84, y: 12.49), controlPoint2: NSPoint(x: 21.67, y: 12.5))
        pathPath.curve(to: NSPoint(x: 18, y: 8.99), controlPoint1: NSPoint(x: 19.57, y: 12.5), controlPoint2: NSPoint(x: 18, y: 10.93))
        pathPath.line(to: NSPoint(x: 18, y: 7.5))
        pathPath.line(to: NSPoint(x: 18, y: 7.5))
        pathPath.curve(to: NSPoint(x: 17, y: 6.5), controlPoint1: NSPoint(x: 17.45, y: 7.5), controlPoint2: NSPoint(x: 17, y: 7.06))
        pathPath.line(to: NSPoint(x: 17, y: 3.5))
        pathPath.line(to: NSPoint(x: 17, y: 3.5))
        pathPath.line(to: NSPoint(x: 17, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 8.99))
        pathPath.curve(to: NSPoint(x: 21.5, y: 11.5), controlPoint1: NSPoint(x: 19, y: 10.39), controlPoint2: NSPoint(x: 20.12, y: 11.5))
        pathPath.curve(to: NSPoint(x: 24, y: 8.99), controlPoint1: NSPoint(x: 22.89, y: 11.5), controlPoint2: NSPoint(x: 24, y: 10.38))
        pathPath.line(to: NSPoint(x: 24, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 7.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 22.5), controlPoint1: NSPoint(x: 17, y: 22.95), controlPoint2: NSPoint(x: 17.45, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.7, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 6.5))
        pathPath.curve(to: NSPoint(x: 18, y: 6), controlPoint1: NSPoint(x: 18.23, y: 6.5), controlPoint2: NSPoint(x: 18, y: 6.29))
        pathPath.line(to: NSPoint(x: 18, y: 2))
        pathPath.curve(to: NSPoint(x: 18.5, y: 1.5), controlPoint1: NSPoint(x: 18, y: 1.72), controlPoint2: NSPoint(x: 18.23, y: 1.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 2), controlPoint1: NSPoint(x: 24.77, y: 1.5), controlPoint2: NSPoint(x: 25, y: 1.71))
        pathPath.line(to: NSPoint(x: 25, y: 6))
        pathPath.curve(to: NSPoint(x: 24.5, y: 6.5), controlPoint1: NSPoint(x: 25, y: 6.28), controlPoint2: NSPoint(x: 24.77, y: 6.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentError(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 23, y: 5.58))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 29.5))
        pathPath.line(to: NSPoint(x: 6, y: 29.5))
        pathPath.curve(to: NSPoint(x: 4, y: 27.49), controlPoint1: NSPoint(x: 4.9, y: 29.5), controlPoint2: NSPoint(x: 4, y: 28.6))
        pathPath.line(to: NSPoint(x: 4, y: 4.51))
        pathPath.curve(to: NSPoint(x: 6, y: 2.5), controlPoint1: NSPoint(x: 4, y: 3.4), controlPoint2: NSPoint(x: 4.89, y: 2.5))
        pathPath.line(to: NSPoint(x: 14.18, y: 2.5))
        pathPath.line(to: NSPoint(x: 13, y: 0.5))
        pathPath.line(to: NSPoint(x: 26, y: 0.5))
        pathPath.line(to: NSPoint(x: 23, y: 5.58))
        pathPath.line(to: NSPoint(x: 23, y: 5.58))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.77, y: 3.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.5))
        pathPath.curve(to: NSPoint(x: 5, y: 4.5), controlPoint1: NSPoint(x: 5.45, y: 3.5), controlPoint2: NSPoint(x: 5, y: 3.95))
        pathPath.line(to: NSPoint(x: 5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6, y: 28.5), controlPoint1: NSPoint(x: 5, y: 28.04), controlPoint2: NSPoint(x: 5.45, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 21.5), controlPoint1: NSPoint(x: 16, y: 22.39), controlPoint2: NSPoint(x: 16.89, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 7.27))
        pathPath.line(to: NSPoint(x: 19.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 14.77, y: 3.5))
        pathPath.line(to: NSPoint(x: 14.77, y: 3.5))
        pathPath.line(to: NSPoint(x: 14.77, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 22.5), controlPoint1: NSPoint(x: 17, y: 22.95), controlPoint2: NSPoint(x: 17.45, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.7, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 24.25, y: 1.5))
        pathPath.line(to: NSPoint(x: 14.75, y: 1.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 4.5))
        pathPath.line(to: NSPoint(x: 20, y: 4.5))
        pathPath.line(to: NSPoint(x: 20, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 7.5))
        pathPath.line(to: NSPoint(x: 19, y: 7.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19, y: 3.5))
        pathPath.line(to: NSPoint(x: 19, y: 2.5))
        pathPath.line(to: NSPoint(x: 20, y: 2.5))
        pathPath.line(to: NSPoint(x: 20, y: 3.5))
        pathPath.line(to: NSPoint(x: 19, y: 3.5))
        pathPath.line(to: NSPoint(x: 19, y: 3.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentCancel(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.5, y: 5.29))
        pathPath.line(to: NSPoint(x: 18.38, y: 3.17))
        pathPath.line(to: NSPoint(x: 17.67, y: 3.88))
        pathPath.line(to: NSPoint(x: 19.79, y: 6))
        pathPath.line(to: NSPoint(x: 17.67, y: 8.12))
        pathPath.line(to: NSPoint(x: 18.38, y: 8.83))
        pathPath.line(to: NSPoint(x: 20.5, y: 6.71))
        pathPath.line(to: NSPoint(x: 22.62, y: 8.83))
        pathPath.line(to: NSPoint(x: 23.33, y: 8.12))
        pathPath.line(to: NSPoint(x: 21.21, y: 6))
        pathPath.line(to: NSPoint(x: 23.33, y: 3.88))
        pathPath.line(to: NSPoint(x: 22.62, y: 3.17))
        pathPath.line(to: NSPoint(x: 20.5, y: 5.29))
        pathPath.line(to: NSPoint(x: 20.5, y: 5.29))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 6, y: 2.5))
        pathPath.curve(to: NSPoint(x: 4, y: 4.51), controlPoint1: NSPoint(x: 4.89, y: 2.5), controlPoint2: NSPoint(x: 4, y: 3.4))
        pathPath.line(to: NSPoint(x: 4, y: 27.49))
        pathPath.curve(to: NSPoint(x: 6, y: 29.5), controlPoint1: NSPoint(x: 4, y: 28.6), controlPoint2: NSPoint(x: 4.9, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 17, y: 29.5))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 22))
        pathPath.line(to: NSPoint(x: 23, y: 10.9))
        pathPath.curve(to: NSPoint(x: 26, y: 6), controlPoint1: NSPoint(x: 24.78, y: 9.99), controlPoint2: NSPoint(x: 26, y: 8.14))
        pathPath.curve(to: NSPoint(x: 20.5, y: 0.5), controlPoint1: NSPoint(x: 26, y: 2.96), controlPoint2: NSPoint(x: 23.54, y: 0.5))
        pathPath.curve(to: NSPoint(x: 16.26, y: 2.5), controlPoint1: NSPoint(x: 18.79, y: 0.5), controlPoint2: NSPoint(x: 17.27, y: 1.28))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.5))
        pathPath.curve(to: NSPoint(x: 5, y: 4.5), controlPoint1: NSPoint(x: 5.45, y: 3.5), controlPoint2: NSPoint(x: 5, y: 3.95))
        pathPath.line(to: NSPoint(x: 5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6, y: 28.5), controlPoint1: NSPoint(x: 5, y: 28.04), controlPoint2: NSPoint(x: 5.45, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 21.5), controlPoint1: NSPoint(x: 16, y: 22.39), controlPoint2: NSPoint(x: 16.89, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 11.29))
        pathPath.curve(to: NSPoint(x: 20.5, y: 11.5), controlPoint1: NSPoint(x: 21.52, y: 11.43), controlPoint2: NSPoint(x: 21.02, y: 11.5))
        pathPath.curve(to: NSPoint(x: 15, y: 6), controlPoint1: NSPoint(x: 17.46, y: 11.5), controlPoint2: NSPoint(x: 15, y: 9.04))
        pathPath.curve(to: NSPoint(x: 15.6, y: 3.5), controlPoint1: NSPoint(x: 15, y: 5.1), controlPoint2: NSPoint(x: 15.22, y: 4.25))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 22.5), controlPoint1: NSPoint(x: 17, y: 22.95), controlPoint2: NSPoint(x: 17.45, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.7, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 6), controlPoint1: NSPoint(x: 22.99, y: 1.5), controlPoint2: NSPoint(x: 25, y: 3.51))
        pathPath.curve(to: NSPoint(x: 20.5, y: 10.5), controlPoint1: NSPoint(x: 25, y: 8.49), controlPoint2: NSPoint(x: 22.99, y: 10.5))
        pathPath.curve(to: NSPoint(x: 16, y: 6), controlPoint1: NSPoint(x: 18.01, y: 10.5), controlPoint2: NSPoint(x: 16, y: 8.49))
        pathPath.curve(to: NSPoint(x: 20.5, y: 1.5), controlPoint1: NSPoint(x: 16, y: 3.51), controlPoint2: NSPoint(x: 18.01, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentChecked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 6, y: 2.5))
        pathPath.curve(to: NSPoint(x: 4, y: 4.51), controlPoint1: NSPoint(x: 4.89, y: 2.5), controlPoint2: NSPoint(x: 4, y: 3.4))
        pathPath.line(to: NSPoint(x: 4, y: 27.49))
        pathPath.curve(to: NSPoint(x: 6, y: 29.5), controlPoint1: NSPoint(x: 4, y: 28.6), controlPoint2: NSPoint(x: 4.9, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 17, y: 29.5))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 22))
        pathPath.line(to: NSPoint(x: 23, y: 10.9))
        pathPath.curve(to: NSPoint(x: 26, y: 6), controlPoint1: NSPoint(x: 24.78, y: 9.99), controlPoint2: NSPoint(x: 26, y: 8.14))
        pathPath.curve(to: NSPoint(x: 20.5, y: 0.5), controlPoint1: NSPoint(x: 26, y: 2.96), controlPoint2: NSPoint(x: 23.54, y: 0.5))
        pathPath.curve(to: NSPoint(x: 16.26, y: 2.5), controlPoint1: NSPoint(x: 18.79, y: 0.5), controlPoint2: NSPoint(x: 17.27, y: 1.28))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.5))
        pathPath.curve(to: NSPoint(x: 5, y: 4.5), controlPoint1: NSPoint(x: 5.45, y: 3.5), controlPoint2: NSPoint(x: 5, y: 3.95))
        pathPath.line(to: NSPoint(x: 5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6, y: 28.5), controlPoint1: NSPoint(x: 5, y: 28.04), controlPoint2: NSPoint(x: 5.45, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 21.5), controlPoint1: NSPoint(x: 16, y: 22.39), controlPoint2: NSPoint(x: 16.89, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 11.29))
        pathPath.curve(to: NSPoint(x: 20.5, y: 11.5), controlPoint1: NSPoint(x: 21.52, y: 11.43), controlPoint2: NSPoint(x: 21.02, y: 11.5))
        pathPath.curve(to: NSPoint(x: 15, y: 6), controlPoint1: NSPoint(x: 17.46, y: 11.5), controlPoint2: NSPoint(x: 15, y: 9.04))
        pathPath.curve(to: NSPoint(x: 15.6, y: 3.5), controlPoint1: NSPoint(x: 15, y: 5.1), controlPoint2: NSPoint(x: 15.22, y: 4.25))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 22.5), controlPoint1: NSPoint(x: 17, y: 22.95), controlPoint2: NSPoint(x: 17.45, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.7, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 6), controlPoint1: NSPoint(x: 22.99, y: 1.5), controlPoint2: NSPoint(x: 25, y: 3.51))
        pathPath.curve(to: NSPoint(x: 20.5, y: 10.5), controlPoint1: NSPoint(x: 25, y: 8.49), controlPoint2: NSPoint(x: 22.99, y: 10.5))
        pathPath.curve(to: NSPoint(x: 16, y: 6), controlPoint1: NSPoint(x: 18.01, y: 10.5), controlPoint2: NSPoint(x: 16, y: 8.49))
        pathPath.curve(to: NSPoint(x: 20.5, y: 1.5), controlPoint1: NSPoint(x: 16, y: 3.51), controlPoint2: NSPoint(x: 18.01, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20, y: 3.26))
        pathPath.line(to: NSPoint(x: 17.65, y: 5.61))
        pathPath.line(to: NSPoint(x: 18.38, y: 6.34))
        pathPath.line(to: NSPoint(x: 20, y: 4.72))
        pathPath.line(to: NSPoint(x: 23.12, y: 7.84))
        pathPath.line(to: NSPoint(x: 23.85, y: 7.11))
        pathPath.line(to: NSPoint(x: 20, y: 3.26))
        pathPath.line(to: NSPoint(x: 20, y: 3.26))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentAdd(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20, y: 6.5))
        pathPath.line(to: NSPoint(x: 20, y: 9.5))
        pathPath.line(to: NSPoint(x: 21, y: 9.5))
        pathPath.line(to: NSPoint(x: 21, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.line(to: NSPoint(x: 24, y: 5.5))
        pathPath.line(to: NSPoint(x: 21, y: 5.5))
        pathPath.line(to: NSPoint(x: 21, y: 2.5))
        pathPath.line(to: NSPoint(x: 20, y: 2.5))
        pathPath.line(to: NSPoint(x: 20, y: 5.5))
        pathPath.line(to: NSPoint(x: 17, y: 5.5))
        pathPath.line(to: NSPoint(x: 17, y: 6.5))
        pathPath.line(to: NSPoint(x: 20, y: 6.5))
        pathPath.line(to: NSPoint(x: 20, y: 6.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 6, y: 2.5))
        pathPath.curve(to: NSPoint(x: 4, y: 4.51), controlPoint1: NSPoint(x: 4.89, y: 2.5), controlPoint2: NSPoint(x: 4, y: 3.4))
        pathPath.line(to: NSPoint(x: 4, y: 27.49))
        pathPath.curve(to: NSPoint(x: 6, y: 29.5), controlPoint1: NSPoint(x: 4, y: 28.6), controlPoint2: NSPoint(x: 4.9, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 17, y: 29.5))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 22))
        pathPath.line(to: NSPoint(x: 23, y: 10.9))
        pathPath.curve(to: NSPoint(x: 26, y: 6), controlPoint1: NSPoint(x: 24.78, y: 9.99), controlPoint2: NSPoint(x: 26, y: 8.14))
        pathPath.curve(to: NSPoint(x: 20.5, y: 0.5), controlPoint1: NSPoint(x: 26, y: 2.96), controlPoint2: NSPoint(x: 23.54, y: 0.5))
        pathPath.curve(to: NSPoint(x: 16.26, y: 2.5), controlPoint1: NSPoint(x: 18.79, y: 0.5), controlPoint2: NSPoint(x: 17.27, y: 1.28))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.5))
        pathPath.curve(to: NSPoint(x: 5, y: 4.5), controlPoint1: NSPoint(x: 5.45, y: 3.5), controlPoint2: NSPoint(x: 5, y: 3.95))
        pathPath.line(to: NSPoint(x: 5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6, y: 28.5), controlPoint1: NSPoint(x: 5, y: 28.04), controlPoint2: NSPoint(x: 5.45, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 21.5), controlPoint1: NSPoint(x: 16, y: 22.39), controlPoint2: NSPoint(x: 16.89, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 11.29))
        pathPath.curve(to: NSPoint(x: 20.5, y: 11.5), controlPoint1: NSPoint(x: 21.52, y: 11.43), controlPoint2: NSPoint(x: 21.02, y: 11.5))
        pathPath.curve(to: NSPoint(x: 15, y: 6), controlPoint1: NSPoint(x: 17.46, y: 11.5), controlPoint2: NSPoint(x: 15, y: 9.04))
        pathPath.curve(to: NSPoint(x: 15.6, y: 3.5), controlPoint1: NSPoint(x: 15, y: 5.1), controlPoint2: NSPoint(x: 15.22, y: 4.25))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 22.5), controlPoint1: NSPoint(x: 17, y: 22.95), controlPoint2: NSPoint(x: 17.45, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.7, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 6), controlPoint1: NSPoint(x: 22.99, y: 1.5), controlPoint2: NSPoint(x: 25, y: 3.51))
        pathPath.curve(to: NSPoint(x: 20.5, y: 10.5), controlPoint1: NSPoint(x: 25, y: 8.49), controlPoint2: NSPoint(x: 22.99, y: 10.5))
        pathPath.curve(to: NSPoint(x: 16, y: 6), controlPoint1: NSPoint(x: 18.01, y: 10.5), controlPoint2: NSPoint(x: 16, y: 8.49))
        pathPath.curve(to: NSPoint(x: 20.5, y: 1.5), controlPoint1: NSPoint(x: 16, y: 3.51), controlPoint2: NSPoint(x: 18.01, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentRemove(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 6, y: 2.5))
        pathPath.curve(to: NSPoint(x: 4, y: 4.51), controlPoint1: NSPoint(x: 4.89, y: 2.5), controlPoint2: NSPoint(x: 4, y: 3.4))
        pathPath.line(to: NSPoint(x: 4, y: 27.49))
        pathPath.curve(to: NSPoint(x: 6, y: 29.5), controlPoint1: NSPoint(x: 4, y: 28.6), controlPoint2: NSPoint(x: 4.9, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 17, y: 29.5))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 22))
        pathPath.line(to: NSPoint(x: 23, y: 10.9))
        pathPath.curve(to: NSPoint(x: 26, y: 6), controlPoint1: NSPoint(x: 24.78, y: 9.99), controlPoint2: NSPoint(x: 26, y: 8.14))
        pathPath.curve(to: NSPoint(x: 20.5, y: 0.5), controlPoint1: NSPoint(x: 26, y: 2.96), controlPoint2: NSPoint(x: 23.54, y: 0.5))
        pathPath.curve(to: NSPoint(x: 16.26, y: 2.5), controlPoint1: NSPoint(x: 18.79, y: 0.5), controlPoint2: NSPoint(x: 17.27, y: 1.28))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.5))
        pathPath.curve(to: NSPoint(x: 5, y: 4.5), controlPoint1: NSPoint(x: 5.45, y: 3.5), controlPoint2: NSPoint(x: 5, y: 3.95))
        pathPath.line(to: NSPoint(x: 5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6, y: 28.5), controlPoint1: NSPoint(x: 5, y: 28.04), controlPoint2: NSPoint(x: 5.45, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 21.5), controlPoint1: NSPoint(x: 16, y: 22.39), controlPoint2: NSPoint(x: 16.89, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 11.29))
        pathPath.curve(to: NSPoint(x: 20.5, y: 11.5), controlPoint1: NSPoint(x: 21.52, y: 11.43), controlPoint2: NSPoint(x: 21.02, y: 11.5))
        pathPath.curve(to: NSPoint(x: 15, y: 6), controlPoint1: NSPoint(x: 17.46, y: 11.5), controlPoint2: NSPoint(x: 15, y: 9.04))
        pathPath.curve(to: NSPoint(x: 15.6, y: 3.5), controlPoint1: NSPoint(x: 15, y: 5.1), controlPoint2: NSPoint(x: 15.22, y: 4.25))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 22.5), controlPoint1: NSPoint(x: 17, y: 22.95), controlPoint2: NSPoint(x: 17.45, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.7, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 6), controlPoint1: NSPoint(x: 22.99, y: 1.5), controlPoint2: NSPoint(x: 25, y: 3.51))
        pathPath.curve(to: NSPoint(x: 20.5, y: 10.5), controlPoint1: NSPoint(x: 25, y: 8.49), controlPoint2: NSPoint(x: 22.99, y: 10.5))
        pathPath.curve(to: NSPoint(x: 16, y: 6), controlPoint1: NSPoint(x: 18.01, y: 10.5), controlPoint2: NSPoint(x: 16, y: 8.49))
        pathPath.curve(to: NSPoint(x: 20.5, y: 1.5), controlPoint1: NSPoint(x: 16, y: 3.51), controlPoint2: NSPoint(x: 18.01, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 6.5))
        pathPath.line(to: NSPoint(x: 17, y: 5.5))
        pathPath.line(to: NSPoint(x: 24, y: 5.5))
        pathPath.line(to: NSPoint(x: 24, y: 6.5))
        pathPath.line(to: NSPoint(x: 17, y: 6.5))
        pathPath.line(to: NSPoint(x: 17, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentForbidden(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.02, y: 8.81))
        pathPath.curve(to: NSPoint(x: 25, y: 6), controlPoint1: NSPoint(x: 24.63, y: 8.04), controlPoint2: NSPoint(x: 25, y: 7.06))
        pathPath.curve(to: NSPoint(x: 20.5, y: 1.5), controlPoint1: NSPoint(x: 25, y: 3.51), controlPoint2: NSPoint(x: 22.99, y: 1.5))
        pathPath.curve(to: NSPoint(x: 17.69, y: 2.48), controlPoint1: NSPoint(x: 19.44, y: 1.5), controlPoint2: NSPoint(x: 18.46, y: 1.87))
        pathPath.line(to: NSPoint(x: 24.02, y: 8.81))
        pathPath.line(to: NSPoint(x: 24.02, y: 8.81))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.31, y: 9.52))
        pathPath.curve(to: NSPoint(x: 20.5, y: 10.5), controlPoint1: NSPoint(x: 22.54, y: 10.13), controlPoint2: NSPoint(x: 21.56, y: 10.5))
        pathPath.curve(to: NSPoint(x: 16, y: 6), controlPoint1: NSPoint(x: 18.01, y: 10.5), controlPoint2: NSPoint(x: 16, y: 8.49))
        pathPath.curve(to: NSPoint(x: 16.98, y: 3.19), controlPoint1: NSPoint(x: 16, y: 4.94), controlPoint2: NSPoint(x: 16.37, y: 3.96))
        pathPath.line(to: NSPoint(x: 23.31, y: 9.52))
        pathPath.line(to: NSPoint(x: 23.31, y: 9.52))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 6, y: 2.5))
        pathPath.curve(to: NSPoint(x: 4, y: 4.51), controlPoint1: NSPoint(x: 4.89, y: 2.5), controlPoint2: NSPoint(x: 4, y: 3.4))
        pathPath.line(to: NSPoint(x: 4, y: 27.49))
        pathPath.curve(to: NSPoint(x: 6, y: 29.5), controlPoint1: NSPoint(x: 4, y: 28.6), controlPoint2: NSPoint(x: 4.9, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 17, y: 29.5))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 22))
        pathPath.line(to: NSPoint(x: 23, y: 10.9))
        pathPath.curve(to: NSPoint(x: 26, y: 6), controlPoint1: NSPoint(x: 24.78, y: 9.99), controlPoint2: NSPoint(x: 26, y: 8.14))
        pathPath.curve(to: NSPoint(x: 20.5, y: 0.5), controlPoint1: NSPoint(x: 26, y: 2.96), controlPoint2: NSPoint(x: 23.54, y: 0.5))
        pathPath.curve(to: NSPoint(x: 16.26, y: 2.5), controlPoint1: NSPoint(x: 18.79, y: 0.5), controlPoint2: NSPoint(x: 17.27, y: 1.28))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.5))
        pathPath.curve(to: NSPoint(x: 5, y: 4.5), controlPoint1: NSPoint(x: 5.45, y: 3.5), controlPoint2: NSPoint(x: 5, y: 3.95))
        pathPath.line(to: NSPoint(x: 5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6, y: 28.5), controlPoint1: NSPoint(x: 5, y: 28.04), controlPoint2: NSPoint(x: 5.45, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 21.5), controlPoint1: NSPoint(x: 16, y: 22.39), controlPoint2: NSPoint(x: 16.89, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 11.29))
        pathPath.curve(to: NSPoint(x: 20.5, y: 11.5), controlPoint1: NSPoint(x: 21.52, y: 11.43), controlPoint2: NSPoint(x: 21.02, y: 11.5))
        pathPath.curve(to: NSPoint(x: 15, y: 6), controlPoint1: NSPoint(x: 17.46, y: 11.5), controlPoint2: NSPoint(x: 15, y: 9.04))
        pathPath.curve(to: NSPoint(x: 15.6, y: 3.5), controlPoint1: NSPoint(x: 15, y: 5.1), controlPoint2: NSPoint(x: 15.22, y: 4.25))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 22.5), controlPoint1: NSPoint(x: 17, y: 22.95), controlPoint2: NSPoint(x: 17.45, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.7, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentInformation(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 6, y: 2.5))
        pathPath.curve(to: NSPoint(x: 4, y: 4.51), controlPoint1: NSPoint(x: 4.89, y: 2.5), controlPoint2: NSPoint(x: 4, y: 3.4))
        pathPath.line(to: NSPoint(x: 4, y: 27.49))
        pathPath.curve(to: NSPoint(x: 6, y: 29.5), controlPoint1: NSPoint(x: 4, y: 28.6), controlPoint2: NSPoint(x: 4.9, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 29.5))
        pathPath.line(to: NSPoint(x: 17, y: 29.5))
        pathPath.line(to: NSPoint(x: 23, y: 22.5))
        pathPath.line(to: NSPoint(x: 23, y: 22))
        pathPath.line(to: NSPoint(x: 23, y: 10.9))
        pathPath.curve(to: NSPoint(x: 26, y: 6), controlPoint1: NSPoint(x: 24.78, y: 9.99), controlPoint2: NSPoint(x: 26, y: 8.14))
        pathPath.curve(to: NSPoint(x: 20.5, y: 0.5), controlPoint1: NSPoint(x: 26, y: 2.96), controlPoint2: NSPoint(x: 23.54, y: 0.5))
        pathPath.curve(to: NSPoint(x: 16.26, y: 2.5), controlPoint1: NSPoint(x: 18.79, y: 0.5), controlPoint2: NSPoint(x: 17.27, y: 1.28))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.line(to: NSPoint(x: 16.26, y: 2.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 6, y: 3.5))
        pathPath.curve(to: NSPoint(x: 5, y: 4.5), controlPoint1: NSPoint(x: 5.45, y: 3.5), controlPoint2: NSPoint(x: 5, y: 3.95))
        pathPath.line(to: NSPoint(x: 5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6, y: 28.5), controlPoint1: NSPoint(x: 5, y: 28.04), controlPoint2: NSPoint(x: 5.45, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 28.5))
        pathPath.line(to: NSPoint(x: 16, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 21.5), controlPoint1: NSPoint(x: 16, y: 22.39), controlPoint2: NSPoint(x: 16.89, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 21.5))
        pathPath.line(to: NSPoint(x: 22, y: 11.29))
        pathPath.curve(to: NSPoint(x: 20.5, y: 11.5), controlPoint1: NSPoint(x: 21.52, y: 11.43), controlPoint2: NSPoint(x: 21.02, y: 11.5))
        pathPath.curve(to: NSPoint(x: 15, y: 6), controlPoint1: NSPoint(x: 17.46, y: 11.5), controlPoint2: NSPoint(x: 15, y: 9.04))
        pathPath.curve(to: NSPoint(x: 15.6, y: 3.5), controlPoint1: NSPoint(x: 15, y: 5.1), controlPoint2: NSPoint(x: 15.22, y: 4.25))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 23.51))
        pathPath.curve(to: NSPoint(x: 18, y: 22.5), controlPoint1: NSPoint(x: 17, y: 22.95), controlPoint2: NSPoint(x: 17.45, y: 22.5))
        pathPath.line(to: NSPoint(x: 21.7, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.line(to: NSPoint(x: 17, y: 28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 25, y: 6), controlPoint1: NSPoint(x: 22.99, y: 1.5), controlPoint2: NSPoint(x: 25, y: 3.51))
        pathPath.curve(to: NSPoint(x: 20.5, y: 10.5), controlPoint1: NSPoint(x: 25, y: 8.49), controlPoint2: NSPoint(x: 22.99, y: 10.5))
        pathPath.curve(to: NSPoint(x: 16, y: 6), controlPoint1: NSPoint(x: 18.01, y: 10.5), controlPoint2: NSPoint(x: 16, y: 8.49))
        pathPath.curve(to: NSPoint(x: 20.5, y: 1.5), controlPoint1: NSPoint(x: 16, y: 3.51), controlPoint2: NSPoint(x: 18.01, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19, y: 6.5))
        pathPath.line(to: NSPoint(x: 19, y: 5.5))
        pathPath.line(to: NSPoint(x: 20, y: 5.5))
        pathPath.line(to: NSPoint(x: 20, y: 4.5))
        pathPath.line(to: NSPoint(x: 19, y: 4.5))
        pathPath.line(to: NSPoint(x: 19, y: 3.5))
        pathPath.line(to: NSPoint(x: 21, y: 3.5))
        pathPath.line(to: NSPoint(x: 22, y: 3.5))
        pathPath.line(to: NSPoint(x: 22, y: 4.5))
        pathPath.line(to: NSPoint(x: 21, y: 4.5))
        pathPath.line(to: NSPoint(x: 21, y: 6.5))
        pathPath.line(to: NSPoint(x: 19, y: 6.5))
        pathPath.line(to: NSPoint(x: 19, y: 6.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20, y: 8.5))
        pathPath.line(to: NSPoint(x: 20, y: 7.5))
        pathPath.line(to: NSPoint(x: 21, y: 7.5))
        pathPath.line(to: NSPoint(x: 21, y: 8.5))
        pathPath.line(to: NSPoint(x: 20, y: 8.5))
        pathPath.line(to: NSPoint(x: 20, y: 8.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderInformation(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 1.87, y: 6.38))
        pathPath.curve(to: NSPoint(x: 0.94, y: 7.33), controlPoint1: NSPoint(x: 1.36, y: 6.38), controlPoint2: NSPoint(x: 0.94, y: 6.8))
        pathPath.line(to: NSPoint(x: 0.94, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 13.84))
        pathPath.curve(to: NSPoint(x: 24.84, y: 14.04), controlPoint1: NSPoint(x: 25.8, y: 13.97), controlPoint2: NSPoint(x: 25.33, y: 14.04))
        pathPath.curve(to: NSPoint(x: 19.69, y: 8.77), controlPoint1: NSPoint(x: 22, y: 14.04), controlPoint2: NSPoint(x: 19.69, y: 11.68))
        pathPath.curve(to: NSPoint(x: 20.25, y: 6.37), controlPoint1: NSPoint(x: 19.69, y: 7.91), controlPoint2: NSPoint(x: 19.89, y: 7.09))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 1.87, y: 5.42))
        pathPath.curve(to: NSPoint(x: 0, y: 7.32), controlPoint1: NSPoint(x: 0.84, y: 5.42), controlPoint2: NSPoint(x: 0, y: 6.27))
        pathPath.line(to: NSPoint(x: 0, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.88, y: 26.5), controlPoint1: NSPoint(x: 0, y: 25.65), controlPoint2: NSPoint(x: 0.84, y: 26.5))
        pathPath.line(to: NSPoint(x: 12.19, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.06, y: 22.67))
        pathPath.line(to: NSPoint(x: 25.31, y: 22.67))
        pathPath.curve(to: NSPoint(x: 27.19, y: 20.75), controlPoint1: NSPoint(x: 26.35, y: 22.67), controlPoint2: NSPoint(x: 27.19, y: 21.81))
        pathPath.line(to: NSPoint(x: 27.19, y: 13.47))
        pathPath.curve(to: NSPoint(x: 30, y: 8.77), controlPoint1: NSPoint(x: 28.86, y: 12.59), controlPoint2: NSPoint(x: 30, y: 10.82))
        pathPath.curve(to: NSPoint(x: 24.84, y: 3.5), controlPoint1: NSPoint(x: 30, y: 5.86), controlPoint2: NSPoint(x: 27.69, y: 3.5))
        pathPath.curve(to: NSPoint(x: 20.87, y: 5.42), controlPoint1: NSPoint(x: 23.24, y: 3.5), controlPoint2: NSPoint(x: 21.81, y: 4.25))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.87, y: 25.54), controlPoint1: NSPoint(x: 0.94, y: 25.11), controlPoint2: NSPoint(x: 1.35, y: 25.54))
        pathPath.line(to: NSPoint(x: 11.63, y: 25.54))
        pathPath.line(to: NSPoint(x: 13.46, y: 21.71))
        pathPath.line(to: NSPoint(x: 25.31, y: 21.71))
        pathPath.curve(to: NSPoint(x: 26.25, y: 20.75), controlPoint1: NSPoint(x: 25.82, y: 21.71), controlPoint2: NSPoint(x: 26.25, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.25, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.curve(to: NSPoint(x: 29.06, y: 8.77), controlPoint1: NSPoint(x: 27.17, y: 4.46), controlPoint2: NSPoint(x: 29.06, y: 6.39))
        pathPath.curve(to: NSPoint(x: 24.84, y: 13.08), controlPoint1: NSPoint(x: 29.06, y: 11.15), controlPoint2: NSPoint(x: 27.17, y: 13.08))
        pathPath.curve(to: NSPoint(x: 20.62, y: 8.77), controlPoint1: NSPoint(x: 22.51, y: 13.08), controlPoint2: NSPoint(x: 20.62, y: 11.15))
        pathPath.curve(to: NSPoint(x: 24.84, y: 4.46), controlPoint1: NSPoint(x: 20.62, y: 6.39), controlPoint2: NSPoint(x: 22.51, y: 4.46))
        pathPath.line(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.38, y: 11.17))
        pathPath.line(to: NSPoint(x: 24.38, y: 10.21))
        pathPath.line(to: NSPoint(x: 25.31, y: 10.21))
        pathPath.line(to: NSPoint(x: 25.31, y: 11.17))
        pathPath.line(to: NSPoint(x: 24.38, y: 11.17))
        pathPath.line(to: NSPoint(x: 24.38, y: 11.17))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.44, y: 9.25))
        pathPath.line(to: NSPoint(x: 23.44, y: 8.29))
        pathPath.line(to: NSPoint(x: 24.38, y: 8.29))
        pathPath.line(to: NSPoint(x: 24.38, y: 7.33))
        pathPath.line(to: NSPoint(x: 23.44, y: 7.33))
        pathPath.line(to: NSPoint(x: 23.44, y: 6.38))
        pathPath.line(to: NSPoint(x: 25.31, y: 6.38))
        pathPath.line(to: NSPoint(x: 26.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 26.25, y: 7.33))
        pathPath.line(to: NSPoint(x: 25.31, y: 7.33))
        pathPath.line(to: NSPoint(x: 25.31, y: 9.25))
        pathPath.line(to: NSPoint(x: 23.44, y: 9.25))
        pathPath.line(to: NSPoint(x: 23.44, y: 9.25))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentList(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 7.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 7.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentFont(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// Page-1
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 6, y: 1)



        //// icon-87-document-font



        NSGraphicsContext.restoreGraphicsState()


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.5, y: 6))
        pathPath.curve(to: NSPoint(x: 19, y: 5.5), controlPoint1: NSPoint(x: 20.08, y: 5.69), controlPoint2: NSPoint(x: 19.56, y: 5.5))
        pathPath.curve(to: NSPoint(x: 16.5, y: 8), controlPoint1: NSPoint(x: 17.62, y: 5.5), controlPoint2: NSPoint(x: 16.5, y: 6.62))
        pathPath.curve(to: NSPoint(x: 19, y: 10.5), controlPoint1: NSPoint(x: 16.5, y: 9.38), controlPoint2: NSPoint(x: 17.62, y: 10.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 10), controlPoint1: NSPoint(x: 19.56, y: 10.5), controlPoint2: NSPoint(x: 20.08, y: 10.31))
        pathPath.line(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 6))
        pathPath.line(to: NSPoint(x: 20.5, y: 6))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.43, y: 8.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.57, y: 8.5))
        pathPath.line(to: NSPoint(x: 13.43, y: 8.5))
        pathPath.line(to: NSPoint(x: 13.43, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.07, y: 9.5))
        pathPath.line(to: NSPoint(x: 12, y: 12.5))
        pathPath.line(to: NSPoint(x: 10.93, y: 9.5))
        pathPath.line(to: NSPoint(x: 13.07, y: 9.5))
        pathPath.line(to: NSPoint(x: 13.07, y: 9.5))
        pathPath.line(to: NSPoint(x: 13.07, y: 9.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.line(to: NSPoint(x: 18, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19, y: 6.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 8), controlPoint1: NSPoint(x: 19.83, y: 6.5), controlPoint2: NSPoint(x: 20.5, y: 7.17))
        pathPath.curve(to: NSPoint(x: 19, y: 9.5), controlPoint1: NSPoint(x: 20.5, y: 8.83), controlPoint2: NSPoint(x: 19.83, y: 9.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 8), controlPoint1: NSPoint(x: 18.17, y: 9.5), controlPoint2: NSPoint(x: 17.5, y: 8.83))
        pathPath.curve(to: NSPoint(x: 19, y: 6.5), controlPoint1: NSPoint(x: 17.5, y: 7.17), controlPoint2: NSPoint(x: 18.17, y: 6.5))
        pathPath.line(to: NSPoint(x: 19, y: 6.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawInbox(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 19.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 26.28, y: 15.5))
        pathPath.line(to: NSPoint(x: 21.9, y: 22.5))
        pathPath.line(to: NSPoint(x: 8.1, y: 22.5))
        pathPath.line(to: NSPoint(x: 3.72, y: 15.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 13.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 11.5), controlPoint1: NSPoint(x: 10.5, y: 12.39), controlPoint2: NSPoint(x: 11.4, y: 11.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 11.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 13.5), controlPoint1: NSPoint(x: 18.61, y: 11.5), controlPoint2: NSPoint(x: 19.5, y: 12.4))
        pathPath.line(to: NSPoint(x: 19.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 15.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 13))
        pathPath.curve(to: NSPoint(x: 12, y: 10.5), controlPoint1: NSPoint(x: 9.5, y: 11.62), controlPoint2: NSPoint(x: 10.62, y: 10.5))
        pathPath.line(to: NSPoint(x: 18, y: 10.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 13), controlPoint1: NSPoint(x: 19.38, y: 10.5), controlPoint2: NSPoint(x: 20.5, y: 11.61))
        pathPath.line(to: NSPoint(x: 20.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 2.5, y: 15))
        pathPath.line(to: NSPoint(x: 2.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 15))
        pathPath.line(to: NSPoint(x: 27.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 15))
        pathPath.line(to: NSPoint(x: 2.5, y: 15))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawInboxes(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 19.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 26.28, y: 19.5))
        pathPath.line(to: NSPoint(x: 21.9, y: 26.5))
        pathPath.line(to: NSPoint(x: 8.1, y: 26.5))
        pathPath.line(to: NSPoint(x: 3.72, y: 19.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 15.5), controlPoint1: NSPoint(x: 10.5, y: 16.39), controlPoint2: NSPoint(x: 11.4, y: 15.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 15.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 17.5), controlPoint1: NSPoint(x: 18.61, y: 15.5), controlPoint2: NSPoint(x: 19.5, y: 16.4))
        pathPath.line(to: NSPoint(x: 19.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 19.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 17))
        pathPath.curve(to: NSPoint(x: 12, y: 14.5), controlPoint1: NSPoint(x: 9.5, y: 15.62), controlPoint2: NSPoint(x: 10.62, y: 14.5))
        pathPath.line(to: NSPoint(x: 18, y: 14.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 17), controlPoint1: NSPoint(x: 19.38, y: 14.5), controlPoint2: NSPoint(x: 20.5, y: 15.61))
        pathPath.line(to: NSPoint(x: 20.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 27.5, y: 11))
        pathPath.line(to: NSPoint(x: 27.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 11))
        pathPath.line(to: NSPoint(x: 2.5, y: 19))
        pathPath.line(to: NSPoint(x: 2.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 19))
        pathPath.line(to: NSPoint(x: 27.5, y: 11))
        pathPath.line(to: NSPoint(x: 27.5, y: 11))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 9.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 7.5), controlPoint1: NSPoint(x: 10.5, y: 8.39), controlPoint2: NSPoint(x: 11.4, y: 7.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 7.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 9.5), controlPoint1: NSPoint(x: 18.61, y: 7.5), controlPoint2: NSPoint(x: 19.5, y: 8.4))
        pathPath.line(to: NSPoint(x: 19.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 9))
        pathPath.curve(to: NSPoint(x: 12, y: 6.5), controlPoint1: NSPoint(x: 9.5, y: 7.62), controlPoint2: NSPoint(x: 10.62, y: 6.5))
        pathPath.line(to: NSPoint(x: 18, y: 6.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 9), controlPoint1: NSPoint(x: 19.38, y: 6.5), controlPoint2: NSPoint(x: 20.5, y: 7.61))
        pathPath.line(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawInboxDocument(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 19.5, y: 12))
        pathPath.line(to: NSPoint(x: 23.5, y: 12))
        pathPath.line(to: NSPoint(x: 23.5, y: 19))
        pathPath.line(to: NSPoint(x: 19.5, y: 19))
        pathPath.curve(to: NSPoint(x: 17.5, y: 21.01), controlPoint1: NSPoint(x: 18.39, y: 19), controlPoint2: NSPoint(x: 17.5, y: 19.89))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 7.5, y: 26))
        pathPath.curve(to: NSPoint(x: 6.5, y: 25), controlPoint1: NSPoint(x: 6.95, y: 26), controlPoint2: NSPoint(x: 6.5, y: 25.56))
        pathPath.line(to: NSPoint(x: 6.5, y: 12))
        pathPath.line(to: NSPoint(x: 10.5, y: 12))
        pathPath.line(to: NSPoint(x: 10.5, y: 10))
        pathPath.curve(to: NSPoint(x: 12.5, y: 8), controlPoint1: NSPoint(x: 10.5, y: 8.89), controlPoint2: NSPoint(x: 11.4, y: 8))
        pathPath.line(to: NSPoint(x: 17.5, y: 8))
        pathPath.curve(to: NSPoint(x: 19.5, y: 10), controlPoint1: NSPoint(x: 18.61, y: 8), controlPoint2: NSPoint(x: 19.5, y: 8.9))
        pathPath.line(to: NSPoint(x: 19.5, y: 12))
        pathPath.line(to: NSPoint(x: 19.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 4))
        pathPath.line(to: NSPoint(x: 3.5, y: 4))
        pathPath.line(to: NSPoint(x: 3.5, y: 11))
        pathPath.line(to: NSPoint(x: 9.5, y: 11))
        pathPath.line(to: NSPoint(x: 9.5, y: 9.5))
        pathPath.curve(to: NSPoint(x: 12, y: 7), controlPoint1: NSPoint(x: 9.5, y: 8.12), controlPoint2: NSPoint(x: 10.62, y: 7))
        pathPath.line(to: NSPoint(x: 18, y: 7))
        pathPath.curve(to: NSPoint(x: 20.5, y: 9.5), controlPoint1: NSPoint(x: 19.38, y: 7), controlPoint2: NSPoint(x: 20.5, y: 8.11))
        pathPath.line(to: NSPoint(x: 20.5, y: 11))
        pathPath.line(to: NSPoint(x: 20.5, y: 11))
        pathPath.line(to: NSPoint(x: 20.5, y: 11))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 2.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 16.8))
        pathPath.line(to: NSPoint(x: 5.5, y: 25))
        pathPath.curve(to: NSPoint(x: 7.5, y: 27), controlPoint1: NSPoint(x: 5.5, y: 26.1), controlPoint2: NSPoint(x: 6.4, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 24.5, y: 20))
        pathPath.line(to: NSPoint(x: 24.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.8))
        pathPath.line(to: NSPoint(x: 27.5, y: 12))
        pathPath.line(to: NSPoint(x: 27.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 11.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 14.84))
        pathPath.line(to: NSPoint(x: 3.72, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 12))
        pathPath.line(to: NSPoint(x: 24.5, y: 14.84))
        pathPath.line(to: NSPoint(x: 26.28, y: 12))
        pathPath.line(to: NSPoint(x: 24.5, y: 12))
        pathPath.line(to: NSPoint(x: 24.5, y: 12))
        pathPath.line(to: NSPoint(x: 24.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 19.5, y: 20), controlPoint1: NSPoint(x: 18.5, y: 20.45), controlPoint2: NSPoint(x: 18.95, y: 20))
        pathPath.line(to: NSPoint(x: 23.2, y: 20))
        pathPath.line(to: NSPoint(x: 18.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 25.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawInboxDocumentText(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 4))
        pathPath.line(to: NSPoint(x: 3.5, y: 4))
        pathPath.line(to: NSPoint(x: 3.5, y: 11))
        pathPath.line(to: NSPoint(x: 9.5, y: 11))
        pathPath.line(to: NSPoint(x: 9.5, y: 9.5))
        pathPath.curve(to: NSPoint(x: 12, y: 7), controlPoint1: NSPoint(x: 9.5, y: 8.12), controlPoint2: NSPoint(x: 10.62, y: 7))
        pathPath.line(to: NSPoint(x: 18, y: 7))
        pathPath.curve(to: NSPoint(x: 20.5, y: 9.5), controlPoint1: NSPoint(x: 19.38, y: 7), controlPoint2: NSPoint(x: 20.5, y: 8.11))
        pathPath.line(to: NSPoint(x: 20.5, y: 11))
        pathPath.line(to: NSPoint(x: 20.5, y: 11))
        pathPath.line(to: NSPoint(x: 20.5, y: 11))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 2.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 16.8))
        pathPath.line(to: NSPoint(x: 5.5, y: 25))
        pathPath.curve(to: NSPoint(x: 7.5, y: 27), controlPoint1: NSPoint(x: 5.5, y: 26.1), controlPoint2: NSPoint(x: 6.4, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 24.5, y: 20))
        pathPath.line(to: NSPoint(x: 24.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 16.8))
        pathPath.line(to: NSPoint(x: 27.5, y: 12))
        pathPath.line(to: NSPoint(x: 27.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 11.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 14.84))
        pathPath.line(to: NSPoint(x: 3.72, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 12))
        pathPath.line(to: NSPoint(x: 5.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 12))
        pathPath.line(to: NSPoint(x: 24.5, y: 14.84))
        pathPath.line(to: NSPoint(x: 26.28, y: 12))
        pathPath.line(to: NSPoint(x: 24.5, y: 12))
        pathPath.line(to: NSPoint(x: 24.5, y: 12))
        pathPath.line(to: NSPoint(x: 24.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 12))
        pathPath.line(to: NSPoint(x: 6.5, y: 25))
        pathPath.curve(to: NSPoint(x: 7.5, y: 26), controlPoint1: NSPoint(x: 6.5, y: 25.56), controlPoint2: NSPoint(x: 6.95, y: 26))
        pathPath.line(to: NSPoint(x: 17.5, y: 26))
        pathPath.line(to: NSPoint(x: 17.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 19.5, y: 19), controlPoint1: NSPoint(x: 17.5, y: 19.89), controlPoint2: NSPoint(x: 18.39, y: 19))
        pathPath.line(to: NSPoint(x: 23.5, y: 19))
        pathPath.line(to: NSPoint(x: 23.5, y: 12))
        pathPath.line(to: NSPoint(x: 6.5, y: 12))
        pathPath.line(to: NSPoint(x: 6.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 19.5, y: 20), controlPoint1: NSPoint(x: 18.5, y: 20.45), controlPoint2: NSPoint(x: 18.95, y: 20))
        pathPath.line(to: NSPoint(x: 23.2, y: 20))
        pathPath.line(to: NSPoint(x: 18.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 25.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.5, y: 11))
        pathPath.line(to: NSPoint(x: 10.5, y: 9.5))
        pathPath.curve(to: NSPoint(x: 12.01, y: 8), controlPoint1: NSPoint(x: 10.5, y: 8.67), controlPoint2: NSPoint(x: 11.18, y: 8))
        pathPath.line(to: NSPoint(x: 17.99, y: 8))
        pathPath.curve(to: NSPoint(x: 19.5, y: 9.5), controlPoint1: NSPoint(x: 18.83, y: 8), controlPoint2: NSPoint(x: 19.5, y: 8.67))
        pathPath.line(to: NSPoint(x: 19.5, y: 11))
        pathPath.line(to: NSPoint(x: 10.5, y: 11))
        pathPath.line(to: NSPoint(x: 10.5, y: 11))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 16))
        pathPath.line(to: NSPoint(x: 8.5, y: 15))
        pathPath.line(to: NSPoint(x: 21.5, y: 15))
        pathPath.line(to: NSPoint(x: 21.5, y: 16))
        pathPath.line(to: NSPoint(x: 8.5, y: 16))
        pathPath.line(to: NSPoint(x: 8.5, y: 16))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 24))
        pathPath.line(to: NSPoint(x: 8.5, y: 23))
        pathPath.line(to: NSPoint(x: 15.5, y: 23))
        pathPath.line(to: NSPoint(x: 15.5, y: 24))
        pathPath.line(to: NSPoint(x: 8.5, y: 24))
        pathPath.line(to: NSPoint(x: 8.5, y: 24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 20))
        pathPath.line(to: NSPoint(x: 8.5, y: 19))
        pathPath.line(to: NSPoint(x: 15.5, y: 19))
        pathPath.line(to: NSPoint(x: 15.5, y: 20))
        pathPath.line(to: NSPoint(x: 8.5, y: 20))
        pathPath.line(to: NSPoint(x: 8.5, y: 20))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawInboxDownload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 15))
        pathPath.line(to: NSPoint(x: 11.25, y: 18.25))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 13))
        pathPath.line(to: NSPoint(x: 19.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 18.75, y: 18.25))
        pathPath.line(to: NSPoint(x: 15.5, y: 15))
        pathPath.line(to: NSPoint(x: 15.5, y: 26))
        pathPath.line(to: NSPoint(x: 14.5, y: 26))
        pathPath.line(to: NSPoint(x: 14.5, y: 15))
        pathPath.line(to: NSPoint(x: 14.5, y: 15))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.5, y: 20))
        pathPath.line(to: NSPoint(x: 21.9, y: 20))
        pathPath.line(to: NSPoint(x: 26.28, y: 13))
        pathPath.line(to: NSPoint(x: 19.5, y: 13))
        pathPath.line(to: NSPoint(x: 19.5, y: 11))
        pathPath.curve(to: NSPoint(x: 17.5, y: 9), controlPoint1: NSPoint(x: 19.5, y: 9.9), controlPoint2: NSPoint(x: 18.61, y: 9))
        pathPath.line(to: NSPoint(x: 12.5, y: 9))
        pathPath.curve(to: NSPoint(x: 10.5, y: 11), controlPoint1: NSPoint(x: 11.4, y: 9), controlPoint2: NSPoint(x: 10.5, y: 9.89))
        pathPath.line(to: NSPoint(x: 10.5, y: 13))
        pathPath.line(to: NSPoint(x: 3.72, y: 13))
        pathPath.line(to: NSPoint(x: 3.72, y: 13))
        pathPath.line(to: NSPoint(x: 8.1, y: 20))
        pathPath.line(to: NSPoint(x: 13.5, y: 20))
        pathPath.line(to: NSPoint(x: 13.5, y: 21))
        pathPath.line(to: NSPoint(x: 7.5, y: 21))
        pathPath.line(to: NSPoint(x: 2.5, y: 13))
        pathPath.line(to: NSPoint(x: 2.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 4))
        pathPath.line(to: NSPoint(x: 27.5, y: 4))
        pathPath.line(to: NSPoint(x: 27.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 13))
        pathPath.line(to: NSPoint(x: 22.5, y: 21))
        pathPath.line(to: NSPoint(x: 16.5, y: 21))
        pathPath.line(to: NSPoint(x: 16.5, y: 20))
        pathPath.line(to: NSPoint(x: 16.5, y: 20))
        pathPath.line(to: NSPoint(x: 16.5, y: 20))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 12))
        pathPath.line(to: NSPoint(x: 26.5, y: 12))
        pathPath.line(to: NSPoint(x: 26.5, y: 5))
        pathPath.line(to: NSPoint(x: 3.5, y: 5))
        pathPath.line(to: NSPoint(x: 3.5, y: 12))
        pathPath.line(to: NSPoint(x: 9.5, y: 12))
        pathPath.line(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.curve(to: NSPoint(x: 12, y: 8), controlPoint1: NSPoint(x: 9.5, y: 9.12), controlPoint2: NSPoint(x: 10.62, y: 8))
        pathPath.line(to: NSPoint(x: 18, y: 8))
        pathPath.curve(to: NSPoint(x: 20.5, y: 10.5), controlPoint1: NSPoint(x: 19.38, y: 8), controlPoint2: NSPoint(x: 20.5, y: 9.11))
        pathPath.line(to: NSPoint(x: 20.5, y: 12))
        pathPath.line(to: NSPoint(x: 20.5, y: 12))
        pathPath.line(to: NSPoint(x: 20.5, y: 12))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawInboxUpload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 25))
        pathPath.line(to: NSPoint(x: 11.25, y: 21.75))
        pathPath.line(to: NSPoint(x: 10.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 15, y: 27))
        pathPath.line(to: NSPoint(x: 19.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 18.75, y: 21.75))
        pathPath.line(to: NSPoint(x: 15.5, y: 25))
        pathPath.line(to: NSPoint(x: 15.5, y: 14))
        pathPath.line(to: NSPoint(x: 14.5, y: 14))
        pathPath.line(to: NSPoint(x: 14.5, y: 25))
        pathPath.line(to: NSPoint(x: 14.5, y: 25))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.5, y: 19))
        pathPath.line(to: NSPoint(x: 21.9, y: 19))
        pathPath.line(to: NSPoint(x: 26.28, y: 12))
        pathPath.line(to: NSPoint(x: 19.5, y: 12))
        pathPath.line(to: NSPoint(x: 19.5, y: 10))
        pathPath.curve(to: NSPoint(x: 17.5, y: 8), controlPoint1: NSPoint(x: 19.5, y: 8.9), controlPoint2: NSPoint(x: 18.61, y: 8))
        pathPath.line(to: NSPoint(x: 12.5, y: 8))
        pathPath.curve(to: NSPoint(x: 10.5, y: 10), controlPoint1: NSPoint(x: 11.4, y: 8), controlPoint2: NSPoint(x: 10.5, y: 8.89))
        pathPath.line(to: NSPoint(x: 10.5, y: 12))
        pathPath.line(to: NSPoint(x: 3.72, y: 12))
        pathPath.line(to: NSPoint(x: 8.1, y: 19))
        pathPath.line(to: NSPoint(x: 13.5, y: 19))
        pathPath.line(to: NSPoint(x: 13.5, y: 20))
        pathPath.line(to: NSPoint(x: 7.5, y: 20))
        pathPath.line(to: NSPoint(x: 2.5, y: 12))
        pathPath.line(to: NSPoint(x: 2.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 3))
        pathPath.line(to: NSPoint(x: 27.5, y: 3))
        pathPath.line(to: NSPoint(x: 27.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 12))
        pathPath.line(to: NSPoint(x: 22.5, y: 20))
        pathPath.line(to: NSPoint(x: 16.5, y: 20))
        pathPath.line(to: NSPoint(x: 16.5, y: 19))
        pathPath.line(to: NSPoint(x: 16.5, y: 19))
        pathPath.line(to: NSPoint(x: 16.5, y: 19))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 11))
        pathPath.line(to: NSPoint(x: 26.5, y: 4))
        pathPath.line(to: NSPoint(x: 3.5, y: 4))
        pathPath.line(to: NSPoint(x: 3.5, y: 11))
        pathPath.line(to: NSPoint(x: 9.5, y: 11))
        pathPath.line(to: NSPoint(x: 9.5, y: 9.5))
        pathPath.curve(to: NSPoint(x: 12, y: 7), controlPoint1: NSPoint(x: 9.5, y: 8.12), controlPoint2: NSPoint(x: 10.62, y: 7))
        pathPath.line(to: NSPoint(x: 18, y: 7))
        pathPath.curve(to: NSPoint(x: 20.5, y: 9.5), controlPoint1: NSPoint(x: 19.38, y: 7), controlPoint2: NSPoint(x: 20.5, y: 8.11))
        pathPath.line(to: NSPoint(x: 20.5, y: 11))
        pathPath.line(to: NSPoint(x: 20.5, y: 11))
        pathPath.line(to: NSPoint(x: 20.5, y: 11))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolder(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 2.5, y: 26))
        pathPath.curve(to: NSPoint(x: 0.5, y: 24.01), controlPoint1: NSPoint(x: 1.4, y: 26), controlPoint2: NSPoint(x: 0.5, y: 25.11))
        pathPath.line(to: NSPoint(x: 0.5, y: 5.99))
        pathPath.curve(to: NSPoint(x: 2.49, y: 4), controlPoint1: NSPoint(x: 0.5, y: 4.89), controlPoint2: NSPoint(x: 1.4, y: 4))
        pathPath.line(to: NSPoint(x: 27.51, y: 4))
        pathPath.curve(to: NSPoint(x: 29.5, y: 6), controlPoint1: NSPoint(x: 28.61, y: 4), controlPoint2: NSPoint(x: 29.5, y: 4.89))
        pathPath.line(to: NSPoint(x: 29.5, y: 20))
        pathPath.curve(to: NSPoint(x: 27.49, y: 22), controlPoint1: NSPoint(x: 29.5, y: 21.11), controlPoint2: NSPoint(x: 28.6, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.86, y: 21))
        pathPath.line(to: NSPoint(x: 12.9, y: 25))
        pathPath.line(to: NSPoint(x: 2.49, y: 25))
        pathPath.curve(to: NSPoint(x: 1.5, y: 24.01), controlPoint1: NSPoint(x: 1.94, y: 25), controlPoint2: NSPoint(x: 1.5, y: 24.54))
        pathPath.line(to: NSPoint(x: 1.5, y: 5.99))
        pathPath.curve(to: NSPoint(x: 2.49, y: 5), controlPoint1: NSPoint(x: 1.5, y: 5.44), controlPoint2: NSPoint(x: 1.95, y: 5))
        pathPath.line(to: NSPoint(x: 27.51, y: 5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 6), controlPoint1: NSPoint(x: 28.06, y: 5), controlPoint2: NSPoint(x: 28.5, y: 5.44))
        pathPath.line(to: NSPoint(x: 28.5, y: 20))
        pathPath.curve(to: NSPoint(x: 27.5, y: 21), controlPoint1: NSPoint(x: 28.5, y: 20.55), controlPoint2: NSPoint(x: 28.05, y: 21))
        pathPath.line(to: NSPoint(x: 14.86, y: 21))
        pathPath.line(to: NSPoint(x: 14.86, y: 21))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolder2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 1.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 24.01))
        pathPath.curve(to: NSPoint(x: 2.49, y: 25), controlPoint1: NSPoint(x: 1.5, y: 24.54), controlPoint2: NSPoint(x: 1.94, y: 25))
        pathPath.line(to: NSPoint(x: 12.9, y: 25))
        pathPath.line(to: NSPoint(x: 14.86, y: 21))
        pathPath.line(to: NSPoint(x: 27.5, y: 21))
        pathPath.curve(to: NSPoint(x: 28.5, y: 20), controlPoint1: NSPoint(x: 28.05, y: 21), controlPoint2: NSPoint(x: 28.5, y: 20.55))
        pathPath.line(to: NSPoint(x: 28.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.5, y: 17))
        pathPath.line(to: NSPoint(x: 1.5, y: 5.99))
        pathPath.curve(to: NSPoint(x: 2.49, y: 5), controlPoint1: NSPoint(x: 1.5, y: 5.44), controlPoint2: NSPoint(x: 1.95, y: 5))
        pathPath.line(to: NSPoint(x: 27.51, y: 5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 6), controlPoint1: NSPoint(x: 28.06, y: 5), controlPoint2: NSPoint(x: 28.5, y: 5.44))
        pathPath.line(to: NSPoint(x: 28.5, y: 17))
        pathPath.line(to: NSPoint(x: 1.5, y: 17))
        pathPath.line(to: NSPoint(x: 1.5, y: 17))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 2.5, y: 26))
        pathPath.curve(to: NSPoint(x: 0.5, y: 24.01), controlPoint1: NSPoint(x: 1.4, y: 26), controlPoint2: NSPoint(x: 0.5, y: 25.11))
        pathPath.line(to: NSPoint(x: 0.5, y: 5.99))
        pathPath.curve(to: NSPoint(x: 2.49, y: 4), controlPoint1: NSPoint(x: 0.5, y: 4.89), controlPoint2: NSPoint(x: 1.4, y: 4))
        pathPath.line(to: NSPoint(x: 27.51, y: 4))
        pathPath.curve(to: NSPoint(x: 29.5, y: 6), controlPoint1: NSPoint(x: 28.61, y: 4), controlPoint2: NSPoint(x: 29.5, y: 4.89))
        pathPath.line(to: NSPoint(x: 29.5, y: 20))
        pathPath.curve(to: NSPoint(x: 27.49, y: 22), controlPoint1: NSPoint(x: 29.5, y: 21.11), controlPoint2: NSPoint(x: 28.6, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolders(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 0.94, y: 15.96))
        pathPath.line(to: NSPoint(x: 0.94, y: 21.74))
        pathPath.curve(to: NSPoint(x: 1.87, y: 22.69), controlPoint1: NSPoint(x: 0.94, y: 22.25), controlPoint2: NSPoint(x: 1.35, y: 22.69))
        pathPath.line(to: NSPoint(x: 11.63, y: 22.69))
        pathPath.line(to: NSPoint(x: 13.46, y: 18.85))
        pathPath.line(to: NSPoint(x: 25.31, y: 18.85))
        pathPath.curve(to: NSPoint(x: 26.25, y: 17.88), controlPoint1: NSPoint(x: 25.82, y: 18.85), controlPoint2: NSPoint(x: 26.25, y: 18.42))
        pathPath.line(to: NSPoint(x: 26.25, y: 15.96))
        pathPath.line(to: NSPoint(x: 0.94, y: 15.96))
        pathPath.line(to: NSPoint(x: 0.94, y: 15.96))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 15))
        pathPath.line(to: NSPoint(x: 0.94, y: 4.42))
        pathPath.curve(to: NSPoint(x: 1.87, y: 3.46), controlPoint1: NSPoint(x: 0.94, y: 3.89), controlPoint2: NSPoint(x: 1.36, y: 3.46))
        pathPath.line(to: NSPoint(x: 25.32, y: 3.46))
        pathPath.curve(to: NSPoint(x: 26.25, y: 4.42), controlPoint1: NSPoint(x: 25.83, y: 3.46), controlPoint2: NSPoint(x: 26.25, y: 3.89))
        pathPath.line(to: NSPoint(x: 26.25, y: 15))
        pathPath.line(to: NSPoint(x: 0.94, y: 15))
        pathPath.line(to: NSPoint(x: 0.94, y: 15))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 2.81, y: 24.62))
        pathPath.line(to: NSPoint(x: 2.81, y: 25.59))
        pathPath.curve(to: NSPoint(x: 4.69, y: 27.5), controlPoint1: NSPoint(x: 2.81, y: 26.64), controlPoint2: NSPoint(x: 3.65, y: 27.5))
        pathPath.line(to: NSPoint(x: 15, y: 27.5))
        pathPath.line(to: NSPoint(x: 16.88, y: 23.65))
        pathPath.line(to: NSPoint(x: 28.12, y: 23.65))
        pathPath.curve(to: NSPoint(x: 30, y: 21.74), controlPoint1: NSPoint(x: 29.16, y: 23.65), controlPoint2: NSPoint(x: 30, y: 22.79))
        pathPath.line(to: NSPoint(x: 30, y: 8.26))
        pathPath.curve(to: NSPoint(x: 28.13, y: 6.35), controlPoint1: NSPoint(x: 30, y: 7.2), controlPoint2: NSPoint(x: 29.16, y: 6.35))
        pathPath.line(to: NSPoint(x: 28.12, y: 6.35))
        pathPath.line(to: NSPoint(x: 28.12, y: 7.31))
        pathPath.line(to: NSPoint(x: 28.13, y: 7.31))
        pathPath.curve(to: NSPoint(x: 29.06, y: 8.27), controlPoint1: NSPoint(x: 28.65, y: 7.31), controlPoint2: NSPoint(x: 29.06, y: 7.74))
        pathPath.line(to: NSPoint(x: 29.06, y: 21.73))
        pathPath.curve(to: NSPoint(x: 28.12, y: 22.69), controlPoint1: NSPoint(x: 29.06, y: 22.26), controlPoint2: NSPoint(x: 28.64, y: 22.69))
        pathPath.line(to: NSPoint(x: 16.27, y: 22.69))
        pathPath.line(to: NSPoint(x: 14.44, y: 26.54))
        pathPath.line(to: NSPoint(x: 4.68, y: 26.54))
        pathPath.curve(to: NSPoint(x: 3.75, y: 25.58), controlPoint1: NSPoint(x: 4.17, y: 26.54), controlPoint2: NSPoint(x: 3.75, y: 26.1))
        pathPath.line(to: NSPoint(x: 3.75, y: 24.62))
        pathPath.line(to: NSPoint(x: 2.81, y: 24.62))
        pathPath.line(to: NSPoint(x: 2.81, y: 24.62))
        pathPath.line(to: NSPoint(x: 2.81, y: 24.62))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.06, y: 19.81))
        pathPath.line(to: NSPoint(x: 12.19, y: 23.65))
        pathPath.line(to: NSPoint(x: 1.88, y: 23.65))
        pathPath.curve(to: NSPoint(x: 0, y: 21.74), controlPoint1: NSPoint(x: 0.84, y: 23.65), controlPoint2: NSPoint(x: 0, y: 22.8))
        pathPath.line(to: NSPoint(x: 0, y: 4.41))
        pathPath.curve(to: NSPoint(x: 1.87, y: 2.5), controlPoint1: NSPoint(x: 0, y: 3.36), controlPoint2: NSPoint(x: 0.84, y: 2.5))
        pathPath.line(to: NSPoint(x: 25.32, y: 2.5))
        pathPath.curve(to: NSPoint(x: 27.19, y: 4.42), controlPoint1: NSPoint(x: 26.35, y: 2.5), controlPoint2: NSPoint(x: 27.19, y: 3.36))
        pathPath.line(to: NSPoint(x: 27.19, y: 17.89))
        pathPath.curve(to: NSPoint(x: 25.31, y: 19.81), controlPoint1: NSPoint(x: 27.19, y: 18.95), controlPoint2: NSPoint(x: 26.35, y: 19.81))
        pathPath.line(to: NSPoint(x: 14.06, y: 19.81))
        pathPath.line(to: NSPoint(x: 14.06, y: 19.81))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawForlderDownload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15.5, y: 17))
        pathPath.line(to: NSPoint(x: 28.5, y: 17))
        pathPath.line(to: NSPoint(x: 28.5, y: 6))
        pathPath.curve(to: NSPoint(x: 27.51, y: 5), controlPoint1: NSPoint(x: 28.5, y: 5.44), controlPoint2: NSPoint(x: 28.06, y: 5))
        pathPath.line(to: NSPoint(x: 2.49, y: 5))
        pathPath.curve(to: NSPoint(x: 1.5, y: 5.99), controlPoint1: NSPoint(x: 1.95, y: 5), controlPoint2: NSPoint(x: 1.5, y: 5.44))
        pathPath.line(to: NSPoint(x: 1.5, y: 17))
        pathPath.line(to: NSPoint(x: 14.5, y: 17))
        pathPath.line(to: NSPoint(x: 14.5, y: 7.95))
        pathPath.line(to: NSPoint(x: 11.25, y: 11.2))
        pathPath.line(to: NSPoint(x: 10.5, y: 10.45))
        pathPath.line(to: NSPoint(x: 15, y: 5.95))
        pathPath.line(to: NSPoint(x: 19.5, y: 10.45))
        pathPath.line(to: NSPoint(x: 18.75, y: 11.2))
        pathPath.line(to: NSPoint(x: 15.5, y: 7.95))
        pathPath.line(to: NSPoint(x: 15.5, y: 17))
        pathPath.line(to: NSPoint(x: 15.5, y: 17))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 24.01))
        pathPath.curve(to: NSPoint(x: 2.49, y: 25), controlPoint1: NSPoint(x: 1.5, y: 24.54), controlPoint2: NSPoint(x: 1.94, y: 25))
        pathPath.line(to: NSPoint(x: 12.9, y: 25))
        pathPath.line(to: NSPoint(x: 14.86, y: 21))
        pathPath.line(to: NSPoint(x: 27.5, y: 21))
        pathPath.curve(to: NSPoint(x: 28.5, y: 20), controlPoint1: NSPoint(x: 28.05, y: 21), controlPoint2: NSPoint(x: 28.5, y: 20.55))
        pathPath.line(to: NSPoint(x: 28.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 2.5, y: 26))
        pathPath.curve(to: NSPoint(x: 0.5, y: 24.01), controlPoint1: NSPoint(x: 1.4, y: 26), controlPoint2: NSPoint(x: 0.5, y: 25.11))
        pathPath.line(to: NSPoint(x: 0.5, y: 5.99))
        pathPath.curve(to: NSPoint(x: 2.49, y: 4), controlPoint1: NSPoint(x: 0.5, y: 4.89), controlPoint2: NSPoint(x: 1.4, y: 4))
        pathPath.line(to: NSPoint(x: 27.51, y: 4))
        pathPath.curve(to: NSPoint(x: 29.5, y: 6), controlPoint1: NSPoint(x: 28.61, y: 4), controlPoint2: NSPoint(x: 29.5, y: 4.89))
        pathPath.line(to: NSPoint(x: 29.5, y: 20))
        pathPath.curve(to: NSPoint(x: 27.49, y: 22), controlPoint1: NSPoint(x: 29.5, y: 21.11), controlPoint2: NSPoint(x: 28.6, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderUpload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 5))
        pathPath.line(to: NSPoint(x: 2.49, y: 5))
        pathPath.curve(to: NSPoint(x: 1.5, y: 5.99), controlPoint1: NSPoint(x: 1.95, y: 5), controlPoint2: NSPoint(x: 1.5, y: 5.44))
        pathPath.line(to: NSPoint(x: 1.5, y: 17))
        pathPath.line(to: NSPoint(x: 28.5, y: 17))
        pathPath.line(to: NSPoint(x: 28.5, y: 6))
        pathPath.curve(to: NSPoint(x: 27.51, y: 5), controlPoint1: NSPoint(x: 28.5, y: 5.44), controlPoint2: NSPoint(x: 28.06, y: 5))
        pathPath.line(to: NSPoint(x: 15.5, y: 5))
        pathPath.line(to: NSPoint(x: 15.5, y: 14))
        pathPath.line(to: NSPoint(x: 18.75, y: 10.75))
        pathPath.line(to: NSPoint(x: 19.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 15, y: 16))
        pathPath.line(to: NSPoint(x: 10.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 11.25, y: 10.75))
        pathPath.line(to: NSPoint(x: 14.5, y: 14))
        pathPath.line(to: NSPoint(x: 14.5, y: 5))
        pathPath.line(to: NSPoint(x: 14.5, y: 5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 24.01))
        pathPath.curve(to: NSPoint(x: 2.49, y: 25), controlPoint1: NSPoint(x: 1.5, y: 24.54), controlPoint2: NSPoint(x: 1.94, y: 25))
        pathPath.line(to: NSPoint(x: 12.9, y: 25))
        pathPath.line(to: NSPoint(x: 14.86, y: 21))
        pathPath.line(to: NSPoint(x: 27.5, y: 21))
        pathPath.curve(to: NSPoint(x: 28.5, y: 20), controlPoint1: NSPoint(x: 28.05, y: 21), controlPoint2: NSPoint(x: 28.5, y: 20.55))
        pathPath.line(to: NSPoint(x: 28.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 2.5, y: 26))
        pathPath.curve(to: NSPoint(x: 0.5, y: 24.01), controlPoint1: NSPoint(x: 1.4, y: 26), controlPoint2: NSPoint(x: 0.5, y: 25.11))
        pathPath.line(to: NSPoint(x: 0.5, y: 5.99))
        pathPath.curve(to: NSPoint(x: 2.49, y: 4), controlPoint1: NSPoint(x: 0.5, y: 4.89), controlPoint2: NSPoint(x: 1.4, y: 4))
        pathPath.line(to: NSPoint(x: 27.51, y: 4))
        pathPath.curve(to: NSPoint(x: 29.5, y: 6), controlPoint1: NSPoint(x: 28.61, y: 4), controlPoint2: NSPoint(x: 29.5, y: 4.89))
        pathPath.line(to: NSPoint(x: 29.5, y: 20))
        pathPath.curve(to: NSPoint(x: 27.49, y: 22), controlPoint1: NSPoint(x: 29.5, y: 21.11), controlPoint2: NSPoint(x: 28.6, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderUnlocked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 21.56, y: 6.38))
        pathPath.line(to: NSPoint(x: 1.87, y: 6.38))
        pathPath.curve(to: NSPoint(x: 0.94, y: 7.33), controlPoint1: NSPoint(x: 1.36, y: 6.38), controlPoint2: NSPoint(x: 0.94, y: 6.8))
        pathPath.line(to: NSPoint(x: 0.94, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 15.92))
        pathPath.curve(to: NSPoint(x: 25.78, y: 15.96), controlPoint1: NSPoint(x: 26.1, y: 15.95), controlPoint2: NSPoint(x: 25.94, y: 15.96))
        pathPath.curve(to: NSPoint(x: 22.5, y: 12.61), controlPoint1: NSPoint(x: 23.97, y: 15.96), controlPoint2: NSPoint(x: 22.5, y: 14.46))
        pathPath.line(to: NSPoint(x: 22.5, y: 10.21))
        pathPath.curve(to: NSPoint(x: 21.56, y: 9.25), controlPoint1: NSPoint(x: 21.98, y: 10.21), controlPoint2: NSPoint(x: 21.56, y: 9.79))
        pathPath.line(to: NSPoint(x: 21.56, y: 6.38))
        pathPath.line(to: NSPoint(x: 21.56, y: 6.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 27.19, y: 15.64))
        pathPath.line(to: NSPoint(x: 27.19, y: 20.75))
        pathPath.curve(to: NSPoint(x: 25.31, y: 22.67), controlPoint1: NSPoint(x: 27.19, y: 21.81), controlPoint2: NSPoint(x: 26.35, y: 22.67))
        pathPath.line(to: NSPoint(x: 14.06, y: 22.67))
        pathPath.line(to: NSPoint(x: 12.19, y: 26.5))
        pathPath.line(to: NSPoint(x: 1.88, y: 26.5))
        pathPath.curve(to: NSPoint(x: 0, y: 24.59), controlPoint1: NSPoint(x: 0.84, y: 26.5), controlPoint2: NSPoint(x: 0, y: 25.65))
        pathPath.line(to: NSPoint(x: 0, y: 7.32))
        pathPath.curve(to: NSPoint(x: 1.87, y: 5.42), controlPoint1: NSPoint(x: 0, y: 6.27), controlPoint2: NSPoint(x: 0.84, y: 5.42))
        pathPath.line(to: NSPoint(x: 21.56, y: 5.42))
        pathPath.line(to: NSPoint(x: 21.56, y: 4.46))
        pathPath.curve(to: NSPoint(x: 22.5, y: 3.5), controlPoint1: NSPoint(x: 21.56, y: 3.93), controlPoint2: NSPoint(x: 21.98, y: 3.5))
        pathPath.line(to: NSPoint(x: 29.06, y: 3.5))
        pathPath.curve(to: NSPoint(x: 30, y: 4.46), controlPoint1: NSPoint(x: 29.58, y: 3.5), controlPoint2: NSPoint(x: 30, y: 3.92))
        pathPath.line(to: NSPoint(x: 30, y: 9.25))
        pathPath.curve(to: NSPoint(x: 29.06, y: 10.21), controlPoint1: NSPoint(x: 30, y: 9.78), controlPoint2: NSPoint(x: 29.59, y: 10.21))
        pathPath.line(to: NSPoint(x: 27.19, y: 10.21))
        pathPath.line(to: NSPoint(x: 23.44, y: 10.21))
        pathPath.line(to: NSPoint(x: 23.44, y: 12.6))
        pathPath.curve(to: NSPoint(x: 25.78, y: 15), controlPoint1: NSPoint(x: 23.44, y: 13.93), controlPoint2: NSPoint(x: 24.49, y: 15))
        pathPath.curve(to: NSPoint(x: 28.12, y: 12.6), controlPoint1: NSPoint(x: 27.08, y: 15), controlPoint2: NSPoint(x: 28.12, y: 13.92))
        pathPath.line(to: NSPoint(x: 28.12, y: 12.12))
        pathPath.line(to: NSPoint(x: 29.06, y: 12.12))
        pathPath.line(to: NSPoint(x: 29.06, y: 12.61))
        pathPath.curve(to: NSPoint(x: 27.19, y: 15.64), controlPoint1: NSPoint(x: 29.06, y: 13.94), controlPoint2: NSPoint(x: 28.29, y: 15.1))
        pathPath.line(to: NSPoint(x: 27.19, y: 15.64))
        pathPath.line(to: NSPoint(x: 27.19, y: 15.64))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.87, y: 25.54), controlPoint1: NSPoint(x: 0.94, y: 25.11), controlPoint2: NSPoint(x: 1.35, y: 25.54))
        pathPath.line(to: NSPoint(x: 11.63, y: 25.54))
        pathPath.line(to: NSPoint(x: 13.46, y: 21.71))
        pathPath.line(to: NSPoint(x: 25.31, y: 21.71))
        pathPath.curve(to: NSPoint(x: 26.25, y: 20.75), controlPoint1: NSPoint(x: 25.82, y: 21.71), controlPoint2: NSPoint(x: 26.25, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.25, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 22.97, y: 9.25))
        pathPath.curve(to: NSPoint(x: 22.5, y: 8.77), controlPoint1: NSPoint(x: 22.71, y: 9.25), controlPoint2: NSPoint(x: 22.5, y: 9.04))
        pathPath.line(to: NSPoint(x: 22.5, y: 4.94))
        pathPath.curve(to: NSPoint(x: 22.97, y: 4.46), controlPoint1: NSPoint(x: 22.5, y: 4.67), controlPoint2: NSPoint(x: 22.72, y: 4.46))
        pathPath.line(to: NSPoint(x: 28.59, y: 4.46))
        pathPath.curve(to: NSPoint(x: 29.06, y: 4.94), controlPoint1: NSPoint(x: 28.85, y: 4.46), controlPoint2: NSPoint(x: 29.06, y: 4.66))
        pathPath.line(to: NSPoint(x: 29.06, y: 8.77))
        pathPath.curve(to: NSPoint(x: 28.59, y: 9.25), controlPoint1: NSPoint(x: 29.06, y: 9.04), controlPoint2: NSPoint(x: 28.84, y: 9.25))
        pathPath.line(to: NSPoint(x: 22.97, y: 9.25))
        pathPath.line(to: NSPoint(x: 22.97, y: 9.25))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderLocked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 21.56, y: 6.38))
        pathPath.line(to: NSPoint(x: 1.87, y: 6.38))
        pathPath.curve(to: NSPoint(x: 0.94, y: 7.33), controlPoint1: NSPoint(x: 1.36, y: 6.38), controlPoint2: NSPoint(x: 0.94, y: 6.8))
        pathPath.line(to: NSPoint(x: 0.94, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 14.97))
        pathPath.curve(to: NSPoint(x: 25.78, y: 15), controlPoint1: NSPoint(x: 26.1, y: 14.99), controlPoint2: NSPoint(x: 25.94, y: 15))
        pathPath.curve(to: NSPoint(x: 22.5, y: 11.64), controlPoint1: NSPoint(x: 23.97, y: 15), controlPoint2: NSPoint(x: 22.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 10.21))
        pathPath.line(to: NSPoint(x: 22.5, y: 10.21))
        pathPath.curve(to: NSPoint(x: 21.56, y: 9.25), controlPoint1: NSPoint(x: 21.98, y: 10.21), controlPoint2: NSPoint(x: 21.56, y: 9.79))
        pathPath.line(to: NSPoint(x: 21.56, y: 6.38))
        pathPath.line(to: NSPoint(x: 21.56, y: 6.38))
        pathPath.line(to: NSPoint(x: 21.56, y: 6.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.56, y: 5.42))
        pathPath.line(to: NSPoint(x: 1.87, y: 5.42))
        pathPath.curve(to: NSPoint(x: 0, y: 7.32), controlPoint1: NSPoint(x: 0.84, y: 5.42), controlPoint2: NSPoint(x: 0, y: 6.27))
        pathPath.line(to: NSPoint(x: 0, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.88, y: 26.5), controlPoint1: NSPoint(x: 0, y: 25.65), controlPoint2: NSPoint(x: 0.84, y: 26.5))
        pathPath.line(to: NSPoint(x: 12.19, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.06, y: 22.67))
        pathPath.line(to: NSPoint(x: 25.31, y: 22.67))
        pathPath.curve(to: NSPoint(x: 27.19, y: 20.75), controlPoint1: NSPoint(x: 26.35, y: 22.67), controlPoint2: NSPoint(x: 27.19, y: 21.81))
        pathPath.line(to: NSPoint(x: 27.19, y: 14.68))
        pathPath.curve(to: NSPoint(x: 29.06, y: 11.64), controlPoint1: NSPoint(x: 28.29, y: 14.14), controlPoint2: NSPoint(x: 29.06, y: 12.98))
        pathPath.line(to: NSPoint(x: 29.06, y: 10.21))
        pathPath.line(to: NSPoint(x: 29.06, y: 10.21))
        pathPath.curve(to: NSPoint(x: 30, y: 9.25), controlPoint1: NSPoint(x: 29.58, y: 10.21), controlPoint2: NSPoint(x: 30, y: 9.78))
        pathPath.line(to: NSPoint(x: 30, y: 4.46))
        pathPath.curve(to: NSPoint(x: 29.06, y: 3.5), controlPoint1: NSPoint(x: 30, y: 3.92), controlPoint2: NSPoint(x: 29.58, y: 3.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 21.56, y: 4.46), controlPoint1: NSPoint(x: 21.98, y: 3.5), controlPoint2: NSPoint(x: 21.56, y: 3.93))
        pathPath.line(to: NSPoint(x: 21.56, y: 5.42))
        pathPath.line(to: NSPoint(x: 21.56, y: 5.42))
        pathPath.line(to: NSPoint(x: 21.56, y: 5.42))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.44, y: 10.21))
        pathPath.line(to: NSPoint(x: 23.44, y: 11.64))
        pathPath.curve(to: NSPoint(x: 25.78, y: 14.04), controlPoint1: NSPoint(x: 23.44, y: 12.98), controlPoint2: NSPoint(x: 24.49, y: 14.04))
        pathPath.curve(to: NSPoint(x: 28.12, y: 11.64), controlPoint1: NSPoint(x: 27.08, y: 14.04), controlPoint2: NSPoint(x: 28.12, y: 12.97))
        pathPath.line(to: NSPoint(x: 28.12, y: 10.21))
        pathPath.line(to: NSPoint(x: 23.44, y: 10.21))
        pathPath.line(to: NSPoint(x: 23.44, y: 10.21))
        pathPath.line(to: NSPoint(x: 23.44, y: 10.21))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.87, y: 25.54), controlPoint1: NSPoint(x: 0.94, y: 25.11), controlPoint2: NSPoint(x: 1.35, y: 25.54))
        pathPath.line(to: NSPoint(x: 11.63, y: 25.54))
        pathPath.line(to: NSPoint(x: 13.46, y: 21.71))
        pathPath.line(to: NSPoint(x: 25.31, y: 21.71))
        pathPath.curve(to: NSPoint(x: 26.25, y: 20.75), controlPoint1: NSPoint(x: 25.82, y: 21.71), controlPoint2: NSPoint(x: 26.25, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.25, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 22.97, y: 9.25))
        pathPath.curve(to: NSPoint(x: 22.5, y: 8.77), controlPoint1: NSPoint(x: 22.71, y: 9.25), controlPoint2: NSPoint(x: 22.5, y: 9.04))
        pathPath.line(to: NSPoint(x: 22.5, y: 4.94))
        pathPath.curve(to: NSPoint(x: 22.97, y: 4.46), controlPoint1: NSPoint(x: 22.5, y: 4.67), controlPoint2: NSPoint(x: 22.72, y: 4.46))
        pathPath.line(to: NSPoint(x: 28.59, y: 4.46))
        pathPath.curve(to: NSPoint(x: 29.06, y: 4.94), controlPoint1: NSPoint(x: 28.85, y: 4.46), controlPoint2: NSPoint(x: 29.06, y: 4.66))
        pathPath.line(to: NSPoint(x: 29.06, y: 8.77))
        pathPath.curve(to: NSPoint(x: 28.59, y: 9.25), controlPoint1: NSPoint(x: 29.06, y: 9.04), controlPoint2: NSPoint(x: 28.84, y: 9.25))
        pathPath.line(to: NSPoint(x: 22.97, y: 9.25))
        pathPath.line(to: NSPoint(x: 22.97, y: 9.25))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderSearch(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 15.81, y: 10.98))
        pathPath.curve(to: NSPoint(x: 13, y: 10), controlPoint1: NSPoint(x: 15.04, y: 10.37), controlPoint2: NSPoint(x: 14.06, y: 10))
        pathPath.curve(to: NSPoint(x: 8.5, y: 14.5), controlPoint1: NSPoint(x: 10.51, y: 10), controlPoint2: NSPoint(x: 8.5, y: 12.01))
        pathPath.curve(to: NSPoint(x: 13, y: 19), controlPoint1: NSPoint(x: 8.5, y: 16.99), controlPoint2: NSPoint(x: 10.51, y: 19))
        pathPath.curve(to: NSPoint(x: 17.5, y: 14.5), controlPoint1: NSPoint(x: 15.49, y: 19), controlPoint2: NSPoint(x: 17.5, y: 16.99))
        pathPath.curve(to: NSPoint(x: 16.52, y: 11.69), controlPoint1: NSPoint(x: 17.5, y: 13.44), controlPoint2: NSPoint(x: 17.13, y: 12.46))
        pathPath.line(to: NSPoint(x: 21.86, y: 6.34))
        pathPath.line(to: NSPoint(x: 21.16, y: 5.64))
        pathPath.line(to: NSPoint(x: 15.81, y: 10.98))
        pathPath.line(to: NSPoint(x: 15.81, y: 10.98))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 2.5, y: 26))
        pathPath.curve(to: NSPoint(x: 0.5, y: 24.01), controlPoint1: NSPoint(x: 1.4, y: 26), controlPoint2: NSPoint(x: 0.5, y: 25.11))
        pathPath.line(to: NSPoint(x: 0.5, y: 5.99))
        pathPath.curve(to: NSPoint(x: 2.49, y: 4), controlPoint1: NSPoint(x: 0.5, y: 4.89), controlPoint2: NSPoint(x: 1.4, y: 4))
        pathPath.line(to: NSPoint(x: 27.51, y: 4))
        pathPath.curve(to: NSPoint(x: 29.5, y: 6), controlPoint1: NSPoint(x: 28.61, y: 4), controlPoint2: NSPoint(x: 29.5, y: 4.89))
        pathPath.line(to: NSPoint(x: 29.5, y: 20))
        pathPath.curve(to: NSPoint(x: 27.49, y: 22), controlPoint1: NSPoint(x: 29.5, y: 21.11), controlPoint2: NSPoint(x: 28.6, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.86, y: 21))
        pathPath.line(to: NSPoint(x: 12.9, y: 25))
        pathPath.line(to: NSPoint(x: 2.49, y: 25))
        pathPath.curve(to: NSPoint(x: 1.5, y: 24.01), controlPoint1: NSPoint(x: 1.94, y: 25), controlPoint2: NSPoint(x: 1.5, y: 24.54))
        pathPath.line(to: NSPoint(x: 1.5, y: 5.99))
        pathPath.curve(to: NSPoint(x: 2.49, y: 5), controlPoint1: NSPoint(x: 1.5, y: 5.44), controlPoint2: NSPoint(x: 1.95, y: 5))
        pathPath.line(to: NSPoint(x: 27.51, y: 5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 6), controlPoint1: NSPoint(x: 28.06, y: 5), controlPoint2: NSPoint(x: 28.5, y: 5.44))
        pathPath.line(to: NSPoint(x: 28.5, y: 20))
        pathPath.curve(to: NSPoint(x: 27.5, y: 21), controlPoint1: NSPoint(x: 28.5, y: 20.55), controlPoint2: NSPoint(x: 28.05, y: 21))
        pathPath.line(to: NSPoint(x: 14.86, y: 21))
        pathPath.line(to: NSPoint(x: 14.86, y: 21))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13, y: 11))
        pathPath.curve(to: NSPoint(x: 16.5, y: 14.5), controlPoint1: NSPoint(x: 14.93, y: 11), controlPoint2: NSPoint(x: 16.5, y: 12.57))
        pathPath.curve(to: NSPoint(x: 13, y: 18), controlPoint1: NSPoint(x: 16.5, y: 16.43), controlPoint2: NSPoint(x: 14.93, y: 18))
        pathPath.curve(to: NSPoint(x: 9.5, y: 14.5), controlPoint1: NSPoint(x: 11.07, y: 18), controlPoint2: NSPoint(x: 9.5, y: 16.43))
        pathPath.curve(to: NSPoint(x: 13, y: 11), controlPoint1: NSPoint(x: 9.5, y: 12.57), controlPoint2: NSPoint(x: 11.07, y: 11))
        pathPath.line(to: NSPoint(x: 13, y: 11))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderError(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 19.47, y: 6.38))
        pathPath.line(to: NSPoint(x: 1.87, y: 6.38))
        pathPath.curve(to: NSPoint(x: 0.94, y: 7.33), controlPoint1: NSPoint(x: 1.36, y: 6.38), controlPoint2: NSPoint(x: 0.94, y: 6.8))
        pathPath.line(to: NSPoint(x: 0.94, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 9.99))
        pathPath.line(to: NSPoint(x: 23.91, y: 14.04))
        pathPath.line(to: NSPoint(x: 19.47, y: 6.38))
        pathPath.line(to: NSPoint(x: 19.47, y: 6.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.92, y: 5.42))
        pathPath.line(to: NSPoint(x: 1.87, y: 5.42))
        pathPath.curve(to: NSPoint(x: 0, y: 7.32), controlPoint1: NSPoint(x: 0.84, y: 5.42), controlPoint2: NSPoint(x: 0, y: 6.27))
        pathPath.line(to: NSPoint(x: 0, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.88, y: 26.5), controlPoint1: NSPoint(x: 0, y: 25.65), controlPoint2: NSPoint(x: 0.84, y: 26.5))
        pathPath.line(to: NSPoint(x: 12.19, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.06, y: 22.67))
        pathPath.line(to: NSPoint(x: 25.31, y: 22.67))
        pathPath.curve(to: NSPoint(x: 27.19, y: 20.75), controlPoint1: NSPoint(x: 26.35, y: 22.67), controlPoint2: NSPoint(x: 27.19, y: 21.81))
        pathPath.line(to: NSPoint(x: 27.19, y: 8.37))
        pathPath.line(to: NSPoint(x: 30, y: 3.5))
        pathPath.line(to: NSPoint(x: 17.81, y: 3.5))
        pathPath.line(to: NSPoint(x: 18.92, y: 5.42))
        pathPath.line(to: NSPoint(x: 18.92, y: 5.42))
        pathPath.line(to: NSPoint(x: 18.92, y: 5.42))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.87, y: 25.54), controlPoint1: NSPoint(x: 0.94, y: 25.11), controlPoint2: NSPoint(x: 1.35, y: 25.54))
        pathPath.line(to: NSPoint(x: 11.63, y: 25.54))
        pathPath.line(to: NSPoint(x: 13.46, y: 21.71))
        pathPath.line(to: NSPoint(x: 25.31, y: 21.71))
        pathPath.curve(to: NSPoint(x: 26.25, y: 20.75), controlPoint1: NSPoint(x: 25.82, y: 21.71), controlPoint2: NSPoint(x: 26.25, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.25, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.91, y: 12.12))
        pathPath.line(to: NSPoint(x: 28.36, y: 4.46))
        pathPath.line(to: NSPoint(x: 19.45, y: 4.46))
        pathPath.line(to: NSPoint(x: 23.91, y: 12.12))
        pathPath.line(to: NSPoint(x: 23.91, y: 12.12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.44, y: 10.21))
        pathPath.line(to: NSPoint(x: 23.44, y: 7.33))
        pathPath.line(to: NSPoint(x: 24.38, y: 7.33))
        pathPath.line(to: NSPoint(x: 24.38, y: 10.21))
        pathPath.line(to: NSPoint(x: 23.44, y: 10.21))
        pathPath.line(to: NSPoint(x: 23.44, y: 10.21))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.44, y: 6.38))
        pathPath.line(to: NSPoint(x: 23.44, y: 5.42))
        pathPath.line(to: NSPoint(x: 24.38, y: 5.42))
        pathPath.line(to: NSPoint(x: 24.38, y: 6.38))
        pathPath.line(to: NSPoint(x: 23.44, y: 6.38))
        pathPath.line(to: NSPoint(x: 23.44, y: 6.38))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderCancel(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.84, y: 8.09))
        pathPath.line(to: NSPoint(x: 22.86, y: 6.06))
        pathPath.line(to: NSPoint(x: 22.19, y: 6.74))
        pathPath.line(to: NSPoint(x: 24.18, y: 8.77))
        pathPath.line(to: NSPoint(x: 22.19, y: 10.8))
        pathPath.line(to: NSPoint(x: 22.86, y: 11.48))
        pathPath.line(to: NSPoint(x: 24.84, y: 9.45))
        pathPath.line(to: NSPoint(x: 26.83, y: 11.48))
        pathPath.line(to: NSPoint(x: 27.5, y: 10.8))
        pathPath.line(to: NSPoint(x: 25.51, y: 8.77))
        pathPath.line(to: NSPoint(x: 27.5, y: 6.74))
        pathPath.line(to: NSPoint(x: 26.83, y: 6.06))
        pathPath.line(to: NSPoint(x: 24.84, y: 8.09))
        pathPath.line(to: NSPoint(x: 24.84, y: 8.09))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 1.87, y: 6.38))
        pathPath.curve(to: NSPoint(x: 0.94, y: 7.33), controlPoint1: NSPoint(x: 1.36, y: 6.38), controlPoint2: NSPoint(x: 0.94, y: 6.8))
        pathPath.line(to: NSPoint(x: 0.94, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 13.84))
        pathPath.curve(to: NSPoint(x: 24.84, y: 14.04), controlPoint1: NSPoint(x: 25.8, y: 13.97), controlPoint2: NSPoint(x: 25.33, y: 14.04))
        pathPath.curve(to: NSPoint(x: 19.69, y: 8.77), controlPoint1: NSPoint(x: 22, y: 14.04), controlPoint2: NSPoint(x: 19.69, y: 11.68))
        pathPath.curve(to: NSPoint(x: 20.25, y: 6.37), controlPoint1: NSPoint(x: 19.69, y: 7.91), controlPoint2: NSPoint(x: 19.89, y: 7.09))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 1.87, y: 5.42))
        pathPath.curve(to: NSPoint(x: 0, y: 7.32), controlPoint1: NSPoint(x: 0.84, y: 5.42), controlPoint2: NSPoint(x: 0, y: 6.27))
        pathPath.line(to: NSPoint(x: 0, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.88, y: 26.5), controlPoint1: NSPoint(x: 0, y: 25.65), controlPoint2: NSPoint(x: 0.84, y: 26.5))
        pathPath.line(to: NSPoint(x: 12.19, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.06, y: 22.67))
        pathPath.line(to: NSPoint(x: 25.31, y: 22.67))
        pathPath.curve(to: NSPoint(x: 27.19, y: 20.75), controlPoint1: NSPoint(x: 26.35, y: 22.67), controlPoint2: NSPoint(x: 27.19, y: 21.81))
        pathPath.line(to: NSPoint(x: 27.19, y: 13.47))
        pathPath.curve(to: NSPoint(x: 30, y: 8.77), controlPoint1: NSPoint(x: 28.86, y: 12.59), controlPoint2: NSPoint(x: 30, y: 10.82))
        pathPath.curve(to: NSPoint(x: 24.84, y: 3.5), controlPoint1: NSPoint(x: 30, y: 5.86), controlPoint2: NSPoint(x: 27.69, y: 3.5))
        pathPath.curve(to: NSPoint(x: 20.87, y: 5.42), controlPoint1: NSPoint(x: 23.24, y: 3.5), controlPoint2: NSPoint(x: 21.81, y: 4.25))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.87, y: 25.54), controlPoint1: NSPoint(x: 0.94, y: 25.11), controlPoint2: NSPoint(x: 1.35, y: 25.54))
        pathPath.line(to: NSPoint(x: 11.63, y: 25.54))
        pathPath.line(to: NSPoint(x: 13.46, y: 21.71))
        pathPath.line(to: NSPoint(x: 25.31, y: 21.71))
        pathPath.curve(to: NSPoint(x: 26.25, y: 20.75), controlPoint1: NSPoint(x: 25.82, y: 21.71), controlPoint2: NSPoint(x: 26.25, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.25, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.curve(to: NSPoint(x: 29.06, y: 8.77), controlPoint1: NSPoint(x: 27.17, y: 4.46), controlPoint2: NSPoint(x: 29.06, y: 6.39))
        pathPath.curve(to: NSPoint(x: 24.84, y: 13.08), controlPoint1: NSPoint(x: 29.06, y: 11.15), controlPoint2: NSPoint(x: 27.17, y: 13.08))
        pathPath.curve(to: NSPoint(x: 20.62, y: 8.77), controlPoint1: NSPoint(x: 22.51, y: 13.08), controlPoint2: NSPoint(x: 20.62, y: 11.15))
        pathPath.curve(to: NSPoint(x: 24.84, y: 4.46), controlPoint1: NSPoint(x: 20.62, y: 6.39), controlPoint2: NSPoint(x: 22.51, y: 4.46))
        pathPath.line(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderChecked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 1.87, y: 6.38))
        pathPath.curve(to: NSPoint(x: 0.94, y: 7.33), controlPoint1: NSPoint(x: 1.36, y: 6.38), controlPoint2: NSPoint(x: 0.94, y: 6.8))
        pathPath.line(to: NSPoint(x: 0.94, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 13.84))
        pathPath.curve(to: NSPoint(x: 24.84, y: 14.04), controlPoint1: NSPoint(x: 25.8, y: 13.97), controlPoint2: NSPoint(x: 25.33, y: 14.04))
        pathPath.curve(to: NSPoint(x: 19.69, y: 8.77), controlPoint1: NSPoint(x: 22, y: 14.04), controlPoint2: NSPoint(x: 19.69, y: 11.68))
        pathPath.curve(to: NSPoint(x: 20.25, y: 6.37), controlPoint1: NSPoint(x: 19.69, y: 7.91), controlPoint2: NSPoint(x: 19.89, y: 7.09))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 1.87, y: 5.42))
        pathPath.curve(to: NSPoint(x: 0, y: 7.32), controlPoint1: NSPoint(x: 0.84, y: 5.42), controlPoint2: NSPoint(x: 0, y: 6.27))
        pathPath.line(to: NSPoint(x: 0, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.88, y: 26.5), controlPoint1: NSPoint(x: 0, y: 25.65), controlPoint2: NSPoint(x: 0.84, y: 26.5))
        pathPath.line(to: NSPoint(x: 12.19, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.06, y: 22.67))
        pathPath.line(to: NSPoint(x: 25.31, y: 22.67))
        pathPath.curve(to: NSPoint(x: 27.19, y: 20.75), controlPoint1: NSPoint(x: 26.35, y: 22.67), controlPoint2: NSPoint(x: 27.19, y: 21.81))
        pathPath.line(to: NSPoint(x: 27.19, y: 13.47))
        pathPath.curve(to: NSPoint(x: 30, y: 8.77), controlPoint1: NSPoint(x: 28.86, y: 12.59), controlPoint2: NSPoint(x: 30, y: 10.82))
        pathPath.curve(to: NSPoint(x: 24.84, y: 3.5), controlPoint1: NSPoint(x: 30, y: 5.86), controlPoint2: NSPoint(x: 27.69, y: 3.5))
        pathPath.curve(to: NSPoint(x: 20.87, y: 5.42), controlPoint1: NSPoint(x: 23.24, y: 3.5), controlPoint2: NSPoint(x: 21.81, y: 4.25))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.87, y: 25.54), controlPoint1: NSPoint(x: 0.94, y: 25.11), controlPoint2: NSPoint(x: 1.35, y: 25.54))
        pathPath.line(to: NSPoint(x: 11.63, y: 25.54))
        pathPath.line(to: NSPoint(x: 13.46, y: 21.71))
        pathPath.line(to: NSPoint(x: 25.31, y: 21.71))
        pathPath.curve(to: NSPoint(x: 26.25, y: 20.75), controlPoint1: NSPoint(x: 25.82, y: 21.71), controlPoint2: NSPoint(x: 26.25, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.25, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.curve(to: NSPoint(x: 29.06, y: 8.77), controlPoint1: NSPoint(x: 27.17, y: 4.46), controlPoint2: NSPoint(x: 29.06, y: 6.39))
        pathPath.curve(to: NSPoint(x: 24.84, y: 13.08), controlPoint1: NSPoint(x: 29.06, y: 11.15), controlPoint2: NSPoint(x: 27.17, y: 13.08))
        pathPath.curve(to: NSPoint(x: 20.62, y: 8.77), controlPoint1: NSPoint(x: 22.51, y: 13.08), controlPoint2: NSPoint(x: 20.62, y: 11.15))
        pathPath.curve(to: NSPoint(x: 24.84, y: 4.46), controlPoint1: NSPoint(x: 20.62, y: 6.39), controlPoint2: NSPoint(x: 22.51, y: 4.46))
        pathPath.line(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.38, y: 6.14))
        pathPath.line(to: NSPoint(x: 22.17, y: 8.4))
        pathPath.line(to: NSPoint(x: 22.86, y: 9.1))
        pathPath.line(to: NSPoint(x: 24.38, y: 7.55))
        pathPath.line(to: NSPoint(x: 27.3, y: 10.54))
        pathPath.line(to: NSPoint(x: 27.99, y: 9.84))
        pathPath.line(to: NSPoint(x: 24.38, y: 6.14))
        pathPath.line(to: NSPoint(x: 24.38, y: 6.14))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderAdd(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.38, y: 9.25))
        pathPath.line(to: NSPoint(x: 24.38, y: 12.12))
        pathPath.line(to: NSPoint(x: 25.31, y: 12.12))
        pathPath.line(to: NSPoint(x: 25.31, y: 9.25))
        pathPath.line(to: NSPoint(x: 28.12, y: 9.25))
        pathPath.line(to: NSPoint(x: 28.12, y: 8.29))
        pathPath.line(to: NSPoint(x: 25.31, y: 8.29))
        pathPath.line(to: NSPoint(x: 25.31, y: 5.42))
        pathPath.line(to: NSPoint(x: 24.38, y: 5.42))
        pathPath.line(to: NSPoint(x: 24.38, y: 8.29))
        pathPath.line(to: NSPoint(x: 21.56, y: 8.29))
        pathPath.line(to: NSPoint(x: 21.56, y: 9.25))
        pathPath.line(to: NSPoint(x: 24.38, y: 9.25))
        pathPath.line(to: NSPoint(x: 24.38, y: 9.25))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 1.87, y: 6.38))
        pathPath.curve(to: NSPoint(x: 0.94, y: 7.33), controlPoint1: NSPoint(x: 1.36, y: 6.38), controlPoint2: NSPoint(x: 0.94, y: 6.8))
        pathPath.line(to: NSPoint(x: 0.94, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 13.84))
        pathPath.curve(to: NSPoint(x: 24.84, y: 14.04), controlPoint1: NSPoint(x: 25.8, y: 13.97), controlPoint2: NSPoint(x: 25.33, y: 14.04))
        pathPath.curve(to: NSPoint(x: 19.69, y: 8.77), controlPoint1: NSPoint(x: 22, y: 14.04), controlPoint2: NSPoint(x: 19.69, y: 11.68))
        pathPath.curve(to: NSPoint(x: 20.25, y: 6.37), controlPoint1: NSPoint(x: 19.69, y: 7.91), controlPoint2: NSPoint(x: 19.89, y: 7.09))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 1.87, y: 5.42))
        pathPath.curve(to: NSPoint(x: 0, y: 7.32), controlPoint1: NSPoint(x: 0.84, y: 5.42), controlPoint2: NSPoint(x: 0, y: 6.27))
        pathPath.line(to: NSPoint(x: 0, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.88, y: 26.5), controlPoint1: NSPoint(x: 0, y: 25.65), controlPoint2: NSPoint(x: 0.84, y: 26.5))
        pathPath.line(to: NSPoint(x: 12.19, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.06, y: 22.67))
        pathPath.line(to: NSPoint(x: 25.31, y: 22.67))
        pathPath.curve(to: NSPoint(x: 27.19, y: 20.75), controlPoint1: NSPoint(x: 26.35, y: 22.67), controlPoint2: NSPoint(x: 27.19, y: 21.81))
        pathPath.line(to: NSPoint(x: 27.19, y: 13.47))
        pathPath.curve(to: NSPoint(x: 30, y: 8.77), controlPoint1: NSPoint(x: 28.86, y: 12.59), controlPoint2: NSPoint(x: 30, y: 10.82))
        pathPath.curve(to: NSPoint(x: 24.84, y: 3.5), controlPoint1: NSPoint(x: 30, y: 5.86), controlPoint2: NSPoint(x: 27.69, y: 3.5))
        pathPath.curve(to: NSPoint(x: 20.87, y: 5.42), controlPoint1: NSPoint(x: 23.24, y: 3.5), controlPoint2: NSPoint(x: 21.81, y: 4.25))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.87, y: 25.54), controlPoint1: NSPoint(x: 0.94, y: 25.11), controlPoint2: NSPoint(x: 1.35, y: 25.54))
        pathPath.line(to: NSPoint(x: 11.63, y: 25.54))
        pathPath.line(to: NSPoint(x: 13.46, y: 21.71))
        pathPath.line(to: NSPoint(x: 25.31, y: 21.71))
        pathPath.curve(to: NSPoint(x: 26.25, y: 20.75), controlPoint1: NSPoint(x: 25.82, y: 21.71), controlPoint2: NSPoint(x: 26.25, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.25, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.curve(to: NSPoint(x: 29.06, y: 8.77), controlPoint1: NSPoint(x: 27.17, y: 4.46), controlPoint2: NSPoint(x: 29.06, y: 6.39))
        pathPath.curve(to: NSPoint(x: 24.84, y: 13.08), controlPoint1: NSPoint(x: 29.06, y: 11.15), controlPoint2: NSPoint(x: 27.17, y: 13.08))
        pathPath.curve(to: NSPoint(x: 20.62, y: 8.77), controlPoint1: NSPoint(x: 22.51, y: 13.08), controlPoint2: NSPoint(x: 20.62, y: 11.15))
        pathPath.curve(to: NSPoint(x: 24.84, y: 4.46), controlPoint1: NSPoint(x: 20.62, y: 6.39), controlPoint2: NSPoint(x: 22.51, y: 4.46))
        pathPath.line(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderRemove(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 1.87, y: 6.38))
        pathPath.curve(to: NSPoint(x: 0.94, y: 7.33), controlPoint1: NSPoint(x: 1.36, y: 6.38), controlPoint2: NSPoint(x: 0.94, y: 6.8))
        pathPath.line(to: NSPoint(x: 0.94, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 13.84))
        pathPath.curve(to: NSPoint(x: 24.84, y: 14.04), controlPoint1: NSPoint(x: 25.8, y: 13.97), controlPoint2: NSPoint(x: 25.33, y: 14.04))
        pathPath.curve(to: NSPoint(x: 19.69, y: 8.77), controlPoint1: NSPoint(x: 22, y: 14.04), controlPoint2: NSPoint(x: 19.69, y: 11.68))
        pathPath.curve(to: NSPoint(x: 20.25, y: 6.37), controlPoint1: NSPoint(x: 19.69, y: 7.91), controlPoint2: NSPoint(x: 19.89, y: 7.09))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 1.87, y: 5.42))
        pathPath.curve(to: NSPoint(x: 0, y: 7.32), controlPoint1: NSPoint(x: 0.84, y: 5.42), controlPoint2: NSPoint(x: 0, y: 6.27))
        pathPath.line(to: NSPoint(x: 0, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.88, y: 26.5), controlPoint1: NSPoint(x: 0, y: 25.65), controlPoint2: NSPoint(x: 0.84, y: 26.5))
        pathPath.line(to: NSPoint(x: 12.19, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.06, y: 22.67))
        pathPath.line(to: NSPoint(x: 25.31, y: 22.67))
        pathPath.curve(to: NSPoint(x: 27.19, y: 20.75), controlPoint1: NSPoint(x: 26.35, y: 22.67), controlPoint2: NSPoint(x: 27.19, y: 21.81))
        pathPath.line(to: NSPoint(x: 27.19, y: 13.47))
        pathPath.curve(to: NSPoint(x: 30, y: 8.77), controlPoint1: NSPoint(x: 28.86, y: 12.59), controlPoint2: NSPoint(x: 30, y: 10.82))
        pathPath.curve(to: NSPoint(x: 24.84, y: 3.5), controlPoint1: NSPoint(x: 30, y: 5.86), controlPoint2: NSPoint(x: 27.69, y: 3.5))
        pathPath.curve(to: NSPoint(x: 20.87, y: 5.42), controlPoint1: NSPoint(x: 23.24, y: 3.5), controlPoint2: NSPoint(x: 21.81, y: 4.25))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.87, y: 25.54), controlPoint1: NSPoint(x: 0.94, y: 25.11), controlPoint2: NSPoint(x: 1.35, y: 25.54))
        pathPath.line(to: NSPoint(x: 11.63, y: 25.54))
        pathPath.line(to: NSPoint(x: 13.46, y: 21.71))
        pathPath.line(to: NSPoint(x: 25.31, y: 21.71))
        pathPath.curve(to: NSPoint(x: 26.25, y: 20.75), controlPoint1: NSPoint(x: 25.82, y: 21.71), controlPoint2: NSPoint(x: 26.25, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.25, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.curve(to: NSPoint(x: 29.06, y: 8.77), controlPoint1: NSPoint(x: 27.17, y: 4.46), controlPoint2: NSPoint(x: 29.06, y: 6.39))
        pathPath.curve(to: NSPoint(x: 24.84, y: 13.08), controlPoint1: NSPoint(x: 29.06, y: 11.15), controlPoint2: NSPoint(x: 27.17, y: 13.08))
        pathPath.curve(to: NSPoint(x: 20.62, y: 8.77), controlPoint1: NSPoint(x: 22.51, y: 13.08), controlPoint2: NSPoint(x: 20.62, y: 11.15))
        pathPath.curve(to: NSPoint(x: 24.84, y: 4.46), controlPoint1: NSPoint(x: 20.62, y: 6.39), controlPoint2: NSPoint(x: 22.51, y: 4.46))
        pathPath.line(to: NSPoint(x: 24.84, y: 4.46))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.56, y: 9.25))
        pathPath.line(to: NSPoint(x: 21.56, y: 8.29))
        pathPath.line(to: NSPoint(x: 28.12, y: 8.29))
        pathPath.line(to: NSPoint(x: 28.12, y: 9.25))
        pathPath.line(to: NSPoint(x: 21.56, y: 9.25))
        pathPath.line(to: NSPoint(x: 21.56, y: 9.25))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderForbidden(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 28.14, y: 11.46))
        pathPath.curve(to: NSPoint(x: 29.06, y: 8.77), controlPoint1: NSPoint(x: 28.72, y: 10.72), controlPoint2: NSPoint(x: 29.06, y: 9.79))
        pathPath.curve(to: NSPoint(x: 24.84, y: 4.46), controlPoint1: NSPoint(x: 29.06, y: 6.39), controlPoint2: NSPoint(x: 27.17, y: 4.46))
        pathPath.curve(to: NSPoint(x: 22.21, y: 5.4), controlPoint1: NSPoint(x: 23.85, y: 4.46), controlPoint2: NSPoint(x: 22.93, y: 4.81))
        pathPath.line(to: NSPoint(x: 28.14, y: 11.46))
        pathPath.line(to: NSPoint(x: 28.14, y: 11.46))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 27.48, y: 12.14))
        pathPath.curve(to: NSPoint(x: 24.84, y: 13.08), controlPoint1: NSPoint(x: 26.76, y: 12.73), controlPoint2: NSPoint(x: 25.84, y: 13.08))
        pathPath.curve(to: NSPoint(x: 20.62, y: 8.77), controlPoint1: NSPoint(x: 22.51, y: 13.08), controlPoint2: NSPoint(x: 20.62, y: 11.15))
        pathPath.curve(to: NSPoint(x: 21.55, y: 6.08), controlPoint1: NSPoint(x: 20.62, y: 7.75), controlPoint2: NSPoint(x: 20.97, y: 6.82))
        pathPath.line(to: NSPoint(x: 27.48, y: 12.14))
        pathPath.line(to: NSPoint(x: 27.48, y: 12.14))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 1.87, y: 6.38))
        pathPath.curve(to: NSPoint(x: 0.94, y: 7.33), controlPoint1: NSPoint(x: 1.36, y: 6.38), controlPoint2: NSPoint(x: 0.94, y: 6.8))
        pathPath.line(to: NSPoint(x: 0.94, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 17.88))
        pathPath.line(to: NSPoint(x: 26.25, y: 13.84))
        pathPath.curve(to: NSPoint(x: 24.84, y: 14.04), controlPoint1: NSPoint(x: 25.8, y: 13.97), controlPoint2: NSPoint(x: 25.33, y: 14.04))
        pathPath.curve(to: NSPoint(x: 19.69, y: 8.77), controlPoint1: NSPoint(x: 22, y: 14.04), controlPoint2: NSPoint(x: 19.69, y: 11.68))
        pathPath.curve(to: NSPoint(x: 20.25, y: 6.37), controlPoint1: NSPoint(x: 19.69, y: 7.91), controlPoint2: NSPoint(x: 19.89, y: 7.09))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.line(to: NSPoint(x: 20.25, y: 6.38))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 1.87, y: 5.42))
        pathPath.curve(to: NSPoint(x: 0, y: 7.32), controlPoint1: NSPoint(x: 0.84, y: 5.42), controlPoint2: NSPoint(x: 0, y: 6.27))
        pathPath.line(to: NSPoint(x: 0, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.88, y: 26.5), controlPoint1: NSPoint(x: 0, y: 25.65), controlPoint2: NSPoint(x: 0.84, y: 26.5))
        pathPath.line(to: NSPoint(x: 12.19, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.06, y: 22.67))
        pathPath.line(to: NSPoint(x: 25.31, y: 22.67))
        pathPath.curve(to: NSPoint(x: 27.19, y: 20.75), controlPoint1: NSPoint(x: 26.35, y: 22.67), controlPoint2: NSPoint(x: 27.19, y: 21.81))
        pathPath.line(to: NSPoint(x: 27.19, y: 13.47))
        pathPath.curve(to: NSPoint(x: 30, y: 8.77), controlPoint1: NSPoint(x: 28.86, y: 12.59), controlPoint2: NSPoint(x: 30, y: 10.82))
        pathPath.curve(to: NSPoint(x: 24.84, y: 3.5), controlPoint1: NSPoint(x: 30, y: 5.86), controlPoint2: NSPoint(x: 27.69, y: 3.5))
        pathPath.curve(to: NSPoint(x: 20.87, y: 5.42), controlPoint1: NSPoint(x: 23.24, y: 3.5), controlPoint2: NSPoint(x: 21.81, y: 4.25))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.line(to: NSPoint(x: 20.87, y: 5.42))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 24.59))
        pathPath.curve(to: NSPoint(x: 1.87, y: 25.54), controlPoint1: NSPoint(x: 0.94, y: 25.11), controlPoint2: NSPoint(x: 1.35, y: 25.54))
        pathPath.line(to: NSPoint(x: 11.63, y: 25.54))
        pathPath.line(to: NSPoint(x: 13.46, y: 21.71))
        pathPath.line(to: NSPoint(x: 25.31, y: 21.71))
        pathPath.curve(to: NSPoint(x: 26.25, y: 20.75), controlPoint1: NSPoint(x: 25.82, y: 21.71), controlPoint2: NSPoint(x: 26.25, y: 21.28))
        pathPath.line(to: NSPoint(x: 26.25, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.line(to: NSPoint(x: 0.94, y: 18.83))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawFolderBookmark(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 22.5, y: 17))
        pathPath.line(to: NSPoint(x: 28.5, y: 17))
        pathPath.line(to: NSPoint(x: 28.5, y: 6))
        pathPath.curve(to: NSPoint(x: 27.51, y: 5), controlPoint1: NSPoint(x: 28.5, y: 5.44), controlPoint2: NSPoint(x: 28.06, y: 5))
        pathPath.line(to: NSPoint(x: 2.49, y: 5))
        pathPath.curve(to: NSPoint(x: 1.5, y: 5.99), controlPoint1: NSPoint(x: 1.95, y: 5), controlPoint2: NSPoint(x: 1.5, y: 5.44))
        pathPath.line(to: NSPoint(x: 1.5, y: 17))
        pathPath.line(to: NSPoint(x: 16.5, y: 17))
        pathPath.line(to: NSPoint(x: 16.5, y: 8))
        pathPath.line(to: NSPoint(x: 19.5, y: 11))
        pathPath.line(to: NSPoint(x: 22.5, y: 8))
        pathPath.line(to: NSPoint(x: 22.5, y: 17))
        pathPath.line(to: NSPoint(x: 22.5, y: 17))
        pathPath.line(to: NSPoint(x: 22.5, y: 17))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 1.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 24.01))
        pathPath.curve(to: NSPoint(x: 2.49, y: 25), controlPoint1: NSPoint(x: 1.5, y: 24.54), controlPoint2: NSPoint(x: 1.94, y: 25))
        pathPath.line(to: NSPoint(x: 12.9, y: 25))
        pathPath.line(to: NSPoint(x: 14.86, y: 21))
        pathPath.line(to: NSPoint(x: 27.5, y: 21))
        pathPath.curve(to: NSPoint(x: 28.5, y: 20), controlPoint1: NSPoint(x: 28.05, y: 21), controlPoint2: NSPoint(x: 28.5, y: 20.55))
        pathPath.line(to: NSPoint(x: 28.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 18))
        pathPath.line(to: NSPoint(x: 1.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 2.5, y: 26))
        pathPath.curve(to: NSPoint(x: 0.5, y: 24.01), controlPoint1: NSPoint(x: 1.4, y: 26), controlPoint2: NSPoint(x: 0.5, y: 25.11))
        pathPath.line(to: NSPoint(x: 0.5, y: 5.99))
        pathPath.curve(to: NSPoint(x: 2.49, y: 4), controlPoint1: NSPoint(x: 0.5, y: 4.89), controlPoint2: NSPoint(x: 1.4, y: 4))
        pathPath.line(to: NSPoint(x: 27.51, y: 4))
        pathPath.curve(to: NSPoint(x: 29.5, y: 6), controlPoint1: NSPoint(x: 28.61, y: 4), controlPoint2: NSPoint(x: 29.5, y: 4.89))
        pathPath.line(to: NSPoint(x: 29.5, y: 20))
        pathPath.curve(to: NSPoint(x: 27.49, y: 22), controlPoint1: NSPoint(x: 29.5, y: 21.11), controlPoint2: NSPoint(x: 28.6, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.line(to: NSPoint(x: 15.5, y: 22))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 17))
        pathPath.line(to: NSPoint(x: 17.5, y: 10.4))
        pathPath.line(to: NSPoint(x: 19.5, y: 12.4))
        pathPath.line(to: NSPoint(x: 21.5, y: 10.4))
        pathPath.line(to: NSPoint(x: 21.5, y: 17))
        pathPath.line(to: NSPoint(x: 17.5, y: 17))
        pathPath.line(to: NSPoint(x: 17.5, y: 17))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentZip(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 11.5, y: 13.45))
        pathPath.line(to: NSPoint(x: 11.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.04))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.49), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.94))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 20.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 22.51), controlPoint1: NSPoint(x: 18.39, y: 20.5), controlPoint2: NSPoint(x: 17.5, y: 21.39))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 13.45))
        pathPath.curve(to: NSPoint(x: 14.5, y: 11), controlPoint1: NSPoint(x: 13.65, y: 13.22), controlPoint2: NSPoint(x: 14.5, y: 12.21))
        pathPath.curve(to: NSPoint(x: 12, y: 8.5), controlPoint1: NSPoint(x: 14.5, y: 9.61), controlPoint2: NSPoint(x: 13.38, y: 8.5))
        pathPath.curve(to: NSPoint(x: 9.5, y: 11), controlPoint1: NSPoint(x: 10.61, y: 8.5), controlPoint2: NSPoint(x: 9.5, y: 9.62))
        pathPath.curve(to: NSPoint(x: 11.5, y: 13.45), controlPoint1: NSPoint(x: 9.5, y: 12.22), controlPoint2: NSPoint(x: 10.36, y: 13.22))
        pathPath.line(to: NSPoint(x: 11.5, y: 13.45))
        pathPath.line(to: NSPoint(x: 11.5, y: 13.45))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 3.49))
        pathPath.curve(to: NSPoint(x: 22.5, y: 1.5), controlPoint1: NSPoint(x: 24.5, y: 2.4), controlPoint2: NSPoint(x: 23.61, y: 1.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 3.51), controlPoint1: NSPoint(x: 6.39, y: 1.5), controlPoint2: NSPoint(x: 5.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 5.5, y: 26.49))
        pathPath.curve(to: NSPoint(x: 7.5, y: 28.5), controlPoint1: NSPoint(x: 5.5, y: 27.6), controlPoint2: NSPoint(x: 6.4, y: 28.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12, y: 12.5))
        pathPath.curve(to: NSPoint(x: 10.5, y: 11), controlPoint1: NSPoint(x: 11.17, y: 12.5), controlPoint2: NSPoint(x: 10.5, y: 11.83))
        pathPath.curve(to: NSPoint(x: 12, y: 9.5), controlPoint1: NSPoint(x: 10.5, y: 10.17), controlPoint2: NSPoint(x: 11.17, y: 9.5))
        pathPath.curve(to: NSPoint(x: 13.5, y: 11), controlPoint1: NSPoint(x: 12.83, y: 9.5), controlPoint2: NSPoint(x: 13.5, y: 10.17))
        pathPath.curve(to: NSPoint(x: 12, y: 12.5), controlPoint1: NSPoint(x: 13.5, y: 11.83), controlPoint2: NSPoint(x: 12.83, y: 12.5))
        pathPath.line(to: NSPoint(x: 12, y: 12.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawZip(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 13.98))
        pathPath.line(to: NSPoint(x: 14.5, y: 13.45))
        pathPath.line(to: NSPoint(x: 14.5, y: 13.45))
        pathPath.curve(to: NSPoint(x: 12.5, y: 11), controlPoint1: NSPoint(x: 13.36, y: 13.22), controlPoint2: NSPoint(x: 12.5, y: 12.22))
        pathPath.curve(to: NSPoint(x: 15, y: 8.5), controlPoint1: NSPoint(x: 12.5, y: 9.62), controlPoint2: NSPoint(x: 13.61, y: 8.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 11), controlPoint1: NSPoint(x: 16.38, y: 8.5), controlPoint2: NSPoint(x: 17.5, y: 9.61))
        pathPath.curve(to: NSPoint(x: 15.5, y: 13.45), controlPoint1: NSPoint(x: 17.5, y: 12.21), controlPoint2: NSPoint(x: 16.65, y: 13.22))
        pathPath.line(to: NSPoint(x: 15.5, y: 13.98))
        pathPath.line(to: NSPoint(x: 15.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 27))
        pathPath.line(to: NSPoint(x: 15.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 24.51), controlPoint1: NSPoint(x: 22.17, y: 27.5), controlPoint2: NSPoint(x: 23.5, y: 26.16))
        pathPath.line(to: NSPoint(x: 23.5, y: 5.49))
        pathPath.curve(to: NSPoint(x: 20.5, y: 2.5), controlPoint1: NSPoint(x: 23.5, y: 3.84), controlPoint2: NSPoint(x: 22.16, y: 2.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 5.49), controlPoint1: NSPoint(x: 7.83, y: 2.5), controlPoint2: NSPoint(x: 6.5, y: 3.84))
        pathPath.line(to: NSPoint(x: 6.5, y: 24.51))
        pathPath.curve(to: NSPoint(x: 9.5, y: 27.5), controlPoint1: NSPoint(x: 6.5, y: 26.16), controlPoint2: NSPoint(x: 7.84, y: 27.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 24.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 22.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 13.98))
        pathPath.line(to: NSPoint(x: 14.5, y: 13.98))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.51, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 24.5), controlPoint1: NSPoint(x: 7.29, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 26.71))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.curve(to: NSPoint(x: 9.51, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 3.29), controlPoint2: NSPoint(x: 7.29, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.49, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 5.5), controlPoint1: NSPoint(x: 22.71, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 3.29))
        pathPath.line(to: NSPoint(x: 24.5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 20.49, y: 28.5), controlPoint1: NSPoint(x: 24.5, y: 26.71), controlPoint2: NSPoint(x: 22.71, y: 28.5))
        pathPath.line(to: NSPoint(x: 9.51, y: 28.5))
        pathPath.line(to: NSPoint(x: 9.51, y: 28.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 12.5))
        pathPath.curve(to: NSPoint(x: 13.5, y: 11), controlPoint1: NSPoint(x: 14.17, y: 12.5), controlPoint2: NSPoint(x: 13.5, y: 11.83))
        pathPath.curve(to: NSPoint(x: 15, y: 9.5), controlPoint1: NSPoint(x: 13.5, y: 10.17), controlPoint2: NSPoint(x: 14.17, y: 9.5))
        pathPath.curve(to: NSPoint(x: 16.5, y: 11), controlPoint1: NSPoint(x: 15.83, y: 9.5), controlPoint2: NSPoint(x: 16.5, y: 10.17))
        pathPath.curve(to: NSPoint(x: 15, y: 12.5), controlPoint1: NSPoint(x: 16.5, y: 11.83), controlPoint2: NSPoint(x: 15.83, y: 12.5))
        pathPath.line(to: NSPoint(x: 15, y: 12.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSearch(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 17.47, y: 10.28))
        pathPath.curve(to: NSPoint(x: 12.71, y: 8.71), controlPoint1: NSPoint(x: 16.12, y: 9.29), controlPoint2: NSPoint(x: 14.48, y: 8.71))
        pathPath.curve(to: NSPoint(x: 4.5, y: 17.21), controlPoint1: NSPoint(x: 8.18, y: 8.71), controlPoint2: NSPoint(x: 4.5, y: 12.52))
        pathPath.curve(to: NSPoint(x: 12.71, y: 25.71), controlPoint1: NSPoint(x: 4.5, y: 21.9), controlPoint2: NSPoint(x: 8.18, y: 25.71))
        pathPath.curve(to: NSPoint(x: 20.92, y: 17.21), controlPoint1: NSPoint(x: 17.24, y: 25.71), controlPoint2: NSPoint(x: 20.92, y: 21.9))
        pathPath.curve(to: NSPoint(x: 18.51, y: 11.2), controlPoint1: NSPoint(x: 20.92, y: 14.86), controlPoint2: NSPoint(x: 20, y: 12.74))
        pathPath.line(to: NSPoint(x: 24.3, y: 5.2))
        pathPath.curve(to: NSPoint(x: 24.3, y: 4.21), controlPoint1: NSPoint(x: 24.57, y: 4.93), controlPoint2: NSPoint(x: 24.56, y: 4.49))
        pathPath.curve(to: NSPoint(x: 23.34, y: 4.2), controlPoint1: NSPoint(x: 24.03, y: 3.93), controlPoint2: NSPoint(x: 23.6, y: 3.93))
        pathPath.line(to: NSPoint(x: 17.47, y: 10.28))
        pathPath.line(to: NSPoint(x: 17.47, y: 10.28))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.71, y: 9.71))
        pathPath.curve(to: NSPoint(x: 19.95, y: 17.21), controlPoint1: NSPoint(x: 16.71, y: 9.71), controlPoint2: NSPoint(x: 19.95, y: 13.07))
        pathPath.curve(to: NSPoint(x: 12.71, y: 24.71), controlPoint1: NSPoint(x: 19.95, y: 21.35), controlPoint2: NSPoint(x: 16.71, y: 24.71))
        pathPath.curve(to: NSPoint(x: 5.47, y: 17.21), controlPoint1: NSPoint(x: 8.71, y: 24.71), controlPoint2: NSPoint(x: 5.47, y: 21.35))
        pathPath.curve(to: NSPoint(x: 12.71, y: 9.71), controlPoint1: NSPoint(x: 5.47, y: 13.07), controlPoint2: NSPoint(x: 8.71, y: 9.71))
        pathPath.line(to: NSPoint(x: 12.71, y: 9.71))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSearchPlus(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 12.11, y: 17.89))
        pathPath.line(to: NSPoint(x: 12.11, y: 21.95))
        pathPath.line(to: NSPoint(x: 13.12, y: 21.95))
        pathPath.line(to: NSPoint(x: 13.12, y: 17.89))
        pathPath.line(to: NSPoint(x: 17.17, y: 17.89))
        pathPath.line(to: NSPoint(x: 17.17, y: 16.88))
        pathPath.line(to: NSPoint(x: 13.12, y: 16.88))
        pathPath.line(to: NSPoint(x: 13.12, y: 12.83))
        pathPath.line(to: NSPoint(x: 12.11, y: 12.83))
        pathPath.line(to: NSPoint(x: 12.11, y: 16.88))
        pathPath.line(to: NSPoint(x: 8.05, y: 16.88))
        pathPath.line(to: NSPoint(x: 8.05, y: 17.89))
        pathPath.line(to: NSPoint(x: 12.11, y: 17.89))
        pathPath.line(to: NSPoint(x: 12.11, y: 17.89))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.33, y: 10.95))
        pathPath.curve(to: NSPoint(x: 12.61, y: 8.77), controlPoint1: NSPoint(x: 16.81, y: 9.59), controlPoint2: NSPoint(x: 14.81, y: 8.77))
        pathPath.curve(to: NSPoint(x: 4, y: 17.39), controlPoint1: NSPoint(x: 7.86, y: 8.77), controlPoint2: NSPoint(x: 4, y: 12.63))
        pathPath.curve(to: NSPoint(x: 12.61, y: 26), controlPoint1: NSPoint(x: 4, y: 22.14), controlPoint2: NSPoint(x: 7.86, y: 26))
        pathPath.curve(to: NSPoint(x: 21.23, y: 17.39), controlPoint1: NSPoint(x: 17.37, y: 26), controlPoint2: NSPoint(x: 21.23, y: 22.14))
        pathPath.curve(to: NSPoint(x: 19.05, y: 11.67), controlPoint1: NSPoint(x: 21.23, y: 15.19), controlPoint2: NSPoint(x: 20.41, y: 13.19))
        pathPath.line(to: NSPoint(x: 19.2, y: 11.81))
        pathPath.line(to: NSPoint(x: 25.79, y: 5.22))
        pathPath.curve(to: NSPoint(x: 25.79, y: 4.21), controlPoint1: NSPoint(x: 26.07, y: 4.94), controlPoint2: NSPoint(x: 26.07, y: 4.49))
        pathPath.curve(to: NSPoint(x: 24.78, y: 4.21), controlPoint1: NSPoint(x: 25.5, y: 3.93), controlPoint2: NSPoint(x: 25.06, y: 3.93))
        pathPath.line(to: NSPoint(x: 18.19, y: 10.8))
        pathPath.line(to: NSPoint(x: 18.33, y: 10.95))
        pathPath.line(to: NSPoint(x: 18.33, y: 10.95))
        pathPath.line(to: NSPoint(x: 18.33, y: 10.95))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.61, y: 9.79))
        pathPath.curve(to: NSPoint(x: 20.21, y: 17.39), controlPoint1: NSPoint(x: 16.81, y: 9.79), controlPoint2: NSPoint(x: 20.21, y: 13.19))
        pathPath.curve(to: NSPoint(x: 12.61, y: 24.99), controlPoint1: NSPoint(x: 20.21, y: 21.58), controlPoint2: NSPoint(x: 16.81, y: 24.99))
        pathPath.curve(to: NSPoint(x: 5.01, y: 17.39), controlPoint1: NSPoint(x: 8.42, y: 24.99), controlPoint2: NSPoint(x: 5.01, y: 21.58))
        pathPath.curve(to: NSPoint(x: 12.61, y: 9.79), controlPoint1: NSPoint(x: 5.01, y: 13.19), controlPoint2: NSPoint(x: 8.42, y: 9.79))
        pathPath.line(to: NSPoint(x: 12.61, y: 9.79))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawSearchMinus(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18.33, y: 10.95))
        pathPath.curve(to: NSPoint(x: 12.61, y: 8.77), controlPoint1: NSPoint(x: 16.81, y: 9.59), controlPoint2: NSPoint(x: 14.81, y: 8.77))
        pathPath.curve(to: NSPoint(x: 4, y: 17.39), controlPoint1: NSPoint(x: 7.86, y: 8.77), controlPoint2: NSPoint(x: 4, y: 12.63))
        pathPath.curve(to: NSPoint(x: 12.61, y: 26), controlPoint1: NSPoint(x: 4, y: 22.14), controlPoint2: NSPoint(x: 7.86, y: 26))
        pathPath.curve(to: NSPoint(x: 21.23, y: 17.39), controlPoint1: NSPoint(x: 17.37, y: 26), controlPoint2: NSPoint(x: 21.23, y: 22.14))
        pathPath.curve(to: NSPoint(x: 19.05, y: 11.67), controlPoint1: NSPoint(x: 21.23, y: 15.19), controlPoint2: NSPoint(x: 20.41, y: 13.19))
        pathPath.line(to: NSPoint(x: 19.2, y: 11.81))
        pathPath.line(to: NSPoint(x: 25.79, y: 5.22))
        pathPath.curve(to: NSPoint(x: 25.79, y: 4.21), controlPoint1: NSPoint(x: 26.07, y: 4.94), controlPoint2: NSPoint(x: 26.07, y: 4.49))
        pathPath.curve(to: NSPoint(x: 24.78, y: 4.21), controlPoint1: NSPoint(x: 25.5, y: 3.93), controlPoint2: NSPoint(x: 25.06, y: 3.93))
        pathPath.line(to: NSPoint(x: 18.19, y: 10.8))
        pathPath.line(to: NSPoint(x: 18.33, y: 10.95))
        pathPath.line(to: NSPoint(x: 18.33, y: 10.95))
        pathPath.line(to: NSPoint(x: 18.33, y: 10.95))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.61, y: 9.79))
        pathPath.curve(to: NSPoint(x: 20.21, y: 17.39), controlPoint1: NSPoint(x: 16.81, y: 9.79), controlPoint2: NSPoint(x: 20.21, y: 13.19))
        pathPath.curve(to: NSPoint(x: 12.61, y: 24.99), controlPoint1: NSPoint(x: 20.21, y: 21.58), controlPoint2: NSPoint(x: 16.81, y: 24.99))
        pathPath.curve(to: NSPoint(x: 5.01, y: 17.39), controlPoint1: NSPoint(x: 8.42, y: 24.99), controlPoint2: NSPoint(x: 5.01, y: 21.58))
        pathPath.curve(to: NSPoint(x: 12.61, y: 9.79), controlPoint1: NSPoint(x: 5.01, y: 13.19), controlPoint2: NSPoint(x: 8.42, y: 9.79))
        pathPath.line(to: NSPoint(x: 12.61, y: 9.79))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.05, y: 17.89))
        pathPath.line(to: NSPoint(x: 8.05, y: 16.88))
        pathPath.line(to: NSPoint(x: 17.17, y: 16.88))
        pathPath.line(to: NSPoint(x: 17.17, y: 17.89))
        pathPath.line(to: NSPoint(x: 8.05, y: 17.89))
        pathPath.line(to: NSPoint(x: 8.05, y: 17.89))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawLock2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 9.59))
        pathPath.line(to: NSPoint(x: 14.5, y: 6.99))
        pathPath.curve(to: NSPoint(x: 15, y: 6.5), controlPoint1: NSPoint(x: 14.5, y: 6.72), controlPoint2: NSPoint(x: 14.73, y: 6.5))
        pathPath.curve(to: NSPoint(x: 15.5, y: 6.99), controlPoint1: NSPoint(x: 15.28, y: 6.5), controlPoint2: NSPoint(x: 15.5, y: 6.73))
        pathPath.line(to: NSPoint(x: 15.5, y: 9.59))
        pathPath.curve(to: NSPoint(x: 16.5, y: 11), controlPoint1: NSPoint(x: 16.08, y: 9.79), controlPoint2: NSPoint(x: 16.5, y: 10.35))
        pathPath.curve(to: NSPoint(x: 15, y: 12.5), controlPoint1: NSPoint(x: 16.5, y: 11.83), controlPoint2: NSPoint(x: 15.83, y: 12.5))
        pathPath.curve(to: NSPoint(x: 13.5, y: 11), controlPoint1: NSPoint(x: 14.17, y: 12.5), controlPoint2: NSPoint(x: 13.5, y: 11.83))
        pathPath.curve(to: NSPoint(x: 14.5, y: 9.59), controlPoint1: NSPoint(x: 13.5, y: 10.35), controlPoint2: NSPoint(x: 13.92, y: 9.79))
        pathPath.line(to: NSPoint(x: 14.5, y: 9.59))
        pathPath.line(to: NSPoint(x: 14.5, y: 9.59))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 9))
        pathPath.line(to: NSPoint(x: 13.5, y: 7))
        pathPath.curve(to: NSPoint(x: 15, y: 5.5), controlPoint1: NSPoint(x: 13.5, y: 6.17), controlPoint2: NSPoint(x: 14.17, y: 5.5))
        pathPath.curve(to: NSPoint(x: 16.5, y: 7), controlPoint1: NSPoint(x: 15.83, y: 5.5), controlPoint2: NSPoint(x: 16.5, y: 6.17))
        pathPath.line(to: NSPoint(x: 16.5, y: 9))
        pathPath.curve(to: NSPoint(x: 17.5, y: 11), controlPoint1: NSPoint(x: 17.11, y: 9.46), controlPoint2: NSPoint(x: 17.5, y: 10.18))
        pathPath.curve(to: NSPoint(x: 15, y: 13.5), controlPoint1: NSPoint(x: 17.5, y: 12.38), controlPoint2: NSPoint(x: 16.38, y: 13.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 11), controlPoint1: NSPoint(x: 13.62, y: 13.5), controlPoint2: NSPoint(x: 12.5, y: 12.38))
        pathPath.curve(to: NSPoint(x: 13.5, y: 9), controlPoint1: NSPoint(x: 12.5, y: 10.18), controlPoint2: NSPoint(x: 12.89, y: 9.46))
        pathPath.line(to: NSPoint(x: 13.5, y: 9))
        pathPath.line(to: NSPoint(x: 13.5, y: 9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 21))
        pathPath.curve(to: NSPoint(x: 15, y: 28.5), controlPoint1: NSPoint(x: 7.5, y: 25.14), controlPoint2: NSPoint(x: 10.86, y: 28.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 21), controlPoint1: NSPoint(x: 19.13, y: 28.5), controlPoint2: NSPoint(x: 22.5, y: 25.14))
        pathPath.line(to: NSPoint(x: 22.5, y: 17.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 14.49), controlPoint1: NSPoint(x: 24.16, y: 17.5), controlPoint2: NSPoint(x: 25.5, y: 16.15))
        pathPath.line(to: NSPoint(x: 25.5, y: 4.51))
        pathPath.curve(to: NSPoint(x: 22.49, y: 1.5), controlPoint1: NSPoint(x: 25.5, y: 2.84), controlPoint2: NSPoint(x: 24.15, y: 1.5))
        pathPath.line(to: NSPoint(x: 7.51, y: 1.5))
        pathPath.curve(to: NSPoint(x: 4.5, y: 4.51), controlPoint1: NSPoint(x: 5.85, y: 1.5), controlPoint2: NSPoint(x: 4.5, y: 2.85))
        pathPath.line(to: NSPoint(x: 4.5, y: 14.49))
        pathPath.curve(to: NSPoint(x: 7.5, y: 17.5), controlPoint1: NSPoint(x: 4.5, y: 16.16), controlPoint2: NSPoint(x: 5.84, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 15, y: 27.5), controlPoint1: NSPoint(x: 8.5, y: 24.59), controlPoint2: NSPoint(x: 11.41, y: 27.5))
        pathPath.curve(to: NSPoint(x: 21.5, y: 21.01), controlPoint1: NSPoint(x: 18.58, y: 27.5), controlPoint2: NSPoint(x: 21.5, y: 24.59))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 20.99))
        pathPath.curve(to: NSPoint(x: 15, y: 26.5), controlPoint1: NSPoint(x: 20.5, y: 24.03), controlPoint2: NSPoint(x: 18.03, y: 26.5))
        pathPath.curve(to: NSPoint(x: 9.5, y: 20.99), controlPoint1: NSPoint(x: 11.96, y: 26.5), controlPoint2: NSPoint(x: 9.5, y: 24.04))
        pathPath.line(to: NSPoint(x: 9.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 21))
        pathPath.curve(to: NSPoint(x: 15, y: 25.5), controlPoint1: NSPoint(x: 10.5, y: 23.49), controlPoint2: NSPoint(x: 12.51, y: 25.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21), controlPoint1: NSPoint(x: 17.48, y: 25.5), controlPoint2: NSPoint(x: 19.5, y: 23.48))
        pathPath.line(to: NSPoint(x: 19.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 16.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 14.49), controlPoint1: NSPoint(x: 6.39, y: 16.5), controlPoint2: NSPoint(x: 5.5, y: 15.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 4.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 5.5, y: 3.4), controlPoint2: NSPoint(x: 6.39, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 4.51), controlPoint1: NSPoint(x: 23.61, y: 2.5), controlPoint2: NSPoint(x: 24.5, y: 3.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 14.49))
        pathPath.curve(to: NSPoint(x: 22.5, y: 16.5), controlPoint1: NSPoint(x: 24.5, y: 15.6), controlPoint2: NSPoint(x: 23.61, y: 16.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 16.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawLockOpen(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18.73, y: 8.06))
        pathPath.line(to: NSPoint(x: 18.73, y: 5.64))
        pathPath.curve(to: NSPoint(x: 19.2, y: 5.18), controlPoint1: NSPoint(x: 18.73, y: 5.38), controlPoint2: NSPoint(x: 18.95, y: 5.18))
        pathPath.curve(to: NSPoint(x: 19.67, y: 5.64), controlPoint1: NSPoint(x: 19.46, y: 5.18), controlPoint2: NSPoint(x: 19.67, y: 5.39))
        pathPath.line(to: NSPoint(x: 19.67, y: 8.06))
        pathPath.curve(to: NSPoint(x: 20.6, y: 9.39), controlPoint1: NSPoint(x: 20.21, y: 8.26), controlPoint2: NSPoint(x: 20.6, y: 8.78))
        pathPath.curve(to: NSPoint(x: 19.2, y: 10.79), controlPoint1: NSPoint(x: 20.6, y: 10.16), controlPoint2: NSPoint(x: 19.97, y: 10.79))
        pathPath.curve(to: NSPoint(x: 17.8, y: 9.39), controlPoint1: NSPoint(x: 18.43, y: 10.79), controlPoint2: NSPoint(x: 17.8, y: 10.16))
        pathPath.curve(to: NSPoint(x: 18.73, y: 8.06), controlPoint1: NSPoint(x: 17.8, y: 8.78), controlPoint2: NSPoint(x: 18.19, y: 8.26))
        pathPath.line(to: NSPoint(x: 18.73, y: 8.06))
        pathPath.line(to: NSPoint(x: 18.73, y: 8.06))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.8, y: 7.52))
        pathPath.line(to: NSPoint(x: 17.8, y: 5.65))
        pathPath.curve(to: NSPoint(x: 19.2, y: 4.24), controlPoint1: NSPoint(x: 17.8, y: 4.87), controlPoint2: NSPoint(x: 18.42, y: 4.24))
        pathPath.curve(to: NSPoint(x: 20.6, y: 5.65), controlPoint1: NSPoint(x: 19.97, y: 4.24), controlPoint2: NSPoint(x: 20.6, y: 4.87))
        pathPath.line(to: NSPoint(x: 20.6, y: 7.52))
        pathPath.curve(to: NSPoint(x: 21.53, y: 9.39), controlPoint1: NSPoint(x: 21.17, y: 7.94), controlPoint2: NSPoint(x: 21.53, y: 8.62))
        pathPath.curve(to: NSPoint(x: 19.2, y: 11.73), controlPoint1: NSPoint(x: 21.53, y: 10.68), controlPoint2: NSPoint(x: 20.49, y: 11.73))
        pathPath.curve(to: NSPoint(x: 16.87, y: 9.39), controlPoint1: NSPoint(x: 17.91, y: 11.73), controlPoint2: NSPoint(x: 16.87, y: 10.68))
        pathPath.curve(to: NSPoint(x: 17.8, y: 7.52), controlPoint1: NSPoint(x: 16.87, y: 8.62), controlPoint2: NSPoint(x: 17.23, y: 7.94))
        pathPath.line(to: NSPoint(x: 17.8, y: 7.52))
        pathPath.line(to: NSPoint(x: 17.8, y: 7.52))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 15.47))
        pathPath.line(to: NSPoint(x: 15, y: 22.48))
        pathPath.curve(to: NSPoint(x: 8, y: 29.5), controlPoint1: NSPoint(x: 15, y: 26.36), controlPoint2: NSPoint(x: 11.86, y: 29.5))
        pathPath.curve(to: NSPoint(x: 1, y: 22.48), controlPoint1: NSPoint(x: 4.13, y: 29.5), controlPoint2: NSPoint(x: 1, y: 26.36))
        pathPath.line(to: NSPoint(x: 1, y: 21.55))
        pathPath.line(to: NSPoint(x: 1, y: 21.55))
        pathPath.line(to: NSPoint(x: 1, y: 18.74))
        pathPath.curve(to: NSPoint(x: 2.4, y: 17.34), controlPoint1: NSPoint(x: 1, y: 17.97), controlPoint2: NSPoint(x: 1.62, y: 17.34))
        pathPath.curve(to: NSPoint(x: 3.8, y: 18.74), controlPoint1: NSPoint(x: 3.17, y: 17.34), controlPoint2: NSPoint(x: 3.8, y: 17.97))
        pathPath.line(to: NSPoint(x: 3.8, y: 21.55))
        pathPath.line(to: NSPoint(x: 3.8, y: 22.48))
        pathPath.curve(to: NSPoint(x: 8, y: 26.69), controlPoint1: NSPoint(x: 3.8, y: 24.81), controlPoint2: NSPoint(x: 5.68, y: 26.69))
        pathPath.curve(to: NSPoint(x: 12.2, y: 22.48), controlPoint1: NSPoint(x: 10.31, y: 26.69), controlPoint2: NSPoint(x: 12.2, y: 24.81))
        pathPath.line(to: NSPoint(x: 12.2, y: 15.47))
        pathPath.curve(to: NSPoint(x: 9.4, y: 12.65), controlPoint1: NSPoint(x: 10.65, y: 15.46), controlPoint2: NSPoint(x: 9.4, y: 14.21))
        pathPath.line(to: NSPoint(x: 9.4, y: 3.32))
        pathPath.curve(to: NSPoint(x: 12.21, y: 0.5), controlPoint1: NSPoint(x: 9.4, y: 1.76), controlPoint2: NSPoint(x: 10.66, y: 0.5))
        pathPath.line(to: NSPoint(x: 26.19, y: 0.5))
        pathPath.curve(to: NSPoint(x: 29, y: 3.32), controlPoint1: NSPoint(x: 27.74, y: 0.5), controlPoint2: NSPoint(x: 29, y: 1.75))
        pathPath.line(to: NSPoint(x: 29, y: 12.65))
        pathPath.curve(to: NSPoint(x: 26.19, y: 15.47), controlPoint1: NSPoint(x: 29, y: 14.21), controlPoint2: NSPoint(x: 27.74, y: 15.47))
        pathPath.line(to: NSPoint(x: 15, y: 15.47))
        pathPath.line(to: NSPoint(x: 15, y: 15.47))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.07, y: 22.48))
        pathPath.curve(to: NSPoint(x: 8, y: 28.56), controlPoint1: NSPoint(x: 14.07, y: 25.84), controlPoint2: NSPoint(x: 11.34, y: 28.56))
        pathPath.curve(to: NSPoint(x: 1.93, y: 22.48), controlPoint1: NSPoint(x: 4.65, y: 28.56), controlPoint2: NSPoint(x: 1.93, y: 25.83))
        pathPath.line(to: NSPoint(x: 1.93, y: 18.74))
        pathPath.curve(to: NSPoint(x: 2.4, y: 18.27), controlPoint1: NSPoint(x: 1.93, y: 18.48), controlPoint2: NSPoint(x: 2.15, y: 18.27))
        pathPath.line(to: NSPoint(x: 2.4, y: 18.27))
        pathPath.curve(to: NSPoint(x: 2.87, y: 18.74), controlPoint1: NSPoint(x: 2.66, y: 18.27), controlPoint2: NSPoint(x: 2.87, y: 18.48))
        pathPath.line(to: NSPoint(x: 2.87, y: 22.49))
        pathPath.curve(to: NSPoint(x: 8, y: 27.63), controlPoint1: NSPoint(x: 2.87, y: 25.32), controlPoint2: NSPoint(x: 5.16, y: 27.63))
        pathPath.curve(to: NSPoint(x: 13.13, y: 22.49), controlPoint1: NSPoint(x: 10.83, y: 27.63), controlPoint2: NSPoint(x: 13.13, y: 25.33))
        pathPath.line(to: NSPoint(x: 13.13, y: 15.47))
        pathPath.line(to: NSPoint(x: 14.07, y: 15.47))
        pathPath.line(to: NSPoint(x: 14.07, y: 22.48))
        pathPath.line(to: NSPoint(x: 14.07, y: 22.48))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.2, y: 14.53))
        pathPath.curve(to: NSPoint(x: 10.33, y: 12.66), controlPoint1: NSPoint(x: 11.17, y: 14.53), controlPoint2: NSPoint(x: 10.33, y: 13.69))
        pathPath.line(to: NSPoint(x: 10.33, y: 3.31))
        pathPath.curve(to: NSPoint(x: 12.2, y: 1.44), controlPoint1: NSPoint(x: 10.33, y: 2.28), controlPoint2: NSPoint(x: 11.16, y: 1.44))
        pathPath.line(to: NSPoint(x: 26.2, y: 1.44))
        pathPath.curve(to: NSPoint(x: 28.07, y: 3.31), controlPoint1: NSPoint(x: 27.23, y: 1.44), controlPoint2: NSPoint(x: 28.07, y: 2.27))
        pathPath.line(to: NSPoint(x: 28.07, y: 12.66))
        pathPath.curve(to: NSPoint(x: 26.2, y: 14.53), controlPoint1: NSPoint(x: 28.07, y: 13.69), controlPoint2: NSPoint(x: 27.24, y: 14.53))
        pathPath.line(to: NSPoint(x: 12.2, y: 14.53))
        pathPath.line(to: NSPoint(x: 12.2, y: 14.53))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawLockOpen2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 22.14, y: 21.77))
        pathPath.line(to: NSPoint(x: 22.14, y: 22.74))
        pathPath.curve(to: NSPoint(x: 15, y: 30), controlPoint1: NSPoint(x: 22.14, y: 26.75), controlPoint2: NSPoint(x: 18.94, y: 30))
        pathPath.curve(to: NSPoint(x: 7.86, y: 22.74), controlPoint1: NSPoint(x: 11.06, y: 30), controlPoint2: NSPoint(x: 7.86, y: 26.75))
        pathPath.line(to: NSPoint(x: 7.86, y: 15.48))
        pathPath.line(to: NSPoint(x: 7.86, y: 15.48))
        pathPath.curve(to: NSPoint(x: 5, y: 12.57), controlPoint1: NSPoint(x: 6.28, y: 15.48), controlPoint2: NSPoint(x: 5, y: 14.19))
        pathPath.line(to: NSPoint(x: 5, y: 2.91))
        pathPath.curve(to: NSPoint(x: 7.87, y: 0), controlPoint1: NSPoint(x: 5, y: 1.3), controlPoint2: NSPoint(x: 6.28, y: 0))
        pathPath.line(to: NSPoint(x: 22.13, y: 0))
        pathPath.curve(to: NSPoint(x: 25, y: 2.91), controlPoint1: NSPoint(x: 23.72, y: 0), controlPoint2: NSPoint(x: 25, y: 1.29))
        pathPath.line(to: NSPoint(x: 25, y: 12.57))
        pathPath.curve(to: NSPoint(x: 22.14, y: 15.48), controlPoint1: NSPoint(x: 25, y: 14.18), controlPoint2: NSPoint(x: 23.72, y: 15.48))
        pathPath.line(to: NSPoint(x: 21.65, y: 15.48))
        pathPath.line(to: NSPoint(x: 10.74, y: 15.48))
        pathPath.curve(to: NSPoint(x: 10.71, y: 15.97), controlPoint1: NSPoint(x: 10.72, y: 15.64), controlPoint2: NSPoint(x: 10.71, y: 15.8))
        pathPath.line(to: NSPoint(x: 10.71, y: 22.74))
        pathPath.curve(to: NSPoint(x: 15, y: 27.1), controlPoint1: NSPoint(x: 10.71, y: 25.15), controlPoint2: NSPoint(x: 12.63, y: 27.1))
        pathPath.curve(to: NSPoint(x: 19.29, y: 22.74), controlPoint1: NSPoint(x: 17.36, y: 27.1), controlPoint2: NSPoint(x: 19.29, y: 25.15))
        pathPath.line(to: NSPoint(x: 19.29, y: 21.77))
        pathPath.line(to: NSPoint(x: 19.29, y: 18.87))
        pathPath.curve(to: NSPoint(x: 20.71, y: 17.42), controlPoint1: NSPoint(x: 19.29, y: 18.07), controlPoint2: NSPoint(x: 19.92, y: 17.42))
        pathPath.curve(to: NSPoint(x: 22.14, y: 18.87), controlPoint1: NSPoint(x: 21.5, y: 17.42), controlPoint2: NSPoint(x: 22.14, y: 18.07))
        pathPath.line(to: NSPoint(x: 22.14, y: 21.77))
        pathPath.line(to: NSPoint(x: 22.14, y: 21.77))
        pathPath.line(to: NSPoint(x: 22.14, y: 21.77))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.19, y: 22.75))
        pathPath.curve(to: NSPoint(x: 15, y: 29.03), controlPoint1: NSPoint(x: 21.19, y: 26.22), controlPoint2: NSPoint(x: 18.41, y: 29.03))
        pathPath.curve(to: NSPoint(x: 8.81, y: 22.75), controlPoint1: NSPoint(x: 11.58, y: 29.03), controlPoint2: NSPoint(x: 8.81, y: 26.22))
        pathPath.line(to: NSPoint(x: 8.81, y: 15.96))
        pathPath.curve(to: NSPoint(x: 8.83, y: 15.48), controlPoint1: NSPoint(x: 8.81, y: 15.8), controlPoint2: NSPoint(x: 8.82, y: 15.64))
        pathPath.line(to: NSPoint(x: 9.76, y: 15.48))
        pathPath.line(to: NSPoint(x: 9.76, y: 22.73))
        pathPath.curve(to: NSPoint(x: 15, y: 28.06), controlPoint1: NSPoint(x: 9.76, y: 25.68), controlPoint2: NSPoint(x: 12.11, y: 28.06))
        pathPath.curve(to: NSPoint(x: 20.24, y: 22.73), controlPoint1: NSPoint(x: 17.89, y: 28.06), controlPoint2: NSPoint(x: 20.24, y: 25.68))
        pathPath.line(to: NSPoint(x: 20.24, y: 18.87))
        pathPath.curve(to: NSPoint(x: 20.71, y: 18.39), controlPoint1: NSPoint(x: 20.24, y: 18.6), controlPoint2: NSPoint(x: 20.46, y: 18.39))
        pathPath.line(to: NSPoint(x: 20.71, y: 18.39))
        pathPath.curve(to: NSPoint(x: 21.19, y: 18.86), controlPoint1: NSPoint(x: 20.98, y: 18.39), controlPoint2: NSPoint(x: 21.19, y: 18.6))
        pathPath.line(to: NSPoint(x: 21.19, y: 22.26))
        pathPath.line(to: NSPoint(x: 21.19, y: 22.75))
        pathPath.line(to: NSPoint(x: 21.19, y: 22.75))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.52, y: 7.82))
        pathPath.line(to: NSPoint(x: 14.52, y: 5.31))
        pathPath.curve(to: NSPoint(x: 15, y: 4.84), controlPoint1: NSPoint(x: 14.52, y: 5.05), controlPoint2: NSPoint(x: 14.74, y: 4.84))
        pathPath.curve(to: NSPoint(x: 15.48, y: 5.31), controlPoint1: NSPoint(x: 15.26, y: 4.84), controlPoint2: NSPoint(x: 15.48, y: 5.06))
        pathPath.line(to: NSPoint(x: 15.48, y: 7.82))
        pathPath.curve(to: NSPoint(x: 16.43, y: 9.19), controlPoint1: NSPoint(x: 16.03, y: 8.02), controlPoint2: NSPoint(x: 16.43, y: 8.56))
        pathPath.curve(to: NSPoint(x: 15, y: 10.65), controlPoint1: NSPoint(x: 16.43, y: 10), controlPoint2: NSPoint(x: 15.79, y: 10.65))
        pathPath.curve(to: NSPoint(x: 13.57, y: 9.19), controlPoint1: NSPoint(x: 14.21, y: 10.65), controlPoint2: NSPoint(x: 13.57, y: 10))
        pathPath.curve(to: NSPoint(x: 14.52, y: 7.82), controlPoint1: NSPoint(x: 13.57, y: 8.56), controlPoint2: NSPoint(x: 13.97, y: 8.02))
        pathPath.line(to: NSPoint(x: 14.52, y: 7.82))
        pathPath.line(to: NSPoint(x: 14.52, y: 7.82))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.57, y: 7.26))
        pathPath.line(to: NSPoint(x: 13.57, y: 5.32))
        pathPath.curve(to: NSPoint(x: 15, y: 3.87), controlPoint1: NSPoint(x: 13.57, y: 4.52), controlPoint2: NSPoint(x: 14.21, y: 3.87))
        pathPath.curve(to: NSPoint(x: 16.43, y: 5.32), controlPoint1: NSPoint(x: 15.79, y: 3.87), controlPoint2: NSPoint(x: 16.43, y: 4.52))
        pathPath.line(to: NSPoint(x: 16.43, y: 7.26))
        pathPath.curve(to: NSPoint(x: 17.38, y: 9.19), controlPoint1: NSPoint(x: 17.01, y: 7.7), controlPoint2: NSPoint(x: 17.38, y: 8.4))
        pathPath.curve(to: NSPoint(x: 15, y: 11.61), controlPoint1: NSPoint(x: 17.38, y: 10.53), controlPoint2: NSPoint(x: 16.31, y: 11.61))
        pathPath.curve(to: NSPoint(x: 12.62, y: 9.19), controlPoint1: NSPoint(x: 13.69, y: 11.61), controlPoint2: NSPoint(x: 12.62, y: 10.53))
        pathPath.curve(to: NSPoint(x: 13.57, y: 7.26), controlPoint1: NSPoint(x: 12.62, y: 8.4), controlPoint2: NSPoint(x: 12.99, y: 7.7))
        pathPath.line(to: NSPoint(x: 13.57, y: 7.26))
        pathPath.line(to: NSPoint(x: 13.57, y: 7.26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.85, y: 14.52))
        pathPath.curve(to: NSPoint(x: 5.95, y: 12.57), controlPoint1: NSPoint(x: 6.8, y: 14.52), controlPoint2: NSPoint(x: 5.95, y: 13.65))
        pathPath.line(to: NSPoint(x: 5.95, y: 2.91))
        pathPath.curve(to: NSPoint(x: 7.85, y: 0.97), controlPoint1: NSPoint(x: 5.95, y: 1.84), controlPoint2: NSPoint(x: 6.8, y: 0.97))
        pathPath.line(to: NSPoint(x: 22.15, y: 0.97))
        pathPath.curve(to: NSPoint(x: 24.05, y: 2.91), controlPoint1: NSPoint(x: 23.2, y: 0.97), controlPoint2: NSPoint(x: 24.05, y: 1.84))
        pathPath.line(to: NSPoint(x: 24.05, y: 12.57))
        pathPath.curve(to: NSPoint(x: 22.15, y: 14.52), controlPoint1: NSPoint(x: 24.05, y: 13.65), controlPoint2: NSPoint(x: 23.2, y: 14.52))
        pathPath.line(to: NSPoint(x: 7.85, y: 14.52))
        pathPath.line(to: NSPoint(x: 7.85, y: 14.52))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawLockStripes(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 5.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 14.49))
        pathPath.curve(to: NSPoint(x: 7.5, y: 16.5), controlPoint1: NSPoint(x: 5.5, y: 15.6), controlPoint2: NSPoint(x: 6.39, y: 16.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 16.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 14.49), controlPoint1: NSPoint(x: 23.61, y: 16.5), controlPoint2: NSPoint(x: 24.5, y: 15.6))
        pathPath.line(to: NSPoint(x: 24.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 6.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 7.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 7.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 4.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 5.5, y: 3.39), controlPoint2: NSPoint(x: 6.39, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 4.5), controlPoint1: NSPoint(x: 23.6, y: 2.5), controlPoint2: NSPoint(x: 24.5, y: 3.39))
        pathPath.line(to: NSPoint(x: 5.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 4.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 23.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 22.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 21))
        pathPath.curve(to: NSPoint(x: 15, y: 28.5), controlPoint1: NSPoint(x: 7.5, y: 25.14), controlPoint2: NSPoint(x: 10.86, y: 28.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 21), controlPoint1: NSPoint(x: 19.13, y: 28.5), controlPoint2: NSPoint(x: 22.5, y: 25.14))
        pathPath.line(to: NSPoint(x: 22.5, y: 17.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 14.49), controlPoint1: NSPoint(x: 24.16, y: 17.5), controlPoint2: NSPoint(x: 25.5, y: 16.15))
        pathPath.line(to: NSPoint(x: 25.5, y: 4.51))
        pathPath.curve(to: NSPoint(x: 22.49, y: 1.5), controlPoint1: NSPoint(x: 25.5, y: 2.84), controlPoint2: NSPoint(x: 24.15, y: 1.5))
        pathPath.line(to: NSPoint(x: 7.51, y: 1.5))
        pathPath.curve(to: NSPoint(x: 4.5, y: 4.51), controlPoint1: NSPoint(x: 5.85, y: 1.5), controlPoint2: NSPoint(x: 4.5, y: 2.85))
        pathPath.line(to: NSPoint(x: 4.5, y: 14.49))
        pathPath.curve(to: NSPoint(x: 7.5, y: 17.5), controlPoint1: NSPoint(x: 4.5, y: 16.16), controlPoint2: NSPoint(x: 5.84, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 8.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 10.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 9.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 7.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 7.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 7.25, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 11.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 13.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 12.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 10.25, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 14.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 16.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 15.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 13.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 13.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 13.25, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 17.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 19.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 18.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 16.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 16.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 16.25, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 20.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 22.75, y: 7.5))
        pathPath.line(to: NSPoint(x: 21.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 19.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 19.25, y: 5.5))
        pathPath.line(to: NSPoint(x: 19.25, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 15, y: 27.5), controlPoint1: NSPoint(x: 8.5, y: 24.59), controlPoint2: NSPoint(x: 11.41, y: 27.5))
        pathPath.curve(to: NSPoint(x: 21.5, y: 21.01), controlPoint1: NSPoint(x: 18.58, y: 27.5), controlPoint2: NSPoint(x: 21.5, y: 24.59))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 20.99))
        pathPath.curve(to: NSPoint(x: 15, y: 26.5), controlPoint1: NSPoint(x: 20.5, y: 24.03), controlPoint2: NSPoint(x: 18.03, y: 26.5))
        pathPath.curve(to: NSPoint(x: 9.5, y: 20.99), controlPoint1: NSPoint(x: 11.96, y: 26.5), controlPoint2: NSPoint(x: 9.5, y: 24.04))
        pathPath.line(to: NSPoint(x: 9.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 21))
        pathPath.curve(to: NSPoint(x: 15, y: 25.5), controlPoint1: NSPoint(x: 10.5, y: 23.49), controlPoint2: NSPoint(x: 12.51, y: 25.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21), controlPoint1: NSPoint(x: 17.48, y: 25.5), controlPoint2: NSPoint(x: 19.5, y: 23.48))
        pathPath.line(to: NSPoint(x: 19.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawLockRounded(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 9.59))
        pathPath.line(to: NSPoint(x: 14.5, y: 6.99))
        pathPath.curve(to: NSPoint(x: 15, y: 6.5), controlPoint1: NSPoint(x: 14.5, y: 6.72), controlPoint2: NSPoint(x: 14.73, y: 6.5))
        pathPath.curve(to: NSPoint(x: 15.5, y: 6.99), controlPoint1: NSPoint(x: 15.28, y: 6.5), controlPoint2: NSPoint(x: 15.5, y: 6.73))
        pathPath.line(to: NSPoint(x: 15.5, y: 9.59))
        pathPath.curve(to: NSPoint(x: 16.5, y: 11), controlPoint1: NSPoint(x: 16.08, y: 9.79), controlPoint2: NSPoint(x: 16.5, y: 10.35))
        pathPath.curve(to: NSPoint(x: 15, y: 12.5), controlPoint1: NSPoint(x: 16.5, y: 11.83), controlPoint2: NSPoint(x: 15.83, y: 12.5))
        pathPath.curve(to: NSPoint(x: 13.5, y: 11), controlPoint1: NSPoint(x: 14.17, y: 12.5), controlPoint2: NSPoint(x: 13.5, y: 11.83))
        pathPath.curve(to: NSPoint(x: 14.5, y: 9.59), controlPoint1: NSPoint(x: 13.5, y: 10.35), controlPoint2: NSPoint(x: 13.92, y: 9.79))
        pathPath.line(to: NSPoint(x: 14.5, y: 9.59))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 9))
        pathPath.line(to: NSPoint(x: 13.5, y: 7))
        pathPath.curve(to: NSPoint(x: 15, y: 5.5), controlPoint1: NSPoint(x: 13.5, y: 6.17), controlPoint2: NSPoint(x: 14.17, y: 5.5))
        pathPath.curve(to: NSPoint(x: 16.5, y: 7), controlPoint1: NSPoint(x: 15.83, y: 5.5), controlPoint2: NSPoint(x: 16.5, y: 6.17))
        pathPath.line(to: NSPoint(x: 16.5, y: 9))
        pathPath.curve(to: NSPoint(x: 17.5, y: 11), controlPoint1: NSPoint(x: 17.11, y: 9.46), controlPoint2: NSPoint(x: 17.5, y: 10.18))
        pathPath.curve(to: NSPoint(x: 15, y: 13.5), controlPoint1: NSPoint(x: 17.5, y: 12.38), controlPoint2: NSPoint(x: 16.38, y: 13.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 11), controlPoint1: NSPoint(x: 13.62, y: 13.5), controlPoint2: NSPoint(x: 12.5, y: 12.38))
        pathPath.curve(to: NSPoint(x: 13.5, y: 9), controlPoint1: NSPoint(x: 12.5, y: 10.18), controlPoint2: NSPoint(x: 12.89, y: 9.46))
        pathPath.line(to: NSPoint(x: 13.5, y: 9))
        pathPath.line(to: NSPoint(x: 13.5, y: 9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 21))
        pathPath.curve(to: NSPoint(x: 15, y: 28.5), controlPoint1: NSPoint(x: 7.5, y: 25.14), controlPoint2: NSPoint(x: 10.86, y: 28.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 21), controlPoint1: NSPoint(x: 19.13, y: 28.5), controlPoint2: NSPoint(x: 22.5, y: 25.14))
        pathPath.line(to: NSPoint(x: 22.5, y: 17.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 14.49), controlPoint1: NSPoint(x: 24.16, y: 17.5), controlPoint2: NSPoint(x: 25.5, y: 16.15))
        pathPath.line(to: NSPoint(x: 25.5, y: 9.5))
        pathPath.curve(to: NSPoint(x: 17.5, y: 1.5), controlPoint1: NSPoint(x: 25.5, y: 5.09), controlPoint2: NSPoint(x: 21.92, y: 1.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 4.5, y: 9.5), controlPoint1: NSPoint(x: 8.09, y: 1.5), controlPoint2: NSPoint(x: 4.5, y: 5.08))
        pathPath.line(to: NSPoint(x: 4.5, y: 14.49))
        pathPath.curve(to: NSPoint(x: 7.5, y: 17.5), controlPoint1: NSPoint(x: 4.5, y: 16.16), controlPoint2: NSPoint(x: 5.84, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 15, y: 27.5), controlPoint1: NSPoint(x: 8.5, y: 24.59), controlPoint2: NSPoint(x: 11.41, y: 27.5))
        pathPath.curve(to: NSPoint(x: 21.5, y: 21.01), controlPoint1: NSPoint(x: 18.58, y: 27.5), controlPoint2: NSPoint(x: 21.5, y: 24.59))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 20.99))
        pathPath.curve(to: NSPoint(x: 15, y: 26.5), controlPoint1: NSPoint(x: 20.5, y: 24.03), controlPoint2: NSPoint(x: 18.03, y: 26.5))
        pathPath.curve(to: NSPoint(x: 9.5, y: 20.99), controlPoint1: NSPoint(x: 11.96, y: 26.5), controlPoint2: NSPoint(x: 9.5, y: 24.04))
        pathPath.line(to: NSPoint(x: 9.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 21))
        pathPath.curve(to: NSPoint(x: 15, y: 25.5), controlPoint1: NSPoint(x: 10.5, y: 23.49), controlPoint2: NSPoint(x: 12.51, y: 25.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21), controlPoint1: NSPoint(x: 17.48, y: 25.5), controlPoint2: NSPoint(x: 19.5, y: 23.48))
        pathPath.line(to: NSPoint(x: 19.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 16.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 14.49), controlPoint1: NSPoint(x: 6.39, y: 16.5), controlPoint2: NSPoint(x: 5.5, y: 15.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 9.5))
        pathPath.curve(to: NSPoint(x: 12.49, y: 2.5), controlPoint1: NSPoint(x: 5.5, y: 5.63), controlPoint2: NSPoint(x: 8.64, y: 2.5))
        pathPath.line(to: NSPoint(x: 17.51, y: 2.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 9.5), controlPoint1: NSPoint(x: 21.37, y: 2.5), controlPoint2: NSPoint(x: 24.5, y: 5.64))
        pathPath.line(to: NSPoint(x: 24.5, y: 14.49))
        pathPath.curve(to: NSPoint(x: 22.5, y: 16.5), controlPoint1: NSPoint(x: 24.5, y: 15.6), controlPoint2: NSPoint(x: 23.61, y: 16.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 16.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawLockRoundedOpen(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 18.87, y: 7.82))
        pathPath.line(to: NSPoint(x: 18.87, y: 5.31))
        pathPath.curve(to: NSPoint(x: 19.35, y: 4.84), controlPoint1: NSPoint(x: 18.87, y: 5.05), controlPoint2: NSPoint(x: 19.09, y: 4.84))
        pathPath.curve(to: NSPoint(x: 19.83, y: 5.31), controlPoint1: NSPoint(x: 19.62, y: 4.84), controlPoint2: NSPoint(x: 19.83, y: 5.06))
        pathPath.line(to: NSPoint(x: 19.83, y: 7.82))
        pathPath.curve(to: NSPoint(x: 20.8, y: 9.19), controlPoint1: NSPoint(x: 20.4, y: 8.02), controlPoint2: NSPoint(x: 20.8, y: 8.56))
        pathPath.curve(to: NSPoint(x: 19.35, y: 10.65), controlPoint1: NSPoint(x: 20.8, y: 10), controlPoint2: NSPoint(x: 20.15, y: 10.65))
        pathPath.curve(to: NSPoint(x: 17.9, y: 9.19), controlPoint1: NSPoint(x: 18.55, y: 10.65), controlPoint2: NSPoint(x: 17.9, y: 10))
        pathPath.curve(to: NSPoint(x: 18.87, y: 7.82), controlPoint1: NSPoint(x: 17.9, y: 8.56), controlPoint2: NSPoint(x: 18.3, y: 8.02))
        pathPath.line(to: NSPoint(x: 18.87, y: 7.82))
        pathPath.line(to: NSPoint(x: 18.87, y: 7.82))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.9, y: 7.26))
        pathPath.line(to: NSPoint(x: 17.9, y: 5.32))
        pathPath.curve(to: NSPoint(x: 19.35, y: 3.87), controlPoint1: NSPoint(x: 17.9, y: 4.52), controlPoint2: NSPoint(x: 18.54, y: 3.87))
        pathPath.curve(to: NSPoint(x: 20.8, y: 5.32), controlPoint1: NSPoint(x: 20.15, y: 3.87), controlPoint2: NSPoint(x: 20.8, y: 4.52))
        pathPath.line(to: NSPoint(x: 20.8, y: 7.26))
        pathPath.curve(to: NSPoint(x: 21.77, y: 9.19), controlPoint1: NSPoint(x: 21.39, y: 7.7), controlPoint2: NSPoint(x: 21.77, y: 8.4))
        pathPath.curve(to: NSPoint(x: 19.35, y: 11.61), controlPoint1: NSPoint(x: 21.77, y: 10.53), controlPoint2: NSPoint(x: 20.68, y: 11.61))
        pathPath.curve(to: NSPoint(x: 16.93, y: 9.19), controlPoint1: NSPoint(x: 18.02, y: 11.61), controlPoint2: NSPoint(x: 16.93, y: 10.53))
        pathPath.curve(to: NSPoint(x: 17.9, y: 7.26), controlPoint1: NSPoint(x: 16.93, y: 8.4), controlPoint2: NSPoint(x: 17.31, y: 7.7))
        pathPath.line(to: NSPoint(x: 17.9, y: 7.26))
        pathPath.line(to: NSPoint(x: 17.9, y: 7.26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 15.48))
        pathPath.line(to: NSPoint(x: 15, y: 22.74))
        pathPath.curve(to: NSPoint(x: 7.75, y: 30), controlPoint1: NSPoint(x: 15, y: 26.75), controlPoint2: NSPoint(x: 11.75, y: 30))
        pathPath.curve(to: NSPoint(x: 0.5, y: 22.74), controlPoint1: NSPoint(x: 3.75, y: 30), controlPoint2: NSPoint(x: 0.5, y: 26.75))
        pathPath.line(to: NSPoint(x: 0.5, y: 21.77))
        pathPath.line(to: NSPoint(x: 0.5, y: 21.77))
        pathPath.line(to: NSPoint(x: 0.5, y: 18.87))
        pathPath.curve(to: NSPoint(x: 1.95, y: 17.42), controlPoint1: NSPoint(x: 0.5, y: 18.07), controlPoint2: NSPoint(x: 1.14, y: 17.42))
        pathPath.curve(to: NSPoint(x: 3.4, y: 18.87), controlPoint1: NSPoint(x: 2.75, y: 17.42), controlPoint2: NSPoint(x: 3.4, y: 18.07))
        pathPath.line(to: NSPoint(x: 3.4, y: 21.77))
        pathPath.line(to: NSPoint(x: 3.4, y: 22.74))
        pathPath.curve(to: NSPoint(x: 7.75, y: 27.1), controlPoint1: NSPoint(x: 3.4, y: 25.14), controlPoint2: NSPoint(x: 5.35, y: 27.1))
        pathPath.curve(to: NSPoint(x: 12.1, y: 22.74), controlPoint1: NSPoint(x: 10.15, y: 27.1), controlPoint2: NSPoint(x: 12.1, y: 25.15))
        pathPath.line(to: NSPoint(x: 12.1, y: 15.48))
        pathPath.curve(to: NSPoint(x: 9.2, y: 12.57), controlPoint1: NSPoint(x: 10.5, y: 15.48), controlPoint2: NSPoint(x: 9.2, y: 14.19))
        pathPath.line(to: NSPoint(x: 9.2, y: 7.74))
        pathPath.curve(to: NSPoint(x: 16.93, y: 0), controlPoint1: NSPoint(x: 9.2, y: 3.47), controlPoint2: NSPoint(x: 12.67, y: 0))
        pathPath.line(to: NSPoint(x: 21.77, y: 0))
        pathPath.curve(to: NSPoint(x: 29.5, y: 7.74), controlPoint1: NSPoint(x: 26.04, y: 0), controlPoint2: NSPoint(x: 29.5, y: 3.47))
        pathPath.line(to: NSPoint(x: 29.5, y: 12.57))
        pathPath.curve(to: NSPoint(x: 26.59, y: 15.48), controlPoint1: NSPoint(x: 29.5, y: 14.18), controlPoint2: NSPoint(x: 28.2, y: 15.48))
        pathPath.line(to: NSPoint(x: 15, y: 15.48))
        pathPath.line(to: NSPoint(x: 15, y: 15.48))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.03, y: 22.74))
        pathPath.curve(to: NSPoint(x: 7.75, y: 29.03), controlPoint1: NSPoint(x: 14.03, y: 26.22), controlPoint2: NSPoint(x: 11.21, y: 29.03))
        pathPath.curve(to: NSPoint(x: 1.47, y: 22.74), controlPoint1: NSPoint(x: 4.28, y: 29.03), controlPoint2: NSPoint(x: 1.47, y: 26.21))
        pathPath.line(to: NSPoint(x: 1.47, y: 18.87))
        pathPath.curve(to: NSPoint(x: 1.95, y: 18.39), controlPoint1: NSPoint(x: 1.47, y: 18.6), controlPoint2: NSPoint(x: 1.69, y: 18.39))
        pathPath.line(to: NSPoint(x: 1.95, y: 18.39))
        pathPath.curve(to: NSPoint(x: 2.43, y: 18.87), controlPoint1: NSPoint(x: 2.22, y: 18.39), controlPoint2: NSPoint(x: 2.43, y: 18.6))
        pathPath.line(to: NSPoint(x: 2.43, y: 22.75))
        pathPath.curve(to: NSPoint(x: 7.75, y: 28.06), controlPoint1: NSPoint(x: 2.43, y: 25.68), controlPoint2: NSPoint(x: 4.81, y: 28.06))
        pathPath.curve(to: NSPoint(x: 13.07, y: 22.75), controlPoint1: NSPoint(x: 10.68, y: 28.06), controlPoint2: NSPoint(x: 13.07, y: 25.68))
        pathPath.line(to: NSPoint(x: 13.07, y: 15.48))
        pathPath.line(to: NSPoint(x: 14.03, y: 15.48))
        pathPath.line(to: NSPoint(x: 14.03, y: 22.74))
        pathPath.line(to: NSPoint(x: 14.03, y: 22.74))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.1, y: 14.52))
        pathPath.curve(to: NSPoint(x: 10.17, y: 12.57), controlPoint1: NSPoint(x: 11.03, y: 14.52), controlPoint2: NSPoint(x: 10.17, y: 13.65))
        pathPath.line(to: NSPoint(x: 10.17, y: 7.74))
        pathPath.curve(to: NSPoint(x: 16.93, y: 0.97), controlPoint1: NSPoint(x: 10.17, y: 4), controlPoint2: NSPoint(x: 13.2, y: 0.97))
        pathPath.line(to: NSPoint(x: 21.77, y: 0.97))
        pathPath.curve(to: NSPoint(x: 28.53, y: 7.74), controlPoint1: NSPoint(x: 25.51, y: 0.97), controlPoint2: NSPoint(x: 28.53, y: 4.01))
        pathPath.line(to: NSPoint(x: 28.53, y: 12.57))
        pathPath.curve(to: NSPoint(x: 26.6, y: 14.52), controlPoint1: NSPoint(x: 28.53, y: 13.65), controlPoint2: NSPoint(x: 27.67, y: 14.52))
        pathPath.line(to: NSPoint(x: 12.1, y: 14.52))
        pathPath.line(to: NSPoint(x: 12.1, y: 14.52))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawLockRoundedOpen2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 22.14, y: 21.77))
        pathPath.line(to: NSPoint(x: 22.14, y: 22.74))
        pathPath.curve(to: NSPoint(x: 15, y: 30), controlPoint1: NSPoint(x: 22.14, y: 26.75), controlPoint2: NSPoint(x: 18.94, y: 30))
        pathPath.curve(to: NSPoint(x: 7.86, y: 22.74), controlPoint1: NSPoint(x: 11.06, y: 30), controlPoint2: NSPoint(x: 7.86, y: 26.75))
        pathPath.line(to: NSPoint(x: 7.86, y: 15.48))
        pathPath.line(to: NSPoint(x: 7.86, y: 15.48))
        pathPath.curve(to: NSPoint(x: 5, y: 12.57), controlPoint1: NSPoint(x: 6.28, y: 15.48), controlPoint2: NSPoint(x: 5, y: 14.19))
        pathPath.line(to: NSPoint(x: 5, y: 7.74))
        pathPath.curve(to: NSPoint(x: 12.62, y: 0), controlPoint1: NSPoint(x: 5, y: 3.47), controlPoint2: NSPoint(x: 8.42, y: 0))
        pathPath.line(to: NSPoint(x: 17.38, y: 0))
        pathPath.curve(to: NSPoint(x: 25, y: 7.74), controlPoint1: NSPoint(x: 21.59, y: 0), controlPoint2: NSPoint(x: 25, y: 3.47))
        pathPath.line(to: NSPoint(x: 25, y: 12.57))
        pathPath.curve(to: NSPoint(x: 22.14, y: 15.48), controlPoint1: NSPoint(x: 25, y: 14.18), controlPoint2: NSPoint(x: 23.72, y: 15.48))
        pathPath.line(to: NSPoint(x: 21.65, y: 15.48))
        pathPath.line(to: NSPoint(x: 10.74, y: 15.48))
        pathPath.curve(to: NSPoint(x: 10.71, y: 15.97), controlPoint1: NSPoint(x: 10.72, y: 15.64), controlPoint2: NSPoint(x: 10.71, y: 15.8))
        pathPath.line(to: NSPoint(x: 10.71, y: 22.74))
        pathPath.curve(to: NSPoint(x: 15, y: 27.1), controlPoint1: NSPoint(x: 10.71, y: 25.15), controlPoint2: NSPoint(x: 12.63, y: 27.1))
        pathPath.curve(to: NSPoint(x: 19.29, y: 22.74), controlPoint1: NSPoint(x: 17.36, y: 27.1), controlPoint2: NSPoint(x: 19.29, y: 25.15))
        pathPath.line(to: NSPoint(x: 19.29, y: 21.77))
        pathPath.line(to: NSPoint(x: 19.29, y: 18.87))
        pathPath.curve(to: NSPoint(x: 20.71, y: 17.42), controlPoint1: NSPoint(x: 19.29, y: 18.07), controlPoint2: NSPoint(x: 19.92, y: 17.42))
        pathPath.curve(to: NSPoint(x: 22.14, y: 18.87), controlPoint1: NSPoint(x: 21.5, y: 17.42), controlPoint2: NSPoint(x: 22.14, y: 18.07))
        pathPath.line(to: NSPoint(x: 22.14, y: 21.77))
        pathPath.line(to: NSPoint(x: 22.14, y: 21.77))
        pathPath.line(to: NSPoint(x: 22.14, y: 21.77))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.19, y: 22.75))
        pathPath.curve(to: NSPoint(x: 15, y: 29.03), controlPoint1: NSPoint(x: 21.19, y: 26.22), controlPoint2: NSPoint(x: 18.41, y: 29.03))
        pathPath.curve(to: NSPoint(x: 8.81, y: 22.75), controlPoint1: NSPoint(x: 11.58, y: 29.03), controlPoint2: NSPoint(x: 8.81, y: 26.22))
        pathPath.line(to: NSPoint(x: 8.81, y: 15.96))
        pathPath.curve(to: NSPoint(x: 8.83, y: 15.48), controlPoint1: NSPoint(x: 8.81, y: 15.8), controlPoint2: NSPoint(x: 8.82, y: 15.64))
        pathPath.line(to: NSPoint(x: 9.76, y: 15.48))
        pathPath.line(to: NSPoint(x: 9.76, y: 22.73))
        pathPath.curve(to: NSPoint(x: 15, y: 28.06), controlPoint1: NSPoint(x: 9.76, y: 25.68), controlPoint2: NSPoint(x: 12.11, y: 28.06))
        pathPath.curve(to: NSPoint(x: 20.24, y: 22.73), controlPoint1: NSPoint(x: 17.89, y: 28.06), controlPoint2: NSPoint(x: 20.24, y: 25.68))
        pathPath.line(to: NSPoint(x: 20.24, y: 18.87))
        pathPath.curve(to: NSPoint(x: 20.71, y: 18.39), controlPoint1: NSPoint(x: 20.24, y: 18.6), controlPoint2: NSPoint(x: 20.46, y: 18.39))
        pathPath.line(to: NSPoint(x: 20.71, y: 18.39))
        pathPath.curve(to: NSPoint(x: 21.19, y: 18.86), controlPoint1: NSPoint(x: 20.98, y: 18.39), controlPoint2: NSPoint(x: 21.19, y: 18.6))
        pathPath.line(to: NSPoint(x: 21.19, y: 22.26))
        pathPath.line(to: NSPoint(x: 21.19, y: 22.75))
        pathPath.line(to: NSPoint(x: 21.19, y: 22.75))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.52, y: 7.82))
        pathPath.line(to: NSPoint(x: 14.52, y: 5.31))
        pathPath.curve(to: NSPoint(x: 15, y: 4.84), controlPoint1: NSPoint(x: 14.52, y: 5.05), controlPoint2: NSPoint(x: 14.74, y: 4.84))
        pathPath.curve(to: NSPoint(x: 15.48, y: 5.31), controlPoint1: NSPoint(x: 15.26, y: 4.84), controlPoint2: NSPoint(x: 15.48, y: 5.06))
        pathPath.line(to: NSPoint(x: 15.48, y: 7.82))
        pathPath.curve(to: NSPoint(x: 16.43, y: 9.19), controlPoint1: NSPoint(x: 16.03, y: 8.02), controlPoint2: NSPoint(x: 16.43, y: 8.56))
        pathPath.curve(to: NSPoint(x: 15, y: 10.65), controlPoint1: NSPoint(x: 16.43, y: 10), controlPoint2: NSPoint(x: 15.79, y: 10.65))
        pathPath.curve(to: NSPoint(x: 13.57, y: 9.19), controlPoint1: NSPoint(x: 14.21, y: 10.65), controlPoint2: NSPoint(x: 13.57, y: 10))
        pathPath.curve(to: NSPoint(x: 14.52, y: 7.82), controlPoint1: NSPoint(x: 13.57, y: 8.56), controlPoint2: NSPoint(x: 13.97, y: 8.02))
        pathPath.line(to: NSPoint(x: 14.52, y: 7.82))
        pathPath.line(to: NSPoint(x: 14.52, y: 7.82))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.57, y: 7.26))
        pathPath.line(to: NSPoint(x: 13.57, y: 5.32))
        pathPath.curve(to: NSPoint(x: 15, y: 3.87), controlPoint1: NSPoint(x: 13.57, y: 4.52), controlPoint2: NSPoint(x: 14.21, y: 3.87))
        pathPath.curve(to: NSPoint(x: 16.43, y: 5.32), controlPoint1: NSPoint(x: 15.79, y: 3.87), controlPoint2: NSPoint(x: 16.43, y: 4.52))
        pathPath.line(to: NSPoint(x: 16.43, y: 7.26))
        pathPath.curve(to: NSPoint(x: 17.38, y: 9.19), controlPoint1: NSPoint(x: 17.01, y: 7.7), controlPoint2: NSPoint(x: 17.38, y: 8.4))
        pathPath.curve(to: NSPoint(x: 15, y: 11.61), controlPoint1: NSPoint(x: 17.38, y: 10.53), controlPoint2: NSPoint(x: 16.31, y: 11.61))
        pathPath.curve(to: NSPoint(x: 12.62, y: 9.19), controlPoint1: NSPoint(x: 13.69, y: 11.61), controlPoint2: NSPoint(x: 12.62, y: 10.53))
        pathPath.curve(to: NSPoint(x: 13.57, y: 7.26), controlPoint1: NSPoint(x: 12.62, y: 8.4), controlPoint2: NSPoint(x: 12.99, y: 7.7))
        pathPath.line(to: NSPoint(x: 13.57, y: 7.26))
        pathPath.line(to: NSPoint(x: 13.57, y: 7.26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.85, y: 14.52))
        pathPath.curve(to: NSPoint(x: 5.95, y: 12.57), controlPoint1: NSPoint(x: 6.8, y: 14.52), controlPoint2: NSPoint(x: 5.95, y: 13.65))
        pathPath.line(to: NSPoint(x: 5.95, y: 7.74))
        pathPath.curve(to: NSPoint(x: 12.61, y: 0.97), controlPoint1: NSPoint(x: 5.95, y: 4), controlPoint2: NSPoint(x: 8.94, y: 0.97))
        pathPath.line(to: NSPoint(x: 17.39, y: 0.97))
        pathPath.curve(to: NSPoint(x: 24.05, y: 7.74), controlPoint1: NSPoint(x: 21.07, y: 0.97), controlPoint2: NSPoint(x: 24.05, y: 4.01))
        pathPath.line(to: NSPoint(x: 24.05, y: 12.57))
        pathPath.curve(to: NSPoint(x: 22.15, y: 14.52), controlPoint1: NSPoint(x: 24.05, y: 13.65), controlPoint2: NSPoint(x: 23.2, y: 14.52))
        pathPath.line(to: NSPoint(x: 7.85, y: 14.52))
        pathPath.line(to: NSPoint(x: 7.85, y: 14.52))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCombinationLock(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 14.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 16.5), controlPoint1: NSPoint(x: 24.5, y: 15.61), controlPoint2: NSPoint(x: 23.61, y: 16.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 16.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 14.49), controlPoint1: NSPoint(x: 6.39, y: 16.5), controlPoint2: NSPoint(x: 5.5, y: 15.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 4.51))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 5.5, y: 3.4), controlPoint2: NSPoint(x: 6.39, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 4.5), controlPoint1: NSPoint(x: 23.6, y: 2.5), controlPoint2: NSPoint(x: 24.5, y: 3.39))
        pathPath.line(to: NSPoint(x: 15.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 21))
        pathPath.curve(to: NSPoint(x: 15, y: 28.5), controlPoint1: NSPoint(x: 7.5, y: 25.14), controlPoint2: NSPoint(x: 10.86, y: 28.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 21), controlPoint1: NSPoint(x: 19.13, y: 28.5), controlPoint2: NSPoint(x: 22.5, y: 25.14))
        pathPath.line(to: NSPoint(x: 22.5, y: 17.5))
        pathPath.curve(to: NSPoint(x: 25.5, y: 14.49), controlPoint1: NSPoint(x: 24.16, y: 17.5), controlPoint2: NSPoint(x: 25.5, y: 16.15))
        pathPath.line(to: NSPoint(x: 25.5, y: 4.51))
        pathPath.curve(to: NSPoint(x: 22.49, y: 1.5), controlPoint1: NSPoint(x: 25.5, y: 2.84), controlPoint2: NSPoint(x: 24.15, y: 1.5))
        pathPath.line(to: NSPoint(x: 7.51, y: 1.5))
        pathPath.curve(to: NSPoint(x: 4.5, y: 4.51), controlPoint1: NSPoint(x: 5.85, y: 1.5), controlPoint2: NSPoint(x: 4.5, y: 2.85))
        pathPath.line(to: NSPoint(x: 4.5, y: 14.49))
        pathPath.curve(to: NSPoint(x: 7.5, y: 17.5), controlPoint1: NSPoint(x: 4.5, y: 16.16), controlPoint2: NSPoint(x: 5.84, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 21.01))
        pathPath.curve(to: NSPoint(x: 15, y: 27.5), controlPoint1: NSPoint(x: 8.5, y: 24.59), controlPoint2: NSPoint(x: 11.41, y: 27.5))
        pathPath.curve(to: NSPoint(x: 21.5, y: 21.01), controlPoint1: NSPoint(x: 18.58, y: 27.5), controlPoint2: NSPoint(x: 21.5, y: 24.59))
        pathPath.line(to: NSPoint(x: 21.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 20.99))
        pathPath.curve(to: NSPoint(x: 15, y: 26.5), controlPoint1: NSPoint(x: 20.5, y: 24.03), controlPoint2: NSPoint(x: 18.03, y: 26.5))
        pathPath.curve(to: NSPoint(x: 9.5, y: 20.99), controlPoint1: NSPoint(x: 11.96, y: 26.5), controlPoint2: NSPoint(x: 9.5, y: 24.04))
        pathPath.line(to: NSPoint(x: 9.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 21))
        pathPath.curve(to: NSPoint(x: 15, y: 25.5), controlPoint1: NSPoint(x: 10.5, y: 23.49), controlPoint2: NSPoint(x: 12.51, y: 25.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21), controlPoint1: NSPoint(x: 17.48, y: 25.5), controlPoint2: NSPoint(x: 19.5, y: 23.48))
        pathPath.line(to: NSPoint(x: 19.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 17.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawPrinter(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 26.51, y: 4.5))
        pathPath.curve(to: NSPoint(x: 29.5, y: 7.5), controlPoint1: NSPoint(x: 28.16, y: 4.5), controlPoint2: NSPoint(x: 29.5, y: 5.84))
        pathPath.line(to: NSPoint(x: 29.5, y: 16.5))
        pathPath.curve(to: NSPoint(x: 26.51, y: 19.5), controlPoint1: NSPoint(x: 29.5, y: 18.16), controlPoint2: NSPoint(x: 28.16, y: 19.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 28.5), controlPoint1: NSPoint(x: 24.5, y: 27.6), controlPoint2: NSPoint(x: 23.61, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.5), controlPoint1: NSPoint(x: 6.39, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.61))
        pathPath.line(to: NSPoint(x: 5.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 3.49, y: 19.5))
        pathPath.curve(to: NSPoint(x: 0.5, y: 16.5), controlPoint1: NSPoint(x: 1.84, y: 19.5), controlPoint2: NSPoint(x: 0.5, y: 18.16))
        pathPath.line(to: NSPoint(x: 0.5, y: 7.5))
        pathPath.curve(to: NSPoint(x: 3.49, y: 4.5), controlPoint1: NSPoint(x: 0.5, y: 5.84), controlPoint2: NSPoint(x: 1.84, y: 4.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.5), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.39))
        pathPath.line(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 3.51, y: 5.5))
        pathPath.curve(to: NSPoint(x: 1.5, y: 7.5), controlPoint1: NSPoint(x: 2.4, y: 5.5), controlPoint2: NSPoint(x: 1.5, y: 6.4))
        pathPath.line(to: NSPoint(x: 1.5, y: 16.5))
        pathPath.curve(to: NSPoint(x: 3.51, y: 18.5), controlPoint1: NSPoint(x: 1.5, y: 17.61), controlPoint2: NSPoint(x: 2.4, y: 18.5))
        pathPath.line(to: NSPoint(x: 26.49, y: 18.5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 16.5), controlPoint1: NSPoint(x: 27.6, y: 18.5), controlPoint2: NSPoint(x: 28.5, y: 17.6))
        pathPath.line(to: NSPoint(x: 28.5, y: 7.5))
        pathPath.curve(to: NSPoint(x: 26.49, y: 5.5), controlPoint1: NSPoint(x: 28.5, y: 6.39), controlPoint2: NSPoint(x: 27.6, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.05))
        pathPath.line(to: NSPoint(x: 6.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 27.5), controlPoint1: NSPoint(x: 23.5, y: 27.05), controlPoint2: NSPoint(x: 23.05, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.5), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.95))
        pathPath.line(to: NSPoint(x: 23.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.5, y: 14.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 15.5), controlPoint1: NSPoint(x: 24.05, y: 14.5), controlPoint2: NSPoint(x: 24.5, y: 14.95))
        pathPath.curve(to: NSPoint(x: 23.5, y: 16.5), controlPoint1: NSPoint(x: 24.5, y: 16.05), controlPoint2: NSPoint(x: 24.05, y: 16.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 15.5), controlPoint1: NSPoint(x: 22.95, y: 16.5), controlPoint2: NSPoint(x: 22.5, y: 16.05))
        pathPath.curve(to: NSPoint(x: 23.5, y: 14.5), controlPoint1: NSPoint(x: 22.5, y: 14.95), controlPoint2: NSPoint(x: 22.95, y: 14.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 14.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawPrinterText(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 26.51, y: 4.5))
        pathPath.curve(to: NSPoint(x: 29.5, y: 7.5), controlPoint1: NSPoint(x: 28.16, y: 4.5), controlPoint2: NSPoint(x: 29.5, y: 5.84))
        pathPath.line(to: NSPoint(x: 29.5, y: 16.5))
        pathPath.curve(to: NSPoint(x: 26.51, y: 19.5), controlPoint1: NSPoint(x: 29.5, y: 18.16), controlPoint2: NSPoint(x: 28.16, y: 19.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 28.5), controlPoint1: NSPoint(x: 24.5, y: 27.6), controlPoint2: NSPoint(x: 23.61, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.5), controlPoint1: NSPoint(x: 6.39, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.61))
        pathPath.line(to: NSPoint(x: 5.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 3.49, y: 19.5))
        pathPath.curve(to: NSPoint(x: 0.5, y: 16.5), controlPoint1: NSPoint(x: 1.84, y: 19.5), controlPoint2: NSPoint(x: 0.5, y: 18.16))
        pathPath.line(to: NSPoint(x: 0.5, y: 7.5))
        pathPath.curve(to: NSPoint(x: 3.49, y: 4.5), controlPoint1: NSPoint(x: 0.5, y: 5.84), controlPoint2: NSPoint(x: 1.84, y: 4.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1.5), controlPoint1: NSPoint(x: 5.5, y: 2.4), controlPoint2: NSPoint(x: 6.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.5), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.39))
        pathPath.line(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 3.51, y: 5.5))
        pathPath.curve(to: NSPoint(x: 1.5, y: 7.5), controlPoint1: NSPoint(x: 2.4, y: 5.5), controlPoint2: NSPoint(x: 1.5, y: 6.4))
        pathPath.line(to: NSPoint(x: 1.5, y: 16.5))
        pathPath.curve(to: NSPoint(x: 3.51, y: 18.5), controlPoint1: NSPoint(x: 1.5, y: 17.61), controlPoint2: NSPoint(x: 2.4, y: 18.5))
        pathPath.line(to: NSPoint(x: 26.49, y: 18.5))
        pathPath.curve(to: NSPoint(x: 28.5, y: 16.5), controlPoint1: NSPoint(x: 27.6, y: 18.5), controlPoint2: NSPoint(x: 28.5, y: 17.6))
        pathPath.line(to: NSPoint(x: 28.5, y: 7.5))
        pathPath.curve(to: NSPoint(x: 26.49, y: 5.5), controlPoint1: NSPoint(x: 28.5, y: 6.39), controlPoint2: NSPoint(x: 27.6, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26.5), controlPoint1: NSPoint(x: 6.95, y: 27.5), controlPoint2: NSPoint(x: 6.5, y: 27.05))
        pathPath.line(to: NSPoint(x: 6.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 27.5), controlPoint1: NSPoint(x: 23.5, y: 27.05), controlPoint2: NSPoint(x: 23.05, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 27.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.curve(to: NSPoint(x: 23.5, y: 3.5), controlPoint1: NSPoint(x: 23.05, y: 2.5), controlPoint2: NSPoint(x: 23.5, y: 2.95))
        pathPath.line(to: NSPoint(x: 23.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.5, y: 14.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 15.5), controlPoint1: NSPoint(x: 24.05, y: 14.5), controlPoint2: NSPoint(x: 24.5, y: 14.95))
        pathPath.curve(to: NSPoint(x: 23.5, y: 16.5), controlPoint1: NSPoint(x: 24.5, y: 16.05), controlPoint2: NSPoint(x: 24.05, y: 16.5))
        pathPath.curve(to: NSPoint(x: 22.5, y: 15.5), controlPoint1: NSPoint(x: 22.95, y: 16.5), controlPoint2: NSPoint(x: 22.5, y: 16.05))
        pathPath.curve(to: NSPoint(x: 23.5, y: 14.5), controlPoint1: NSPoint(x: 22.5, y: 14.95), controlPoint2: NSPoint(x: 22.95, y: 14.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 5.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawPrinterText2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.5, y: 6))
        pathPath.line(to: NSPoint(x: 26.51, y: 6))
        pathPath.curve(to: NSPoint(x: 29.5, y: 9), controlPoint1: NSPoint(x: 28.16, y: 6), controlPoint2: NSPoint(x: 29.5, y: 7.34))
        pathPath.line(to: NSPoint(x: 29.5, y: 18))
        pathPath.curve(to: NSPoint(x: 26.51, y: 21), controlPoint1: NSPoint(x: 29.5, y: 19.66), controlPoint2: NSPoint(x: 28.16, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 21))
        pathPath.line(to: NSPoint(x: 24.5, y: 28))
        pathPath.curve(to: NSPoint(x: 22.5, y: 30), controlPoint1: NSPoint(x: 24.5, y: 29.1), controlPoint2: NSPoint(x: 23.61, y: 30))
        pathPath.line(to: NSPoint(x: 7.5, y: 30))
        pathPath.curve(to: NSPoint(x: 5.5, y: 28), controlPoint1: NSPoint(x: 6.39, y: 30), controlPoint2: NSPoint(x: 5.5, y: 29.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 21))
        pathPath.line(to: NSPoint(x: 5.5, y: 21))
        pathPath.line(to: NSPoint(x: 3.49, y: 21))
        pathPath.curve(to: NSPoint(x: 0.5, y: 18), controlPoint1: NSPoint(x: 1.84, y: 21), controlPoint2: NSPoint(x: 0.5, y: 19.66))
        pathPath.line(to: NSPoint(x: 0.5, y: 9))
        pathPath.curve(to: NSPoint(x: 3.49, y: 6), controlPoint1: NSPoint(x: 0.5, y: 7.34), controlPoint2: NSPoint(x: 1.84, y: 6))
        pathPath.line(to: NSPoint(x: 5.5, y: 6))
        pathPath.line(to: NSPoint(x: 5.5, y: 2))
        pathPath.curve(to: NSPoint(x: 7.5, y: 0), controlPoint1: NSPoint(x: 5.5, y: 0.9), controlPoint2: NSPoint(x: 6.39, y: 0))
        pathPath.line(to: NSPoint(x: 22.5, y: 0))
        pathPath.curve(to: NSPoint(x: 24.5, y: 2), controlPoint1: NSPoint(x: 23.61, y: 0), controlPoint2: NSPoint(x: 24.5, y: 0.89))
        pathPath.line(to: NSPoint(x: 24.5, y: 6))
        pathPath.line(to: NSPoint(x: 24.5, y: 6))
        pathPath.line(to: NSPoint(x: 24.5, y: 6))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 7))
        pathPath.line(to: NSPoint(x: 3.51, y: 7))
        pathPath.curve(to: NSPoint(x: 1.5, y: 9), controlPoint1: NSPoint(x: 2.4, y: 7), controlPoint2: NSPoint(x: 1.5, y: 7.9))
        pathPath.line(to: NSPoint(x: 1.5, y: 18))
        pathPath.curve(to: NSPoint(x: 3.51, y: 20), controlPoint1: NSPoint(x: 1.5, y: 19.11), controlPoint2: NSPoint(x: 2.4, y: 20))
        pathPath.line(to: NSPoint(x: 26.49, y: 20))
        pathPath.curve(to: NSPoint(x: 28.5, y: 18), controlPoint1: NSPoint(x: 27.6, y: 20), controlPoint2: NSPoint(x: 28.5, y: 19.1))
        pathPath.line(to: NSPoint(x: 28.5, y: 9))
        pathPath.curve(to: NSPoint(x: 26.49, y: 7), controlPoint1: NSPoint(x: 28.5, y: 7.89), controlPoint2: NSPoint(x: 27.6, y: 7))
        pathPath.line(to: NSPoint(x: 24.5, y: 7))
        pathPath.line(to: NSPoint(x: 24.5, y: 10))
        pathPath.line(to: NSPoint(x: 5.5, y: 10))
        pathPath.line(to: NSPoint(x: 5.5, y: 7))
        pathPath.line(to: NSPoint(x: 5.5, y: 7))
        pathPath.line(to: NSPoint(x: 5.5, y: 7))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 29))
        pathPath.curve(to: NSPoint(x: 6.5, y: 28), controlPoint1: NSPoint(x: 6.95, y: 29), controlPoint2: NSPoint(x: 6.5, y: 28.55))
        pathPath.line(to: NSPoint(x: 6.5, y: 21))
        pathPath.line(to: NSPoint(x: 23.5, y: 21))
        pathPath.line(to: NSPoint(x: 23.5, y: 28))
        pathPath.curve(to: NSPoint(x: 22.5, y: 29), controlPoint1: NSPoint(x: 23.5, y: 28.55), controlPoint2: NSPoint(x: 23.05, y: 29))
        pathPath.line(to: NSPoint(x: 7.5, y: 29))
        pathPath.line(to: NSPoint(x: 7.5, y: 29))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.5, y: 9))
        pathPath.line(to: NSPoint(x: 6.5, y: 2))
        pathPath.curve(to: NSPoint(x: 7.5, y: 1), controlPoint1: NSPoint(x: 6.5, y: 1.45), controlPoint2: NSPoint(x: 6.95, y: 1))
        pathPath.line(to: NSPoint(x: 22.5, y: 1))
        pathPath.curve(to: NSPoint(x: 23.5, y: 2), controlPoint1: NSPoint(x: 23.05, y: 1), controlPoint2: NSPoint(x: 23.5, y: 1.45))
        pathPath.line(to: NSPoint(x: 23.5, y: 9))
        pathPath.line(to: NSPoint(x: 6.5, y: 9))
        pathPath.line(to: NSPoint(x: 6.5, y: 9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.5, y: 15))
        pathPath.curve(to: NSPoint(x: 24.5, y: 16), controlPoint1: NSPoint(x: 24.05, y: 15), controlPoint2: NSPoint(x: 24.5, y: 15.45))
        pathPath.curve(to: NSPoint(x: 23.5, y: 17), controlPoint1: NSPoint(x: 24.5, y: 16.55), controlPoint2: NSPoint(x: 24.05, y: 17))
        pathPath.curve(to: NSPoint(x: 22.5, y: 16), controlPoint1: NSPoint(x: 22.95, y: 17), controlPoint2: NSPoint(x: 22.5, y: 16.55))
        pathPath.curve(to: NSPoint(x: 23.5, y: 15), controlPoint1: NSPoint(x: 22.5, y: 15.45), controlPoint2: NSPoint(x: 22.95, y: 15))
        pathPath.line(to: NSPoint(x: 23.5, y: 15))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 7))
        pathPath.line(to: NSPoint(x: 7.5, y: 6))
        pathPath.line(to: NSPoint(x: 22.5, y: 6))
        pathPath.line(to: NSPoint(x: 22.5, y: 7))
        pathPath.line(to: NSPoint(x: 7.5, y: 7))
        pathPath.line(to: NSPoint(x: 7.5, y: 7))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 4))
        pathPath.line(to: NSPoint(x: 7.5, y: 3))
        pathPath.line(to: NSPoint(x: 22.5, y: 3))
        pathPath.line(to: NSPoint(x: 22.5, y: 4))
        pathPath.line(to: NSPoint(x: 7.5, y: 4))
        pathPath.line(to: NSPoint(x: 7.5, y: 4))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentShred(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 25.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 11.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 27.5), controlPoint1: NSPoint(x: 6.5, y: 27.04), controlPoint2: NSPoint(x: 6.95, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 20.5), controlPoint1: NSPoint(x: 17.5, y: 21.39), controlPoint2: NSPoint(x: 18.39, y: 20.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 13.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 10.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 10.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawShredder(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 25.5, y: 8))
        pathPath.line(to: NSPoint(x: 26.51, y: 8))
        pathPath.curve(to: NSPoint(x: 29.5, y: 11.01), controlPoint1: NSPoint(x: 28.16, y: 8), controlPoint2: NSPoint(x: 29.5, y: 9.35))
        pathPath.line(to: NSPoint(x: 29.5, y: 15.99))
        pathPath.curve(to: NSPoint(x: 26.51, y: 19), controlPoint1: NSPoint(x: 29.5, y: 17.65), controlPoint2: NSPoint(x: 28.16, y: 19))
        pathPath.line(to: NSPoint(x: 24.5, y: 19))
        pathPath.line(to: NSPoint(x: 24.5, y: 26))
        pathPath.curve(to: NSPoint(x: 22.5, y: 28), controlPoint1: NSPoint(x: 24.5, y: 27.1), controlPoint2: NSPoint(x: 23.61, y: 28))
        pathPath.line(to: NSPoint(x: 7.5, y: 28))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26), controlPoint1: NSPoint(x: 6.39, y: 28), controlPoint2: NSPoint(x: 5.5, y: 27.11))
        pathPath.line(to: NSPoint(x: 5.5, y: 19))
        pathPath.line(to: NSPoint(x: 5.5, y: 19))
        pathPath.line(to: NSPoint(x: 3.49, y: 19))
        pathPath.curve(to: NSPoint(x: 0.5, y: 15.99), controlPoint1: NSPoint(x: 1.84, y: 19), controlPoint2: NSPoint(x: 0.5, y: 17.65))
        pathPath.line(to: NSPoint(x: 0.5, y: 11.01))
        pathPath.curve(to: NSPoint(x: 3.49, y: 8), controlPoint1: NSPoint(x: 0.5, y: 9.35), controlPoint2: NSPoint(x: 1.84, y: 8))
        pathPath.line(to: NSPoint(x: 4.5, y: 8))
        pathPath.line(to: NSPoint(x: 4.5, y: 11))
        pathPath.line(to: NSPoint(x: 25.5, y: 11))
        pathPath.line(to: NSPoint(x: 25.5, y: 8))
        pathPath.line(to: NSPoint(x: 25.5, y: 8))
        pathPath.line(to: NSPoint(x: 25.5, y: 8))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.5, y: 9))
        pathPath.curve(to: NSPoint(x: 1.5, y: 11), controlPoint1: NSPoint(x: 2.39, y: 9), controlPoint2: NSPoint(x: 1.5, y: 9.9))
        pathPath.line(to: NSPoint(x: 1.5, y: 16))
        pathPath.curve(to: NSPoint(x: 3.51, y: 18), controlPoint1: NSPoint(x: 1.5, y: 17.1), controlPoint2: NSPoint(x: 2.4, y: 18))
        pathPath.line(to: NSPoint(x: 26.49, y: 18))
        pathPath.curve(to: NSPoint(x: 28.5, y: 16), controlPoint1: NSPoint(x: 27.6, y: 18), controlPoint2: NSPoint(x: 28.5, y: 17.11))
        pathPath.line(to: NSPoint(x: 28.5, y: 11))
        pathPath.curve(to: NSPoint(x: 26.5, y: 9), controlPoint1: NSPoint(x: 28.5, y: 9.9), controlPoint2: NSPoint(x: 27.61, y: 9))
        pathPath.line(to: NSPoint(x: 26.5, y: 12))
        pathPath.line(to: NSPoint(x: 3.5, y: 12))
        pathPath.line(to: NSPoint(x: 3.5, y: 9))
        pathPath.line(to: NSPoint(x: 3.5, y: 9))
        pathPath.line(to: NSPoint(x: 3.5, y: 9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 27))
        pathPath.curve(to: NSPoint(x: 6.5, y: 26), controlPoint1: NSPoint(x: 6.95, y: 27), controlPoint2: NSPoint(x: 6.5, y: 26.55))
        pathPath.line(to: NSPoint(x: 6.5, y: 19))
        pathPath.line(to: NSPoint(x: 23.5, y: 19))
        pathPath.line(to: NSPoint(x: 23.5, y: 26))
        pathPath.curve(to: NSPoint(x: 22.5, y: 27), controlPoint1: NSPoint(x: 23.5, y: 26.55), controlPoint2: NSPoint(x: 23.05, y: 27))
        pathPath.line(to: NSPoint(x: 7.5, y: 27))
        pathPath.line(to: NSPoint(x: 7.5, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.5, y: 14))
        pathPath.curve(to: NSPoint(x: 24.5, y: 15), controlPoint1: NSPoint(x: 24.05, y: 14), controlPoint2: NSPoint(x: 24.5, y: 14.45))
        pathPath.curve(to: NSPoint(x: 23.5, y: 16), controlPoint1: NSPoint(x: 24.5, y: 15.55), controlPoint2: NSPoint(x: 24.05, y: 16))
        pathPath.curve(to: NSPoint(x: 22.5, y: 15), controlPoint1: NSPoint(x: 22.95, y: 16), controlPoint2: NSPoint(x: 22.5, y: 15.55))
        pathPath.curve(to: NSPoint(x: 23.5, y: 14), controlPoint1: NSPoint(x: 22.5, y: 14.45), controlPoint2: NSPoint(x: 22.95, y: 14))
        pathPath.line(to: NSPoint(x: 23.5, y: 14))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 10))
        pathPath.line(to: NSPoint(x: 5.5, y: 2))
        pathPath.line(to: NSPoint(x: 6.5, y: 2))
        pathPath.line(to: NSPoint(x: 6.5, y: 10))
        pathPath.line(to: NSPoint(x: 5.5, y: 10))
        pathPath.line(to: NSPoint(x: 5.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7.5, y: 10))
        pathPath.line(to: NSPoint(x: 7.5, y: 3))
        pathPath.line(to: NSPoint(x: 8.5, y: 3))
        pathPath.line(to: NSPoint(x: 8.5, y: 10))
        pathPath.line(to: NSPoint(x: 7.5, y: 10))
        pathPath.line(to: NSPoint(x: 7.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 10))
        pathPath.line(to: NSPoint(x: 9.5, y: 2))
        pathPath.line(to: NSPoint(x: 10.5, y: 2))
        pathPath.line(to: NSPoint(x: 10.5, y: 10))
        pathPath.line(to: NSPoint(x: 9.5, y: 10))
        pathPath.line(to: NSPoint(x: 9.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 10))
        pathPath.line(to: NSPoint(x: 11.5, y: 4))
        pathPath.line(to: NSPoint(x: 12.5, y: 4))
        pathPath.line(to: NSPoint(x: 12.5, y: 10))
        pathPath.line(to: NSPoint(x: 11.5, y: 10))
        pathPath.line(to: NSPoint(x: 11.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 10))
        pathPath.line(to: NSPoint(x: 13.5, y: 3))
        pathPath.line(to: NSPoint(x: 14.5, y: 3))
        pathPath.line(to: NSPoint(x: 14.5, y: 10))
        pathPath.line(to: NSPoint(x: 13.5, y: 10))
        pathPath.line(to: NSPoint(x: 13.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15.5, y: 10))
        pathPath.line(to: NSPoint(x: 15.5, y: 4))
        pathPath.line(to: NSPoint(x: 16.5, y: 4))
        pathPath.line(to: NSPoint(x: 16.5, y: 10))
        pathPath.line(to: NSPoint(x: 15.5, y: 10))
        pathPath.line(to: NSPoint(x: 15.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 10))
        pathPath.line(to: NSPoint(x: 17.5, y: 2))
        pathPath.line(to: NSPoint(x: 18.5, y: 2))
        pathPath.line(to: NSPoint(x: 18.5, y: 10))
        pathPath.line(to: NSPoint(x: 17.5, y: 10))
        pathPath.line(to: NSPoint(x: 17.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 10))
        pathPath.line(to: NSPoint(x: 21.5, y: 3))
        pathPath.line(to: NSPoint(x: 22.5, y: 3))
        pathPath.line(to: NSPoint(x: 22.5, y: 10))
        pathPath.line(to: NSPoint(x: 21.5, y: 10))
        pathPath.line(to: NSPoint(x: 21.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 23.5, y: 10))
        pathPath.line(to: NSPoint(x: 23.5, y: 2))
        pathPath.line(to: NSPoint(x: 24.5, y: 2))
        pathPath.line(to: NSPoint(x: 24.5, y: 10))
        pathPath.line(to: NSPoint(x: 23.5, y: 10))
        pathPath.line(to: NSPoint(x: 23.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.5, y: 10))
        pathPath.line(to: NSPoint(x: 19.5, y: 4))
        pathPath.line(to: NSPoint(x: 20.5, y: 4))
        pathPath.line(to: NSPoint(x: 20.5, y: 10))
        pathPath.line(to: NSPoint(x: 19.5, y: 10))
        pathPath.line(to: NSPoint(x: 19.5, y: 10))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentScan(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 1.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 21.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 24.5, y: 3.49), controlPoint1: NSPoint(x: 23.61, y: 1.5), controlPoint2: NSPoint(x: 24.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 3.49))
        pathPath.curve(to: NSPoint(x: 22.5, y: 2.5), controlPoint1: NSPoint(x: 23.5, y: 2.94), controlPoint2: NSPoint(x: 23.05, y: 2.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 21.5, y: 1.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 15.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 1.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 14.5, y: 1.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 11.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 11.5, y: 1.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 1.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 3.51), controlPoint1: NSPoint(x: 6.39, y: 1.5), controlPoint2: NSPoint(x: 5.5, y: 2.4))
        pathPath.line(to: NSPoint(x: 5.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 3.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 2.5), controlPoint1: NSPoint(x: 6.5, y: 2.95), controlPoint2: NSPoint(x: 6.95, y: 2.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 2.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 1.5))
        pathPath.line(to: NSPoint(x: 8.5, y: 1.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 8.5))
        pathPath.line(to: NSPoint(x: 5.5, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 25.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 11.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 28.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 28.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 26.49), controlPoint1: NSPoint(x: 6.4, y: 28.5), controlPoint2: NSPoint(x: 5.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 5.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 26.5))
        pathPath.curve(to: NSPoint(x: 7.5, y: 27.5), controlPoint1: NSPoint(x: 6.5, y: 27.04), controlPoint2: NSPoint(x: 6.95, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 27.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 20.5), controlPoint1: NSPoint(x: 17.5, y: 21.39), controlPoint2: NSPoint(x: 18.39, y: 20.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 24.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 22.51))
        pathPath.curve(to: NSPoint(x: 19.5, y: 21.5), controlPoint1: NSPoint(x: 18.5, y: 21.95), controlPoint2: NSPoint(x: 18.95, y: 21.5))
        pathPath.line(to: NSPoint(x: 23.2, y: 21.5))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.line(to: NSPoint(x: 18.5, y: 27))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudDownload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 5.3))
        pathPath.line(to: NSPoint(x: 11.25, y: 8.55))
        pathPath.line(to: NSPoint(x: 10.5, y: 7.8))
        pathPath.line(to: NSPoint(x: 15, y: 3.3))
        pathPath.line(to: NSPoint(x: 19.5, y: 7.8))
        pathPath.line(to: NSPoint(x: 18.75, y: 8.55))
        pathPath.line(to: NSPoint(x: 15.5, y: 5.3))
        pathPath.line(to: NSPoint(x: 15.5, y: 16.55))
        pathPath.line(to: NSPoint(x: 14.5, y: 16.55))
        pathPath.line(to: NSPoint(x: 14.5, y: 5.3))
        pathPath.line(to: NSPoint(x: 14.5, y: 5.3))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 10.55))
        pathPath.line(to: NSPoint(x: 6.5, y: 10.55))
        pathPath.curve(to: NSPoint(x: 2.5, y: 14.55), controlPoint1: NSPoint(x: 4.3, y: 10.55), controlPoint2: NSPoint(x: 2.5, y: 12.34))
        pathPath.curve(to: NSPoint(x: 5.6, y: 18.45), controlPoint1: NSPoint(x: 2.5, y: 16.45), controlPoint2: NSPoint(x: 3.82, y: 18.04))
        pathPath.line(to: NSPoint(x: 5.6, y: 18.45))
        pathPath.curve(to: NSPoint(x: 5.5, y: 19.55), controlPoint1: NSPoint(x: 5.53, y: 18.81), controlPoint2: NSPoint(x: 5.5, y: 19.17))
        pathPath.curve(to: NSPoint(x: 11.5, y: 25.55), controlPoint1: NSPoint(x: 5.5, y: 22.86), controlPoint2: NSPoint(x: 8.19, y: 25.55))
        pathPath.curve(to: NSPoint(x: 17.16, y: 21.54), controlPoint1: NSPoint(x: 14.12, y: 25.55), controlPoint2: NSPoint(x: 16.34, y: 23.88))
        pathPath.curve(to: NSPoint(x: 20, y: 22.55), controlPoint1: NSPoint(x: 17.94, y: 22.17), controlPoint2: NSPoint(x: 18.92, y: 22.55))
        pathPath.curve(to: NSPoint(x: 24.48, y: 18.43), controlPoint1: NSPoint(x: 22.36, y: 22.55), controlPoint2: NSPoint(x: 24.29, y: 20.74))
        pathPath.line(to: NSPoint(x: 24.48, y: 18.43))
        pathPath.curve(to: NSPoint(x: 27.5, y: 14.55), controlPoint1: NSPoint(x: 26.21, y: 17.99), controlPoint2: NSPoint(x: 27.5, y: 16.42))
        pathPath.curve(to: NSPoint(x: 23.5, y: 10.55), controlPoint1: NSPoint(x: 27.5, y: 12.35), controlPoint2: NSPoint(x: 25.71, y: 10.55))
        pathPath.line(to: NSPoint(x: 16.5, y: 10.55))
        pathPath.line(to: NSPoint(x: 16.5, y: 9.55))
        pathPath.line(to: NSPoint(x: 23.5, y: 9.55))
        pathPath.curve(to: NSPoint(x: 28.5, y: 14.55), controlPoint1: NSPoint(x: 26.26, y: 9.55), controlPoint2: NSPoint(x: 28.5, y: 11.79))
        pathPath.curve(to: NSPoint(x: 25.38, y: 19.18), controlPoint1: NSPoint(x: 28.5, y: 16.65), controlPoint2: NSPoint(x: 27.21, y: 18.44))
        pathPath.line(to: NSPoint(x: 25.38, y: 19.18))
        pathPath.curve(to: NSPoint(x: 20, y: 23.55), controlPoint1: NSPoint(x: 24.86, y: 21.68), controlPoint2: NSPoint(x: 22.65, y: 23.55))
        pathPath.curve(to: NSPoint(x: 17.59, y: 23), controlPoint1: NSPoint(x: 19.14, y: 23.55), controlPoint2: NSPoint(x: 18.32, y: 23.35))
        pathPath.curve(to: NSPoint(x: 11.5, y: 26.55), controlPoint1: NSPoint(x: 16.39, y: 25.12), controlPoint2: NSPoint(x: 14.11, y: 26.55))
        pathPath.curve(to: NSPoint(x: 4.5, y: 19.55), controlPoint1: NSPoint(x: 7.63, y: 26.55), controlPoint2: NSPoint(x: 4.5, y: 23.42))
        pathPath.curve(to: NSPoint(x: 4.51, y: 19.14), controlPoint1: NSPoint(x: 4.5, y: 19.41), controlPoint2: NSPoint(x: 4.5, y: 19.27))
        pathPath.line(to: NSPoint(x: 4.51, y: 19.14))
        pathPath.curve(to: NSPoint(x: 1.5, y: 14.55), controlPoint1: NSPoint(x: 2.74, y: 18.37), controlPoint2: NSPoint(x: 1.5, y: 16.6))
        pathPath.curve(to: NSPoint(x: 6.5, y: 9.55), controlPoint1: NSPoint(x: 1.5, y: 11.79), controlPoint2: NSPoint(x: 3.73, y: 9.55))
        pathPath.line(to: NSPoint(x: 13.5, y: 9.55))
        pathPath.line(to: NSPoint(x: 13.5, y: 10.55))
        pathPath.line(to: NSPoint(x: 13.5, y: 10.55))
        pathPath.line(to: NSPoint(x: 13.5, y: 10.55))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudUpload(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 14.5, y: 15))
        pathPath.line(to: NSPoint(x: 11.25, y: 11.75))
        pathPath.line(to: NSPoint(x: 10.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 15, y: 17))
        pathPath.line(to: NSPoint(x: 19.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 18.75, y: 11.75))
        pathPath.line(to: NSPoint(x: 15.5, y: 15))
        pathPath.line(to: NSPoint(x: 15.5, y: 4))
        pathPath.line(to: NSPoint(x: 14.5, y: 4))
        pathPath.line(to: NSPoint(x: 14.5, y: 15))
        pathPath.line(to: NSPoint(x: 14.5, y: 15))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 10))
        pathPath.line(to: NSPoint(x: 6.5, y: 10))
        pathPath.curve(to: NSPoint(x: 2.5, y: 14), controlPoint1: NSPoint(x: 4.3, y: 10), controlPoint2: NSPoint(x: 2.5, y: 11.79))
        pathPath.curve(to: NSPoint(x: 5.6, y: 17.9), controlPoint1: NSPoint(x: 2.5, y: 15.9), controlPoint2: NSPoint(x: 3.82, y: 17.49))
        pathPath.line(to: NSPoint(x: 5.6, y: 17.9))
        pathPath.curve(to: NSPoint(x: 5.5, y: 19), controlPoint1: NSPoint(x: 5.53, y: 18.26), controlPoint2: NSPoint(x: 5.5, y: 18.62))
        pathPath.curve(to: NSPoint(x: 11.5, y: 25), controlPoint1: NSPoint(x: 5.5, y: 22.31), controlPoint2: NSPoint(x: 8.19, y: 25))
        pathPath.curve(to: NSPoint(x: 17.16, y: 20.99), controlPoint1: NSPoint(x: 14.12, y: 25), controlPoint2: NSPoint(x: 16.34, y: 23.33))
        pathPath.curve(to: NSPoint(x: 20, y: 22), controlPoint1: NSPoint(x: 17.94, y: 21.62), controlPoint2: NSPoint(x: 18.92, y: 22))
        pathPath.curve(to: NSPoint(x: 24.48, y: 17.88), controlPoint1: NSPoint(x: 22.36, y: 22), controlPoint2: NSPoint(x: 24.29, y: 20.19))
        pathPath.line(to: NSPoint(x: 24.48, y: 17.88))
        pathPath.curve(to: NSPoint(x: 27.5, y: 14), controlPoint1: NSPoint(x: 26.21, y: 17.44), controlPoint2: NSPoint(x: 27.5, y: 15.87))
        pathPath.curve(to: NSPoint(x: 23.5, y: 10), controlPoint1: NSPoint(x: 27.5, y: 11.8), controlPoint2: NSPoint(x: 25.71, y: 10))
        pathPath.line(to: NSPoint(x: 16.5, y: 10))
        pathPath.line(to: NSPoint(x: 16.5, y: 9))
        pathPath.line(to: NSPoint(x: 23.5, y: 9))
        pathPath.curve(to: NSPoint(x: 28.5, y: 14), controlPoint1: NSPoint(x: 26.26, y: 9), controlPoint2: NSPoint(x: 28.5, y: 11.24))
        pathPath.curve(to: NSPoint(x: 25.38, y: 18.63), controlPoint1: NSPoint(x: 28.5, y: 16.1), controlPoint2: NSPoint(x: 27.21, y: 17.89))
        pathPath.line(to: NSPoint(x: 25.38, y: 18.63))
        pathPath.curve(to: NSPoint(x: 20, y: 23), controlPoint1: NSPoint(x: 24.86, y: 21.13), controlPoint2: NSPoint(x: 22.65, y: 23))
        pathPath.curve(to: NSPoint(x: 17.59, y: 22.45), controlPoint1: NSPoint(x: 19.14, y: 23), controlPoint2: NSPoint(x: 18.32, y: 22.8))
        pathPath.curve(to: NSPoint(x: 11.5, y: 26), controlPoint1: NSPoint(x: 16.39, y: 24.57), controlPoint2: NSPoint(x: 14.11, y: 26))
        pathPath.curve(to: NSPoint(x: 4.5, y: 19), controlPoint1: NSPoint(x: 7.63, y: 26), controlPoint2: NSPoint(x: 4.5, y: 22.87))
        pathPath.curve(to: NSPoint(x: 4.51, y: 18.59), controlPoint1: NSPoint(x: 4.5, y: 18.86), controlPoint2: NSPoint(x: 4.5, y: 18.72))
        pathPath.line(to: NSPoint(x: 4.51, y: 18.59))
        pathPath.curve(to: NSPoint(x: 1.5, y: 14), controlPoint1: NSPoint(x: 2.74, y: 17.82), controlPoint2: NSPoint(x: 1.5, y: 16.05))
        pathPath.curve(to: NSPoint(x: 6.5, y: 9), controlPoint1: NSPoint(x: 1.5, y: 11.24), controlPoint2: NSPoint(x: 3.73, y: 9))
        pathPath.line(to: NSPoint(x: 13.5, y: 9))
        pathPath.line(to: NSPoint(x: 13.5, y: 10))
        pathPath.line(to: NSPoint(x: 13.5, y: 10))
        pathPath.line(to: NSPoint(x: 13.5, y: 10))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloudError(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 10.86, y: 9))
        pathPath.line(to: NSPoint(x: 6.5, y: 9))
        pathPath.curve(to: NSPoint(x: 2.5, y: 13), controlPoint1: NSPoint(x: 4.3, y: 9), controlPoint2: NSPoint(x: 2.5, y: 10.79))
        pathPath.curve(to: NSPoint(x: 5.6, y: 16.9), controlPoint1: NSPoint(x: 2.5, y: 14.9), controlPoint2: NSPoint(x: 3.82, y: 16.49))
        pathPath.line(to: NSPoint(x: 5.6, y: 16.9))
        pathPath.curve(to: NSPoint(x: 5.5, y: 18), controlPoint1: NSPoint(x: 5.53, y: 17.26), controlPoint2: NSPoint(x: 5.5, y: 17.62))
        pathPath.curve(to: NSPoint(x: 11.5, y: 24), controlPoint1: NSPoint(x: 5.5, y: 21.31), controlPoint2: NSPoint(x: 8.19, y: 24))
        pathPath.curve(to: NSPoint(x: 17.16, y: 19.99), controlPoint1: NSPoint(x: 14.12, y: 24), controlPoint2: NSPoint(x: 16.34, y: 22.33))
        pathPath.curve(to: NSPoint(x: 20, y: 21), controlPoint1: NSPoint(x: 17.94, y: 20.62), controlPoint2: NSPoint(x: 18.92, y: 21))
        pathPath.curve(to: NSPoint(x: 24.48, y: 16.88), controlPoint1: NSPoint(x: 22.36, y: 21), controlPoint2: NSPoint(x: 24.29, y: 19.19))
        pathPath.line(to: NSPoint(x: 24.48, y: 16.88))
        pathPath.curve(to: NSPoint(x: 27.5, y: 13), controlPoint1: NSPoint(x: 26.21, y: 16.44), controlPoint2: NSPoint(x: 27.5, y: 14.87))
        pathPath.curve(to: NSPoint(x: 23.5, y: 9), controlPoint1: NSPoint(x: 27.5, y: 10.8), controlPoint2: NSPoint(x: 25.71, y: 9))
        pathPath.line(to: NSPoint(x: 19.14, y: 9))
        pathPath.line(to: NSPoint(x: 15, y: 16))
        pathPath.line(to: NSPoint(x: 10.86, y: 9))
        pathPath.line(to: NSPoint(x: 10.86, y: 9))
        pathPath.line(to: NSPoint(x: 10.86, y: 9))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.73, y: 8))
        pathPath.line(to: NSPoint(x: 23.5, y: 8))
        pathPath.curve(to: NSPoint(x: 28.5, y: 13), controlPoint1: NSPoint(x: 26.26, y: 8), controlPoint2: NSPoint(x: 28.5, y: 10.24))
        pathPath.curve(to: NSPoint(x: 25.38, y: 17.63), controlPoint1: NSPoint(x: 28.5, y: 15.1), controlPoint2: NSPoint(x: 27.21, y: 16.89))
        pathPath.line(to: NSPoint(x: 25.38, y: 17.63))
        pathPath.curve(to: NSPoint(x: 20, y: 22), controlPoint1: NSPoint(x: 24.86, y: 20.13), controlPoint2: NSPoint(x: 22.65, y: 22))
        pathPath.curve(to: NSPoint(x: 17.59, y: 21.45), controlPoint1: NSPoint(x: 19.14, y: 22), controlPoint2: NSPoint(x: 18.32, y: 21.8))
        pathPath.curve(to: NSPoint(x: 11.5, y: 25), controlPoint1: NSPoint(x: 16.39, y: 23.57), controlPoint2: NSPoint(x: 14.11, y: 25))
        pathPath.curve(to: NSPoint(x: 4.5, y: 18), controlPoint1: NSPoint(x: 7.63, y: 25), controlPoint2: NSPoint(x: 4.5, y: 21.87))
        pathPath.curve(to: NSPoint(x: 4.51, y: 17.59), controlPoint1: NSPoint(x: 4.5, y: 17.86), controlPoint2: NSPoint(x: 4.5, y: 17.72))
        pathPath.line(to: NSPoint(x: 4.51, y: 17.59))
        pathPath.curve(to: NSPoint(x: 1.5, y: 13), controlPoint1: NSPoint(x: 2.74, y: 16.82), controlPoint2: NSPoint(x: 1.5, y: 15.05))
        pathPath.curve(to: NSPoint(x: 6.5, y: 8), controlPoint1: NSPoint(x: 1.5, y: 10.24), controlPoint2: NSPoint(x: 3.73, y: 8))
        pathPath.line(to: NSPoint(x: 10.27, y: 8))
        pathPath.line(to: NSPoint(x: 8.5, y: 5))
        pathPath.line(to: NSPoint(x: 21.5, y: 5))
        pathPath.line(to: NSPoint(x: 19.73, y: 8))
        pathPath.line(to: NSPoint(x: 19.73, y: 8))
        pathPath.line(to: NSPoint(x: 19.73, y: 8))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 14))
        pathPath.line(to: NSPoint(x: 19.75, y: 6))
        pathPath.line(to: NSPoint(x: 10.25, y: 6))
        pathPath.line(to: NSPoint(x: 15, y: 14))
        pathPath.line(to: NSPoint(x: 15, y: 14))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 12))
        pathPath.line(to: NSPoint(x: 14.5, y: 9))
        pathPath.line(to: NSPoint(x: 15.5, y: 9))
        pathPath.line(to: NSPoint(x: 15.5, y: 12))
        pathPath.line(to: NSPoint(x: 14.5, y: 12))
        pathPath.line(to: NSPoint(x: 14.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 8))
        pathPath.line(to: NSPoint(x: 14.5, y: 7))
        pathPath.line(to: NSPoint(x: 15.5, y: 7))
        pathPath.line(to: NSPoint(x: 15.5, y: 8))
        pathPath.line(to: NSPoint(x: 14.5, y: 8))
        pathPath.line(to: NSPoint(x: 14.5, y: 8))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCloud(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 5.6, y: 15.4))
        pathPath.curve(to: NSPoint(x: 2.5, y: 11.5), controlPoint1: NSPoint(x: 3.82, y: 14.99), controlPoint2: NSPoint(x: 2.5, y: 13.4))
        pathPath.curve(to: NSPoint(x: 6.5, y: 7.5), controlPoint1: NSPoint(x: 2.5, y: 9.29), controlPoint2: NSPoint(x: 4.3, y: 7.5))
        pathPath.line(to: NSPoint(x: 23.5, y: 7.5))
        pathPath.curve(to: NSPoint(x: 27.5, y: 11.5), controlPoint1: NSPoint(x: 25.71, y: 7.5), controlPoint2: NSPoint(x: 27.5, y: 9.3))
        pathPath.curve(to: NSPoint(x: 24.48, y: 15.38), controlPoint1: NSPoint(x: 27.5, y: 13.37), controlPoint2: NSPoint(x: 26.21, y: 14.94))
        pathPath.line(to: NSPoint(x: 24.48, y: 15.38))
        pathPath.curve(to: NSPoint(x: 20, y: 19.5), controlPoint1: NSPoint(x: 24.29, y: 17.69), controlPoint2: NSPoint(x: 22.36, y: 19.5))
        pathPath.curve(to: NSPoint(x: 17.16, y: 18.49), controlPoint1: NSPoint(x: 18.92, y: 19.5), controlPoint2: NSPoint(x: 17.94, y: 19.12))
        pathPath.curve(to: NSPoint(x: 11.5, y: 22.5), controlPoint1: NSPoint(x: 16.34, y: 20.83), controlPoint2: NSPoint(x: 14.12, y: 22.5))
        pathPath.curve(to: NSPoint(x: 5.5, y: 16.5), controlPoint1: NSPoint(x: 8.19, y: 22.5), controlPoint2: NSPoint(x: 5.5, y: 19.81))
        pathPath.curve(to: NSPoint(x: 5.6, y: 15.4), controlPoint1: NSPoint(x: 5.5, y: 16.12), controlPoint2: NSPoint(x: 5.53, y: 15.76))
        pathPath.line(to: NSPoint(x: 5.6, y: 15.4))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 25.38, y: 16.13))
        pathPath.curve(to: NSPoint(x: 28.5, y: 11.5), controlPoint1: NSPoint(x: 27.21, y: 15.39), controlPoint2: NSPoint(x: 28.5, y: 13.6))
        pathPath.curve(to: NSPoint(x: 23.5, y: 6.5), controlPoint1: NSPoint(x: 28.5, y: 8.74), controlPoint2: NSPoint(x: 26.26, y: 6.5))
        pathPath.line(to: NSPoint(x: 6.5, y: 6.5))
        pathPath.curve(to: NSPoint(x: 1.5, y: 11.5), controlPoint1: NSPoint(x: 3.73, y: 6.5), controlPoint2: NSPoint(x: 1.5, y: 8.74))
        pathPath.curve(to: NSPoint(x: 4.51, y: 16.09), controlPoint1: NSPoint(x: 1.5, y: 13.55), controlPoint2: NSPoint(x: 2.74, y: 15.32))
        pathPath.line(to: NSPoint(x: 4.51, y: 16.09))
        pathPath.curve(to: NSPoint(x: 4.5, y: 16.5), controlPoint1: NSPoint(x: 4.5, y: 16.22), controlPoint2: NSPoint(x: 4.5, y: 16.36))
        pathPath.curve(to: NSPoint(x: 11.5, y: 23.5), controlPoint1: NSPoint(x: 4.5, y: 20.37), controlPoint2: NSPoint(x: 7.63, y: 23.5))
        pathPath.curve(to: NSPoint(x: 17.59, y: 19.95), controlPoint1: NSPoint(x: 14.11, y: 23.5), controlPoint2: NSPoint(x: 16.39, y: 22.07))
        pathPath.curve(to: NSPoint(x: 20, y: 20.5), controlPoint1: NSPoint(x: 18.32, y: 20.3), controlPoint2: NSPoint(x: 19.14, y: 20.5))
        pathPath.curve(to: NSPoint(x: 25.38, y: 16.13), controlPoint1: NSPoint(x: 22.65, y: 20.5), controlPoint2: NSPoint(x: 24.86, y: 18.63))
        pathPath.line(to: NSPoint(x: 25.38, y: 16.13))
        pathPath.line(to: NSPoint(x: 25.38, y: 16.13))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawInboxFilled(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 19.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 26.28, y: 15.5))
        pathPath.line(to: NSPoint(x: 21.9, y: 22.5))
        pathPath.line(to: NSPoint(x: 8.1, y: 22.5))
        pathPath.line(to: NSPoint(x: 3.72, y: 15.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 10.5, y: 13.5))
        pathPath.curve(to: NSPoint(x: 12.5, y: 11.5), controlPoint1: NSPoint(x: 10.5, y: 12.4), controlPoint2: NSPoint(x: 11.4, y: 11.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 11.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 13.5), controlPoint1: NSPoint(x: 18.61, y: 11.5), controlPoint2: NSPoint(x: 19.5, y: 12.39))
        pathPath.line(to: NSPoint(x: 19.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 15.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 7.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 13))
        pathPath.curve(to: NSPoint(x: 12, y: 10.5), controlPoint1: NSPoint(x: 9.5, y: 11.62), controlPoint2: NSPoint(x: 10.62, y: 10.5))
        pathPath.line(to: NSPoint(x: 18, y: 10.5))
        pathPath.curve(to: NSPoint(x: 20.5, y: 13), controlPoint1: NSPoint(x: 19.38, y: 10.5), controlPoint2: NSPoint(x: 20.5, y: 11.61))
        pathPath.line(to: NSPoint(x: 20.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 14.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 2.5, y: 14.75))
        pathPath.line(to: NSPoint(x: 2.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 7.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 23.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 15.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 14.75))
        pathPath.line(to: NSPoint(x: 27.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 6.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 14.75))
        pathPath.line(to: NSPoint(x: 2.5, y: 14.75))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 8.9, y: 20.5))
        pathPath.line(to: NSPoint(x: 21.1, y: 20.5))
        pathPath.line(to: NSPoint(x: 20.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 21.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.2, y: 19.5))
        pathPath.line(to: NSPoint(x: 7.6, y: 18.5))
        pathPath.line(to: NSPoint(x: 22.4, y: 18.5))
        pathPath.line(to: NSPoint(x: 21.8, y: 19.5))
        pathPath.line(to: NSPoint(x: 8.2, y: 19.5))
        pathPath.line(to: NSPoint(x: 8.2, y: 19.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7, y: 17.5))
        pathPath.line(to: NSPoint(x: 6.4, y: 16.5))
        pathPath.line(to: NSPoint(x: 23.6, y: 16.5))
        pathPath.line(to: NSPoint(x: 23, y: 17.5))
        pathPath.line(to: NSPoint(x: 7, y: 17.5))
        pathPath.line(to: NSPoint(x: 7, y: 17.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawPen(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 17, y: 6.5))
        pathPath.line(to: NSPoint(x: 17, y: 22.5))
        pathPath.line(to: NSPoint(x: 17, y: 22.5))
        pathPath.line(to: NSPoint(x: 13, y: 22.5))
        pathPath.line(to: NSPoint(x: 13, y: 6.5))
        pathPath.line(to: NSPoint(x: 17, y: 6.5))
        pathPath.line(to: NSPoint(x: 17, y: 6.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.77, y: 5.5))
        pathPath.line(to: NSPoint(x: 15, y: 3.2))
        pathPath.line(to: NSPoint(x: 13.23, y: 5.5))
        pathPath.line(to: NSPoint(x: 16.77, y: 5.5))
        pathPath.line(to: NSPoint(x: 16.77, y: 5.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17, y: 23.5))
        pathPath.line(to: NSPoint(x: 17, y: 26.5))
        pathPath.curve(to: NSPoint(x: 15.99, y: 27.5), controlPoint1: NSPoint(x: 17, y: 27.05), controlPoint2: NSPoint(x: 16.56, y: 27.5))
        pathPath.line(to: NSPoint(x: 14.01, y: 27.5))
        pathPath.curve(to: NSPoint(x: 13, y: 26.5), controlPoint1: NSPoint(x: 13.45, y: 27.5), controlPoint2: NSPoint(x: 13, y: 27.05))
        pathPath.line(to: NSPoint(x: 13, y: 23.5))
        pathPath.line(to: NSPoint(x: 17, y: 23.5))
        pathPath.line(to: NSPoint(x: 17, y: 23.5))
        pathPath.line(to: NSPoint(x: 17, y: 23.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 1.5))
        pathPath.line(to: NSPoint(x: 18, y: 5.5))
        pathPath.line(to: NSPoint(x: 18, y: 26.5))
        pathPath.curve(to: NSPoint(x: 16, y: 28.5), controlPoint1: NSPoint(x: 18, y: 27.6), controlPoint2: NSPoint(x: 17.1, y: 28.5))
        pathPath.line(to: NSPoint(x: 14, y: 28.5))
        pathPath.curve(to: NSPoint(x: 12, y: 26.5), controlPoint1: NSPoint(x: 12.89, y: 28.5), controlPoint2: NSPoint(x: 12, y: 27.6))
        pathPath.line(to: NSPoint(x: 12, y: 5.5))
        pathPath.line(to: NSPoint(x: 15, y: 1.5))
        pathPath.line(to: NSPoint(x: 15, y: 1.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawPenAngled(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 21.3, y: 18.73))
        pathPath.line(to: NSPoint(x: 10.11, y: 7.53))
        pathPath.line(to: NSPoint(x: 10.11, y: 7.53))
        pathPath.line(to: NSPoint(x: 7.53, y: 10.11))
        pathPath.line(to: NSPoint(x: 18.73, y: 21.31))
        pathPath.line(to: NSPoint(x: 21.3, y: 18.73))
        pathPath.line(to: NSPoint(x: 21.3, y: 18.73))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 22.01, y: 19.43))
        pathPath.line(to: NSPoint(x: 23.72, y: 21.15))
        pathPath.curve(to: NSPoint(x: 23.72, y: 22.55), controlPoint1: NSPoint(x: 24.11, y: 21.53), controlPoint2: NSPoint(x: 24.1, y: 22.16))
        pathPath.line(to: NSPoint(x: 22.55, y: 23.72))
        pathPath.curve(to: NSPoint(x: 21.14, y: 23.72), controlPoint1: NSPoint(x: 22.16, y: 24.11), controlPoint2: NSPoint(x: 21.53, y: 24.11))
        pathPath.line(to: NSPoint(x: 19.43, y: 22.01))
        pathPath.line(to: NSPoint(x: 22.01, y: 19.43))
        pathPath.line(to: NSPoint(x: 22.01, y: 19.43))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.89, y: 9.35))
        pathPath.line(to: NSPoint(x: 6.25, y: 6.27))
        pathPath.line(to: NSPoint(x: 9.36, y: 6.88))
        pathPath.line(to: NSPoint(x: 6.89, y: 9.35))
        pathPath.line(to: NSPoint(x: 6.89, y: 9.35))
        pathPath.line(to: NSPoint(x: 6.89, y: 9.35))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.99, y: 9.96))
        pathPath.line(to: NSPoint(x: 5, y: 5))
        pathPath.line(to: NSPoint(x: 9.96, y: 5.99))
        pathPath.line(to: NSPoint(x: 24.41, y: 20.45))
        pathPath.curve(to: NSPoint(x: 24.42, y: 23.25), controlPoint1: NSPoint(x: 25.19, y: 21.22), controlPoint2: NSPoint(x: 25.19, y: 22.48))
        pathPath.line(to: NSPoint(x: 23.25, y: 24.42))
        pathPath.curve(to: NSPoint(x: 20.45, y: 24.41), controlPoint1: NSPoint(x: 22.48, y: 25.19), controlPoint2: NSPoint(x: 21.23, y: 25.2))
        pathPath.line(to: NSPoint(x: 5.99, y: 9.96))
        pathPath.line(to: NSPoint(x: 5.99, y: 9.96))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentEdit(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 24.8, y: 19.35))
        pathPath.line(to: NSPoint(x: 13.58, y: 8.05))
        pathPath.line(to: NSPoint(x: 13.58, y: 8.05))
        pathPath.line(to: NSPoint(x: 10.99, y: 10.66))
        pathPath.line(to: NSPoint(x: 22.21, y: 21.95))
        pathPath.line(to: NSPoint(x: 24.8, y: 19.35))
        pathPath.line(to: NSPoint(x: 24.8, y: 19.35))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 25.5, y: 20.06))
        pathPath.line(to: NSPoint(x: 27.22, y: 21.79))
        pathPath.curve(to: NSPoint(x: 27.21, y: 23.2), controlPoint1: NSPoint(x: 27.6, y: 22.18), controlPoint2: NSPoint(x: 27.6, y: 22.81))
        pathPath.line(to: NSPoint(x: 26.04, y: 24.38))
        pathPath.curve(to: NSPoint(x: 24.63, y: 24.38), controlPoint1: NSPoint(x: 25.65, y: 24.77), controlPoint2: NSPoint(x: 25.02, y: 24.78))
        pathPath.line(to: NSPoint(x: 22.92, y: 22.66))
        pathPath.line(to: NSPoint(x: 25.5, y: 20.06))
        pathPath.line(to: NSPoint(x: 25.5, y: 20.06))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.35, y: 9.89))
        pathPath.line(to: NSPoint(x: 9.71, y: 6.78))
        pathPath.line(to: NSPoint(x: 12.83, y: 7.39))
        pathPath.line(to: NSPoint(x: 10.35, y: 9.89))
        pathPath.line(to: NSPoint(x: 10.35, y: 9.89))
        pathPath.line(to: NSPoint(x: 10.35, y: 9.89))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.38, y: 21.5))
        pathPath.line(to: NSPoint(x: 20.38, y: 21.5))
        pathPath.line(to: NSPoint(x: 14.42, y: 28.5))
        pathPath.line(to: NSPoint(x: 3.49, y: 28.5))
        pathPath.curve(to: NSPoint(x: 1.5, y: 26.49), controlPoint1: NSPoint(x: 2.39, y: 28.5), controlPoint2: NSPoint(x: 1.5, y: 27.6))
        pathPath.line(to: NSPoint(x: 1.5, y: 3.51))
        pathPath.curve(to: NSPoint(x: 3.48, y: 1.5), controlPoint1: NSPoint(x: 1.5, y: 2.4), controlPoint2: NSPoint(x: 2.39, y: 1.5))
        pathPath.line(to: NSPoint(x: 18.4, y: 1.5))
        pathPath.curve(to: NSPoint(x: 20.38, y: 3.49), controlPoint1: NSPoint(x: 19.49, y: 1.5), controlPoint2: NSPoint(x: 20.38, y: 2.4))
        pathPath.line(to: NSPoint(x: 20.38, y: 13.5))
        pathPath.line(to: NSPoint(x: 27.91, y: 21.08))
        pathPath.curve(to: NSPoint(x: 27.92, y: 23.91), controlPoint1: NSPoint(x: 28.69, y: 21.86), controlPoint2: NSPoint(x: 28.69, y: 23.13))
        pathPath.line(to: NSPoint(x: 26.75, y: 25.09))
        pathPath.curve(to: NSPoint(x: 23.94, y: 25.08), controlPoint1: NSPoint(x: 25.98, y: 25.87), controlPoint2: NSPoint(x: 24.73, y: 25.87))
        pathPath.line(to: NSPoint(x: 20.38, y: 21.5))
        pathPath.line(to: NSPoint(x: 20.38, y: 21.5))
        pathPath.line(to: NSPoint(x: 20.38, y: 21.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 19.39, y: 12.5))
        pathPath.line(to: NSPoint(x: 19.39, y: 3.49))
        pathPath.curve(to: NSPoint(x: 18.39, y: 2.5), controlPoint1: NSPoint(x: 19.39, y: 2.94), controlPoint2: NSPoint(x: 18.94, y: 2.5))
        pathPath.line(to: NSPoint(x: 3.49, y: 2.5))
        pathPath.curve(to: NSPoint(x: 2.49, y: 3.5), controlPoint1: NSPoint(x: 2.95, y: 2.5), controlPoint2: NSPoint(x: 2.49, y: 2.95))
        pathPath.line(to: NSPoint(x: 2.49, y: 26.5))
        pathPath.curve(to: NSPoint(x: 3.48, y: 27.5), controlPoint1: NSPoint(x: 2.49, y: 27.04), controlPoint2: NSPoint(x: 2.94, y: 27.5))
        pathPath.line(to: NSPoint(x: 13.42, y: 27.5))
        pathPath.line(to: NSPoint(x: 13.42, y: 22.51))
        pathPath.curve(to: NSPoint(x: 15.41, y: 20.5), controlPoint1: NSPoint(x: 13.42, y: 21.39), controlPoint2: NSPoint(x: 14.31, y: 20.5))
        pathPath.line(to: NSPoint(x: 19.39, y: 20.5))
        pathPath.line(to: NSPoint(x: 9.45, y: 10.5))
        pathPath.line(to: NSPoint(x: 8.46, y: 5.5))
        pathPath.line(to: NSPoint(x: 13.42, y: 6.5))
        pathPath.line(to: NSPoint(x: 19.39, y: 12.5))
        pathPath.line(to: NSPoint(x: 19.39, y: 12.5))
        pathPath.line(to: NSPoint(x: 19.39, y: 12.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.42, y: 27))
        pathPath.line(to: NSPoint(x: 14.42, y: 22.51))
        pathPath.curve(to: NSPoint(x: 15.41, y: 21.5), controlPoint1: NSPoint(x: 14.42, y: 21.95), controlPoint2: NSPoint(x: 14.87, y: 21.5))
        pathPath.line(to: NSPoint(x: 19.09, y: 21.5))
        pathPath.line(to: NSPoint(x: 14.42, y: 27))
        pathPath.line(to: NSPoint(x: 14.42, y: 27))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawDocumentCertificate(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 20.21, y: 6.61))
        pathPath.line(to: NSPoint(x: 20.21, y: 5.62))
        pathPath.line(to: NSPoint(x: 22.11, y: 5.62))
        pathPath.curve(to: NSPoint(x: 23.05, y: 6.56), controlPoint1: NSPoint(x: 22.63, y: 5.62), controlPoint2: NSPoint(x: 23.05, y: 6.04))
        pathPath.line(to: NSPoint(x: 23.05, y: 22.5))
        pathPath.line(to: NSPoint(x: 19.26, y: 22.5))
        pathPath.curve(to: NSPoint(x: 17.37, y: 24.38), controlPoint1: NSPoint(x: 18.22, y: 22.5), controlPoint2: NSPoint(x: 17.37, y: 23.33))
        pathPath.line(to: NSPoint(x: 17.37, y: 29.06))
        pathPath.line(to: NSPoint(x: 7.89, y: 29.06))
        pathPath.curve(to: NSPoint(x: 6.95, y: 28.13), controlPoint1: NSPoint(x: 7.37, y: 29.06), controlPoint2: NSPoint(x: 6.95, y: 28.64))
        pathPath.line(to: NSPoint(x: 6.95, y: 6.56))
        pathPath.curve(to: NSPoint(x: 7.89, y: 5.62), controlPoint1: NSPoint(x: 6.95, y: 6.04), controlPoint2: NSPoint(x: 7.38, y: 5.62))
        pathPath.line(to: NSPoint(x: 15.47, y: 5.62))
        pathPath.line(to: NSPoint(x: 15.47, y: 5.62))
        pathPath.line(to: NSPoint(x: 15.47, y: 6.61))
        pathPath.curve(to: NSPoint(x: 14.53, y: 8.91), controlPoint1: NSPoint(x: 14.89, y: 7.2), controlPoint2: NSPoint(x: 14.53, y: 8.01))
        pathPath.curve(to: NSPoint(x: 17.84, y: 12.19), controlPoint1: NSPoint(x: 14.53, y: 10.72), controlPoint2: NSPoint(x: 16.01, y: 12.19))
        pathPath.curve(to: NSPoint(x: 21.16, y: 8.91), controlPoint1: NSPoint(x: 19.67, y: 12.19), controlPoint2: NSPoint(x: 21.16, y: 10.72))
        pathPath.curve(to: NSPoint(x: 20.21, y: 6.61), controlPoint1: NSPoint(x: 21.16, y: 8.01), controlPoint2: NSPoint(x: 20.8, y: 7.2))
        pathPath.line(to: NSPoint(x: 20.21, y: 6.61))
        pathPath.line(to: NSPoint(x: 20.21, y: 6.61))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.42, y: 5.94))
        pathPath.line(to: NSPoint(x: 16.42, y: 2.25))
        pathPath.line(to: NSPoint(x: 17.84, y: 3.66))
        pathPath.line(to: NSPoint(x: 19.26, y: 2.25))
        pathPath.line(to: NSPoint(x: 19.26, y: 5.94))
        pathPath.curve(to: NSPoint(x: 17.84, y: 5.62), controlPoint1: NSPoint(x: 18.83, y: 5.74), controlPoint2: NSPoint(x: 18.35, y: 5.62))
        pathPath.curve(to: NSPoint(x: 16.42, y: 5.94), controlPoint1: NSPoint(x: 17.33, y: 5.62), controlPoint2: NSPoint(x: 16.85, y: 5.74))
        pathPath.line(to: NSPoint(x: 16.42, y: 5.94))
        pathPath.line(to: NSPoint(x: 16.42, y: 5.94))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 20.21, y: 4.69))
        pathPath.line(to: NSPoint(x: 22.11, y: 4.69))
        pathPath.curve(to: NSPoint(x: 24, y: 6.55), controlPoint1: NSPoint(x: 23.15, y: 4.69), controlPoint2: NSPoint(x: 24, y: 5.53))
        pathPath.line(to: NSPoint(x: 24, y: 23.44))
        pathPath.line(to: NSPoint(x: 24, y: 23.44))
        pathPath.line(to: NSPoint(x: 18.32, y: 30))
        pathPath.line(to: NSPoint(x: 7.9, y: 30))
        pathPath.curve(to: NSPoint(x: 6, y: 28.12), controlPoint1: NSPoint(x: 6.85, y: 30), controlPoint2: NSPoint(x: 6, y: 29.16))
        pathPath.line(to: NSPoint(x: 6, y: 6.57))
        pathPath.curve(to: NSPoint(x: 7.89, y: 4.69), controlPoint1: NSPoint(x: 6, y: 5.53), controlPoint2: NSPoint(x: 6.84, y: 4.69))
        pathPath.line(to: NSPoint(x: 15.47, y: 4.69))
        pathPath.line(to: NSPoint(x: 15.47, y: 0))
        pathPath.line(to: NSPoint(x: 17.84, y: 2.34))
        pathPath.line(to: NSPoint(x: 20.21, y: 0))
        pathPath.line(to: NSPoint(x: 20.21, y: 4.69))
        pathPath.line(to: NSPoint(x: 20.21, y: 4.69))
        pathPath.line(to: NSPoint(x: 20.21, y: 4.69))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18.32, y: 28.59))
        pathPath.line(to: NSPoint(x: 18.32, y: 24.38))
        pathPath.curve(to: NSPoint(x: 19.26, y: 23.44), controlPoint1: NSPoint(x: 18.32, y: 23.86), controlPoint2: NSPoint(x: 18.74, y: 23.44))
        pathPath.line(to: NSPoint(x: 22.77, y: 23.44))
        pathPath.line(to: NSPoint(x: 18.32, y: 28.59))
        pathPath.line(to: NSPoint(x: 18.32, y: 28.59))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.84, y: 23.44))
        pathPath.line(to: NSPoint(x: 8.84, y: 22.5))
        pathPath.line(to: NSPoint(x: 15.47, y: 22.5))
        pathPath.line(to: NSPoint(x: 15.47, y: 23.44))
        pathPath.line(to: NSPoint(x: 8.84, y: 23.44))
        pathPath.line(to: NSPoint(x: 8.84, y: 23.44))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.84, y: 26.25))
        pathPath.line(to: NSPoint(x: 8.84, y: 25.31))
        pathPath.line(to: NSPoint(x: 15.47, y: 25.31))
        pathPath.line(to: NSPoint(x: 15.47, y: 26.25))
        pathPath.line(to: NSPoint(x: 8.84, y: 26.25))
        pathPath.line(to: NSPoint(x: 8.84, y: 26.25))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.84, y: 20.62))
        pathPath.line(to: NSPoint(x: 8.84, y: 19.69))
        pathPath.line(to: NSPoint(x: 21.16, y: 19.69))
        pathPath.line(to: NSPoint(x: 21.16, y: 20.62))
        pathPath.line(to: NSPoint(x: 8.84, y: 20.62))
        pathPath.line(to: NSPoint(x: 8.84, y: 20.62))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.84, y: 17.81))
        pathPath.line(to: NSPoint(x: 8.84, y: 16.88))
        pathPath.line(to: NSPoint(x: 21.16, y: 16.88))
        pathPath.line(to: NSPoint(x: 21.16, y: 17.81))
        pathPath.line(to: NSPoint(x: 8.84, y: 17.81))
        pathPath.line(to: NSPoint(x: 8.84, y: 17.81))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.84, y: 15))
        pathPath.line(to: NSPoint(x: 8.84, y: 14.06))
        pathPath.line(to: NSPoint(x: 21.16, y: 14.06))
        pathPath.line(to: NSPoint(x: 21.16, y: 15))
        pathPath.line(to: NSPoint(x: 8.84, y: 15))
        pathPath.line(to: NSPoint(x: 8.84, y: 15))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.84, y: 6.56))
        pathPath.curve(to: NSPoint(x: 20.21, y: 8.91), controlPoint1: NSPoint(x: 19.15, y: 6.56), controlPoint2: NSPoint(x: 20.21, y: 7.61))
        pathPath.curve(to: NSPoint(x: 17.84, y: 11.25), controlPoint1: NSPoint(x: 20.21, y: 10.2), controlPoint2: NSPoint(x: 19.15, y: 11.25))
        pathPath.curve(to: NSPoint(x: 15.47, y: 8.91), controlPoint1: NSPoint(x: 16.53, y: 11.25), controlPoint2: NSPoint(x: 15.47, y: 10.2))
        pathPath.curve(to: NSPoint(x: 17.84, y: 6.56), controlPoint1: NSPoint(x: 15.47, y: 7.61), controlPoint2: NSPoint(x: 16.53, y: 6.56))
        pathPath.line(to: NSPoint(x: 17.84, y: 6.56))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawCertificate(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 12, y: 11.55))
        pathPath.line(to: NSPoint(x: 12, y: 9.5))
        pathPath.line(to: NSPoint(x: 25, y: 9.5))
        pathPath.curve(to: NSPoint(x: 26, y: 10.51), controlPoint1: NSPoint(x: 25.55, y: 9.5), controlPoint2: NSPoint(x: 26, y: 9.95))
        pathPath.line(to: NSPoint(x: 26, y: 23.49))
        pathPath.curve(to: NSPoint(x: 25, y: 24.5), controlPoint1: NSPoint(x: 26, y: 24.05), controlPoint2: NSPoint(x: 25.56, y: 24.5))
        pathPath.line(to: NSPoint(x: 5, y: 24.5))
        pathPath.curve(to: NSPoint(x: 4, y: 23.49), controlPoint1: NSPoint(x: 4.45, y: 24.5), controlPoint2: NSPoint(x: 4, y: 24.05))
        pathPath.line(to: NSPoint(x: 4, y: 10.51))
        pathPath.curve(to: NSPoint(x: 5, y: 9.5), controlPoint1: NSPoint(x: 4, y: 9.95), controlPoint2: NSPoint(x: 4.44, y: 9.5))
        pathPath.line(to: NSPoint(x: 7, y: 9.5))
        pathPath.line(to: NSPoint(x: 7, y: 11.55))
        pathPath.curve(to: NSPoint(x: 6, y: 14), controlPoint1: NSPoint(x: 6.38, y: 12.18), controlPoint2: NSPoint(x: 6, y: 13.05))
        pathPath.curve(to: NSPoint(x: 9.5, y: 17.5), controlPoint1: NSPoint(x: 6, y: 15.93), controlPoint2: NSPoint(x: 7.57, y: 17.5))
        pathPath.curve(to: NSPoint(x: 13, y: 14), controlPoint1: NSPoint(x: 11.43, y: 17.5), controlPoint2: NSPoint(x: 13, y: 15.93))
        pathPath.curve(to: NSPoint(x: 12, y: 11.55), controlPoint1: NSPoint(x: 13, y: 13.05), controlPoint2: NSPoint(x: 12.62, y: 12.18))
        pathPath.line(to: NSPoint(x: 12, y: 11.55))
        pathPath.line(to: NSPoint(x: 12, y: 11.55))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8, y: 10.84))
        pathPath.line(to: NSPoint(x: 8, y: 6.9))
        pathPath.line(to: NSPoint(x: 9.5, y: 8.4))
        pathPath.line(to: NSPoint(x: 11, y: 6.9))
        pathPath.line(to: NSPoint(x: 11, y: 10.84))
        pathPath.curve(to: NSPoint(x: 9.5, y: 10.5), controlPoint1: NSPoint(x: 10.55, y: 10.62), controlPoint2: NSPoint(x: 10.04, y: 10.5))
        pathPath.curve(to: NSPoint(x: 8, y: 10.84), controlPoint1: NSPoint(x: 8.96, y: 10.5), controlPoint2: NSPoint(x: 8.45, y: 10.62))
        pathPath.line(to: NSPoint(x: 8, y: 10.84))
        pathPath.line(to: NSPoint(x: 8, y: 10.84))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7, y: 8.5))
        pathPath.line(to: NSPoint(x: 5, y: 8.5))
        pathPath.curve(to: NSPoint(x: 3, y: 10.5), controlPoint1: NSPoint(x: 3.9, y: 8.5), controlPoint2: NSPoint(x: 3, y: 9.4))
        pathPath.line(to: NSPoint(x: 3, y: 23.5))
        pathPath.curve(to: NSPoint(x: 5, y: 25.5), controlPoint1: NSPoint(x: 3, y: 24.61), controlPoint2: NSPoint(x: 3.9, y: 25.5))
        pathPath.line(to: NSPoint(x: 25, y: 25.5))
        pathPath.curve(to: NSPoint(x: 27, y: 23.5), controlPoint1: NSPoint(x: 26.1, y: 25.5), controlPoint2: NSPoint(x: 27, y: 24.6))
        pathPath.line(to: NSPoint(x: 27, y: 10.5))
        pathPath.curve(to: NSPoint(x: 25, y: 8.5), controlPoint1: NSPoint(x: 27, y: 9.39), controlPoint2: NSPoint(x: 26.1, y: 8.5))
        pathPath.line(to: NSPoint(x: 12, y: 8.5))
        pathPath.line(to: NSPoint(x: 12, y: 4.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 7))
        pathPath.line(to: NSPoint(x: 7, y: 4.5))
        pathPath.line(to: NSPoint(x: 7, y: 8.5))
        pathPath.line(to: NSPoint(x: 7, y: 8.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6, y: 20.5))
        pathPath.line(to: NSPoint(x: 6, y: 19.5))
        pathPath.line(to: NSPoint(x: 24, y: 19.5))
        pathPath.line(to: NSPoint(x: 24, y: 20.5))
        pathPath.line(to: NSPoint(x: 6, y: 20.5))
        pathPath.line(to: NSPoint(x: 6, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 15, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 16.5))
        pathPath.line(to: NSPoint(x: 24, y: 16.5))
        pathPath.line(to: NSPoint(x: 24, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 17.5))
        pathPath.line(to: NSPoint(x: 15, y: 17.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 18, y: 14.5))
        pathPath.line(to: NSPoint(x: 18, y: 13.5))
        pathPath.line(to: NSPoint(x: 24, y: 13.5))
        pathPath.line(to: NSPoint(x: 24, y: 14.5))
        pathPath.line(to: NSPoint(x: 18, y: 14.5))
        pathPath.line(to: NSPoint(x: 18, y: 14.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 11.5))
        pathPath.curve(to: NSPoint(x: 12, y: 14), controlPoint1: NSPoint(x: 10.88, y: 11.5), controlPoint2: NSPoint(x: 12, y: 12.62))
        pathPath.curve(to: NSPoint(x: 9.5, y: 16.5), controlPoint1: NSPoint(x: 12, y: 15.38), controlPoint2: NSPoint(x: 10.88, y: 16.5))
        pathPath.curve(to: NSPoint(x: 7, y: 14), controlPoint1: NSPoint(x: 8.12, y: 16.5), controlPoint2: NSPoint(x: 7, y: 15.38))
        pathPath.curve(to: NSPoint(x: 9.5, y: 11.5), controlPoint1: NSPoint(x: 7, y: 12.62), controlPoint2: NSPoint(x: 8.12, y: 11.5))
        pathPath.line(to: NSPoint(x: 9.5, y: 11.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawPackage2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 17.5, y: 18))
        pathPath.line(to: NSPoint(x: 26.5, y: 18))
        pathPath.line(to: NSPoint(x: 26.5, y: 4))
        pathPath.line(to: NSPoint(x: 3.5, y: 4))
        pathPath.line(to: NSPoint(x: 3.5, y: 18))
        pathPath.line(to: NSPoint(x: 12.5, y: 18))
        pathPath.line(to: NSPoint(x: 12.5, y: 11))
        pathPath.line(to: NSPoint(x: 17.5, y: 11))
        pathPath.line(to: NSPoint(x: 17.5, y: 18))
        pathPath.line(to: NSPoint(x: 17.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 8.1, y: 26))
        pathPath.line(to: NSPoint(x: 3.72, y: 19))
        pathPath.line(to: NSPoint(x: 12.5, y: 19))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.line(to: NSPoint(x: 13.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 16.5, y: 26))
        pathPath.line(to: NSPoint(x: 21.9, y: 26))
        pathPath.line(to: NSPoint(x: 26.28, y: 19))
        pathPath.line(to: NSPoint(x: 17.5, y: 19))
        pathPath.line(to: NSPoint(x: 16.5, y: 26))
        pathPath.line(to: NSPoint(x: 16.5, y: 26))
        pathPath.line(to: NSPoint(x: 16.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 2.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 19))
        pathPath.line(to: NSPoint(x: 7.5, y: 27))
        pathPath.line(to: NSPoint(x: 22.5, y: 27))
        pathPath.line(to: NSPoint(x: 27.5, y: 19))
        pathPath.line(to: NSPoint(x: 27.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14.5, y: 26))
        pathPath.line(to: NSPoint(x: 13.5, y: 19))
        pathPath.line(to: NSPoint(x: 16.5, y: 19))
        pathPath.line(to: NSPoint(x: 15.5, y: 26))
        pathPath.line(to: NSPoint(x: 14.5, y: 26))
        pathPath.line(to: NSPoint(x: 14.5, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 13.5, y: 18))
        pathPath.line(to: NSPoint(x: 13.5, y: 12))
        pathPath.line(to: NSPoint(x: 16.5, y: 12))
        pathPath.line(to: NSPoint(x: 16.5, y: 18))
        pathPath.line(to: NSPoint(x: 13.5, y: 18))
        pathPath.line(to: NSPoint(x: 13.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 10))
        pathPath.line(to: NSPoint(x: 4.5, y: 9))
        pathPath.line(to: NSPoint(x: 11.5, y: 9))
        pathPath.line(to: NSPoint(x: 11.5, y: 10))
        pathPath.line(to: NSPoint(x: 4.5, y: 10))
        pathPath.line(to: NSPoint(x: 4.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 6))
        pathPath.line(to: NSPoint(x: 4.5, y: 5))
        pathPath.line(to: NSPoint(x: 11.5, y: 5))
        pathPath.line(to: NSPoint(x: 11.5, y: 6))
        pathPath.line(to: NSPoint(x: 4.5, y: 6))
        pathPath.line(to: NSPoint(x: 4.5, y: 6))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 8))
        pathPath.line(to: NSPoint(x: 4.5, y: 7))
        pathPath.line(to: NSPoint(x: 9.5, y: 7))
        pathPath.line(to: NSPoint(x: 9.5, y: 8))
        pathPath.line(to: NSPoint(x: 4.5, y: 8))
        pathPath.line(to: NSPoint(x: 4.5, y: 8))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBox(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 2.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 19))
        pathPath.line(to: NSPoint(x: 7.5, y: 27))
        pathPath.line(to: NSPoint(x: 22.5, y: 27))
        pathPath.line(to: NSPoint(x: 27.5, y: 19))
        pathPath.line(to: NSPoint(x: 27.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.72, y: 19))
        pathPath.line(to: NSPoint(x: 8.1, y: 26))
        pathPath.line(to: NSPoint(x: 21.9, y: 26))
        pathPath.line(to: NSPoint(x: 26.28, y: 19))
        pathPath.line(to: NSPoint(x: 3.72, y: 19))
        pathPath.line(to: NSPoint(x: 3.72, y: 19))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.5, y: 18))
        pathPath.line(to: NSPoint(x: 3.5, y: 4))
        pathPath.line(to: NSPoint(x: 26.5, y: 4))
        pathPath.line(to: NSPoint(x: 26.5, y: 18))
        pathPath.line(to: NSPoint(x: 3.5, y: 18))
        pathPath.line(to: NSPoint(x: 3.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 13))
        pathPath.curve(to: NSPoint(x: 10.5, y: 11), controlPoint1: NSPoint(x: 11.39, y: 13), controlPoint2: NSPoint(x: 10.5, y: 12.11))
        pathPath.curve(to: NSPoint(x: 12.5, y: 9), controlPoint1: NSPoint(x: 10.5, y: 9.9), controlPoint2: NSPoint(x: 11.4, y: 9))
        pathPath.line(to: NSPoint(x: 17.5, y: 9))
        pathPath.curve(to: NSPoint(x: 19.5, y: 11), controlPoint1: NSPoint(x: 18.61, y: 9), controlPoint2: NSPoint(x: 19.5, y: 9.89))
        pathPath.curve(to: NSPoint(x: 17.5, y: 13), controlPoint1: NSPoint(x: 19.5, y: 12.1), controlPoint2: NSPoint(x: 18.6, y: 13))
        pathPath.line(to: NSPoint(x: 12.5, y: 13))
        pathPath.line(to: NSPoint(x: 12.5, y: 13))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 12))
        pathPath.curve(to: NSPoint(x: 11.5, y: 11), controlPoint1: NSPoint(x: 11.95, y: 12), controlPoint2: NSPoint(x: 11.5, y: 11.56))
        pathPath.curve(to: NSPoint(x: 12.5, y: 10), controlPoint1: NSPoint(x: 11.5, y: 10.45), controlPoint2: NSPoint(x: 11.94, y: 10))
        pathPath.line(to: NSPoint(x: 17.5, y: 10))
        pathPath.curve(to: NSPoint(x: 18.5, y: 11), controlPoint1: NSPoint(x: 18.05, y: 10), controlPoint2: NSPoint(x: 18.5, y: 10.44))
        pathPath.curve(to: NSPoint(x: 17.5, y: 12), controlPoint1: NSPoint(x: 18.5, y: 11.55), controlPoint2: NSPoint(x: 18.06, y: 12))
        pathPath.line(to: NSPoint(x: 12.5, y: 12))
        pathPath.line(to: NSPoint(x: 12.5, y: 12))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBoxFilled(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 2.5, y: 19))
        pathPath.line(to: NSPoint(x: 7.5, y: 27))
        pathPath.line(to: NSPoint(x: 22.5, y: 27))
        pathPath.line(to: NSPoint(x: 27.5, y: 19))
        pathPath.line(to: NSPoint(x: 27.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 3))
        pathPath.line(to: NSPoint(x: 2.5, y: 19))
        pathPath.line(to: NSPoint(x: 2.5, y: 19))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 26.28, y: 19))
        pathPath.line(to: NSPoint(x: 21.9, y: 26))
        pathPath.line(to: NSPoint(x: 8.1, y: 26))
        pathPath.line(to: NSPoint(x: 3.72, y: 19))
        pathPath.line(to: NSPoint(x: 26.28, y: 19))
        pathPath.line(to: NSPoint(x: 26.28, y: 19))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.5, y: 18))
        pathPath.line(to: NSPoint(x: 3.5, y: 4))
        pathPath.line(to: NSPoint(x: 26.5, y: 4))
        pathPath.line(to: NSPoint(x: 26.5, y: 18))
        pathPath.line(to: NSPoint(x: 3.5, y: 18))
        pathPath.line(to: NSPoint(x: 3.5, y: 18))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 13))
        pathPath.curve(to: NSPoint(x: 10.5, y: 11), controlPoint1: NSPoint(x: 11.39, y: 13), controlPoint2: NSPoint(x: 10.5, y: 12.11))
        pathPath.curve(to: NSPoint(x: 12.5, y: 9), controlPoint1: NSPoint(x: 10.5, y: 9.9), controlPoint2: NSPoint(x: 11.4, y: 9))
        pathPath.line(to: NSPoint(x: 17.5, y: 9))
        pathPath.curve(to: NSPoint(x: 19.5, y: 11), controlPoint1: NSPoint(x: 18.61, y: 9), controlPoint2: NSPoint(x: 19.5, y: 9.89))
        pathPath.curve(to: NSPoint(x: 17.5, y: 13), controlPoint1: NSPoint(x: 19.5, y: 12.1), controlPoint2: NSPoint(x: 18.6, y: 13))
        pathPath.line(to: NSPoint(x: 12.5, y: 13))
        pathPath.line(to: NSPoint(x: 12.5, y: 13))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 12))
        pathPath.curve(to: NSPoint(x: 11.5, y: 11), controlPoint1: NSPoint(x: 11.95, y: 12), controlPoint2: NSPoint(x: 11.5, y: 11.56))
        pathPath.curve(to: NSPoint(x: 12.5, y: 10), controlPoint1: NSPoint(x: 11.5, y: 10.45), controlPoint2: NSPoint(x: 11.94, y: 10))
        pathPath.line(to: NSPoint(x: 17.5, y: 10))
        pathPath.curve(to: NSPoint(x: 18.5, y: 11), controlPoint1: NSPoint(x: 18.05, y: 10), controlPoint2: NSPoint(x: 18.5, y: 10.44))
        pathPath.curve(to: NSPoint(x: 17.5, y: 12), controlPoint1: NSPoint(x: 18.5, y: 11.55), controlPoint2: NSPoint(x: 18.06, y: 12))
        pathPath.line(to: NSPoint(x: 12.5, y: 12))
        pathPath.line(to: NSPoint(x: 12.5, y: 12))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 9.5, y: 25))
        pathPath.line(to: NSPoint(x: 8.9, y: 24))
        pathPath.line(to: NSPoint(x: 21.1, y: 24))
        pathPath.line(to: NSPoint(x: 20.5, y: 25))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.line(to: NSPoint(x: 9.5, y: 25))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.2, y: 23))
        pathPath.line(to: NSPoint(x: 7.6, y: 22))
        pathPath.line(to: NSPoint(x: 22.4, y: 22))
        pathPath.line(to: NSPoint(x: 21.8, y: 23))
        pathPath.line(to: NSPoint(x: 8.2, y: 23))
        pathPath.line(to: NSPoint(x: 8.2, y: 23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 7, y: 21))
        pathPath.line(to: NSPoint(x: 6.4, y: 20))
        pathPath.line(to: NSPoint(x: 23.6, y: 20))
        pathPath.line(to: NSPoint(x: 23, y: 21))
        pathPath.line(to: NSPoint(x: 7, y: 21))
        pathPath.line(to: NSPoint(x: 7, y: 21))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBox2(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 2.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 21))
        pathPath.line(to: NSPoint(x: 7.5, y: 29))
        pathPath.line(to: NSPoint(x: 22.5, y: 29))
        pathPath.line(to: NSPoint(x: 27.5, y: 21))
        pathPath.line(to: NSPoint(x: 27.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 1))
        pathPath.line(to: NSPoint(x: 2.5, y: 1))
        pathPath.line(to: NSPoint(x: 2.5, y: 16.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 20.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 20.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.72, y: 21))
        pathPath.line(to: NSPoint(x: 8.1, y: 28))
        pathPath.line(to: NSPoint(x: 21.9, y: 28))
        pathPath.line(to: NSPoint(x: 26.28, y: 21))
        pathPath.line(to: NSPoint(x: 3.72, y: 21))
        pathPath.line(to: NSPoint(x: 3.72, y: 21))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.5, y: 16))
        pathPath.line(to: NSPoint(x: 3.5, y: 2))
        pathPath.line(to: NSPoint(x: 26.5, y: 2))
        pathPath.line(to: NSPoint(x: 26.5, y: 16))
        pathPath.line(to: NSPoint(x: 3.5, y: 16))
        pathPath.line(to: NSPoint(x: 3.5, y: 16))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 11))
        pathPath.curve(to: NSPoint(x: 10.5, y: 9), controlPoint1: NSPoint(x: 11.39, y: 11), controlPoint2: NSPoint(x: 10.5, y: 10.11))
        pathPath.curve(to: NSPoint(x: 12.5, y: 7), controlPoint1: NSPoint(x: 10.5, y: 7.9), controlPoint2: NSPoint(x: 11.4, y: 7))
        pathPath.line(to: NSPoint(x: 17.5, y: 7))
        pathPath.curve(to: NSPoint(x: 19.5, y: 9), controlPoint1: NSPoint(x: 18.61, y: 7), controlPoint2: NSPoint(x: 19.5, y: 7.89))
        pathPath.curve(to: NSPoint(x: 17.5, y: 11), controlPoint1: NSPoint(x: 19.5, y: 10.1), controlPoint2: NSPoint(x: 18.6, y: 11))
        pathPath.line(to: NSPoint(x: 12.5, y: 11))
        pathPath.line(to: NSPoint(x: 12.5, y: 11))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 10))
        pathPath.curve(to: NSPoint(x: 11.5, y: 9), controlPoint1: NSPoint(x: 11.95, y: 10), controlPoint2: NSPoint(x: 11.5, y: 9.56))
        pathPath.curve(to: NSPoint(x: 12.5, y: 8), controlPoint1: NSPoint(x: 11.5, y: 8.45), controlPoint2: NSPoint(x: 11.94, y: 8))
        pathPath.line(to: NSPoint(x: 17.5, y: 8))
        pathPath.curve(to: NSPoint(x: 18.5, y: 9), controlPoint1: NSPoint(x: 18.05, y: 8), controlPoint2: NSPoint(x: 18.5, y: 8.44))
        pathPath.curve(to: NSPoint(x: 17.5, y: 10), controlPoint1: NSPoint(x: 18.5, y: 9.55), controlPoint2: NSPoint(x: 18.06, y: 10))
        pathPath.line(to: NSPoint(x: 12.5, y: 10))
        pathPath.line(to: NSPoint(x: 12.5, y: 10))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.5, y: 20))
        pathPath.line(to: NSPoint(x: 3.5, y: 17))
        pathPath.line(to: NSPoint(x: 26.5, y: 17))
        pathPath.line(to: NSPoint(x: 26.5, y: 20))
        pathPath.line(to: NSPoint(x: 3.5, y: 20))
        pathPath.line(to: NSPoint(x: 3.5, y: 20))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBox3(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 3.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 28.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 28.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 1.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 1.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 2.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 25.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 13.5))
        pathPath.curve(to: NSPoint(x: 10.5, y: 11.5), controlPoint1: NSPoint(x: 11.39, y: 13.5), controlPoint2: NSPoint(x: 10.5, y: 12.61))
        pathPath.curve(to: NSPoint(x: 12.5, y: 9.5), controlPoint1: NSPoint(x: 10.5, y: 10.4), controlPoint2: NSPoint(x: 11.4, y: 9.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 9.5))
        pathPath.curve(to: NSPoint(x: 19.5, y: 11.5), controlPoint1: NSPoint(x: 18.61, y: 9.5), controlPoint2: NSPoint(x: 19.5, y: 10.39))
        pathPath.curve(to: NSPoint(x: 17.5, y: 13.5), controlPoint1: NSPoint(x: 19.5, y: 12.6), controlPoint2: NSPoint(x: 18.6, y: 13.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 13.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 13.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.5, y: 12.5))
        pathPath.curve(to: NSPoint(x: 11.5, y: 11.5), controlPoint1: NSPoint(x: 11.95, y: 12.5), controlPoint2: NSPoint(x: 11.5, y: 12.06))
        pathPath.curve(to: NSPoint(x: 12.5, y: 10.5), controlPoint1: NSPoint(x: 11.5, y: 10.95), controlPoint2: NSPoint(x: 11.94, y: 10.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 10.5))
        pathPath.curve(to: NSPoint(x: 18.5, y: 11.5), controlPoint1: NSPoint(x: 18.05, y: 10.5), controlPoint2: NSPoint(x: 18.5, y: 10.94))
        pathPath.curve(to: NSPoint(x: 17.5, y: 12.5), controlPoint1: NSPoint(x: 18.5, y: 12.05), controlPoint2: NSPoint(x: 18.06, y: 12.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 12.5, y: 12.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawBoxBookmark(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 22.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 25.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 4.5))
        pathPath.line(to: NSPoint(x: 4.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 16.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 19.5, y: 12.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 9.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 22.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 3.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 3.5))
        pathPath.line(to: NSPoint(x: 26.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 28.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 28.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 1.5, y: 26.5))
        pathPath.line(to: NSPoint(x: 1.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 3.5, y: 18.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 2.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 19.5))
        pathPath.line(to: NSPoint(x: 27.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 25.5))
        pathPath.line(to: NSPoint(x: 2.5, y: 25.5))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 17.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 11.9))
        pathPath.line(to: NSPoint(x: 19.5, y: 13.9))
        pathPath.line(to: NSPoint(x: 21.5, y: 11.9))
        pathPath.line(to: NSPoint(x: 21.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 18.5))
        pathPath.line(to: NSPoint(x: 17.5, y: 18.5))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTagCord(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 9.77, y: 25.48))
        pathPath.line(to: NSPoint(x: 15.01, y: 25.48))
        pathPath.line(to: NSPoint(x: 28.41, y: 12.09))
        pathPath.curve(to: NSPoint(x: 28.41, y: 9.26), controlPoint1: NSPoint(x: 29.19, y: 11.31), controlPoint2: NSPoint(x: 29.19, y: 10.04))
        pathPath.line(to: NSPoint(x: 21.23, y: 2.08))
        pathPath.curve(to: NSPoint(x: 18.4, y: 2.09), controlPoint1: NSPoint(x: 20.45, y: 1.3), controlPoint2: NSPoint(x: 19.18, y: 1.31))
        pathPath.line(to: NSPoint(x: 5, y: 15.47))
        pathPath.line(to: NSPoint(x: 5, y: 23.48))
        pathPath.curve(to: NSPoint(x: 6.54, y: 25.42), controlPoint1: NSPoint(x: 5, y: 24.43), controlPoint2: NSPoint(x: 5.66, y: 25.21))
        pathPath.curve(to: NSPoint(x: 6.93, y: 24.47), controlPoint1: NSPoint(x: 6.7, y: 25.16), controlPoint2: NSPoint(x: 6.84, y: 24.84))
        pathPath.curve(to: NSPoint(x: 6, y: 23.47), controlPoint1: NSPoint(x: 6.41, y: 24.43), controlPoint2: NSPoint(x: 6, y: 23.99))
        pathPath.line(to: NSPoint(x: 6, y: 15.97))
        pathPath.line(to: NSPoint(x: 19.12, y: 2.8))
        pathPath.curve(to: NSPoint(x: 20.52, y: 2.8), controlPoint1: NSPoint(x: 19.51, y: 2.41), controlPoint2: NSPoint(x: 20.14, y: 2.41))
        pathPath.line(to: NSPoint(x: 27.69, y: 10.01))
        pathPath.curve(to: NSPoint(x: 27.69, y: 11.42), controlPoint1: NSPoint(x: 28.08, y: 10.4), controlPoint2: NSPoint(x: 28.08, y: 11.03))
        pathPath.line(to: NSPoint(x: 14.51, y: 24.48))
        pathPath.line(to: NSPoint(x: 10, y: 24.48))
        pathPath.curve(to: NSPoint(x: 9.93, y: 24.83), controlPoint1: NSPoint(x: 9.98, y: 24.59), controlPoint2: NSPoint(x: 9.95, y: 24.71))
        pathPath.curve(to: NSPoint(x: 9.77, y: 25.48), controlPoint1: NSPoint(x: 9.88, y: 25.05), controlPoint2: NSPoint(x: 9.83, y: 25.27))
        pathPath.line(to: NSPoint(x: 9.77, y: 25.48))
        pathPath.line(to: NSPoint(x: 9.77, y: 25.48))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10.49, y: 22.47))
        pathPath.curve(to: NSPoint(x: 10.51, y: 22.47), controlPoint1: NSPoint(x: 10.5, y: 22.47), controlPoint2: NSPoint(x: 10.5, y: 22.47))
        pathPath.curve(to: NSPoint(x: 13.01, y: 19.97), controlPoint1: NSPoint(x: 11.89, y: 22.47), controlPoint2: NSPoint(x: 13.01, y: 21.36))
        pathPath.curve(to: NSPoint(x: 10.51, y: 17.47), controlPoint1: NSPoint(x: 13.01, y: 18.59), controlPoint2: NSPoint(x: 11.89, y: 17.47))
        pathPath.curve(to: NSPoint(x: 8.01, y: 19.97), controlPoint1: NSPoint(x: 9.13, y: 17.47), controlPoint2: NSPoint(x: 8.01, y: 18.59))
        pathPath.curve(to: NSPoint(x: 8.05, y: 20.44), controlPoint1: NSPoint(x: 8.01, y: 20.13), controlPoint2: NSPoint(x: 8.02, y: 20.29))
        pathPath.curve(to: NSPoint(x: 10.43, y: 18.47), controlPoint1: NSPoint(x: 8.63, y: 19.17), controlPoint2: NSPoint(x: 9.35, y: 18.6))
        pathPath.curve(to: NSPoint(x: 10.45, y: 18.48), controlPoint1: NSPoint(x: 10.44, y: 18.47), controlPoint2: NSPoint(x: 10.44, y: 18.47))
        pathPath.curve(to: NSPoint(x: 10.51, y: 18.47), controlPoint1: NSPoint(x: 10.47, y: 18.47), controlPoint2: NSPoint(x: 10.49, y: 18.47))
        pathPath.curve(to: NSPoint(x: 12.01, y: 19.97), controlPoint1: NSPoint(x: 11.34, y: 18.47), controlPoint2: NSPoint(x: 12.01, y: 19.15))
        pathPath.curve(to: NSPoint(x: 10.92, y: 21.42), controlPoint1: NSPoint(x: 12.01, y: 20.66), controlPoint2: NSPoint(x: 11.55, y: 21.24))
        pathPath.curve(to: NSPoint(x: 10.92, y: 21.43), controlPoint1: NSPoint(x: 10.92, y: 21.42), controlPoint2: NSPoint(x: 10.92, y: 21.43))
        pathPath.curve(to: NSPoint(x: 10.49, y: 22.47), controlPoint1: NSPoint(x: 10.79, y: 21.62), controlPoint2: NSPoint(x: 10.65, y: 21.96))
        pathPath.line(to: NSPoint(x: 10.49, y: 22.47))
        pathPath.line(to: NSPoint(x: 10.49, y: 22.47))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.95, y: 24.63))
        pathPath.curve(to: NSPoint(x: 1.58, y: 26.74), controlPoint1: NSPoint(x: 8.08, y: 29), controlPoint2: NSPoint(x: 3.39, y: 29.62))
        pathPath.curve(to: NSPoint(x: 4, y: 20.47), controlPoint1: NSPoint(x: 0.13, y: 24.44), controlPoint2: NSPoint(x: 1.56, y: 20.47))
        pathPath.line(to: NSPoint(x: 4, y: 21.47))
        pathPath.curve(to: NSPoint(x: 2.42, y: 26.21), controlPoint1: NSPoint(x: 2.45, y: 21.47), controlPoint2: NSPoint(x: 1.35, y: 24.5))
        pathPath.curve(to: NSPoint(x: 7.96, y: 24.44), controlPoint1: NSPoint(x: 3.77, y: 28.35), controlPoint2: NSPoint(x: 7.28, y: 27.89))
        pathPath.curve(to: NSPoint(x: 11.01, y: 19.47), controlPoint1: NSPoint(x: 8.77, y: 20.36), controlPoint2: NSPoint(x: 9.38, y: 19.47))
        pathPath.line(to: NSPoint(x: 11.01, y: 20.47))
        pathPath.curve(to: NSPoint(x: 8.95, y: 24.63), controlPoint1: NSPoint(x: 10.02, y: 20.47), controlPoint2: NSPoint(x: 9.67, y: 20.97))
        pathPath.line(to: NSPoint(x: 8.95, y: 24.63))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTag(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 13.01, y: 27))
        pathPath.line(to: NSPoint(x: 5, y: 27))
        pathPath.curve(to: NSPoint(x: 3, y: 25), controlPoint1: NSPoint(x: 3.9, y: 27), controlPoint2: NSPoint(x: 3, y: 26.11))
        pathPath.line(to: NSPoint(x: 3, y: 16.99))
        pathPath.line(to: NSPoint(x: 16.4, y: 3.59))
        pathPath.curve(to: NSPoint(x: 19.23, y: 3.58), controlPoint1: NSPoint(x: 17.18, y: 2.81), controlPoint2: NSPoint(x: 18.45, y: 2.8))
        pathPath.line(to: NSPoint(x: 26.42, y: 10.77))
        pathPath.curve(to: NSPoint(x: 26.41, y: 13.6), controlPoint1: NSPoint(x: 27.2, y: 11.55), controlPoint2: NSPoint(x: 27.19, y: 12.82))
        pathPath.line(to: NSPoint(x: 13.01, y: 27))
        pathPath.line(to: NSPoint(x: 13.01, y: 27))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 12.51, y: 26))
        pathPath.line(to: NSPoint(x: 5.01, y: 26))
        pathPath.curve(to: NSPoint(x: 4, y: 24.99), controlPoint1: NSPoint(x: 4.45, y: 26), controlPoint2: NSPoint(x: 4, y: 25.54))
        pathPath.line(to: NSPoint(x: 4, y: 17.49))
        pathPath.line(to: NSPoint(x: 17.12, y: 4.3))
        pathPath.curve(to: NSPoint(x: 18.52, y: 4.3), controlPoint1: NSPoint(x: 17.51, y: 3.91), controlPoint2: NSPoint(x: 18.14, y: 3.91))
        pathPath.line(to: NSPoint(x: 25.7, y: 11.52))
        pathPath.curve(to: NSPoint(x: 25.69, y: 12.93), controlPoint1: NSPoint(x: 26.08, y: 11.91), controlPoint2: NSPoint(x: 26.08, y: 12.54))
        pathPath.line(to: NSPoint(x: 12.51, y: 26))
        pathPath.line(to: NSPoint(x: 12.51, y: 26))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 18.99))
        pathPath.curve(to: NSPoint(x: 11.01, y: 21.49), controlPoint1: NSPoint(x: 9.89, y: 18.99), controlPoint2: NSPoint(x: 11.01, y: 20.11))
        pathPath.curve(to: NSPoint(x: 8.51, y: 24), controlPoint1: NSPoint(x: 11.01, y: 22.88), controlPoint2: NSPoint(x: 9.89, y: 24))
        pathPath.curve(to: NSPoint(x: 6, y: 21.49), controlPoint1: NSPoint(x: 7.12, y: 24), controlPoint2: NSPoint(x: 6, y: 22.88))
        pathPath.curve(to: NSPoint(x: 8.51, y: 18.99), controlPoint1: NSPoint(x: 6, y: 20.11), controlPoint2: NSPoint(x: 7.12, y: 18.99))
        pathPath.line(to: NSPoint(x: 8.51, y: 18.99))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 19.99))
        pathPath.curve(to: NSPoint(x: 10.01, y: 21.49), controlPoint1: NSPoint(x: 9.34, y: 19.99), controlPoint2: NSPoint(x: 10.01, y: 20.66))
        pathPath.curve(to: NSPoint(x: 8.51, y: 23), controlPoint1: NSPoint(x: 10.01, y: 22.32), controlPoint2: NSPoint(x: 9.34, y: 23))
        pathPath.curve(to: NSPoint(x: 7, y: 21.49), controlPoint1: NSPoint(x: 7.68, y: 23), controlPoint2: NSPoint(x: 7, y: 22.32))
        pathPath.curve(to: NSPoint(x: 8.51, y: 19.99), controlPoint1: NSPoint(x: 7, y: 20.66), controlPoint2: NSPoint(x: 7.68, y: 19.99))
        pathPath.line(to: NSPoint(x: 8.51, y: 19.99))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTags(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 4.77, y: 26.47))
        pathPath.line(to: NSPoint(x: 3.5, y: 26.47))
        pathPath.curve(to: NSPoint(x: 1.5, y: 24.47), controlPoint1: NSPoint(x: 2.4, y: 26.47), controlPoint2: NSPoint(x: 1.5, y: 25.58))
        pathPath.line(to: NSPoint(x: 1.5, y: 16.47))
        pathPath.line(to: NSPoint(x: 14.88, y: 3.09))
        pathPath.curve(to: NSPoint(x: 17.71, y: 3.08), controlPoint1: NSPoint(x: 15.66, y: 2.31), controlPoint2: NSPoint(x: 16.93, y: 2.3))
        pathPath.line(to: NSPoint(x: 18.36, y: 3.73))
        pathPath.curve(to: NSPoint(x: 20.71, y: 4.08), controlPoint1: NSPoint(x: 19.12, y: 3.33), controlPoint2: NSPoint(x: 20.08, y: 3.45))
        pathPath.line(to: NSPoint(x: 27.89, y: 11.26))
        pathPath.curve(to: NSPoint(x: 27.88, y: 14.09), controlPoint1: NSPoint(x: 28.67, y: 12.04), controlPoint2: NSPoint(x: 28.66, y: 13.31))
        pathPath.line(to: NSPoint(x: 14.5, y: 27.47))
        pathPath.line(to: NSPoint(x: 6.5, y: 27.47))
        pathPath.curve(to: NSPoint(x: 4.77, y: 26.47), controlPoint1: NSPoint(x: 5.76, y: 27.47), controlPoint2: NSPoint(x: 5.11, y: 27.07))
        pathPath.line(to: NSPoint(x: 4.77, y: 26.47))
        pathPath.line(to: NSPoint(x: 4.77, y: 26.47))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 4.5, y: 25.47))
        pathPath.line(to: NSPoint(x: 3.51, y: 25.47))
        pathPath.curve(to: NSPoint(x: 2.5, y: 24.46), controlPoint1: NSPoint(x: 2.95, y: 25.47), controlPoint2: NSPoint(x: 2.5, y: 25.01))
        pathPath.line(to: NSPoint(x: 2.5, y: 16.97))
        pathPath.line(to: NSPoint(x: 15.6, y: 3.8))
        pathPath.curve(to: NSPoint(x: 17, y: 3.8), controlPoint1: NSPoint(x: 15.99, y: 3.41), controlPoint2: NSPoint(x: 16.62, y: 3.41))
        pathPath.line(to: NSPoint(x: 17.59, y: 4.38))
        pathPath.line(to: NSPoint(x: 4.5, y: 17.47))
        pathPath.line(to: NSPoint(x: 4.5, y: 25.47))
        pathPath.line(to: NSPoint(x: 4.5, y: 25.47))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 14, y: 26.47))
        pathPath.line(to: NSPoint(x: 6.51, y: 26.47))
        pathPath.curve(to: NSPoint(x: 5.5, y: 25.46), controlPoint1: NSPoint(x: 5.95, y: 26.47), controlPoint2: NSPoint(x: 5.5, y: 26.01))
        pathPath.line(to: NSPoint(x: 5.5, y: 17.97))
        pathPath.line(to: NSPoint(x: 18.6, y: 4.8))
        pathPath.curve(to: NSPoint(x: 20, y: 4.8), controlPoint1: NSPoint(x: 18.99, y: 4.41), controlPoint2: NSPoint(x: 19.62, y: 4.41))
        pathPath.line(to: NSPoint(x: 27.17, y: 12.01))
        pathPath.curve(to: NSPoint(x: 27.16, y: 13.42), controlPoint1: NSPoint(x: 27.56, y: 12.4), controlPoint2: NSPoint(x: 27.55, y: 13.03))
        pathPath.line(to: NSPoint(x: 14, y: 26.47))
        pathPath.line(to: NSPoint(x: 14, y: 26.47))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10, y: 19.47))
        pathPath.curve(to: NSPoint(x: 12.5, y: 21.97), controlPoint1: NSPoint(x: 11.38, y: 19.47), controlPoint2: NSPoint(x: 12.5, y: 20.59))
        pathPath.curve(to: NSPoint(x: 10, y: 24.47), controlPoint1: NSPoint(x: 12.5, y: 23.35), controlPoint2: NSPoint(x: 11.38, y: 24.47))
        pathPath.curve(to: NSPoint(x: 7.5, y: 21.97), controlPoint1: NSPoint(x: 8.62, y: 24.47), controlPoint2: NSPoint(x: 7.5, y: 23.35))
        pathPath.curve(to: NSPoint(x: 10, y: 19.47), controlPoint1: NSPoint(x: 7.5, y: 20.59), controlPoint2: NSPoint(x: 8.62, y: 19.47))
        pathPath.line(to: NSPoint(x: 10, y: 19.47))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 10, y: 20.47))
        pathPath.curve(to: NSPoint(x: 11.5, y: 21.97), controlPoint1: NSPoint(x: 10.83, y: 20.47), controlPoint2: NSPoint(x: 11.5, y: 21.14))
        pathPath.curve(to: NSPoint(x: 10, y: 23.47), controlPoint1: NSPoint(x: 11.5, y: 22.8), controlPoint2: NSPoint(x: 10.83, y: 23.47))
        pathPath.curve(to: NSPoint(x: 8.5, y: 21.97), controlPoint1: NSPoint(x: 9.17, y: 23.47), controlPoint2: NSPoint(x: 8.5, y: 22.8))
        pathPath.curve(to: NSPoint(x: 10, y: 20.47), controlPoint1: NSPoint(x: 8.5, y: 21.14), controlPoint2: NSPoint(x: 9.17, y: 20.47))
        pathPath.line(to: NSPoint(x: 10, y: 20.47))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTagAdd(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 8, y: 9.97))
        pathPath.line(to: NSPoint(x: 8, y: 12.97))
        pathPath.line(to: NSPoint(x: 9, y: 12.97))
        pathPath.line(to: NSPoint(x: 9, y: 9.97))
        pathPath.line(to: NSPoint(x: 12, y: 9.97))
        pathPath.line(to: NSPoint(x: 12, y: 8.97))
        pathPath.line(to: NSPoint(x: 9, y: 8.97))
        pathPath.line(to: NSPoint(x: 9, y: 5.97))
        pathPath.line(to: NSPoint(x: 8, y: 5.97))
        pathPath.line(to: NSPoint(x: 8, y: 8.97))
        pathPath.line(to: NSPoint(x: 5, y: 8.97))
        pathPath.line(to: NSPoint(x: 5, y: 9.97))
        pathPath.line(to: NSPoint(x: 8, y: 9.97))
        pathPath.line(to: NSPoint(x: 8, y: 9.97))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.74, y: 14.23))
        pathPath.line(to: NSPoint(x: 3, y: 16.97))
        pathPath.line(to: NSPoint(x: 3, y: 24.97))
        pathPath.curve(to: NSPoint(x: 5, y: 26.97), controlPoint1: NSPoint(x: 3, y: 26.08), controlPoint2: NSPoint(x: 3.9, y: 26.97))
        pathPath.line(to: NSPoint(x: 13, y: 26.97))
        pathPath.line(to: NSPoint(x: 26.38, y: 13.59))
        pathPath.curve(to: NSPoint(x: 26.39, y: 10.76), controlPoint1: NSPoint(x: 27.16, y: 12.81), controlPoint2: NSPoint(x: 27.17, y: 11.54))
        pathPath.line(to: NSPoint(x: 19.21, y: 3.58))
        pathPath.curve(to: NSPoint(x: 16.38, y: 3.59), controlPoint1: NSPoint(x: 18.43, y: 2.8), controlPoint2: NSPoint(x: 17.16, y: 2.81))
        pathPath.line(to: NSPoint(x: 13.26, y: 6.71))
        pathPath.curve(to: NSPoint(x: 8.5, y: 3.97), controlPoint1: NSPoint(x: 12.31, y: 5.07), controlPoint2: NSPoint(x: 10.53, y: 3.97))
        pathPath.curve(to: NSPoint(x: 3, y: 9.47), controlPoint1: NSPoint(x: 5.46, y: 3.97), controlPoint2: NSPoint(x: 3, y: 6.43))
        pathPath.curve(to: NSPoint(x: 5.74, y: 14.23), controlPoint1: NSPoint(x: 3, y: 11.5), controlPoint2: NSPoint(x: 4.1, y: 13.28))
        pathPath.line(to: NSPoint(x: 5.74, y: 14.23))
        pathPath.line(to: NSPoint(x: 5.74, y: 14.23))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.76, y: 14.69))
        pathPath.line(to: NSPoint(x: 4, y: 17.47))
        pathPath.line(to: NSPoint(x: 4, y: 24.96))
        pathPath.curve(to: NSPoint(x: 5.01, y: 25.97), controlPoint1: NSPoint(x: 4, y: 25.51), controlPoint2: NSPoint(x: 4.45, y: 25.97))
        pathPath.line(to: NSPoint(x: 12.5, y: 25.97))
        pathPath.line(to: NSPoint(x: 25.66, y: 12.92))
        pathPath.curve(to: NSPoint(x: 25.67, y: 11.51), controlPoint1: NSPoint(x: 26.05, y: 12.53), controlPoint2: NSPoint(x: 26.06, y: 11.9))
        pathPath.line(to: NSPoint(x: 18.5, y: 4.3))
        pathPath.curve(to: NSPoint(x: 17.1, y: 4.3), controlPoint1: NSPoint(x: 18.12, y: 3.91), controlPoint2: NSPoint(x: 17.49, y: 3.91))
        pathPath.line(to: NSPoint(x: 13.71, y: 7.71))
        pathPath.curve(to: NSPoint(x: 14, y: 9.47), controlPoint1: NSPoint(x: 13.9, y: 8.26), controlPoint2: NSPoint(x: 14, y: 8.85))
        pathPath.curve(to: NSPoint(x: 8.5, y: 14.97), controlPoint1: NSPoint(x: 14, y: 12.51), controlPoint2: NSPoint(x: 11.54, y: 14.97))
        pathPath.curve(to: NSPoint(x: 6.76, y: 14.69), controlPoint1: NSPoint(x: 7.89, y: 14.97), controlPoint2: NSPoint(x: 7.31, y: 14.87))
        pathPath.line(to: NSPoint(x: 6.76, y: 14.69))
        pathPath.line(to: NSPoint(x: 6.76, y: 14.69))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 18.97))
        pathPath.curve(to: NSPoint(x: 11, y: 21.47), controlPoint1: NSPoint(x: 9.88, y: 18.97), controlPoint2: NSPoint(x: 11, y: 20.09))
        pathPath.curve(to: NSPoint(x: 8.5, y: 23.97), controlPoint1: NSPoint(x: 11, y: 22.85), controlPoint2: NSPoint(x: 9.88, y: 23.97))
        pathPath.curve(to: NSPoint(x: 6, y: 21.47), controlPoint1: NSPoint(x: 7.12, y: 23.97), controlPoint2: NSPoint(x: 6, y: 22.85))
        pathPath.curve(to: NSPoint(x: 8.5, y: 18.97), controlPoint1: NSPoint(x: 6, y: 20.09), controlPoint2: NSPoint(x: 7.12, y: 18.97))
        pathPath.line(to: NSPoint(x: 8.5, y: 18.97))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 19.97))
        pathPath.curve(to: NSPoint(x: 10, y: 21.47), controlPoint1: NSPoint(x: 9.33, y: 19.97), controlPoint2: NSPoint(x: 10, y: 20.64))
        pathPath.curve(to: NSPoint(x: 8.5, y: 22.97), controlPoint1: NSPoint(x: 10, y: 22.3), controlPoint2: NSPoint(x: 9.33, y: 22.97))
        pathPath.curve(to: NSPoint(x: 7, y: 21.47), controlPoint1: NSPoint(x: 7.67, y: 22.97), controlPoint2: NSPoint(x: 7, y: 22.3))
        pathPath.curve(to: NSPoint(x: 8.5, y: 19.97), controlPoint1: NSPoint(x: 7, y: 20.64), controlPoint2: NSPoint(x: 7.67, y: 19.97))
        pathPath.line(to: NSPoint(x: 8.5, y: 19.97))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.5, y: 4.97))
        pathPath.curve(to: NSPoint(x: 13, y: 9.47), controlPoint1: NSPoint(x: 10.99, y: 4.97), controlPoint2: NSPoint(x: 13, y: 6.99))
        pathPath.curve(to: NSPoint(x: 8.5, y: 13.97), controlPoint1: NSPoint(x: 13, y: 11.96), controlPoint2: NSPoint(x: 10.99, y: 13.97))
        pathPath.curve(to: NSPoint(x: 4, y: 9.47), controlPoint1: NSPoint(x: 6.01, y: 13.97), controlPoint2: NSPoint(x: 4, y: 11.96))
        pathPath.curve(to: NSPoint(x: 8.5, y: 4.97), controlPoint1: NSPoint(x: 4, y: 6.99), controlPoint2: NSPoint(x: 6.01, y: 4.97))
        pathPath.line(to: NSPoint(x: 8.5, y: 4.97))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTagRemove(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 5.74, y: 14.24))
        pathPath.line(to: NSPoint(x: 3, y: 16.99))
        pathPath.line(to: NSPoint(x: 3, y: 25))
        pathPath.curve(to: NSPoint(x: 5, y: 27), controlPoint1: NSPoint(x: 3, y: 26.11), controlPoint2: NSPoint(x: 3.9, y: 27))
        pathPath.line(to: NSPoint(x: 13.01, y: 27))
        pathPath.line(to: NSPoint(x: 26.41, y: 13.6))
        pathPath.curve(to: NSPoint(x: 26.42, y: 10.77), controlPoint1: NSPoint(x: 27.19, y: 12.82), controlPoint2: NSPoint(x: 27.2, y: 11.55))
        pathPath.line(to: NSPoint(x: 19.23, y: 3.58))
        pathPath.curve(to: NSPoint(x: 16.4, y: 3.59), controlPoint1: NSPoint(x: 18.45, y: 2.8), controlPoint2: NSPoint(x: 17.18, y: 2.81))
        pathPath.line(to: NSPoint(x: 13.27, y: 6.72))
        pathPath.curve(to: NSPoint(x: 8.51, y: 3.97), controlPoint1: NSPoint(x: 12.32, y: 5.08), controlPoint2: NSPoint(x: 10.54, y: 3.97))
        pathPath.curve(to: NSPoint(x: 3, y: 9.48), controlPoint1: NSPoint(x: 5.47, y: 3.97), controlPoint2: NSPoint(x: 3, y: 6.44))
        pathPath.curve(to: NSPoint(x: 5.74, y: 14.24), controlPoint1: NSPoint(x: 3, y: 11.51), controlPoint2: NSPoint(x: 4.1, y: 13.29))
        pathPath.line(to: NSPoint(x: 5.74, y: 14.24))
        pathPath.line(to: NSPoint(x: 5.74, y: 14.24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.77, y: 14.71))
        pathPath.line(to: NSPoint(x: 4, y: 17.49))
        pathPath.line(to: NSPoint(x: 4, y: 24.99))
        pathPath.curve(to: NSPoint(x: 5.01, y: 26), controlPoint1: NSPoint(x: 4, y: 25.54), controlPoint2: NSPoint(x: 4.45, y: 26))
        pathPath.line(to: NSPoint(x: 12.51, y: 26))
        pathPath.line(to: NSPoint(x: 25.69, y: 12.93))
        pathPath.curve(to: NSPoint(x: 25.7, y: 11.52), controlPoint1: NSPoint(x: 26.08, y: 12.54), controlPoint2: NSPoint(x: 26.08, y: 11.91))
        pathPath.line(to: NSPoint(x: 18.52, y: 4.3))
        pathPath.curve(to: NSPoint(x: 17.12, y: 4.3), controlPoint1: NSPoint(x: 18.14, y: 3.91), controlPoint2: NSPoint(x: 17.51, y: 3.91))
        pathPath.line(to: NSPoint(x: 13.72, y: 7.71))
        pathPath.curve(to: NSPoint(x: 14.01, y: 9.48), controlPoint1: NSPoint(x: 13.91, y: 8.27), controlPoint2: NSPoint(x: 14.01, y: 8.86))
        pathPath.curve(to: NSPoint(x: 8.51, y: 14.99), controlPoint1: NSPoint(x: 14.01, y: 12.52), controlPoint2: NSPoint(x: 11.55, y: 14.99))
        pathPath.curve(to: NSPoint(x: 6.77, y: 14.71), controlPoint1: NSPoint(x: 7.9, y: 14.99), controlPoint2: NSPoint(x: 7.32, y: 14.89))
        pathPath.line(to: NSPoint(x: 6.77, y: 14.71))
        pathPath.line(to: NSPoint(x: 6.77, y: 14.71))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 18.99))
        pathPath.curve(to: NSPoint(x: 11.01, y: 21.49), controlPoint1: NSPoint(x: 9.89, y: 18.99), controlPoint2: NSPoint(x: 11.01, y: 20.11))
        pathPath.curve(to: NSPoint(x: 8.51, y: 24), controlPoint1: NSPoint(x: 11.01, y: 22.88), controlPoint2: NSPoint(x: 9.89, y: 24))
        pathPath.curve(to: NSPoint(x: 6, y: 21.49), controlPoint1: NSPoint(x: 7.12, y: 24), controlPoint2: NSPoint(x: 6, y: 22.88))
        pathPath.curve(to: NSPoint(x: 8.51, y: 18.99), controlPoint1: NSPoint(x: 6, y: 20.11), controlPoint2: NSPoint(x: 7.12, y: 18.99))
        pathPath.line(to: NSPoint(x: 8.51, y: 18.99))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 19.99))
        pathPath.curve(to: NSPoint(x: 10.01, y: 21.49), controlPoint1: NSPoint(x: 9.34, y: 19.99), controlPoint2: NSPoint(x: 10.01, y: 20.66))
        pathPath.curve(to: NSPoint(x: 8.51, y: 23), controlPoint1: NSPoint(x: 10.01, y: 22.32), controlPoint2: NSPoint(x: 9.34, y: 23))
        pathPath.curve(to: NSPoint(x: 7, y: 21.49), controlPoint1: NSPoint(x: 7.68, y: 23), controlPoint2: NSPoint(x: 7, y: 22.32))
        pathPath.curve(to: NSPoint(x: 8.51, y: 19.99), controlPoint1: NSPoint(x: 7, y: 20.66), controlPoint2: NSPoint(x: 7.68, y: 19.99))
        pathPath.line(to: NSPoint(x: 8.51, y: 19.99))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 4.97))
        pathPath.curve(to: NSPoint(x: 13.01, y: 9.48), controlPoint1: NSPoint(x: 11, y: 4.97), controlPoint2: NSPoint(x: 13.01, y: 6.99))
        pathPath.curve(to: NSPoint(x: 8.51, y: 13.98), controlPoint1: NSPoint(x: 13.01, y: 11.97), controlPoint2: NSPoint(x: 11, y: 13.98))
        pathPath.curve(to: NSPoint(x: 4, y: 9.48), controlPoint1: NSPoint(x: 6.02, y: 13.98), controlPoint2: NSPoint(x: 4, y: 11.97))
        pathPath.curve(to: NSPoint(x: 8.51, y: 4.97), controlPoint1: NSPoint(x: 4, y: 6.99), controlPoint2: NSPoint(x: 6.02, y: 4.97))
        pathPath.line(to: NSPoint(x: 8.51, y: 4.97))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5, y: 9.98))
        pathPath.line(to: NSPoint(x: 5, y: 8.98))
        pathPath.line(to: NSPoint(x: 12.01, y: 8.98))
        pathPath.line(to: NSPoint(x: 12.01, y: 9.98))
        pathPath.line(to: NSPoint(x: 5, y: 9.98))
        pathPath.line(to: NSPoint(x: 5, y: 9.98))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTagChecked(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 5.74, y: 14.24))
        pathPath.line(to: NSPoint(x: 3, y: 16.99))
        pathPath.line(to: NSPoint(x: 3, y: 25))
        pathPath.curve(to: NSPoint(x: 5, y: 27), controlPoint1: NSPoint(x: 3, y: 26.11), controlPoint2: NSPoint(x: 3.9, y: 27))
        pathPath.line(to: NSPoint(x: 13.01, y: 27))
        pathPath.line(to: NSPoint(x: 26.41, y: 13.6))
        pathPath.curve(to: NSPoint(x: 26.42, y: 10.77), controlPoint1: NSPoint(x: 27.19, y: 12.82), controlPoint2: NSPoint(x: 27.2, y: 11.55))
        pathPath.line(to: NSPoint(x: 19.23, y: 3.58))
        pathPath.curve(to: NSPoint(x: 16.4, y: 3.59), controlPoint1: NSPoint(x: 18.45, y: 2.8), controlPoint2: NSPoint(x: 17.18, y: 2.81))
        pathPath.line(to: NSPoint(x: 13.27, y: 6.72))
        pathPath.curve(to: NSPoint(x: 8.51, y: 3.97), controlPoint1: NSPoint(x: 12.32, y: 5.08), controlPoint2: NSPoint(x: 10.54, y: 3.97))
        pathPath.curve(to: NSPoint(x: 3, y: 9.48), controlPoint1: NSPoint(x: 5.47, y: 3.97), controlPoint2: NSPoint(x: 3, y: 6.44))
        pathPath.curve(to: NSPoint(x: 5.74, y: 14.24), controlPoint1: NSPoint(x: 3, y: 11.51), controlPoint2: NSPoint(x: 4.1, y: 13.29))
        pathPath.line(to: NSPoint(x: 5.74, y: 14.24))
        pathPath.line(to: NSPoint(x: 5.74, y: 14.24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.77, y: 14.71))
        pathPath.line(to: NSPoint(x: 4, y: 17.49))
        pathPath.line(to: NSPoint(x: 4, y: 24.99))
        pathPath.curve(to: NSPoint(x: 5.01, y: 26), controlPoint1: NSPoint(x: 4, y: 25.54), controlPoint2: NSPoint(x: 4.45, y: 26))
        pathPath.line(to: NSPoint(x: 12.51, y: 26))
        pathPath.line(to: NSPoint(x: 25.69, y: 12.93))
        pathPath.curve(to: NSPoint(x: 25.7, y: 11.52), controlPoint1: NSPoint(x: 26.08, y: 12.54), controlPoint2: NSPoint(x: 26.08, y: 11.91))
        pathPath.line(to: NSPoint(x: 18.52, y: 4.3))
        pathPath.curve(to: NSPoint(x: 17.12, y: 4.3), controlPoint1: NSPoint(x: 18.14, y: 3.91), controlPoint2: NSPoint(x: 17.51, y: 3.91))
        pathPath.line(to: NSPoint(x: 13.72, y: 7.71))
        pathPath.curve(to: NSPoint(x: 14.01, y: 9.48), controlPoint1: NSPoint(x: 13.91, y: 8.27), controlPoint2: NSPoint(x: 14.01, y: 8.86))
        pathPath.curve(to: NSPoint(x: 8.51, y: 14.99), controlPoint1: NSPoint(x: 14.01, y: 12.52), controlPoint2: NSPoint(x: 11.55, y: 14.99))
        pathPath.curve(to: NSPoint(x: 6.77, y: 14.71), controlPoint1: NSPoint(x: 7.9, y: 14.99), controlPoint2: NSPoint(x: 7.32, y: 14.89))
        pathPath.line(to: NSPoint(x: 6.77, y: 14.71))
        pathPath.line(to: NSPoint(x: 6.77, y: 14.71))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 18.99))
        pathPath.curve(to: NSPoint(x: 11.01, y: 21.49), controlPoint1: NSPoint(x: 9.89, y: 18.99), controlPoint2: NSPoint(x: 11.01, y: 20.11))
        pathPath.curve(to: NSPoint(x: 8.51, y: 24), controlPoint1: NSPoint(x: 11.01, y: 22.88), controlPoint2: NSPoint(x: 9.89, y: 24))
        pathPath.curve(to: NSPoint(x: 6, y: 21.49), controlPoint1: NSPoint(x: 7.12, y: 24), controlPoint2: NSPoint(x: 6, y: 22.88))
        pathPath.curve(to: NSPoint(x: 8.51, y: 18.99), controlPoint1: NSPoint(x: 6, y: 20.11), controlPoint2: NSPoint(x: 7.12, y: 18.99))
        pathPath.line(to: NSPoint(x: 8.51, y: 18.99))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 19.99))
        pathPath.curve(to: NSPoint(x: 10.01, y: 21.49), controlPoint1: NSPoint(x: 9.34, y: 19.99), controlPoint2: NSPoint(x: 10.01, y: 20.66))
        pathPath.curve(to: NSPoint(x: 8.51, y: 23), controlPoint1: NSPoint(x: 10.01, y: 22.32), controlPoint2: NSPoint(x: 9.34, y: 23))
        pathPath.curve(to: NSPoint(x: 7, y: 21.49), controlPoint1: NSPoint(x: 7.68, y: 23), controlPoint2: NSPoint(x: 7, y: 22.32))
        pathPath.curve(to: NSPoint(x: 8.51, y: 19.99), controlPoint1: NSPoint(x: 7, y: 20.66), controlPoint2: NSPoint(x: 7.68, y: 19.99))
        pathPath.line(to: NSPoint(x: 8.51, y: 19.99))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 4.97))
        pathPath.curve(to: NSPoint(x: 13.01, y: 9.48), controlPoint1: NSPoint(x: 11, y: 4.97), controlPoint2: NSPoint(x: 13.01, y: 6.99))
        pathPath.curve(to: NSPoint(x: 8.51, y: 13.98), controlPoint1: NSPoint(x: 13.01, y: 11.97), controlPoint2: NSPoint(x: 11, y: 13.98))
        pathPath.curve(to: NSPoint(x: 4, y: 9.48), controlPoint1: NSPoint(x: 6.02, y: 13.98), controlPoint2: NSPoint(x: 4, y: 11.97))
        pathPath.curve(to: NSPoint(x: 8.51, y: 4.97), controlPoint1: NSPoint(x: 4, y: 6.99), controlPoint2: NSPoint(x: 6.02, y: 4.97))
        pathPath.line(to: NSPoint(x: 8.51, y: 4.97))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.01, y: 6.73))
        pathPath.line(to: NSPoint(x: 5.65, y: 9.09))
        pathPath.line(to: NSPoint(x: 6.38, y: 9.82))
        pathPath.line(to: NSPoint(x: 8.01, y: 8.2))
        pathPath.line(to: NSPoint(x: 11.13, y: 11.32))
        pathPath.line(to: NSPoint(x: 11.86, y: 10.59))
        pathPath.line(to: NSPoint(x: 8.01, y: 6.73))
        pathPath.line(to: NSPoint(x: 8.01, y: 6.73))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawTagCancel(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 8.51, y: 8.77))
        pathPath.line(to: NSPoint(x: 6.38, y: 6.65))
        pathPath.line(to: NSPoint(x: 5.67, y: 7.35))
        pathPath.line(to: NSPoint(x: 7.8, y: 9.48))
        pathPath.line(to: NSPoint(x: 5.67, y: 11.6))
        pathPath.line(to: NSPoint(x: 6.38, y: 12.31))
        pathPath.line(to: NSPoint(x: 8.51, y: 10.19))
        pathPath.line(to: NSPoint(x: 10.63, y: 12.31))
        pathPath.line(to: NSPoint(x: 11.34, y: 11.6))
        pathPath.line(to: NSPoint(x: 9.21, y: 9.48))
        pathPath.line(to: NSPoint(x: 11.34, y: 7.35))
        pathPath.line(to: NSPoint(x: 10.63, y: 6.65))
        pathPath.line(to: NSPoint(x: 8.51, y: 8.77))
        pathPath.line(to: NSPoint(x: 8.51, y: 8.77))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 5.74, y: 14.24))
        pathPath.line(to: NSPoint(x: 3, y: 16.99))
        pathPath.line(to: NSPoint(x: 3, y: 25))
        pathPath.curve(to: NSPoint(x: 5, y: 27), controlPoint1: NSPoint(x: 3, y: 26.11), controlPoint2: NSPoint(x: 3.9, y: 27))
        pathPath.line(to: NSPoint(x: 13.01, y: 27))
        pathPath.line(to: NSPoint(x: 26.41, y: 13.6))
        pathPath.curve(to: NSPoint(x: 26.42, y: 10.77), controlPoint1: NSPoint(x: 27.19, y: 12.82), controlPoint2: NSPoint(x: 27.2, y: 11.55))
        pathPath.line(to: NSPoint(x: 19.23, y: 3.58))
        pathPath.curve(to: NSPoint(x: 16.4, y: 3.59), controlPoint1: NSPoint(x: 18.45, y: 2.8), controlPoint2: NSPoint(x: 17.18, y: 2.81))
        pathPath.line(to: NSPoint(x: 13.27, y: 6.72))
        pathPath.curve(to: NSPoint(x: 8.51, y: 3.97), controlPoint1: NSPoint(x: 12.32, y: 5.08), controlPoint2: NSPoint(x: 10.54, y: 3.97))
        pathPath.curve(to: NSPoint(x: 3, y: 9.48), controlPoint1: NSPoint(x: 5.47, y: 3.97), controlPoint2: NSPoint(x: 3, y: 6.44))
        pathPath.curve(to: NSPoint(x: 5.74, y: 14.24), controlPoint1: NSPoint(x: 3, y: 11.51), controlPoint2: NSPoint(x: 4.1, y: 13.29))
        pathPath.line(to: NSPoint(x: 5.74, y: 14.24))
        pathPath.line(to: NSPoint(x: 5.74, y: 14.24))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 6.77, y: 14.71))
        pathPath.line(to: NSPoint(x: 4, y: 17.49))
        pathPath.line(to: NSPoint(x: 4, y: 24.99))
        pathPath.curve(to: NSPoint(x: 5.01, y: 26), controlPoint1: NSPoint(x: 4, y: 25.54), controlPoint2: NSPoint(x: 4.45, y: 26))
        pathPath.line(to: NSPoint(x: 12.51, y: 26))
        pathPath.line(to: NSPoint(x: 25.69, y: 12.93))
        pathPath.curve(to: NSPoint(x: 25.7, y: 11.52), controlPoint1: NSPoint(x: 26.08, y: 12.54), controlPoint2: NSPoint(x: 26.08, y: 11.91))
        pathPath.line(to: NSPoint(x: 18.52, y: 4.3))
        pathPath.curve(to: NSPoint(x: 17.12, y: 4.3), controlPoint1: NSPoint(x: 18.14, y: 3.91), controlPoint2: NSPoint(x: 17.51, y: 3.91))
        pathPath.line(to: NSPoint(x: 13.72, y: 7.71))
        pathPath.curve(to: NSPoint(x: 14.01, y: 9.48), controlPoint1: NSPoint(x: 13.91, y: 8.27), controlPoint2: NSPoint(x: 14.01, y: 8.86))
        pathPath.curve(to: NSPoint(x: 8.51, y: 14.99), controlPoint1: NSPoint(x: 14.01, y: 12.52), controlPoint2: NSPoint(x: 11.55, y: 14.99))
        pathPath.curve(to: NSPoint(x: 6.77, y: 14.71), controlPoint1: NSPoint(x: 7.9, y: 14.99), controlPoint2: NSPoint(x: 7.32, y: 14.89))
        pathPath.line(to: NSPoint(x: 6.77, y: 14.71))
        pathPath.line(to: NSPoint(x: 6.77, y: 14.71))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 18.99))
        pathPath.curve(to: NSPoint(x: 11.01, y: 21.49), controlPoint1: NSPoint(x: 9.89, y: 18.99), controlPoint2: NSPoint(x: 11.01, y: 20.11))
        pathPath.curve(to: NSPoint(x: 8.51, y: 24), controlPoint1: NSPoint(x: 11.01, y: 22.88), controlPoint2: NSPoint(x: 9.89, y: 24))
        pathPath.curve(to: NSPoint(x: 6, y: 21.49), controlPoint1: NSPoint(x: 7.12, y: 24), controlPoint2: NSPoint(x: 6, y: 22.88))
        pathPath.curve(to: NSPoint(x: 8.51, y: 18.99), controlPoint1: NSPoint(x: 6, y: 20.11), controlPoint2: NSPoint(x: 7.12, y: 18.99))
        pathPath.line(to: NSPoint(x: 8.51, y: 18.99))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 19.99))
        pathPath.curve(to: NSPoint(x: 10.01, y: 21.49), controlPoint1: NSPoint(x: 9.34, y: 19.99), controlPoint2: NSPoint(x: 10.01, y: 20.66))
        pathPath.curve(to: NSPoint(x: 8.51, y: 23), controlPoint1: NSPoint(x: 10.01, y: 22.32), controlPoint2: NSPoint(x: 9.34, y: 23))
        pathPath.curve(to: NSPoint(x: 7, y: 21.49), controlPoint1: NSPoint(x: 7.68, y: 23), controlPoint2: NSPoint(x: 7, y: 22.32))
        pathPath.curve(to: NSPoint(x: 8.51, y: 19.99), controlPoint1: NSPoint(x: 7, y: 20.66), controlPoint2: NSPoint(x: 7.68, y: 19.99))
        pathPath.line(to: NSPoint(x: 8.51, y: 19.99))
        pathPath.close()
        pathPath.move(to: NSPoint(x: 8.51, y: 4.97))
        pathPath.curve(to: NSPoint(x: 13.01, y: 9.48), controlPoint1: NSPoint(x: 11, y: 4.97), controlPoint2: NSPoint(x: 13.01, y: 6.99))
        pathPath.curve(to: NSPoint(x: 8.51, y: 13.98), controlPoint1: NSPoint(x: 13.01, y: 11.97), controlPoint2: NSPoint(x: 11, y: 13.98))
        pathPath.curve(to: NSPoint(x: 4, y: 9.48), controlPoint1: NSPoint(x: 6.02, y: 13.98), controlPoint2: NSPoint(x: 4, y: 11.97))
        pathPath.curve(to: NSPoint(x: 8.51, y: 4.97), controlPoint1: NSPoint(x: 4, y: 6.99), controlPoint2: NSPoint(x: 6.02, y: 4.97))
        pathPath.line(to: NSPoint(x: 8.51, y: 4.97))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    public dynamic class func drawPaperclip(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 30, height: 30), resizing: ResizingBehavior = .aspectFit, fillColor: NSColor = NSColor(calibratedRed: 0.081, green: 0.394, blue: 0.979, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 30, height: 30), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 30, y: resizedFrame.height / 30)


        //// path Drawing
        let pathPath = NSBezierPath()
        pathPath.move(to: NSPoint(x: 21.72, y: 15.04))
        pathPath.line(to: NSPoint(x: 13.28, y: 6.64))
        pathPath.curve(to: NSPoint(x: 7.66, y: 6.65), controlPoint1: NSPoint(x: 11.73, y: 5.1), controlPoint2: NSPoint(x: 9.21, y: 5.1))
        pathPath.line(to: NSPoint(x: 7.66, y: 6.65))
        pathPath.curve(to: NSPoint(x: 7.66, y: 12.25), controlPoint1: NSPoint(x: 6.1, y: 8.19), controlPoint2: NSPoint(x: 6.1, y: 10.69))
        pathPath.line(to: NSPoint(x: 19.26, y: 23.78))
        pathPath.curve(to: NSPoint(x: 22.78, y: 23.79), controlPoint1: NSPoint(x: 20.23, y: 24.75), controlPoint2: NSPoint(x: 21.8, y: 24.76))
        pathPath.line(to: NSPoint(x: 22.78, y: 23.79))
        pathPath.curve(to: NSPoint(x: 22.78, y: 20.29), controlPoint1: NSPoint(x: 23.75, y: 22.82), controlPoint2: NSPoint(x: 23.75, y: 21.25))
        pathPath.line(to: NSPoint(x: 11.17, y: 8.74))
        pathPath.curve(to: NSPoint(x: 9.77, y: 8.75), controlPoint1: NSPoint(x: 10.78, y: 8.36), controlPoint2: NSPoint(x: 10.16, y: 8.36))
        pathPath.line(to: NSPoint(x: 9.77, y: 8.75))
        pathPath.curve(to: NSPoint(x: 9.77, y: 10.14), controlPoint1: NSPoint(x: 9.38, y: 9.13), controlPoint2: NSPoint(x: 9.38, y: 9.76))
        pathPath.line(to: NSPoint(x: 18.21, y: 18.54))
        pathPath.line(to: NSPoint(x: 17.5, y: 19.24))
        pathPath.line(to: NSPoint(x: 9.07, y: 10.85))
        pathPath.curve(to: NSPoint(x: 9.06, y: 8.05), controlPoint1: NSPoint(x: 8.29, y: 10.07), controlPoint2: NSPoint(x: 8.28, y: 8.82))
        pathPath.line(to: NSPoint(x: 9.06, y: 8.05))
        pathPath.curve(to: NSPoint(x: 11.87, y: 8.04), controlPoint1: NSPoint(x: 9.84, y: 7.27), controlPoint2: NSPoint(x: 11.1, y: 7.27))
        pathPath.line(to: NSPoint(x: 23.48, y: 19.59))
        pathPath.curve(to: NSPoint(x: 23.48, y: 24.49), controlPoint1: NSPoint(x: 24.84, y: 20.94), controlPoint2: NSPoint(x: 24.84, y: 23.14))
        pathPath.line(to: NSPoint(x: 23.48, y: 24.49))
        pathPath.curve(to: NSPoint(x: 18.56, y: 24.48), controlPoint1: NSPoint(x: 22.12, y: 25.84), controlPoint2: NSPoint(x: 19.92, y: 25.84))
        pathPath.line(to: NSPoint(x: 6.95, y: 12.94))
        pathPath.curve(to: NSPoint(x: 6.96, y: 5.95), controlPoint1: NSPoint(x: 5.01, y: 11.01), controlPoint2: NSPoint(x: 5.02, y: 7.88))
        pathPath.line(to: NSPoint(x: 6.96, y: 5.95))
        pathPath.curve(to: NSPoint(x: 13.99, y: 5.95), controlPoint1: NSPoint(x: 8.9, y: 4.02), controlPoint2: NSPoint(x: 12.05, y: 4.02))
        pathPath.line(to: NSPoint(x: 22.43, y: 14.34))
        pathPath.line(to: NSPoint(x: 21.72, y: 15.04))
        pathPath.line(to: NSPoint(x: 21.72, y: 15.04))
        pathPath.close()
        pathPath.windingRule = .evenOddWindingRule
        fillColor.setFill()
        pathPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }




    @objc public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: NSRect, target: NSRect) -> NSRect {
            if rect == target || target == NSRect.zero {
                return rect
            }

            var scales = NSSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
