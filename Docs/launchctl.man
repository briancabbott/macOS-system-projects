
launchctl(1)              BSD General Commands Manual             launchctl(1)

NNAAMMEE
     llaauunncchhccttll -- Interfaces with launchd

SSYYNNOOPPSSIISS
     llaauunncchhccttll _s_u_b_c_o_m_m_a_n_d [_a_r_g_u_m_e_n_t_s _._._.]

DDEESSCCRRIIPPTTIIOONN
     llaauunncchhccttll interfaces with llaauunncchhdd to manage and inspect daemons, agents
     and XPC services.

SSUUBBCCOOMMMMAANNDDSS
     llaauunncchhccttll allows for detailed examination of llaauunncchhdd endpoints. A domain
     manages the execution policy for a collection of services.  A service may
     be thought of as a virtual process that is always available to be spawned
     in response to demand. Each service has a collection of endpoints, and
     sending a message to one of those endpoints will cause the service to
     launch on demand. Domains advertise these endpoints in a shared namespace
     and may be thought of as synonymous with Mach bootstrap subsets.

     Many subcommands in llaauunncchhccttll take a specifier which indicates the target
     domain or service for the subcommand. This specifier may take one of the
     following forms:

     _s_y_s_t_e_m_/_[_s_e_r_v_i_c_e_-_n_a_m_e_]
              Targets the system domain or a service within the system domain.
              The system domain manages the root Mach bootstrap and is consid-
              ered a privileged execution context. Anyone may read or query
              the system domain, but root privileges are required to make mod-
              ifications.

     _u_s_e_r_/_<_u_i_d_>_/_[_s_e_r_v_i_c_e_-_n_a_m_e_]
              Targets the user domain for the given UID or a service within
              that domain. A user domain may exist independently of a logged-
              in user. User domains do not exist on iOS.

     _l_o_g_i_n_/_<_a_s_i_d_>_/_[_s_e_r_v_i_c_e_-_n_a_m_e_]
              Targets a user-login domain or service within that domain. A
              user-login domain is created when the user logs in at the GUI
              and is identified by the audit session identifier associated
              with that login. If a user domain has an associated login
              domain, the pprriinntt subcommand will display the ASID of that login
              domain. User-login domains do not exist on iOS.

     _g_u_i_/_<_u_i_d_>_/_[_s_e_r_v_i_c_e_-_n_a_m_e_]
              Another form of the llooggiinn specifier. Rather than specifying a
              user-login domain by its ASID, this specifier targets the domain
              based on which user it is associated with and is generally more
              convenient.

              _N_o_t_e: GUI domains and user domains share many resources. For the
              purposes of the Mach bootstrap name lookups, they are "flat", so
              they share the same set of registered names. But they still have
              discrete sets of services. So when printing the user domain's
              contents, you may see many Mach bootstrap name registrations
              from services that exist in the GUI domain for that user, but
              you will not see the services themselves in that list.

     _p_i_d_/_<_p_i_d_>_/_[_s_e_r_v_i_c_e_-_n_a_m_e_]
              Targets the domain for the given PID or a service within that
              domain. Each process on the system will have a PID domain asso-
              ciated with it that consists of the XPC services visible to that
              process which can be reached with xpc_connection_create(3).

     For instance, when referring to a service with the identifier
     ccoomm..aappppllee..eexxaammppllee loaded into the GUI domain of a user with UID 501,
     ddoommaaiinn--ttaarrggeett is gguuii//550011//, sseerrvviiccee--nnaammee is ccoomm..aappppllee..eexxaammppllee, and
     sseerrvviiccee--ttaarrggeett is gguuii//550011//ccoomm..aappppllee..eexxaammppllee.

SSUUBBCCOOMMMMAANNDDSS
     _b_o_o_t_s_t_r_a_p | _b_o_o_t_o_u_t _d_o_m_a_i_n_-_t_a_r_g_e_t [_s_e_r_v_i_c_e_-_p_a_t_h _s_e_r_v_i_c_e_-_p_a_t_h_2 _._._.] |
              _s_e_r_v_i_c_e_-_t_a_r_g_e_t
              Bootstraps or removes domains and services. When service argu-
              ments are present, bootstraps and correspondingly removes their
              definitions into the domain.  Services may be specified as a
              series of paths or a service identifier.  Paths may point to XPC
              service bundles, launchd.plist(5) s, or a directories containing
              a collection of either. If there were one or more errors while
              bootstrapping or removing a collection of services, the problem-
              atic paths will be printed with the errors that occurred.

              If no paths or service target are specified, these commands can
              either bootstrap or remove a domain specified as a domain tar-
              get. Some domains will implicitly bootstrap pre-defined paths as
              part of their creation.

     _e_n_a_b_l_e | _d_i_s_a_b_l_e _s_e_r_v_i_c_e_-_t_a_r_g_e_t
              Enables or disables the service in the requested domain. Once a
              service is disabled, it cannot be loaded in the specified domain
              until it is once again enabled. This state persists across boots
              of the device. This subcommand may only target services within
              the system domain or user and user-login domains.

     _k_i_c_k_s_t_a_r_t [--kkpp] _s_e_r_v_i_c_e_-_t_a_r_g_e_t
              Instructs llaauunncchhdd to run the specified service immediately,
              regardless of its configured launch conditions.

              --kk       If the service is already running, kill the running
                       instance before restarting the service.

              --pp       Upon success, print the PID of the new process or the
                       already-running process to stdout.

     _a_t_t_a_c_h [--kkssxx] _s_e_r_v_i_c_e_-_t_a_r_g_e_t
              Attaches the system's debugger to the process currently backing
              the specified service. By default, if the service is not run-
              ning, this subcommand will block until the service starts.

              --kk       If the service is already running, kill the running
                       instance.

              --ss       Force the service to start.

              --xx       Attach to xpcproxy(3) before it execs and becomes the
                       service process. This flag is generally not useful for
                       anyone but the llaauunncchhdd maintainer.

     _d_e_b_u_g _s_e_r_v_i_c_e_-_t_a_r_g_e_t [_-_-_p_r_o_g_r_a_m _<_p_r_o_g_r_a_m _p_a_t_h_>] [_-_-_g_u_a_r_d_-_m_a_l_l_o_c]
              [_-_-_m_a_l_l_o_c_-_s_t_a_c_k_-_l_o_g_g_i_n_g] [_-_-_d_e_b_u_g_-_l_i_b_r_a_r_i_e_s]
              [_-_-_i_n_t_r_o_s_p_e_c_t_i_o_n_-_l_i_b_r_a_r_i_e_s] [_-_-_N_S_Z_o_m_b_i_e] [_-_-_3_2] [_-_-_s_t_d_i_n]
              [_-_-_s_t_d_o_u_t] [_-_-_s_t_d_e_r_r] [_-_-_e_n_v_i_r_o_n_m_e_n_t] [_-_-] [_a_r_g_v_0 _a_r_g_v_1 _a_r_g_v_2
              _._._.]
              Configures the next invocation of a service for debugging. This
              subcommand allows you to temporarily replace the main executable
              of the service with one at a different path, enable
              libgmalloc(3), set environment variables, set the argument vec-
              tor and more. This is a convenient alternative to editing the
              launchd.plist(5) for the service and then reloading it, as the
              additional debugging properties are cleared once the service has
              run once with them.

              _-_-_p_r_o_g_r_a_m _<_p_r_o_g_r_a_m_-_p_a_t_h_>
                       Instructs launchd(8) to use _p_r_o_g_r_a_m_-_p_a_t_h _a_s _t_h_e
                       _s_e_r_v_i_c_e_'_s _e_x_e_c_u_t_a_b_l_e_.

              _-_-_g_u_a_r_d_-_m_a_l_l_o_c
                       Turns on libgmalloc(3) for the service.

              _-_-_m_a_l_l_o_c_-_s_t_a_c_k_-_l_o_g_g_i_n_g
                       Turns on malloc(3) stack logging for the service.

              _-_-_m_a_l_l_o_c_-_n_a_n_o_-_a_l_l_o_c_a_t_o_r
                       Turns on the malloc(3) nano allocator for the service.

              _-_-_d_e_b_u_g_-_l_i_b_r_a_r_i_e_s
                       Sets the _D_Y_L_D___I_M_A_G_E___S_U_F_F_I_X for the service to "_debug",
                       which prefers the debug variants of libraries if they
                       exist. See dyld(1) for more information.

              _-_-_i_n_t_r_o_s_p_e_c_t_i_o_n_-_l_i_b_r_a_r_i_e_s
                       Adds _/_u_s_r_/_l_i_b_/_s_y_s_t_e_m_/_i_n_t_r_o_s_p_e_c_t_i_o_n to the
                       _D_Y_L_D___L_I_B_R_A_R_Y___P_A_T_H environment variable for the service.
                       This causes the system to prefer the introspection
                       variants of libraries if they exist.

              _-_-_N_S_Z_o_m_b_i_e
                       Enables NSZombie.

              _-_-_3_2     Runs the service in the appropriate 32-bit architec-
                       ture. Only available on 64-bit platforms.

              _-_-_s_t_d_i_n _[_s_t_d_i_n_-_p_a_t_h_]
                       Sets the service's standard input to be _s_t_d_i_n_-_p_a_t_h.  If
                       no file is given, uses the current terminal as the ser-
                       vice's standard input. If _s_t_d_i_n_-_p_a_t_h does not exist, it
                       is created.

              _-_-_s_t_d_o_u_t _[_s_t_d_o_u_t_-_p_a_t_h_]
                       Sets the service's standard input to be _s_t_d_o_u_t_-_p_a_t_h.
                       If no file is given, uses the current terminal as the
                       service's standard input. If _s_t_d_o_u_t_-_p_a_t_h does not
                       exist, it is created.

              _-_-_s_t_d_e_r_r _[_s_t_d_e_r_r_-_p_a_t_h_]
                       Sets the service's standard input to be _s_t_d_e_r_r_-_p_a_t_h.
                       If no file is given, uses the current terminal as the
                       service's standard input. If _s_t_d_e_r_r_-_p_a_t_h does not
                       exist, it is created.

              _-_-_e_n_v_i_r_o_n_m_e_n_t _V_A_R_I_A_B_L_E_0_=_v_a_l_u_e _V_A_R_I_A_B_L_E_1_=_v_a_l_u_e _._._.
                       Sets the given environment variables on the service.

              _-_- _a_r_g_v_0 _a_r_g_v_1 _._._.
                       Any arguments following the _-_- are given to the service
                       as its argument vector.

                       _I_M_P_O_R_T_A_N_T: These arguments replace the service's
                       default argument vector; they are not merged in any
                       way. The first argument following _-_- is given as the
                       initial (zeroth) element of the service's argument vec-
                       tor. As with the _P_r_o_g_r_a_m_A_r_g_u_m_e_n_t_s launchd.plist(5) key,
                       you should read carefully and understand the execve(2)
                       man page.

     _k_i_l_l _s_i_g_n_a_l_-_n_a_m_e | _s_i_g_n_a_l_-_n_u_m_b_e_r _s_e_r_v_i_c_e_-_t_a_r_g_e_t
              Sends the specified signal to the specified service if it is
              running. The signal number or name (SIGTERM, SIGKILL, etc.) may
              be specified.

     _b_l_a_m_e _s_e_r_v_i_c_e_-_t_a_r_g_e_t
              If the service is running, prints a human-readable string
              describing why llaauunncchhdd launched the service. Note that services
              may run for many reasons; this subcommand will only show the
              most proximate reason. So if a service was run due to a timer
              firing, this subcommand will print that reason, irrespective of
              whether there were messages waiting on the service's various
              endpoints. This subcommand is only intended for debugging and
              profiling use and its output should not be relied upon in pro-
              duction scenarios.

     _p_r_i_n_t _d_o_m_a_i_n_-_t_a_r_g_e_t | _s_e_r_v_i_c_e_-_t_a_r_g_e_t
              Prints information about the specified service or domain. Domain
              output includes various properties about the domain as well as a
              list of services and endpoints in the domain with state pertain-
              ing to each. Service output includes various properties of the
              service, including information about its origin on-disk, its
              current state, execution context, and last exit status.

              _I_M_P_O_R_T_A_N_T: This output is _N_O_T API in any sense at all. Do _N_O_T
              rely on the structure or information emitted for _A_N_Y reason. It
              may change from release to release without warning.

     _p_r_i_n_t_-_c_a_c_h_e
              Prints the contents of the llaauunncchhdd service cache.

     _p_r_i_n_t_-_d_i_s_a_b_l_e_d _d_o_m_a_i_n_-_t_a_r_g_e_t
              Prints the list of disabled services in the specified domain.

     _p_l_i_s_t [_s_e_g_m_e_n_t_,_s_e_c_t_i_o_n] _M_a_c_h_-_O
              Prints the the property list embedded in the __TEXT,__info_plist
              segment/section of the target Mach-O or the specified seg-
              ment/section.

     _p_r_o_c_i_n_f_o _p_i_d
              Prints information about the execution context of the specified
              PID. This information includes Mach task-special ports and
              exception ports (and when run against a DEVELOPMENT launchd,
              what names the ports are advertised as in the Mach bootstrap
              namespace, if they are known to llaauunncchhdd) and audit session con-
              text. This subcommand is intended for diagnostic purposes only,
              and its output should not be relied upon in production scenar-
              ios. This command requires root privileges.

     _h_o_s_t_i_n_f_o
              Prints information about the system's host-special ports,
              including the host-exception port. This subcommand requires root
              privileges.

     _r_e_s_o_l_v_e_p_o_r_t _o_w_n_e_r_-_p_i_d _p_o_r_t_-_n_a_m_e
              Given a PID and the name of a Mach port right in that process'
              port namespace, resolves that port to an endpoint name known to
              llaauunncchhdd.  This subcommand requires root privileges.

     _e_x_a_m_i_n_e [_t_o_o_l _a_r_g_0 _a_r_g_1 _@_P_I_D _._._.]
              Causes llaauunncchhdd to fork(2) itself for examination by a profiling
              tool and prints the PID of this new instance to stdout. You are
              responsible for killing this snapshot when it is no longer
              needed.

              Many profiling tools cannot safely examine llaauunncchhdd because they
              depend on the functionality it provides. This subcommand creates
              an effective snapshot of llaauunncchhdd that can be examined indepen-
              dently. Note that on Darwin platforms, fork(2) is implemented
              such that only the thread which called fork(2) is replicated
              into the new child process, so this subcommand is not useful for
              examining any thread other than the main event loop.

              This subcommand takes an optional invocation of a tool to be
              used on the llaauunncchhdd snapshot. Where you would normally give the
              PID of the process to be examined in the tool's invocation,
              instead specify the argument "@PID", and llaauunncchhccttll will substi-
              tute that argument with the PID of the launchd snapshot in its
              subsequent execution of the tool. If used in this form,
              llaauunncchhccttll will automatically kill the snapshot instance when the
              examination tool exits.

              This subcommand may only be used against a DEVELOPMENT llaauunncchhdd.

     _c_o_n_f_i_g _s_y_s_t_e_m | _u_s_e_r _p_a_r_a_m_e_t_e_r _v_a_l_u_e
              Sets persistent configuration information for launchd(8)
              domains. Only the system domain and user domains may be config-
              ured. The location of the persistent storage is an implementa-
              tion detail, and changes to that storage should _o_n_l_y be made
              through this subcommand. A reboot is required for changes made
              through this subcommand to take effect.

              Supported configuration parameters are:

              umask    Sets the umask(2) for services within the target domain
                       to the value specified by _v_a_l_u_e.  Note that this value
                       is parsed by strtoul(3) as an octal-encoded number, so
                       there is no need to prefix it with a leading '0'.

              path     Sets the PATH environment variable for all services
                       within the target domain to the string _v_a_l_u_e.  The
                       string _v_a_l_u_e should conform to the format outlined for
                       the PATH environment variable in environ(7).  Note that
                       if a service specifies its own PATH, the service-spe-
                       cific environment variable will take precedence.

                       _N_O_T_E: This facility cannot be used to set general envi-
                       ronment variables for all services within the domain.
                       It is intentionally scoped to the PATH environment
                       variable and nothing else for security reasons.

     _r_e_b_o_o_t _[_s_y_s_t_e_m_|_u_s_e_r_s_p_a_c_e_|_h_a_l_t_|_l_o_g_o_u_t_|_a_p_p_s_]
              Instructs llaauunncchhdd to begin tearing down userspace. With no argu-
              ment given or with the _s_y_s_t_e_m argument given, llaauunncchhdd will make
              the reboot(2) system call when userspace has been completely
              torn down. With the _h_a_l_t argument given, llaauunncchhdd will make the
              reboot(2) system call when userspace has been completely torn
              down and pass the _R_B___H_A_L_T flag, halting the system and not ini-
              tiating a reboot.

              With the _u_s_e_r_s_p_a_c_e argument given, llaauunncchhdd will re-exec itself
              when userspace has been torn down and bring userspace back up.
              This is useful for rebooting the system quickly under conditions
              where kernel data structures or hardware do not need to be re-
              initialized.

              With the _l_o_g_o_u_t argument given, launchd will tear down the
              caller's GUI login session in a manner similar to a logout ini-
              tiated from the Apple menu. The key difference is that a logout
              initiated through this subcommand will be much faster since it
              will not give apps a chance to display modal dialogs to block
              logout indefinitely; therefore there is data corruption risk to
              using this option. Only use it when you know you have no unsaved
              data in your running apps.

              With the _a_p_p_s argument given, launchd will terminate all apps
              running in the caller's GUI login session that did not come from
              a launchd.plist(5) on-disk. Apps like Finder, Dock and Syste-
              mUIServer will be unaffected. Apps are terminated in the same
              manner as the _l_o_g_o_u_t argument, and all the same caveats apply.

              --ss       When rebooting the machine (either a full reboot or
                       userspace reboot), brings the subsequent boot session
                       up in single-user mode.

     _e_r_r_o_r _[_p_o_s_i_x_|_m_a_c_h_|_b_o_o_t_s_t_r_a_p_] _c_o_d_e
              Prints a human-readable string of the given error _c_o_d_e.  By
              default, llaauunncchhccttll will attempt to guess which error domain the
              code given belongs to. The caller may optionally specify which
              domain (either _p_o_s_i_x, _m_a_c_h, or _b_o_o_t_s_t_r_a_p) to interpret the given
              code as an error from that subsystem.

     _v_a_r_i_a_n_t  Prints the llaauunncchhdd variant currently active on the system. Pos-
              sible variants include RELEASE, DEVELOPMENT and DEBUG.

     _v_e_r_s_i_o_n  Prints the llaauunncchhdd version string.

LLEEGGAACCYY SSUUBBCCOOMMMMAANNDDSS
     Subcommands from the previous implementation of llaauunncchhdd are generally
     available, though some may be unimplemented. Unimplemented subcommands
     are documented as such.

     _l_o_a_d | _u_n_l_o_a_d [--wwFF] [--SS _s_e_s_s_i_o_n_t_y_p_e] [--DD _s_e_a_r_c_h_p_a_t_h] _p_a_t_h_s _._._.
              Load the specified configuration files or directories of config-
              uration files.  Jobs that are not on-demand will be started as
              soon as possible. All specified jobs will be loaded before any
              of them are allowed to start. Note that per-user configuration
              files (LaunchAgents) must be owned by root (if they are located
              in //LLiibbrraarryy//LLaauunncchhAAggeennttss) or the user loading them (if they are
              located in $$HHOOMMEE//LLiibbrraarryy//LLaauunncchhAAggeennttss).  All system-wide daemons
              (LaunchDaemons) must be owned by root. Configuration files must
              disallow group and world writes. These restrictions are in place
              for security reasons, as allowing writability to a launchd con-
              figuration file allows one to specify which executable will be
              launched.

              Note that allowing non-root write access to the
              //SSyysstteemm//LLiibbrraarryy//LLaauunncchhDDaaeemmoonnss directory WILL render your system
              unbootable.

              --ww       Overrides the Disabled key and sets it to false or true
                       for the load and unload subcommands respectively. In
                       previous versions, this option would modify the config-
                       uration file. Now the state of the Disabled key is
                       stored elsewhere on- disk in a location that may not be
                       directly manipulated by any process other than llaauunncchhdd.

              --FF       Force the loading or unloading of the plist. Ignore the
                       Disabled key.

              --SS _s_e_s_s_i_o_n_t_y_p_e
                       Some jobs only make sense in certain contexts. This
                       flag instructs llaauunncchhccttll to look for jobs in a differ-
                       ent location when using the -D flag, and allows
                       llaauunncchhccttll to restrict which jobs are loaded into which
                       session types. Sessions are only relevant for per-user
                       llaauunncchhdd contexts. Relevant sessions are Aqua (the
                       default), Background and LoginWindow.  Background
                       agents may be loaded independently of a GUI login. Aqua
                       agents are loaded only when a user has logged in at the
                       GUI. LoginWindow agents are loaded when the LoginWindow
                       UI is displaying and currently run as root.

              --DD _s_e_a_r_c_h_p_a_t_h
                       Load or unload all plist(5) files in the search path
                       given. This option may be thought of as expanding into
                       many individual paths depending on the search path
                       given. Valid search paths include "system," "local,"
                       and "all." When providing a session type, an additional
                       search path is available for use called "user." For
                       example, without a session type given, "-D system"
                       would load from or unload all property list files from
                       //SSyysstteemm//LLiibbrraarryy//LLaauunncchhDDaaeemmoonnss.  With a session type
                       passed, it would load from
                       //SSyysstteemm//LLiibbrraarryy//LLaauunncchhAAggeennttss.  Note that llaauunncchhccttll no
                       longer respects the network search path.

                       In a previous version of launchd, these search paths
                       were called "domains", hence -D. The word "domain" is
                       now used for a totally different concept.

              _N_O_T_E: Due to bugs in the previous implementation and long-stand-
              ing client expectations around those bugs, the _l_o_a_d and _u_n_l_o_a_d
              subcommands will only return a non-zero exit code due to
              improper usage.  Otherwise, zero is always returned.

     _s_u_b_m_i_t --ll _l_a_b_e_l [--pp _e_x_e_c_u_t_a_b_l_e] [--oo _s_t_d_o_u_t_-_p_a_t_h] [--ee _s_t_d_e_r_r_-_p_a_t_h] _-_-
              _c_o_m_m_a_n_d [_a_r_g_0] [_a_r_g_1] [_._._.]
              A simple way of submitting a program to run without a configura-
              tion file. This mechanism also tells launchd to keep the program
              alive in the event of failure.

              --ll _l_a_b_e_l
                       What unique label to assign this job to launchd.

              --pp _p_r_o_g_r_a_m
                       What program to really execute, regardless of what fol-
                       lows the -- in the submit sub-command.

              --oo _s_t_d_o_u_t_-_p_a_t_h
                       Where to send the stdout of the program.

              --ee _s_t_d_e_r_r_-_p_a_t_h
                       Where to send the stderr of the program.

     _r_e_m_o_v_e _l_a_b_e_l
              Remove the job from launchd by label. This subcommand will
              return immediately and not block until the job has been stopped.

     _s_t_a_r_t _l_a_b_e_l
              Start the specified job by label. The expected use of this sub-
              command is for debugging and testing so that one can manually
              kick-start an on-demand server.

     _s_t_o_p _l_a_b_e_l
              Stop the specified job by label. If a job is on-demand, launchd
              may immediately restart the job if launchd finds any criteria
              that is satisfied.

     _l_i_s_t [_-_x] [_l_a_b_e_l]
              With no arguments, list all of the jobs loaded into llaauunncchhdd in
              three columns. The first column displays the PID of the job if
              it is running.  The second column displays the last exit status
              of the job. If the number in this column is negative, it repre-
              sents the negative of the signal which stopped the job. Thus,
              "-15" would indicate that the job was terminated with SIGTERM.
              The third column is the job's label. If [_l_a_b_e_l] is specified,
              prints information about the requested job.

              --xx       This flag is no longer supported.

     _s_e_t_e_n_v _k_e_y _v_a_l_u_e
              Specify an environment variable to be set on all future pro-
              cesses launched by llaauunncchhdd in the caller's context.

     _u_n_s_e_t_e_n_v _k_e_y
              Specify that an environment variable no longer be set on any
              future processes launched by llaauunncchhdd in the caller's context.

     _g_e_t_e_n_v _k_e_y
              Print the value of an environment variable that llaauunncchhdd would
              set for all processes launched into the caller's context.

     _e_x_p_o_r_t   Export all of the environment variables of llaauunncchhdd for use in a
              shell eval statement.

     _g_e_t_r_u_s_a_g_e _s_e_l_f | _c_h_i_l_d_r_e_n
              Get the resource utilization statistics for llaauunncchhdd or the chil-
              dren of llaauunncchhdd.  This subcommand is not implemented.

     _l_i_m_i_t [_c_p_u | _f_i_l_e_s_i_z_e | _d_a_t_a | _s_t_a_c_k | _c_o_r_e | _r_s_s | _m_e_m_l_o_c_k | _m_a_x_p_r_o_c |
              _m_a_x_f_i_l_e_s] [_b_o_t_h [_s_o_f_t | _h_a_r_d]]
              With no arguments, this command prints all the resource limits
              of llaauunncchhdd as found via getrlimit(2).  When a given resource is
              specified, it prints the limits for that resource. With a third
              argument, it sets both the hard and soft limits to that value.
              With four arguments, the third and forth argument represent the
              soft and hard limits respectively.  See setrlimit(2).

     _s_h_u_t_d_o_w_n
              Tell llaauunncchhdd to prepare for shutdown by removing all jobs. This
              subcommand is not implemented.

     _u_m_a_s_k [_n_e_w_m_a_s_k]
              Get or optionally set the umask(2) of llaauunncchhdd.  This subcommand
              is not implemented.

     _b_s_l_i_s_t [_P_I_D | _._.] [_-_j]
              This subcommand is not implemented and has been superseded by
              the _p_r_i_n_t subcommand, which provides much richer information.

     _b_s_e_x_e_c _P_I_D _c_o_m_m_a_n_d [_a_r_g_s]
              This executes the given command in as similar an execution con-
              text as possible to the target PID. Adopted attributes include
              the Mach bootstrap namespace, exception server and security
              audit session. It does not modify the process' credentials (UID,
              GID, etc.) or adopt any environment variables from the target
              process. It affects only the Mach bootstrap context and
              directly-related attributes.

     _a_s_u_s_e_r _U_I_D _c_o_m_m_a_n_d [_a_r_g_s]
              This executes the given command in as similar an execution con-
              text as possible to that of the target user's bootstrap. Adopted
              attributes include the Mach bootstrap namespace, exception
              server and security audit session. It does not modify the
              process' credentials (UID, GID, etc.) or adopt any user-specific
              environment variables. It affects only the Mach bootstrap con-
              text and directly- related attributes.

     _b_s_t_r_e_e   This subcommand is not implemented and has been superseded by
              the _p_r_i_n_t subcommand, which provides much richer information.

     _m_a_n_a_g_e_r_p_i_d
              This prints the PID of the launchd which manages the current
              bootstrap. In prior implementations, there could be multiple
              llaauunncchhdd processes each managing their own Mach bootstrap sub-
              sets. In the current implementation, all bootstraps are managed
              by one process, so this subcommand will always print "1".

     _m_a_n_a_g_e_r_u_i_d
              This prints the UID associated with the caller's launchd con-
              text.

     _m_a_n_a_g_e_r_n_a_m_e
              This prints the name of the launchd job manager which manages
              the current launchd context. See LimitLoadToSessionType in
              launchd.plist(5) for more details.

     _h_e_l_p     Print out a quick usage statement.

CCAAVVEEAATTSS
     The output produced by the "legacy" subcommands (chiefly _l_i_s_t) should
     match their output on previous OS X releases. However, the output of
     newer subcommands does not conform to any particular format and is not
     guaranteed to remain stable across releases. These commands are intended
     for use by human developers and system administrators, not for automation
     by programs or scripts. Their output does not constitute an API and no
     promises of forward compatibility are offered to programs that attempt to
     parse it.

DDEEPPRREECCAATTEEDD AANNDD RREEMMOOVVEEDD FFUUNNCCTTIIOONNAALLIITTYY
     llaauunncchhccttll no longer has an interactive mode, nor does it accept commands
     from stdin. The //eettcc//llaauunncchhdd..ccoonnff file is no longer consulted for subcom-
     mands to run during early boot time; this functionality was removed for
     security considerations. While it was documented that $$HHOOMMEE//..llaauunncchhdd..ccoonnff
     would be consulted prior to setting up a user's session, this functional-
     ity was never implemented.

     launchd no longer uses Unix domain sockets for communication, so the
     LLAAUUNNCCHHDD__SSOOCCKKEETT environment variable is no longer relevant and is not set.

     llaauunncchhdd no longer loads configuration files from the network

FFIILLEESS
     ~/Library/LaunchAgents         Per-user agents provided by the user.
     /Library/LaunchAgents          Per-user agents provided by the adminis-
                                    trator.
     /Library/LaunchDaemons         System wide daemons provided by the admin-
                                    istrator.
     /System/Library/LaunchAgents   OS X Per-user agents.
     /System/Library/LaunchDaemons  OS X System wide daemons.

EEXXIITT SSTTAATTUUSS
     llaauunncchhccttll will exit with status 0 if the subcommand succeeded. Otherwise,
     it will exit with an error code that can be given to the _e_r_r_o_r subcommand
     to be decoded into human-readable form.

SSEEEE AALLSSOO
     launchd.plist(5), launchd(8), audit(8), setaudit_addr(2)

Darwin                          1 October, 2014                         Darwin
